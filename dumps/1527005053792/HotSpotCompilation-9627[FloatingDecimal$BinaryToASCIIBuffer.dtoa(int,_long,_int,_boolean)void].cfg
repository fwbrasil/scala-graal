begin_compilation
  name " HotSpotCompilation-9627[sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)]"
  method "HotSpotCompilation-9627[sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)]"
  date 1527005209331
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v998 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v998  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Lsun/misc/FloatingDecimal$BinaryToASCIIBuffer;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?1491 v1606 ?1491 v1607 ?1490 ?28 v1629 ?1489 v1011 ?90 ?1488 ?1487 ?1486 ?1485 ?486 ?1484 ?167 ?884 v1616 ?239 v1627 ?555 v1239 ?636 v1628 ?514 ?650 ?1483 ?918 v1237 ?373 ?381 ?1476 ?594 ?907 ?636 ?443 ?1482 ?620 ?1481 ?1480 ?465 ?1479 ?1478 ?475 ?1477 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1606 <|@
d <@d|@=== Debug Properties ===
displacement: 26
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v998 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i1243 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:439) [bci: 59]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v998 v1001 v1211 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v998 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: FloatingDecimal$BinaryToASCIIBuffer.decimalDigitsRoundedUp
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:439) [bci: 59]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1606 
value: i1243 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1001 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1606 value: i1243 stateAfter: - lastLocationAccess: - #next: v1001  <|@  <|@
f <@~|@floating>@ <|@
tid v1607 <|@
d <@d|@=== Debug Properties ===
displacement: 25
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v1001 v1149 v1211 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1001 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: FloatingDecimal$BinaryToASCIIBuffer.exactDecimalConversion
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:440) [bci: 64]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1607 
value: i1243 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v22 
=== Usages ===
=== Predecessor ===
v998 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1607 value: i1243 stateAfter: - lastLocationAccess: - #next: v22  <|@  <|@
f <@~|@floating>@ <|@
tid a1503 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1506 v1552 v1544 v1536 v1526 v1516 ?465 ?475 ?486 ?555 ?620 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
d <@d|@=== Debug Properties ===
index: 4
stamp: i32 [0 - 1] ⇈0000000000000001
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?1484 ?1483 ?1482 ?28 ?90 ?1481 ?1480 ?1479 ?1478 ?486 ?1477 ?167 ?884 ?239 v241 ?1476 ?918 ?475 ?465 ?514 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i702 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:852) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v703 v1298 i458 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
i120 i69 ?90 ?28 v65 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i80 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:471) [bci: 143]
rawvalue: 52
stableDimension: 0
stamp: i32 [52] ⇊0000000000000034 ⇈0000000000000034
stampKind: i32
value: int[52|0x34]
=== Inputs ===
=== Succesors ===
=== Usages ===
v81 i83 i679 j741 v751 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i54 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 109]
rawvalue: 64
stableDimension: 0
stamp: i32 [64] ⇊0000000000000040 ⇈0000000000000040
stampKind: i32
value: int[64|0x40]
=== Inputs ===
=== Succesors ===
=== Usages ===
v55 v890 v189 v889 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a51 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 102]
rawvalue: int[27]{0, 3, 5, 7, 10, ...}
stableDimension: 0
stamp: a!# [I
stampKind: a -
value: Object[int[27]{0, 3, 5, 7, 10, ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1608 v1612 v1613 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:426) [bci: 3]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i977 i979 i948 v60 i78 v1011 i794 i796 v140 i798 v230 i974 ?239 ?239 v241 i78 i460 i78 i371 i546 v747 v302 i774 i328 i333 v336 v1158 i933 i371 i372 v382 v392 i423 i428 i450 ?1484 ?1483 v493 i494 ?1482 i500 v503 ?514 v1224 i525 i546 i547 v556 v565 v589 i590 i596 i947 i372 v637 i972 v1233 v651 v655 i547 i371 i372 i546 i547 i856 i932 i1585 ?29 ?381 ?381 ?555 ?555 ?636 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i45 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 96]
rawvalue: 27
stableDimension: 0
stamp: i32 [27] ⇊000000000000001b ⇈000000000000001b
stampKind: i32
value: int[27|0x1b]
=== Inputs ===
=== Succesors ===
=== Usages ===
v800 v801 v171 v1039 v1111 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
i107 i83 ?90 i16 ?28 v32 v37 v65 i69 v81 d734 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i31 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:444) [bci: 82]
rawvalue: 63
stableDimension: 0
stamp: i32 [63] ⇊000000000000003f ⇈000000000000003f
stampKind: i32
value: int[63|0x3f]
=== Inputs ===
=== Succesors ===
=== Usages ===
v32 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:444) [bci: 82]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i31 
=== Succesors ===
=== Usages ===
v35 v960 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i31  <|@  <|@
f <@~|@floating>@ <|@
tid i10 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:434) [bci: 50]
rawvalue: 53
stableDimension: 0
stamp: i32 [53] ⇊0000000000000035 ⇈0000000000000035
stampKind: i32
value: int[53|0x35]
=== Inputs ===
=== Succesors ===
=== Usages ===
i11 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i64
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
j725 i9 j84 ?90 ?28 j121 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.numberOfTrailingZeros(long) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:431) [bci: 45]
stamp: i32 [0 - 64] ⇈000000000000007f
=== Inputs ===
value: j3 
=== Succesors ===
=== Usages ===
i11 i679 j121 ?28 ?90 
=== Predecessor ===
- >@ <|@
instruction <@AMD64CountTrailingZeros|@org.graalvm.compiler.replacements.amd64.AMD64CountTrailingZerosNode>@ value: j3  <|@  <|@
f <@~|@floating>@ <|@
tid i11 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:434) [bci: 54]
stamp: i32 [-11 - 53]
=== Inputs ===
x: i10 
y: i9 
=== Succesors ===
=== Usages ===
i153 v130 i16 ?28 i53 ?90 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i10 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid i16 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 71]
stamp: i32
=== Inputs ===
x: i11 
y: i2 
=== Succesors ===
=== Usages ===
i18 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i11 y: i2  <|@  <|@
f <@~|@floating>@ <|@
tid i17 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 73]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i18 i70 i341 i134 i764 i774 i1586 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i18 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 73]
stamp: i32
=== Inputs ===
x: i16 
y: i17 
=== Succesors ===
=== Usages ===
v19 i947 i948 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i16 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid i7 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:426) [bci: 0]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v19 v95 v108 v130 i847 i169 i854 i857 i214 i220 ?239 ?443 j693 i827 i811 i459 i299 j317 j324 i328 i333 ?443 i933 j413 i423 i428 i377 i378 i438 j446 i450 i850 i478 i483 i494 v499 i500 i932 i525 i590 v595 i596 i599 v1212 i644 i681 v829 i1585 j689 i1631 i853 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 74]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i18 
y: i7 
=== Succesors ===
=== Usages ===
v22 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i18 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 74]
stamp: void
trueSuccessorProbability: 0.7309313881269885
=== Inputs ===
condition: v19 
=== Succesors ===
trueSuccessor: v20 
falseSuccessor: v21 
=== Usages ===
=== Predecessor ===
v1001 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v19 #trueSuccessor: v20 #falseSuccessor: v21  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4604758864199680626
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 5]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 74]
stamp: void
=== Inputs ===
=== Succesors ===
next: v960 
=== Usages ===
=== Predecessor ===
v22 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v960  <|@  <|@
f <@*|@fixed>@ <|@
tid v960 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:444) [bci: 82]
stamp: void
trueSuccessorProbability: 0.9998165784832451
=== Inputs ===
condition: v32 
=== Succesors ===
trueSuccessor: v958 
falseSuccessor: v959 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v32 #trueSuccessor: v958 #falseSuccessor: v959  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" 
    xhandlers
    flags 
    probability 4604757656617592340
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v958 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:444) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
next: v942 
=== Usages ===
=== Predecessor ===
v960 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v942  <|@  <|@
f <@*|@fixed>@ <|@
tid v942 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v940 
=== Predecessor ===
v958 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B28" 
    xhandlers
    flags 
    probability 4549078280250449777
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v959 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174]
stamp: void
=== Inputs ===
=== Succesors ===
next: v961 
=== Usages ===
=== Predecessor ===
v960 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v961  <|@  <|@
f <@*|@fixed>@ <|@
tid v961 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v39 
=== Predecessor ===
v959 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" "B27" 
    xhandlers
    flags 
    probability 4598518729118579484
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 9]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 74]
stamp: void
=== Inputs ===
=== Succesors ===
next: v35 
=== Usages ===
=== Predecessor ===
v22 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v35  <|@  <|@
f <@*|@fixed>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:444) [bci: 82]
stamp: void
trueSuccessorProbability: 0.9998165784832451
=== Inputs ===
condition: v32 
=== Succesors ===
trueSuccessor: v33 
falseSuccessor: v34 
=== Usages ===
=== Predecessor ===
v21 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v32 #trueSuccessor: v33 #falseSuccessor: v34  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4598517840054458020
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:444) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
next: v941 
=== Usages ===
=== Predecessor ===
v35 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v941  <|@  <|@
f <@*|@fixed>@ <|@
tid v941 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v940 
=== Predecessor ===
v33 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B2" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607180766685868390
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i947 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
valueDescription: i32
=== Inputs ===
merge: v940 
values: i18 i8 
=== Succesors ===
=== Usages ===
i948 v800 v1608 v60 i948 i948 i948 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v940 values: i18 i8  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v940 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v941 v942 
=== Succesors ===
next: v43 
=== Usages ===
i947 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v941 v942 #next: v43  <|@  <|@
f <@~|@floating>@ <|@
tid i36 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:444) [bci: 86]
rawvalue: -21
stableDimension: 0
stamp: i32 [-21] ⇊00000000ffffffeb ⇈00000000ffffffeb
stampKind: i32
value: int[-21|0xffffffffffffffeb]
=== Inputs ===
=== Succesors ===
=== Usages ===
v37 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:444) [bci: 88]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i36 
=== Succesors ===
=== Usages ===
v43 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i36  <|@  <|@
f <@*|@fixed>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:444) [bci: 88]
stamp: void
trueSuccessorProbability: 3.66905155017428E-4
=== Inputs ===
condition: v37 
=== Succesors ===
trueSuccessor: v42 
falseSuccessor: v41 
=== Usages ===
=== Predecessor ===
v940 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v37 #trueSuccessor: v42 #falseSuccessor: v41  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B28" 
    xhandlers
    flags 
    probability 4555402587703614778
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174]
stamp: void
=== Inputs ===
=== Succesors ===
next: v40 
=== Usages ===
=== Predecessor ===
v43 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v40  <|@  <|@
f <@*|@fixed>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v39 
=== Predecessor ===
v42 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B26" 
    xhandlers
    flags 
    probability 4607177462504198754
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 91]
stamp: void
=== Inputs ===
=== Succesors ===
next: v50 
=== Usages ===
=== Predecessor ===
v43 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v50  <|@  <|@
f <@~|@floating>@ <|@
tid v800 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 97]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i947 
y: i45 
=== Succesors ===
=== Usages ===
v50 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i947 y: i45  <|@  <|@
f <@*|@fixed>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 97]
stamp: void
trueSuccessorProbability: 0.5322359783728843
=== Inputs ===
condition: v800 
=== Succesors ===
trueSuccessor: v47 
falseSuccessor: v49 
=== Usages ===
=== Predecessor ===
v41 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v800 #trueSuccessor: v47 #falseSuccessor: v49  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B25" 
    xhandlers
    flags 
    probability 4602966537134068855
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 100]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1587 
=== Usages ===
i1587 
=== Predecessor ===
v50 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1587  <|@  <|@
f <@~|@floating>@ <|@
tid v1608 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a51 
index: i947 
=== Succesors ===
=== Usages ===
i1587 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a51 index: i947  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1587 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 107]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v47 
address: v1608 
=== Succesors ===
next: v59 
=== Usages ===
i53 
=== Predecessor ===
v47 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v47 address: v1608 #next: v59  <|@  <|@
f <@~|@floating>@ <|@
tid i53 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 108]
stamp: i32
=== Inputs ===
x: i11 
y: i1587 
=== Succesors ===
=== Usages ===
v55 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i11 y: i1587  <|@  <|@
f <@~|@floating>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 111]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i53 
y: i54 
=== Succesors ===
=== Usages ===
v59 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i53 y: i54  <|@  <|@
f <@*|@fixed>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 111]
stamp: void
trueSuccessorProbability: 0.9985678292003713
=== Inputs ===
condition: v55 
=== Succesors ===
trueSuccessor: v56 
falseSuccessor: v58 
=== Usages ===
=== Predecessor ===
i1587 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v55 #trueSuccessor: v56 #falseSuccessor: v58  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B24" 
    xhandlers
    flags 
    probability 4602959675148926439
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:464) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
next: v64 
=== Usages ===
=== Predecessor ===
v59 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v64  <|@  <|@
f <@~|@floating>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:464) [bci: 116]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i947 
y: i8 
=== Succesors ===
=== Usages ===
v64 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i947 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:464) [bci: 116]
stamp: void
trueSuccessorProbability: 0.37470452312023583
=== Inputs ===
condition: v60 
=== Succesors ===
trueSuccessor: v61 
falseSuccessor: v63 
=== Usages ===
=== Predecessor ===
v56 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v60 #trueSuccessor: v61 #falseSuccessor: v63  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B22" 
    xhandlers
    flags 
    probability 4596339048911957912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:466) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1309 
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1309  <|@  <|@
tid ?28 <|@
d <@d|@=== Debug Properties ===
bci: 74
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 74]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 443
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 j3 - i4 i5 i9 i11 - - - - - - - - - - - - - - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
?29 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 j3 - i4 i5 i9 i11 - - - - - - - - - - - - - - - - - - - - - - - - -  <|@  <|@
tid ?29 <|@
d <@d|@=== Debug Properties ===
bci: 10
code: ResolvedJavaMethodBytecode<Math.max(int, int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 74]
rethrowException: false
sourceFile: Math.java
sourceLine: 1252
stackSize: 1
=== Inputs ===
outerFrameState: ?28 
values: - - i8 
=== Succesors ===
=== Usages ===
v1506 i1589 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?28 values: - - i8  <|@  <|@
f <@~|@floating>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:471) [bci: 145]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i80 
=== Succesors ===
=== Usages ===
v1309 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i80  <|@  <|@
f <@*|@fixed>@ <|@
tid v1309 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:471) [bci: 145]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v81 
=== Succesors ===
trueSuccessor: v1306 
falseSuccessor: v1308 
=== Usages ===
=== Predecessor ===
v61 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v81 #trueSuccessor: v1306 #falseSuccessor: v1308  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B20" 
    xhandlers
    flags 
    probability 4596339048911957912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1306 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:471) [bci: 145]
stamp: void
=== Inputs ===
=== Succesors ===
next: v68 
=== Usages ===
=== Predecessor ===
v1309 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v68  <|@  <|@
f <@~|@floating>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:466) [bci: 122]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4 
y: i2 
=== Succesors ===
=== Usages ===
v68 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i4 y: i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:466) [bci: 122]
stamp: void
trueSuccessorProbability: 0.0013467536149702752
=== Inputs ===
condition: v65 
=== Succesors ===
trueSuccessor: v66 
falseSuccessor: v67 
=== Usages ===
=== Predecessor ===
v1306 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v65 #trueSuccessor: v66 #falseSuccessor: v67  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4553580319308306455
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 125]
stamp: void
=== Inputs ===
=== Succesors ===
next: v706 
=== Usages ===
=== Predecessor ===
v68 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v706  <|@  <|@
f <@~|@floating>@ <|@
tid i69 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 128]
stamp: i32
=== Inputs ===
x: i2 
y: i4 
=== Succesors ===
=== Usages ===
i70 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i2 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid i70 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 130]
stamp: i32
=== Inputs ===
x: i69 
y: i17 
=== Succesors ===
=== Usages ===
v1611 v703 v709 v1024 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i69 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid v703 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:852) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i70 
y: i702 
=== Succesors ===
=== Usages ===
v706 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i70 y: i702  <|@  <|@
f <@*|@fixed>@ <|@
tid v706 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:852) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v703 
=== Succesors ===
trueSuccessor: v704 
falseSuccessor: v705 
=== Usages ===
=== Predecessor ===
v66 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v703 #trueSuccessor: v704 #falseSuccessor: v705  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 4549076719680935959
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v704 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:855) [bci: 19]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
stamp: void
=== Inputs ===
=== Succesors ===
next: v791 
=== Usages ===
=== Predecessor ===
v706 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v791  <|@  <|@
f <@*|@fixed>@ <|@
tid v791 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v76 
=== Predecessor ===
v704 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B19" 
    xhandlers
    flags 
    probability 4549076719680935959
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v705 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:852) [bci: 5]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1588 
=== Usages ===
=== Predecessor ===
v706 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1588  <|@  <|@
f <@~|@floating>@ <|@
tid a1012 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:852) [bci: 6]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
rawvalue: Class:sun.misc.FloatingDecimal$BinaryToASCIIBuffer
stableDimension: 0
stamp: a!# Ljava/lang/Class;
stampKind: a -
value: Object[Class:sun.misc.FloatingDecimal$BinaryToASCIIBuffer]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1609 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1609 <|@
d <@d|@=== Debug Properties ===
displacement: 104
scale: Times1
stamp: void*
=== Inputs ===
base: a1012 
index: - 
=== Succesors ===
=== Usages ===
a1588 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1012 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1588 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsNumber
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:852) [bci: 6]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v1609 
=== Succesors ===
next: i1589 
=== Usages ===
a1016 v1610 
=== Predecessor ===
v705 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1609 #next: i1589  <|@  <|@
f <@~|@floating>@ <|@
tid v1610 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1588 
=== Succesors ===
=== Usages ===
i1589 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1588  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1589 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:852) [bci: 9]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?29 
guard: - 
address: v1610 
=== Succesors ===
next: v712 
=== Usages ===
v709 v1024 
=== Predecessor ===
a1588 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?29 guard: - address: v1610 #next: v712  <|@  <|@
f <@~|@floating>@ <|@
tid v709 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:852) [bci: 10]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i70 
y: i1589 
=== Succesors ===
=== Usages ===
v712 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i70 y: i1589  <|@  <|@
f <@*|@fixed>@ <|@
tid v712 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:852) [bci: 10]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v709 
=== Succesors ===
trueSuccessor: v710 
falseSuccessor: v711 
=== Usages ===
=== Predecessor ===
i1589 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v709 #trueSuccessor: v710 #falseSuccessor: v711  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4544573120053565463
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v710 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:853) [bci: 13]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1317 
=== Usages ===
=== Predecessor ===
v712 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1317  <|@  <|@
f <@~|@floating>@ <|@
tid v1024 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:853) [bci: 17]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i70 
y: i1589 
=== Succesors ===
=== Usages ===
v1317 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i70 y: i1589  <|@  <|@
f <@*|@fixed>@ <|@
tid v1317 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:853) [bci: 17]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1024 
=== Succesors ===
trueSuccessor: v1314 
falseSuccessor: v1316 
=== Usages ===
=== Predecessor ===
v710 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1024 #trueSuccessor: v1314 #falseSuccessor: v1316  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B21" 
    xhandlers
    flags 
    probability 4544573120053565463
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1314 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:853) [bci: 17]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1590 
=== Usages ===
i1590 
=== Predecessor ===
v1317 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1590  <|@  <|@
f <@~|@floating>@ <|@
tid a1016 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:852) [bci: 6]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a1588 
=== Succesors ===
=== Usages ===
v1611 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1588  <|@  <|@
f <@~|@floating>@ <|@
tid v1611 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1016 
index: i70 
=== Succesors ===
=== Usages ===
i1590 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1016 index: i70  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1590 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:853) [bci: 17]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1314 
address: v1611 
=== Succesors ===
next: v75 
=== Usages ===
i78 
=== Predecessor ===
v1314 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1314 address: v1611 #next: v75  <|@  <|@
f <@*|@fixed>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:471) [bci: 142]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v76 
=== Predecessor ===
i1590 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1316 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:853) [bci: 17]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1509 
=== Usages ===
=== Predecessor ===
v1317 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1509  <|@  <|@
f <@~|@floating>@ <|@
tid i1510 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -262427
stableDimension: 0
stamp: i32 [-262427] ⇊00000000fffbfee5 ⇈00000000fffbfee5
stampKind: i32
value: int[-262427|0xfffffffffffbfee5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1504 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1509 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1500 
=== Predecessor ===
v1316 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B21" 
    xhandlers
    flags 
    probability 4544573120053565463
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v711 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:855) [bci: 19]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
stamp: void
=== Inputs ===
=== Succesors ===
next: v790 
=== Usages ===
=== Predecessor ===
v712 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v790  <|@  <|@
f <@*|@fixed>@ <|@
tid v790 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v76 
=== Predecessor ===
v711 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B21" 
    xhandlers
    flags 
    probability 4596329391303238956
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:469) [bci: 139]
stamp: void
=== Inputs ===
=== Succesors ===
next: v77 
=== Usages ===
=== Predecessor ===
v68 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v77  <|@  <|@
f <@*|@fixed>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:471) [bci: 142]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v76 
=== Predecessor ===
v67 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" "B20" "B19" "B14" 
    successors 
    xhandlers
    flags 
    probability 4596339048911957912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i78 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:471) [bci: 142]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v76 
values: i1590 i8 i8 i8 
=== Succesors ===
=== Usages ===
v1011 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v76 values: i1590 i8 i8 i8  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:471) [bci: 142]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v75 v77 v790 v791 
=== Succesors ===
next: v87 
=== Usages ===
i78 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v75 v77 v790 v791 #next: v87  <|@  <|@
f <@~|@floating>@ <|@
tid i83 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:474) [bci: 162]
stamp: i32
=== Inputs ===
x: i80 
y: i2 
=== Succesors ===
=== Usages ===
j84 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i80 y: i2  <|@  <|@
f <@~|@floating>@ <|@
tid j84 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:474) [bci: 163]
stamp: i64
=== Inputs ===
x: j3 
y: i83 
=== Succesors ===
=== Usages ===
v1011 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j3 y: i83  <|@  <|@
tid v1011 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:476) [bci: 170]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@56c611c0
stamp: void
targetMethod: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(int, long, int)>
=== Inputs ===
arguments: a1 i8 j84 i78 
=== Succesors ===
=== Usages ===
v87 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 i8 j84 i78  <|@  <|@
tid ?1475 <|@
d <@d|@=== Debug Properties ===
bci: 170
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 476
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
v87 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
bci: 170
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:476) [bci: 170]
polymorphic: false
stamp: void
targetMethod: Direct#FloatingDecimal$BinaryToASCIIBuffer.developLongDigits
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1011 
stateDuring: ?1475 
=== Succesors ===
next: v89 
=== Usages ===
=== Predecessor ===
v76 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1011 stateDuring: ?1475 #next: v89  <|@  <|@
f <@*|@fixed>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:477) [bci: 173]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v87 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1308 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:471) [bci: 145]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1501 
=== Usages ===
=== Predecessor ===
v1309 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1501  <|@  <|@
f <@~|@floating>@ <|@
tid i1502 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -258579
stableDimension: 0
stamp: i32 [-258579] ⇊00000000fffc0ded ⇈00000000fffc0ded
stampKind: i32
value: int[-258579|0xfffffffffffc0ded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1504 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1501 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1500 
=== Predecessor ===
v1308 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B18" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1504 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-262427 - -258579] ⇊00000000fff804e5 ⇈00000000fffffffd
valueDescription: i32
=== Inputs ===
merge: v1500 
values: i1502 i1510 
=== Succesors ===
=== Usages ===
v1506 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1500 values: i1502 i1510  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1500 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1501 v1509 
=== Succesors ===
next: v1506 
=== Usages ===
i1504 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1501 v1509 #next: v1506  <|@  <|@
f <@*|@fixed>@ <|@
tid v1506 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?29 
actionAndReason: i1504 
speculation: a1503 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1500 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?29 actionAndReason: i1504 speculation: a1503  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B28" 
    xhandlers
    flags 
    probability 4599655016814494722
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174]
stamp: void
=== Inputs ===
=== Succesors ===
next: v62 
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v62  <|@  <|@
f <@*|@fixed>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v39 
=== Predecessor ===
v63 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B28" 
    xhandlers
    flags 
    probability 4560165896057405122
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174]
stamp: void
=== Inputs ===
=== Succesors ===
next: v57 
=== Usages ===
=== Predecessor ===
v59 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v57  <|@  <|@
f <@*|@fixed>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v39 
=== Predecessor ===
v58 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B28" 
    xhandlers
    flags 
    probability 4602093470658165717
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174]
stamp: void
=== Inputs ===
=== Succesors ===
next: v48 
=== Usages ===
=== Predecessor ===
v50 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v48  <|@  <|@
f <@*|@fixed>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v39 
=== Predecessor ===
v49 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B28" 
    xhandlers
    flags 
    probability 4542408038045123131
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174]
stamp: void
=== Inputs ===
=== Succesors ===
next: v38 
=== Usages ===
=== Predecessor ===
v35 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v38  <|@  <|@
f <@*|@fixed>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v39 
=== Predecessor ===
v34 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B7" "B26" "B25" "B24" "B3" 
    successors "B29" "B32" 
    xhandlers
    flags 
    probability 4605389661644661784
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i948 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
valueDescription: i32
=== Inputs ===
merge: v39 
values: i18 i947 i947 i947 i947 i8 
=== Succesors ===
=== Usages ===
?90 i851 i1630 i846 i852 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v39 values: i18 i947 i947 i947 i947 i8  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v38 v40 v48 v57 v62 v961 
=== Succesors ===
next: v750 
=== Usages ===
i948 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v38 v40 v48 v57 v62 v961 #next: v750  <|@  <|@
f <@~|@floating>@ <|@
tid j724 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:820) [bci: 4]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
rawvalue: 4503599627370495
stableDimension: 0
stamp: i64 [4503599627370495] ⇊000fffffffffffff ⇈000fffffffffffff
stampKind: i64
value: long[4503599627370495|0xfffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j725 j753 j754 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j725 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:820) [bci: 7]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i64 [0 - 4503599627370495] ⇈000fffffffffffff
=== Inputs ===
x: j3 
y: j724 
=== Succesors ===
=== Usages ===
j726 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j3 y: j724  <|@  <|@
f <@~|@floating>@ <|@
tid j723 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:820) [bci: 0]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
rawvalue: 4607182418800017408
stableDimension: 0
stamp: i64 [4607182418800017408] ⇊3ff0000000000000 ⇈3ff0000000000000
stampKind: i64
value: long[4607182418800017408|0x3ff0000000000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
j726 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j726 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:820) [bci: 8]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i64 [4607182418800017408 - 4611686018427387903] ⇊3ff0000000000000 ⇈3fffffffffffffff
=== Inputs ===
x: j725 
y: j723 
=== Succesors ===
=== Usages ===
d727 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: j725 y: j723  <|@  <|@
f <@~|@floating>@ <|@
tid d727 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Double.longBitsToDouble(long) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:820) [bci: 9]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: f64! [4.9E-324 - 1.7976931348623157E308]
=== Inputs ===
value: j726 
=== Succesors ===
=== Usages ===
d729 
=== Predecessor ===
- >@ <|@
instruction <@Reinterpret|@org.graalvm.compiler.nodes.calc.ReinterpretNode>@ value: j726  <|@  <|@
f <@~|@floating>@ <|@
tid d728 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:821) [bci: 14]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
rawvalue: 1.5
stableDimension: 0
stamp: f64! [1.5]
stampKind: f64
value: double[1.5|0x3ff8000000000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
d729 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid d729 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:821) [bci: 17]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: f64
=== Inputs ===
x: d727 
y: d728 
=== Succesors ===
=== Usages ===
d731 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: d727 y: d728  <|@  <|@
f <@~|@floating>@ <|@
tid d730 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:821) [bci: 18]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
rawvalue: 0.289529654
stableDimension: 0
stamp: f64! [0.289529654]
stampKind: f64
value: double[0.289529654|0x3fd287a762c9bd93]
=== Inputs ===
=== Succesors ===
=== Usages ===
d731 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid d731 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$125/271184744@39a592fe
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:821) [bci: 21]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: f64
=== Inputs ===
x: d729 
y: d730 
=== Succesors ===
=== Usages ===
d733 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: d729 y: d730  <|@  <|@
f <@~|@floating>@ <|@
tid d732 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:821) [bci: 22]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
rawvalue: 0.176091259
stableDimension: 0
stamp: f64! [0.176091259]
stampKind: f64
value: double[0.176091259|0x3fc68a288b421b8c]
=== Inputs ===
=== Succesors ===
=== Usages ===
d733 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid d733 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:821) [bci: 25]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: f64
=== Inputs ===
x: d731 
y: d732 
=== Succesors ===
=== Usages ===
d737 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: d731 y: d732  <|@  <|@
f <@~|@floating>@ <|@
tid d734 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.FloatConvertNode$$Lambda$1/154487945@39bcec26
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:821) [bci: 27]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
op: I2D
stamp: f64! [-2.147483648E9 - 2.147483647E9]
=== Inputs ===
value: i2 
=== Succesors ===
=== Usages ===
d736 
=== Predecessor ===
- >@ <|@
instruction <@FloatConvert|@org.graalvm.compiler.nodes.calc.FloatConvertNode>@ value: i2  <|@  <|@
f <@~|@floating>@ <|@
tid d735 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:821) [bci: 28]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
rawvalue: 0.301029995663981
stableDimension: 0
stamp: f64! [0.301029995663981]
stampKind: f64
value: double[0.301029995663981|0x3fd34413509f79fb]
=== Inputs ===
=== Succesors ===
=== Usages ===
d736 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid d736 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$125/271184744@39a592fe
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:821) [bci: 31]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: f64
=== Inputs ===
x: d734 
y: d735 
=== Succesors ===
=== Usages ===
d737 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: d734 y: d735  <|@  <|@
f <@~|@floating>@ <|@
tid d737 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:821) [bci: 32]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: f64
=== Inputs ===
x: d733 
y: d736 
=== Succesors ===
=== Usages ===
j738 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: d733 y: d736  <|@  <|@
f <@~|@floating>@ <|@
tid j738 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Double.doubleToRawLongBits(double) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:822) [bci: 37]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i64
=== Inputs ===
value: d737 
=== Succesors ===
=== Usages ===
j740 v746 j754 v762 v767 
=== Predecessor ===
- >@ <|@
instruction <@Reinterpret|@org.graalvm.compiler.nodes.calc.ReinterpretNode>@ value: d737  <|@  <|@
f <@~|@floating>@ <|@
tid j745 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:824) [bci: 60]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
rawvalue: -9223372036854775808
stableDimension: 0
stamp: i64 [-9223372036854775808] ⇊8000000000000000 ⇈8000000000000000
stampKind: i64
value: long[-9223372036854775808|0x8000000000000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v746 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v746 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:824) [bci: 66]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
x: j738 
y: j745 
=== Succesors ===
=== Usages ===
v761 i774 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j738 y: j745  <|@  <|@
f <@~|@floating>@ <|@
tid j739 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:823) [bci: 44]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
rawvalue: 9218868437227405312
stableDimension: 0
stamp: i64 [9218868437227405312] ⇊7ff0000000000000 ⇈7ff0000000000000
stampKind: i64
value: long[9218868437227405312|0x7ff0000000000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
j740 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j740 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:823) [bci: 47]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i64 [0 - 9218868437227405312] ⇈7ff0000000000000
=== Inputs ===
x: j738 
y: j739 
=== Succesors ===
=== Usages ===
j741 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j738 y: j739  <|@  <|@
f <@~|@floating>@ <|@
tid j741 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:823) [bci: 50]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i64 [0 - 2047] ⇈00000000000007ff
=== Inputs ===
x: j740 
y: i80 
=== Succesors ===
=== Usages ===
i742 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j740 y: i80  <|@  <|@
f <@~|@floating>@ <|@
tid i742 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:823) [bci: 51]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
resultBits: 32
stamp: i32 [0 - 2047] ⇈00000000000007ff
=== Inputs ===
value: j741 
=== Succesors ===
=== Usages ===
i744 i771 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j741  <|@  <|@
f <@~|@floating>@ <|@
tid i743 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:823) [bci: 55]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
rawvalue: -1023
stableDimension: 0
stamp: i32 [-1023] ⇊00000000fffffc01 ⇈00000000fffffc01
stampKind: i32
value: int[-1023|0xfffffffffffffc01]
=== Inputs ===
=== Succesors ===
=== Usages ===
i744 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i744 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:823) [bci: 55]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i32 [-1023 - 1024]
=== Inputs ===
x: i742 
y: i743 
=== Succesors ===
=== Usages ===
v747 v751 j753 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i742 y: i743  <|@  <|@
f <@~|@floating>@ <|@
tid v747 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:825) [bci: 78]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i744 
y: i8 
=== Succesors ===
=== Usages ===
v750 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i744 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v750 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:825) [bci: 78]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
trueSuccessorProbability: 0.8017068096060938
=== Inputs ===
condition: v747 
=== Succesors ===
trueSuccessor: v748 
falseSuccessor: v749 
=== Usages ===
=== Predecessor ===
v39 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v747 #trueSuccessor: v748 #falseSuccessor: v749  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4603959086903862549
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v748 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:829) [bci: 147]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1321 
=== Usages ===
=== Predecessor ===
v750 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1321  <|@  <|@
f <@~|@floating>@ <|@
tid j766 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:830) [bci: 154]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
rawvalue: 9223372036854775807
stableDimension: 0
stamp: i64 [9223372036854775807] ⇊7fffffffffffffff ⇈7fffffffffffffff
stampKind: i64
value: long[9223372036854775807|0x7fffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v767 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v767 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:830) [bci: 160]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
x: j738 
y: j766 
=== Succesors ===
=== Usages ===
v1321 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j738 y: j766  <|@  <|@
f <@*|@fixed>@ <|@
tid v1321 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:830) [bci: 160]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v767 
=== Succesors ===
trueSuccessor: v1320 
falseSuccessor: v1318 
=== Usages ===
=== Predecessor ===
v748 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v767 #trueSuccessor: v1320 #falseSuccessor: v1318  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B178" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1320 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:830) [bci: 160]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1512 
=== Usages ===
=== Predecessor ===
v1321 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1512  <|@  <|@
f <@~|@floating>@ <|@
tid i1513 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -317459
stableDimension: 0
stamp: i32 [-317459] ⇊00000000fffb27ed ⇈00000000fffb27ed
stampKind: i32
value: int[-317459|0xfffffffffffb27ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1514 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1512 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1511 
=== Predecessor ===
v1320 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B38" 
    xhandlers
    flags 
    probability 4603959086903862549
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1318 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:830) [bci: 160]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
=== Succesors ===
next: v776 
=== Usages ===
=== Predecessor ===
v1321 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v776  <|@  <|@
f <@~|@floating>@ <|@
tid i774 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:830) [bci: 169]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i32 [-1 - 0]
=== Inputs ===
condition: v746 
trueValue: i8 
falseValue: i17 
=== Succesors ===
=== Usages ===
i777 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v746 trueValue: i8 falseValue: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v776 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v775 
=== Predecessor ===
v1318 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B33" "B177" 
    xhandlers
    flags 
    probability 4594890319253732366
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v749 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:825) [bci: 81]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1325 
=== Usages ===
=== Predecessor ===
v750 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1325  <|@  <|@
f <@~|@floating>@ <|@
tid v751 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:825) [bci: 85]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i744 
y: i80 
=== Succesors ===
=== Usages ===
v1325 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i744 y: i80  <|@  <|@
f <@*|@fixed>@ <|@
tid v1325 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:825) [bci: 85]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v751 
=== Succesors ===
trueSuccessor: v1322 
falseSuccessor: v1324 
=== Usages ===
=== Predecessor ===
v749 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v751 #trueSuccessor: v1322 #falseSuccessor: v1324  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4594890319253732366
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1322 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:825) [bci: 85]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
=== Succesors ===
next: v761 
=== Usages ===
=== Predecessor ===
v1325 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v761  <|@  <|@
f <@~|@floating>@ <|@
tid j754 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:827) [bci: 101]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i64 [0 - 4503599627370495] ⇈000fffffffffffff
=== Inputs ===
x: j738 
y: j724 
=== Succesors ===
=== Usages ===
j756 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j738 y: j724  <|@  <|@
f <@~|@floating>@ <|@
tid j755 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:827) [bci: 102]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
rawvalue: 4503599627370496
stableDimension: 0
stamp: i64 [4503599627370496] ⇊0010000000000000 ⇈0010000000000000
stampKind: i64
value: long[4503599627370496|0x10000000000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
j756 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j756 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:827) [bci: 105]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i64 [4503599627370496 - 9007199254740991] ⇊0010000000000000 ⇈001fffffffffffff
=== Inputs ===
x: j754 
y: j755 
=== Succesors ===
=== Usages ===
j757 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: j754 y: j755  <|@  <|@
f <@~|@floating>@ <|@
tid i770 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:827) [bci: 110]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
rawvalue: 1075
stableDimension: 0
stamp: i32 [1075] ⇊0000000000000433 ⇈0000000000000433
stampKind: i32
value: int[1075|0x433]
=== Inputs ===
=== Succesors ===
=== Usages ===
i771 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i771 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:827) [bci: 110]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i32 [-972 - 1075]
=== Inputs ===
x: i770 
y: i742 
=== Succesors ===
=== Usages ===
j757 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i770 y: i742  <|@  <|@
f <@~|@floating>@ <|@
tid j757 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:827) [bci: 111]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i64 [0 - 9007199254740991] ⇈001fffffffffffff
=== Inputs ===
x: j756 
y: i771 
=== Succesors ===
=== Usages ===
i758 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j756 y: i771  <|@  <|@
f <@~|@floating>@ <|@
tid i758 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:827) [bci: 112]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
resultBits: 32
stamp: i32
=== Inputs ===
value: j757 
=== Succesors ===
=== Usages ===
i764 i777 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j757  <|@  <|@
f <@*|@fixed>@ <|@
tid v761 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:828) [bci: 117]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
trueSuccessorProbability: 0.007647163435888316
=== Inputs ===
condition: v746 
=== Succesors ===
trueSuccessor: v759 
falseSuccessor: v760 
=== Usages ===
=== Predecessor ===
v1322 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v746 #trueSuccessor: v759 #falseSuccessor: v760  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B38" 
    xhandlers
    flags 
    probability 4563244020390216355
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v759 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:828) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
=== Succesors ===
next: v779 
=== Usages ===
=== Predecessor ===
v761 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v779  <|@  <|@
f <@*|@fixed>@ <|@
tid v779 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v775 
=== Predecessor ===
v759 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4594846559898331785
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v760 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:828) [bci: 120]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1329 
=== Usages ===
=== Predecessor ===
v761 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1329  <|@  <|@
f <@~|@floating>@ <|@
tid j753 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:826) [bci: 93]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i64 [0 - 4503599627370495] ⇈000fffffffffffff
=== Inputs ===
x: j724 
y: i744 
=== Succesors ===
=== Usages ===
v762 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j724 y: i744  <|@  <|@
f <@~|@floating>@ <|@
tid v762 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:828) [bci: 127]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
x: j738 
y: j753 
=== Succesors ===
=== Usages ===
v1329 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j738 y: j753  <|@  <|@
f <@*|@fixed>@ <|@
tid v1329 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:828) [bci: 127]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v762 
=== Succesors ===
trueSuccessor: v1328 
falseSuccessor: v1326 
=== Usages ===
=== Predecessor ===
v760 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v762 #trueSuccessor: v1328 #falseSuccessor: v1326  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B178" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1328 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:828) [bci: 127]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1519 
=== Usages ===
=== Predecessor ===
v1329 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1519  <|@  <|@
f <@~|@floating>@ <|@
tid i1520 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -317971
stableDimension: 0
stamp: i32 [-317971] ⇊00000000fffb25ed ⇈00000000fffb25ed
stampKind: i32
value: int[-317971|0xfffffffffffb25ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1514 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1519 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1511 
=== Predecessor ===
v1328 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4594846559898331785
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1326 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:828) [bci: 127]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
=== Succesors ===
next: v778 
=== Usages ===
=== Predecessor ===
v1329 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v778  <|@  <|@
f <@~|@floating>@ <|@
tid i764 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:828) [bci: 140]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i32
=== Inputs ===
x: i17 
y: i758 
=== Succesors ===
=== Usages ===
i777 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i17 y: i758  <|@  <|@
f <@*|@fixed>@ <|@
tid v778 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v775 
=== Predecessor ===
v1326 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" "B37" "B34" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4605389661644661784
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i777 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v775 
values: i774 i764 i758 
=== Succesors ===
=== Usages ===
?1484 i94 ?1483 v108 i853 ?1482 ?1481 ?475 ?1480 ?167 ?884 ?239 v244 v247 i922 ?486 ?514 i524 i341 ?1479 i921 i457 ?1478 ?465 ?1477 ?1476 i1586 i796 i851 i1630 i1631 i1632 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v775 values: i774 i764 i758  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v775 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v776 v778 v779 
=== Succesors ===
next: v98 
=== Usages ===
i777 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v776 v778 v779 #next: v98  <|@  <|@
f <@~|@floating>@ <|@
tid i94 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NegateNode$$Lambda$180/1857180762@4b0ec103
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:520) [bci: 184]
stamp: i32
=== Inputs ===
value: i777 
=== Succesors ===
=== Usages ===
v95 i847 i794 
=== Predecessor ===
- >@ <|@
instruction <@Negate|@org.graalvm.compiler.nodes.calc.NegateNode>@ value: i777  <|@  <|@
f <@~|@floating>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:520) [bci: 185]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i94 
y: i7 
=== Succesors ===
=== Usages ===
v98 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i94 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:520) [bci: 185]
stamp: void
trueSuccessorProbability: 0.7309313881269885
=== Inputs ===
condition: v95 
=== Succesors ===
trueSuccessor: v96 
falseSuccessor: v97 
=== Usages ===
=== Predecessor ===
v775 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v95 #trueSuccessor: v96 #falseSuccessor: v97  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603448481723541948
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 5]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:520) [bci: 185]
stamp: void
=== Inputs ===
=== Succesors ===
next: v100 
=== Usages ===
=== Predecessor ===
v98 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v100  <|@  <|@
f <@*|@fixed>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:520) [bci: 185]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v101 
=== Predecessor ===
v96 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4596932739975014766
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 9]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:520) [bci: 185]
stamp: void
=== Inputs ===
=== Succesors ===
next: v102 
=== Usages ===
=== Predecessor ===
v98 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v102  <|@  <|@
f <@~|@floating>@ <|@
tid i1631 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:715) [bci: 1111]
stamp: i32
=== Inputs ===
x: i7 
y: i777 
=== Succesors ===
=== Usages ===
i850 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i7 y: i777  <|@  <|@
f <@~|@floating>@ <|@
tid i847 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:591) [bci: 329]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i94 
y: i7 
=== Succesors ===
=== Usages ===
i1632 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i94 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i1632 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:591) [bci: 329]
stamp: i32
=== Inputs ===
x: i847 
y: i777 
=== Succesors ===
=== Usages ===
i856 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i847 y: i777  <|@  <|@
f <@~|@floating>@ <|@
tid i1630 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:521) [bci: 194]
stamp: i32
=== Inputs ===
x: i948 
y: i777 
=== Succesors ===
=== Usages ===
i846 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i948 y: i777  <|@  <|@
f <@*|@fixed>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:520) [bci: 185]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v101 
=== Predecessor ===
v97 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4605389661644661784
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i794 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:520) [bci: 185]
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
valueDescription: i32
=== Inputs ===
merge: v101 
values: i8 i94 
=== Succesors ===
=== Usages ===
?1479 v1171 ?1478 ?1477 ?1478 ?1476 ?465 ?1476 ?1477 v801 v1612 ?475 ?465 ?167 ?167 ?884 ?884 v1614 v1049 v1620 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v101 values: i8 i94  <|@  <|@
f <@~|@floating>@ <|@
tid i846 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v101 
values: i948 i1630 
=== Succesors ===
=== Usages ===
i107 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v101 values: i948 i1630  <|@  <|@
f <@~|@floating>@ <|@
tid i856 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v101 
values: i8 i1632 
=== Succesors ===
=== Usages ===
i168 i882 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v101 values: i8 i1632  <|@  <|@
f <@~|@floating>@ <|@
tid i850 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v101 
values: i7 i1631 
=== Succesors ===
=== Usages ===
v1172 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v101 values: i7 i1631  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:520) [bci: 185]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v100 v102 
=== Succesors ===
next: v111 
=== Usages ===
i794 i846 i856 i850 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v100 v102 #next: v111  <|@  <|@
f <@~|@floating>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:523) [bci: 202]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i777 
y: i7 
=== Succesors ===
=== Usages ===
v111 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i777 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i160 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:591) [bci: 328]
rawvalue: 3
stableDimension: 0
stamp: i32 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
i213 i219 i810 j316 j323 j412 i680 i826 j688 j692 i860 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:523) [bci: 202]
stamp: void
trueSuccessorProbability: 0.7309313881269885
=== Inputs ===
condition: v108 
=== Succesors ===
trueSuccessor: v109 
falseSuccessor: v110 
=== Usages ===
=== Predecessor ===
v101 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v108 #trueSuccessor: v109 #falseSuccessor: v110  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4603448481723541948
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 5]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:523) [bci: 202]
stamp: void
=== Inputs ===
=== Succesors ===
next: v113 
=== Usages ===
=== Predecessor ===
v111 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v113  <|@  <|@
f <@*|@fixed>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:523) [bci: 202]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v114 
=== Predecessor ===
v109 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4596932739975014766
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 9]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:523) [bci: 202]
stamp: void
=== Inputs ===
=== Succesors ===
next: v115 
=== Usages ===
=== Predecessor ===
v111 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v115  <|@  <|@
f <@~|@floating>@ <|@
tid i853 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 340]
stamp: i32
=== Inputs ===
x: i777 
y: i7 
=== Succesors ===
=== Usages ===
i854 i857 i859 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i777 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i857 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 364]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i853 
y: i7 
=== Succesors ===
=== Usages ===
i859 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i853 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i859 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 364]
stamp: i32
=== Inputs ===
x: i853 
y: i857 
=== Succesors ===
=== Usages ===
i860 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i853 y: i857  <|@  <|@
f <@~|@floating>@ <|@
tid i851 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:524) [bci: 211]
stamp: i32
=== Inputs ===
x: i777 
y: i948 
=== Succesors ===
=== Usages ===
i852 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i777 y: i948  <|@  <|@
f <@*|@fixed>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:523) [bci: 202]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v114 
=== Predecessor ===
v110 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" "B43" 
    successors "B45" "B48" 
    xhandlers
    flags 
    probability 4605389661644661784
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i796 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:523) [bci: 202]
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
valueDescription: i32
=== Inputs ===
merge: v114 
values: i8 i777 
=== Succesors ===
=== Usages ===
?1480 v1057 ?1479 v1111 ?1478 ?167 ?475 ?884 v1615 v1621 ?1477 v1165 ?465 ?1476 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v114 values: i8 i777  <|@  <|@
f <@~|@floating>@ <|@
tid i852 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v114 
values: i948 i851 
=== Succesors ===
=== Usages ===
i129 i990 i127 v780 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v114 values: i948 i851  <|@  <|@
f <@~|@floating>@ <|@
tid i854 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v114 
values: i7 i853 
=== Succesors ===
=== Usages ===
v171 v1613 v1173 v1039 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v114 values: i7 i853  <|@  <|@
f <@~|@floating>@ <|@
tid i860 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v114 
values: i160 i859 
=== Succesors ===
=== Usages ===
i868 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v114 values: i160 i859  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:523) [bci: 202]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v113 v115 
=== Succesors ===
next: v783 
=== Usages ===
i796 i852 i854 i860 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v113 v115 #next: v783  <|@  <|@
f <@~|@floating>@ <|@
tid i107 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:521) [bci: 196]
stamp: i32
=== Inputs ===
x: i2 
y: i846 
=== Succesors ===
=== Usages ===
i123 i120 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2 y: i846  <|@  <|@
f <@~|@floating>@ <|@
tid i679 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:538) [bci: 235]
stamp: i32 [-12 - 52]
=== Inputs ===
x: i80 
y: i9 
=== Succesors ===
=== Usages ===
i123 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i80 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid i123 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:538) [bci: 236]
stamp: i32
=== Inputs ===
x: i107 
y: i679 
=== Succesors ===
=== Usages ===
i991 i990 i127 v780 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i107 y: i679  <|@  <|@
f <@~|@floating>@ <|@
tid v780 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:539) [bci: 243]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i852 
y: i123 
=== Succesors ===
=== Usages ===
v783 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i852 y: i123  <|@  <|@
f <@~|@floating>@ <|@
tid i120 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:527) [bci: 222]
stamp: i32
=== Inputs ===
x: i107 
y: i4 
=== Succesors ===
=== Usages ===
i991 i129 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i107 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:550) [bci: 272]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i11 
y: i7 
=== Succesors ===
=== Usages ===
v133 v987 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i11 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v783 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:539) [bci: 243]
stamp: void
trueSuccessorProbability: 0.44744570600555483
=== Inputs ===
condition: v780 
=== Succesors ===
trueSuccessor: v781 
falseSuccessor: v782 
=== Usages ===
=== Predecessor ===
v114 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v780 #trueSuccessor: v781 #falseSuccessor: v782  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4600127762195097286
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v781 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 9]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:539) [bci: 243]
stamp: void
=== Inputs ===
=== Succesors ===
next: v133 
=== Usages ===
=== Predecessor ===
v783 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v133  <|@  <|@
f <@~|@floating>@ <|@
tid i127 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:540) [bci: 252]
stamp: i32
=== Inputs ===
x: i123 
y: i852 
=== Succesors ===
=== Usages ===
i972 i974 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i123 y: i852  <|@  <|@
f <@~|@floating>@ <|@
tid i129 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:542) [bci: 266]
stamp: i32
=== Inputs ===
x: i120 
y: i852 
=== Succesors ===
=== Usages ===
i982 i138 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i120 y: i852  <|@  <|@
f <@*|@fixed>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:550) [bci: 272]
stamp: void
trueSuccessorProbability: 0.3620750396336093
=== Inputs ===
condition: v130 
=== Succesors ===
trueSuccessor: v131 
falseSuccessor: v132 
=== Usages ===
=== Predecessor ===
v781 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v130 #trueSuccessor: v131 #falseSuccessor: v132  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B50" 
    xhandlers
    flags 
    probability 4593843236232323993
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:551) [bci: 275]
stamp: void
=== Inputs ===
=== Succesors ===
next: v963 
=== Usages ===
=== Predecessor ===
v133 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v963  <|@  <|@
f <@*|@fixed>@ <|@
tid v963 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v962 
=== Predecessor ===
v131 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B52" 
    xhandlers
    flags 
    probability 4597405088903129587
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:554) [bci: 278]
stamp: void
=== Inputs ===
=== Succesors ===
next: v135 
=== Usages ===
=== Predecessor ===
v133 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v135  <|@  <|@
f <@*|@fixed>@ <|@
tid v135 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:554) [bci: 278]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v136 
=== Predecessor ===
v132 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B49" "B51" 
    xhandlers
    flags 
    probability 4601644361839485290
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v782 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 5]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:539) [bci: 243]
stamp: void
=== Inputs ===
=== Succesors ===
next: v987 
=== Usages ===
=== Predecessor ===
v783 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v987  <|@  <|@
f <@~|@floating>@ <|@
tid i990 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:541) [bci: 259]
stamp: i32
=== Inputs ===
x: i852 
y: i123 
=== Succesors ===
=== Usages ===
i977 i979 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i852 y: i123  <|@  <|@
f <@~|@floating>@ <|@
tid i991 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:542) [bci: 266]
stamp: i32
=== Inputs ===
x: i120 
y: i123 
=== Succesors ===
=== Usages ===
i982 i138 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i120 y: i123  <|@  <|@
f <@*|@fixed>@ <|@
tid v987 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:550) [bci: 272]
stamp: void
trueSuccessorProbability: 0.3620750396336093
=== Inputs ===
condition: v130 
=== Succesors ===
trueSuccessor: v985 
falseSuccessor: v986 
=== Usages ===
=== Predecessor ===
v782 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v130 #trueSuccessor: v985 #falseSuccessor: v986  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" 
    xhandlers
    flags 
    probability 4594941481985024202
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v985 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:551) [bci: 275]
stamp: void
=== Inputs ===
=== Succesors ===
next: v964 
=== Usages ===
=== Predecessor ===
v987 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v964  <|@  <|@
f <@*|@fixed>@ <|@
tid v964 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v962 
=== Predecessor ===
v985 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B46" "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4598895958736044594
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i982 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v962 
values: i129 i991 
=== Succesors ===
=== Usages ===
i134 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v962 values: i129 i991  <|@  <|@
f <@~|@floating>@ <|@
tid i974 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v962 
values: i127 i8 
=== Succesors ===
=== Usages ===
i972 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v962 values: i127 i8  <|@  <|@
f <@~|@floating>@ <|@
tid i979 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v962 
values: i8 i990 
=== Succesors ===
=== Usages ===
i977 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v962 values: i8 i990  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v962 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v963 v964 
=== Succesors ===
next: v137 
=== Usages ===
i982 i974 i979 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v963 v964 #next: v137  <|@  <|@
f <@~|@floating>@ <|@
tid i134 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:551) [bci: 275]
stamp: i32
=== Inputs ===
x: i982 
y: i17 
=== Succesors ===
=== Usages ===
i138 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i982 y: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:554) [bci: 278]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v136 
=== Predecessor ===
v962 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B52" 
    xhandlers
    flags 
    probability 4598757630992240901
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v986 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:554) [bci: 278]
stamp: void
=== Inputs ===
=== Succesors ===
next: v992 
=== Usages ===
=== Predecessor ===
v987 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v992  <|@  <|@
f <@*|@fixed>@ <|@
tid v992 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v136 
=== Predecessor ===
v986 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B47" "B50" "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4605389661644661784
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i138 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:554) [bci: 278]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v136 
values: i129 i134 i991 
=== Succesors ===
=== Usages ===
i798 v140 i144 i145 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v136 values: i129 i134 i991  <|@  <|@
f <@~|@floating>@ <|@
tid i972 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v136 
values: i127 i974 i8 
=== Succesors ===
=== Usages ===
i144 i149 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v136 values: i127 i974 i8  <|@  <|@
f <@~|@floating>@ <|@
tid i977 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v136 
values: i8 i979 i990 
=== Succesors ===
=== Usages ===
i145 i150 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v136 values: i8 i979 i990  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:554) [bci: 278]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v135 v137 v992 
=== Succesors ===
next: v143 
=== Usages ===
i138 i972 i977 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v135 v137 v992 #next: v143  <|@  <|@
f <@~|@floating>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:554) [bci: 280]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i138 
y: i8 
=== Succesors ===
=== Usages ===
v143 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i138 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:554) [bci: 280]
stamp: void
trueSuccessorProbability: 0.9999471561184408
=== Inputs ===
condition: v140 
=== Succesors ===
trueSuccessor: v141 
falseSuccessor: v142 
=== Usages ===
=== Predecessor ===
v136 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v140 #trueSuccessor: v141 #falseSuccessor: v142  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4605389280405537968
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:558) [bci: 283]
stamp: void
=== Inputs ===
=== Succesors ===
next: v148 
=== Usages ===
=== Predecessor ===
v143 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v148  <|@  <|@
f <@~|@floating>@ <|@
tid i145 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:559) [bci: 294]
stamp: i32
=== Inputs ===
x: i977 
y: i138 
=== Succesors ===
=== Usages ===
i150 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i977 y: i138  <|@  <|@
f <@~|@floating>@ <|@
tid i144 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:558) [bci: 287]
stamp: i32
=== Inputs ===
x: i972 
y: i138 
=== Succesors ===
=== Usages ===
i149 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i972 y: i138  <|@  <|@
f <@*|@fixed>@ <|@
tid v148 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:570) [bci: 300]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v147 
=== Predecessor ===
v141 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4541371046566689324
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:570) [bci: 300]
stamp: void
=== Inputs ===
=== Succesors ===
next: v146 
=== Usages ===
=== Predecessor ===
v143 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v146  <|@  <|@
f <@*|@fixed>@ <|@
tid v146 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:570) [bci: 300]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v147 
=== Predecessor ===
v142 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B53" 
    successors "B56" "B59" 
    xhandlers
    flags 
    probability 4605389661644661784
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i149 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:570) [bci: 300]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v147 
values: i972 i144 
=== Succesors ===
=== Usages ===
?1478 i153 ?167 ?884 i207 j310 ?1477 ?465 ?1476 i472 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v147 values: i972 i144  <|@  <|@
f <@~|@floating>@ <|@
tid i150 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:570) [bci: 300]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v147 
values: i977 i145 
=== Succesors ===
=== Usages ===
?1480 ?167 i169 ?884 i209 j312 ?1479 v1165 ?465 ?1478 ?1477 ?475 ?1476 i482 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v147 values: i977 i145  <|@  <|@
f <@~|@floating>@ <|@
tid i798 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:570) [bci: 300]
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
valueDescription: i32
=== Inputs ===
merge: v147 
values: i138 i8 
=== Succesors ===
=== Usages ===
?1479 ?167 ?884 i211 j314 ?1478 ?465 ?1477 ?1476 ?475 i477 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v147 values: i138 i8  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v147 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:570) [bci: 300]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v146 v148 
=== Succesors ===
next: v157 
=== Usages ===
i149 i150 i798 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v146 v148 #next: v157  <|@  <|@
f <@~|@floating>@ <|@
tid i153 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:591) [bci: 307]
stamp: i32
=== Inputs ===
x: i11 
y: i149 
=== Succesors ===
=== Usages ===
?167 i168 i896 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i11 y: i149  <|@  <|@
f <@~|@floating>@ <|@
tid v171 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 345]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i854 
y: i45 
=== Succesors ===
=== Usages ===
v174 v894 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i854 y: i45  <|@  <|@
f <@~|@floating>@ <|@
tid v801 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:591) [bci: 314]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i794 
y: i45 
=== Succesors ===
=== Usages ===
v157 v1397 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i794 y: i45  <|@  <|@
f <@~|@floating>@ <|@
tid j278 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:634) [bci: 637]
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v660 j630 j630 v449 ?650 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j280 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:634) [bci: 639]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v662 v417 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i234 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:618) [bci: 545]
rawvalue: 48
stableDimension: 0
stamp: i32 [48] ⇊0000000000000030 ⇈0000000000000030
stampKind: i32
value: int[48|0x30]
=== Inputs ===
=== Succesors ===
=== Usages ===
i235 i820 i344 i439 i516 i600 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i246 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 566]
rawvalue: 8
stableDimension: 0
stamp: i32 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
v247 v360 v537 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i243 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 559]
rawvalue: -3
stableDimension: 0
stamp: i32 [-3] ⇊00000000fffffffd ⇈00000000fffffffd
stampKind: i32
value: int[-3|0xfffffffffffffffd]
=== Inputs ===
=== Succesors ===
=== Usages ===
v244 v358 v530 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v241 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 554]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i5 
y: i8 
=== Succesors ===
=== Usages ===
v1353 v357 v529 v938 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i5 y: i8  <|@  <|@
f <@~|@floating>@ <|@
tid v1616 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1593 a1603 a1601 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j121 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:537) [bci: 228]
stamp: i64
=== Inputs ===
x: j3 
y: i9 
=== Succesors ===
=== Usages ===
?1478 v1171 ?1477 ?167 ?884 i203 j309 ?1476 ?465 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j3 y: i9  <|@  <|@
f <@*|@fixed>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:591) [bci: 314]
stamp: void
trueSuccessorProbability: 0.9999471514639044
=== Inputs ===
condition: v801 
=== Succesors ===
trueSuccessor: v155 
falseSuccessor: v156 
=== Usages ===
=== Predecessor ===
v147 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v801 #trueSuccessor: v155 #falseSuccessor: v156  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" "B58" 
    xhandlers
    flags 
    probability 4605389280371958085
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:591) [bci: 317]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1591 
=== Usages ===
i1591 
=== Predecessor ===
v157 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1591  <|@  <|@
f <@~|@floating>@ <|@
tid v1612 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a51 
index: i794 
=== Succesors ===
=== Usages ===
i1591 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a51 index: i794  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1591 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:591) [bci: 322]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v155 
address: v1612 
=== Succesors ===
next: v894 
=== Usages ===
i882 i896 
=== Predecessor ===
v155 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v155 address: v1612 #next: v894  <|@  <|@
f <@~|@floating>@ <|@
tid i896 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:591) [bci: 330]
stamp: i32
=== Inputs ===
x: i153 
y: i1591 
=== Succesors ===
=== Usages ===
i886 i887 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i153 y: i1591  <|@  <|@
f <@*|@fixed>@ <|@
tid v894 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 345]
stamp: void
trueSuccessorProbability: 0.9999471523948773
=== Inputs ===
condition: v171 
=== Succesors ===
trueSuccessor: v892 
falseSuccessor: v893 
=== Usages ===
=== Predecessor ===
i1591 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v171 #trueSuccessor: v892 #falseSuccessor: v893  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B61" 
    xhandlers
    flags 
    probability 4605388899126120185
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v892 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 348]
stamp: void
=== Inputs ===
=== Succesors ===
next: v877 
=== Usages ===
=== Predecessor ===
v894 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v877  <|@  <|@
f <@*|@fixed>@ <|@
tid v877 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v875 
=== Predecessor ===
v892 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B67" 
    xhandlers
    flags 
    probability 4541371156570236319
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v893 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 359]
stamp: void
=== Inputs ===
=== Succesors ===
next: v881 
=== Usages ===
=== Predecessor ===
v894 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v881  <|@  <|@
f <@*|@fixed>@ <|@
tid v881 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v878 
=== Predecessor ===
v893 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" "B66" 
    xhandlers
    flags 
    probability 4541371596739487840
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:591) [bci: 326]
stamp: void
=== Inputs ===
=== Succesors ===
next: v174 
=== Usages ===
=== Predecessor ===
v157 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v174  <|@  <|@
f <@~|@floating>@ <|@
tid i168 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:591) [bci: 330]
stamp: i32
=== Inputs ===
x: i153 
y: i856 
=== Succesors ===
=== Usages ===
i886 i887 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i153 y: i856  <|@  <|@
f <@*|@fixed>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 345]
stamp: void
trueSuccessorProbability: 0.9999471523948773
=== Inputs ===
condition: v171 
=== Succesors ===
trueSuccessor: v172 
falseSuccessor: v173 
=== Usages ===
=== Predecessor ===
v156 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v171 #trueSuccessor: v172 #falseSuccessor: v173  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" 
    xhandlers
    flags 
    probability 4541371266612549087
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v172 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 348]
stamp: void
=== Inputs ===
=== Succesors ===
next: v876 
=== Usages ===
=== Predecessor ===
v174 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v876  <|@  <|@
f <@*|@fixed>@ <|@
tid v876 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v875 
=== Predecessor ===
v172 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B57" 
    successors "B62" "B65" 
    xhandlers
    flags 
    probability 4605389280378674534
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i882 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v875 
values: i856 i1591 
=== Succesors ===
=== Usages ===
?167 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v875 values: i856 i1591  <|@  <|@
f <@~|@floating>@ <|@
tid i887 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v875 
values: i168 i896 
=== Succesors ===
=== Usages ===
i1495 v890 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v875 values: i168 i896  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v875 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v876 v877 
=== Succesors ===
next: v1333 
=== Usages ===
i882 i887 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v876 v877 #next: v1333  <|@  <|@
f <@~|@floating>@ <|@
tid v1039 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 355]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i854 
y: i45 
=== Succesors ===
=== Usages ===
v1333 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i854 y: i45  <|@  <|@
f <@*|@fixed>@ <|@
tid v1333 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 355]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1039 
=== Succesors ===
trueSuccessor: v1330 
falseSuccessor: v1332 
=== Usages ===
=== Predecessor ===
v875 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1039 #trueSuccessor: v1330 #falseSuccessor: v1332  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" "B64" 
    xhandlers
    flags 
    probability 4605389280378674534
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1330 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 355]
stamp: void
=== Inputs ===
=== Succesors ===
next: v873 
=== Usages ===
i1592 
=== Predecessor ===
v1333 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v873  <|@  <|@
f <@~|@floating>@ <|@
tid v890 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:595) [bci: 372]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i887 
y: i54 
=== Succesors ===
=== Usages ===
v873 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i887 y: i54  <|@  <|@
f <@*|@fixed>@ <|@
tid v873 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:595) [bci: 372]
stamp: void
trueSuccessorProbability: 0.9867185711014427
=== Inputs ===
condition: v890 
=== Succesors ===
trueSuccessor: v871 
falseSuccessor: v872 
=== Usages ===
=== Predecessor ===
v1330 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v890 #trueSuccessor: v871 #falseSuccessor: v872  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B69" 
    xhandlers
    flags 
    probability 4605293467342645890
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v871 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:595) [bci: 375]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1592 
=== Usages ===
=== Predecessor ===
v873 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1592  <|@  <|@
f <@~|@floating>@ <|@
tid v1613 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a51 
index: i854 
=== Succesors ===
=== Usages ===
i1592 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a51 index: i854  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1592 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 355]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1330 
address: v1613 
=== Succesors ===
next: v863 
=== Usages ===
i868 
=== Predecessor ===
v871 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1330 address: v1613 #next: v863  <|@  <|@
f <@*|@fixed>@ <|@
tid v863 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v861 
=== Predecessor ===
i1592 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B137" 
    xhandlers
    flags 
    probability 4577285656086886675
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v872 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1070]
stamp: void
=== Inputs ===
=== Succesors ===
next: v874 
=== Usages ===
=== Predecessor ===
v873 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v874  <|@  <|@
f <@*|@fixed>@ <|@
tid v874 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v192 
=== Predecessor ===
v872 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1332 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 355]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1331 
=== Usages ===
=== Predecessor ===
v1333 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1331  <|@  <|@
tid ?167 <|@
d <@d|@=== Debug Properties ===
bci: 330
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 591
stackSize: 2
=== Inputs ===
outerFrameState: - 
values: a1 - j121 - - i5 - - - i777 i149 i794 i150 i796 i798 i794 - - - - - - - - - - - - - - - - - i153 i882 
=== Succesors ===
=== Usages ===
v1331 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - j121 - - i5 - - - i777 i149 i794 i150 i796 i798 i794 - - - - - - - - - - - - - - - - - i153 i882  <|@  <|@
f <@*|@fixed>@ <|@
tid v1331 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1040
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 355]
reason: BoundsCheckException
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?167 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1332 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?167  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B67" 
    xhandlers
    flags 
    probability 4477483229743432929
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 359]
stamp: void
=== Inputs ===
=== Succesors ===
next: v879 
=== Usages ===
=== Predecessor ===
v174 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v879  <|@  <|@
f <@*|@fixed>@ <|@
tid v879 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v878 
=== Predecessor ===
v173 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B58" 
    successors "B68" "B136" 
    xhandlers
    flags 
    probability 4541371486697175072
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i886 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v878 
values: i168 i896 
=== Succesors ===
=== Usages ===
i1495 v889 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v878 values: i168 i896  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v878 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v879 v881 
=== Succesors ===
next: v188 
=== Usages ===
i886 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v879 v881 #next: v188  <|@  <|@
f <@~|@floating>@ <|@
tid v889 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:595) [bci: 372]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i886 
y: i54 
=== Succesors ===
=== Usages ===
v188 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i886 y: i54  <|@  <|@
f <@*|@fixed>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:595) [bci: 372]
stamp: void
trueSuccessorProbability: 0.9867185711014427
=== Inputs ===
condition: v889 
=== Succesors ===
trueSuccessor: v186 
falseSuccessor: v187 
=== Usages ===
=== Predecessor ===
v878 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v889 #trueSuccessor: v186 #falseSuccessor: v187  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B69" 
    xhandlers
    flags 
    probability 4541288522100830908
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:595) [bci: 375]
stamp: void
=== Inputs ===
=== Succesors ===
next: v862 
=== Usages ===
=== Predecessor ===
v188 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v862  <|@  <|@
f <@*|@fixed>@ <|@
tid v862 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v861 
=== Predecessor ===
v186 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" "B63" 
    successors "B70" "B135" 
    xhandlers
    flags 
    probability 4605293843544876038
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i868 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v861 
values: i860 i1592 
=== Succesors ===
=== Usages ===
?884 i184 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v861 values: i860 i1592  <|@  <|@
f <@~|@floating>@ <|@
tid i1495 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v861 
values: i886 i887 
=== Succesors ===
=== Usages ===
?884 v197 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v861 values: i886 i887  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v861 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v862 v863 
=== Succesors ===
next: v195 
=== Usages ===
i868 i1495 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v862 v863 #next: v195  <|@  <|@
f <@~|@floating>@ <|@
tid i169 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 336]
stamp: i32
=== Inputs ===
x: i150 
y: i7 
=== Succesors ===
=== Usages ===
?884 i184 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i150 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i184 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365]
stamp: i32
=== Inputs ===
x: i169 
y: i868 
=== Succesors ===
=== Usages ===
v189 v201 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i169 y: i868  <|@  <|@
f <@~|@floating>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:595) [bci: 379]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i184 
y: i54 
=== Succesors ===
=== Usages ===
v195 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i184 y: i54  <|@  <|@
f <@*|@fixed>@ <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:595) [bci: 379]
stamp: void
trueSuccessorProbability: 0.9680978309381416
=== Inputs ===
condition: v189 
=== Succesors ===
trueSuccessor: v190 
falseSuccessor: v194 
=== Usages ===
=== Predecessor ===
v861 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v189 #trueSuccessor: v190 #falseSuccessor: v194  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" "B101" 
    xhandlers
    flags 
    probability 4605066743998553008
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:596) [bci: 382]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1593 
=== Usages ===
=== Predecessor ===
v195 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1593  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1593 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.digits
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:618) [bci: 537]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v1616 
=== Succesors ===
next: v200 
=== Usages ===
v1122 a1121 v1617 v1618 v1619 v1638 v1639 
=== Predecessor ===
v190 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1616 #next: v200  <|@  <|@
f <@~|@floating>@ <|@
tid v1617 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1593 
=== Succesors ===
=== Usages ===
i1595 i1600 i1599 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1593  <|@  <|@
tid ?884 <|@
d <@d|@=== Debug Properties ===
bci: 365
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 594
stackSize: 2
=== Inputs ===
outerFrameState: - 
values: a1 - j121 - - i5 - - - i777 i149 i794 i150 i796 i798 i794 - - - - - - - i1495 - - - - - - - - - i169 i868 
=== Succesors ===
=== Usages ===
v1552 j319 j321 i217 i216 v1638 i1599 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - j121 - - i5 - - - i777 i149 i794 i150 i796 i798 i794 - - - - - - - i1495 - - - - - - - - - i169 i868  <|@  <|@
f <@~|@floating>@ <|@
tid i196 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:596) [bci: 384]
rawvalue: 32
stableDimension: 0
stamp: i32 [32] ⇊0000000000000020 ⇈0000000000000020
stampKind: i32
value: int[32|0x20]
=== Inputs ===
=== Succesors ===
=== Usages ===
v197 v201 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:596) [bci: 386]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1495 
y: i196 
=== Succesors ===
=== Usages ===
v200 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1495 y: i196  <|@  <|@
f <@*|@fixed>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:596) [bci: 386]
stamp: void
trueSuccessorProbability: 9.220839096357736E-4
=== Inputs ===
condition: v197 
=== Succesors ===
trueSuccessor: v198 
falseSuccessor: v199 
=== Usages ===
=== Predecessor ===
a1593 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v197 #trueSuccessor: v198 #falseSuccessor: v199  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B72" "B100" 
    xhandlers
    flags 
    probability 4559646296614268741
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:596) [bci: 389]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1337 
=== Usages ===
=== Predecessor ===
v200 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1337  <|@  <|@
f <@~|@floating>@ <|@
tid v201 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:596) [bci: 393]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i184 
y: i196 
=== Succesors ===
=== Usages ===
v1337 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i184 y: i196  <|@  <|@
f <@*|@fixed>@ <|@
tid v1337 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:596) [bci: 393]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v201 
=== Succesors ===
trueSuccessor: v1334 
falseSuccessor: v1336 
=== Usages ===
=== Predecessor ===
v198 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v201 #trueSuccessor: v1334 #falseSuccessor: v1336  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B73" "B99" 
    xhandlers
    flags 
    probability 4559646296614268741
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1334 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:596) [bci: 393]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1341 
=== Usages ===
=== Predecessor ===
v1337 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1341  <|@  <|@
f <@~|@floating>@ <|@
tid i1048 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:598) [bci: 403]
rawvalue: 14
stableDimension: 0
stamp: i32 [14] ⇊000000000000000e ⇈000000000000000e
stampKind: i32
value: int[14|0xe]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1049 v1057 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1049 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:598) [bci: 403]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i794 
y: i1048 
=== Succesors ===
=== Usages ===
v1341 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i794 y: i1048  <|@  <|@
f <@*|@fixed>@ <|@
tid v1341 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:598) [bci: 403]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1049 
=== Succesors ===
trueSuccessor: v1338 
falseSuccessor: v1340 
=== Usages ===
=== Predecessor ===
v1334 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1049 #trueSuccessor: v1338 #falseSuccessor: v1340  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B74" "B98" 
    xhandlers
    flags 
    probability 4559646296614268741
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1338 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:598) [bci: 403]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1345 
=== Usages ===
i1594 
=== Predecessor ===
v1341 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1345  <|@  <|@
f <@~|@floating>@ <|@
tid v1057 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:599) [bci: 415]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i796 
y: i1048 
=== Succesors ===
=== Usages ===
v1345 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i796 y: i1048  <|@  <|@
f <@*|@fixed>@ <|@
tid v1345 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:599) [bci: 415]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1057 
=== Succesors ===
trueSuccessor: v1342 
falseSuccessor: v1344 
=== Usages ===
=== Predecessor ===
v1338 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1057 #trueSuccessor: v1342 #falseSuccessor: v1344  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4559646296614268741
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1342 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:599) [bci: 415]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1638 
=== Usages ===
i1596 
=== Predecessor ===
v1345 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1638  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1638 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?884 
object: a1593 
=== Succesors ===
next: v1353 
=== Usages ===
=== Predecessor ===
v1342 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?884 object: a1593 #next: v1353  <|@  <|@
f <@*|@fixed>@ <|@
tid v1353 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 554]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v241 
=== Succesors ===
trueSuccessor: v1352 
falseSuccessor: v1350 
=== Usages ===
=== Predecessor ===
v1638 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v241 #trueSuccessor: v1352 #falseSuccessor: v1350  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1352 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 554]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1561 
=== Usages ===
=== Predecessor ===
v1353 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1561  <|@  <|@
f <@~|@floating>@ <|@
tid i1562 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -278291
stableDimension: 0
stamp: i32 [-278291] ⇊00000000fffbc0ed ⇈00000000fffbc0ed
stampKind: i32
value: int[-278291|0xfffffffffffbc0ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1550 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1561 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1547 
=== Predecessor ===
v1352 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4559646296614268741
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1350 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 554]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1357 
=== Usages ===
=== Predecessor ===
v1353 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1357  <|@  <|@
f <@~|@floating>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 561]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i777 
y: i243 
=== Succesors ===
=== Usages ===
v1357 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i777 y: i243  <|@  <|@
f <@*|@fixed>@ <|@
tid v1357 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 561]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v244 
=== Succesors ===
trueSuccessor: v1356 
falseSuccessor: v1354 
=== Usages ===
=== Predecessor ===
v1350 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v244 #trueSuccessor: v1356 #falseSuccessor: v1354  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1356 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 561]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1569 
=== Usages ===
=== Predecessor ===
v1357 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1569  <|@  <|@
f <@~|@floating>@ <|@
tid i1570 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -278547
stableDimension: 0
stamp: i32 [-278547] ⇊00000000fffbbfed ⇈00000000fffbbfed
stampKind: i32
value: int[-278547|0xfffffffffffbbfed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1550 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1569 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1547 
=== Predecessor ===
v1356 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B97" 
    xhandlers
    flags 
    probability 4559646296614268741
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1354 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 561]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1361 
=== Usages ===
=== Predecessor ===
v1357 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1361  <|@  <|@
f <@~|@floating>@ <|@
tid v247 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 568]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i777 
y: i246 
=== Succesors ===
=== Usages ===
v1361 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i777 y: i246  <|@  <|@
f <@*|@fixed>@ <|@
tid v1361 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 568]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v247 
=== Succesors ===
trueSuccessor: v1358 
falseSuccessor: v1360 
=== Usages ===
=== Predecessor ===
v1354 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v247 #trueSuccessor: v1358 #falseSuccessor: v1360  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B80" "B81" 
    xhandlers
    flags 
    probability 4559646296614268741
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1358 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 568]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1594 
=== Usages ===
=== Predecessor ===
v1361 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1594  <|@  <|@
f <@~|@floating>@ <|@
tid a204 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:598) [bci: 398]
rawvalue: int[14]{1, 5, 25, 125, 625, ...}
stableDimension: 0
stamp: a!# [I
stampKind: a -
value: Object[int[14]{1, 5, 25, 125, 625, ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1614 v1615 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1614 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a204 
index: i794 
=== Succesors ===
=== Usages ===
i1594 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a204 index: i794  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1594 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:598) [bci: 403]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1338 
address: v1614 
=== Succesors ===
next: v1365 
=== Usages ===
i206 i211 
=== Predecessor ===
v1358 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1338 address: v1614 #next: v1365  <|@  <|@
f <@~|@floating>@ <|@
tid i211 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:600) [bci: 429]
stamp: i32
=== Inputs ===
x: i1594 
y: i798 
=== Succesors ===
=== Usages ===
i219 i220 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i1594 y: i798  <|@  <|@
f <@~|@floating>@ <|@
tid i219 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:610) [bci: 463]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i211 
y: i160 
=== Succesors ===
=== Usages ===
i221 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i211 y: i160  <|@  <|@
f <@~|@floating>@ <|@
tid i220 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:610) [bci: 463]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i211 
y: i7 
=== Succesors ===
=== Usages ===
i221 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i211 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i221 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:610) [bci: 463]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i219 
y: i220 
=== Succesors ===
=== Usages ===
v222 i225 ?239 i811 i810 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i219 y: i220  <|@  <|@
f <@~|@floating>@ <|@
tid i810 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:632) [bci: 608]
stamp: i32 [-2147483648 - 2147483632] ⇈00000000fffffff0
=== Inputs ===
x: i221 
y: i160 
=== Succesors ===
=== Usages ===
i812 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i221 y: i160  <|@  <|@
f <@~|@floating>@ <|@
tid i811 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:632) [bci: 608]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i221 
y: i7 
=== Succesors ===
=== Usages ===
i812 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i221 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i812 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:632) [bci: 608]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i810 
y: i811 
=== Succesors ===
=== Usages ===
v814 i816 v829 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i810 y: i811  <|@  <|@
f <@~|@floating>@ <|@
tid v829 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:634) [bci: 639]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i812 
y: i7 
=== Succesors ===
=== Usages ===
v1365 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i812 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v1365 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:634) [bci: 639]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v829 
=== Succesors ===
trueSuccessor: v1364 
falseSuccessor: v1362 
=== Usages ===
=== Predecessor ===
i1594 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v829 #trueSuccessor: v1364 #falseSuccessor: v1362  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1364 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:634) [bci: 639]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1573 
=== Usages ===
=== Predecessor ===
v1365 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1573  <|@  <|@
f <@~|@floating>@ <|@
tid i1574 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -279059
stableDimension: 0
stamp: i32 [-279059] ⇊00000000fffbbded ⇈00000000fffbbded
stampKind: i32
value: int[-279059|0xfffffffffffbbded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1550 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1573 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1547 
=== Predecessor ===
v1364 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" "B83" 
    xhandlers
    flags 
    probability 4559646296614268741
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1362 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:634) [bci: 639]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1595 
=== Usages ===
=== Predecessor ===
v1365 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1595  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1595 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:618) [bci: 551]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1617 
=== Succesors ===
next: v1369 
=== Usages ===
v1298 
=== Predecessor ===
v1362 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1617 #next: v1369  <|@  <|@
f <@~|@floating>@ <|@
tid v1298 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:646) [bci: 697]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1595 
y: i702 
=== Succesors ===
=== Usages ===
v1369 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1595 y: i702  <|@  <|@
f <@*|@fixed>@ <|@
tid v1369 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:618) [bci: 551]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1298 
=== Succesors ===
trueSuccessor: v1368 
falseSuccessor: v1366 
=== Usages ===
=== Predecessor ===
i1595 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1298 #trueSuccessor: v1368 #falseSuccessor: v1366  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1368 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:618) [bci: 551]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1577 
=== Usages ===
=== Predecessor ===
v1369 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1577  <|@  <|@
f <@~|@floating>@ <|@
tid i1578 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -320027
stableDimension: 0
stamp: i32 [-320027] ⇊00000000fffb1de5 ⇈00000000fffb1de5
stampKind: i32
value: int[-320027|0xfffffffffffb1de5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1550 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1577 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1547 
=== Predecessor ===
v1368 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    probability 4559646296614268741
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1366 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:618) [bci: 551]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1596 
=== Usages ===
v1086 v1102 
=== Predecessor ===
v1369 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1596  <|@  <|@
f <@~|@floating>@ <|@
tid v1615 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a204 
index: i796 
=== Succesors ===
=== Usages ===
i1596 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a204 index: i796  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1596 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:599) [bci: 415]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1342 
address: v1615 
=== Succesors ===
next: i216 
=== Usages ===
i209 
=== Predecessor ===
v1366 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1342 address: v1615 #next: i216  <|@  <|@
f <@~|@floating>@ <|@
tid i203 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:598) [bci: 397]
resultBits: 32
stamp: i32
=== Inputs ===
value: j121 
=== Succesors ===
=== Usages ===
i206 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j121  <|@  <|@
f <@~|@floating>@ <|@
tid i206 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$125/271184744@39a592fe
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:598) [bci: 404]
stamp: i32
=== Inputs ===
x: i203 
y: i1594 
=== Succesors ===
=== Usages ===
i207 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: i203 y: i1594  <|@  <|@
f <@~|@floating>@ <|@
tid i207 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:598) [bci: 407]
stamp: i32
=== Inputs ===
x: i206 
y: i149 
=== Succesors ===
=== Usages ===
i216 i217 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i206 y: i149  <|@  <|@
f <@~|@floating>@ <|@
tid i209 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:599) [bci: 418]
stamp: i32
=== Inputs ===
x: i1596 
y: i150 
=== Succesors ===
=== Usages ===
i213 i214 i216 i217 ?239 i808 i809 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i1596 y: i150  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i216 <|@
d <@d|@=== Debug Properties ===
canDeopt: true
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:608) [bci: 446]
op: DIV
stamp: i32
type: SIGNED
=== Inputs ===
stateBefore: ?884 
x: i207 
y: i209 
=== Succesors ===
next: v1373 
=== Usages ===
v230 i235 
=== Predecessor ===
i1596 >@ <|@
instruction <@/|@org.graalvm.compiler.nodes.calc.SignedDivNode>@ stateBefore: ?884 x: i207 y: i209 #next: v1373  <|@  <|@
f <@~|@floating>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:614) [bci: 522]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i216 
y: i8 
=== Succesors ===
=== Usages ===
v1373 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i216 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v1373 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:614) [bci: 522]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v230 
=== Succesors ===
trueSuccessor: v1372 
falseSuccessor: v1370 
=== Usages ===
=== Predecessor ===
i216 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v230 #trueSuccessor: v1372 #falseSuccessor: v1370  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1372 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:614) [bci: 522]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1579 
=== Usages ===
=== Predecessor ===
v1373 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1579  <|@  <|@
f <@~|@floating>@ <|@
tid i1580 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -273427
stableDimension: 0
stamp: i32 [-273427] ⇊00000000fffbd3ed ⇈00000000fffbd3ed
stampKind: i32
value: int[-273427|0xfffffffffffbd3ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1550 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1579 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1547 
=== Predecessor ===
v1372 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" "B87" 
    xhandlers
    flags 
    probability 4559646296614268741
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1370 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:614) [bci: 522]
stamp: void
=== Inputs ===
=== Succesors ===
next: i217 
=== Usages ===
=== Predecessor ===
v1373 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i217  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i217 <|@
d <@d|@=== Debug Properties ===
canDeopt: true
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:609) [bci: 455]
op: REM
stamp: i32 [-2147483647 - 2147483647]
type: SIGNED
=== Inputs ===
stateBefore: ?884 
x: i207 
y: i209 
=== Succesors ===
next: v1377 
=== Usages ===
i681 i680 
=== Predecessor ===
v1370 >@ <|@
instruction <@%|@org.graalvm.compiler.nodes.calc.SignedRemNode>@ stateBefore: ?884 x: i207 y: i209 #next: v1377  <|@  <|@
f <@~|@floating>@ <|@
tid i680 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:609) [bci: 456]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i217 
y: i160 
=== Succesors ===
=== Usages ===
i682 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i217 y: i160  <|@  <|@
f <@~|@floating>@ <|@
tid i681 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:609) [bci: 456]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i217 
y: i7 
=== Succesors ===
=== Usages ===
i682 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i217 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i682 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:609) [bci: 456]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i680 
y: i681 
=== Succesors ===
=== Usages ===
v222 i225 ?239 i809 i808 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i680 y: i681  <|@  <|@
f <@~|@floating>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:611) [bci: 470]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i682 
y: i221 
=== Succesors ===
=== Usages ===
v1377 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i682 y: i221  <|@  <|@
f <@*|@fixed>@ <|@
tid v1377 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:611) [bci: 470]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v222 
=== Succesors ===
trueSuccessor: v1376 
falseSuccessor: v1374 
=== Usages ===
=== Predecessor ===
i217 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v222 #trueSuccessor: v1376 #falseSuccessor: v1374  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1376 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:611) [bci: 470]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1581 
=== Usages ===
=== Predecessor ===
v1377 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1581  <|@  <|@
f <@~|@floating>@ <|@
tid i1582 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -272915
stableDimension: 0
stamp: i32 [-272915] ⇊00000000fffbd5ed ⇈00000000fffbd5ed
stampKind: i32
value: int[-272915|0xfffffffffffbd5ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1550 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1581 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1547 
=== Predecessor ===
v1376 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    probability 4559646296614268741
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1374 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:611) [bci: 470]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1381 
=== Usages ===
=== Predecessor ===
v1377 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1381  <|@  <|@
f <@~|@floating>@ <|@
tid i213 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:601) [bci: 436]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i209 
y: i160 
=== Succesors ===
=== Usages ===
i215 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i209 y: i160  <|@  <|@
f <@~|@floating>@ <|@
tid i214 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:601) [bci: 436]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i209 
y: i7 
=== Succesors ===
=== Usages ===
i215 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i209 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i215 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:601) [bci: 436]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i213 
y: i214 
=== Succesors ===
=== Usages ===
v226 ?239 v817 i300 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i213 y: i214  <|@  <|@
f <@~|@floating>@ <|@
tid i225 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:612) [bci: 484]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i221 
y: i682 
=== Succesors ===
=== Usages ===
v226 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i221 y: i682  <|@  <|@
f <@~|@floating>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:612) [bci: 487]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i215 
y: i225 
=== Succesors ===
=== Usages ===
v1381 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i215 y: i225  <|@  <|@
f <@*|@fixed>@ <|@
tid v1381 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:612) [bci: 487]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v226 
=== Succesors ===
trueSuccessor: v1380 
falseSuccessor: v1378 
=== Usages ===
=== Predecessor ===
v1374 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v226 #trueSuccessor: v1380 #falseSuccessor: v1378  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1380 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:612) [bci: 487]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1583 
=== Usages ===
=== Predecessor ===
v1381 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1583  <|@  <|@
f <@~|@floating>@ <|@
tid i1584 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -273171
stableDimension: 0
stamp: i32 [-273171] ⇊00000000fffbd4ed ⇈00000000fffbd4ed
stampKind: i32
value: int[-273171|0xfffffffffffbd4ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1550 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1583 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1547 
=== Predecessor ===
v1380 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" "B95" 
    xhandlers
    flags 
    probability 4559646296614268741
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1378 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:612) [bci: 487]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1086 
=== Usages ===
=== Predecessor ===
v1381 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1086  <|@  <|@
f <@~|@floating>@ <|@
tid v1618 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1593 
=== Succesors ===
=== Usages ===
v1086 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1593  <|@  <|@
f <@~|@floating>@ <|@
tid i235 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:618) [bci: 549]
stamp: i32
=== Inputs ===
x: i216 
y: i234 
=== Succesors ===
=== Usages ===
i236 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i216 y: i234  <|@  <|@
f <@~|@floating>@ <|@
tid i236 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:618) [bci: 550]
resultBits: 16
stamp: i16
=== Inputs ===
value: i235 
=== Succesors ===
=== Usages ===
v1086 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i235  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1086 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:618) [bci: 551]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1366 
address: v1618 
value: i236 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i808 
=== Usages ===
=== Predecessor ===
v1378 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1366 address: v1618 value: i236 stateAfter: - lastLocationAccess: - #next: i808  <|@  <|@
tid ?239 <|@
d <@d|@=== Debug Properties ===
bci: 552
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:618) [bci: 551]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 626
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i5 - - - i777 - - - - - - - i7 i8 i8 - - - - - i682 i209 i221 i215 - - - - 
=== Succesors ===
=== Usages ===
i808 i809 v1526 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i5 - - - i777 - - - - - - - i7 i8 i8 - - - - - i682 i209 i221 i215 - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i808 <|@
d <@d|@=== Debug Properties ===
canDeopt: true
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:630) [bci: 591]
op: DIV
stamp: i32
type: SIGNED
=== Inputs ===
stateBefore: ?239 
x: i682 
y: i209 
=== Succesors ===
next: i809 
=== Usages ===
i820 
=== Predecessor ===
v1086 >@ <|@
instruction <@/|@org.graalvm.compiler.nodes.calc.SignedDivNode>@ stateBefore: ?239 x: i682 y: i209 #next: i809  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i809 <|@
d <@d|@=== Debug Properties ===
canDeopt: true
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:631) [bci: 600]
op: REM
stamp: i32 [-2147483647 - 2147483646]
type: SIGNED
=== Inputs ===
stateBefore: ?239 
x: i682 
y: i209 
=== Succesors ===
next: v1385 
=== Usages ===
i826 i827 
=== Predecessor ===
i808 >@ <|@
instruction <@%|@org.graalvm.compiler.nodes.calc.SignedRemNode>@ stateBefore: ?239 x: i682 y: i209 #next: v1385  <|@  <|@
f <@~|@floating>@ <|@
tid i826 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:631) [bci: 601]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i809 
y: i160 
=== Succesors ===
=== Usages ===
i828 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i809 y: i160  <|@  <|@
f <@~|@floating>@ <|@
tid i827 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:631) [bci: 601]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i809 
y: i7 
=== Succesors ===
=== Usages ===
i828 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i809 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i828 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:631) [bci: 601]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i826 
y: i827 
=== Succesors ===
=== Usages ===
v814 i816 v302 i299 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i826 y: i827  <|@  <|@
f <@~|@floating>@ <|@
tid v814 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:635) [bci: 646]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i828 
y: i812 
=== Succesors ===
=== Usages ===
v1385 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i828 y: i812  <|@  <|@
f <@*|@fixed>@ <|@
tid v1385 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:635) [bci: 646]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v814 
=== Succesors ===
trueSuccessor: v1382 
falseSuccessor: v1384 
=== Usages ===
=== Predecessor ===
i809 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v814 #trueSuccessor: v1382 #falseSuccessor: v1384  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B91" "B92" 
    xhandlers
    flags 
    probability 4559646296614268741
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1382 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:635) [bci: 646]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1389 
=== Usages ===
=== Predecessor ===
v1385 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1389  <|@  <|@
f <@~|@floating>@ <|@
tid i816 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:636) [bci: 660]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i812 
y: i828 
=== Succesors ===
=== Usages ===
v817 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i812 y: i828  <|@  <|@
f <@~|@floating>@ <|@
tid v817 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:636) [bci: 663]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i215 
y: i816 
=== Succesors ===
=== Usages ===
v1389 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i215 y: i816  <|@  <|@
f <@*|@fixed>@ <|@
tid v1389 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:636) [bci: 663]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v817 
=== Succesors ===
trueSuccessor: v1388 
falseSuccessor: v1386 
=== Usages ===
=== Predecessor ===
v1382 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v817 #trueSuccessor: v1388 #falseSuccessor: v1386  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1388 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:636) [bci: 663]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1522 
=== Usages ===
=== Predecessor ===
v1389 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1522  <|@  <|@
f <@~|@floating>@ <|@
tid i1523 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -279571
stableDimension: 0
stamp: i32 [-279571] ⇊00000000fffbbbed ⇈00000000fffbbbed
stampKind: i32
value: int[-279571|0xfffffffffffbbbed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1524 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1522 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1521 
=== Predecessor ===
v1388 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B93" "B94" 
    xhandlers
    flags 
    probability 4559646296614268741
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1386 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:636) [bci: 663]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1393 
=== Usages ===
=== Predecessor ===
v1389 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1393  <|@  <|@
f <@~|@floating>@ <|@
tid v302 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:649) [bci: 714]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i828 
y: i8 
=== Succesors ===
=== Usages ===
v1393 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i828 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v1393 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:649) [bci: 714]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v302 
=== Succesors ===
trueSuccessor: v1392 
falseSuccessor: v1390 
=== Usages ===
=== Predecessor ===
v1386 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v302 #trueSuccessor: v1392 #falseSuccessor: v1390  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1392 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:649) [bci: 714]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1529 
=== Usages ===
=== Predecessor ===
v1393 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1529  <|@  <|@
f <@~|@floating>@ <|@
tid i1530 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -282387
stableDimension: 0
stamp: i32 [-282387] ⇊00000000fffbb0ed ⇈00000000fffbb0ed
stampKind: i32
value: int[-282387|0xfffffffffffbb0ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1524 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1529 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1521 
=== Predecessor ===
v1392 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B168" 
    xhandlers
    flags 
    probability 4559646296614268741
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1390 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:649) [bci: 714]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1102 
=== Usages ===
=== Predecessor ===
v1393 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1102  <|@  <|@
f <@~|@floating>@ <|@
tid v1619 <|@
d <@d|@=== Debug Properties ===
displacement: 18
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1593 
=== Succesors ===
=== Usages ===
v1102 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1593  <|@  <|@
f <@~|@floating>@ <|@
tid i820 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:646) [bci: 695]
stamp: i32
=== Inputs ===
x: i808 
y: i234 
=== Succesors ===
=== Usages ===
i821 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i808 y: i234  <|@  <|@
f <@~|@floating>@ <|@
tid i821 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:646) [bci: 696]
resultBits: 16
stamp: i16
=== Inputs ===
value: i820 
=== Succesors ===
=== Usages ===
v1102 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i820  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1102 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:646) [bci: 697]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1366 
address: v1619 
value: i821 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v454 
=== Usages ===
=== Predecessor ===
v1390 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1366 address: v1619 value: i821 stateAfter: - lastLocationAccess: - #next: v454  <|@  <|@
f <@~|@floating>@ <|@
tid i299 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:648) [bci: 704]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i828 
y: i7 
=== Succesors ===
=== Usages ===
i300 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i828 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i300 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:648) [bci: 707]
stamp: i32
=== Inputs ===
x: i299 
y: i215 
=== Succesors ===
=== Usages ===
j301 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i299 y: i215  <|@  <|@
f <@~|@floating>@ <|@
tid j301 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:648) [bci: 708]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i300 
=== Succesors ===
=== Usages ===
j461 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i300  <|@  <|@
f <@*|@fixed>@ <|@
tid v454 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:760) [bci: 1426]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v455 
=== Predecessor ===
v1102 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1384 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:635) [bci: 646]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1527 
=== Usages ===
=== Predecessor ===
v1385 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1527  <|@  <|@
f <@~|@floating>@ <|@
tid i1528 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -279315
stableDimension: 0
stamp: i32 [-279315] ⇊00000000fffbbced ⇈00000000fffbbced
stampKind: i32
value: int[-279315|0xfffffffffffbbced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1524 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1527 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1521 
=== Predecessor ===
v1384 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B91" "B95" "B93" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1524 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-282387 - -279315] ⇊00000000fffbb0ed ⇈00000000fffbbfed
valueDescription: i32
=== Inputs ===
merge: v1521 
values: i1523 i1528 i1530 
=== Succesors ===
=== Usages ===
v1526 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1521 values: i1523 i1528 i1530  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1521 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1522 v1527 v1529 
=== Succesors ===
next: v1526 
=== Usages ===
i1524 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1522 v1527 v1529 #next: v1526  <|@  <|@
f <@*|@fixed>@ <|@
tid v1526 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?239 
actionAndReason: i1524 
speculation: a1503 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1521 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?239 actionAndReason: i1524 speculation: a1503  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1360 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 568]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1575 
=== Usages ===
=== Predecessor ===
v1361 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1575  <|@  <|@
f <@~|@floating>@ <|@
tid i1576 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -278803
stableDimension: 0
stamp: i32 [-278803] ⇊00000000fffbbeed ⇈00000000fffbbeed
stampKind: i32
value: int[-278803|0xfffffffffffbbeed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1550 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1575 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1547 
=== Predecessor ===
v1360 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1344 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:599) [bci: 415]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1559 
=== Usages ===
=== Predecessor ===
v1345 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1559  <|@  <|@
f <@~|@floating>@ <|@
tid i1560 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -270875
stableDimension: 0
stamp: i32 [-270875] ⇊00000000fffbdde5 ⇈00000000fffbdde5
stampKind: i32
value: int[-270875|0xfffffffffffbdde5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1550 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1559 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1547 
=== Predecessor ===
v1344 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1340 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:598) [bci: 403]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1557 
=== Usages ===
=== Predecessor ===
v1341 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1557  <|@  <|@
f <@~|@floating>@ <|@
tid i1558 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -268827
stableDimension: 0
stamp: i32 [-268827] ⇊00000000fffbe5e5 ⇈00000000fffbe5e5
stampKind: i32
value: int[-268827|0xfffffffffffbe5e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1550 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1557 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1547 
=== Predecessor ===
v1340 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1336 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:596) [bci: 393]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1555 
=== Usages ===
=== Predecessor ===
v1337 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1555  <|@  <|@
f <@~|@floating>@ <|@
tid i1556 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -268051
stableDimension: 0
stamp: i32 [-268051] ⇊00000000fffbe8ed ⇈00000000fffbe8ed
stampKind: i32
value: int[-268051|0xfffffffffffbe8ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1550 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1555 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1547 
=== Predecessor ===
v1336 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B102" "B133" 
    xhandlers
    flags 
    probability 4605060389434741780
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:652) [bci: 728]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1397 
=== Usages ===
=== Predecessor ===
v200 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1397  <|@  <|@
f <@*|@fixed>@ <|@
tid v1397 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:652) [bci: 734]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v801 
=== Succesors ===
trueSuccessor: v1394 
falseSuccessor: v1396 
=== Usages ===
=== Predecessor ===
v199 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v801 #trueSuccessor: v1394 #falseSuccessor: v1396  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B103" "B132" 
    xhandlers
    flags 
    probability 4605060389434741780
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1394 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:652) [bci: 734]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1401 
=== Usages ===
j1597 
=== Predecessor ===
v1397 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1401  <|@  <|@
f <@~|@floating>@ <|@
tid v1111 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:653) [bci: 746]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i796 
y: i45 
=== Succesors ===
=== Usages ===
v1401 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i796 y: i45  <|@  <|@
f <@*|@fixed>@ <|@
tid v1401 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:653) [bci: 746]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1111 
=== Succesors ===
trueSuccessor: v1398 
falseSuccessor: v1400 
=== Usages ===
=== Predecessor ===
v1394 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1111 #trueSuccessor: v1398 #falseSuccessor: v1400  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B104" "B109" 
    xhandlers
    flags 
    probability 4605060389434741780
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1398 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:653) [bci: 746]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1597 
=== Usages ===
j1598 
=== Predecessor ===
v1401 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1597  <|@  <|@
f <@~|@floating>@ <|@
tid a44 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 93]
rawvalue: long[27]{1, 5, 25, 125, 625, ...}
stableDimension: 0
stamp: a!# [J
stampKind: a -
value: Object[long[27]{1, 5, 25, 125, 625, ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1620 v1621 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1620 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: a44 
index: i794 
=== Succesors ===
=== Usages ===
j1597 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a44 index: i794  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1597 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: long
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:652) [bci: 734]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: v1394 
address: v1620 
=== Succesors ===
next: j1598 
=== Usages ===
j309 j314 
=== Predecessor ===
v1398 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1394 address: v1620 #next: j1598  <|@  <|@
f <@~|@floating>@ <|@
tid v1621 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: a44 
index: i796 
=== Succesors ===
=== Usages ===
j1598 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a44 index: i796  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1598 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: long
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:653) [bci: 746]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: v1398 
address: v1621 
=== Succesors ===
next: j319 
=== Usages ===
j312 
=== Predecessor ===
j1597 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1398 address: v1621 #next: j319  <|@  <|@
f <@~|@floating>@ <|@
tid j309 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$125/271184744@39a592fe
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:652) [bci: 735]
stamp: i64
=== Inputs ===
x: j121 
y: j1597 
=== Succesors ===
=== Usages ===
j310 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: j121 y: j1597  <|@  <|@
f <@~|@floating>@ <|@
tid j310 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:652) [bci: 738]
stamp: i64
=== Inputs ===
x: j309 
y: i149 
=== Succesors ===
=== Usages ===
j319 j321 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j309 y: i149  <|@  <|@
f <@~|@floating>@ <|@
tid j312 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:653) [bci: 749]
stamp: i64
=== Inputs ===
x: j1598 
y: i150 
=== Succesors ===
=== Usages ===
j316 j317 j319 j321 ?907 ?918 ?443 ?373 ?381 j408 j410 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j1598 y: i150  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j319 <|@
d <@d|@=== Debug Properties ===
canDeopt: true
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:662) [bci: 778]
op: DIV
stamp: i64
type: SIGNED
=== Inputs ===
stateBefore: ?884 
x: j310 
y: j312 
=== Succesors ===
next: j321 
=== Usages ===
i320 
=== Predecessor ===
j1598 >@ <|@
instruction <@/|@org.graalvm.compiler.nodes.calc.SignedDivNode>@ stateBefore: ?884 x: j310 y: j312 #next: j321  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j321 <|@
d <@d|@=== Debug Properties ===
canDeopt: true
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:663) [bci: 789]
op: REM
stamp: i64 [-9223372036854775807 - 9223372036854775807]
type: SIGNED
=== Inputs ===
stateBefore: ?884 
x: j310 
y: j312 
=== Succesors ===
next: v339 
=== Usages ===
j689 j688 
=== Predecessor ===
j319 >@ <|@
instruction <@%|@org.graalvm.compiler.nodes.calc.SignedRemNode>@ stateBefore: ?884 x: j310 y: j312 #next: v339  <|@  <|@
f <@~|@floating>@ <|@
tid j316 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:655) [bci: 768]
stamp: i64 [-9223372036854775808 - 9223372036854775800] ⇈fffffffffffffff8
=== Inputs ===
x: j312 
y: i160 
=== Succesors ===
=== Usages ===
j318 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j312 y: i160  <|@  <|@
f <@~|@floating>@ <|@
tid j317 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:655) [bci: 768]
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j312 
y: i7 
=== Succesors ===
=== Usages ===
j318 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j312 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid j318 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:655) [bci: 768]
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j316 
y: j317 
=== Succesors ===
=== Usages ===
j447 v332 ?443 ?918 v427 ?373 ?381 ?907 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j316 y: j317  <|@  <|@
f <@~|@floating>@ <|@
tid j314 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:654) [bci: 760]
stamp: i64
=== Inputs ===
x: j1597 
y: i798 
=== Succesors ===
=== Usages ===
j323 j324 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j1597 y: i798  <|@  <|@
f <@~|@floating>@ <|@
tid j323 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:664) [bci: 798]
stamp: i64 [-9223372036854775808 - 9223372036854775800] ⇈fffffffffffffff8
=== Inputs ===
x: j314 
y: i160 
=== Succesors ===
=== Usages ===
j325 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j314 y: i160  <|@  <|@
f <@~|@floating>@ <|@
tid j324 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:664) [bci: 798]
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j314 
y: i7 
=== Succesors ===
=== Usages ===
j325 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j314 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid j325 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:664) [bci: 798]
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j323 
y: j324 
=== Succesors ===
=== Usages ===
j380 v327 j330 ?373 ?918 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j323 y: j324  <|@  <|@
f <@~|@floating>@ <|@
tid j688 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:663) [bci: 790]
stamp: i64 [-9223372036854775808 - 9223372036854775800] ⇈fffffffffffffff8
=== Inputs ===
x: j321 
y: i160 
=== Succesors ===
=== Usages ===
j690 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j321 y: i160  <|@  <|@
f <@~|@floating>@ <|@
tid j689 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:663) [bci: 790]
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j321 
y: i7 
=== Succesors ===
=== Usages ===
j690 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j321 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid j690 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:663) [bci: 790]
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j688 
y: j689 
=== Succesors ===
=== Usages ===
j379 v327 j330 ?373 ?918 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j688 y: j689  <|@  <|@
f <@~|@floating>@ <|@
tid j330 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:666) [bci: 820]
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j325 
y: j690 
=== Succesors ===
=== Usages ===
v332 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j325 y: j690  <|@  <|@
f <@~|@floating>@ <|@
tid v332 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:666) [bci: 824]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j318 
y: j330 
=== Succesors ===
=== Usages ===
i333 v1405 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j318 y: j330  <|@  <|@
f <@~|@floating>@ <|@
tid i320 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:662) [bci: 779]
resultBits: 32
stamp: i32
=== Inputs ===
value: j319 
=== Succesors ===
=== Usages ===
v336 i344 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j319  <|@  <|@
f <@~|@floating>@ <|@
tid v336 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:668) [bci: 859]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i320 
y: i8 
=== Succesors ===
=== Usages ===
v339 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i320 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:668) [bci: 859]
stamp: void
trueSuccessorProbability: 0.12181344950436568
=== Inputs ===
condition: v336 
=== Succesors ===
trueSuccessor: v337 
falseSuccessor: v338 
=== Usages ===
=== Predecessor ===
j321 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v336 #trueSuccessor: v337 #falseSuccessor: v338  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B105" "B106" 
    xhandlers
    flags 
    probability 4591374071020439873
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v337 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:668) [bci: 862]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1405 
=== Usages ===
=== Predecessor ===
v339 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1405  <|@  <|@
f <@*|@fixed>@ <|@
tid v1405 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:668) [bci: 864]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v332 
=== Succesors ===
trueSuccessor: v1404 
falseSuccessor: v1402 
=== Usages ===
=== Predecessor ===
v337 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v332 #trueSuccessor: v1404 #falseSuccessor: v1402  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1404 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:668) [bci: 864]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1553 
=== Usages ===
=== Predecessor ===
v1405 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1553  <|@  <|@
f <@~|@floating>@ <|@
tid i1554 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -294419
stableDimension: 0
stamp: i32 [-294419] ⇊00000000fffb81ed ⇈00000000fffb81ed
stampKind: i32
value: int[-294419|0xfffffffffffb81ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1550 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1553 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1547 
=== Predecessor ===
v1404 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B107" "B108" 
    xhandlers
    flags 
    probability 4591374071020439873
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1402 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:668) [bci: 864]
stamp: void
=== Inputs ===
=== Succesors ===
next: v357 
=== Usages ===
=== Predecessor ===
v1405 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v357  <|@  <|@
f <@~|@floating>@ <|@
tid i341 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:670) [bci: 867]
stamp: i32
=== Inputs ===
x: i777 
y: i17 
=== Succesors ===
=== Usages ===
i921 i922 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i777 y: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v357 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 891]
stamp: void
trueSuccessorProbability: 0.010669521717460728
=== Inputs ===
condition: v241 
=== Succesors ===
trueSuccessor: v355 
falseSuccessor: v356 
=== Usages ===
=== Predecessor ===
v1402 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v241 #trueSuccessor: v355 #falseSuccessor: v356  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B119" 
    xhandlers
    flags 
    probability 4562224503551966794
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:681) [bci: 908]
stamp: void
=== Inputs ===
=== Succesors ===
next: v370 
=== Usages ===
=== Predecessor ===
v357 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v370  <|@  <|@
f <@*|@fixed>@ <|@
tid v370 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v369 
=== Predecessor ===
v355 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B114" 
    xhandlers
    flags 
    probability 4591302482260236360
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v356 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 894]
stamp: void
=== Inputs ===
=== Succesors ===
next: v917 
=== Usages ===
=== Predecessor ===
v357 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v917  <|@  <|@
f <@*|@fixed>@ <|@
tid v917 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v916 
=== Predecessor ===
v356 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B110" "B111" 
    xhandlers
    flags 
    probability 4604221683140082412
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:672) [bci: 873]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1599 
=== Usages ===
=== Predecessor ===
v339 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1599  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1599 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:672) [bci: 888]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?884 
guard: - 
address: v1617 
=== Succesors ===
next: v1413 
=== Usages ===
v1158 
=== Predecessor ===
v338 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?884 guard: - address: v1617 #next: v1413  <|@  <|@
f <@~|@floating>@ <|@
tid v1158 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:672) [bci: 888]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1599 
y: i8 
=== Succesors ===
=== Usages ===
v1413 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1599 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v1413 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:672) [bci: 888]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1158 
=== Succesors ===
trueSuccessor: v1412 
falseSuccessor: v1410 
=== Usages ===
=== Predecessor ===
i1599 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1158 #trueSuccessor: v1412 #falseSuccessor: v1410  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1412 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:672) [bci: 888]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1571 
=== Usages ===
=== Predecessor ===
v1413 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1571  <|@  <|@
f <@~|@floating>@ <|@
tid i1572 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -322075
stableDimension: 0
stamp: i32 [-322075] ⇊00000000fffb15e5 ⇈00000000fffb15e5
stampKind: i32
value: int[-322075|0xfffffffffffb15e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1550 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1571 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1547 
=== Predecessor ===
v1412 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B112" "B113" 
    xhandlers
    flags 
    probability 4604221683140082412
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1410 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:672) [bci: 888]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1163 
=== Usages ===
v1163 
=== Predecessor ===
v1413 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1163  <|@  <|@
f <@~|@floating>@ <|@
tid v1639 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1593 
=== Succesors ===
=== Usages ===
v1163 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1593  <|@  <|@
f <@~|@floating>@ <|@
tid i344 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:672) [bci: 886]
stamp: i32
=== Inputs ===
x: i320 
y: i234 
=== Succesors ===
=== Usages ===
i345 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i320 y: i234  <|@  <|@
f <@~|@floating>@ <|@
tid i345 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:672) [bci: 887]
resultBits: 16
stamp: i16
=== Inputs ===
value: i344 
=== Succesors ===
=== Usages ===
v1163 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i344  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1163 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:672) [bci: 888]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1410 
address: v1639 
value: i345 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v938 
=== Usages ===
=== Predecessor ===
v1410 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1410 address: v1639 value: i345 stateAfter: - lastLocationAccess: - #next: v938  <|@  <|@
f <@*|@fixed>@ <|@
tid v938 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 891]
stamp: void
trueSuccessorProbability: 0.010669521717460728
=== Inputs ===
condition: v241 
=== Succesors ===
trueSuccessor: v936 
falseSuccessor: v937 
=== Usages ===
=== Predecessor ===
v1163 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v241 #trueSuccessor: v936 #falseSuccessor: v937  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B119" 
    xhandlers
    flags 
    probability 4574907670107426078
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v936 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:681) [bci: 908]
stamp: void
=== Inputs ===
=== Succesors ===
next: v939 
=== Usages ===
=== Predecessor ===
v938 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v939  <|@  <|@
f <@*|@fixed>@ <|@
tid v939 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v369 
=== Predecessor ===
v936 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" 
    xhandlers
    flags 
    probability 4604157170265443794
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v937 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 894]
stamp: void
=== Inputs ===
=== Succesors ===
next: v919 
=== Usages ===
=== Predecessor ===
v938 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v919  <|@  <|@
f <@*|@fixed>@ <|@
tid v919 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v916 
=== Predecessor ===
v937 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B108" "B113" 
    successors "B115" "B116" 
    xhandlers
    flags 
    probability 4604986927965077723
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i921 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v916 
values: i341 i777 
=== Succesors ===
=== Usages ===
v358 v360 i922 i922 ?918 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v916 values: i341 i777  <|@  <|@
f <@~|@floating>@ <|@
tid i933 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v916 
values: i8 i7 
=== Succesors ===
=== Usages ===
i932 i932 ?918 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v916 values: i8 i7  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v916 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v917 v919 
=== Succesors ===
next: v1417 
=== Usages ===
i921 i933 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v917 v919 #next: v1417  <|@  <|@
f <@~|@floating>@ <|@
tid v358 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 898]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i921 
y: i243 
=== Succesors ===
=== Usages ===
v1417 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i921 y: i243  <|@  <|@
f <@~|@floating>@ <|@
tid v327 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:665) [bci: 806]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j690 
y: j325 
=== Succesors ===
=== Usages ===
i328 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j690 y: j325  <|@  <|@
f <@~|@floating>@ <|@
tid i328 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:665) [bci: 806]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v327 
trueValue: i7 
falseValue: i8 
=== Succesors ===
=== Usages ===
i371 ?918 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v327 trueValue: i7 falseValue: i8  <|@  <|@
f <@~|@floating>@ <|@
tid i333 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:666) [bci: 824]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v332 
trueValue: i7 
falseValue: i8 
=== Succesors ===
=== Usages ===
i372 ?918 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v332 trueValue: i7 falseValue: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v1417 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 898]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v358 
=== Succesors ===
trueSuccessor: v1416 
falseSuccessor: v1414 
=== Usages ===
=== Predecessor ===
v916 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v358 #trueSuccessor: v1416 #falseSuccessor: v1414  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1416 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 898]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1415 
=== Usages ===
=== Predecessor ===
v1417 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1415  <|@  <|@
tid ?918 <|@
d <@d|@=== Debug Properties ===
bci: 889
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 680
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i5 - - - i921 - - - - - - - i933 i328 i333 - - - - - j690 - j312 - j325 - j318 - 
=== Succesors ===
=== Usages ===
v1415 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i5 - - - i921 - - - - - - - i933 i328 i333 - - - - - j690 - j312 - j325 - j318 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1415 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1164
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 898]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?918 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1416 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?918  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" "B118" 
    xhandlers
    flags 
    probability 4604986927965077723
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1414 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 898]
stamp: void
=== Inputs ===
=== Succesors ===
next: v366 
=== Usages ===
=== Predecessor ===
v1417 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v366  <|@  <|@
f <@~|@floating>@ <|@
tid v360 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 905]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i921 
y: i246 
=== Succesors ===
=== Usages ===
v366 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i921 y: i246  <|@  <|@
f <@*|@fixed>@ <|@
tid v366 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 905]
stamp: void
trueSuccessorProbability: 0.9998134328358209
=== Inputs ===
condition: v360 
=== Succesors ===
trueSuccessor: v361 
falseSuccessor: v365 
=== Usages ===
=== Predecessor ===
v1414 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v360 #trueSuccessor: v361 #falseSuccessor: v365  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B119" 
    xhandlers
    flags 
    probability 4604985657123954626
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v361 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
stamp: void
=== Inputs ===
=== Succesors ===
next: v368 
=== Usages ===
=== Predecessor ===
v366 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v368  <|@  <|@
f <@*|@fixed>@ <|@
tid v368 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v369 
=== Predecessor ===
v361 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B119" 
    xhandlers
    flags 
    probability 4549337389257036309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v365 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:681) [bci: 908]
stamp: void
=== Inputs ===
=== Succesors ===
next: v691 
=== Usages ===
=== Predecessor ===
v366 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v691  <|@  <|@
f <@*|@fixed>@ <|@
tid v691 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:681) [bci: 908]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v369 
=== Predecessor ===
v365 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B117" "B107" "B118" "B112" 
    successors "B120" "B121" 
    xhandlers
    flags 
    probability 4605060389434741780
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i371 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v369 
values: i328 i8 i8 i8 
=== Succesors ===
=== Usages ===
?373 i377 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v369 values: i328 i8 i8 i8  <|@  <|@
f <@~|@floating>@ <|@
tid i372 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v369 
values: i333 i8 i8 i8 
=== Succesors ===
=== Usages ===
?373 i378 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v369 values: i333 i8 i8 i8  <|@  <|@
f <@~|@floating>@ <|@
tid i922 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v369 
values: i921 i341 i921 i777 
=== Succesors ===
=== Usages ===
i457 ?373 ?381 ?907 ?443 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v369 values: i921 i341 i921 i777  <|@  <|@
f <@~|@floating>@ <|@
tid i932 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v369 
values: i933 i8 i933 i7 
=== Succesors ===
=== Usages ===
i376 ?373 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v369 values: i933 i8 i933 i7  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v369 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v368 v370 v691 v939 
=== Succesors ===
next: v1421 
=== Usages ===
i371 i372 i922 i932 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v368 v370 v691 v939 #next: v1421  <|@  <|@
f <@~|@floating>@ <|@
tid v1122 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
stamp: void
=== Inputs ===
value: a1593 
=== Succesors ===
=== Usages ===
v1421 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1593  <|@  <|@
f <@*|@fixed>@ <|@
tid v1421 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1122 
=== Succesors ===
trueSuccessor: v1420 
falseSuccessor: v1418 
=== Usages ===
=== Predecessor ===
v369 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1122 #trueSuccessor: v1420 #falseSuccessor: v1418  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1420 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1419 
=== Usages ===
=== Predecessor ===
v1421 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1419  <|@  <|@
tid ?373 <|@
d <@d|@=== Debug Properties ===
bci: 914
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 683
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i922 - - - - - - - i932 i371 i372 - - - - - j690 - j312 - j325 - j318 - 
=== Succesors ===
=== Usages ===
v1419 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i922 - - - - - - - i932 i371 i372 - - - - - j690 - j312 - j325 - j318 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1419 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1292
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
reason: NullCheckException
speculation: Object[d.a@464852764]
stamp: void
=== Inputs ===
stateBefore: ?373 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1420 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?373  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B122" 
    xhandlers
    flags 
    probability 4605060389434741780
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1418 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1600 
=== Usages ===
=== Predecessor ===
v1421 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1600  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1600 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1617 
=== Succesors ===
next: v374 
=== Usages ===
v1140 
=== Predecessor ===
v1418 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1617 #next: v374  <|@  <|@
f <@~|@floating>@ <|@
tid a1121 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1024]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1593 
=== Succesors ===
=== Usages ===
v1622 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1593  <|@  <|@
f <@*|@fixed>@ <|@
tid v374 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v375 
=== Predecessor ===
i1600 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" "B126" "B127" 
    successors "B123" "B130" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618403218649290590
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i376 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v375 
values: i932 i438 i438 
=== Succesors ===
=== Usages ===
?381 i458 v1140 v1622 i438 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v375 values: i932 i438 i438  <|@  <|@
f <@~|@floating>@ <|@
tid i377 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v375 
values: i371 i7 i423 
=== Succesors ===
=== Usages ===
i459 v382 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v375 values: i371 i7 i423  <|@  <|@
f <@~|@floating>@ <|@
tid i378 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v375 
values: i372 i7 i428 
=== Succesors ===
=== Usages ===
v392 i460 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v375 values: i372 i7 i428  <|@  <|@
f <@~|@floating>@ <|@
tid j379 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
valueDescription: i64
=== Inputs ===
merge: v375 
values: j690 j694 j694 
=== Succesors ===
=== Usages ===
?381 v449 j446 j408 j410 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v375 values: j690 j694 j694  <|@  <|@
f <@~|@floating>@ <|@
tid j380 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
valueDescription: i64
=== Inputs ===
merge: v375 
values: j325 j414 j414 
=== Succesors ===
=== Usages ===
?381 j412 j413 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v375 values: j325 j414 j414  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 7.804833088787332
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 2
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v374 
=== Succesors ===
next: v391 
=== Usages ===
i376 i377 i378 j379 j380 v385 v397 v444 v898 v1425 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v374 #next: v391  <|@  <|@
f <@~|@floating>@ <|@
tid v382 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 916]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i377 
y: i8 
=== Succesors ===
=== Usages ===
v391 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i377 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 916]
stamp: void
trueSuccessorProbability: 0.9096921872746148
=== Inputs ===
condition: v382 
=== Succesors ===
trueSuccessor: v383 
falseSuccessor: v385 
=== Usages ===
=== Predecessor ===
v375 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v382 #trueSuccessor: v383 #falseSuccessor: v385  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B124" "B129" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617796602989612086
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 919]
stamp: void
=== Inputs ===
=== Succesors ===
next: v407 
=== Usages ===
=== Predecessor ===
v391 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v407  <|@  <|@
f <@~|@floating>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 921]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i378 
y: i8 
=== Succesors ===
=== Usages ===
v407 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i378 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v407 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 921]
stamp: void
trueSuccessorProbability: 0.9584277782398936
=== Inputs ===
condition: v392 
=== Succesors ===
trueSuccessor: v393 
falseSuccessor: v397 
=== Usages ===
=== Predecessor ===
v383 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v392 #trueSuccessor: v393 #falseSuccessor: v397  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B125" "B128" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617542572413107419
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v393 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:684) [bci: 924]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1426 
=== Usages ===
=== Predecessor ===
v407 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1426  <|@  <|@
tid ?381 <|@
d <@d|@=== Debug Properties ===
bci: 914
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 683
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i922 - - - - - - - i376 i8 i8 - - - - - j379 - j312 - j380 - j318 - 
=== Succesors ===
=== Usages ===
j408 j410 v1423 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i922 - - - - - - - i376 i8 i8 - - - - - j379 - j312 - j380 - j318 -  <|@  <|@
f <@~|@floating>@ <|@
tid v1140 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i376 
y: i1600 
=== Succesors ===
=== Usages ===
v1426 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i376 y: i1600  <|@  <|@
f <@*|@fixed>@ <|@
tid v1426 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1140 
=== Succesors ===
trueSuccessor: v1422 
falseSuccessor: v1425 
=== Usages ===
=== Predecessor ===
v393 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1140 #trueSuccessor: v1422 #falseSuccessor: v1425  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B126" "B127" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617542572413107419
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1422 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
stamp: void
=== Inputs ===
=== Succesors ===
next: j408 
=== Usages ===
v1135 
=== Predecessor ===
v1426 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j408  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j408 <|@
d <@d|@=== Debug Properties ===
canDeopt: true
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:684) [bci: 928]
op: DIV
stamp: i64
type: SIGNED
=== Inputs ===
stateBefore: ?381 
x: j379 
y: j312 
=== Succesors ===
next: j410 
=== Usages ===
i409 
=== Predecessor ===
v1422 >@ <|@
instruction <@/|@org.graalvm.compiler.nodes.calc.SignedDivNode>@ stateBefore: ?381 x: j379 y: j312 #next: j410  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j410 <|@
d <@d|@=== Debug Properties ===
canDeopt: true
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:685) [bci: 939]
op: REM
stamp: i64 [-9223372036854775807 - 9223372036854775806]
type: SIGNED
=== Inputs ===
stateBefore: ?381 
x: j379 
y: j312 
=== Succesors ===
next: v1135 
=== Usages ===
j693 j692 
=== Predecessor ===
j408 >@ <|@
instruction <@%|@org.graalvm.compiler.nodes.calc.SignedRemNode>@ stateBefore: ?381 x: j379 y: j312 #next: v1135  <|@  <|@
f <@~|@floating>@ <|@
tid v1622 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a1121 
index: i376 
=== Succesors ===
=== Usages ===
v1135 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1121 index: i376  <|@  <|@
f <@~|@floating>@ <|@
tid i409 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:684) [bci: 929]
resultBits: 32
stamp: i32
=== Inputs ===
value: j408 
=== Succesors ===
=== Usages ===
?907 i439 ?443 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j408  <|@  <|@
f <@~|@floating>@ <|@
tid i439 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1036]
stamp: i32
=== Inputs ===
x: i409 
y: i234 
=== Succesors ===
=== Usages ===
i440 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i409 y: i234  <|@  <|@
f <@~|@floating>@ <|@
tid i440 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1037]
resultBits: 16
stamp: i16
=== Inputs ===
value: i439 
=== Succesors ===
=== Usages ===
v1135 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i439  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1135 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1422 
address: v1622 
value: i440 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v420 
=== Usages ===
=== Predecessor ===
j410 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1422 address: v1622 value: i440 stateAfter: - lastLocationAccess: - #next: v420  <|@  <|@
f <@~|@floating>@ <|@
tid j692 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:685) [bci: 940]
stamp: i64 [-9223372036854775808 - 9223372036854775800] ⇈fffffffffffffff8
=== Inputs ===
x: j410 
y: i160 
=== Succesors ===
=== Usages ===
j694 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j410 y: i160  <|@  <|@
f <@~|@floating>@ <|@
tid j693 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:685) [bci: 940]
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j410 
y: i7 
=== Succesors ===
=== Usages ===
j694 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j410 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid j694 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:685) [bci: 940]
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j692 
y: j693 
=== Succesors ===
=== Usages ===
j379 v422 j425 j379 ?443 ?907 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j692 y: j693  <|@  <|@
f <@~|@floating>@ <|@
tid i438 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1029]
stamp: i32
=== Inputs ===
x: i376 
y: i7 
=== Succesors ===
=== Usages ===
?443 i376 ?907 i376 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i376 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid j412 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:686) [bci: 948]
stamp: i64 [-9223372036854775808 - 9223372036854775792] ⇈fffffffffffffff0
=== Inputs ===
x: j380 
y: i160 
=== Succesors ===
=== Usages ===
j414 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j380 y: i160  <|@  <|@
f <@~|@floating>@ <|@
tid j413 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:686) [bci: 948]
stamp: i64 [-9223372036854775808 - 9223372036854775804] ⇈fffffffffffffffc
=== Inputs ===
x: j380 
y: i7 
=== Succesors ===
=== Usages ===
j414 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j380 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid j414 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:686) [bci: 948]
stamp: i64 [-9223372036854775808 - 9223372036854775804] ⇈fffffffffffffffc
=== Inputs ===
x: j412 
y: j413 
=== Succesors ===
=== Usages ===
j380 v417 ?443 v422 j425 j380 ?907 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j412 y: j413  <|@  <|@
f <@~|@floating>@ <|@
tid v417 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:688) [bci: 978]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j414 
y: j280 
=== Succesors ===
=== Usages ===
v420 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j414 y: j280  <|@  <|@
f <@*|@fixed>@ <|@
tid v420 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:688) [bci: 978]
stamp: void
trueSuccessorProbability: 3.796929368977686E-4
=== Inputs ===
condition: v417 
=== Succesors ===
trueSuccessor: v418 
falseSuccessor: v419 
=== Usages ===
=== Predecessor ===
v1135 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v417 #trueSuccessor: v418 #falseSuccessor: v419  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B122" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4566700544116969831
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v418 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:697) [bci: 1017]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1303 
=== Usages ===
=== Predecessor ===
v420 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1303  <|@  <|@
tid ?443 <|@
d <@d|@=== Debug Properties ===
bci: 1039
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 700
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i922 - - - - - - - i438 i7 i7 - - i409 - - j694 - j312 - j414 - j318 - 
=== Succesors ===
=== Usages ===
v1303 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i922 - - - - - - - i438 i7 i7 - - i409 - - j694 - j312 - j414 - j318 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1303 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?443 
=== Succesors ===
next: v444 
=== Usages ===
=== Predecessor ===
v418 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?443 #next: v444  <|@  <|@
f <@*|@fixed>@ <|@
tid v444 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
stamp: void
=== Inputs ===
loopBegin: v375 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1303 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v375  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B122" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617540348720924481
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:689) [bci: 981]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1304 
=== Usages ===
=== Predecessor ===
v420 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1304  <|@  <|@
f <@~|@floating>@ <|@
tid v422 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:689) [bci: 986]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j694 
y: j414 
=== Succesors ===
=== Usages ===
i423 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j694 y: j414  <|@  <|@
f <@~|@floating>@ <|@
tid i423 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:689) [bci: 986]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v422 
trueValue: i7 
falseValue: i8 
=== Succesors ===
=== Usages ===
i377 ?907 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v422 trueValue: i7 falseValue: i8  <|@  <|@
f <@~|@floating>@ <|@
tid j425 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:690) [bci: 1000]
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j414 
y: j694 
=== Succesors ===
=== Usages ===
v427 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j414 y: j694  <|@  <|@
f <@~|@floating>@ <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:690) [bci: 1004]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j318 
y: j425 
=== Succesors ===
=== Usages ===
i428 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j318 y: j425  <|@  <|@
f <@~|@floating>@ <|@
tid i428 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:690) [bci: 1004]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v427 
trueValue: i7 
falseValue: i8 
=== Succesors ===
=== Usages ===
i378 ?907 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v427 trueValue: i7 falseValue: i8  <|@  <|@
tid ?907 <|@
d <@d|@=== Debug Properties ===
bci: 1039
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 700
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i922 - - - - - - - i438 i423 i428 - - i409 - - j694 - j312 - j414 - j318 - 
=== Succesors ===
=== Usages ===
v1304 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i922 - - - - - - - i438 i423 i428 - - i409 - - j694 - j312 - j414 - j318 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1304 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?907 
=== Succesors ===
next: v898 
=== Usages ===
=== Predecessor ===
v419 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?907 #next: v898  <|@  <|@
f <@*|@fixed>@ <|@
tid v898 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 1
stamp: void
=== Inputs ===
loopBegin: v375 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1304 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v375  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1425 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v375 
=== Succesors ===
next: v1423 
=== Usages ===
=== Predecessor ===
v1426 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v375 #next: v1423  <|@  <|@
f <@*|@fixed>@ <|@
tid v1423 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1301
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
reason: BoundsCheckException
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?381 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1425 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?381  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B131" 
    xhandlers
    flags 
    probability 4597296998738684756
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v397 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:702) [bci: 1042]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v375 
=== Succesors ===
next: v396 
=== Usages ===
=== Predecessor ===
v407 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v375 #next: v396  <|@  <|@
f <@*|@fixed>@ <|@
tid v396 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:702) [bci: 1042]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v395 
=== Predecessor ===
v397 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B131" 
    xhandlers
    flags 
    probability 4603028144822704448
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v385 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:702) [bci: 1042]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v375 
=== Succesors ===
next: v394 
=== Usages ===
=== Predecessor ===
v391 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v375 #next: v394  <|@  <|@
f <@*|@fixed>@ <|@
tid v394 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:702) [bci: 1042]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v395 
=== Predecessor ===
v385 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B130" "B129" 
    successors "B168" 
    xhandlers
    flags 
    probability 4605060389434741781
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:702) [bci: 1042]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v394 v396 
=== Succesors ===
next: v1149 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v394 v396 #next: v1149  <|@  <|@
f <@~|@floating>@ <|@
tid v449 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:703) [bci: 1056]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j379 
y: j278 
=== Succesors ===
=== Usages ===
i450 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j379 y: j278  <|@  <|@
f <@~|@floating>@ <|@
tid i450 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:703) [bci: 1056]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v449 
trueValue: i7 
falseValue: i8 
=== Succesors ===
=== Usages ===
i1148 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v449 trueValue: i7 falseValue: i8  <|@  <|@
f <@~|@floating>@ <|@
tid i1148 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:703) [bci: 1064]
resultBits: 8
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i450 
=== Succesors ===
=== Usages ===
v1149 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i450  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1149 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: FloatingDecimal$BinaryToASCIIBuffer.exactDecimalConversion
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:703) [bci: 1064]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1607 
value: i1148 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v456 
=== Usages ===
=== Predecessor ===
v395 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1607 value: i1148 stateAfter: - lastLocationAccess: - #next: v456  <|@  <|@
f <@~|@floating>@ <|@
tid j446 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:702) [bci: 1045]
stamp: i64 [-9223372036854775808 - 9223372036854775804] ⇈fffffffffffffffc
=== Inputs ===
x: j379 
y: i7 
=== Succesors ===
=== Usages ===
j447 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j379 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid j447 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:702) [bci: 1048]
stamp: i64
=== Inputs ===
x: j446 
y: j318 
=== Succesors ===
=== Usages ===
j461 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j446 y: j318  <|@  <|@
f <@*|@fixed>@ <|@
tid v456 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:760) [bci: 1426]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v455 
=== Predecessor ===
v1149 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1400 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:653) [bci: 746]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1565 
=== Usages ===
=== Predecessor ===
v1401 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1565  <|@  <|@
f <@~|@floating>@ <|@
tid i1566 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -284699
stableDimension: 0
stamp: i32 [-284699] ⇊00000000fffba7e5 ⇈00000000fffba7e5
stampKind: i32
value: int[-284699|0xfffffffffffba7e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1550 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1565 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1547 
=== Predecessor ===
v1400 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1396 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:652) [bci: 734]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1563 
=== Usages ===
=== Predecessor ===
v1397 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1563  <|@  <|@
f <@~|@floating>@ <|@
tid i1564 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -282651
stableDimension: 0
stamp: i32 [-282651] ⇊00000000fffbafe5 ⇈00000000fffbafe5
stampKind: i32
value: int[-282651|0xfffffffffffbafe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1550 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1563 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1547 
=== Predecessor ===
v1396 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B105" "B100" "B99" "B98" "B75" "B133" "B132" "B77" "B110" "B80" "B97" "B82" "B84" "B86" "B88" 
    successors 
    xhandlers
    flags 
    probability 2372834053670830080
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1550 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-322075 - -268051] ⇊00000000fffb00e5 ⇈00000000fffbfffd
valueDescription: i32
=== Inputs ===
merge: v1547 
values: i1554 i1556 i1558 i1560 i1562 i1564 i1566 i1570 i1572 i1574 i1576 i1578 i1580 i1582 i1584 
=== Succesors ===
=== Usages ===
v1552 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1547 values: i1554 i1556 i1558 i1560 i1562 i1564 i1566 i1570 i1572 i1574 i1576 i1578 i1580 i1582 i1584  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1547 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1553 v1555 v1557 v1559 v1561 v1563 v1565 v1569 v1571 v1573 v1575 v1577 v1579 v1581 v1583 
=== Succesors ===
next: v1552 
=== Usages ===
i1550 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1553 v1555 v1557 v1559 v1561 v1563 v1565 v1569 v1571 v1573 v1575 v1577 v1579 v1581 v1583 #next: v1552  <|@  <|@
f <@*|@fixed>@ <|@
tid v1552 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?884 
actionAndReason: i1550 
speculation: a1503 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1547 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?884 actionAndReason: i1550 speculation: a1503  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B137" 
    xhandlers
    flags 
    probability 4582924406890760886
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1070]
stamp: void
=== Inputs ===
=== Succesors ===
next: v193 
=== Usages ===
=== Predecessor ===
v195 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v193  <|@  <|@
f <@*|@fixed>@ <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1070]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v192 
=== Predecessor ===
v194 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B137" 
    xhandlers
    flags 
    probability 4513412961163892986
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1070]
stamp: void
=== Inputs ===
=== Succesors ===
next: v191 
=== Usages ===
=== Predecessor ===
v188 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v191  <|@  <|@
f <@*|@fixed>@ <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1070]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v192 
=== Predecessor ===
v187 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" "B135" "B64" 
    successors "B138" "B141" 
    xhandlers
    flags 
    probability 4585327503373534833
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1070]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v191 v193 v874 
=== Succesors ===
next: a464 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v191 v193 v874 #next: a464  <|@  <|@
tid v1165 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1074]
returnStamp: a# Lsun/misc/FDBigInteger;
signature: [Ljdk.vm.ci.meta.JavaType;@144cdb81
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.valueOfPow52(int, int)>
=== Inputs ===
arguments: i796 i150 
=== Succesors ===
=== Usages ===
a464 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: i796 i150  <|@  <|@
tid ?1476 <|@
d <@d|@=== Debug Properties ===
bci: 1074
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 710
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - j121 - - i5 - - - i777 i149 i794 i150 i796 i798 i794 - - - - - - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
a464 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - j121 - - i5 - - - i777 i149 i794 i150 i796 i798 i794 - - - - - - - - - - - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a464 <|@
d <@d|@=== Debug Properties ===
bci: 1074
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1074]
polymorphic: false
stamp: a# Lsun/misc/FDBigInteger;
targetMethod: Direct#FDBigInteger.valueOfPow52
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1165 
stateDuring: ?1476 
=== Succesors ===
next: v1633 
=== Usages ===
v1169 v1170 ?1477 v1633 
=== Predecessor ===
v192 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1165 stateDuring: ?1476 #next: v1633  <|@  <|@
tid ?465 <|@
d <@d|@=== Debug Properties ===
bci: 1077
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1074]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 710
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 - j121 - - i5 - - - i777 i149 i794 i150 i796 i798 i794 - - - - - - - - - - - - - - - - - a1503 
=== Succesors ===
=== Usages ===
v1633 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - j121 - - i5 - - - i777 i149 i794 i150 i796 i798 i794 - - - - - - - - - - - - - - - - - a1503  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1633 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?465 
object: a464 
=== Succesors ===
next: i467 
=== Usages ===
=== Predecessor ===
a464 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?465 object: a464 #next: i467  <|@  <|@
tid v1169 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:711) [bci: 1081]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@6f75b08d
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.getNormalizationBias()>
=== Inputs ===
arguments: a464 
=== Succesors ===
=== Usages ===
i467 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a464  <|@  <|@
tid ?1477 <|@
d <@d|@=== Debug Properties ===
bci: 1081
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 711
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - j121 - - i5 - - - i777 i149 i794 i150 i796 i798 i794 - - - - - - - - - a464 - - - - - - - 
=== Succesors ===
=== Usages ===
i467 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - j121 - - i5 - - - i777 i149 i794 i150 i796 i798 i794 - - - - - - - - - a464 - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i467 <|@
d <@d|@=== Debug Properties ===
bci: 1081
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:711) [bci: 1081]
polymorphic: false
stamp: i32
targetMethod: Direct#FDBigInteger.getNormalizationBias
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1169 
stateDuring: ?1477 
=== Succesors ===
next: a470 
=== Usages ===
?1480 v1170 ?1479 i472 ?475 i477 ?1478 i482 
=== Predecessor ===
v1633 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1169 stateDuring: ?1477 #next: a470  <|@  <|@
tid v1170 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:712) [bci: 1090]
returnStamp: a# Lsun/misc/FDBigInteger;
signature: [Ljdk.vm.ci.meta.JavaType;@5ccb4788
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.leftShift(int)>
=== Inputs ===
arguments: a464 i467 
=== Succesors ===
=== Usages ===
a470 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a464 i467  <|@  <|@
tid ?1478 <|@
d <@d|@=== Debug Properties ===
bci: 1090
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 712
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - j121 - - i5 - - - i777 i149 i794 i150 i796 i798 i794 - - - - - - - - - - i467 - - - - - - 
=== Succesors ===
=== Usages ===
a470 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - j121 - - i5 - - - i777 i149 i794 i150 i796 i798 i794 - - - - - - - - - - i467 - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a470 <|@
d <@d|@=== Debug Properties ===
bci: 1090
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:712) [bci: 1090]
polymorphic: false
stamp: a# Lsun/misc/FDBigInteger;
targetMethod: Direct#FDBigInteger.leftShift
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1170 
stateDuring: ?1478 
=== Succesors ===
next: a474 
=== Usages ===
?1488 ?475 ?1487 ?486 v1177 ?1486 ?1485 ?1484 ?514 ?1483 ?1482 ?594 ?1481 ?555 v1183 ?1480 ?1479 
=== Predecessor ===
i467 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1170 stateDuring: ?1478 #next: a474  <|@  <|@
f <@~|@floating>@ <|@
tid i472 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:714) [bci: 1102]
stamp: i32
=== Inputs ===
x: i149 
y: i467 
=== Succesors ===
=== Usages ===
v1171 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i149 y: i467  <|@  <|@
tid v1171 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:714) [bci: 1103]
returnStamp: a# Lsun/misc/FDBigInteger;
signature: [Ljdk.vm.ci.meta.JavaType;@3ae505c0
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.valueOfMulPow52(long, int, int)>
=== Inputs ===
arguments: j121 i794 i472 
=== Succesors ===
=== Usages ===
a474 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: j121 i794 i472  <|@  <|@
tid ?1479 <|@
d <@d|@=== Debug Properties ===
bci: 1103
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 714
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i5 - - - i777 - - i150 i796 i798 i794 - - - - - - - - - a470 i467 - - - - - - 
=== Succesors ===
=== Usages ===
a474 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i5 - - - i777 - - i150 i796 i798 i794 - - - - - - - - - a470 i467 - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a474 <|@
d <@d|@=== Debug Properties ===
bci: 1103
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:714) [bci: 1103]
polymorphic: false
stamp: a# Lsun/misc/FDBigInteger;
targetMethod: Direct#FDBigInteger.valueOfMulPow52
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1171 
stateDuring: ?1479 
=== Succesors ===
next: v1634 
=== Usages ===
a1299 ?1488 ?486 a1299 ?1487 v1634 ?1486 v1182 ?1485 ?514 ?1484 ?1483 ?1480 ?1482 ?555 v1189 ?594 ?1481 v1177 v1178 v1183 v1188 v1212 
=== Predecessor ===
a470 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1171 stateDuring: ?1479 #next: v1634  <|@  <|@
tid ?475 <|@
d <@d|@=== Debug Properties ===
bci: 1106
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:714) [bci: 1103]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 714
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i5 - - - i777 - - i150 i796 i798 i794 - - - - - - - - - a470 i467 - - - - - - a1503 
=== Succesors ===
=== Usages ===
v1634 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i5 - - - i777 - - i150 i796 i798 i794 - - - - - - - - - a470 i467 - - - - - - a1503  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1634 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?475 
object: a474 
=== Succesors ===
next: a480 
=== Usages ===
=== Predecessor ===
a474 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?475 object: a474 #next: a480  <|@  <|@
f <@~|@floating>@ <|@
tid i477 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:715) [bci: 1116]
stamp: i32
=== Inputs ===
x: i467 
y: i798 
=== Succesors ===
=== Usages ===
i478 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i467 y: i798  <|@  <|@
f <@~|@floating>@ <|@
tid i478 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:715) [bci: 1118]
stamp: i32
=== Inputs ===
x: i477 
y: i7 
=== Succesors ===
=== Usages ===
v1172 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i477 y: i7  <|@  <|@
tid v1172 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:715) [bci: 1119]
returnStamp: a# Lsun/misc/FDBigInteger;
signature: [Ljdk.vm.ci.meta.JavaType;@480751ce
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.valueOfPow52(int, int)>
=== Inputs ===
arguments: i850 i478 
=== Succesors ===
=== Usages ===
a480 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: i850 i478  <|@  <|@
tid ?1480 <|@
d <@d|@=== Debug Properties ===
bci: 1119
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 715
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i5 - - - i777 - - i150 i796 - - - - - - - - - - - a470 i467 a474 - - - - - 
=== Succesors ===
=== Usages ===
a480 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i5 - - - i777 - - i150 i796 - - - - - - - - - - - a470 i467 a474 - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a480 <|@
d <@d|@=== Debug Properties ===
bci: 1119
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:715) [bci: 1119]
polymorphic: false
stamp: a# Lsun/misc/FDBigInteger;
targetMethod: Direct#FDBigInteger.valueOfPow52
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1172 
stateDuring: ?1480 
=== Succesors ===
next: a485 
=== Usages ===
?1484 ?486 ?1483 v1178 ?1482 v1182 ?1481 ?514 a554 
=== Predecessor ===
v1634 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1172 stateDuring: ?1480 #next: a485  <|@  <|@
f <@~|@floating>@ <|@
tid i482 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:717) [bci: 1132]
stamp: i32
=== Inputs ===
x: i150 
y: i467 
=== Succesors ===
=== Usages ===
i483 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i150 y: i467  <|@  <|@
f <@~|@floating>@ <|@
tid i483 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:717) [bci: 1134]
stamp: i32
=== Inputs ===
x: i482 
y: i7 
=== Succesors ===
=== Usages ===
v1173 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i482 y: i7  <|@  <|@
tid v1173 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:717) [bci: 1135]
returnStamp: a# Lsun/misc/FDBigInteger;
signature: [Ljdk.vm.ci.meta.JavaType;@a34619b
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.valueOfPow52(int, int)>
=== Inputs ===
arguments: i854 i483 
=== Succesors ===
=== Usages ===
a485 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: i854 i483  <|@  <|@
tid ?1481 <|@
d <@d|@=== Debug Properties ===
bci: 1135
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 717
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i5 - - - i777 - - - - - - - - - - - - - - - a470 - a474 a480 - - - - 
=== Succesors ===
=== Usages ===
a485 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i5 - - - i777 - - - - - - - - - - - - - - - a470 - a474 a480 - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a485 <|@
d <@d|@=== Debug Properties ===
bci: 1135
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:717) [bci: 1135]
polymorphic: false
stamp: a# Lsun/misc/FDBigInteger;
targetMethod: Direct#FDBigInteger.valueOfPow52
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1173 
stateDuring: ?1481 
=== Succesors ===
next: v1635 
=== Usages ===
v1182 ?1489 ?1488 v1189 ?1487 ?514 ?1486 ?1485 v1216 ?1484 ?555 ?620 v1635 ?1483 ?1482 ?594 
=== Predecessor ===
a480 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1173 stateDuring: ?1481 #next: v1635  <|@  <|@
tid ?486 <|@
d <@d|@=== Debug Properties ===
bci: 1138
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:717) [bci: 1135]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 717
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i5 - - - i777 - - - - - - - - - - - - - - - a470 - a474 a480 - - - - a1503 
=== Succesors ===
=== Usages ===
v1635 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i5 - - - i777 - - - - - - - - - - - - - - - a470 - a474 a480 - - - - a1503  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1635 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?486 
object: a485 
=== Succesors ===
next: i488 
=== Usages ===
=== Predecessor ===
a485 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?486 object: a485 #next: i488  <|@  <|@
tid v1177 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:724) [bci: 1147]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@c459052
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.quoRemIteration(FDBigInteger)>
=== Inputs ===
arguments: a474 a470 
=== Succesors ===
=== Usages ===
i488 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a474 a470  <|@  <|@
tid ?1482 <|@
d <@d|@=== Debug Properties ===
bci: 1147
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 724
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i5 - - - i777 - - - - - - - i8 - - - - - - - a470 - a474 a480 a485 - - - 
=== Succesors ===
=== Usages ===
i488 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i5 - - - i777 - - - - - - - i8 - - - - - - - a470 - a474 a480 a485 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i488 <|@
d <@d|@=== Debug Properties ===
bci: 1147
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:724) [bci: 1147]
polymorphic: false
stamp: i32
targetMethod: Direct#FDBigInteger.quoRemIteration
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1177 
stateDuring: ?1482 
=== Succesors ===
next: i491 
=== Usages ===
?1484 ?1483 i516 v503 ?514 
=== Predecessor ===
v1635 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1177 stateDuring: ?1482 #next: i491  <|@  <|@
tid v1178 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:725) [bci: 1156]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@1e1c4f1f
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)>
=== Inputs ===
arguments: a474 a480 
=== Succesors ===
=== Usages ===
i491 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a474 a480  <|@  <|@
tid ?1483 <|@
d <@d|@=== Debug Properties ===
bci: 1156
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 725
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i5 - - - i777 - - - - - - - i8 - - - - i488 - - a470 - a474 a480 a485 - - - 
=== Succesors ===
=== Usages ===
i491 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i5 - - - i777 - - - - - - - i8 - - - - i488 - - a470 - a474 a480 a485 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i491 <|@
d <@d|@=== Debug Properties ===
bci: 1156
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:725) [bci: 1156]
polymorphic: false
stamp: i32
targetMethod: Direct#FDBigInteger.cmp
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1178 
stateDuring: ?1483 
=== Succesors ===
next: i497 
=== Usages ===
v493 
=== Predecessor ===
i488 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1178 stateDuring: ?1483 #next: i497  <|@  <|@
tid v1182 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:726) [bci: 1175]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@6c67e433
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)>
=== Inputs ===
arguments: a485 a474 a480 
=== Succesors ===
=== Usages ===
i497 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a485 a474 a480  <|@  <|@
f <@~|@floating>@ <|@
tid v493 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:725) [bci: 1159]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i491 
y: i8 
=== Succesors ===
=== Usages ===
i494 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i491 y: i8  <|@  <|@
f <@~|@floating>@ <|@
tid i494 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:725) [bci: 1159]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v493 
trueValue: i7 
falseValue: i8 
=== Succesors ===
=== Usages ===
?1484 ?514 i546 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v493 trueValue: i7 falseValue: i8  <|@  <|@
tid ?1484 <|@
d <@d|@=== Debug Properties ===
bci: 1175
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 726
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i5 - - - i777 - - - - - - - i8 i494 - - - i488 - - a470 - a474 a480 a485 - - - 
=== Succesors ===
=== Usages ===
i497 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i5 - - - i777 - - - - - - - i8 i494 - - - i488 - - a470 - a474 a480 a485 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i497 <|@
d <@d|@=== Debug Properties ===
bci: 1175
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:726) [bci: 1175]
polymorphic: false
stamp: i32
targetMethod: Direct#FDBigInteger.addAndCmp
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1182 
stateDuring: ?1484 
=== Succesors ===
next: v506 
=== Usages ===
v499 
=== Predecessor ===
i491 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1182 stateDuring: ?1484 #next: v506  <|@  <|@
f <@~|@floating>@ <|@
tid v499 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:726) [bci: 1178]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i497 
y: i7 
=== Succesors ===
=== Usages ===
i500 v512 i1585 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i497 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid v503 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:729) [bci: 1213]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i488 
y: i8 
=== Succesors ===
=== Usages ===
v506 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i488 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v506 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:729) [bci: 1213]
stamp: void
trueSuccessorProbability: 0.10979929161747348
=== Inputs ===
condition: v503 
=== Succesors ===
trueSuccessor: v504 
falseSuccessor: v505 
=== Usages ===
=== Predecessor ===
i497 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v503 #trueSuccessor: v504 #falseSuccessor: v505  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B137" 
    successors "B139" "B140" 
    xhandlers
    flags 
    probability 4571188406639254207
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v504 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:729) [bci: 1216]
stamp: void
=== Inputs ===
=== Succesors ===
next: v512 
=== Usages ===
=== Predecessor ===
v506 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v512  <|@  <|@
f <@*|@fixed>@ <|@
tid v512 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:729) [bci: 1218]
stamp: void
trueSuccessorProbability: 0.2831541218637993
=== Inputs ===
condition: v499 
=== Succesors ===
trueSuccessor: v511 
falseSuccessor: v510 
=== Usages ===
=== Predecessor ===
v504 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v499 #trueSuccessor: v511 #falseSuccessor: v510  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B138" 
    successors "B142" 
    xhandlers
    flags 
    probability 4562783071993710838
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v511 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1227]
stamp: void
=== Inputs ===
=== Succesors ===
next: v509 
=== Usages ===
=== Predecessor ===
v512 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v509  <|@  <|@
f <@*|@fixed>@ <|@
tid v509 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1227]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v508 
=== Predecessor ===
v511 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B138" 
    successors "B145" 
    xhandlers
    flags 
    probability 4568653066950070531
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v510 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:731) [bci: 1221]
stamp: void
=== Inputs ===
=== Succesors ===
next: v521 
=== Usages ===
=== Predecessor ===
v512 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v521  <|@  <|@
f <@~|@floating>@ <|@
tid i1586 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:670) [bci: 867]
stamp: i32
=== Inputs ===
x: i777 
y: i17 
=== Succesors ===
=== Usages ===
i524 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i777 y: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v521 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1243]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v522 
=== Predecessor ===
v510 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B137" 
    successors "B142" 
    xhandlers
    flags 
    probability 4584760205312838425
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v505 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1227]
stamp: void
=== Inputs ===
=== Succesors ===
next: v507 
=== Usages ===
=== Predecessor ===
v506 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v507  <|@  <|@
f <@*|@fixed>@ <|@
tid v507 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1227]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v508 
=== Predecessor ===
v505 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" "B139" 
    successors "B143" "B144" 
    xhandlers
    flags 
    probability 4584920838097049953
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v508 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1227]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v507 v509 
=== Succesors ===
next: a1601 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v507 v509 #next: a1601  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1601 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.digits
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1228]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v1616 
=== Succesors ===
next: i1602 
=== Usages ===
v1626 v1625 
=== Predecessor ===
v508 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1616 #next: i1602  <|@  <|@
f <@~|@floating>@ <|@
tid i500 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:726) [bci: 1178]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v499 
trueValue: i7 
falseValue: i8 
=== Succesors ===
=== Usages ===
?514 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v499 trueValue: i7 falseValue: i8  <|@  <|@
tid ?514 <|@
d <@d|@=== Debug Properties ===
bci: 1227
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 733
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i5 - - - i777 - - - - - - - i8 i494 i500 - - i488 - - a470 - a474 a480 a485 - - - 
=== Succesors ===
=== Usages ===
v1536 i1602 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i5 - - - i777 - - - - - - - i8 i494 i500 - - i488 - - a470 - a474 a480 a485 - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v1625 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1601 
=== Succesors ===
=== Usages ===
i1602 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1601  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1602 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1242]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?514 
guard: - 
address: v1625 
=== Succesors ===
next: v1446 
=== Usages ===
v1224 
=== Predecessor ===
a1601 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?514 guard: - address: v1625 #next: v1446  <|@  <|@
f <@~|@floating>@ <|@
tid v1224 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1242]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1602 
y: i8 
=== Succesors ===
=== Usages ===
v1446 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1602 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v1446 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1242]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1224 
=== Succesors ===
trueSuccessor: v1445 
falseSuccessor: v1443 
=== Usages ===
=== Predecessor ===
i1602 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1224 #trueSuccessor: v1445 #falseSuccessor: v1443  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1445 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1242]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1536 
=== Usages ===
=== Predecessor ===
v1446 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1536  <|@  <|@
f <@~|@floating>@ <|@
tid i1538 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -322587
stableDimension: 0
stamp: i32 [-322587] ⇊00000000fffb13e5 ⇈00000000fffb13e5
stampKind: i32
value: int[-322587|0xfffffffffffb13e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1536 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1536 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?514 
actionAndReason: i1538 
speculation: a1503 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1445 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?514 actionAndReason: i1538 speculation: a1503  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B145" 
    xhandlers
    flags 
    probability 4584920838097049953
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1443 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1242]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1229 
=== Usages ===
v1229 
=== Predecessor ===
v1446 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1229  <|@  <|@
f <@~|@floating>@ <|@
tid v1626 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1601 
=== Succesors ===
=== Usages ===
v1229 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1601  <|@  <|@
f <@~|@floating>@ <|@
tid i516 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1240]
stamp: i32
=== Inputs ===
x: i488 
y: i234 
=== Succesors ===
=== Usages ===
i517 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i488 y: i234  <|@  <|@
f <@~|@floating>@ <|@
tid i517 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1241]
resultBits: 16
stamp: i16
=== Inputs ===
value: i516 
=== Succesors ===
=== Usages ===
v1229 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i516  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1229 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1242]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1443 
address: v1626 
value: i517 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v523 
=== Usages ===
=== Predecessor ===
v1443 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1443 address: v1626 value: i517 stateAfter: - lastLocationAccess: - #next: v523  <|@  <|@
f <@*|@fixed>@ <|@
tid v523 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1243]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v522 
=== Predecessor ===
v1229 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B140" "B144" 
    successors "B146" "B147" 
    xhandlers
    flags 
    probability 4585327503373534833
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i524 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1243]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v522 
values: i1586 i777 
=== Succesors ===
=== Usages ===
?1491 v530 v537 i457 ?1490 ?555 ?636 ?620 ?1489 ?1488 ?1487 ?594 ?1486 ?1485 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v522 values: i1586 i777  <|@  <|@
f <@~|@floating>@ <|@
tid i525 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1243]
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v522 
values: i8 i7 
=== Succesors ===
=== Usages ===
i551 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v522 values: i8 i7  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v522 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1243]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v521 v523 
=== Succesors ===
next: v529 
=== Usages ===
i524 i525 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v521 v523 #next: v529  <|@  <|@
f <@*|@fixed>@ <|@
tid v529 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1245]
stamp: void
trueSuccessorProbability: 0.0448642266824085
=== Inputs ===
condition: v241 
=== Succesors ===
trueSuccessor: v527 
falseSuccessor: v528 
=== Usages ===
=== Predecessor ===
v522 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v241 #trueSuccessor: v527 #falseSuccessor: v528  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B145" 
    successors "B152" 
    xhandlers
    flags 
    probability 4565060397542026164
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v527 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:742) [bci: 1262]
stamp: void
=== Inputs ===
=== Succesors ===
next: v545 
=== Usages ===
=== Predecessor ===
v529 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v545  <|@  <|@
f <@*|@fixed>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1268]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v544 
=== Predecessor ===
v527 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B145" 
    successors "B148" "B149" 
    xhandlers
    flags 
    probability 4585095704165938451
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v528 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1248]
stamp: void
=== Inputs ===
=== Succesors ===
next: v536 
=== Usages ===
=== Predecessor ===
v529 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v536  <|@  <|@
f <@~|@floating>@ <|@
tid v530 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1252]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i524 
y: i243 
=== Succesors ===
=== Usages ===
v536 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i524 y: i243  <|@  <|@
f <@*|@fixed>@ <|@
tid v536 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1252]
stamp: void
trueSuccessorProbability: 0.2735887927482489
=== Inputs ===
condition: v530 
=== Succesors ===
trueSuccessor: v535 
falseSuccessor: v534 
=== Usages ===
=== Predecessor ===
v528 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v530 #trueSuccessor: v535 #falseSuccessor: v534  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B147" 
    successors "B152" 
    xhandlers
    flags 
    probability 4576554136652772647
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v535 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:742) [bci: 1262]
stamp: void
=== Inputs ===
=== Succesors ===
next: v696 
=== Usages ===
=== Predecessor ===
v536 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v696  <|@  <|@
f <@*|@fixed>@ <|@
tid v696 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:742) [bci: 1262]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v544 
=== Predecessor ===
v535 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B147" 
    successors "B150" "B151" 
    xhandlers
    flags 
    probability 4582826730232852371
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v534 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1255]
stamp: void
=== Inputs ===
=== Succesors ===
next: v541 
=== Usages ===
=== Predecessor ===
v536 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v541  <|@  <|@
f <@~|@floating>@ <|@
tid v537 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1259]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i524 
y: i246 
=== Succesors ===
=== Usages ===
v541 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i524 y: i246  <|@  <|@
f <@*|@fixed>@ <|@
tid v541 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1259]
stamp: void
trueSuccessorProbability: 0.998298355076574
=== Inputs ===
condition: v537 
=== Succesors ===
trueSuccessor: v538 
falseSuccessor: v540 
=== Usages ===
=== Predecessor ===
v534 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v537 #trueSuccessor: v538 #falseSuccessor: v540  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B149" 
    successors "B152" 
    xhandlers
    flags 
    probability 4582814530274557825
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v538 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1268]
stamp: void
=== Inputs ===
=== Succesors ===
next: v543 
=== Usages ===
=== Predecessor ===
v541 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v543  <|@  <|@
f <@~|@floating>@ <|@
tid i1585 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:726) [bci: 1178]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v499 
trueValue: i7 
falseValue: i8 
=== Succesors ===
=== Usages ===
i547 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v499 trueValue: i7 falseValue: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v543 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1268]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v544 
=== Predecessor ===
v538 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B149" 
    successors "B152" 
    xhandlers
    flags 
    probability 4541371203408897121
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v540 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:742) [bci: 1262]
stamp: void
=== Inputs ===
=== Succesors ===
next: v695 
=== Usages ===
=== Predecessor ===
v541 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v695  <|@  <|@
f <@*|@fixed>@ <|@
tid v695 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:742) [bci: 1262]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v544 
=== Predecessor ===
v540 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B150" "B146" "B151" "B148" 
    successors "B153" 
    xhandlers
    flags 
    probability 4585327503373534833
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i546 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1268]
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v544 
values: i494 i8 i8 i8 
=== Succesors ===
=== Usages ===
i552 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v544 values: i494 i8 i8 i8  <|@  <|@
f <@~|@floating>@ <|@
tid i547 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1268]
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v544 
values: i1585 i8 i8 i8 
=== Succesors ===
=== Usages ===
i553 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v544 values: i1585 i8 i8 i8  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v544 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1268]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v543 v545 v695 v696 
=== Succesors ===
next: v549 
=== Usages ===
i546 i547 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v543 v545 v695 v696 #next: v549  <|@  <|@
tid v1183 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:745) [bci: 1282]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@45f6789d
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.quoRemIteration(FDBigInteger)>
=== Inputs ===
arguments: a474 a470 
=== Succesors ===
=== Usages ===
i580 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a474 a470  <|@  <|@
f <@*|@fixed>@ <|@
tid v549 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1268]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v550 
=== Predecessor ===
v544 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B152" "B156" 
    successors "B154" "B159" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4603466648196344439
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i551 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v550 
values: i525 i599 
=== Succesors ===
=== Usages ===
?555 ?1485 ?636 ?1491 ?1490 ?1489 ?594 i599 v1624 v1197 ?1488 ?620 ?1487 i458 ?1486 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v550 values: i525 i599  <|@  <|@
f <@~|@floating>@ <|@
tid i552 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v550 
values: i546 i590 
=== Succesors ===
=== Usages ===
?1490 v556 ?636 i459 ?1491 ?1489 ?620 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v550 values: i546 i590  <|@  <|@
f <@~|@floating>@ <|@
tid i553 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v550 
values: i547 i596 
=== Succesors ===
=== Usages ===
?1490 i460 v565 ?636 ?1491 ?1489 ?620 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v550 values: i547 i596  <|@  <|@
f <@~|@floating>@ <|@
tid a554 <|@
d <@d|@=== Debug Properties ===
stamp: a# Lsun/misc/FDBigInteger;
valueDescription: a -
=== Inputs ===
merge: v550 
values: a480 a584 
=== Succesors ===
=== Usages ===
v1636 ?1485 v1187 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v550 values: a480 a584  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v550 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 16.386309992132176
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1268]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v549 
=== Succesors ===
next: v564 
=== Usages ===
i551 i552 i553 a554 v559 v570 v605 v1460 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v549 #next: v564  <|@  <|@
f <@~|@floating>@ <|@
tid v565 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1275]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i553 
y: i8 
=== Succesors ===
=== Usages ===
v578 v610 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i553 y: i8  <|@  <|@
f <@~|@floating>@ <|@
tid v556 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1270]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i552 
y: i8 
=== Succesors ===
=== Usages ===
v564 v617 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i552 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v564 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1270]
stamp: void
trueSuccessorProbability: 0.9449992797810535
=== Inputs ===
condition: v556 
=== Succesors ===
trueSuccessor: v557 
falseSuccessor: v559 
=== Usages ===
=== Predecessor ===
v550 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v556 #trueSuccessor: v557 #falseSuccessor: v559  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B153" 
    successors "B155" "B158" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4603175615809548529
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v557 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1273]
stamp: void
=== Inputs ===
=== Succesors ===
next: v578 
=== Usages ===
=== Predecessor ===
v564 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v578  <|@  <|@
f <@*|@fixed>@ <|@
tid v578 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1275]
stamp: void
trueSuccessorProbability: 0.9936234534969387
=== Inputs ===
condition: v565 
=== Succesors ===
trueSuccessor: v566 
falseSuccessor: v570 
=== Usages ===
=== Predecessor ===
v557 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v565 #trueSuccessor: v566 #falseSuccessor: v570  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B154" 
    successors "B156" "B157" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4603143730550235664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v566 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:745) [bci: 1278]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1636 
=== Usages ===
=== Predecessor ===
v578 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1636  <|@  <|@
tid ?555 <|@
d <@d|@=== Debug Properties ===
bci: 1268
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 744
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i524 - - - - - - - i551 i8 i8 - - - - - a470 - a474 a1503 a485 - - - 
=== Succesors ===
=== Usages ===
v1636 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i524 - - - - - - - i551 i8 i8 - - - - - a470 - a474 a1503 a485 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1636 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?555 
object: a554 
=== Succesors ===
next: i580 
=== Usages ===
=== Predecessor ===
v566 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?555 object: a554 #next: i580  <|@  <|@
tid ?1485 <|@
d <@d|@=== Debug Properties ===
bci: 1282
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 745
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i524 - - - - - - - i551 - - - - - - - a470 - a474 a554 a485 - - - 
=== Succesors ===
=== Usages ===
i580 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i524 - - - - - - - i551 - - - - - - - a470 - a474 a554 a485 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i580 <|@
d <@d|@=== Debug Properties ===
bci: 1282
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:745) [bci: 1282]
polymorphic: false
stamp: i32
targetMethod: Direct#FDBigInteger.quoRemIteration
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1183 
stateDuring: ?1485 
=== Succesors ===
next: a584 
=== Usages ===
?1488 ?1487 ?1486 ?594 i600 
=== Predecessor ===
v1636 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1183 stateDuring: ?1485 #next: a584  <|@  <|@
tid v1187 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:747) [bci: 1312]
returnStamp: a# Lsun/misc/FDBigInteger;
signature: [Ljdk.vm.ci.meta.JavaType;@6591b771
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.multBy10()>
=== Inputs ===
arguments: a554 
=== Succesors ===
=== Usages ===
a584 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a554  <|@  <|@
tid ?1486 <|@
d <@d|@=== Debug Properties ===
bci: 1312
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 747
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i524 - - - - - - - i551 - - - - i580 - - a470 - a474 - a485 - - - 
=== Succesors ===
=== Usages ===
a584 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i524 - - - - - - - i551 - - - - i580 - - a470 - a474 - a485 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a584 <|@
d <@d|@=== Debug Properties ===
bci: 1312
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:747) [bci: 1312]
polymorphic: false
stamp: a# Lsun/misc/FDBigInteger;
targetMethod: Direct#FDBigInteger.multBy10
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1187 
stateDuring: ?1486 
=== Succesors ===
next: i587 
=== Usages ===
?1488 v1188 ?1487 v1189 ?594 a554 
=== Predecessor ===
i580 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1187 stateDuring: ?1486 #next: i587  <|@  <|@
tid v1188 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@1909786b
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)>
=== Inputs ===
arguments: a474 a584 
=== Succesors ===
=== Usages ===
i587 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a474 a584  <|@  <|@
tid ?1487 <|@
d <@d|@=== Debug Properties ===
bci: 1321
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 748
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i524 - - - - - - - i551 - - - - i580 - - a470 - a474 a584 a485 - - - 
=== Succesors ===
=== Usages ===
i587 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i524 - - - - - - - i551 - - - - i580 - - a470 - a474 a584 a485 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i587 <|@
d <@d|@=== Debug Properties ===
bci: 1321
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
polymorphic: false
stamp: i32
targetMethod: Direct#FDBigInteger.cmp
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1188 
stateDuring: ?1487 
=== Succesors ===
next: i593 
=== Usages ===
v589 
=== Predecessor ===
a584 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1188 stateDuring: ?1487 #next: i593  <|@  <|@
tid v1189 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1340]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@4a9c4105
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)>
=== Inputs ===
arguments: a485 a474 a584 
=== Succesors ===
=== Usages ===
i593 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a485 a474 a584  <|@  <|@
f <@~|@floating>@ <|@
tid v589 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1324]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i587 
y: i8 
=== Succesors ===
=== Usages ===
i590 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i587 y: i8  <|@  <|@
f <@~|@floating>@ <|@
tid i590 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1324]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v589 
trueValue: i7 
falseValue: i8 
=== Succesors ===
=== Usages ===
?594 ?1488 i552 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v589 trueValue: i7 falseValue: i8  <|@  <|@
tid ?1488 <|@
d <@d|@=== Debug Properties ===
bci: 1340
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 749
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i524 - - - - - - - i551 i590 - - - i580 - - a470 - a474 a584 a485 - - - 
=== Succesors ===
=== Usages ===
i593 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i524 - - - - - - - i551 i590 - - - i580 - - a470 - a474 a584 a485 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i593 <|@
d <@d|@=== Debug Properties ===
bci: 1340
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1340]
polymorphic: false
stamp: i32
targetMethod: Direct#FDBigInteger.addAndCmp
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1189 
stateDuring: ?1488 
=== Succesors ===
next: a1603 
=== Usages ===
?594 v595 
=== Predecessor ===
i587 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1189 stateDuring: ?1488 #next: a1603  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1603 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.digits
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1354]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v1616 
=== Succesors ===
next: i1604 
=== Usages ===
a1191 v1623 
=== Predecessor ===
i593 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1616 #next: i1604  <|@  <|@
tid ?594 <|@
d <@d|@=== Debug Properties ===
bci: 1343
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1340]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 749
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i524 - - - - - - - i551 i590 - - - i580 - - a470 - a474 a584 a485 - - - i593 
=== Succesors ===
=== Usages ===
v1544 i1604 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i524 - - - - - - - i551 i590 - - - i580 - - a470 - a474 a584 a485 - - - i593  <|@  <|@
f <@~|@floating>@ <|@
tid v1623 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1603 
=== Succesors ===
=== Usages ===
i1604 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1603  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1604 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1368]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?594 
guard: - 
address: v1623 
=== Succesors ===
next: v1461 
=== Usages ===
v1197 
=== Predecessor ===
a1603 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?594 guard: - address: v1623 #next: v1461  <|@  <|@
f <@~|@floating>@ <|@
tid v1197 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1368]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i551 
y: i1604 
=== Succesors ===
=== Usages ===
v1461 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i551 y: i1604  <|@  <|@
f <@*|@fixed>@ <|@
tid v1461 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1368]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1197 
=== Succesors ===
trueSuccessor: v1457 
falseSuccessor: v1460 
=== Usages ===
=== Predecessor ===
i1604 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1197 #trueSuccessor: v1457 #falseSuccessor: v1460  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B156"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors "B153" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4603143730550235664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1457 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1368]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1205 
=== Usages ===
v1205 
=== Predecessor ===
v1461 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1205  <|@  <|@
f <@~|@floating>@ <|@
tid a1191 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1354]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1603 
=== Succesors ===
=== Usages ===
v1624 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1603  <|@  <|@
f <@~|@floating>@ <|@
tid v1624 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a1191 
index: i551 
=== Succesors ===
=== Usages ===
v1205 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1191 index: i551  <|@  <|@
f <@~|@floating>@ <|@
tid i600 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1366]
stamp: i32
=== Inputs ===
x: i580 
y: i234 
=== Succesors ===
=== Usages ===
i601 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i580 y: i234  <|@  <|@
f <@~|@floating>@ <|@
tid i601 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1367]
resultBits: 16
stamp: i16
=== Inputs ===
value: i600 
=== Succesors ===
=== Usages ===
v1205 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i600  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1205 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1368]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1457 
address: v1624 
value: i601 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v605 
=== Usages ===
=== Predecessor ===
v1457 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1457 address: v1624 value: i601 stateAfter: - lastLocationAccess: - #next: v605  <|@  <|@
f <@~|@floating>@ <|@
tid v595 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1343]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i593 
y: i7 
=== Succesors ===
=== Usages ===
i596 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i593 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i596 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1343]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v595 
trueValue: i7 
falseValue: i8 
=== Succesors ===
=== Usages ===
i553 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v595 trueValue: i7 falseValue: i8  <|@  <|@
f <@~|@floating>@ <|@
tid i599 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1359]
stamp: i32
=== Inputs ===
x: i551 
y: i7 
=== Succesors ===
=== Usages ===
i551 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i551 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v605 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1268]
stamp: void
=== Inputs ===
loopBegin: v550 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1205 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v550  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B157"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1460 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1368]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v550 
=== Succesors ===
next: v1544 
=== Usages ===
=== Predecessor ===
v1461 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v550 #next: v1544  <|@  <|@
f <@~|@floating>@ <|@
tid i1546 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -306715
stableDimension: 0
stamp: i32 [-306715] ⇊00000000fffb51e5 ⇈00000000fffb51e5
stampKind: i32
value: int[-306715|0xfffffffffffb51e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1544 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1544 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?594 
actionAndReason: i1546 
speculation: a1503 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1460 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?594 actionAndReason: i1546 speculation: a1503  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B158"
    from_bci -1
    to_bci -1
    predecessors "B154" 
    successors "B160" 
    xhandlers
    flags 
    probability 4570309048910405919
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v570 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:752) [bci: 1372]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v550 
=== Succesors ===
next: v569 
=== Usages ===
=== Predecessor ===
v578 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v550 #next: v569  <|@  <|@
f <@*|@fixed>@ <|@
tid v569 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:752) [bci: 1372]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v568 
=== Predecessor ===
v570 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B159"
    from_bci -1
    to_bci -1
    predecessors "B153" 
    successors "B160" 
    xhandlers
    flags 
    probability 4584817339224528992
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v559 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:752) [bci: 1372]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v550 
=== Succesors ===
next: v567 
=== Usages ===
=== Predecessor ===
v564 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v550 #next: v567  <|@  <|@
f <@*|@fixed>@ <|@
tid v567 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:752) [bci: 1372]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v568 
=== Predecessor ===
v559 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B160"
    from_bci -1
    to_bci -1
    predecessors "B159" "B158" 
    successors "B161" "B162" 
    xhandlers
    flags 
    probability 4585327503373534834
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v568 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:752) [bci: 1372]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v567 v569 
=== Succesors ===
next: v610 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v567 v569 #next: v610  <|@  <|@
f <@*|@fixed>@ <|@
tid v610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:752) [bci: 1374]
stamp: void
trueSuccessorProbability: 0.045633359559402044
=== Inputs ===
condition: v565 
=== Succesors ===
trueSuccessor: v608 
falseSuccessor: v609 
=== Usages ===
=== Predecessor ===
v568 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v565 #trueSuccessor: v608 #falseSuccessor: v609  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B161"
    from_bci -1
    to_bci -1
    predecessors "B160" 
    successors "B165" 
    xhandlers
    flags 
    probability 4565187561230056182
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v608 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:756) [bci: 1403]
stamp: void
=== Inputs ===
=== Succesors ===
next: v629 
=== Usages ===
=== Predecessor ===
v610 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v629  <|@  <|@
f <@*|@fixed>@ <|@
tid v629 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1406]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v628 
=== Predecessor ===
v608 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B162"
    from_bci -1
    to_bci -1
    predecessors "B160" 
    successors "B163" "B164" 
    xhandlers
    flags 
    probability 4585091730300687514
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v609 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:752) [bci: 1377]
stamp: void
=== Inputs ===
=== Succesors ===
next: v617 
=== Usages ===
=== Predecessor ===
v610 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v617  <|@  <|@
f <@*|@fixed>@ <|@
tid v617 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:752) [bci: 1379]
stamp: void
trueSuccessorProbability: 0.10346248969497114
=== Inputs ===
condition: v556 
=== Succesors ===
trueSuccessor: v616 
falseSuccessor: v615 
=== Usages ===
=== Predecessor ===
v609 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v556 #trueSuccessor: v616 #falseSuccessor: v615  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B163"
    from_bci -1
    to_bci -1
    predecessors "B162" 
    successors "B165" 
    xhandlers
    flags 
    probability 4570309048910405860
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v616 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:756) [bci: 1403]
stamp: void
=== Inputs ===
=== Succesors ===
next: v697 
=== Usages ===
=== Predecessor ===
v617 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v697  <|@  <|@
f <@*|@fixed>@ <|@
tid v697 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:756) [bci: 1403]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v628 
=== Predecessor ===
v616 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B164"
    from_bci -1
    to_bci -1
    predecessors "B162" 
    successors "B165" 
    xhandlers
    flags 
    probability 4584498711640198423
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v615 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:753) [bci: 1382]
stamp: void
=== Inputs ===
=== Succesors ===
next: a619 
=== Usages ===
=== Predecessor ===
v617 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a619  <|@  <|@
tid v1212 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:753) [bci: 1385]
returnStamp: a# Lsun/misc/FDBigInteger;
signature: [Ljdk.vm.ci.meta.JavaType;@3c58fa5b
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.leftShift(int)>
=== Inputs ===
arguments: a474 i7 
=== Succesors ===
=== Usages ===
a619 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a474 i7  <|@  <|@
tid ?1489 <|@
d <@d|@=== Debug Properties ===
bci: 1385
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 753
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i524 - - - - - - - i551 i552 i553 - - - - - - - - - a485 - - - 
=== Succesors ===
=== Usages ===
a619 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i524 - - - - - - - i551 i552 i553 - - - - - - - - - a485 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a619 <|@
d <@d|@=== Debug Properties ===
bci: 1385
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:753) [bci: 1385]
polymorphic: false
stamp: a# Lsun/misc/FDBigInteger;
targetMethod: Direct#FDBigInteger.leftShift
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1212 
stateDuring: ?1489 
=== Succesors ===
next: v1637 
=== Usages ===
v1216 a1299 ?1490 v1637 
=== Predecessor ===
v615 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1212 stateDuring: ?1489 #next: v1637  <|@  <|@
tid ?620 <|@
d <@d|@=== Debug Properties ===
bci: 1388
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:753) [bci: 1385]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 753
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i524 - - - - - - - i551 i552 i553 - - - - - - - - - a485 - - - a1503 
=== Succesors ===
=== Usages ===
v1637 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i524 - - - - - - - i551 i552 i553 - - - - - - - - - a485 - - - a1503  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1637 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?620 
object: a619 
=== Succesors ===
next: i622 
=== Usages ===
=== Predecessor ===
a619 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?620 object: a619 #next: i622  <|@  <|@
tid v1216 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:754) [bci: 1394]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@541ae89e
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)>
=== Inputs ===
arguments: a619 a485 
=== Succesors ===
=== Usages ===
i622 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a619 a485  <|@  <|@
tid ?1490 <|@
d <@d|@=== Debug Properties ===
bci: 1394
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 754
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i524 - - - - - - - i551 i552 i553 - - - - - - - a619 - - - - - 
=== Succesors ===
=== Usages ===
i622 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i524 - - - - - - - i551 i552 i553 - - - - - - - a619 - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i622 <|@
d <@d|@=== Debug Properties ===
bci: 1394
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:754) [bci: 1394]
polymorphic: false
stamp: i32
targetMethod: Direct#FDBigInteger.cmp
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1216 
stateDuring: ?1490 
=== Succesors ===
next: v627 
=== Usages ===
j624 
=== Predecessor ===
v1637 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1216 stateDuring: ?1490 #next: v627  <|@  <|@
f <@~|@floating>@ <|@
tid j624 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:754) [bci: 1397]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i622 
=== Succesors ===
=== Usages ===
j630 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i622  <|@  <|@
f <@*|@fixed>@ <|@
tid v627 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1406]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v628 
=== Predecessor ===
i622 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B165"
    from_bci -1
    to_bci -1
    predecessors "B164" "B161" "B163" 
    successors "B166" "B167" 
    xhandlers
    flags 
    probability 4585327503373534833
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j630 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1406]
stamp: i64 [-2147483648 - 2147483647]
valueDescription: i64
=== Inputs ===
merge: v628 
values: j624 j278 j278 
=== Succesors ===
=== Usages ===
?1491 ?636 j461 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v628 values: j624 j278 j278  <|@  <|@
f <@~|@floating>@ <|@
tid a1299 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1406]
stamp: a!# Lsun/misc/FDBigInteger;
valueDescription: a -
=== Inputs ===
merge: v628 
values: a619 a474 a474 
=== Succesors ===
=== Usages ===
v1209 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v628 values: a619 a474 a474  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v628 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1406]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v627 v629 v697 
=== Succesors ===
next: i635 
=== Usages ===
j630 a1299 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v627 v629 v697 #next: i635  <|@  <|@
f <@~|@floating>@ <|@
tid a633 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1409]
rawvalue: FDBigInteger@241972498
stableDimension: 0
stamp: a!# Lsun/misc/FDBigInteger;
stampKind: a -
value: Object[FDBigInteger@241972498]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1209 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid v1209 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1412]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@6820856
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)>
=== Inputs ===
arguments: a1299 a633 
=== Succesors ===
=== Usages ===
i635 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1299 a633  <|@  <|@
tid ?1491 <|@
d <@d|@=== Debug Properties ===
bci: 1412
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 758
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i524 - - - - - - - i551 i552 i553 j630 - - - - - - - - - - - - a1 
=== Succesors ===
=== Usages ===
i635 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i524 - - - - - - - i551 i552 i553 j630 - - - - - - - - - - - - a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i635 <|@
d <@d|@=== Debug Properties ===
bci: 1412
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1412]
polymorphic: false
stamp: i32
targetMethod: Direct#FDBigInteger.cmp
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1209 
stateDuring: ?1491 
=== Succesors ===
next: v1469 
=== Usages ===
v637 
=== Predecessor ===
v628 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1209 stateDuring: ?1491 #next: v1469  <|@  <|@
f <@~|@floating>@ <|@
tid v637 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1415]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i635 
y: i8 
=== Succesors ===
=== Usages ===
v1469 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i635 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v1469 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1415]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v637 
=== Succesors ===
trueSuccessor: v1468 
falseSuccessor: v1466 
=== Usages ===
=== Predecessor ===
i635 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v637 #trueSuccessor: v1468 #falseSuccessor: v1466  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B166"
    from_bci -1
    to_bci -1
    predecessors "B165" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1468 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1415]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1467 
=== Usages ===
=== Predecessor ===
v1469 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1467  <|@  <|@
tid ?636 <|@
d <@d|@=== Debug Properties ===
bci: 1415
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1412]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 758
stackSize: 2
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i524 - - - - - - - i551 i552 i553 j630 - - - - - - - - - - - - a1 i8 
=== Succesors ===
=== Usages ===
v1467 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i524 - - - - - - - i551 i552 i553 j630 - - - - - - - - - - - - a1 i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v1467 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1294
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1415]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?636 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1468 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?636  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B167"
    from_bci -1
    to_bci -1
    predecessors "B165" 
    successors "B168" 
    xhandlers
    flags 
    probability 4585327503373534833
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1466 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1415]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1211 
=== Usages ===
=== Predecessor ===
v1469 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1211  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1211 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: FloatingDecimal$BinaryToASCIIBuffer.exactDecimalConversion
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1423]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1607 
value: i1243 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v642 
=== Usages ===
=== Predecessor ===
v1466 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1607 value: i1243 stateAfter: - lastLocationAccess: - #next: v642  <|@  <|@
f <@*|@fixed>@ <|@
tid v642 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:760) [bci: 1426]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v455 
=== Predecessor ===
v1211 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B168"
    from_bci -1
    to_bci -1
    predecessors "B94" "B131" "B167" 
    successors "B169" "B170" 
    xhandlers
    flags 
    probability 4605389661644661784
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i457 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:760) [bci: 1426]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v455 
values: i777 i922 i524 
=== Succesors ===
=== Usages ===
?650 i644 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v455 values: i777 i922 i524  <|@  <|@
f <@~|@floating>@ <|@
tid i458 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:760) [bci: 1426]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v455 
values: i702 i376 i551 
=== Succesors ===
=== Usages ===
?650 v1236 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v455 values: i702 i376 i551  <|@  <|@
f <@~|@floating>@ <|@
tid i459 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:760) [bci: 1426]
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v455 
values: i7 i377 i552 
=== Succesors ===
=== Usages ===
v655 ?650 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v455 values: i7 i377 i552  <|@  <|@
f <@~|@floating>@ <|@
tid i460 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:760) [bci: 1426]
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v455 
values: i8 i378 i553 
=== Succesors ===
=== Usages ===
v651 ?650 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v455 values: i8 i378 i553  <|@  <|@
f <@~|@floating>@ <|@
tid j461 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:760) [bci: 1426]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v455 
values: j301 j447 j630 
=== Succesors ===
=== Usages ===
v660 v662 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v455 values: j301 j447 j630  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:760) [bci: 1426]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v454 v456 v642 
=== Succesors ===
next: v1231 
=== Usages ===
i457 i458 i459 i460 j461 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v454 v456 v642 #next: v1231  <|@  <|@
f <@~|@floating>@ <|@
tid v1627 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v1231 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i644 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:760) [bci: 1430]
stamp: i32
=== Inputs ===
x: i457 
y: i7 
=== Succesors ===
=== Usages ===
v1231 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i457 y: i7  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1231 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: FloatingDecimal$BinaryToASCIIBuffer.decExponent
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:760) [bci: 1431]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1627 
value: i644 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1233 
=== Usages ===
=== Predecessor ===
v455 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1627 value: i644 stateAfter: - lastLocationAccess: - #next: v1233  <|@  <|@
f <@~|@floating>@ <|@
tid v1628 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v1233 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1233 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: FloatingDecimal$BinaryToASCIIBuffer.firstDigitIndex
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:761) [bci: 1436]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1628 
value: i8 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1236 
=== Usages ===
=== Predecessor ===
v1231 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1628 value: i8 stateAfter: - lastLocationAccess: - #next: v1236  <|@  <|@
f <@~|@floating>@ <|@
tid v1629 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v1236 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1236 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: FloatingDecimal$BinaryToASCIIBuffer.nDigits
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:762) [bci: 1442]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1629 
value: i458 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v654 
=== Usages ===
=== Predecessor ===
v1233 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1629 value: i458 stateAfter: - lastLocationAccess: - #next: v654  <|@  <|@
f <@~|@floating>@ <|@
tid v651 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:766) [bci: 1447]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i460 
y: i8 
=== Succesors ===
=== Usages ===
v654 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i460 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v654 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:766) [bci: 1447]
stamp: void
trueSuccessorProbability: 0.6008525479558225
=== Inputs ===
condition: v651 
=== Succesors ===
trueSuccessor: v652 
falseSuccessor: v653 
=== Usages ===
=== Predecessor ===
v1236 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v651 #trueSuccessor: v652 #falseSuccessor: v653  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B169"
    from_bci -1
    to_bci -1
    predecessors "B168" 
    successors 
    xhandlers
    flags 
    probability 4602341251752896824
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v652 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:781) [bci: 1508]
stamp: void
=== Inputs ===
=== Succesors ===
next: v698 
=== Usages ===
=== Predecessor ===
v654 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v698  <|@  <|@
f <@*|@fixed>@ <|@
tid v698 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:781) [bci: 1508]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v652 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B170"
    from_bci -1
    to_bci -1
    predecessors "B168" 
    successors "B171" "B172" 
    xhandlers
    flags 
    probability 4599430872281685752
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v653 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:767) [bci: 1450]
stamp: void
=== Inputs ===
=== Succesors ===
next: v658 
=== Usages ===
=== Predecessor ===
v654 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v658  <|@  <|@
f <@~|@floating>@ <|@
tid v655 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:767) [bci: 1452]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i459 
y: i8 
=== Succesors ===
=== Usages ===
v658 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i459 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v658 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:767) [bci: 1452]
stamp: void
trueSuccessorProbability: 0.7168137687555163
=== Inputs ===
condition: v655 
=== Succesors ===
trueSuccessor: v656 
falseSuccessor: v657 
=== Usages ===
=== Predecessor ===
v653 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v655 #trueSuccessor: v656 #falseSuccessor: v657  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B171"
    from_bci -1
    to_bci -1
    predecessors "B170" 
    successors 
    xhandlers
    flags 
    probability 4597424643074725698
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v656 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:778) [bci: 1504]
stamp: void
=== Inputs ===
=== Succesors ===
next: v674 
=== Usages ===
=== Predecessor ===
v658 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v674  <|@  <|@
tid v1237 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:778) [bci: 1505]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@2e3ef5ea
stamp: void
targetMethod: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.roundup()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
v674 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?1492 <|@
d <@d|@=== Debug Properties ===
bci: 1505
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 778
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
v674 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v674 <|@
d <@d|@=== Debug Properties ===
bci: 1505
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:778) [bci: 1505]
polymorphic: false
stamp: void
targetMethod: Direct#FloatingDecimal$BinaryToASCIIBuffer.roundup
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1237 
stateDuring: ?1492 
=== Succesors ===
next: v701 
=== Usages ===
=== Predecessor ===
v656 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1237 stateDuring: ?1492 #next: v701  <|@  <|@
f <@*|@fixed>@ <|@
tid v701 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:781) [bci: 1508]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v674 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B172"
    from_bci -1
    to_bci -1
    predecessors "B170" 
    successors "B173" "B174" 
    xhandlers
    flags 
    probability 4591188184549903708
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v657 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:768) [bci: 1455]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1473 
=== Usages ===
=== Predecessor ===
v658 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1473  <|@  <|@
f <@~|@floating>@ <|@
tid v660 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:768) [bci: 1459]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j461 
y: j278 
=== Succesors ===
=== Usages ===
v1473 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j461 y: j278  <|@  <|@
f <@*|@fixed>@ <|@
tid v1473 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:768) [bci: 1459]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v660 
=== Succesors ===
trueSuccessor: v1472 
falseSuccessor: v1470 
=== Usages ===
=== Predecessor ===
v657 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v660 #trueSuccessor: v1472 #falseSuccessor: v1470  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B173"
    from_bci -1
    to_bci -1
    predecessors "B172" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1472 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:768) [bci: 1459]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1471 
=== Usages ===
=== Predecessor ===
v1473 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1471  <|@  <|@
tid ?650 <|@
d <@d|@=== Debug Properties ===
bci: 1445
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:762) [bci: 1442]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 766
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i457 - - - - - - - i458 i459 i460 j278 - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
v1471 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i457 - - - - - - - i458 i459 i460 j278 - - - - - - - - - - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1471 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1238
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:768) [bci: 1459]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?650 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1472 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?650  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B174"
    from_bci -1
    to_bci -1
    predecessors "B172" 
    successors "B175" "B176" 
    xhandlers
    flags 
    probability 4591188184549903708
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1470 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:768) [bci: 1459]
stamp: void
=== Inputs ===
=== Succesors ===
next: v668 
=== Usages ===
=== Predecessor ===
v1473 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v668  <|@  <|@
f <@~|@floating>@ <|@
tid v662 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:774) [bci: 1494]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j461 
y: j280 
=== Succesors ===
=== Usages ===
v668 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j461 y: j280  <|@  <|@
f <@*|@fixed>@ <|@
tid v668 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:774) [bci: 1494]
stamp: void
trueSuccessorProbability: 0.40049867539348605
=== Inputs ===
condition: v662 
=== Succesors ===
trueSuccessor: v667 
falseSuccessor: v666 
=== Usages ===
=== Predecessor ===
v1470 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v662 #trueSuccessor: v667 #falseSuccessor: v666  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B175"
    from_bci -1
    to_bci -1
    predecessors "B174" 
    successors 
    xhandlers
    flags 
    probability 4585386338626231915
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v667 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:781) [bci: 1508]
stamp: void
=== Inputs ===
=== Succesors ===
next: v699 
=== Usages ===
=== Predecessor ===
v668 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v699  <|@  <|@
f <@*|@fixed>@ <|@
tid v699 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:781) [bci: 1508]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v667 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B176"
    from_bci -1
    to_bci -1
    predecessors "B174" 
    successors 
    xhandlers
    flags 
    probability 4587982831218834509
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v666 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:775) [bci: 1497]
stamp: void
=== Inputs ===
=== Succesors ===
next: v670 
=== Usages ===
=== Predecessor ===
v668 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v670  <|@  <|@
tid v1239 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:775) [bci: 1498]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@554f5854
stamp: void
targetMethod: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.roundup()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
v670 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?1493 <|@
d <@d|@=== Debug Properties ===
bci: 1498
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 775
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
v670 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v670 <|@
d <@d|@=== Debug Properties ===
bci: 1498
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:775) [bci: 1498]
polymorphic: false
stamp: void
targetMethod: Direct#FloatingDecimal$BinaryToASCIIBuffer.roundup
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1239 
stateDuring: ?1493 
=== Succesors ===
next: v700 
=== Usages ===
=== Predecessor ===
v666 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1239 stateDuring: ?1493 #next: v700  <|@  <|@
f <@*|@fixed>@ <|@
tid v700 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:781) [bci: 1508]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v670 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B177"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B178" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1324 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:825) [bci: 85]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1517 
=== Usages ===
=== Predecessor ===
v1325 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1517  <|@  <|@
f <@~|@floating>@ <|@
tid i1518 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -317715
stableDimension: 0
stamp: i32 [-317715] ⇊00000000fffb26ed ⇈00000000fffb26ed
stampKind: i32
value: int[-317715|0xfffffffffffb26ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1514 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1517 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1511 
=== Predecessor ===
v1324 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B178"
    from_bci -1
    to_bci -1
    predecessors "B30" "B177" "B36" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1514 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-317971 - -317459] ⇊00000000fffb24ed ⇈00000000fffb27ed
valueDescription: i32
=== Inputs ===
merge: v1511 
values: i1513 i1518 i1520 
=== Succesors ===
=== Usages ===
v1516 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1511 values: i1513 i1518 i1520  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1511 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1512 v1517 v1519 
=== Succesors ===
next: v1516 
=== Usages ===
i1514 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1512 v1517 v1519 #next: v1516  <|@  <|@
tid ?90 <|@
d <@d|@=== Debug Properties ===
bci: 174
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 515
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 j3 - i4 i5 i9 i11 i948 - - - - - - - - - - - - - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
v1516 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 j3 - i4 i5 i9 i11 i948 - - - - - - - - - - - - - - - - - - - - - - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1516 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?90 
actionAndReason: i1514 
speculation: a1503 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1511 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?90 actionAndReason: i1514 speculation: a1503  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v998 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v998  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Lsun/misc/FloatingDecimal$BinaryToASCIIBuffer;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?1491 v1606 ?1491 v1607 ?1490 ?28 v1629 ?1489 v1011 ?90 ?1488 ?1487 ?1486 ?1485 ?486 ?1484 ?167 ?884 v1616 ?239 v1627 ?555 v1239 ?636 v1628 ?514 ?650 ?1483 ?918 v1237 ?373 ?381 ?1476 ?594 ?907 ?636 ?443 ?1482 ?620 ?1481 ?1480 ?465 ?1479 ?1478 ?475 ?1477 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1606 <|@
result [v0|QWORD[.] + 26] <|@
d <@d|@=== Debug Properties ===
displacement: 26
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v998 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i1243 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:439) [bci: 59]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v998 v1001 v1211 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v998 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: FloatingDecimal$BinaryToASCIIBuffer.decimalDigitsRoundedUp
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:439) [bci: 59]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1606 
value: i1243 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1001 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1606 value: i1243 stateAfter: - lastLocationAccess: - #next: v1001  <|@  <|@
f <@~|@floating>@ <|@
tid v1607 <|@
result [v0|QWORD[.] + 25] <|@
d <@d|@=== Debug Properties ===
displacement: 25
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v1001 v1149 v1211 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1001 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: FloatingDecimal$BinaryToASCIIBuffer.exactDecimalConversion
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:440) [bci: 64]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1607 
value: i1243 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v22 
=== Usages ===
=== Predecessor ===
v998 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1607 value: i1243 stateAfter: - lastLocationAccess: - #next: v22  <|@  <|@
f <@~|@floating>@ <|@
tid a1503 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1506 v1552 v1544 v1536 v1526 v1516 ?465 ?475 ?486 ?555 ?620 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
index: 4
stamp: i32 [0 - 1] ⇈0000000000000001
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?1484 ?1483 ?1482 ?28 ?90 ?1481 ?1480 ?1479 ?1478 ?486 ?1477 ?167 ?884 ?239 v241 ?1476 ?918 ?475 ?465 ?514 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i702 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:852) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v703 v1298 i458 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
i120 i69 ?90 ?28 v65 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i80 <|@
result int[52|0x34] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:471) [bci: 143]
rawvalue: 52
stableDimension: 0
stamp: i32 [52] ⇊0000000000000034 ⇈0000000000000034
stampKind: i32
value: int[52|0x34]
=== Inputs ===
=== Succesors ===
=== Usages ===
v81 i83 i679 j741 v751 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i54 <|@
result int[64|0x40] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 109]
rawvalue: 64
stableDimension: 0
stamp: i32 [64] ⇊0000000000000040 ⇈0000000000000040
stampKind: i32
value: int[64|0x40]
=== Inputs ===
=== Succesors ===
=== Usages ===
v55 v890 v189 v889 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a51 <|@
result v5|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 102]
rawvalue: int[27]{0, 3, 5, 7, 10, ...}
stableDimension: 0
stamp: a!# [I
stampKind: a -
value: Object[int[27]{0, 3, 5, 7, 10, ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1608 v1612 v1613 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:426) [bci: 3]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i977 i979 i948 v60 i78 v1011 i794 i796 v140 i798 v230 i974 ?239 ?239 v241 i78 i460 i78 i371 i546 v747 v302 i774 i328 i333 v336 v1158 i933 i371 i372 v382 v392 i423 i428 i450 ?1484 ?1483 v493 i494 ?1482 i500 v503 ?514 v1224 i525 i546 i547 v556 v565 v589 i590 i596 i947 i372 v637 i972 v1233 v651 v655 i547 i371 i372 i546 i547 i856 i932 i1585 ?29 ?381 ?381 ?555 ?555 ?636 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i45 <|@
result int[27|0x1b] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 96]
rawvalue: 27
stableDimension: 0
stamp: i32 [27] ⇊000000000000001b ⇈000000000000001b
stampKind: i32
value: int[27|0x1b]
=== Inputs ===
=== Succesors ===
=== Usages ===
v800 v801 v171 v1039 v1111 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
i107 i83 ?90 i16 ?28 v32 v37 v65 i69 v81 d734 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i31 <|@
result int[63|0x3f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:444) [bci: 82]
rawvalue: 63
stableDimension: 0
stamp: i32 [63] ⇊000000000000003f ⇈000000000000003f
stampKind: i32
value: int[63|0x3f]
=== Inputs ===
=== Succesors ===
=== Usages ===
v32 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:444) [bci: 82]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i31 
=== Succesors ===
=== Usages ===
v35 v960 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i31  <|@  <|@
f <@~|@floating>@ <|@
tid i10 <|@
result int[53|0x35] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:434) [bci: 50]
rawvalue: 53
stableDimension: 0
stamp: i32 [53] ⇊0000000000000035 ⇈0000000000000035
stampKind: i32
value: int[53|0x35]
=== Inputs ===
=== Succesors ===
=== Usages ===
i11 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j3 <|@
result v2|QWORD <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i64
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
j725 i9 j84 ?90 ?28 j121 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.numberOfTrailingZeros(long) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:431) [bci: 45]
stamp: i32 [0 - 64] ⇈000000000000007f
=== Inputs ===
value: j3 
=== Succesors ===
=== Usages ===
i11 i679 j121 ?28 ?90 
=== Predecessor ===
- >@ <|@
instruction <@AMD64CountTrailingZeros|@org.graalvm.compiler.replacements.amd64.AMD64CountTrailingZerosNode>@ value: j3  <|@  <|@
f <@~|@floating>@ <|@
tid i11 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:434) [bci: 54]
stamp: i32 [-11 - 53]
=== Inputs ===
x: i10 
y: i9 
=== Succesors ===
=== Usages ===
i153 v130 i16 ?28 i53 ?90 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i10 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid i16 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 71]
stamp: i32
=== Inputs ===
x: i11 
y: i2 
=== Succesors ===
=== Usages ===
i18 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i11 y: i2  <|@  <|@
f <@~|@floating>@ <|@
tid i17 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 73]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i18 i70 i341 i134 i764 i774 i1586 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i18 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 73]
stamp: i32
=== Inputs ===
x: i16 
y: i17 
=== Succesors ===
=== Usages ===
v19 i947 i948 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i16 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid i7 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:426) [bci: 0]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v19 v95 v108 v130 i847 i169 i854 i857 i214 i220 ?239 ?443 j693 i827 i811 i459 i299 j317 j324 i328 i333 ?443 i933 j413 i423 i428 i377 i378 i438 j446 i450 i850 i478 i483 i494 v499 i500 i932 i525 i590 v595 i596 i599 v1212 i644 i681 v829 i1585 j689 i1631 i853 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 74]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i18 
y: i7 
=== Succesors ===
=== Usages ===
v22 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i18 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 74]
stamp: void
trueSuccessorProbability: 0.7309313881269885
=== Inputs ===
condition: v19 
=== Succesors ===
trueSuccessor: v20 
falseSuccessor: v21 
=== Usages ===
=== Predecessor ===
v1001 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v19 #trueSuccessor: v20 #falseSuccessor: v21  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD, r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@5692047b slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + 26], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + 25], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[27]{0, 3, 5, 7, 10, ...}] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = TZCNT v2|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOVE input: int[53|0x35] <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SUB (x: v7|DWORD, ~y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = SUB (x: v8|DWORD, ~y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = DEC v9|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v10|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7309313881269885 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4604758864199680626
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 5]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 74]
stamp: void
=== Inputs ===
=== Succesors ===
next: v960 
=== Usages ===
=== Predecessor ===
v22 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v960  <|@  <|@
f <@*|@fixed>@ <|@
tid v960 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:444) [bci: 82]
stamp: void
trueSuccessorProbability: 0.9998165784832451
=== Inputs ===
condition: v32 
=== Succesors ===
trueSuccessor: v958 
falseSuccessor: v959 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v32 #trueSuccessor: v958 #falseSuccessor: v959  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v1|DWORD y: 63 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9998165784832451 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" 
    xhandlers
    flags 
    probability 4604757656617592340
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v958 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:444) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
next: v942 
=== Usages ===
=== Predecessor ===
v960 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v942  <|@  <|@
f <@*|@fixed>@ <|@
tid v942 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v940 
=== Predecessor ===
v958 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B2 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B28" 
    xhandlers
    flags 
    probability 4549078280250449777
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v959 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174]
stamp: void
=== Inputs ===
=== Succesors ===
next: v961 
=== Usages ===
=== Predecessor ===
v960 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v961  <|@  <|@
f <@*|@fixed>@ <|@
tid v961 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v39 
=== Predecessor ===
v959 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B3 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" "B27" 
    xhandlers
    flags 
    probability 4598518729118579484
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 9]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 74]
stamp: void
=== Inputs ===
=== Succesors ===
next: v35 
=== Usages ===
=== Predecessor ===
v22 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v35  <|@  <|@
f <@*|@fixed>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:444) [bci: 82]
stamp: void
trueSuccessorProbability: 0.9998165784832451
=== Inputs ===
condition: v32 
=== Succesors ===
trueSuccessor: v33 
falseSuccessor: v34 
=== Usages ===
=== Predecessor ===
v21 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v32 #trueSuccessor: v33 #falseSuccessor: v34  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v1|DWORD y: 63 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9998165784832451 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4598517840054458020
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:444) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
next: v941 
=== Usages ===
=== Predecessor ===
v35 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v941  <|@  <|@
f <@*|@fixed>@ <|@
tid v941 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v940 
=== Predecessor ===
v33 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v10|DWORD] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B2" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607180766685868390
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i947 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
valueDescription: i32
=== Inputs ===
merge: v940 
values: i18 i8 
=== Succesors ===
=== Usages ===
i948 v800 v1608 v60 i948 i948 i948 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v940 values: i18 i8  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v940 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v941 v942 
=== Succesors ===
next: v43 
=== Usages ===
i947 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v941 v942 #next: v43  <|@  <|@
f <@~|@floating>@ <|@
tid i36 <|@
result int[-21|0xffffffffffffffeb] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:444) [bci: 86]
rawvalue: -21
stableDimension: 0
stamp: i32 [-21] ⇊00000000ffffffeb ⇈00000000ffffffeb
stampKind: i32
value: int[-21|0xffffffffffffffeb]
=== Inputs ===
=== Succesors ===
=== Usages ===
v37 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:444) [bci: 88]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i36 
=== Succesors ===
=== Usages ===
v43 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i36  <|@  <|@
f <@*|@fixed>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:444) [bci: 88]
stamp: void
trueSuccessorProbability: 3.66905155017428E-4
=== Inputs ===
condition: v37 
=== Succesors ===
trueSuccessor: v42 
falseSuccessor: v41 
=== Usages ===
=== Predecessor ===
v940 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v37 #trueSuccessor: v42 #falseSuccessor: v41  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v1|DWORD y: -21 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 3.66905155017428E-4 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B28" 
    xhandlers
    flags 
    probability 4555402587703614778
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174]
stamp: void
=== Inputs ===
=== Succesors ===
next: v40 
=== Usages ===
=== Predecessor ===
v43 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v40  <|@  <|@
f <@*|@fixed>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v39 
=== Predecessor ===
v42 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v11|DWORD] destination: B7 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B26" 
    xhandlers
    flags 
    probability 4607177462504198754
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 91]
stamp: void
=== Inputs ===
=== Succesors ===
next: v50 
=== Usages ===
=== Predecessor ===
v43 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v50  <|@  <|@
f <@~|@floating>@ <|@
tid v800 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 97]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i947 
y: i45 
=== Succesors ===
=== Usages ===
v50 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i947 y: i45  <|@  <|@
f <@*|@fixed>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 97]
stamp: void
trueSuccessorProbability: 0.5322359783728843
=== Inputs ===
condition: v800 
=== Succesors ===
trueSuccessor: v47 
falseSuccessor: v49 
=== Usages ===
=== Predecessor ===
v41 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v800 #trueSuccessor: v47 #falseSuccessor: v49  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v11|DWORD y: 27 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5322359783728843 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B25" 
    xhandlers
    flags 
    probability 4602966537134068855
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 100]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1587 
=== Usages ===
i1587 
=== Predecessor ===
v50 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1587  <|@  <|@
f <@~|@floating>@ <|@
tid v1608 <|@
result [v5|QWORD[.] + v11|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a51 
index: i947 
=== Succesors ===
=== Usages ===
i1587 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a51 index: i947  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1587 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 107]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v47 
address: v1608 
=== Succesors ===
next: v59 
=== Usages ===
i53 
=== Predecessor ===
v47 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v47 address: v1608 #next: v59  <|@  <|@
f <@~|@floating>@ <|@
tid i53 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 108]
stamp: i32
=== Inputs ===
x: i11 
y: i1587 
=== Succesors ===
=== Usages ===
v55 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i11 y: i1587  <|@  <|@
f <@~|@floating>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 111]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i53 
y: i54 
=== Succesors ===
=== Usages ===
v59 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i53 y: i54  <|@  <|@
f <@*|@fixed>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 111]
stamp: void
trueSuccessorProbability: 0.9985678292003713
=== Inputs ===
condition: v55 
=== Succesors ===
trueSuccessor: v56 
falseSuccessor: v58 
=== Usages ===
=== Predecessor ===
i1587 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v55 #trueSuccessor: v56 #falseSuccessor: v58  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = ADD (x: v8|DWORD, ~y: [v5|QWORD[.] + v11|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v12|DWORD y: 64 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9985678292003713 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B24" 
    xhandlers
    flags 
    probability 4602959675148926439
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:464) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
next: v64 
=== Usages ===
=== Predecessor ===
v59 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v64  <|@  <|@
f <@~|@floating>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:464) [bci: 116]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i947 
y: i8 
=== Succesors ===
=== Usages ===
v64 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i947 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:464) [bci: 116]
stamp: void
trueSuccessorProbability: 0.37470452312023583
=== Inputs ===
condition: v60 
=== Succesors ===
trueSuccessor: v61 
falseSuccessor: v63 
=== Usages ===
=== Predecessor ===
v56 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v60 #trueSuccessor: v61 #falseSuccessor: v63  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v11|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.37470452312023583 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B22" 
    xhandlers
    flags 
    probability 4596339048911957912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:466) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1309 
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1309  <|@  <|@
tid ?28 <|@
d <@d|@=== Debug Properties ===
bci: 74
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 74]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 443
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 j3 - i4 i5 i9 i11 - - - - - - - - - - - - - - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
?29 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 j3 - i4 i5 i9 i11 - - - - - - - - - - - - - - - - - - - - - - - - -  <|@  <|@
tid ?29 <|@
d <@d|@=== Debug Properties ===
bci: 10
code: ResolvedJavaMethodBytecode<Math.max(int, int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 74]
rethrowException: false
sourceFile: Math.java
sourceLine: 1252
stackSize: 1
=== Inputs ===
outerFrameState: ?28 
values: - - i8 
=== Succesors ===
=== Usages ===
v1506 i1589 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?28 values: - - i8  <|@  <|@
f <@~|@floating>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:471) [bci: 145]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i80 
=== Succesors ===
=== Usages ===
v1309 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i80  <|@  <|@
f <@*|@fixed>@ <|@
tid v1309 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:471) [bci: 145]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v81 
=== Succesors ===
trueSuccessor: v1306 
falseSuccessor: v1308 
=== Usages ===
=== Predecessor ===
v61 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v81 #trueSuccessor: v1306 #falseSuccessor: v1308  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v1|DWORD y: 52 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B20" 
    xhandlers
    flags 
    probability 4596339048911957912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1306 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:471) [bci: 145]
stamp: void
=== Inputs ===
=== Succesors ===
next: v68 
=== Usages ===
=== Predecessor ===
v1309 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v68  <|@  <|@
f <@~|@floating>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:466) [bci: 122]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4 
y: i2 
=== Succesors ===
=== Usages ===
v68 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i4 y: i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:466) [bci: 122]
stamp: void
trueSuccessorProbability: 0.0013467536149702752
=== Inputs ===
condition: v65 
=== Succesors ===
trueSuccessor: v66 
falseSuccessor: v67 
=== Usages ===
=== Predecessor ===
v1306 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v65 #trueSuccessor: v66 #falseSuccessor: v67  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v1|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0013467536149702752 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4553580319308306455
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 125]
stamp: void
=== Inputs ===
=== Succesors ===
next: v706 
=== Usages ===
=== Predecessor ===
v68 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v706  <|@  <|@
f <@~|@floating>@ <|@
tid i69 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 128]
stamp: i32
=== Inputs ===
x: i2 
y: i4 
=== Succesors ===
=== Usages ===
i70 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i2 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid i70 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 130]
stamp: i32
=== Inputs ===
x: i69 
y: i17 
=== Succesors ===
=== Usages ===
v1611 v703 v709 v1024 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i69 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid v703 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:852) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i70 
y: i702 
=== Succesors ===
=== Usages ===
v706 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i70 y: i702  <|@  <|@
f <@*|@fixed>@ <|@
tid v706 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:852) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v703 
=== Succesors ===
trueSuccessor: v704 
falseSuccessor: v705 
=== Usages ===
=== Predecessor ===
v66 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v703 #trueSuccessor: v704 #falseSuccessor: v705  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = SUB (x: v1|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = DEC v13|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v14|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 4549076719680935959
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v704 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:855) [bci: 19]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
stamp: void
=== Inputs ===
=== Succesors ===
next: v791 
=== Usages ===
=== Predecessor ===
v706 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v791  <|@  <|@
f <@*|@fixed>@ <|@
tid v791 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v76 
=== Predecessor ===
v704 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B14 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B19" 
    xhandlers
    flags 
    probability 4549076719680935959
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v705 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:852) [bci: 5]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1588 
=== Usages ===
=== Predecessor ===
v706 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1588  <|@  <|@
f <@~|@floating>@ <|@
tid a1012 <|@
result v15|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:852) [bci: 6]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
rawvalue: Class:sun.misc.FloatingDecimal$BinaryToASCIIBuffer
stableDimension: 0
stamp: a!# Ljava/lang/Class;
stampKind: a -
value: Object[Class:sun.misc.FloatingDecimal$BinaryToASCIIBuffer]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1609 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1609 <|@
result [v15|QWORD[.] + 104] <|@
d <@d|@=== Debug Properties ===
displacement: 104
scale: Times1
stamp: void*
=== Inputs ===
base: a1012 
index: - 
=== Succesors ===
=== Usages ===
a1588 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1012 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1588 <|@
result v16|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsNumber
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:852) [bci: 6]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v1609 
=== Succesors ===
next: i1589 
=== Usages ===
a1016 v1610 
=== Predecessor ===
v705 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1609 #next: i1589  <|@  <|@
f <@~|@floating>@ <|@
tid v1610 <|@
result [v16|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1588 
=== Succesors ===
=== Usages ===
i1589 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1588  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1589 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:852) [bci: 9]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?29 
guard: - 
address: v1610 
=== Succesors ===
next: v712 
=== Usages ===
v709 v1024 
=== Predecessor ===
a1588 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?29 guard: - address: v1610 #next: v712  <|@  <|@
f <@~|@floating>@ <|@
tid v709 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:852) [bci: 10]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i70 
y: i1589 
=== Succesors ===
=== Usages ===
v712 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i70 y: i1589  <|@  <|@
f <@*|@fixed>@ <|@
tid v712 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:852) [bci: 10]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v709 
=== Succesors ===
trueSuccessor: v710 
falseSuccessor: v711 
=== Usages ===
=== Predecessor ===
i1589 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v709 #trueSuccessor: v710 #falseSuccessor: v711  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:sun.misc.FloatingDecimal$BinaryToASCIIBuffer] <|@ <|@
      nr   -1  <|@ instruction v16|DWORD[.] = MOV [v15|QWORD[.] + 104] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Math.max(Math.java:1252) [bci: 10]
stack: int[0|0x0] 
locals: - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 74]
locals: v0|QWORD[.] v1|DWORD v2|QWORD - v3|DWORD v4|DWORD v6|DWORD v8|DWORD - - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction v17|DWORD = MOV [v16|DWORD[.] * 8 + 12] size: DWORD state [bci:10, 74] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v17|DWORD, y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4544573120053565463
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v710 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:853) [bci: 13]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1317 
=== Usages ===
=== Predecessor ===
v712 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1317  <|@  <|@
f <@~|@floating>@ <|@
tid v1024 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:853) [bci: 17]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i70 
y: i1589 
=== Succesors ===
=== Usages ===
v1317 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i70 y: i1589  <|@  <|@
f <@*|@fixed>@ <|@
tid v1317 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:853) [bci: 17]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1024 
=== Succesors ===
trueSuccessor: v1314 
falseSuccessor: v1316 
=== Usages ===
=== Predecessor ===
v710 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1024 #trueSuccessor: v1314 #falseSuccessor: v1316  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v17|DWORD, y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B21" 
    xhandlers
    flags 
    probability 4544573120053565463
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1314 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:853) [bci: 17]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1590 
=== Usages ===
i1590 
=== Predecessor ===
v1317 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1590  <|@  <|@
f <@~|@floating>@ <|@
tid a1016 <|@
result v18|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:852) [bci: 6]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a1588 
=== Succesors ===
=== Usages ===
v1611 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1588  <|@  <|@
f <@~|@floating>@ <|@
tid v1611 <|@
result [v18|QWORD[.] + v14|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1016 
index: i70 
=== Succesors ===
=== Usages ===
i1590 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1016 index: i70  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1590 <|@
result v19|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:853) [bci: 17]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1314 
address: v1611 
=== Succesors ===
next: v75 
=== Usages ===
i78 
=== Predecessor ===
v1314 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1314 address: v1611 #next: v75  <|@  <|@
f <@*|@fixed>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:471) [bci: 142]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v76 
=== Predecessor ===
i1590 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@40447647 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = MOV [v18|QWORD[.] + v14|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v19|DWORD] destination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1316 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:853) [bci: 17]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1509 
=== Usages ===
=== Predecessor ===
v1317 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1509  <|@  <|@
f <@~|@floating>@ <|@
tid i1510 <|@
result int[-262427|0xfffffffffffbfee5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -262427
stableDimension: 0
stamp: i32 [-262427] ⇊00000000fffbfee5 ⇈00000000fffbfee5
stampKind: i32
value: int[-262427|0xfffffffffffbfee5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1504 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1509 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1500 
=== Predecessor ===
v1316 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-262427|0xfffffffffffbfee5]] destination: B18 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B21" 
    xhandlers
    flags 
    probability 4544573120053565463
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v711 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:855) [bci: 19]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
stamp: void
=== Inputs ===
=== Succesors ===
next: v790 
=== Usages ===
=== Predecessor ===
v712 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v790  <|@  <|@
f <@*|@fixed>@ <|@
tid v790 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v76 
=== Predecessor ===
v711 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B21" 
    xhandlers
    flags 
    probability 4596329391303238956
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:469) [bci: 139]
stamp: void
=== Inputs ===
=== Succesors ===
next: v77 
=== Usages ===
=== Predecessor ===
v68 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v77  <|@  <|@
f <@*|@fixed>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:471) [bci: 142]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v76 
=== Predecessor ===
v67 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" "B20" "B19" "B14" 
    successors 
    xhandlers
    flags 
    probability 4596339048911957912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i78 <|@
result v20|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:471) [bci: 142]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v76 
values: i1590 i8 i8 i8 
=== Succesors ===
=== Usages ===
v1011 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v76 values: i1590 i8 i8 i8  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:471) [bci: 142]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v75 v77 v790 v791 
=== Succesors ===
next: v87 
=== Usages ===
i78 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v75 v77 v790 v791 #next: v87  <|@  <|@
f <@~|@floating>@ <|@
tid i83 <|@
result v22|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:474) [bci: 162]
stamp: i32
=== Inputs ===
x: i80 
y: i2 
=== Succesors ===
=== Usages ===
j84 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i80 y: i2  <|@  <|@
f <@~|@floating>@ <|@
tid j84 <|@
result v23|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:474) [bci: 163]
stamp: i64
=== Inputs ===
x: j3 
y: i83 
=== Succesors ===
=== Usages ===
v1011 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j3 y: i83  <|@  <|@
tid v1011 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:476) [bci: 170]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@56c611c0
stamp: void
targetMethod: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(int, long, int)>
=== Inputs ===
arguments: a1 i8 j84 i78 
=== Succesors ===
=== Usages ===
v87 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 i8 j84 i78  <|@  <|@
tid ?1475 <|@
d <@d|@=== Debug Properties ===
bci: 170
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 476
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
v87 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
bci: 170
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:476) [bci: 170]
polymorphic: false
stamp: void
targetMethod: Direct#FloatingDecimal$BinaryToASCIIBuffer.developLongDigits
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1011 
stateDuring: ?1475 
=== Succesors ===
next: v89 
=== Usages ===
=== Predecessor ===
v76 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1011 stateDuring: ?1475 #next: v89  <|@  <|@
f <@*|@fixed>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:477) [bci: 173]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v87 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v20|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOVE input: int[52|0x34] <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = SUB (x: v21|DWORD, ~y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = SHR (x: v2|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE v23|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v20|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:476) [bci: 170]
locals: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD, r8|DWORD] [] callTarget: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(int, long, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:170] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1308 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:471) [bci: 145]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1501 
=== Usages ===
=== Predecessor ===
v1309 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1501  <|@  <|@
f <@~|@floating>@ <|@
tid i1502 <|@
result int[-258579|0xfffffffffffc0ded] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -258579
stableDimension: 0
stamp: i32 [-258579] ⇊00000000fffc0ded ⇈00000000fffc0ded
stampKind: i32
value: int[-258579|0xfffffffffffc0ded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1504 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1501 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1500 
=== Predecessor ===
v1308 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-258579|0xfffffffffffc0ded]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B18" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1504 <|@
result v24|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-262427 - -258579] ⇊00000000fff804e5 ⇈00000000fffffffd
valueDescription: i32
=== Inputs ===
merge: v1500 
values: i1502 i1510 
=== Succesors ===
=== Usages ===
v1506 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1500 values: i1502 i1510  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1500 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1501 v1509 
=== Succesors ===
next: v1506 
=== Usages ===
i1504 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1501 v1509 #next: v1506  <|@  <|@
f <@*|@fixed>@ <|@
tid v1506 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?29 
actionAndReason: i1504 
speculation: a1503 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1500 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?29 actionAndReason: i1504 speculation: a1503  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v24|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Math.max(Math.java:1252) [bci: 10]
stack: int[0|0x0] 
locals: - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 74]
locals: v0|QWORD[.] v1|DWORD v2|QWORD - v3|DWORD v4|DWORD v6|DWORD v8|DWORD - - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:10, 74] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B28" 
    xhandlers
    flags 
    probability 4599655016814494722
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174]
stamp: void
=== Inputs ===
=== Succesors ===
next: v62 
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v62  <|@  <|@
f <@*|@fixed>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v39 
=== Predecessor ===
v63 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v11|DWORD] destination: B24 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B28" 
    xhandlers
    flags 
    probability 4560165896057405122
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174]
stamp: void
=== Inputs ===
=== Succesors ===
next: v57 
=== Usages ===
=== Predecessor ===
v59 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v57  <|@  <|@
f <@*|@fixed>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v39 
=== Predecessor ===
v58 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v11|DWORD] destination: B25 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B28" 
    xhandlers
    flags 
    probability 4602093470658165717
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174]
stamp: void
=== Inputs ===
=== Succesors ===
next: v48 
=== Usages ===
=== Predecessor ===
v50 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v48  <|@  <|@
f <@*|@fixed>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v39 
=== Predecessor ===
v49 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v11|DWORD] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B28" 
    xhandlers
    flags 
    probability 4542408038045123131
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174]
stamp: void
=== Inputs ===
=== Succesors ===
next: v38 
=== Usages ===
=== Predecessor ===
v35 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v38  <|@  <|@
f <@*|@fixed>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v39 
=== Predecessor ===
v34 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v10|DWORD] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B7" "B26" "B25" "B24" "B3" 
    successors "B29" "B32" 
    xhandlers
    flags 
    probability 4605389661644661784
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i948 <|@
result v25|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
valueDescription: i32
=== Inputs ===
merge: v39 
values: i18 i947 i947 i947 i947 i8 
=== Succesors ===
=== Usages ===
?90 i851 i1630 i846 i852 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v39 values: i18 i947 i947 i947 i947 i8  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v38 v40 v48 v57 v62 v961 
=== Succesors ===
next: v750 
=== Usages ===
i948 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v38 v40 v48 v57 v62 v961 #next: v750  <|@  <|@
f <@~|@floating>@ <|@
tid j724 <|@
result v26|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:820) [bci: 4]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
rawvalue: 4503599627370495
stableDimension: 0
stamp: i64 [4503599627370495] ⇊000fffffffffffff ⇈000fffffffffffff
stampKind: i64
value: long[4503599627370495|0xfffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j725 j753 j754 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j725 <|@
result v27|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:820) [bci: 7]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i64 [0 - 4503599627370495] ⇈000fffffffffffff
=== Inputs ===
x: j3 
y: j724 
=== Succesors ===
=== Usages ===
j726 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j3 y: j724  <|@  <|@
f <@~|@floating>@ <|@
tid j723 <|@
result v28|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:820) [bci: 0]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
rawvalue: 4607182418800017408
stableDimension: 0
stamp: i64 [4607182418800017408] ⇊3ff0000000000000 ⇈3ff0000000000000
stampKind: i64
value: long[4607182418800017408|0x3ff0000000000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
j726 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j726 <|@
result v29|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:820) [bci: 8]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i64 [4607182418800017408 - 4611686018427387903] ⇊3ff0000000000000 ⇈3fffffffffffffff
=== Inputs ===
x: j725 
y: j723 
=== Succesors ===
=== Usages ===
d727 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: j725 y: j723  <|@  <|@
f <@~|@floating>@ <|@
tid d727 <|@
result v30|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Double.longBitsToDouble(long) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:820) [bci: 9]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: f64! [4.9E-324 - 1.7976931348623157E308]
=== Inputs ===
value: j726 
=== Succesors ===
=== Usages ===
d729 
=== Predecessor ===
- >@ <|@
instruction <@Reinterpret|@org.graalvm.compiler.nodes.calc.ReinterpretNode>@ value: j726  <|@  <|@
f <@~|@floating>@ <|@
tid d728 <|@
result double[1.5|0x3ff8000000000000] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:821) [bci: 14]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
rawvalue: 1.5
stableDimension: 0
stamp: f64! [1.5]
stampKind: f64
value: double[1.5|0x3ff8000000000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
d729 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid d729 <|@
result v31|DOUBLE <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:821) [bci: 17]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: f64
=== Inputs ===
x: d727 
y: d728 
=== Succesors ===
=== Usages ===
d731 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: d727 y: d728  <|@  <|@
f <@~|@floating>@ <|@
tid d730 <|@
result double[0.289529654|0x3fd287a762c9bd93] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:821) [bci: 18]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
rawvalue: 0.289529654
stableDimension: 0
stamp: f64! [0.289529654]
stampKind: f64
value: double[0.289529654|0x3fd287a762c9bd93]
=== Inputs ===
=== Succesors ===
=== Usages ===
d731 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid d731 <|@
result v33|DOUBLE <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$125/271184744@39a592fe
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:821) [bci: 21]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: f64
=== Inputs ===
x: d729 
y: d730 
=== Succesors ===
=== Usages ===
d733 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: d729 y: d730  <|@  <|@
f <@~|@floating>@ <|@
tid d732 <|@
result double[0.176091259|0x3fc68a288b421b8c] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:821) [bci: 22]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
rawvalue: 0.176091259
stableDimension: 0
stamp: f64! [0.176091259]
stampKind: f64
value: double[0.176091259|0x3fc68a288b421b8c]
=== Inputs ===
=== Succesors ===
=== Usages ===
d733 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid d733 <|@
result v35|DOUBLE <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:821) [bci: 25]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: f64
=== Inputs ===
x: d731 
y: d732 
=== Succesors ===
=== Usages ===
d737 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: d731 y: d732  <|@  <|@
f <@~|@floating>@ <|@
tid d734 <|@
result v37|DOUBLE <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.FloatConvertNode$$Lambda$1/154487945@39bcec26
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:821) [bci: 27]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
op: I2D
stamp: f64! [-2.147483648E9 - 2.147483647E9]
=== Inputs ===
value: i2 
=== Succesors ===
=== Usages ===
d736 
=== Predecessor ===
- >@ <|@
instruction <@FloatConvert|@org.graalvm.compiler.nodes.calc.FloatConvertNode>@ value: i2  <|@  <|@
f <@~|@floating>@ <|@
tid d735 <|@
result double[0.301029995663981|0x3fd34413509f79fb] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:821) [bci: 28]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
rawvalue: 0.301029995663981
stableDimension: 0
stamp: f64! [0.301029995663981]
stampKind: f64
value: double[0.301029995663981|0x3fd34413509f79fb]
=== Inputs ===
=== Succesors ===
=== Usages ===
d736 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid d736 <|@
result v38|DOUBLE <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$125/271184744@39a592fe
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:821) [bci: 31]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: f64
=== Inputs ===
x: d734 
y: d735 
=== Succesors ===
=== Usages ===
d737 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: d734 y: d735  <|@  <|@
f <@~|@floating>@ <|@
tid d737 <|@
result v40|DOUBLE <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:821) [bci: 32]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: f64
=== Inputs ===
x: d733 
y: d736 
=== Succesors ===
=== Usages ===
j738 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: d733 y: d736  <|@  <|@
f <@~|@floating>@ <|@
tid j738 <|@
result v41|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Double.doubleToRawLongBits(double) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:822) [bci: 37]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i64
=== Inputs ===
value: d737 
=== Succesors ===
=== Usages ===
j740 v746 j754 v762 v767 
=== Predecessor ===
- >@ <|@
instruction <@Reinterpret|@org.graalvm.compiler.nodes.calc.ReinterpretNode>@ value: d737  <|@  <|@
f <@~|@floating>@ <|@
tid j745 <|@
result v42|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:824) [bci: 60]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
rawvalue: -9223372036854775808
stableDimension: 0
stamp: i64 [-9223372036854775808] ⇊8000000000000000 ⇈8000000000000000
stampKind: i64
value: long[-9223372036854775808|0x8000000000000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v746 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v746 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:824) [bci: 66]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
x: j738 
y: j745 
=== Succesors ===
=== Usages ===
v761 i774 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j738 y: j745  <|@  <|@
f <@~|@floating>@ <|@
tid j739 <|@
result v43|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:823) [bci: 44]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
rawvalue: 9218868437227405312
stableDimension: 0
stamp: i64 [9218868437227405312] ⇊7ff0000000000000 ⇈7ff0000000000000
stampKind: i64
value: long[9218868437227405312|0x7ff0000000000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
j740 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j740 <|@
result v44|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:823) [bci: 47]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i64 [0 - 9218868437227405312] ⇈7ff0000000000000
=== Inputs ===
x: j738 
y: j739 
=== Succesors ===
=== Usages ===
j741 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j738 y: j739  <|@  <|@
f <@~|@floating>@ <|@
tid j741 <|@
result v45|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:823) [bci: 50]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i64 [0 - 2047] ⇈00000000000007ff
=== Inputs ===
x: j740 
y: i80 
=== Succesors ===
=== Usages ===
i742 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j740 y: i80  <|@  <|@
f <@~|@floating>@ <|@
tid i742 <|@
result v46|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:823) [bci: 51]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
resultBits: 32
stamp: i32 [0 - 2047] ⇈00000000000007ff
=== Inputs ===
value: j741 
=== Succesors ===
=== Usages ===
i744 i771 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j741  <|@  <|@
f <@~|@floating>@ <|@
tid i743 <|@
result int[-1023|0xfffffffffffffc01] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:823) [bci: 55]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
rawvalue: -1023
stableDimension: 0
stamp: i32 [-1023] ⇊00000000fffffc01 ⇈00000000fffffc01
stampKind: i32
value: int[-1023|0xfffffffffffffc01]
=== Inputs ===
=== Succesors ===
=== Usages ===
i744 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i744 <|@
result v47|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:823) [bci: 55]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i32 [-1023 - 1024]
=== Inputs ===
x: i742 
y: i743 
=== Succesors ===
=== Usages ===
v747 v751 j753 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i742 y: i743  <|@  <|@
f <@~|@floating>@ <|@
tid v747 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:825) [bci: 78]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i744 
y: i8 
=== Succesors ===
=== Usages ===
v750 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i744 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v750 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:825) [bci: 78]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
trueSuccessorProbability: 0.8017068096060938
=== Inputs ===
condition: v747 
=== Succesors ===
trueSuccessor: v748 
falseSuccessor: v749 
=== Usages ===
=== Predecessor ===
v39 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v747 #trueSuccessor: v748 #falseSuccessor: v749  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v25|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOVE input: long[4503599627370495|0xfffffffffffff] <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = AND (x: v2|QWORD, y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOVE input: long[4607182418800017408|0x3ff0000000000000] <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = OR (x: v27|QWORD, y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|DOUBLE = VMOVQ v29|QWORD nZ: XMM <|@ <|@
      nr   -1  <|@ instruction v32|DOUBLE = VMOVE input: double[1.5|0x3ff8000000000000] <|@ <|@
      nr   -1  <|@ instruction v31|DOUBLE = VSUBSD (x: v30|DOUBLE, y: v32|DOUBLE) nZ: XMM <|@ <|@
      nr   -1  <|@ instruction v34|DOUBLE = VMOVE input: double[0.289529654|0x3fd287a762c9bd93] <|@ <|@
      nr   -1  <|@ instruction v33|DOUBLE = VMULSD (x: v31|DOUBLE, y: v34|DOUBLE) nZ: XMM <|@ <|@
      nr   -1  <|@ instruction v36|DOUBLE = VMOVE input: double[0.176091259|0x3fc68a288b421b8c] <|@ <|@
      nr   -1  <|@ instruction v35|DOUBLE = VADDSD (x: v33|DOUBLE, y: v36|DOUBLE) nZ: XMM <|@ <|@
      nr   -1  <|@ instruction v37|DOUBLE = VCVTSI2SD v1|DWORD <|@ <|@
      nr   -1  <|@ instruction v39|DOUBLE = VMOVE input: double[0.301029995663981|0x3fd34413509f79fb] <|@ <|@
      nr   -1  <|@ instruction v38|DOUBLE = VMULSD (x: v37|DOUBLE, y: v39|DOUBLE) nZ: XMM <|@ <|@
      nr   -1  <|@ instruction v40|DOUBLE = VADDSD (x: v35|DOUBLE, y: v38|DOUBLE) nZ: XMM <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = VMOVQ v40|DOUBLE <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = MOVE input: long[-9223372036854775808|0x8000000000000000] <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOVE input: long[9218868437227405312|0x7ff0000000000000] <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = AND (x: v41|QWORD, y: v43|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = SHR v44|QWORD y: 52 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = MOV v45|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = LEA [v46|DWORD - 1023] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v47|DWORD, y: v47|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8017068096060938 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4603959086903862549
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v748 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:829) [bci: 147]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1321 
=== Usages ===
=== Predecessor ===
v750 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1321  <|@  <|@
f <@~|@floating>@ <|@
tid j766 <|@
result v48|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:830) [bci: 154]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
rawvalue: 9223372036854775807
stableDimension: 0
stamp: i64 [9223372036854775807] ⇊7fffffffffffffff ⇈7fffffffffffffff
stampKind: i64
value: long[9223372036854775807|0x7fffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v767 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v767 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:830) [bci: 160]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
x: j738 
y: j766 
=== Succesors ===
=== Usages ===
v1321 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j738 y: j766  <|@  <|@
f <@*|@fixed>@ <|@
tid v1321 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:830) [bci: 160]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v767 
=== Succesors ===
trueSuccessor: v1320 
falseSuccessor: v1318 
=== Usages ===
=== Predecessor ===
v748 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v767 #trueSuccessor: v1320 #falseSuccessor: v1318  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = MOVE input: long[9223372036854775807|0x7fffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v48|QWORD, y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B178" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1320 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:830) [bci: 160]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1512 
=== Usages ===
=== Predecessor ===
v1321 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1512  <|@  <|@
f <@~|@floating>@ <|@
tid i1513 <|@
result int[-317459|0xfffffffffffb27ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -317459
stableDimension: 0
stamp: i32 [-317459] ⇊00000000fffb27ed ⇈00000000fffb27ed
stampKind: i32
value: int[-317459|0xfffffffffffb27ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1514 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1512 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1511 
=== Predecessor ===
v1320 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-317459|0xfffffffffffb27ed]] destination: B30 -> B178 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B38" 
    xhandlers
    flags 
    probability 4603959086903862549
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1318 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:830) [bci: 160]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
=== Succesors ===
next: v776 
=== Usages ===
=== Predecessor ===
v1321 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v776  <|@  <|@
f <@~|@floating>@ <|@
tid i774 <|@
result v49|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:830) [bci: 169]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i32 [-1 - 0]
=== Inputs ===
condition: v746 
trueValue: i8 
falseValue: i17 
=== Succesors ===
=== Usages ===
i777 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v746 trueValue: i8 falseValue: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v776 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v775 
=== Predecessor ===
v1318 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v42|QWORD, y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = CMOVE (falseValue: int[-1|0xffffffffffffffff], ~trueValue: v50|DWORD) condition: = <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|DWORD] destination: B31 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B33" "B177" 
    xhandlers
    flags 
    probability 4594890319253732366
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v749 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:825) [bci: 81]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1325 
=== Usages ===
=== Predecessor ===
v750 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1325  <|@  <|@
f <@~|@floating>@ <|@
tid v751 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:825) [bci: 85]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i744 
y: i80 
=== Succesors ===
=== Usages ===
v1325 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i744 y: i80  <|@  <|@
f <@*|@fixed>@ <|@
tid v1325 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:825) [bci: 85]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v751 
=== Succesors ===
trueSuccessor: v1322 
falseSuccessor: v1324 
=== Usages ===
=== Predecessor ===
v749 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v751 #trueSuccessor: v1322 #falseSuccessor: v1324  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v47|DWORD y: 52 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4594890319253732366
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1322 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:825) [bci: 85]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
=== Succesors ===
next: v761 
=== Usages ===
=== Predecessor ===
v1325 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v761  <|@  <|@
f <@~|@floating>@ <|@
tid j754 <|@
result v51|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:827) [bci: 101]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i64 [0 - 4503599627370495] ⇈000fffffffffffff
=== Inputs ===
x: j738 
y: j724 
=== Succesors ===
=== Usages ===
j756 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j738 y: j724  <|@  <|@
f <@~|@floating>@ <|@
tid j755 <|@
result v52|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:827) [bci: 102]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
rawvalue: 4503599627370496
stableDimension: 0
stamp: i64 [4503599627370496] ⇊0010000000000000 ⇈0010000000000000
stampKind: i64
value: long[4503599627370496|0x10000000000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
j756 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j756 <|@
result v53|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:827) [bci: 105]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i64 [4503599627370496 - 9007199254740991] ⇊0010000000000000 ⇈001fffffffffffff
=== Inputs ===
x: j754 
y: j755 
=== Succesors ===
=== Usages ===
j757 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: j754 y: j755  <|@  <|@
f <@~|@floating>@ <|@
tid i770 <|@
result int[1075|0x433] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:827) [bci: 110]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
rawvalue: 1075
stableDimension: 0
stamp: i32 [1075] ⇊0000000000000433 ⇈0000000000000433
stampKind: i32
value: int[1075|0x433]
=== Inputs ===
=== Succesors ===
=== Usages ===
i771 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i771 <|@
result v55|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:827) [bci: 110]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i32 [-972 - 1075]
=== Inputs ===
x: i770 
y: i742 
=== Succesors ===
=== Usages ===
j757 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i770 y: i742  <|@  <|@
f <@~|@floating>@ <|@
tid j757 <|@
result v56|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:827) [bci: 111]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i64 [0 - 9007199254740991] ⇈001fffffffffffff
=== Inputs ===
x: j756 
y: i771 
=== Succesors ===
=== Usages ===
i758 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j756 y: i771  <|@  <|@
f <@~|@floating>@ <|@
tid i758 <|@
result v57|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:827) [bci: 112]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
resultBits: 32
stamp: i32
=== Inputs ===
value: j757 
=== Succesors ===
=== Usages ===
i764 i777 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j757  <|@  <|@
f <@*|@fixed>@ <|@
tid v761 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:828) [bci: 117]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
trueSuccessorProbability: 0.007647163435888316
=== Inputs ===
condition: v746 
=== Succesors ===
trueSuccessor: v759 
falseSuccessor: v760 
=== Usages ===
=== Predecessor ===
v1322 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v746 #trueSuccessor: v759 #falseSuccessor: v760  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = AND (x: v41|QWORD, y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = MOVE input: long[4503599627370496|0x10000000000000] <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = OR (x: v51|QWORD, y: v52|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = MOVE input: int[1075|0x433] <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = SUB (x: v54|DWORD, ~y: v46|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v55|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = SHR (x: v53|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = MOV v56|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v42|QWORD, y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.007647163435888316 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B38" 
    xhandlers
    flags 
    probability 4563244020390216355
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v759 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:828) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
=== Succesors ===
next: v779 
=== Usages ===
=== Predecessor ===
v761 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v779  <|@  <|@
f <@*|@fixed>@ <|@
tid v779 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v775 
=== Predecessor ===
v759 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v57|DWORD] destination: B34 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4594846559898331785
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v760 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:828) [bci: 120]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1329 
=== Usages ===
=== Predecessor ===
v761 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1329  <|@  <|@
f <@~|@floating>@ <|@
tid j753 <|@
result v58|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:826) [bci: 93]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i64 [0 - 4503599627370495] ⇈000fffffffffffff
=== Inputs ===
x: j724 
y: i744 
=== Succesors ===
=== Usages ===
v762 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j724 y: i744  <|@  <|@
f <@~|@floating>@ <|@
tid v762 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:828) [bci: 127]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
x: j738 
y: j753 
=== Succesors ===
=== Usages ===
v1329 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j738 y: j753  <|@  <|@
f <@*|@fixed>@ <|@
tid v1329 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:828) [bci: 127]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v762 
=== Succesors ===
trueSuccessor: v1328 
falseSuccessor: v1326 
=== Usages ===
=== Predecessor ===
v760 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v762 #trueSuccessor: v1328 #falseSuccessor: v1326  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v47|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = SHR (x: v26|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v58|QWORD, y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B178" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1328 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:828) [bci: 127]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1519 
=== Usages ===
=== Predecessor ===
v1329 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1519  <|@  <|@
f <@~|@floating>@ <|@
tid i1520 <|@
result int[-317971|0xfffffffffffb25ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -317971
stableDimension: 0
stamp: i32 [-317971] ⇊00000000fffb25ed ⇈00000000fffb25ed
stampKind: i32
value: int[-317971|0xfffffffffffb25ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1514 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1519 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1511 
=== Predecessor ===
v1328 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-317971|0xfffffffffffb25ed]] destination: B36 -> B178 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4594846559898331785
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1326 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:828) [bci: 127]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
=== Succesors ===
next: v778 
=== Usages ===
=== Predecessor ===
v1329 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v778  <|@  <|@
f <@~|@floating>@ <|@
tid i764 <|@
result v60|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:828) [bci: 140]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i32
=== Inputs ===
x: i17 
y: i758 
=== Succesors ===
=== Usages ===
i777 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i17 y: i758  <|@  <|@
f <@*|@fixed>@ <|@
tid v778 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v775 
=== Predecessor ===
v1326 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = SUB (x: v59|DWORD, ~y: v57|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v60|DWORD] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" "B37" "B34" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4605389661644661784
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i777 <|@
result v61|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v775 
values: i774 i764 i758 
=== Succesors ===
=== Usages ===
?1484 i94 ?1483 v108 i853 ?1482 ?1481 ?475 ?1480 ?167 ?884 ?239 v244 v247 i922 ?486 ?514 i524 i341 ?1479 i921 i457 ?1478 ?465 ?1477 ?1476 i1586 i796 i851 i1630 i1631 i1632 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v775 values: i774 i764 i758  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v775 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v776 v778 v779 
=== Succesors ===
next: v98 
=== Usages ===
i777 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v776 v778 v779 #next: v98  <|@  <|@
f <@~|@floating>@ <|@
tid i94 <|@
result v62|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NegateNode$$Lambda$180/1857180762@4b0ec103
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:520) [bci: 184]
stamp: i32
=== Inputs ===
value: i777 
=== Succesors ===
=== Usages ===
v95 i847 i794 
=== Predecessor ===
- >@ <|@
instruction <@Negate|@org.graalvm.compiler.nodes.calc.NegateNode>@ value: i777  <|@  <|@
f <@~|@floating>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:520) [bci: 185]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i94 
y: i7 
=== Succesors ===
=== Usages ===
v98 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i94 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:520) [bci: 185]
stamp: void
trueSuccessorProbability: 0.7309313881269885
=== Inputs ===
condition: v95 
=== Succesors ===
trueSuccessor: v96 
falseSuccessor: v97 
=== Usages ===
=== Predecessor ===
v775 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v95 #trueSuccessor: v96 #falseSuccessor: v97  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v61|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = NEG v61|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v62|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7309313881269885 condition: < trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603448481723541948
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 5]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:520) [bci: 185]
stamp: void
=== Inputs ===
=== Succesors ===
next: v100 
=== Usages ===
=== Predecessor ===
v98 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v100  <|@  <|@
f <@*|@fixed>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:520) [bci: 185]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v101 
=== Predecessor ===
v96 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], v25|DWORD, int[0|0x0], int[1|0x1]] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4596932739975014766
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 9]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:520) [bci: 185]
stamp: void
=== Inputs ===
=== Succesors ===
next: v102 
=== Usages ===
=== Predecessor ===
v98 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v102  <|@  <|@
f <@~|@floating>@ <|@
tid i1631 <|@
result v64|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:715) [bci: 1111]
stamp: i32
=== Inputs ===
x: i7 
y: i777 
=== Succesors ===
=== Usages ===
i850 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i7 y: i777  <|@  <|@
f <@~|@floating>@ <|@
tid i847 <|@
result v65|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:591) [bci: 329]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i94 
y: i7 
=== Succesors ===
=== Usages ===
i1632 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i94 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i1632 <|@
result v66|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:591) [bci: 329]
stamp: i32
=== Inputs ===
x: i847 
y: i777 
=== Succesors ===
=== Usages ===
i856 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i847 y: i777  <|@  <|@
f <@~|@floating>@ <|@
tid i1630 <|@
result v67|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:521) [bci: 194]
stamp: i32
=== Inputs ===
x: i948 
y: i777 
=== Succesors ===
=== Usages ===
i846 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i948 y: i777  <|@  <|@
f <@*|@fixed>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:520) [bci: 185]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v101 
=== Predecessor ===
v97 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = SUB (x: v63|DWORD, ~y: v61|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = SHL v62|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = SUB (x: v65|DWORD, ~y: v61|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v67|DWORD = SUB (x: v25|DWORD, ~y: v61|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v62|DWORD, v67|DWORD, v66|DWORD, v64|DWORD] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4605389661644661784
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i794 <|@
result v68|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:520) [bci: 185]
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
valueDescription: i32
=== Inputs ===
merge: v101 
values: i8 i94 
=== Succesors ===
=== Usages ===
?1479 v1171 ?1478 ?1477 ?1478 ?1476 ?465 ?1476 ?1477 v801 v1612 ?475 ?465 ?167 ?167 ?884 ?884 v1614 v1049 v1620 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v101 values: i8 i94  <|@  <|@
f <@~|@floating>@ <|@
tid i846 <|@
result v69|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v101 
values: i948 i1630 
=== Succesors ===
=== Usages ===
i107 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v101 values: i948 i1630  <|@  <|@
f <@~|@floating>@ <|@
tid i856 <|@
result v70|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v101 
values: i8 i1632 
=== Succesors ===
=== Usages ===
i168 i882 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v101 values: i8 i1632  <|@  <|@
f <@~|@floating>@ <|@
tid i850 <|@
result v71|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v101 
values: i7 i1631 
=== Succesors ===
=== Usages ===
v1172 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v101 values: i7 i1631  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:520) [bci: 185]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v100 v102 
=== Succesors ===
next: v111 
=== Usages ===
i794 i846 i856 i850 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v100 v102 #next: v111  <|@  <|@
f <@~|@floating>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:523) [bci: 202]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i777 
y: i7 
=== Succesors ===
=== Usages ===
v111 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i777 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i160 <|@
result int[3|0x3] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:591) [bci: 328]
rawvalue: 3
stableDimension: 0
stamp: i32 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
i213 i219 i810 j316 j323 j412 i680 i826 j688 j692 i860 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:523) [bci: 202]
stamp: void
trueSuccessorProbability: 0.7309313881269885
=== Inputs ===
condition: v108 
=== Succesors ===
trueSuccessor: v109 
falseSuccessor: v110 
=== Usages ===
=== Predecessor ===
v101 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v108 #trueSuccessor: v109 #falseSuccessor: v110  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v68|DWORD, v69|DWORD, v70|DWORD, v71|DWORD] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v61|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7309313881269885 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4603448481723541948
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 5]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:523) [bci: 202]
stamp: void
=== Inputs ===
=== Succesors ===
next: v113 
=== Usages ===
=== Predecessor ===
v111 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v113  <|@  <|@
f <@*|@fixed>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:523) [bci: 202]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v114 
=== Predecessor ===
v109 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], v25|DWORD, int[1|0x1], int[3|0x3]] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4596932739975014766
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 9]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:523) [bci: 202]
stamp: void
=== Inputs ===
=== Succesors ===
next: v115 
=== Usages ===
=== Predecessor ===
v111 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v115  <|@  <|@
f <@~|@floating>@ <|@
tid i853 <|@
result v72|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 340]
stamp: i32
=== Inputs ===
x: i777 
y: i7 
=== Succesors ===
=== Usages ===
i854 i857 i859 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i777 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i857 <|@
result v73|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 364]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i853 
y: i7 
=== Succesors ===
=== Usages ===
i859 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i853 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i859 <|@
result v74|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 364]
stamp: i32
=== Inputs ===
x: i853 
y: i857 
=== Succesors ===
=== Usages ===
i860 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i853 y: i857  <|@  <|@
f <@~|@floating>@ <|@
tid i851 <|@
result v75|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:524) [bci: 211]
stamp: i32
=== Inputs ===
x: i777 
y: i948 
=== Succesors ===
=== Usages ===
i852 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i777 y: i948  <|@  <|@
f <@*|@fixed>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:523) [bci: 202]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v114 
=== Predecessor ===
v110 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = INC v61|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = SHL v72|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = ADD (x: v73|DWORD, y: v72|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = ADD (x: v61|DWORD, y: v25|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v61|DWORD, v75|DWORD, v72|DWORD, v74|DWORD] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" "B43" 
    successors "B45" "B48" 
    xhandlers
    flags 
    probability 4605389661644661784
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i796 <|@
result v76|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:523) [bci: 202]
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
valueDescription: i32
=== Inputs ===
merge: v114 
values: i8 i777 
=== Succesors ===
=== Usages ===
?1480 v1057 ?1479 v1111 ?1478 ?167 ?475 ?884 v1615 v1621 ?1477 v1165 ?465 ?1476 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v114 values: i8 i777  <|@  <|@
f <@~|@floating>@ <|@
tid i852 <|@
result v77|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v114 
values: i948 i851 
=== Succesors ===
=== Usages ===
i129 i990 i127 v780 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v114 values: i948 i851  <|@  <|@
f <@~|@floating>@ <|@
tid i854 <|@
result v78|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v114 
values: i7 i853 
=== Succesors ===
=== Usages ===
v171 v1613 v1173 v1039 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v114 values: i7 i853  <|@  <|@
f <@~|@floating>@ <|@
tid i860 <|@
result v79|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v114 
values: i160 i859 
=== Succesors ===
=== Usages ===
i868 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v114 values: i160 i859  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:523) [bci: 202]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v113 v115 
=== Succesors ===
next: v783 
=== Usages ===
i796 i852 i854 i860 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v113 v115 #next: v783  <|@  <|@
f <@~|@floating>@ <|@
tid i107 <|@
result v80|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:521) [bci: 196]
stamp: i32
=== Inputs ===
x: i2 
y: i846 
=== Succesors ===
=== Usages ===
i123 i120 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2 y: i846  <|@  <|@
f <@~|@floating>@ <|@
tid i679 <|@
result v82|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:538) [bci: 235]
stamp: i32 [-12 - 52]
=== Inputs ===
x: i80 
y: i9 
=== Succesors ===
=== Usages ===
i123 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i80 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid i123 <|@
result v83|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:538) [bci: 236]
stamp: i32
=== Inputs ===
x: i107 
y: i679 
=== Succesors ===
=== Usages ===
i991 i990 i127 v780 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i107 y: i679  <|@  <|@
f <@~|@floating>@ <|@
tid v780 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:539) [bci: 243]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i852 
y: i123 
=== Succesors ===
=== Usages ===
v783 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i852 y: i123  <|@  <|@
f <@~|@floating>@ <|@
tid i120 <|@
result v84|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:527) [bci: 222]
stamp: i32
=== Inputs ===
x: i107 
y: i4 
=== Succesors ===
=== Usages ===
i991 i129 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i107 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:550) [bci: 272]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i11 
y: i7 
=== Succesors ===
=== Usages ===
v133 v987 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i11 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v783 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:539) [bci: 243]
stamp: void
trueSuccessorProbability: 0.44744570600555483
=== Inputs ===
condition: v780 
=== Succesors ===
trueSuccessor: v781 
falseSuccessor: v782 
=== Usages ===
=== Predecessor ===
v114 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v780 #trueSuccessor: v781 #falseSuccessor: v782  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v76|DWORD, v77|DWORD, v78|DWORD, v79|DWORD] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = ADD (x: v69|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v81|DWORD = MOVE input: int[52|0x34] <|@ <|@
      nr   -1  <|@ instruction v82|DWORD = SUB (x: v81|DWORD, ~y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v83|DWORD = SUB (x: v80|DWORD, ~y: v82|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v84|DWORD = SUB (x: v80|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v83|DWORD, y: v77|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.44744570600555483 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4600127762195097286
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v781 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 9]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:539) [bci: 243]
stamp: void
=== Inputs ===
=== Succesors ===
next: v133 
=== Usages ===
=== Predecessor ===
v783 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v133  <|@  <|@
f <@~|@floating>@ <|@
tid i127 <|@
result v85|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:540) [bci: 252]
stamp: i32
=== Inputs ===
x: i123 
y: i852 
=== Succesors ===
=== Usages ===
i972 i974 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i123 y: i852  <|@  <|@
f <@~|@floating>@ <|@
tid i129 <|@
result v86|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:542) [bci: 266]
stamp: i32
=== Inputs ===
x: i120 
y: i852 
=== Succesors ===
=== Usages ===
i982 i138 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i120 y: i852  <|@  <|@
f <@*|@fixed>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:550) [bci: 272]
stamp: void
trueSuccessorProbability: 0.3620750396336093
=== Inputs ===
condition: v130 
=== Succesors ===
trueSuccessor: v131 
falseSuccessor: v132 
=== Usages ===
=== Predecessor ===
v781 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v130 #trueSuccessor: v131 #falseSuccessor: v132  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = SUB (x: v83|DWORD, ~y: v77|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = SUB (x: v84|DWORD, ~y: v77|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v8|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.3620750396336093 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B50" 
    xhandlers
    flags 
    probability 4593843236232323993
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:551) [bci: 275]
stamp: void
=== Inputs ===
=== Succesors ===
next: v963 
=== Usages ===
=== Predecessor ===
v133 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v963  <|@  <|@
f <@*|@fixed>@ <|@
tid v963 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v962 
=== Predecessor ===
v131 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v86|DWORD, v85|DWORD, int[0|0x0]] destination: B46 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B52" 
    xhandlers
    flags 
    probability 4597405088903129587
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:554) [bci: 278]
stamp: void
=== Inputs ===
=== Succesors ===
next: v135 
=== Usages ===
=== Predecessor ===
v133 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v135  <|@  <|@
f <@*|@fixed>@ <|@
tid v135 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:554) [bci: 278]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v136 
=== Predecessor ===
v132 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v86|DWORD, v85|DWORD, int[0|0x0]] destination: B47 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B49" "B51" 
    xhandlers
    flags 
    probability 4601644361839485290
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v782 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 5]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:539) [bci: 243]
stamp: void
=== Inputs ===
=== Succesors ===
next: v987 
=== Usages ===
=== Predecessor ===
v783 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v987  <|@  <|@
f <@~|@floating>@ <|@
tid i990 <|@
result v87|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:541) [bci: 259]
stamp: i32
=== Inputs ===
x: i852 
y: i123 
=== Succesors ===
=== Usages ===
i977 i979 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i852 y: i123  <|@  <|@
f <@~|@floating>@ <|@
tid i991 <|@
result v88|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:542) [bci: 266]
stamp: i32
=== Inputs ===
x: i120 
y: i123 
=== Succesors ===
=== Usages ===
i982 i138 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i120 y: i123  <|@  <|@
f <@*|@fixed>@ <|@
tid v987 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:550) [bci: 272]
stamp: void
trueSuccessorProbability: 0.3620750396336093
=== Inputs ===
condition: v130 
=== Succesors ===
trueSuccessor: v985 
falseSuccessor: v986 
=== Usages ===
=== Predecessor ===
v782 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v130 #trueSuccessor: v985 #falseSuccessor: v986  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = SUB (x: v77|DWORD, ~y: v83|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = SUB (x: v84|DWORD, ~y: v83|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v8|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.3620750396336093 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" 
    xhandlers
    flags 
    probability 4594941481985024202
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v985 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:551) [bci: 275]
stamp: void
=== Inputs ===
=== Succesors ===
next: v964 
=== Usages ===
=== Predecessor ===
v987 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v964  <|@  <|@
f <@*|@fixed>@ <|@
tid v964 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v962 
=== Predecessor ===
v985 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v88|DWORD, int[0|0x0], v87|DWORD] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B46" "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4598895958736044594
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i982 <|@
result v89|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v962 
values: i129 i991 
=== Succesors ===
=== Usages ===
i134 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v962 values: i129 i991  <|@  <|@
f <@~|@floating>@ <|@
tid i974 <|@
result v90|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v962 
values: i127 i8 
=== Succesors ===
=== Usages ===
i972 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v962 values: i127 i8  <|@  <|@
f <@~|@floating>@ <|@
tid i979 <|@
result v91|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v962 
values: i8 i990 
=== Succesors ===
=== Usages ===
i977 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v962 values: i8 i990  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v962 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v963 v964 
=== Succesors ===
next: v137 
=== Usages ===
i982 i974 i979 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v963 v964 #next: v137  <|@  <|@
f <@~|@floating>@ <|@
tid i134 <|@
result v92|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:551) [bci: 275]
stamp: i32
=== Inputs ===
x: i982 
y: i17 
=== Succesors ===
=== Usages ===
i138 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i982 y: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:554) [bci: 278]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v136 
=== Predecessor ===
v962 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v89|DWORD, v90|DWORD, v91|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = DEC v89|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v92|DWORD, v90|DWORD, v91|DWORD] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B52" 
    xhandlers
    flags 
    probability 4598757630992240901
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v986 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:554) [bci: 278]
stamp: void
=== Inputs ===
=== Succesors ===
next: v992 
=== Usages ===
=== Predecessor ===
v987 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v992  <|@  <|@
f <@*|@fixed>@ <|@
tid v992 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v136 
=== Predecessor ===
v986 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v88|DWORD, int[0|0x0], v87|DWORD] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B47" "B50" "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4605389661644661784
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i138 <|@
result v93|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:554) [bci: 278]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v136 
values: i129 i134 i991 
=== Succesors ===
=== Usages ===
i798 v140 i144 i145 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v136 values: i129 i134 i991  <|@  <|@
f <@~|@floating>@ <|@
tid i972 <|@
result v94|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v136 
values: i127 i974 i8 
=== Succesors ===
=== Usages ===
i144 i149 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v136 values: i127 i974 i8  <|@  <|@
f <@~|@floating>@ <|@
tid i977 <|@
result v95|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v136 
values: i8 i979 i990 
=== Succesors ===
=== Usages ===
i145 i150 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v136 values: i8 i979 i990  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:554) [bci: 278]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v135 v137 v992 
=== Succesors ===
next: v143 
=== Usages ===
i138 i972 i977 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v135 v137 v992 #next: v143  <|@  <|@
f <@~|@floating>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:554) [bci: 280]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i138 
y: i8 
=== Succesors ===
=== Usages ===
v143 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i138 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:554) [bci: 280]
stamp: void
trueSuccessorProbability: 0.9999471561184408
=== Inputs ===
condition: v140 
=== Succesors ===
trueSuccessor: v141 
falseSuccessor: v142 
=== Usages ===
=== Predecessor ===
v136 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v140 #trueSuccessor: v141 #falseSuccessor: v142  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v93|DWORD, v94|DWORD, v95|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v93|DWORD, y: v93|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9999471561184408 condition: < trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4605389280405537968
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:558) [bci: 283]
stamp: void
=== Inputs ===
=== Succesors ===
next: v148 
=== Usages ===
=== Predecessor ===
v143 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v148  <|@  <|@
f <@~|@floating>@ <|@
tid i145 <|@
result v96|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:559) [bci: 294]
stamp: i32
=== Inputs ===
x: i977 
y: i138 
=== Succesors ===
=== Usages ===
i150 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i977 y: i138  <|@  <|@
f <@~|@floating>@ <|@
tid i144 <|@
result v97|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:558) [bci: 287]
stamp: i32
=== Inputs ===
x: i972 
y: i138 
=== Succesors ===
=== Usages ===
i149 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i972 y: i138  <|@  <|@
f <@*|@fixed>@ <|@
tid v148 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:570) [bci: 300]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v147 
=== Predecessor ===
v141 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = SUB (x: v95|DWORD, ~y: v93|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v97|DWORD = SUB (x: v94|DWORD, ~y: v93|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v97|DWORD, v96|DWORD, int[0|0x0]] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4541371046566689324
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:570) [bci: 300]
stamp: void
=== Inputs ===
=== Succesors ===
next: v146 
=== Usages ===
=== Predecessor ===
v143 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v146  <|@  <|@
f <@*|@fixed>@ <|@
tid v146 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:570) [bci: 300]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v147 
=== Predecessor ===
v142 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v94|DWORD, v95|DWORD, v93|DWORD] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B53" 
    successors "B56" "B59" 
    xhandlers
    flags 
    probability 4605389661644661784
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i149 <|@
result v98|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:570) [bci: 300]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v147 
values: i972 i144 
=== Succesors ===
=== Usages ===
?1478 i153 ?167 ?884 i207 j310 ?1477 ?465 ?1476 i472 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v147 values: i972 i144  <|@  <|@
f <@~|@floating>@ <|@
tid i150 <|@
result v99|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:570) [bci: 300]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v147 
values: i977 i145 
=== Succesors ===
=== Usages ===
?1480 ?167 i169 ?884 i209 j312 ?1479 v1165 ?465 ?1478 ?1477 ?475 ?1476 i482 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v147 values: i977 i145  <|@  <|@
f <@~|@floating>@ <|@
tid i798 <|@
result v100|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:570) [bci: 300]
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
valueDescription: i32
=== Inputs ===
merge: v147 
values: i138 i8 
=== Succesors ===
=== Usages ===
?1479 ?167 ?884 i211 j314 ?1478 ?465 ?1477 ?1476 ?475 i477 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v147 values: i138 i8  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v147 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:570) [bci: 300]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v146 v148 
=== Succesors ===
next: v157 
=== Usages ===
i149 i150 i798 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v146 v148 #next: v157  <|@  <|@
f <@~|@floating>@ <|@
tid i153 <|@
result v101|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:591) [bci: 307]
stamp: i32
=== Inputs ===
x: i11 
y: i149 
=== Succesors ===
=== Usages ===
?167 i168 i896 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i11 y: i149  <|@  <|@
f <@~|@floating>@ <|@
tid v171 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 345]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i854 
y: i45 
=== Succesors ===
=== Usages ===
v174 v894 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i854 y: i45  <|@  <|@
f <@~|@floating>@ <|@
tid v801 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:591) [bci: 314]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i794 
y: i45 
=== Succesors ===
=== Usages ===
v157 v1397 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i794 y: i45  <|@  <|@
f <@~|@floating>@ <|@
tid j278 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:634) [bci: 637]
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v660 j630 j630 v449 ?650 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j280 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:634) [bci: 639]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v662 v417 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i234 <|@
result int[48|0x30] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:618) [bci: 545]
rawvalue: 48
stableDimension: 0
stamp: i32 [48] ⇊0000000000000030 ⇈0000000000000030
stampKind: i32
value: int[48|0x30]
=== Inputs ===
=== Succesors ===
=== Usages ===
i235 i820 i344 i439 i516 i600 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i246 <|@
result int[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 566]
rawvalue: 8
stableDimension: 0
stamp: i32 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
v247 v360 v537 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i243 <|@
result int[-3|0xfffffffffffffffd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 559]
rawvalue: -3
stableDimension: 0
stamp: i32 [-3] ⇊00000000fffffffd ⇈00000000fffffffd
stampKind: i32
value: int[-3|0xfffffffffffffffd]
=== Inputs ===
=== Succesors ===
=== Usages ===
v244 v358 v530 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v241 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 554]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i5 
y: i8 
=== Succesors ===
=== Usages ===
v1353 v357 v529 v938 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i5 y: i8  <|@  <|@
f <@~|@floating>@ <|@
tid v1616 <|@
result [v0|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1593 a1603 a1601 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j121 <|@
result v102|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:537) [bci: 228]
stamp: i64
=== Inputs ===
x: j3 
y: i9 
=== Succesors ===
=== Usages ===
?1478 v1171 ?1477 ?167 ?884 i203 j309 ?1476 ?465 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j3 y: i9  <|@  <|@
f <@*|@fixed>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:591) [bci: 314]
stamp: void
trueSuccessorProbability: 0.9999471514639044
=== Inputs ===
condition: v801 
=== Succesors ===
trueSuccessor: v155 
falseSuccessor: v156 
=== Usages ===
=== Predecessor ===
v147 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v801 #trueSuccessor: v155 #falseSuccessor: v156  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v98|DWORD, v99|DWORD, v100|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v101|DWORD = ADD (x: v98|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v6|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v102|QWORD = SHR (x: v2|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v68|DWORD y: 27 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9999471514639044 condition: |<| trueDestination: B55 -> B56 falseDestination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" "B58" 
    xhandlers
    flags 
    probability 4605389280371958085
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:591) [bci: 317]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1591 
=== Usages ===
i1591 
=== Predecessor ===
v157 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1591  <|@  <|@
f <@~|@floating>@ <|@
tid v1612 <|@
result [v5|QWORD[.] + v68|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a51 
index: i794 
=== Succesors ===
=== Usages ===
i1591 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a51 index: i794  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1591 <|@
result v103|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:591) [bci: 322]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v155 
address: v1612 
=== Succesors ===
next: v894 
=== Usages ===
i882 i896 
=== Predecessor ===
v155 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v155 address: v1612 #next: v894  <|@  <|@
f <@~|@floating>@ <|@
tid i896 <|@
result v104|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:591) [bci: 330]
stamp: i32
=== Inputs ===
x: i153 
y: i1591 
=== Succesors ===
=== Usages ===
i886 i887 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i153 y: i1591  <|@  <|@
f <@*|@fixed>@ <|@
tid v894 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 345]
stamp: void
trueSuccessorProbability: 0.9999471523948773
=== Inputs ===
condition: v171 
=== Succesors ===
trueSuccessor: v892 
falseSuccessor: v893 
=== Usages ===
=== Predecessor ===
i1591 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v171 #trueSuccessor: v892 #falseSuccessor: v893  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v103|DWORD = MOV [v5|QWORD[.] + v68|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v104|DWORD = ADD (x: v101|DWORD, y: v103|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v78|DWORD y: 27 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9999471523948773 condition: < trueDestination: B56 -> B57 falseDestination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B61" 
    xhandlers
    flags 
    probability 4605388899126120185
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v892 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 348]
stamp: void
=== Inputs ===
=== Succesors ===
next: v877 
=== Usages ===
=== Predecessor ===
v894 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v877  <|@  <|@
f <@*|@fixed>@ <|@
tid v877 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v875 
=== Predecessor ===
v892 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v103|DWORD, v104|DWORD] destination: B57 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B67" 
    xhandlers
    flags 
    probability 4541371156570236319
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v893 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 359]
stamp: void
=== Inputs ===
=== Succesors ===
next: v881 
=== Usages ===
=== Predecessor ===
v894 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v881  <|@  <|@
f <@*|@fixed>@ <|@
tid v881 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v878 
=== Predecessor ===
v893 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v104|DWORD] destination: B58 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" "B66" 
    xhandlers
    flags 
    probability 4541371596739487840
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:591) [bci: 326]
stamp: void
=== Inputs ===
=== Succesors ===
next: v174 
=== Usages ===
=== Predecessor ===
v157 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v174  <|@  <|@
f <@~|@floating>@ <|@
tid i168 <|@
result v105|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:591) [bci: 330]
stamp: i32
=== Inputs ===
x: i153 
y: i856 
=== Succesors ===
=== Usages ===
i886 i887 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i153 y: i856  <|@  <|@
f <@*|@fixed>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 345]
stamp: void
trueSuccessorProbability: 0.9999471523948773
=== Inputs ===
condition: v171 
=== Succesors ===
trueSuccessor: v172 
falseSuccessor: v173 
=== Usages ===
=== Predecessor ===
v156 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v171 #trueSuccessor: v172 #falseSuccessor: v173  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = ADD (x: v70|DWORD, y: v101|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v78|DWORD y: 27 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9999471523948773 condition: < trueDestination: B59 -> B60 falseDestination: B59 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" 
    xhandlers
    flags 
    probability 4541371266612549087
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v172 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 348]
stamp: void
=== Inputs ===
=== Succesors ===
next: v876 
=== Usages ===
=== Predecessor ===
v174 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v876  <|@  <|@
f <@*|@fixed>@ <|@
tid v876 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v875 
=== Predecessor ===
v172 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v70|DWORD, v105|DWORD] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B57" 
    successors "B62" "B65" 
    xhandlers
    flags 
    probability 4605389280378674534
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i882 <|@
result v106|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v875 
values: i856 i1591 
=== Succesors ===
=== Usages ===
?167 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v875 values: i856 i1591  <|@  <|@
f <@~|@floating>@ <|@
tid i887 <|@
result v107|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v875 
values: i168 i896 
=== Succesors ===
=== Usages ===
i1495 v890 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v875 values: i168 i896  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v875 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v876 v877 
=== Succesors ===
next: v1333 
=== Usages ===
i882 i887 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v876 v877 #next: v1333  <|@  <|@
f <@~|@floating>@ <|@
tid v1039 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 355]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i854 
y: i45 
=== Succesors ===
=== Usages ===
v1333 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i854 y: i45  <|@  <|@
f <@*|@fixed>@ <|@
tid v1333 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 355]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1039 
=== Succesors ===
trueSuccessor: v1330 
falseSuccessor: v1332 
=== Usages ===
=== Predecessor ===
v875 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1039 #trueSuccessor: v1330 #falseSuccessor: v1332  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v106|DWORD, v107|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v78|DWORD y: 27 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B61 -> B62 falseDestination: B61 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" "B64" 
    xhandlers
    flags 
    probability 4605389280378674534
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1330 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 355]
stamp: void
=== Inputs ===
=== Succesors ===
next: v873 
=== Usages ===
i1592 
=== Predecessor ===
v1333 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v873  <|@  <|@
f <@~|@floating>@ <|@
tid v890 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:595) [bci: 372]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i887 
y: i54 
=== Succesors ===
=== Usages ===
v873 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i887 y: i54  <|@  <|@
f <@*|@fixed>@ <|@
tid v873 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:595) [bci: 372]
stamp: void
trueSuccessorProbability: 0.9867185711014427
=== Inputs ===
condition: v890 
=== Succesors ===
trueSuccessor: v871 
falseSuccessor: v872 
=== Usages ===
=== Predecessor ===
v1330 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v890 #trueSuccessor: v871 #falseSuccessor: v872  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v107|DWORD y: 64 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9867185711014427 condition: < trueDestination: B62 -> B63 falseDestination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B69" 
    xhandlers
    flags 
    probability 4605293467342645890
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v871 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:595) [bci: 375]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1592 
=== Usages ===
=== Predecessor ===
v873 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1592  <|@  <|@
f <@~|@floating>@ <|@
tid v1613 <|@
result [v5|QWORD[.] + v78|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a51 
index: i854 
=== Succesors ===
=== Usages ===
i1592 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a51 index: i854  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1592 <|@
result v108|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 355]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1330 
address: v1613 
=== Succesors ===
next: v863 
=== Usages ===
i868 
=== Predecessor ===
v871 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1330 address: v1613 #next: v863  <|@  <|@
f <@*|@fixed>@ <|@
tid v863 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v861 
=== Predecessor ===
i1592 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v108|DWORD = MOV [v5|QWORD[.] + v78|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v108|DWORD, v107|DWORD] destination: B63 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B137" 
    xhandlers
    flags 
    probability 4577285656086886675
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v872 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1070]
stamp: void
=== Inputs ===
=== Succesors ===
next: v874 
=== Usages ===
=== Predecessor ===
v873 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v874  <|@  <|@
f <@*|@fixed>@ <|@
tid v874 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v192 
=== Predecessor ===
v872 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B64 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1332 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 355]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1331 
=== Usages ===
=== Predecessor ===
v1333 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1331  <|@  <|@
tid ?167 <|@
d <@d|@=== Debug Properties ===
bci: 330
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 591
stackSize: 2
=== Inputs ===
outerFrameState: - 
values: a1 - j121 - - i5 - - - i777 i149 i794 i150 i796 i798 i794 - - - - - - - - - - - - - - - - - i153 i882 
=== Succesors ===
=== Usages ===
v1331 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - j121 - - i5 - - - i777 i149 i794 i150 i796 i798 i794 - - - - - - - - - - - - - - - - - i153 i882  <|@  <|@
f <@*|@fixed>@ <|@
tid v1331 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1040
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 355]
reason: BoundsCheckException
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?167 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1332 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?167  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -266267 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:591) [bci: 330]
stack: v101|DWORD v106|DWORD 
locals: v0|QWORD[.] - v102|QWORD - - v4|DWORD - - - v61|DWORD v98|DWORD v68|DWORD v99|DWORD v76|DWORD v100|DWORD v68|DWORD - - - - - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:330] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B67" 
    xhandlers
    flags 
    probability 4477483229743432929
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 359]
stamp: void
=== Inputs ===
=== Succesors ===
next: v879 
=== Usages ===
=== Predecessor ===
v174 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v879  <|@  <|@
f <@*|@fixed>@ <|@
tid v879 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v878 
=== Predecessor ===
v173 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v105|DWORD] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B58" 
    successors "B68" "B136" 
    xhandlers
    flags 
    probability 4541371486697175072
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i886 <|@
result v109|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v878 
values: i168 i896 
=== Succesors ===
=== Usages ===
i1495 v889 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v878 values: i168 i896  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v878 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v879 v881 
=== Succesors ===
next: v188 
=== Usages ===
i886 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v879 v881 #next: v188  <|@  <|@
f <@~|@floating>@ <|@
tid v889 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:595) [bci: 372]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i886 
y: i54 
=== Succesors ===
=== Usages ===
v188 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i886 y: i54  <|@  <|@
f <@*|@fixed>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:595) [bci: 372]
stamp: void
trueSuccessorProbability: 0.9867185711014427
=== Inputs ===
condition: v889 
=== Succesors ===
trueSuccessor: v186 
falseSuccessor: v187 
=== Usages ===
=== Predecessor ===
v878 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v889 #trueSuccessor: v186 #falseSuccessor: v187  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v109|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v109|DWORD y: 64 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9867185711014427 condition: < trueDestination: B67 -> B68 falseDestination: B67 -> B136 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B69" 
    xhandlers
    flags 
    probability 4541288522100830908
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:595) [bci: 375]
stamp: void
=== Inputs ===
=== Succesors ===
next: v862 
=== Usages ===
=== Predecessor ===
v188 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v862  <|@  <|@
f <@*|@fixed>@ <|@
tid v862 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v861 
=== Predecessor ===
v186 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v79|DWORD, v109|DWORD] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" "B63" 
    successors "B70" "B135" 
    xhandlers
    flags 
    probability 4605293843544876038
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i868 <|@
result v110|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v861 
values: i860 i1592 
=== Succesors ===
=== Usages ===
?884 i184 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v861 values: i860 i1592  <|@  <|@
f <@~|@floating>@ <|@
tid i1495 <|@
result v111|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v861 
values: i886 i887 
=== Succesors ===
=== Usages ===
?884 v197 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v861 values: i886 i887  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v861 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v862 v863 
=== Succesors ===
next: v195 
=== Usages ===
i868 i1495 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v862 v863 #next: v195  <|@  <|@
f <@~|@floating>@ <|@
tid i169 <|@
result v112|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 336]
stamp: i32
=== Inputs ===
x: i150 
y: i7 
=== Succesors ===
=== Usages ===
?884 i184 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i150 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i184 <|@
result v113|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365]
stamp: i32
=== Inputs ===
x: i169 
y: i868 
=== Succesors ===
=== Usages ===
v189 v201 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i169 y: i868  <|@  <|@
f <@~|@floating>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:595) [bci: 379]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i184 
y: i54 
=== Succesors ===
=== Usages ===
v195 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i184 y: i54  <|@  <|@
f <@*|@fixed>@ <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:595) [bci: 379]
stamp: void
trueSuccessorProbability: 0.9680978309381416
=== Inputs ===
condition: v189 
=== Succesors ===
trueSuccessor: v190 
falseSuccessor: v194 
=== Usages ===
=== Predecessor ===
v861 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v189 #trueSuccessor: v190 #falseSuccessor: v194  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v110|DWORD, v111|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = INC v99|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v113|DWORD = ADD (x: v112|DWORD, y: v110|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v113|DWORD y: 64 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9680978309381416 condition: < trueDestination: B69 -> B70 falseDestination: B69 -> B135 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" "B101" 
    xhandlers
    flags 
    probability 4605066743998553008
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:596) [bci: 382]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1593 
=== Usages ===
=== Predecessor ===
v195 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1593  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1593 <|@
result v114|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.digits
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:618) [bci: 537]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v1616 
=== Succesors ===
next: v200 
=== Usages ===
v1122 a1121 v1617 v1618 v1619 v1638 v1639 
=== Predecessor ===
v190 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1616 #next: v200  <|@  <|@
f <@~|@floating>@ <|@
tid v1617 <|@
result [v114|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1593 
=== Succesors ===
=== Usages ===
i1595 i1600 i1599 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1593  <|@  <|@
tid ?884 <|@
d <@d|@=== Debug Properties ===
bci: 365
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 594
stackSize: 2
=== Inputs ===
outerFrameState: - 
values: a1 - j121 - - i5 - - - i777 i149 i794 i150 i796 i798 i794 - - - - - - - i1495 - - - - - - - - - i169 i868 
=== Succesors ===
=== Usages ===
v1552 j319 j321 i217 i216 v1638 i1599 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - j121 - - i5 - - - i777 i149 i794 i150 i796 i798 i794 - - - - - - - i1495 - - - - - - - - - i169 i868  <|@  <|@
f <@~|@floating>@ <|@
tid i196 <|@
result int[32|0x20] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:596) [bci: 384]
rawvalue: 32
stableDimension: 0
stamp: i32 [32] ⇊0000000000000020 ⇈0000000000000020
stampKind: i32
value: int[32|0x20]
=== Inputs ===
=== Succesors ===
=== Usages ===
v197 v201 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:596) [bci: 386]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1495 
y: i196 
=== Succesors ===
=== Usages ===
v200 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1495 y: i196  <|@  <|@
f <@*|@fixed>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:596) [bci: 386]
stamp: void
trueSuccessorProbability: 9.220839096357736E-4
=== Inputs ===
condition: v197 
=== Succesors ===
trueSuccessor: v198 
falseSuccessor: v199 
=== Usages ===
=== Predecessor ===
a1593 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v197 #trueSuccessor: v198 #falseSuccessor: v199  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v114|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v111|DWORD y: 32 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 9.220839096357736E-4 condition: < trueDestination: B70 -> B71 falseDestination: B70 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B72" "B100" 
    xhandlers
    flags 
    probability 4559646296614268741
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:596) [bci: 389]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1337 
=== Usages ===
=== Predecessor ===
v200 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1337  <|@  <|@
f <@~|@floating>@ <|@
tid v201 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:596) [bci: 393]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i184 
y: i196 
=== Succesors ===
=== Usages ===
v1337 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i184 y: i196  <|@  <|@
f <@*|@fixed>@ <|@
tid v1337 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:596) [bci: 393]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v201 
=== Succesors ===
trueSuccessor: v1334 
falseSuccessor: v1336 
=== Usages ===
=== Predecessor ===
v198 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v201 #trueSuccessor: v1334 #falseSuccessor: v1336  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v113|DWORD y: 32 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B71 -> B72 falseDestination: B71 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B73" "B99" 
    xhandlers
    flags 
    probability 4559646296614268741
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1334 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:596) [bci: 393]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1341 
=== Usages ===
=== Predecessor ===
v1337 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1341  <|@  <|@
f <@~|@floating>@ <|@
tid i1048 <|@
result int[14|0xe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:598) [bci: 403]
rawvalue: 14
stableDimension: 0
stamp: i32 [14] ⇊000000000000000e ⇈000000000000000e
stampKind: i32
value: int[14|0xe]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1049 v1057 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1049 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:598) [bci: 403]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i794 
y: i1048 
=== Succesors ===
=== Usages ===
v1341 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i794 y: i1048  <|@  <|@
f <@*|@fixed>@ <|@
tid v1341 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:598) [bci: 403]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1049 
=== Succesors ===
trueSuccessor: v1338 
falseSuccessor: v1340 
=== Usages ===
=== Predecessor ===
v1334 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1049 #trueSuccessor: v1338 #falseSuccessor: v1340  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v68|DWORD y: 14 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B72 -> B73 falseDestination: B72 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B74" "B98" 
    xhandlers
    flags 
    probability 4559646296614268741
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1338 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:598) [bci: 403]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1345 
=== Usages ===
i1594 
=== Predecessor ===
v1341 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1345  <|@  <|@
f <@~|@floating>@ <|@
tid v1057 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:599) [bci: 415]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i796 
y: i1048 
=== Succesors ===
=== Usages ===
v1345 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i796 y: i1048  <|@  <|@
f <@*|@fixed>@ <|@
tid v1345 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:599) [bci: 415]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1057 
=== Succesors ===
trueSuccessor: v1342 
falseSuccessor: v1344 
=== Usages ===
=== Predecessor ===
v1338 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1057 #trueSuccessor: v1342 #falseSuccessor: v1344  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v76|DWORD y: 14 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B73 -> B74 falseDestination: B73 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4559646296614268741
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1342 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:599) [bci: 415]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1638 
=== Usages ===
i1596 
=== Predecessor ===
v1345 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1638  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1638 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?884 
object: a1593 
=== Succesors ===
next: v1353 
=== Usages ===
=== Predecessor ===
v1342 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?884 object: a1593 #next: v1353  <|@  <|@
f <@*|@fixed>@ <|@
tid v1353 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 554]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v241 
=== Succesors ===
trueSuccessor: v1352 
falseSuccessor: v1350 
=== Usages ===
=== Predecessor ===
v1638 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v241 #trueSuccessor: v1352 #falseSuccessor: v1350  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365]
stack: v112|DWORD v110|DWORD 
locals: v0|QWORD[.] - v102|QWORD - - v4|DWORD - - - v61|DWORD v98|DWORD v68|DWORD v99|DWORD v76|DWORD v100|DWORD v68|DWORD - - - - - - - v111|DWORD - - - - - - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v114|DWORD[.] * 8] state [bci:365] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1352 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 554]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1561 
=== Usages ===
=== Predecessor ===
v1353 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1561  <|@  <|@
f <@~|@floating>@ <|@
tid i1562 <|@
result int[-278291|0xfffffffffffbc0ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -278291
stableDimension: 0
stamp: i32 [-278291] ⇊00000000fffbc0ed ⇈00000000fffbc0ed
stampKind: i32
value: int[-278291|0xfffffffffffbc0ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1550 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1561 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1547 
=== Predecessor ===
v1352 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-278291|0xfffffffffffbc0ed]] destination: B75 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4559646296614268741
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1350 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 554]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1357 
=== Usages ===
=== Predecessor ===
v1353 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1357  <|@  <|@
f <@~|@floating>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 561]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i777 
y: i243 
=== Succesors ===
=== Usages ===
v1357 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i777 y: i243  <|@  <|@
f <@*|@fixed>@ <|@
tid v1357 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 561]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v244 
=== Succesors ===
trueSuccessor: v1356 
falseSuccessor: v1354 
=== Usages ===
=== Predecessor ===
v1350 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v244 #trueSuccessor: v1356 #falseSuccessor: v1354  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v61|DWORD y: -3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1356 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 561]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1569 
=== Usages ===
=== Predecessor ===
v1357 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1569  <|@  <|@
f <@~|@floating>@ <|@
tid i1570 <|@
result int[-278547|0xfffffffffffbbfed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -278547
stableDimension: 0
stamp: i32 [-278547] ⇊00000000fffbbfed ⇈00000000fffbbfed
stampKind: i32
value: int[-278547|0xfffffffffffbbfed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1550 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1569 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1547 
=== Predecessor ===
v1356 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-278547|0xfffffffffffbbfed]] destination: B77 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B97" 
    xhandlers
    flags 
    probability 4559646296614268741
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1354 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 561]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1361 
=== Usages ===
=== Predecessor ===
v1357 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1361  <|@  <|@
f <@~|@floating>@ <|@
tid v247 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 568]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i777 
y: i246 
=== Succesors ===
=== Usages ===
v1361 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i777 y: i246  <|@  <|@
f <@*|@fixed>@ <|@
tid v1361 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 568]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v247 
=== Succesors ===
trueSuccessor: v1358 
falseSuccessor: v1360 
=== Usages ===
=== Predecessor ===
v1354 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v247 #trueSuccessor: v1358 #falseSuccessor: v1360  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v61|DWORD y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B78 -> B79 falseDestination: B78 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B80" "B81" 
    xhandlers
    flags 
    probability 4559646296614268741
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1358 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 568]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1594 
=== Usages ===
=== Predecessor ===
v1361 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1594  <|@  <|@
f <@~|@floating>@ <|@
tid a204 <|@
result v115|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:598) [bci: 398]
rawvalue: int[14]{1, 5, 25, 125, 625, ...}
stableDimension: 0
stamp: a!# [I
stampKind: a -
value: Object[int[14]{1, 5, 25, 125, 625, ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1614 v1615 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1614 <|@
result [v115|QWORD[.] + v68|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a204 
index: i794 
=== Succesors ===
=== Usages ===
i1594 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a204 index: i794  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1594 <|@
result v116|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:598) [bci: 403]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1338 
address: v1614 
=== Succesors ===
next: v1365 
=== Usages ===
i206 i211 
=== Predecessor ===
v1358 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1338 address: v1614 #next: v1365  <|@  <|@
f <@~|@floating>@ <|@
tid i211 <|@
result v117|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:600) [bci: 429]
stamp: i32
=== Inputs ===
x: i1594 
y: i798 
=== Succesors ===
=== Usages ===
i219 i220 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i1594 y: i798  <|@  <|@
f <@~|@floating>@ <|@
tid i219 <|@
result v118|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:610) [bci: 463]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i211 
y: i160 
=== Succesors ===
=== Usages ===
i221 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i211 y: i160  <|@  <|@
f <@~|@floating>@ <|@
tid i220 <|@
result v119|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:610) [bci: 463]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i211 
y: i7 
=== Succesors ===
=== Usages ===
i221 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i211 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i221 <|@
result v120|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:610) [bci: 463]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i219 
y: i220 
=== Succesors ===
=== Usages ===
v222 i225 ?239 i811 i810 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i219 y: i220  <|@  <|@
f <@~|@floating>@ <|@
tid i810 <|@
result v121|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:632) [bci: 608]
stamp: i32 [-2147483648 - 2147483632] ⇈00000000fffffff0
=== Inputs ===
x: i221 
y: i160 
=== Succesors ===
=== Usages ===
i812 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i221 y: i160  <|@  <|@
f <@~|@floating>@ <|@
tid i811 <|@
result v122|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:632) [bci: 608]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i221 
y: i7 
=== Succesors ===
=== Usages ===
i812 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i221 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i812 <|@
result v123|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:632) [bci: 608]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i810 
y: i811 
=== Succesors ===
=== Usages ===
v814 i816 v829 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i810 y: i811  <|@  <|@
f <@~|@floating>@ <|@
tid v829 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:634) [bci: 639]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i812 
y: i7 
=== Succesors ===
=== Usages ===
v1365 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i812 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v1365 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:634) [bci: 639]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v829 
=== Succesors ===
trueSuccessor: v1364 
falseSuccessor: v1362 
=== Usages ===
=== Predecessor ===
i1594 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v829 #trueSuccessor: v1364 #falseSuccessor: v1362  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v115|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[14]{1, 5, 25, 125, 625, ...}] <|@ <|@
      nr   -1  <|@ instruction v116|DWORD = MOV [v115|QWORD[.] + v68|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v100|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v117|DWORD = SHL (x: v116|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v118|DWORD = SHL v117|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v119|DWORD = SHL v117|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v120|DWORD = ADD (x: v118|DWORD, y: v119|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v121|DWORD = SHL v120|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v122|DWORD = SHL v120|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = ADD (x: v121|DWORD, y: v122|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v123|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B79 -> B80 falseDestination: B79 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1364 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:634) [bci: 639]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1573 
=== Usages ===
=== Predecessor ===
v1365 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1573  <|@  <|@
f <@~|@floating>@ <|@
tid i1574 <|@
result int[-279059|0xfffffffffffbbded] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -279059
stableDimension: 0
stamp: i32 [-279059] ⇊00000000fffbbded ⇈00000000fffbbded
stampKind: i32
value: int[-279059|0xfffffffffffbbded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1550 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1573 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1547 
=== Predecessor ===
v1364 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-279059|0xfffffffffffbbded]] destination: B80 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" "B83" 
    xhandlers
    flags 
    probability 4559646296614268741
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1362 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:634) [bci: 639]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1595 
=== Usages ===
=== Predecessor ===
v1365 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1595  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1595 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:618) [bci: 551]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1617 
=== Succesors ===
next: v1369 
=== Usages ===
v1298 
=== Predecessor ===
v1362 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1617 #next: v1369  <|@  <|@
f <@~|@floating>@ <|@
tid v1298 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:646) [bci: 697]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1595 
y: i702 
=== Succesors ===
=== Usages ===
v1369 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1595 y: i702  <|@  <|@
f <@*|@fixed>@ <|@
tid v1369 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:618) [bci: 551]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1298 
=== Succesors ===
trueSuccessor: v1368 
falseSuccessor: v1366 
=== Usages ===
=== Predecessor ===
i1595 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1298 #trueSuccessor: v1368 #falseSuccessor: v1366  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v114|DWORD[.] * 8 + 12] y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B81 -> B82 falseDestination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1368 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:618) [bci: 551]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1577 
=== Usages ===
=== Predecessor ===
v1369 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1577  <|@  <|@
f <@~|@floating>@ <|@
tid i1578 <|@
result int[-320027|0xfffffffffffb1de5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -320027
stableDimension: 0
stamp: i32 [-320027] ⇊00000000fffb1de5 ⇈00000000fffb1de5
stampKind: i32
value: int[-320027|0xfffffffffffb1de5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1550 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1577 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1547 
=== Predecessor ===
v1368 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-320027|0xfffffffffffb1de5]] destination: B82 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    probability 4559646296614268741
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1366 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:618) [bci: 551]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1596 
=== Usages ===
v1086 v1102 
=== Predecessor ===
v1369 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1596  <|@  <|@
f <@~|@floating>@ <|@
tid v1615 <|@
result [v115|QWORD[.] + v76|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a204 
index: i796 
=== Succesors ===
=== Usages ===
i1596 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a204 index: i796  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1596 <|@
result v124|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:599) [bci: 415]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1342 
address: v1615 
=== Succesors ===
next: i216 
=== Usages ===
i209 
=== Predecessor ===
v1366 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1342 address: v1615 #next: i216  <|@  <|@
f <@~|@floating>@ <|@
tid i203 <|@
result v125|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:598) [bci: 397]
resultBits: 32
stamp: i32
=== Inputs ===
value: j121 
=== Succesors ===
=== Usages ===
i206 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j121  <|@  <|@
f <@~|@floating>@ <|@
tid i206 <|@
result v126|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$125/271184744@39a592fe
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:598) [bci: 404]
stamp: i32
=== Inputs ===
x: i203 
y: i1594 
=== Succesors ===
=== Usages ===
i207 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: i203 y: i1594  <|@  <|@
f <@~|@floating>@ <|@
tid i207 <|@
result v127|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:598) [bci: 407]
stamp: i32
=== Inputs ===
x: i206 
y: i149 
=== Succesors ===
=== Usages ===
i216 i217 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i206 y: i149  <|@  <|@
f <@~|@floating>@ <|@
tid i209 <|@
result v128|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:599) [bci: 418]
stamp: i32
=== Inputs ===
x: i1596 
y: i150 
=== Succesors ===
=== Usages ===
i213 i214 i216 i217 ?239 i808 i809 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i1596 y: i150  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i216 <|@
result v129|DWORD <|@
d <@d|@=== Debug Properties ===
canDeopt: true
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:608) [bci: 446]
op: DIV
stamp: i32
type: SIGNED
=== Inputs ===
stateBefore: ?884 
x: i207 
y: i209 
=== Succesors ===
next: v1373 
=== Usages ===
v230 i235 
=== Predecessor ===
i1596 >@ <|@
instruction <@/|@org.graalvm.compiler.nodes.calc.SignedDivNode>@ stateBefore: ?884 x: i207 y: i209 #next: v1373  <|@  <|@
f <@~|@floating>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:614) [bci: 522]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i216 
y: i8 
=== Succesors ===
=== Usages ===
v1373 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i216 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v1373 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:614) [bci: 522]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v230 
=== Succesors ===
trueSuccessor: v1372 
falseSuccessor: v1370 
=== Usages ===
=== Predecessor ===
i216 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v230 #trueSuccessor: v1372 #falseSuccessor: v1370  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v124|DWORD = MOV [v115|QWORD[.] + v76|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v125|DWORD = MOV v102|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v126|DWORD = IMUL (x: v125|DWORD, y: v116|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v98|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v127|DWORD = SHL (x: v126|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v99|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v128|DWORD = SHL (x: v124|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v127|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ rax|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365]
stack: v112|DWORD v110|DWORD 
locals: v0|QWORD[.] - v102|QWORD - - v4|DWORD - - - v61|DWORD v98|DWORD v68|DWORD v99|DWORD v76|DWORD v100|DWORD v68|DWORD - - - - - - - v111|DWORD - - - - - - - - - 
>@ <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: v128|DWORD) size: DWORD state [bci:365] <|@ <|@
      nr   -1  <|@ instruction v129|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v130|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v129|DWORD, y: v129|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1372 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:614) [bci: 522]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1579 
=== Usages ===
=== Predecessor ===
v1373 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1579  <|@  <|@
f <@~|@floating>@ <|@
tid i1580 <|@
result int[-273427|0xfffffffffffbd3ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -273427
stableDimension: 0
stamp: i32 [-273427] ⇊00000000fffbd3ed ⇈00000000fffbd3ed
stampKind: i32
value: int[-273427|0xfffffffffffbd3ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1550 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1579 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1547 
=== Predecessor ===
v1372 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-273427|0xfffffffffffbd3ed]] destination: B84 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" "B87" 
    xhandlers
    flags 
    probability 4559646296614268741
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1370 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:614) [bci: 522]
stamp: void
=== Inputs ===
=== Succesors ===
next: i217 
=== Usages ===
=== Predecessor ===
v1373 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i217  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i217 <|@
result v130|DWORD <|@
d <@d|@=== Debug Properties ===
canDeopt: true
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:609) [bci: 455]
op: REM
stamp: i32 [-2147483647 - 2147483647]
type: SIGNED
=== Inputs ===
stateBefore: ?884 
x: i207 
y: i209 
=== Succesors ===
next: v1377 
=== Usages ===
i681 i680 
=== Predecessor ===
v1370 >@ <|@
instruction <@%|@org.graalvm.compiler.nodes.calc.SignedRemNode>@ stateBefore: ?884 x: i207 y: i209 #next: v1377  <|@  <|@
f <@~|@floating>@ <|@
tid i680 <|@
result v131|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:609) [bci: 456]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i217 
y: i160 
=== Succesors ===
=== Usages ===
i682 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i217 y: i160  <|@  <|@
f <@~|@floating>@ <|@
tid i681 <|@
result v132|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:609) [bci: 456]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i217 
y: i7 
=== Succesors ===
=== Usages ===
i682 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i217 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i682 <|@
result v133|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:609) [bci: 456]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i680 
y: i681 
=== Succesors ===
=== Usages ===
v222 i225 ?239 i809 i808 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i680 y: i681  <|@  <|@
f <@~|@floating>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:611) [bci: 470]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i682 
y: i221 
=== Succesors ===
=== Usages ===
v1377 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i682 y: i221  <|@  <|@
f <@*|@fixed>@ <|@
tid v1377 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:611) [bci: 470]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v222 
=== Succesors ===
trueSuccessor: v1376 
falseSuccessor: v1374 
=== Usages ===
=== Predecessor ===
i217 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v222 #trueSuccessor: v1376 #falseSuccessor: v1374  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v131|DWORD = SHL v130|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v132|DWORD = SHL v130|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v133|DWORD = ADD (x: v131|DWORD, y: v132|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v120|DWORD, y: v133|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1376 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:611) [bci: 470]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1581 
=== Usages ===
=== Predecessor ===
v1377 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1581  <|@  <|@
f <@~|@floating>@ <|@
tid i1582 <|@
result int[-272915|0xfffffffffffbd5ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -272915
stableDimension: 0
stamp: i32 [-272915] ⇊00000000fffbd5ed ⇈00000000fffbd5ed
stampKind: i32
value: int[-272915|0xfffffffffffbd5ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1550 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1581 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1547 
=== Predecessor ===
v1376 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-272915|0xfffffffffffbd5ed]] destination: B86 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    probability 4559646296614268741
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1374 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:611) [bci: 470]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1381 
=== Usages ===
=== Predecessor ===
v1377 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1381  <|@  <|@
f <@~|@floating>@ <|@
tid i213 <|@
result v134|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:601) [bci: 436]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i209 
y: i160 
=== Succesors ===
=== Usages ===
i215 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i209 y: i160  <|@  <|@
f <@~|@floating>@ <|@
tid i214 <|@
result v135|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:601) [bci: 436]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i209 
y: i7 
=== Succesors ===
=== Usages ===
i215 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i209 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i215 <|@
result v136|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:601) [bci: 436]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i213 
y: i214 
=== Succesors ===
=== Usages ===
v226 ?239 v817 i300 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i213 y: i214  <|@  <|@
f <@~|@floating>@ <|@
tid i225 <|@
result v137|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:612) [bci: 484]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i221 
y: i682 
=== Succesors ===
=== Usages ===
v226 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i221 y: i682  <|@  <|@
f <@~|@floating>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:612) [bci: 487]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i215 
y: i225 
=== Succesors ===
=== Usages ===
v1381 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i215 y: i225  <|@  <|@
f <@*|@fixed>@ <|@
tid v1381 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:612) [bci: 487]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v226 
=== Succesors ===
trueSuccessor: v1380 
falseSuccessor: v1378 
=== Usages ===
=== Predecessor ===
v1374 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v226 #trueSuccessor: v1380 #falseSuccessor: v1378  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v134|DWORD = SHL v128|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v135|DWORD = SHL v128|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v136|DWORD = ADD (x: v134|DWORD, y: v135|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v137|DWORD = ADD (x: v133|DWORD, y: v120|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v137|DWORD, y: v136|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B87 -> B88 falseDestination: B87 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1380 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:612) [bci: 487]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1583 
=== Usages ===
=== Predecessor ===
v1381 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1583  <|@  <|@
f <@~|@floating>@ <|@
tid i1584 <|@
result int[-273171|0xfffffffffffbd4ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -273171
stableDimension: 0
stamp: i32 [-273171] ⇊00000000fffbd4ed ⇈00000000fffbd4ed
stampKind: i32
value: int[-273171|0xfffffffffffbd4ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1550 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1583 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1547 
=== Predecessor ===
v1380 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-273171|0xfffffffffffbd4ed]] destination: B88 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" "B95" 
    xhandlers
    flags 
    probability 4559646296614268741
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1378 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:612) [bci: 487]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1086 
=== Usages ===
=== Predecessor ===
v1381 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1086  <|@  <|@
f <@~|@floating>@ <|@
tid v1618 <|@
result [v114|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1593 
=== Succesors ===
=== Usages ===
v1086 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1593  <|@  <|@
f <@~|@floating>@ <|@
tid i235 <|@
result v138|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:618) [bci: 549]
stamp: i32
=== Inputs ===
x: i216 
y: i234 
=== Succesors ===
=== Usages ===
i236 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i216 y: i234  <|@  <|@
f <@~|@floating>@ <|@
tid i236 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:618) [bci: 550]
resultBits: 16
stamp: i16
=== Inputs ===
value: i235 
=== Succesors ===
=== Usages ===
v1086 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i235  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1086 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:618) [bci: 551]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1366 
address: v1618 
value: i236 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i808 
=== Usages ===
=== Predecessor ===
v1378 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1366 address: v1618 value: i236 stateAfter: - lastLocationAccess: - #next: i808  <|@  <|@
tid ?239 <|@
d <@d|@=== Debug Properties ===
bci: 552
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:618) [bci: 551]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 626
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i5 - - - i777 - - - - - - - i7 i8 i8 - - - - - i682 i209 i221 i215 - - - - 
=== Succesors ===
=== Usages ===
i808 i809 v1526 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i5 - - - i777 - - - - - - - i7 i8 i8 - - - - - i682 i209 i221 i215 - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i808 <|@
result v139|DWORD <|@
d <@d|@=== Debug Properties ===
canDeopt: true
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:630) [bci: 591]
op: DIV
stamp: i32
type: SIGNED
=== Inputs ===
stateBefore: ?239 
x: i682 
y: i209 
=== Succesors ===
next: i809 
=== Usages ===
i820 
=== Predecessor ===
v1086 >@ <|@
instruction <@/|@org.graalvm.compiler.nodes.calc.SignedDivNode>@ stateBefore: ?239 x: i682 y: i209 #next: i809  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i809 <|@
result v140|DWORD <|@
d <@d|@=== Debug Properties ===
canDeopt: true
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:631) [bci: 600]
op: REM
stamp: i32 [-2147483647 - 2147483646]
type: SIGNED
=== Inputs ===
stateBefore: ?239 
x: i682 
y: i209 
=== Succesors ===
next: v1385 
=== Usages ===
i826 i827 
=== Predecessor ===
i808 >@ <|@
instruction <@%|@org.graalvm.compiler.nodes.calc.SignedRemNode>@ stateBefore: ?239 x: i682 y: i209 #next: v1385  <|@  <|@
f <@~|@floating>@ <|@
tid i826 <|@
result v141|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:631) [bci: 601]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i809 
y: i160 
=== Succesors ===
=== Usages ===
i828 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i809 y: i160  <|@  <|@
f <@~|@floating>@ <|@
tid i827 <|@
result v142|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:631) [bci: 601]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i809 
y: i7 
=== Succesors ===
=== Usages ===
i828 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i809 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i828 <|@
result v143|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:631) [bci: 601]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i826 
y: i827 
=== Succesors ===
=== Usages ===
v814 i816 v302 i299 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i826 y: i827  <|@  <|@
f <@~|@floating>@ <|@
tid v814 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:635) [bci: 646]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i828 
y: i812 
=== Succesors ===
=== Usages ===
v1385 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i828 y: i812  <|@  <|@
f <@*|@fixed>@ <|@
tid v1385 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:635) [bci: 646]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v814 
=== Succesors ===
trueSuccessor: v1382 
falseSuccessor: v1384 
=== Usages ===
=== Predecessor ===
i809 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v814 #trueSuccessor: v1382 #falseSuccessor: v1384  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = LEA [v129|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v114|DWORD[.] * 8 + 16], y: v138|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v133|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ rax|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 552]
locals: v0|QWORD[.] - - - - v4|DWORD - - - v61|DWORD - - - - - - - int[1|0x1] int[0|0x0] int[0|0x0] - - - - - v133|DWORD v128|DWORD v120|DWORD v136|DWORD - - - - 
>@ <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: v128|DWORD) size: DWORD state [bci:552] <|@ <|@
      nr   -1  <|@ instruction v139|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v140|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v141|DWORD = SHL v140|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v142|DWORD = SHL v140|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v143|DWORD = ADD (x: v141|DWORD, y: v142|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v123|DWORD, y: v143|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B89 -> B90 falseDestination: B89 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B91" "B92" 
    xhandlers
    flags 
    probability 4559646296614268741
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1382 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:635) [bci: 646]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1389 
=== Usages ===
=== Predecessor ===
v1385 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1389  <|@  <|@
f <@~|@floating>@ <|@
tid i816 <|@
result v144|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:636) [bci: 660]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i812 
y: i828 
=== Succesors ===
=== Usages ===
v817 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i812 y: i828  <|@  <|@
f <@~|@floating>@ <|@
tid v817 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:636) [bci: 663]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i215 
y: i816 
=== Succesors ===
=== Usages ===
v1389 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i215 y: i816  <|@  <|@
f <@*|@fixed>@ <|@
tid v1389 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:636) [bci: 663]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v817 
=== Succesors ===
trueSuccessor: v1388 
falseSuccessor: v1386 
=== Usages ===
=== Predecessor ===
v1382 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v817 #trueSuccessor: v1388 #falseSuccessor: v1386  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v144|DWORD = ADD (x: v123|DWORD, y: v143|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v144|DWORD, y: v136|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B90 -> B91 falseDestination: B90 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1388 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:636) [bci: 663]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1522 
=== Usages ===
=== Predecessor ===
v1389 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1522  <|@  <|@
f <@~|@floating>@ <|@
tid i1523 <|@
result int[-279571|0xfffffffffffbbbed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -279571
stableDimension: 0
stamp: i32 [-279571] ⇊00000000fffbbbed ⇈00000000fffbbbed
stampKind: i32
value: int[-279571|0xfffffffffffbbbed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1524 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1522 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1521 
=== Predecessor ===
v1388 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-279571|0xfffffffffffbbbed]] destination: B91 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B93" "B94" 
    xhandlers
    flags 
    probability 4559646296614268741
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1386 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:636) [bci: 663]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1393 
=== Usages ===
=== Predecessor ===
v1389 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1393  <|@  <|@
f <@~|@floating>@ <|@
tid v302 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:649) [bci: 714]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i828 
y: i8 
=== Succesors ===
=== Usages ===
v1393 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i828 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v1393 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:649) [bci: 714]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v302 
=== Succesors ===
trueSuccessor: v1392 
falseSuccessor: v1390 
=== Usages ===
=== Predecessor ===
v1386 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v302 #trueSuccessor: v1392 #falseSuccessor: v1390  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v143|DWORD, y: v143|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B92 -> B93 falseDestination: B92 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1392 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:649) [bci: 714]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1529 
=== Usages ===
=== Predecessor ===
v1393 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1529  <|@  <|@
f <@~|@floating>@ <|@
tid i1530 <|@
result int[-282387|0xfffffffffffbb0ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -282387
stableDimension: 0
stamp: i32 [-282387] ⇊00000000fffbb0ed ⇈00000000fffbb0ed
stampKind: i32
value: int[-282387|0xfffffffffffbb0ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1524 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1529 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1521 
=== Predecessor ===
v1392 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-282387|0xfffffffffffbb0ed]] destination: B93 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B168" 
    xhandlers
    flags 
    probability 4559646296614268741
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1390 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:649) [bci: 714]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1102 
=== Usages ===
=== Predecessor ===
v1393 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1102  <|@  <|@
f <@~|@floating>@ <|@
tid v1619 <|@
result [v114|DWORD[.] * 8 + 18] <|@
d <@d|@=== Debug Properties ===
displacement: 18
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1593 
=== Succesors ===
=== Usages ===
v1102 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1593  <|@  <|@
f <@~|@floating>@ <|@
tid i820 <|@
result v145|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:646) [bci: 695]
stamp: i32
=== Inputs ===
x: i808 
y: i234 
=== Succesors ===
=== Usages ===
i821 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i808 y: i234  <|@  <|@
f <@~|@floating>@ <|@
tid i821 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:646) [bci: 696]
resultBits: 16
stamp: i16
=== Inputs ===
value: i820 
=== Succesors ===
=== Usages ===
v1102 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i820  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1102 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:646) [bci: 697]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1366 
address: v1619 
value: i821 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v454 
=== Usages ===
=== Predecessor ===
v1390 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1366 address: v1619 value: i821 stateAfter: - lastLocationAccess: - #next: v454  <|@  <|@
f <@~|@floating>@ <|@
tid i299 <|@
result v146|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:648) [bci: 704]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i828 
y: i7 
=== Succesors ===
=== Usages ===
i300 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i828 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i300 <|@
result v147|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:648) [bci: 707]
stamp: i32
=== Inputs ===
x: i299 
y: i215 
=== Succesors ===
=== Usages ===
j301 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i299 y: i215  <|@  <|@
f <@~|@floating>@ <|@
tid j301 <|@
result v148|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:648) [bci: 708]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i300 
=== Succesors ===
=== Usages ===
j461 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i300  <|@  <|@
f <@*|@fixed>@ <|@
tid v454 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:760) [bci: 1426]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v455 
=== Predecessor ===
v1102 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v145|DWORD = LEA [v139|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v114|DWORD[.] * 8 + 18], y: v145|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v146|DWORD = SHL v143|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v147|DWORD = SUB (x: v146|DWORD, ~y: v136|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v148|QWORD = MOVSXD v147|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v61|DWORD, int[2|0x2], int[1|0x1], int[0|0x0], v148|QWORD] destination: B94 -> B168 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1384 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:635) [bci: 646]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1527 
=== Usages ===
=== Predecessor ===
v1385 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1527  <|@  <|@
f <@~|@floating>@ <|@
tid i1528 <|@
result int[-279315|0xfffffffffffbbced] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -279315
stableDimension: 0
stamp: i32 [-279315] ⇊00000000fffbbced ⇈00000000fffbbced
stampKind: i32
value: int[-279315|0xfffffffffffbbced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1524 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1527 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1521 
=== Predecessor ===
v1384 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-279315|0xfffffffffffbbced]] destination: B95 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B91" "B95" "B93" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1524 <|@
result v149|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-282387 - -279315] ⇊00000000fffbb0ed ⇈00000000fffbbfed
valueDescription: i32
=== Inputs ===
merge: v1521 
values: i1523 i1528 i1530 
=== Succesors ===
=== Usages ===
v1526 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1521 values: i1523 i1528 i1530  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1521 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1522 v1527 v1529 
=== Succesors ===
next: v1526 
=== Usages ===
i1524 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1522 v1527 v1529 #next: v1526  <|@  <|@
f <@*|@fixed>@ <|@
tid v1526 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?239 
actionAndReason: i1524 
speculation: a1503 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1521 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?239 actionAndReason: i1524 speculation: a1503  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v149|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v149|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 552]
locals: v0|QWORD[.] - - - - v4|DWORD - - - v61|DWORD - - - - - - - int[1|0x1] int[0|0x0] int[0|0x0] - - - - - v133|DWORD v128|DWORD v120|DWORD v136|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:552] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1360 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 568]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1575 
=== Usages ===
=== Predecessor ===
v1361 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1575  <|@  <|@
f <@~|@floating>@ <|@
tid i1576 <|@
result int[-278803|0xfffffffffffbbeed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -278803
stableDimension: 0
stamp: i32 [-278803] ⇊00000000fffbbeed ⇈00000000fffbbeed
stampKind: i32
value: int[-278803|0xfffffffffffbbeed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1550 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1575 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1547 
=== Predecessor ===
v1360 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-278803|0xfffffffffffbbeed]] destination: B97 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1344 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:599) [bci: 415]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1559 
=== Usages ===
=== Predecessor ===
v1345 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1559  <|@  <|@
f <@~|@floating>@ <|@
tid i1560 <|@
result int[-270875|0xfffffffffffbdde5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -270875
stableDimension: 0
stamp: i32 [-270875] ⇊00000000fffbdde5 ⇈00000000fffbdde5
stampKind: i32
value: int[-270875|0xfffffffffffbdde5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1550 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1559 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1547 
=== Predecessor ===
v1344 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-270875|0xfffffffffffbdde5]] destination: B98 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1340 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:598) [bci: 403]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1557 
=== Usages ===
=== Predecessor ===
v1341 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1557  <|@  <|@
f <@~|@floating>@ <|@
tid i1558 <|@
result int[-268827|0xfffffffffffbe5e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -268827
stableDimension: 0
stamp: i32 [-268827] ⇊00000000fffbe5e5 ⇈00000000fffbe5e5
stampKind: i32
value: int[-268827|0xfffffffffffbe5e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1550 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1557 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1547 
=== Predecessor ===
v1340 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-268827|0xfffffffffffbe5e5]] destination: B99 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1336 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:596) [bci: 393]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1555 
=== Usages ===
=== Predecessor ===
v1337 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1555  <|@  <|@
f <@~|@floating>@ <|@
tid i1556 <|@
result int[-268051|0xfffffffffffbe8ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -268051
stableDimension: 0
stamp: i32 [-268051] ⇊00000000fffbe8ed ⇈00000000fffbe8ed
stampKind: i32
value: int[-268051|0xfffffffffffbe8ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1550 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1555 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1547 
=== Predecessor ===
v1336 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-268051|0xfffffffffffbe8ed]] destination: B100 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B102" "B133" 
    xhandlers
    flags 
    probability 4605060389434741780
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:652) [bci: 728]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1397 
=== Usages ===
=== Predecessor ===
v200 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1397  <|@  <|@
f <@*|@fixed>@ <|@
tid v1397 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:652) [bci: 734]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v801 
=== Succesors ===
trueSuccessor: v1394 
falseSuccessor: v1396 
=== Usages ===
=== Predecessor ===
v199 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v801 #trueSuccessor: v1394 #falseSuccessor: v1396  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v68|DWORD y: 27 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B101 -> B102 falseDestination: B101 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B103" "B132" 
    xhandlers
    flags 
    probability 4605060389434741780
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1394 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:652) [bci: 734]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1401 
=== Usages ===
j1597 
=== Predecessor ===
v1397 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1401  <|@  <|@
f <@~|@floating>@ <|@
tid v1111 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:653) [bci: 746]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i796 
y: i45 
=== Succesors ===
=== Usages ===
v1401 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i796 y: i45  <|@  <|@
f <@*|@fixed>@ <|@
tid v1401 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:653) [bci: 746]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1111 
=== Succesors ===
trueSuccessor: v1398 
falseSuccessor: v1400 
=== Usages ===
=== Predecessor ===
v1394 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1111 #trueSuccessor: v1398 #falseSuccessor: v1400  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v76|DWORD y: 27 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B102 -> B103 falseDestination: B102 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B104" "B109" 
    xhandlers
    flags 
    probability 4605060389434741780
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1398 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:653) [bci: 746]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1597 
=== Usages ===
j1598 
=== Predecessor ===
v1401 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1597  <|@  <|@
f <@~|@floating>@ <|@
tid a44 <|@
result v150|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 93]
rawvalue: long[27]{1, 5, 25, 125, 625, ...}
stableDimension: 0
stamp: a!# [J
stampKind: a -
value: Object[long[27]{1, 5, 25, 125, 625, ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1620 v1621 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1620 <|@
result [v150|QWORD[.] + v68|DWORD * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: a44 
index: i794 
=== Succesors ===
=== Usages ===
j1597 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a44 index: i794  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1597 <|@
result v151|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: long
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:652) [bci: 734]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: v1394 
address: v1620 
=== Succesors ===
next: j1598 
=== Usages ===
j309 j314 
=== Predecessor ===
v1398 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1394 address: v1620 #next: j1598  <|@  <|@
f <@~|@floating>@ <|@
tid v1621 <|@
result [v150|QWORD[.] + v76|DWORD * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: a44 
index: i796 
=== Succesors ===
=== Usages ===
j1598 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a44 index: i796  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1598 <|@
result v152|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: long
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:653) [bci: 746]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: v1398 
address: v1621 
=== Succesors ===
next: j319 
=== Usages ===
j312 
=== Predecessor ===
j1597 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1398 address: v1621 #next: j319  <|@  <|@
f <@~|@floating>@ <|@
tid j309 <|@
result v153|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$125/271184744@39a592fe
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:652) [bci: 735]
stamp: i64
=== Inputs ===
x: j121 
y: j1597 
=== Succesors ===
=== Usages ===
j310 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: j121 y: j1597  <|@  <|@
f <@~|@floating>@ <|@
tid j310 <|@
result v154|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:652) [bci: 738]
stamp: i64
=== Inputs ===
x: j309 
y: i149 
=== Succesors ===
=== Usages ===
j319 j321 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j309 y: i149  <|@  <|@
f <@~|@floating>@ <|@
tid j312 <|@
result v155|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:653) [bci: 749]
stamp: i64
=== Inputs ===
x: j1598 
y: i150 
=== Succesors ===
=== Usages ===
j316 j317 j319 j321 ?907 ?918 ?443 ?373 ?381 j408 j410 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j1598 y: i150  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j319 <|@
result v156|QWORD <|@
d <@d|@=== Debug Properties ===
canDeopt: true
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:662) [bci: 778]
op: DIV
stamp: i64
type: SIGNED
=== Inputs ===
stateBefore: ?884 
x: j310 
y: j312 
=== Succesors ===
next: j321 
=== Usages ===
i320 
=== Predecessor ===
j1598 >@ <|@
instruction <@/|@org.graalvm.compiler.nodes.calc.SignedDivNode>@ stateBefore: ?884 x: j310 y: j312 #next: j321  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j321 <|@
result v157|QWORD <|@
d <@d|@=== Debug Properties ===
canDeopt: true
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:663) [bci: 789]
op: REM
stamp: i64 [-9223372036854775807 - 9223372036854775807]
type: SIGNED
=== Inputs ===
stateBefore: ?884 
x: j310 
y: j312 
=== Succesors ===
next: v339 
=== Usages ===
j689 j688 
=== Predecessor ===
j319 >@ <|@
instruction <@%|@org.graalvm.compiler.nodes.calc.SignedRemNode>@ stateBefore: ?884 x: j310 y: j312 #next: v339  <|@  <|@
f <@~|@floating>@ <|@
tid j316 <|@
result v158|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:655) [bci: 768]
stamp: i64 [-9223372036854775808 - 9223372036854775800] ⇈fffffffffffffff8
=== Inputs ===
x: j312 
y: i160 
=== Succesors ===
=== Usages ===
j318 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j312 y: i160  <|@  <|@
f <@~|@floating>@ <|@
tid j317 <|@
result v159|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:655) [bci: 768]
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j312 
y: i7 
=== Succesors ===
=== Usages ===
j318 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j312 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid j318 <|@
result v160|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:655) [bci: 768]
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j316 
y: j317 
=== Succesors ===
=== Usages ===
j447 v332 ?443 ?918 v427 ?373 ?381 ?907 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j316 y: j317  <|@  <|@
f <@~|@floating>@ <|@
tid j314 <|@
result v161|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:654) [bci: 760]
stamp: i64
=== Inputs ===
x: j1597 
y: i798 
=== Succesors ===
=== Usages ===
j323 j324 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j1597 y: i798  <|@  <|@
f <@~|@floating>@ <|@
tid j323 <|@
result v162|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:664) [bci: 798]
stamp: i64 [-9223372036854775808 - 9223372036854775800] ⇈fffffffffffffff8
=== Inputs ===
x: j314 
y: i160 
=== Succesors ===
=== Usages ===
j325 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j314 y: i160  <|@  <|@
f <@~|@floating>@ <|@
tid j324 <|@
result v163|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:664) [bci: 798]
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j314 
y: i7 
=== Succesors ===
=== Usages ===
j325 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j314 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid j325 <|@
result v164|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:664) [bci: 798]
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j323 
y: j324 
=== Succesors ===
=== Usages ===
j380 v327 j330 ?373 ?918 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j323 y: j324  <|@  <|@
f <@~|@floating>@ <|@
tid j688 <|@
result v165|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:663) [bci: 790]
stamp: i64 [-9223372036854775808 - 9223372036854775800] ⇈fffffffffffffff8
=== Inputs ===
x: j321 
y: i160 
=== Succesors ===
=== Usages ===
j690 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j321 y: i160  <|@  <|@
f <@~|@floating>@ <|@
tid j689 <|@
result v166|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:663) [bci: 790]
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j321 
y: i7 
=== Succesors ===
=== Usages ===
j690 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j321 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid j690 <|@
result v167|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:663) [bci: 790]
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j688 
y: j689 
=== Succesors ===
=== Usages ===
j379 v327 j330 ?373 ?918 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j688 y: j689  <|@  <|@
f <@~|@floating>@ <|@
tid j330 <|@
result v168|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:666) [bci: 820]
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j325 
y: j690 
=== Succesors ===
=== Usages ===
v332 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j325 y: j690  <|@  <|@
f <@~|@floating>@ <|@
tid v332 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:666) [bci: 824]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j318 
y: j330 
=== Succesors ===
=== Usages ===
i333 v1405 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j318 y: j330  <|@  <|@
f <@~|@floating>@ <|@
tid i320 <|@
result v169|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:662) [bci: 779]
resultBits: 32
stamp: i32
=== Inputs ===
value: j319 
=== Succesors ===
=== Usages ===
v336 i344 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j319  <|@  <|@
f <@~|@floating>@ <|@
tid v336 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:668) [bci: 859]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i320 
y: i8 
=== Succesors ===
=== Usages ===
v339 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i320 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:668) [bci: 859]
stamp: void
trueSuccessorProbability: 0.12181344950436568
=== Inputs ===
condition: v336 
=== Succesors ===
trueSuccessor: v337 
falseSuccessor: v338 
=== Usages ===
=== Predecessor ===
j321 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v336 #trueSuccessor: v337 #falseSuccessor: v338  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v150|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[long[27]{1, 5, 25, 125, 625, ...}] <|@ <|@
      nr   -1  <|@ instruction v151|QWORD = MOV [v150|QWORD[.] + v68|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v152|QWORD = MOV [v150|QWORD[.] + v76|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v153|QWORD = IMUL (x: v151|QWORD, y: v102|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v98|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v154|QWORD = SHL (x: v153|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v99|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v155|QWORD = SHL (x: v152|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v154|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = CDQ rax|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365]
stack: v112|DWORD v110|DWORD 
locals: v0|QWORD[.] - v102|QWORD - - v4|DWORD - - - v61|DWORD v98|DWORD v68|DWORD v99|DWORD v76|DWORD v100|DWORD v68|DWORD - - - - - - - v111|DWORD - - - - - - - - - 
>@ <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IDIV (highX: rdx|QWORD, lowX: rax|QWORD, y: v155|QWORD) size: QWORD state [bci:365] <|@ <|@
      nr   -1  <|@ instruction v156|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v157|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v158|QWORD = SHL v155|QWORD y: 3 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v159|QWORD = SHL v155|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v160|QWORD = ADD (x: v158|QWORD, y: v159|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v100|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v161|QWORD = SHL (x: v151|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v162|QWORD = SHL v161|QWORD y: 3 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v163|QWORD = SHL v161|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v164|QWORD = ADD (x: v162|QWORD, y: v163|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v165|QWORD = SHL v157|QWORD y: 3 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v166|QWORD = SHL v157|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v167|QWORD = ADD (x: v165|QWORD, y: v166|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v168|QWORD = ADD (x: v164|QWORD, y: v167|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v169|DWORD = MOV v156|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v169|DWORD, y: v169|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.12181344950436568 condition: = trueDestination: B103 -> B104 falseDestination: B103 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B105" "B106" 
    xhandlers
    flags 
    probability 4591374071020439873
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v337 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:668) [bci: 862]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1405 
=== Usages ===
=== Predecessor ===
v339 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1405  <|@  <|@
f <@*|@fixed>@ <|@
tid v1405 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:668) [bci: 864]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v332 
=== Succesors ===
trueSuccessor: v1404 
falseSuccessor: v1402 
=== Usages ===
=== Predecessor ===
v337 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v332 #trueSuccessor: v1404 #falseSuccessor: v1402  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v168|QWORD, y: v160|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B104 -> B105 falseDestination: B104 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1404 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:668) [bci: 864]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1553 
=== Usages ===
=== Predecessor ===
v1405 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1553  <|@  <|@
f <@~|@floating>@ <|@
tid i1554 <|@
result int[-294419|0xfffffffffffb81ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -294419
stableDimension: 0
stamp: i32 [-294419] ⇊00000000fffb81ed ⇈00000000fffb81ed
stampKind: i32
value: int[-294419|0xfffffffffffb81ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1550 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1553 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1547 
=== Predecessor ===
v1404 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-294419|0xfffffffffffb81ed]] destination: B105 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B107" "B108" 
    xhandlers
    flags 
    probability 4591374071020439873
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1402 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:668) [bci: 864]
stamp: void
=== Inputs ===
=== Succesors ===
next: v357 
=== Usages ===
=== Predecessor ===
v1405 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v357  <|@  <|@
f <@~|@floating>@ <|@
tid i341 <|@
result v170|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:670) [bci: 867]
stamp: i32
=== Inputs ===
x: i777 
y: i17 
=== Succesors ===
=== Usages ===
i921 i922 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i777 y: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v357 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 891]
stamp: void
trueSuccessorProbability: 0.010669521717460728
=== Inputs ===
condition: v241 
=== Succesors ===
trueSuccessor: v355 
falseSuccessor: v356 
=== Usages ===
=== Predecessor ===
v1402 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v241 #trueSuccessor: v355 #falseSuccessor: v356  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v170|DWORD = DEC v61|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010669521717460728 condition: = trueDestination: B106 -> B107 falseDestination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B119" 
    xhandlers
    flags 
    probability 4562224503551966794
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:681) [bci: 908]
stamp: void
=== Inputs ===
=== Succesors ===
next: v370 
=== Usages ===
=== Predecessor ===
v357 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v370  <|@  <|@
f <@*|@fixed>@ <|@
tid v370 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v369 
=== Predecessor ===
v355 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], int[0|0x0], v170|DWORD, int[0|0x0]] destination: B107 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B114" 
    xhandlers
    flags 
    probability 4591302482260236360
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v356 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 894]
stamp: void
=== Inputs ===
=== Succesors ===
next: v917 
=== Usages ===
=== Predecessor ===
v357 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v917  <|@  <|@
f <@*|@fixed>@ <|@
tid v917 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v916 
=== Predecessor ===
v356 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v170|DWORD, int[0|0x0]] destination: B108 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B110" "B111" 
    xhandlers
    flags 
    probability 4604221683140082412
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:672) [bci: 873]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1599 
=== Usages ===
=== Predecessor ===
v339 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1599  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1599 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:672) [bci: 888]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?884 
guard: - 
address: v1617 
=== Succesors ===
next: v1413 
=== Usages ===
v1158 
=== Predecessor ===
v338 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?884 guard: - address: v1617 #next: v1413  <|@  <|@
f <@~|@floating>@ <|@
tid v1158 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:672) [bci: 888]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1599 
y: i8 
=== Succesors ===
=== Usages ===
v1413 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1599 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v1413 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:672) [bci: 888]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1158 
=== Succesors ===
trueSuccessor: v1412 
falseSuccessor: v1410 
=== Usages ===
=== Predecessor ===
i1599 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1158 #trueSuccessor: v1412 #falseSuccessor: v1410  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365]
stack: v112|DWORD v110|DWORD 
locals: v0|QWORD[.] - v102|QWORD - - v4|DWORD - - - v61|DWORD v98|DWORD v68|DWORD v99|DWORD v76|DWORD v100|DWORD v68|DWORD - - - - - - - v111|DWORD - - - - - - - - - 
>@ <|@ instruction CMP [v114|DWORD[.] * 8 + 12] y: 0 size: DWORD state [bci:365] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B109 -> B110 falseDestination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1412 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:672) [bci: 888]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1571 
=== Usages ===
=== Predecessor ===
v1413 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1571  <|@  <|@
f <@~|@floating>@ <|@
tid i1572 <|@
result int[-322075|0xfffffffffffb15e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -322075
stableDimension: 0
stamp: i32 [-322075] ⇊00000000fffb15e5 ⇈00000000fffb15e5
stampKind: i32
value: int[-322075|0xfffffffffffb15e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1550 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1571 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1547 
=== Predecessor ===
v1412 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-322075|0xfffffffffffb15e5]] destination: B110 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B112" "B113" 
    xhandlers
    flags 
    probability 4604221683140082412
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1410 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:672) [bci: 888]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1163 
=== Usages ===
v1163 
=== Predecessor ===
v1413 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1163  <|@  <|@
f <@~|@floating>@ <|@
tid v1639 <|@
result [v114|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1593 
=== Succesors ===
=== Usages ===
v1163 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1593  <|@  <|@
f <@~|@floating>@ <|@
tid i344 <|@
result v171|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:672) [bci: 886]
stamp: i32
=== Inputs ===
x: i320 
y: i234 
=== Succesors ===
=== Usages ===
i345 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i320 y: i234  <|@  <|@
f <@~|@floating>@ <|@
tid i345 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:672) [bci: 887]
resultBits: 16
stamp: i16
=== Inputs ===
value: i344 
=== Succesors ===
=== Usages ===
v1163 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i344  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1163 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:672) [bci: 888]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1410 
address: v1639 
value: i345 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v938 
=== Usages ===
=== Predecessor ===
v1410 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1410 address: v1639 value: i345 stateAfter: - lastLocationAccess: - #next: v938  <|@  <|@
f <@*|@fixed>@ <|@
tid v938 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 891]
stamp: void
trueSuccessorProbability: 0.010669521717460728
=== Inputs ===
condition: v241 
=== Succesors ===
trueSuccessor: v936 
falseSuccessor: v937 
=== Usages ===
=== Predecessor ===
v1163 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v241 #trueSuccessor: v936 #falseSuccessor: v937  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v171|DWORD = LEA [v169|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v114|DWORD[.] * 8 + 16], y: v171|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010669521717460728 condition: = trueDestination: B111 -> B112 falseDestination: B111 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B119" 
    xhandlers
    flags 
    probability 4574907670107426078
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v936 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:681) [bci: 908]
stamp: void
=== Inputs ===
=== Succesors ===
next: v939 
=== Usages ===
=== Predecessor ===
v938 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v939  <|@  <|@
f <@*|@fixed>@ <|@
tid v939 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v369 
=== Predecessor ===
v936 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], int[0|0x0], v61|DWORD, int[1|0x1]] destination: B112 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" 
    xhandlers
    flags 
    probability 4604157170265443794
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v937 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 894]
stamp: void
=== Inputs ===
=== Succesors ===
next: v919 
=== Usages ===
=== Predecessor ===
v938 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v919  <|@  <|@
f <@*|@fixed>@ <|@
tid v919 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v916 
=== Predecessor ===
v937 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v61|DWORD, int[1|0x1]] destination: B113 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B108" "B113" 
    successors "B115" "B116" 
    xhandlers
    flags 
    probability 4604986927965077723
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i921 <|@
result v172|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v916 
values: i341 i777 
=== Succesors ===
=== Usages ===
v358 v360 i922 i922 ?918 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v916 values: i341 i777  <|@  <|@
f <@~|@floating>@ <|@
tid i933 <|@
result v173|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v916 
values: i8 i7 
=== Succesors ===
=== Usages ===
i932 i932 ?918 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v916 values: i8 i7  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v916 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v917 v919 
=== Succesors ===
next: v1417 
=== Usages ===
i921 i933 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v917 v919 #next: v1417  <|@  <|@
f <@~|@floating>@ <|@
tid v358 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 898]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i921 
y: i243 
=== Succesors ===
=== Usages ===
v1417 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i921 y: i243  <|@  <|@
f <@~|@floating>@ <|@
tid v327 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:665) [bci: 806]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j690 
y: j325 
=== Succesors ===
=== Usages ===
i328 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j690 y: j325  <|@  <|@
f <@~|@floating>@ <|@
tid i328 <|@
result v174|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:665) [bci: 806]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v327 
trueValue: i7 
falseValue: i8 
=== Succesors ===
=== Usages ===
i371 ?918 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v327 trueValue: i7 falseValue: i8  <|@  <|@
f <@~|@floating>@ <|@
tid i333 <|@
result v175|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:666) [bci: 824]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v332 
trueValue: i7 
falseValue: i8 
=== Succesors ===
=== Usages ===
i372 ?918 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v332 trueValue: i7 falseValue: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v1417 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 898]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v358 
=== Succesors ===
trueSuccessor: v1416 
falseSuccessor: v1414 
=== Usages ===
=== Predecessor ===
v916 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v358 #trueSuccessor: v1416 #falseSuccessor: v1414  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v172|DWORD, v173|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v164|QWORD, y: v167|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v174|DWORD = SETCC condition: > <|@ <|@
      nr   -1  <|@ instruction CMP (x: v168|QWORD, y: v160|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v175|DWORD = SETCC condition: > <|@ <|@
      nr   -1  <|@ instruction CMP v172|DWORD y: -3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B114 -> B115 falseDestination: B114 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1416 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 898]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1415 
=== Usages ===
=== Predecessor ===
v1417 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1415  <|@  <|@
tid ?918 <|@
d <@d|@=== Debug Properties ===
bci: 889
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 680
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i5 - - - i921 - - - - - - - i933 i328 i333 - - - - - j690 - j312 - j325 - j318 - 
=== Succesors ===
=== Usages ===
v1415 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i5 - - - i921 - - - - - - - i933 i328 i333 - - - - - j690 - j312 - j325 - j318 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1415 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1164
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 898]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?918 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1416 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?918  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -298003 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 889]
locals: v0|QWORD[.] - - - - v4|DWORD - - - v172|DWORD - - - - - - - v173|DWORD v174|DWORD v175|DWORD - - - - - v167|QWORD - v155|QWORD - v164|QWORD - v160|QWORD - 
>@ <|@ instruction DEOPT info [bci:889] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" "B118" 
    xhandlers
    flags 
    probability 4604986927965077723
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1414 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 898]
stamp: void
=== Inputs ===
=== Succesors ===
next: v366 
=== Usages ===
=== Predecessor ===
v1417 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v366  <|@  <|@
f <@~|@floating>@ <|@
tid v360 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 905]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i921 
y: i246 
=== Succesors ===
=== Usages ===
v366 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i921 y: i246  <|@  <|@
f <@*|@fixed>@ <|@
tid v366 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 905]
stamp: void
trueSuccessorProbability: 0.9998134328358209
=== Inputs ===
condition: v360 
=== Succesors ===
trueSuccessor: v361 
falseSuccessor: v365 
=== Usages ===
=== Predecessor ===
v1414 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v360 #trueSuccessor: v361 #falseSuccessor: v365  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v172|DWORD y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9998134328358209 condition: < trueDestination: B116 -> B117 falseDestination: B116 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B119" 
    xhandlers
    flags 
    probability 4604985657123954626
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v361 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
stamp: void
=== Inputs ===
=== Succesors ===
next: v368 
=== Usages ===
=== Predecessor ===
v366 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v368  <|@  <|@
f <@*|@fixed>@ <|@
tid v368 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v369 
=== Predecessor ===
v361 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v174|DWORD, v175|DWORD, v172|DWORD, v173|DWORD] destination: B117 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B119" 
    xhandlers
    flags 
    probability 4549337389257036309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v365 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:681) [bci: 908]
stamp: void
=== Inputs ===
=== Succesors ===
next: v691 
=== Usages ===
=== Predecessor ===
v366 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v691  <|@  <|@
f <@*|@fixed>@ <|@
tid v691 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:681) [bci: 908]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v369 
=== Predecessor ===
v365 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], int[0|0x0], v172|DWORD, v173|DWORD] destination: B118 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B117" "B107" "B118" "B112" 
    successors "B120" "B121" 
    xhandlers
    flags 
    probability 4605060389434741780
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i371 <|@
result v176|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v369 
values: i328 i8 i8 i8 
=== Succesors ===
=== Usages ===
?373 i377 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v369 values: i328 i8 i8 i8  <|@  <|@
f <@~|@floating>@ <|@
tid i372 <|@
result v177|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v369 
values: i333 i8 i8 i8 
=== Succesors ===
=== Usages ===
?373 i378 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v369 values: i333 i8 i8 i8  <|@  <|@
f <@~|@floating>@ <|@
tid i922 <|@
result v178|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v369 
values: i921 i341 i921 i777 
=== Succesors ===
=== Usages ===
i457 ?373 ?381 ?907 ?443 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v369 values: i921 i341 i921 i777  <|@  <|@
f <@~|@floating>@ <|@
tid i932 <|@
result v179|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v369 
values: i933 i8 i933 i7 
=== Succesors ===
=== Usages ===
i376 ?373 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v369 values: i933 i8 i933 i7  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v369 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v368 v370 v691 v939 
=== Succesors ===
next: v1421 
=== Usages ===
i371 i372 i922 i932 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v368 v370 v691 v939 #next: v1421  <|@  <|@
f <@~|@floating>@ <|@
tid v1122 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
stamp: void
=== Inputs ===
value: a1593 
=== Succesors ===
=== Usages ===
v1421 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1593  <|@  <|@
f <@*|@fixed>@ <|@
tid v1421 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1122 
=== Succesors ===
trueSuccessor: v1420 
falseSuccessor: v1418 
=== Usages ===
=== Predecessor ===
v369 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1122 #trueSuccessor: v1420 #falseSuccessor: v1418  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v176|DWORD, v177|DWORD, v178|DWORD, v179|DWORD] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v114|DWORD[.], y: v114|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B119 -> B120 falseDestination: B119 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1420 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1419 
=== Usages ===
=== Predecessor ===
v1421 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1419  <|@  <|@
tid ?373 <|@
d <@d|@=== Debug Properties ===
bci: 914
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 683
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i922 - - - - - - - i932 i371 i372 - - - - - j690 - j312 - j325 - j318 - 
=== Succesors ===
=== Usages ===
v1419 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i922 - - - - - - - i932 i371 i372 - - - - - j690 - j312 - j325 - j318 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1419 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1292
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
reason: NullCheckException
speculation: Object[d.a@464852764]
stamp: void
=== Inputs ===
stateBefore: ?373 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1420 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?373  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v180|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@464852764] <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -330763 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v180|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
locals: v0|QWORD[.] - - - - - - - - v178|DWORD - - - - - - - v179|DWORD v176|DWORD v177|DWORD - - - - - v167|QWORD - v155|QWORD - v164|QWORD - v160|QWORD - 
>@ <|@ instruction DEOPT info [bci:914] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B122" 
    xhandlers
    flags 
    probability 4605060389434741780
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1418 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1600 
=== Usages ===
=== Predecessor ===
v1421 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1600  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1600 <|@
result v181|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1617 
=== Succesors ===
next: v374 
=== Usages ===
v1140 
=== Predecessor ===
v1418 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1617 #next: v374  <|@  <|@
f <@~|@floating>@ <|@
tid a1121 <|@
result v182|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1024]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1593 
=== Succesors ===
=== Usages ===
v1622 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1593  <|@  <|@
f <@*|@fixed>@ <|@
tid v374 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v375 
=== Predecessor ===
i1600 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v181|DWORD = MOV [v114|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v182|QWORD[.] = UNCOMPRESSPOINTER (input: v114|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@40447647 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v179|DWORD, v176|DWORD, v177|DWORD, v167|QWORD, v164|QWORD] destination: B121 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" "B126" "B127" 
    successors "B123" "B130" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618403218649290590
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i376 <|@
result v183|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v375 
values: i932 i438 i438 
=== Succesors ===
=== Usages ===
?381 i458 v1140 v1622 i438 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v375 values: i932 i438 i438  <|@  <|@
f <@~|@floating>@ <|@
tid i377 <|@
result v184|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v375 
values: i371 i7 i423 
=== Succesors ===
=== Usages ===
i459 v382 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v375 values: i371 i7 i423  <|@  <|@
f <@~|@floating>@ <|@
tid i378 <|@
result v185|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v375 
values: i372 i7 i428 
=== Succesors ===
=== Usages ===
v392 i460 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v375 values: i372 i7 i428  <|@  <|@
f <@~|@floating>@ <|@
tid j379 <|@
result v186|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
valueDescription: i64
=== Inputs ===
merge: v375 
values: j690 j694 j694 
=== Succesors ===
=== Usages ===
?381 v449 j446 j408 j410 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v375 values: j690 j694 j694  <|@  <|@
f <@~|@floating>@ <|@
tid j380 <|@
result v187|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
valueDescription: i64
=== Inputs ===
merge: v375 
values: j325 j414 j414 
=== Succesors ===
=== Usages ===
?381 j412 j413 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v375 values: j325 j414 j414  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 7.804833088787332
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 2
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v374 
=== Succesors ===
next: v391 
=== Usages ===
i376 i377 i378 j379 j380 v385 v397 v444 v898 v1425 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v374 #next: v391  <|@  <|@
f <@~|@floating>@ <|@
tid v382 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 916]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i377 
y: i8 
=== Succesors ===
=== Usages ===
v391 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i377 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 916]
stamp: void
trueSuccessorProbability: 0.9096921872746148
=== Inputs ===
condition: v382 
=== Succesors ===
trueSuccessor: v383 
falseSuccessor: v385 
=== Usages ===
=== Predecessor ===
v375 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v382 #trueSuccessor: v383 #falseSuccessor: v385  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v183|DWORD, v184|DWORD, v185|DWORD, v186|QWORD, v187|QWORD] = LABEL numbPhis: 5 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v184|DWORD, y: v184|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9096921872746148 condition: = trueDestination: B122 -> B123 falseDestination: B122 -> B130 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B124" "B129" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617796602989612086
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 919]
stamp: void
=== Inputs ===
=== Succesors ===
next: v407 
=== Usages ===
=== Predecessor ===
v391 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v407  <|@  <|@
f <@~|@floating>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 921]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i378 
y: i8 
=== Succesors ===
=== Usages ===
v407 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i378 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v407 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 921]
stamp: void
trueSuccessorProbability: 0.9584277782398936
=== Inputs ===
condition: v392 
=== Succesors ===
trueSuccessor: v393 
falseSuccessor: v397 
=== Usages ===
=== Predecessor ===
v383 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v392 #trueSuccessor: v393 #falseSuccessor: v397  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v185|DWORD, y: v185|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9584277782398936 condition: = trueDestination: B123 -> B124 falseDestination: B123 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B125" "B128" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617542572413107419
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v393 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:684) [bci: 924]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1426 
=== Usages ===
=== Predecessor ===
v407 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1426  <|@  <|@
tid ?381 <|@
d <@d|@=== Debug Properties ===
bci: 914
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 683
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i922 - - - - - - - i376 i8 i8 - - - - - j379 - j312 - j380 - j318 - 
=== Succesors ===
=== Usages ===
j408 j410 v1423 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i922 - - - - - - - i376 i8 i8 - - - - - j379 - j312 - j380 - j318 -  <|@  <|@
f <@~|@floating>@ <|@
tid v1140 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i376 
y: i1600 
=== Succesors ===
=== Usages ===
v1426 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i376 y: i1600  <|@  <|@
f <@*|@fixed>@ <|@
tid v1426 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1140 
=== Succesors ===
trueSuccessor: v1422 
falseSuccessor: v1425 
=== Usages ===
=== Predecessor ===
v393 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1140 #trueSuccessor: v1422 #falseSuccessor: v1425  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v181|DWORD, y: v183|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B124 -> B125 falseDestination: B124 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B126" "B127" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617542572413107419
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1422 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
stamp: void
=== Inputs ===
=== Succesors ===
next: j408 
=== Usages ===
v1135 
=== Predecessor ===
v1426 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j408  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j408 <|@
result v188|QWORD <|@
d <@d|@=== Debug Properties ===
canDeopt: true
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:684) [bci: 928]
op: DIV
stamp: i64
type: SIGNED
=== Inputs ===
stateBefore: ?381 
x: j379 
y: j312 
=== Succesors ===
next: j410 
=== Usages ===
i409 
=== Predecessor ===
v1422 >@ <|@
instruction <@/|@org.graalvm.compiler.nodes.calc.SignedDivNode>@ stateBefore: ?381 x: j379 y: j312 #next: j410  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j410 <|@
result v189|QWORD <|@
d <@d|@=== Debug Properties ===
canDeopt: true
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:685) [bci: 939]
op: REM
stamp: i64 [-9223372036854775807 - 9223372036854775806]
type: SIGNED
=== Inputs ===
stateBefore: ?381 
x: j379 
y: j312 
=== Succesors ===
next: v1135 
=== Usages ===
j693 j692 
=== Predecessor ===
j408 >@ <|@
instruction <@%|@org.graalvm.compiler.nodes.calc.SignedRemNode>@ stateBefore: ?381 x: j379 y: j312 #next: v1135  <|@  <|@
f <@~|@floating>@ <|@
tid v1622 <|@
result [v182|QWORD[.] + v183|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a1121 
index: i376 
=== Succesors ===
=== Usages ===
v1135 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1121 index: i376  <|@  <|@
f <@~|@floating>@ <|@
tid i409 <|@
result v190|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:684) [bci: 929]
resultBits: 32
stamp: i32
=== Inputs ===
value: j408 
=== Succesors ===
=== Usages ===
?907 i439 ?443 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j408  <|@  <|@
f <@~|@floating>@ <|@
tid i439 <|@
result v191|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1036]
stamp: i32
=== Inputs ===
x: i409 
y: i234 
=== Succesors ===
=== Usages ===
i440 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i409 y: i234  <|@  <|@
f <@~|@floating>@ <|@
tid i440 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1037]
resultBits: 16
stamp: i16
=== Inputs ===
value: i439 
=== Succesors ===
=== Usages ===
v1135 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i439  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1135 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1422 
address: v1622 
value: i440 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v420 
=== Usages ===
=== Predecessor ===
j410 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1422 address: v1622 value: i440 stateAfter: - lastLocationAccess: - #next: v420  <|@  <|@
f <@~|@floating>@ <|@
tid j692 <|@
result v192|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:685) [bci: 940]
stamp: i64 [-9223372036854775808 - 9223372036854775800] ⇈fffffffffffffff8
=== Inputs ===
x: j410 
y: i160 
=== Succesors ===
=== Usages ===
j694 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j410 y: i160  <|@  <|@
f <@~|@floating>@ <|@
tid j693 <|@
result v193|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:685) [bci: 940]
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j410 
y: i7 
=== Succesors ===
=== Usages ===
j694 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j410 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid j694 <|@
result v194|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:685) [bci: 940]
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j692 
y: j693 
=== Succesors ===
=== Usages ===
j379 v422 j425 j379 ?443 ?907 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j692 y: j693  <|@  <|@
f <@~|@floating>@ <|@
tid i438 <|@
result v195|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1029]
stamp: i32
=== Inputs ===
x: i376 
y: i7 
=== Succesors ===
=== Usages ===
?443 i376 ?907 i376 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i376 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid j412 <|@
result v196|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:686) [bci: 948]
stamp: i64 [-9223372036854775808 - 9223372036854775792] ⇈fffffffffffffff0
=== Inputs ===
x: j380 
y: i160 
=== Succesors ===
=== Usages ===
j414 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j380 y: i160  <|@  <|@
f <@~|@floating>@ <|@
tid j413 <|@
result v197|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:686) [bci: 948]
stamp: i64 [-9223372036854775808 - 9223372036854775804] ⇈fffffffffffffffc
=== Inputs ===
x: j380 
y: i7 
=== Succesors ===
=== Usages ===
j414 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j380 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid j414 <|@
result v198|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:686) [bci: 948]
stamp: i64 [-9223372036854775808 - 9223372036854775804] ⇈fffffffffffffffc
=== Inputs ===
x: j412 
y: j413 
=== Succesors ===
=== Usages ===
j380 v417 ?443 v422 j425 j380 ?907 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j412 y: j413  <|@  <|@
f <@~|@floating>@ <|@
tid v417 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:688) [bci: 978]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j414 
y: j280 
=== Succesors ===
=== Usages ===
v420 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j414 y: j280  <|@  <|@
f <@*|@fixed>@ <|@
tid v420 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:688) [bci: 978]
stamp: void
trueSuccessorProbability: 3.796929368977686E-4
=== Inputs ===
condition: v417 
=== Succesors ===
trueSuccessor: v418 
falseSuccessor: v419 
=== Usages ===
=== Predecessor ===
v1135 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v417 #trueSuccessor: v418 #falseSuccessor: v419  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v186|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = CDQ rax|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
locals: v0|QWORD[.] - - - - - - - - v178|DWORD - - - - - - - v183|DWORD int[0|0x0] int[0|0x0] - - - - - v186|QWORD - v155|QWORD - v187|QWORD - v160|QWORD - 
>@ <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IDIV (highX: rdx|QWORD, lowX: rax|QWORD, y: v155|QWORD) size: QWORD state [bci:914] <|@ <|@
      nr   -1  <|@ instruction v188|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v189|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v190|DWORD = MOV v188|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v191|DWORD = LEA [v190|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v182|QWORD[.] + v183|DWORD * 2 + 16], y: v191|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v192|QWORD = SHL v189|QWORD y: 3 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v193|QWORD = SHL v189|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v194|QWORD = ADD (x: v192|QWORD, y: v193|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v195|DWORD = INC v183|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v196|QWORD = SHL v187|QWORD y: 3 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v197|QWORD = SHL v187|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v198|QWORD = ADD (x: v196|QWORD, y: v197|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v198|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 3.796929368977686E-4 condition: < trueDestination: B125 -> B126 falseDestination: B125 -> B127 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B122" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4566700544116969831
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v418 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:697) [bci: 1017]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1303 
=== Usages ===
=== Predecessor ===
v420 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1303  <|@  <|@
tid ?443 <|@
d <@d|@=== Debug Properties ===
bci: 1039
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 700
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i922 - - - - - - - i438 i7 i7 - - i409 - - j694 - j312 - j414 - j318 - 
=== Succesors ===
=== Usages ===
v1303 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i922 - - - - - - - i438 i7 i7 - - i409 - - j694 - j312 - j414 - j318 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1303 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?443 
=== Succesors ===
next: v444 
=== Usages ===
=== Predecessor ===
v418 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?443 #next: v444  <|@  <|@
f <@*|@fixed>@ <|@
tid v444 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
stamp: void
=== Inputs ===
loopBegin: v375 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1303 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v375  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1039]
locals: v0|QWORD[.] - - - - - - - - v178|DWORD - - - - - - - v195|DWORD int[1|0x1] int[1|0x1] - - v190|DWORD - - v194|QWORD - v155|QWORD - v198|QWORD - v160|QWORD - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:1039] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v195|DWORD, int[1|0x1], int[1|0x1], v194|QWORD, v198|QWORD] destination: B126 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B122" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617540348720924481
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:689) [bci: 981]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1304 
=== Usages ===
=== Predecessor ===
v420 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1304  <|@  <|@
f <@~|@floating>@ <|@
tid v422 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:689) [bci: 986]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j694 
y: j414 
=== Succesors ===
=== Usages ===
i423 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j694 y: j414  <|@  <|@
f <@~|@floating>@ <|@
tid i423 <|@
result v199|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:689) [bci: 986]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v422 
trueValue: i7 
falseValue: i8 
=== Succesors ===
=== Usages ===
i377 ?907 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v422 trueValue: i7 falseValue: i8  <|@  <|@
f <@~|@floating>@ <|@
tid j425 <|@
result v200|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:690) [bci: 1000]
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j414 
y: j694 
=== Succesors ===
=== Usages ===
v427 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j414 y: j694  <|@  <|@
f <@~|@floating>@ <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:690) [bci: 1004]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j318 
y: j425 
=== Succesors ===
=== Usages ===
i428 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j318 y: j425  <|@  <|@
f <@~|@floating>@ <|@
tid i428 <|@
result v201|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:690) [bci: 1004]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v427 
trueValue: i7 
falseValue: i8 
=== Succesors ===
=== Usages ===
i378 ?907 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v427 trueValue: i7 falseValue: i8  <|@  <|@
tid ?907 <|@
d <@d|@=== Debug Properties ===
bci: 1039
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 700
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i922 - - - - - - - i438 i423 i428 - - i409 - - j694 - j312 - j414 - j318 - 
=== Succesors ===
=== Usages ===
v1304 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i922 - - - - - - - i438 i423 i428 - - i409 - - j694 - j312 - j414 - j318 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1304 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?907 
=== Succesors ===
next: v898 
=== Usages ===
=== Predecessor ===
v419 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?907 #next: v898  <|@  <|@
f <@*|@fixed>@ <|@
tid v898 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 1
stamp: void
=== Inputs ===
loopBegin: v375 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1304 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v375  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v198|QWORD, y: v194|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v199|DWORD = SETCC condition: > <|@ <|@
      nr   -1  <|@ instruction v200|QWORD = ADD (x: v198|QWORD, y: v194|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v200|QWORD, y: v160|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v201|DWORD = SETCC condition: > <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1039]
locals: v0|QWORD[.] - - - - - - - - v178|DWORD - - - - - - - v195|DWORD v199|DWORD v201|DWORD - - v190|DWORD - - v194|QWORD - v155|QWORD - v198|QWORD - v160|QWORD - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:1039] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v195|DWORD, v199|DWORD, v201|DWORD, v194|QWORD, v198|QWORD] destination: B127 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1425 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v375 
=== Succesors ===
next: v1423 
=== Usages ===
=== Predecessor ===
v1426 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v375 #next: v1423  <|@  <|@
f <@*|@fixed>@ <|@
tid v1423 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1301
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
reason: BoundsCheckException
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?381 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1425 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?381  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -333083 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
locals: v0|QWORD[.] - - - - - - - - v178|DWORD - - - - - - - v183|DWORD int[0|0x0] int[0|0x0] - - - - - v186|QWORD - v155|QWORD - v187|QWORD - v160|QWORD - 
>@ <|@ instruction DEOPT info [bci:914] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B131" 
    xhandlers
    flags 
    probability 4597296998738684756
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v397 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:702) [bci: 1042]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v375 
=== Succesors ===
next: v396 
=== Usages ===
=== Predecessor ===
v407 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v375 #next: v396  <|@  <|@
f <@*|@fixed>@ <|@
tid v396 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:702) [bci: 1042]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v395 
=== Predecessor ===
v397 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B129 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B131" 
    xhandlers
    flags 
    probability 4603028144822704448
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v385 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:702) [bci: 1042]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v375 
=== Succesors ===
next: v394 
=== Usages ===
=== Predecessor ===
v391 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v375 #next: v394  <|@  <|@
f <@*|@fixed>@ <|@
tid v394 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:702) [bci: 1042]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v395 
=== Predecessor ===
v385 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B130 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B130" "B129" 
    successors "B168" 
    xhandlers
    flags 
    probability 4605060389434741781
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:702) [bci: 1042]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v394 v396 
=== Succesors ===
next: v1149 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v394 v396 #next: v1149  <|@  <|@
f <@~|@floating>@ <|@
tid v449 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:703) [bci: 1056]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j379 
y: j278 
=== Succesors ===
=== Usages ===
i450 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j379 y: j278  <|@  <|@
f <@~|@floating>@ <|@
tid i450 <|@
result v202|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:703) [bci: 1056]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v449 
trueValue: i7 
falseValue: i8 
=== Succesors ===
=== Usages ===
i1148 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v449 trueValue: i7 falseValue: i8  <|@  <|@
f <@~|@floating>@ <|@
tid i1148 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:703) [bci: 1064]
resultBits: 8
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i450 
=== Succesors ===
=== Usages ===
v1149 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i450  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1149 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: FloatingDecimal$BinaryToASCIIBuffer.exactDecimalConversion
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:703) [bci: 1064]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1607 
value: i1148 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v456 
=== Usages ===
=== Predecessor ===
v395 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1607 value: i1148 stateAfter: - lastLocationAccess: - #next: v456  <|@  <|@
f <@~|@floating>@ <|@
tid j446 <|@
result v203|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:702) [bci: 1045]
stamp: i64 [-9223372036854775808 - 9223372036854775804] ⇈fffffffffffffffc
=== Inputs ===
x: j379 
y: i7 
=== Succesors ===
=== Usages ===
j447 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j379 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid j447 <|@
result v204|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:702) [bci: 1048]
stamp: i64
=== Inputs ===
x: j446 
y: j318 
=== Succesors ===
=== Usages ===
j461 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j446 y: j318  <|@  <|@
f <@*|@fixed>@ <|@
tid v456 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:760) [bci: 1426]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v455 
=== Predecessor ===
v1149 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v186|QWORD, y: v186|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v202|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + 25], y: v202|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v203|QWORD = SHL v186|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v204|QWORD = SUB (x: v203|QWORD, ~y: v160|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v178|DWORD, v183|DWORD, v184|DWORD, v185|DWORD, v204|QWORD] destination: B131 -> B168 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1400 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:653) [bci: 746]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1565 
=== Usages ===
=== Predecessor ===
v1401 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1565  <|@  <|@
f <@~|@floating>@ <|@
tid i1566 <|@
result int[-284699|0xfffffffffffba7e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -284699
stableDimension: 0
stamp: i32 [-284699] ⇊00000000fffba7e5 ⇈00000000fffba7e5
stampKind: i32
value: int[-284699|0xfffffffffffba7e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1550 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1565 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1547 
=== Predecessor ===
v1400 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-284699|0xfffffffffffba7e5]] destination: B132 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1396 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:652) [bci: 734]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1563 
=== Usages ===
=== Predecessor ===
v1397 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1563  <|@  <|@
f <@~|@floating>@ <|@
tid i1564 <|@
result int[-282651|0xfffffffffffbafe5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -282651
stableDimension: 0
stamp: i32 [-282651] ⇊00000000fffbafe5 ⇈00000000fffbafe5
stampKind: i32
value: int[-282651|0xfffffffffffbafe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1550 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1563 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1547 
=== Predecessor ===
v1396 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-282651|0xfffffffffffbafe5]] destination: B133 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B105" "B100" "B99" "B98" "B75" "B133" "B132" "B77" "B110" "B80" "B97" "B82" "B84" "B86" "B88" 
    successors 
    xhandlers
    flags 
    probability 2372834053670830080
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1550 <|@
result v205|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-322075 - -268051] ⇊00000000fffb00e5 ⇈00000000fffbfffd
valueDescription: i32
=== Inputs ===
merge: v1547 
values: i1554 i1556 i1558 i1560 i1562 i1564 i1566 i1570 i1572 i1574 i1576 i1578 i1580 i1582 i1584 
=== Succesors ===
=== Usages ===
v1552 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1547 values: i1554 i1556 i1558 i1560 i1562 i1564 i1566 i1570 i1572 i1574 i1576 i1578 i1580 i1582 i1584  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1547 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1553 v1555 v1557 v1559 v1561 v1563 v1565 v1569 v1571 v1573 v1575 v1577 v1579 v1581 v1583 
=== Succesors ===
next: v1552 
=== Usages ===
i1550 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1553 v1555 v1557 v1559 v1561 v1563 v1565 v1569 v1571 v1573 v1575 v1577 v1579 v1581 v1583 #next: v1552  <|@  <|@
f <@*|@fixed>@ <|@
tid v1552 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?884 
actionAndReason: i1550 
speculation: a1503 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1547 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?884 actionAndReason: i1550 speculation: a1503  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v205|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v205|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365]
stack: v112|DWORD v110|DWORD 
locals: v0|QWORD[.] - v102|QWORD - - v4|DWORD - - - v61|DWORD v98|DWORD v68|DWORD v99|DWORD v76|DWORD v100|DWORD v68|DWORD - - - - - - - v111|DWORD - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:365] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B137" 
    xhandlers
    flags 
    probability 4582924406890760886
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1070]
stamp: void
=== Inputs ===
=== Succesors ===
next: v193 
=== Usages ===
=== Predecessor ===
v195 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v193  <|@  <|@
f <@*|@fixed>@ <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1070]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v192 
=== Predecessor ===
v194 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B135 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B137" 
    xhandlers
    flags 
    probability 4513412961163892986
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1070]
stamp: void
=== Inputs ===
=== Succesors ===
next: v191 
=== Usages ===
=== Predecessor ===
v188 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v191  <|@  <|@
f <@*|@fixed>@ <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1070]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v192 
=== Predecessor ===
v187 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B136 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" "B135" "B64" 
    successors "B138" "B141" 
    xhandlers
    flags 
    probability 4585327503373534833
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1070]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v191 v193 v874 
=== Succesors ===
next: a464 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v191 v193 v874 #next: a464  <|@  <|@
tid v1165 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1074]
returnStamp: a# Lsun/misc/FDBigInteger;
signature: [Ljdk.vm.ci.meta.JavaType;@144cdb81
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.valueOfPow52(int, int)>
=== Inputs ===
arguments: i796 i150 
=== Succesors ===
=== Usages ===
a464 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: i796 i150  <|@  <|@
tid ?1476 <|@
d <@d|@=== Debug Properties ===
bci: 1074
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 710
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - j121 - - i5 - - - i777 i149 i794 i150 i796 i798 i794 - - - - - - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
a464 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - j121 - - i5 - - - i777 i149 i794 i150 i796 i798 i794 - - - - - - - - - - - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a464 <|@
result v206|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 1074
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1074]
polymorphic: false
stamp: a# Lsun/misc/FDBigInteger;
targetMethod: Direct#FDBigInteger.valueOfPow52
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1165 
stateDuring: ?1476 
=== Succesors ===
next: v1633 
=== Usages ===
v1169 v1170 ?1477 v1633 
=== Predecessor ===
v192 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1165 stateDuring: ?1476 #next: v1633  <|@  <|@
tid ?465 <|@
d <@d|@=== Debug Properties ===
bci: 1077
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1074]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 710
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 - j121 - - i5 - - - i777 i149 i794 i150 i796 i798 i794 - - - - - - - - - - - - - - - - - a1503 
=== Succesors ===
=== Usages ===
v1633 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - j121 - - i5 - - - i777 i149 i794 i150 i796 i798 i794 - - - - - - - - - - - - - - - - - a1503  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1633 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?465 
object: a464 
=== Succesors ===
next: i467 
=== Usages ===
=== Predecessor ===
a464 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?465 object: a464 #next: i467  <|@  <|@
tid v1169 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:711) [bci: 1081]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@6f75b08d
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.getNormalizationBias()>
=== Inputs ===
arguments: a464 
=== Succesors ===
=== Usages ===
i467 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a464  <|@  <|@
tid ?1477 <|@
d <@d|@=== Debug Properties ===
bci: 1081
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 711
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - j121 - - i5 - - - i777 i149 i794 i150 i796 i798 i794 - - - - - - - - - a464 - - - - - - - 
=== Succesors ===
=== Usages ===
i467 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - j121 - - i5 - - - i777 i149 i794 i150 i796 i798 i794 - - - - - - - - - a464 - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i467 <|@
result v207|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 1081
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:711) [bci: 1081]
polymorphic: false
stamp: i32
targetMethod: Direct#FDBigInteger.getNormalizationBias
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1169 
stateDuring: ?1477 
=== Succesors ===
next: a470 
=== Usages ===
?1480 v1170 ?1479 i472 ?475 i477 ?1478 i482 
=== Predecessor ===
v1633 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1169 stateDuring: ?1477 #next: a470  <|@  <|@
tid v1170 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:712) [bci: 1090]
returnStamp: a# Lsun/misc/FDBigInteger;
signature: [Ljdk.vm.ci.meta.JavaType;@5ccb4788
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.leftShift(int)>
=== Inputs ===
arguments: a464 i467 
=== Succesors ===
=== Usages ===
a470 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a464 i467  <|@  <|@
tid ?1478 <|@
d <@d|@=== Debug Properties ===
bci: 1090
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 712
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - j121 - - i5 - - - i777 i149 i794 i150 i796 i798 i794 - - - - - - - - - - i467 - - - - - - 
=== Succesors ===
=== Usages ===
a470 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - j121 - - i5 - - - i777 i149 i794 i150 i796 i798 i794 - - - - - - - - - - i467 - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a470 <|@
result v208|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 1090
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:712) [bci: 1090]
polymorphic: false
stamp: a# Lsun/misc/FDBigInteger;
targetMethod: Direct#FDBigInteger.leftShift
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1170 
stateDuring: ?1478 
=== Succesors ===
next: a474 
=== Usages ===
?1488 ?475 ?1487 ?486 v1177 ?1486 ?1485 ?1484 ?514 ?1483 ?1482 ?594 ?1481 ?555 v1183 ?1480 ?1479 
=== Predecessor ===
i467 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1170 stateDuring: ?1478 #next: a474  <|@  <|@
f <@~|@floating>@ <|@
tid i472 <|@
result v209|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:714) [bci: 1102]
stamp: i32
=== Inputs ===
x: i149 
y: i467 
=== Succesors ===
=== Usages ===
v1171 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i149 y: i467  <|@  <|@
tid v1171 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:714) [bci: 1103]
returnStamp: a# Lsun/misc/FDBigInteger;
signature: [Ljdk.vm.ci.meta.JavaType;@3ae505c0
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.valueOfMulPow52(long, int, int)>
=== Inputs ===
arguments: j121 i794 i472 
=== Succesors ===
=== Usages ===
a474 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: j121 i794 i472  <|@  <|@
tid ?1479 <|@
d <@d|@=== Debug Properties ===
bci: 1103
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 714
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i5 - - - i777 - - i150 i796 i798 i794 - - - - - - - - - a470 i467 - - - - - - 
=== Succesors ===
=== Usages ===
a474 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i5 - - - i777 - - i150 i796 i798 i794 - - - - - - - - - a470 i467 - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a474 <|@
result v210|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 1103
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:714) [bci: 1103]
polymorphic: false
stamp: a# Lsun/misc/FDBigInteger;
targetMethod: Direct#FDBigInteger.valueOfMulPow52
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1171 
stateDuring: ?1479 
=== Succesors ===
next: v1634 
=== Usages ===
a1299 ?1488 ?486 a1299 ?1487 v1634 ?1486 v1182 ?1485 ?514 ?1484 ?1483 ?1480 ?1482 ?555 v1189 ?594 ?1481 v1177 v1178 v1183 v1188 v1212 
=== Predecessor ===
a470 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1171 stateDuring: ?1479 #next: v1634  <|@  <|@
tid ?475 <|@
d <@d|@=== Debug Properties ===
bci: 1106
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:714) [bci: 1103]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 714
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i5 - - - i777 - - i150 i796 i798 i794 - - - - - - - - - a470 i467 - - - - - - a1503 
=== Succesors ===
=== Usages ===
v1634 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i5 - - - i777 - - i150 i796 i798 i794 - - - - - - - - - a470 i467 - - - - - - a1503  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1634 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?475 
object: a474 
=== Succesors ===
next: a480 
=== Usages ===
=== Predecessor ===
a474 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?475 object: a474 #next: a480  <|@  <|@
f <@~|@floating>@ <|@
tid i477 <|@
result v211|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:715) [bci: 1116]
stamp: i32
=== Inputs ===
x: i467 
y: i798 
=== Succesors ===
=== Usages ===
i478 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i467 y: i798  <|@  <|@
f <@~|@floating>@ <|@
tid i478 <|@
result v212|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:715) [bci: 1118]
stamp: i32
=== Inputs ===
x: i477 
y: i7 
=== Succesors ===
=== Usages ===
v1172 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i477 y: i7  <|@  <|@
tid v1172 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:715) [bci: 1119]
returnStamp: a# Lsun/misc/FDBigInteger;
signature: [Ljdk.vm.ci.meta.JavaType;@480751ce
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.valueOfPow52(int, int)>
=== Inputs ===
arguments: i850 i478 
=== Succesors ===
=== Usages ===
a480 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: i850 i478  <|@  <|@
tid ?1480 <|@
d <@d|@=== Debug Properties ===
bci: 1119
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 715
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i5 - - - i777 - - i150 i796 - - - - - - - - - - - a470 i467 a474 - - - - - 
=== Succesors ===
=== Usages ===
a480 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i5 - - - i777 - - i150 i796 - - - - - - - - - - - a470 i467 a474 - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a480 <|@
result v213|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 1119
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:715) [bci: 1119]
polymorphic: false
stamp: a# Lsun/misc/FDBigInteger;
targetMethod: Direct#FDBigInteger.valueOfPow52
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1172 
stateDuring: ?1480 
=== Succesors ===
next: a485 
=== Usages ===
?1484 ?486 ?1483 v1178 ?1482 v1182 ?1481 ?514 a554 
=== Predecessor ===
v1634 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1172 stateDuring: ?1480 #next: a485  <|@  <|@
f <@~|@floating>@ <|@
tid i482 <|@
result v214|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:717) [bci: 1132]
stamp: i32
=== Inputs ===
x: i150 
y: i467 
=== Succesors ===
=== Usages ===
i483 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i150 y: i467  <|@  <|@
f <@~|@floating>@ <|@
tid i483 <|@
result v215|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:717) [bci: 1134]
stamp: i32
=== Inputs ===
x: i482 
y: i7 
=== Succesors ===
=== Usages ===
v1173 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i482 y: i7  <|@  <|@
tid v1173 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:717) [bci: 1135]
returnStamp: a# Lsun/misc/FDBigInteger;
signature: [Ljdk.vm.ci.meta.JavaType;@a34619b
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.valueOfPow52(int, int)>
=== Inputs ===
arguments: i854 i483 
=== Succesors ===
=== Usages ===
a485 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: i854 i483  <|@  <|@
tid ?1481 <|@
d <@d|@=== Debug Properties ===
bci: 1135
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 717
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i5 - - - i777 - - - - - - - - - - - - - - - a470 - a474 a480 - - - - 
=== Succesors ===
=== Usages ===
a485 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i5 - - - i777 - - - - - - - - - - - - - - - a470 - a474 a480 - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a485 <|@
result v216|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 1135
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:717) [bci: 1135]
polymorphic: false
stamp: a# Lsun/misc/FDBigInteger;
targetMethod: Direct#FDBigInteger.valueOfPow52
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1173 
stateDuring: ?1481 
=== Succesors ===
next: v1635 
=== Usages ===
v1182 ?1489 ?1488 v1189 ?1487 ?514 ?1486 ?1485 v1216 ?1484 ?555 ?620 v1635 ?1483 ?1482 ?594 
=== Predecessor ===
a480 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1173 stateDuring: ?1481 #next: v1635  <|@  <|@
tid ?486 <|@
d <@d|@=== Debug Properties ===
bci: 1138
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:717) [bci: 1135]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 717
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i5 - - - i777 - - - - - - - - - - - - - - - a470 - a474 a480 - - - - a1503 
=== Succesors ===
=== Usages ===
v1635 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i5 - - - i777 - - - - - - - - - - - - - - - a470 - a474 a480 - - - - a1503  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1635 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?486 
object: a485 
=== Succesors ===
next: i488 
=== Usages ===
=== Predecessor ===
a485 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?486 object: a485 #next: i488  <|@  <|@
tid v1177 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:724) [bci: 1147]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@c459052
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.quoRemIteration(FDBigInteger)>
=== Inputs ===
arguments: a474 a470 
=== Succesors ===
=== Usages ===
i488 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a474 a470  <|@  <|@
tid ?1482 <|@
d <@d|@=== Debug Properties ===
bci: 1147
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 724
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i5 - - - i777 - - - - - - - i8 - - - - - - - a470 - a474 a480 a485 - - - 
=== Succesors ===
=== Usages ===
i488 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i5 - - - i777 - - - - - - - i8 - - - - - - - a470 - a474 a480 a485 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i488 <|@
result v217|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 1147
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:724) [bci: 1147]
polymorphic: false
stamp: i32
targetMethod: Direct#FDBigInteger.quoRemIteration
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1177 
stateDuring: ?1482 
=== Succesors ===
next: i491 
=== Usages ===
?1484 ?1483 i516 v503 ?514 
=== Predecessor ===
v1635 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1177 stateDuring: ?1482 #next: i491  <|@  <|@
tid v1178 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:725) [bci: 1156]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@1e1c4f1f
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)>
=== Inputs ===
arguments: a474 a480 
=== Succesors ===
=== Usages ===
i491 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a474 a480  <|@  <|@
tid ?1483 <|@
d <@d|@=== Debug Properties ===
bci: 1156
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 725
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i5 - - - i777 - - - - - - - i8 - - - - i488 - - a470 - a474 a480 a485 - - - 
=== Succesors ===
=== Usages ===
i491 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i5 - - - i777 - - - - - - - i8 - - - - i488 - - a470 - a474 a480 a485 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i491 <|@
result v218|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 1156
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:725) [bci: 1156]
polymorphic: false
stamp: i32
targetMethod: Direct#FDBigInteger.cmp
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1178 
stateDuring: ?1483 
=== Succesors ===
next: i497 
=== Usages ===
v493 
=== Predecessor ===
i488 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1178 stateDuring: ?1483 #next: i497  <|@  <|@
tid v1182 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:726) [bci: 1175]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@6c67e433
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)>
=== Inputs ===
arguments: a485 a474 a480 
=== Succesors ===
=== Usages ===
i497 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a485 a474 a480  <|@  <|@
f <@~|@floating>@ <|@
tid v493 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:725) [bci: 1159]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i491 
y: i8 
=== Succesors ===
=== Usages ===
i494 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i491 y: i8  <|@  <|@
f <@~|@floating>@ <|@
tid i494 <|@
result v219|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:725) [bci: 1159]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v493 
trueValue: i7 
falseValue: i8 
=== Succesors ===
=== Usages ===
?1484 ?514 i546 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v493 trueValue: i7 falseValue: i8  <|@  <|@
tid ?1484 <|@
d <@d|@=== Debug Properties ===
bci: 1175
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 726
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i5 - - - i777 - - - - - - - i8 i494 - - - i488 - - a470 - a474 a480 a485 - - - 
=== Succesors ===
=== Usages ===
i497 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i5 - - - i777 - - - - - - - i8 i494 - - - i488 - - a470 - a474 a480 a485 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i497 <|@
result v220|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 1175
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:726) [bci: 1175]
polymorphic: false
stamp: i32
targetMethod: Direct#FDBigInteger.addAndCmp
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1182 
stateDuring: ?1484 
=== Succesors ===
next: v506 
=== Usages ===
v499 
=== Predecessor ===
i491 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1182 stateDuring: ?1484 #next: v506  <|@  <|@
f <@~|@floating>@ <|@
tid v499 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:726) [bci: 1178]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i497 
y: i7 
=== Succesors ===
=== Usages ===
i500 v512 i1585 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i497 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid v503 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:729) [bci: 1213]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i488 
y: i8 
=== Succesors ===
=== Usages ===
v506 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i488 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v506 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:729) [bci: 1213]
stamp: void
trueSuccessorProbability: 0.10979929161747348
=== Inputs ===
condition: v503 
=== Succesors ===
trueSuccessor: v504 
falseSuccessor: v505 
=== Usages ===
=== Predecessor ===
i497 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v503 #trueSuccessor: v504 #falseSuccessor: v505  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE v76|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v99|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1074]
locals: v0|QWORD[.] - v102|QWORD - - v4|DWORD - - - v61|DWORD v98|DWORD v68|DWORD v99|DWORD v76|DWORD v100|DWORD v68|DWORD - - - - - - - - - - - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|DWORD, rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.valueOfPow52(int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1074] <|@ <|@
      nr   -1  <|@ instruction v206|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1077]
stack: Object[null] 
locals: v0|QWORD[.] - v102|QWORD - - v4|DWORD - - - v61|DWORD v98|DWORD v68|DWORD v99|DWORD v76|DWORD v100|DWORD v68|DWORD - - - - - - - - - - - - - - - - - 
>@ <|@ instruction NULLCHECK [v206|QWORD[.]] state [bci:1077] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v206|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:711) [bci: 1081]
locals: v0|QWORD[.] - v102|QWORD - - v4|DWORD - - - v61|DWORD v98|DWORD v68|DWORD v99|DWORD v76|DWORD v100|DWORD v68|DWORD - - - - - - - - - v206|QWORD[.] - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.getNormalizationBias()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1081] <|@ <|@
      nr   -1  <|@ instruction v207|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v206|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v207|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:712) [bci: 1090]
locals: v0|QWORD[.] - v102|QWORD - - v4|DWORD - - - v61|DWORD v98|DWORD v68|DWORD v99|DWORD v76|DWORD v100|DWORD v68|DWORD - - - - - - - - - - v207|DWORD - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.leftShift(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1090] <|@ <|@
      nr   -1  <|@ instruction v208|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v209|DWORD = ADD (x: v207|DWORD, y: v98|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v102|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v68|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v209|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:714) [bci: 1103]
locals: v0|QWORD[.] - - - - v4|DWORD - - - v61|DWORD - - v99|DWORD v76|DWORD v100|DWORD v68|DWORD - - - - - - - - - v208|QWORD[.] v207|DWORD - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD, rdx|DWORD, rcx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.valueOfMulPow52(long, int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1103] <|@ <|@
      nr   -1  <|@ instruction v210|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:714) [bci: 1106]
stack: Object[null] 
locals: v0|QWORD[.] - - - - v4|DWORD - - - v61|DWORD - - v99|DWORD v76|DWORD v100|DWORD v68|DWORD - - - - - - - - - v208|QWORD[.] v207|DWORD - - - - - - 
>@ <|@ instruction NULLCHECK [v210|QWORD[.]] state [bci:1106] <|@ <|@
      nr   -1  <|@ instruction v211|DWORD = ADD (x: v207|DWORD, y: v100|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v212|DWORD = INC v211|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE v71|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v212|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:715) [bci: 1119]
locals: v0|QWORD[.] - - - - v4|DWORD - - - v61|DWORD - - v99|DWORD v76|DWORD - - - - - - - - - - - v208|QWORD[.] v207|DWORD v210|QWORD[.] - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|DWORD, rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.valueOfPow52(int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1119] <|@ <|@
      nr   -1  <|@ instruction v213|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v214|DWORD = ADD (x: v99|DWORD, y: v207|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v215|DWORD = INC v214|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE v78|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v215|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:717) [bci: 1135]
locals: v0|QWORD[.] - - - - v4|DWORD - - - v61|DWORD - - - - - - - - - - - - - - - v208|QWORD[.] - v210|QWORD[.] v213|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|DWORD, rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.valueOfPow52(int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1135] <|@ <|@
      nr   -1  <|@ instruction v216|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:717) [bci: 1138]
stack: Object[null] 
locals: v0|QWORD[.] - - - - v4|DWORD - - - v61|DWORD - - - - - - - - - - - - - - - v208|QWORD[.] - v210|QWORD[.] v213|QWORD[.] - - - - 
>@ <|@ instruction NULLCHECK [v216|QWORD[.]] state [bci:1138] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v210|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v208|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:724) [bci: 1147]
locals: v0|QWORD[.] - - - - v4|DWORD - - - v61|DWORD - - - - - - - int[0|0x0] - - - - - - - v208|QWORD[.] - v210|QWORD[.] v213|QWORD[.] v216|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.quoRemIteration(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1147] <|@ <|@
      nr   -1  <|@ instruction v217|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v210|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v213|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:725) [bci: 1156]
locals: v0|QWORD[.] - - - - v4|DWORD - - - v61|DWORD - - - - - - - int[0|0x0] - - - - v217|DWORD - - v208|QWORD[.] - v210|QWORD[.] v213|QWORD[.] v216|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1156] <|@ <|@
      nr   -1  <|@ instruction v218|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v218|DWORD, y: v218|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v219|DWORD = SETCC condition: < <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v216|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v210|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v213|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:726) [bci: 1175]
locals: v0|QWORD[.] - - - - v4|DWORD - - - v61|DWORD - - - - - - - int[0|0x0] v219|DWORD - - - v217|DWORD - - v208|QWORD[.] - v210|QWORD[.] v213|QWORD[.] v216|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1175] <|@ <|@
      nr   -1  <|@ instruction v220|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v217|DWORD, y: v217|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.10979929161747348 condition: = trueDestination: B137 -> B138 falseDestination: B137 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B137" 
    successors "B139" "B140" 
    xhandlers
    flags 
    probability 4571188406639254207
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v504 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:729) [bci: 1216]
stamp: void
=== Inputs ===
=== Succesors ===
next: v512 
=== Usages ===
=== Predecessor ===
v506 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v512  <|@  <|@
f <@*|@fixed>@ <|@
tid v512 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:729) [bci: 1218]
stamp: void
trueSuccessorProbability: 0.2831541218637993
=== Inputs ===
condition: v499 
=== Succesors ===
trueSuccessor: v511 
falseSuccessor: v510 
=== Usages ===
=== Predecessor ===
v504 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v499 #trueSuccessor: v511 #falseSuccessor: v510  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v220|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.2831541218637993 condition: < trueDestination: B138 -> B139 falseDestination: B138 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B138" 
    successors "B142" 
    xhandlers
    flags 
    probability 4562783071993710838
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v511 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1227]
stamp: void
=== Inputs ===
=== Succesors ===
next: v509 
=== Usages ===
=== Predecessor ===
v512 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v509  <|@  <|@
f <@*|@fixed>@ <|@
tid v509 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1227]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v508 
=== Predecessor ===
v511 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B139 -> B142 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B138" 
    successors "B145" 
    xhandlers
    flags 
    probability 4568653066950070531
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v510 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:731) [bci: 1221]
stamp: void
=== Inputs ===
=== Succesors ===
next: v521 
=== Usages ===
=== Predecessor ===
v512 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v521  <|@  <|@
f <@~|@floating>@ <|@
tid i1586 <|@
result v221|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:670) [bci: 867]
stamp: i32
=== Inputs ===
x: i777 
y: i17 
=== Succesors ===
=== Usages ===
i524 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i777 y: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v521 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1243]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v522 
=== Predecessor ===
v510 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v221|DWORD = DEC v61|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v221|DWORD, int[0|0x0]] destination: B140 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B137" 
    successors "B142" 
    xhandlers
    flags 
    probability 4584760205312838425
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v505 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1227]
stamp: void
=== Inputs ===
=== Succesors ===
next: v507 
=== Usages ===
=== Predecessor ===
v506 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v507  <|@  <|@
f <@*|@fixed>@ <|@
tid v507 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1227]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v508 
=== Predecessor ===
v505 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B141 -> B142 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" "B139" 
    successors "B143" "B144" 
    xhandlers
    flags 
    probability 4584920838097049953
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v508 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1227]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v507 v509 
=== Succesors ===
next: a1601 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v507 v509 #next: a1601  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1601 <|@
result v222|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.digits
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1228]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v1616 
=== Succesors ===
next: i1602 
=== Usages ===
v1626 v1625 
=== Predecessor ===
v508 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1616 #next: i1602  <|@  <|@
f <@~|@floating>@ <|@
tid i500 <|@
result v223|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:726) [bci: 1178]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v499 
trueValue: i7 
falseValue: i8 
=== Succesors ===
=== Usages ===
?514 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v499 trueValue: i7 falseValue: i8  <|@  <|@
tid ?514 <|@
d <@d|@=== Debug Properties ===
bci: 1227
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 733
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i5 - - - i777 - - - - - - - i8 i494 i500 - - i488 - - a470 - a474 a480 a485 - - - 
=== Succesors ===
=== Usages ===
v1536 i1602 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i5 - - - i777 - - - - - - - i8 i494 i500 - - i488 - - a470 - a474 a480 a485 - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v1625 <|@
result [v222|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1601 
=== Succesors ===
=== Usages ===
i1602 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1601  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1602 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1242]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?514 
guard: - 
address: v1625 
=== Succesors ===
next: v1446 
=== Usages ===
v1224 
=== Predecessor ===
a1601 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?514 guard: - address: v1625 #next: v1446  <|@  <|@
f <@~|@floating>@ <|@
tid v1224 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1242]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1602 
y: i8 
=== Succesors ===
=== Usages ===
v1446 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1602 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v1446 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1242]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1224 
=== Succesors ===
trueSuccessor: v1445 
falseSuccessor: v1443 
=== Usages ===
=== Predecessor ===
i1602 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1224 #trueSuccessor: v1445 #falseSuccessor: v1443  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v222|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v220|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v223|DWORD = SETCC condition: < <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1227]
locals: v0|QWORD[.] - - - - v4|DWORD - - - v61|DWORD - - - - - - - int[0|0x0] v219|DWORD v223|DWORD - - v217|DWORD - - v208|QWORD[.] - v210|QWORD[.] v213|QWORD[.] v216|QWORD[.] - - - 
>@ <|@ instruction CMP [v222|DWORD[.] * 8 + 12] y: 0 size: DWORD state [bci:1227] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B142 -> B143 falseDestination: B142 -> B144 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1445 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1242]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1536 
=== Usages ===
=== Predecessor ===
v1446 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1536  <|@  <|@
f <@~|@floating>@ <|@
tid i1538 <|@
result int[-322587|0xfffffffffffb13e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -322587
stableDimension: 0
stamp: i32 [-322587] ⇊00000000fffb13e5 ⇈00000000fffb13e5
stampKind: i32
value: int[-322587|0xfffffffffffb13e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1536 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1536 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?514 
actionAndReason: i1538 
speculation: a1503 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1445 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?514 actionAndReason: i1538 speculation: a1503  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -322587 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1227]
locals: v0|QWORD[.] - - - - v4|DWORD - - - v61|DWORD - - - - - - - int[0|0x0] v219|DWORD v223|DWORD - - v217|DWORD - - v208|QWORD[.] - v210|QWORD[.] v213|QWORD[.] v216|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:1227] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B145" 
    xhandlers
    flags 
    probability 4584920838097049953
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1443 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1242]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1229 
=== Usages ===
v1229 
=== Predecessor ===
v1446 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1229  <|@  <|@
f <@~|@floating>@ <|@
tid v1626 <|@
result [v222|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1601 
=== Succesors ===
=== Usages ===
v1229 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1601  <|@  <|@
f <@~|@floating>@ <|@
tid i516 <|@
result v224|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1240]
stamp: i32
=== Inputs ===
x: i488 
y: i234 
=== Succesors ===
=== Usages ===
i517 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i488 y: i234  <|@  <|@
f <@~|@floating>@ <|@
tid i517 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1241]
resultBits: 16
stamp: i16
=== Inputs ===
value: i516 
=== Succesors ===
=== Usages ===
v1229 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i516  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1229 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1242]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1443 
address: v1626 
value: i517 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v523 
=== Usages ===
=== Predecessor ===
v1443 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1443 address: v1626 value: i517 stateAfter: - lastLocationAccess: - #next: v523  <|@  <|@
f <@*|@fixed>@ <|@
tid v523 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1243]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v522 
=== Predecessor ===
v1229 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v224|DWORD = LEA [v217|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v222|DWORD[.] * 8 + 16], y: v224|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v61|DWORD, int[1|0x1]] destination: B144 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B140" "B144" 
    successors "B146" "B147" 
    xhandlers
    flags 
    probability 4585327503373534833
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i524 <|@
result v225|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1243]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v522 
values: i1586 i777 
=== Succesors ===
=== Usages ===
?1491 v530 v537 i457 ?1490 ?555 ?636 ?620 ?1489 ?1488 ?1487 ?594 ?1486 ?1485 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v522 values: i1586 i777  <|@  <|@
f <@~|@floating>@ <|@
tid i525 <|@
result v226|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1243]
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v522 
values: i8 i7 
=== Succesors ===
=== Usages ===
i551 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v522 values: i8 i7  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v522 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1243]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v521 v523 
=== Succesors ===
next: v529 
=== Usages ===
i524 i525 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v521 v523 #next: v529  <|@  <|@
f <@*|@fixed>@ <|@
tid v529 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1245]
stamp: void
trueSuccessorProbability: 0.0448642266824085
=== Inputs ===
condition: v241 
=== Succesors ===
trueSuccessor: v527 
falseSuccessor: v528 
=== Usages ===
=== Predecessor ===
v522 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v241 #trueSuccessor: v527 #falseSuccessor: v528  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v225|DWORD, v226|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0448642266824085 condition: = trueDestination: B145 -> B146 falseDestination: B145 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B145" 
    successors "B152" 
    xhandlers
    flags 
    probability 4565060397542026164
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v527 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:742) [bci: 1262]
stamp: void
=== Inputs ===
=== Succesors ===
next: v545 
=== Usages ===
=== Predecessor ===
v529 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v545  <|@  <|@
f <@*|@fixed>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1268]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v544 
=== Predecessor ===
v527 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], int[0|0x0]] destination: B146 -> B152 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B145" 
    successors "B148" "B149" 
    xhandlers
    flags 
    probability 4585095704165938451
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v528 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1248]
stamp: void
=== Inputs ===
=== Succesors ===
next: v536 
=== Usages ===
=== Predecessor ===
v529 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v536  <|@  <|@
f <@~|@floating>@ <|@
tid v530 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1252]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i524 
y: i243 
=== Succesors ===
=== Usages ===
v536 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i524 y: i243  <|@  <|@
f <@*|@fixed>@ <|@
tid v536 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1252]
stamp: void
trueSuccessorProbability: 0.2735887927482489
=== Inputs ===
condition: v530 
=== Succesors ===
trueSuccessor: v535 
falseSuccessor: v534 
=== Usages ===
=== Predecessor ===
v528 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v530 #trueSuccessor: v535 #falseSuccessor: v534  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v225|DWORD y: -3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.2735887927482489 condition: < trueDestination: B147 -> B148 falseDestination: B147 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B147" 
    successors "B152" 
    xhandlers
    flags 
    probability 4576554136652772647
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v535 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:742) [bci: 1262]
stamp: void
=== Inputs ===
=== Succesors ===
next: v696 
=== Usages ===
=== Predecessor ===
v536 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v696  <|@  <|@
f <@*|@fixed>@ <|@
tid v696 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:742) [bci: 1262]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v544 
=== Predecessor ===
v535 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], int[0|0x0]] destination: B148 -> B152 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B147" 
    successors "B150" "B151" 
    xhandlers
    flags 
    probability 4582826730232852371
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v534 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1255]
stamp: void
=== Inputs ===
=== Succesors ===
next: v541 
=== Usages ===
=== Predecessor ===
v536 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v541  <|@  <|@
f <@~|@floating>@ <|@
tid v537 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1259]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i524 
y: i246 
=== Succesors ===
=== Usages ===
v541 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i524 y: i246  <|@  <|@
f <@*|@fixed>@ <|@
tid v541 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1259]
stamp: void
trueSuccessorProbability: 0.998298355076574
=== Inputs ===
condition: v537 
=== Succesors ===
trueSuccessor: v538 
falseSuccessor: v540 
=== Usages ===
=== Predecessor ===
v534 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v537 #trueSuccessor: v538 #falseSuccessor: v540  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v225|DWORD y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.998298355076574 condition: < trueDestination: B149 -> B150 falseDestination: B149 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B149" 
    successors "B152" 
    xhandlers
    flags 
    probability 4582814530274557825
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v538 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1268]
stamp: void
=== Inputs ===
=== Succesors ===
next: v543 
=== Usages ===
=== Predecessor ===
v541 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v543  <|@  <|@
f <@~|@floating>@ <|@
tid i1585 <|@
result v227|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:726) [bci: 1178]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v499 
trueValue: i7 
falseValue: i8 
=== Succesors ===
=== Usages ===
i547 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v499 trueValue: i7 falseValue: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v543 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1268]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v544 
=== Predecessor ===
v538 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v220|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v227|DWORD = SETCC condition: < <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v219|DWORD, v227|DWORD] destination: B150 -> B152 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B149" 
    successors "B152" 
    xhandlers
    flags 
    probability 4541371203408897121
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v540 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:742) [bci: 1262]
stamp: void
=== Inputs ===
=== Succesors ===
next: v695 
=== Usages ===
=== Predecessor ===
v541 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v695  <|@  <|@
f <@*|@fixed>@ <|@
tid v695 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:742) [bci: 1262]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v544 
=== Predecessor ===
v540 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], int[0|0x0]] destination: B151 -> B152 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B150" "B146" "B151" "B148" 
    successors "B153" 
    xhandlers
    flags 
    probability 4585327503373534833
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i546 <|@
result v228|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1268]
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v544 
values: i494 i8 i8 i8 
=== Succesors ===
=== Usages ===
i552 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v544 values: i494 i8 i8 i8  <|@  <|@
f <@~|@floating>@ <|@
tid i547 <|@
result v229|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1268]
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v544 
values: i1585 i8 i8 i8 
=== Succesors ===
=== Usages ===
i553 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v544 values: i1585 i8 i8 i8  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v544 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1268]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v543 v545 v695 v696 
=== Succesors ===
next: v549 
=== Usages ===
i546 i547 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v543 v545 v695 v696 #next: v549  <|@  <|@
tid v1183 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:745) [bci: 1282]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@45f6789d
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.quoRemIteration(FDBigInteger)>
=== Inputs ===
arguments: a474 a470 
=== Succesors ===
=== Usages ===
i580 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a474 a470  <|@  <|@
f <@*|@fixed>@ <|@
tid v549 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1268]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v550 
=== Predecessor ===
v544 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v228|DWORD, v229|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v226|DWORD, v228|DWORD, v229|DWORD, v213|QWORD[.]] destination: B152 -> B153 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B152" "B156" 
    successors "B154" "B159" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4603466648196344439
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i551 <|@
result v230|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v550 
values: i525 i599 
=== Succesors ===
=== Usages ===
?555 ?1485 ?636 ?1491 ?1490 ?1489 ?594 i599 v1624 v1197 ?1488 ?620 ?1487 i458 ?1486 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v550 values: i525 i599  <|@  <|@
f <@~|@floating>@ <|@
tid i552 <|@
result v231|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v550 
values: i546 i590 
=== Succesors ===
=== Usages ===
?1490 v556 ?636 i459 ?1491 ?1489 ?620 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v550 values: i546 i590  <|@  <|@
f <@~|@floating>@ <|@
tid i553 <|@
result v232|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v550 
values: i547 i596 
=== Succesors ===
=== Usages ===
?1490 i460 v565 ?636 ?1491 ?1489 ?620 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v550 values: i547 i596  <|@  <|@
f <@~|@floating>@ <|@
tid a554 <|@
result v233|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# Lsun/misc/FDBigInteger;
valueDescription: a -
=== Inputs ===
merge: v550 
values: a480 a584 
=== Succesors ===
=== Usages ===
v1636 ?1485 v1187 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v550 values: a480 a584  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v550 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 16.386309992132176
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1268]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v549 
=== Succesors ===
next: v564 
=== Usages ===
i551 i552 i553 a554 v559 v570 v605 v1460 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v549 #next: v564  <|@  <|@
f <@~|@floating>@ <|@
tid v565 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1275]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i553 
y: i8 
=== Succesors ===
=== Usages ===
v578 v610 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i553 y: i8  <|@  <|@
f <@~|@floating>@ <|@
tid v556 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1270]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i552 
y: i8 
=== Succesors ===
=== Usages ===
v564 v617 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i552 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v564 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1270]
stamp: void
trueSuccessorProbability: 0.9449992797810535
=== Inputs ===
condition: v556 
=== Succesors ===
trueSuccessor: v557 
falseSuccessor: v559 
=== Usages ===
=== Predecessor ===
v550 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v556 #trueSuccessor: v557 #falseSuccessor: v559  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v230|DWORD, v231|DWORD, v232|DWORD, v233|QWORD[.]] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v231|DWORD, y: v231|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9449992797810535 condition: = trueDestination: B153 -> B154 falseDestination: B153 -> B159 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B153" 
    successors "B155" "B158" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4603175615809548529
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v557 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1273]
stamp: void
=== Inputs ===
=== Succesors ===
next: v578 
=== Usages ===
=== Predecessor ===
v564 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v578  <|@  <|@
f <@*|@fixed>@ <|@
tid v578 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1275]
stamp: void
trueSuccessorProbability: 0.9936234534969387
=== Inputs ===
condition: v565 
=== Succesors ===
trueSuccessor: v566 
falseSuccessor: v570 
=== Usages ===
=== Predecessor ===
v557 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v565 #trueSuccessor: v566 #falseSuccessor: v570  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v232|DWORD, y: v232|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9936234534969387 condition: = trueDestination: B154 -> B155 falseDestination: B154 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B154" 
    successors "B156" "B157" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4603143730550235664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v566 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:745) [bci: 1278]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1636 
=== Usages ===
=== Predecessor ===
v578 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1636  <|@  <|@
tid ?555 <|@
d <@d|@=== Debug Properties ===
bci: 1268
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 744
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i524 - - - - - - - i551 i8 i8 - - - - - a470 - a474 a1503 a485 - - - 
=== Succesors ===
=== Usages ===
v1636 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i524 - - - - - - - i551 i8 i8 - - - - - a470 - a474 a1503 a485 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1636 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?555 
object: a554 
=== Succesors ===
next: i580 
=== Usages ===
=== Predecessor ===
v566 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?555 object: a554 #next: i580  <|@  <|@
tid ?1485 <|@
d <@d|@=== Debug Properties ===
bci: 1282
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 745
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i524 - - - - - - - i551 - - - - - - - a470 - a474 a554 a485 - - - 
=== Succesors ===
=== Usages ===
i580 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i524 - - - - - - - i551 - - - - - - - a470 - a474 a554 a485 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i580 <|@
result v234|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 1282
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:745) [bci: 1282]
polymorphic: false
stamp: i32
targetMethod: Direct#FDBigInteger.quoRemIteration
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1183 
stateDuring: ?1485 
=== Succesors ===
next: a584 
=== Usages ===
?1488 ?1487 ?1486 ?594 i600 
=== Predecessor ===
v1636 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1183 stateDuring: ?1485 #next: a584  <|@  <|@
tid v1187 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:747) [bci: 1312]
returnStamp: a# Lsun/misc/FDBigInteger;
signature: [Ljdk.vm.ci.meta.JavaType;@6591b771
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.multBy10()>
=== Inputs ===
arguments: a554 
=== Succesors ===
=== Usages ===
a584 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a554  <|@  <|@
tid ?1486 <|@
d <@d|@=== Debug Properties ===
bci: 1312
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 747
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i524 - - - - - - - i551 - - - - i580 - - a470 - a474 - a485 - - - 
=== Succesors ===
=== Usages ===
a584 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i524 - - - - - - - i551 - - - - i580 - - a470 - a474 - a485 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a584 <|@
result v235|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 1312
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:747) [bci: 1312]
polymorphic: false
stamp: a# Lsun/misc/FDBigInteger;
targetMethod: Direct#FDBigInteger.multBy10
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1187 
stateDuring: ?1486 
=== Succesors ===
next: i587 
=== Usages ===
?1488 v1188 ?1487 v1189 ?594 a554 
=== Predecessor ===
i580 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1187 stateDuring: ?1486 #next: i587  <|@  <|@
tid v1188 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@1909786b
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)>
=== Inputs ===
arguments: a474 a584 
=== Succesors ===
=== Usages ===
i587 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a474 a584  <|@  <|@
tid ?1487 <|@
d <@d|@=== Debug Properties ===
bci: 1321
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 748
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i524 - - - - - - - i551 - - - - i580 - - a470 - a474 a584 a485 - - - 
=== Succesors ===
=== Usages ===
i587 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i524 - - - - - - - i551 - - - - i580 - - a470 - a474 a584 a485 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i587 <|@
result v236|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 1321
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
polymorphic: false
stamp: i32
targetMethod: Direct#FDBigInteger.cmp
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1188 
stateDuring: ?1487 
=== Succesors ===
next: i593 
=== Usages ===
v589 
=== Predecessor ===
a584 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1188 stateDuring: ?1487 #next: i593  <|@  <|@
tid v1189 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1340]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@4a9c4105
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)>
=== Inputs ===
arguments: a485 a474 a584 
=== Succesors ===
=== Usages ===
i593 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a485 a474 a584  <|@  <|@
f <@~|@floating>@ <|@
tid v589 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1324]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i587 
y: i8 
=== Succesors ===
=== Usages ===
i590 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i587 y: i8  <|@  <|@
f <@~|@floating>@ <|@
tid i590 <|@
result v237|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1324]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v589 
trueValue: i7 
falseValue: i8 
=== Succesors ===
=== Usages ===
?594 ?1488 i552 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v589 trueValue: i7 falseValue: i8  <|@  <|@
tid ?1488 <|@
d <@d|@=== Debug Properties ===
bci: 1340
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 749
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i524 - - - - - - - i551 i590 - - - i580 - - a470 - a474 a584 a485 - - - 
=== Succesors ===
=== Usages ===
i593 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i524 - - - - - - - i551 i590 - - - i580 - - a470 - a474 a584 a485 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i593 <|@
result v238|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 1340
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1340]
polymorphic: false
stamp: i32
targetMethod: Direct#FDBigInteger.addAndCmp
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1189 
stateDuring: ?1488 
=== Succesors ===
next: a1603 
=== Usages ===
?594 v595 
=== Predecessor ===
i587 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1189 stateDuring: ?1488 #next: a1603  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1603 <|@
result v239|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.digits
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1354]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v1616 
=== Succesors ===
next: i1604 
=== Usages ===
a1191 v1623 
=== Predecessor ===
i593 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1616 #next: i1604  <|@  <|@
tid ?594 <|@
d <@d|@=== Debug Properties ===
bci: 1343
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1340]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 749
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i524 - - - - - - - i551 i590 - - - i580 - - a470 - a474 a584 a485 - - - i593 
=== Succesors ===
=== Usages ===
v1544 i1604 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i524 - - - - - - - i551 i590 - - - i580 - - a470 - a474 a584 a485 - - - i593  <|@  <|@
f <@~|@floating>@ <|@
tid v1623 <|@
result [v239|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1603 
=== Succesors ===
=== Usages ===
i1604 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1603  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1604 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1368]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?594 
guard: - 
address: v1623 
=== Succesors ===
next: v1461 
=== Usages ===
v1197 
=== Predecessor ===
a1603 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?594 guard: - address: v1623 #next: v1461  <|@  <|@
f <@~|@floating>@ <|@
tid v1197 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1368]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i551 
y: i1604 
=== Succesors ===
=== Usages ===
v1461 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i551 y: i1604  <|@  <|@
f <@*|@fixed>@ <|@
tid v1461 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1368]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1197 
=== Succesors ===
trueSuccessor: v1457 
falseSuccessor: v1460 
=== Usages ===
=== Predecessor ===
i1604 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1197 #trueSuccessor: v1457 #falseSuccessor: v1460  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1268]
locals: v0|QWORD[.] - - - - - - - - v225|DWORD - - - - - - - v230|DWORD int[0|0x0] int[0|0x0] - - - - - v208|QWORD[.] - v210|QWORD[.] Object[null] v216|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK [v233|QWORD[.]] state [bci:1268] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v210|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v208|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:745) [bci: 1282]
locals: v0|QWORD[.] - - - - - - - - v225|DWORD - - - - - - - v230|DWORD - - - - - - - v208|QWORD[.] - v210|QWORD[.] v233|QWORD[.] v216|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.quoRemIteration(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1282] <|@ <|@
      nr   -1  <|@ instruction v234|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v233|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:747) [bci: 1312]
locals: v0|QWORD[.] - - - - - - - - v225|DWORD - - - - - - - v230|DWORD - - - - v234|DWORD - - v208|QWORD[.] - v210|QWORD[.] - v216|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.multBy10()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1312] <|@ <|@
      nr   -1  <|@ instruction v235|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v210|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v235|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
locals: v0|QWORD[.] - - - - - - - - v225|DWORD - - - - - - - v230|DWORD - - - - v234|DWORD - - v208|QWORD[.] - v210|QWORD[.] v235|QWORD[.] v216|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1321] <|@ <|@
      nr   -1  <|@ instruction v236|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v236|DWORD, y: v236|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v237|DWORD = SETCC condition: < <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v216|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v210|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v235|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1340]
locals: v0|QWORD[.] - - - - - - - - v225|DWORD - - - - - - - v230|DWORD v237|DWORD - - - v234|DWORD - - v208|QWORD[.] - v210|QWORD[.] v235|QWORD[.] v216|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1340] <|@ <|@
      nr   -1  <|@ instruction v238|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v239|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1343]
stack: v238|DWORD 
locals: v0|QWORD[.] - - - - - - - - v225|DWORD - - - - - - - v230|DWORD v237|DWORD - - - v234|DWORD - - v208|QWORD[.] - v210|QWORD[.] v235|QWORD[.] v216|QWORD[.] - - - 
>@ <|@ instruction CMP (x: v230|DWORD, y: [v239|DWORD[.] * 8 + 12]) size: DWORD state [bci:1343] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B155 -> B156 falseDestination: B155 -> B157 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B156"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors "B153" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4603143730550235664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1457 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1368]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1205 
=== Usages ===
v1205 
=== Predecessor ===
v1461 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1205  <|@  <|@
f <@~|@floating>@ <|@
tid a1191 <|@
result v240|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1354]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1603 
=== Succesors ===
=== Usages ===
v1624 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1603  <|@  <|@
f <@~|@floating>@ <|@
tid v1624 <|@
result [v240|QWORD[.] + v230|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a1191 
index: i551 
=== Succesors ===
=== Usages ===
v1205 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1191 index: i551  <|@  <|@
f <@~|@floating>@ <|@
tid i600 <|@
result v241|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1366]
stamp: i32
=== Inputs ===
x: i580 
y: i234 
=== Succesors ===
=== Usages ===
i601 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i580 y: i234  <|@  <|@
f <@~|@floating>@ <|@
tid i601 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1367]
resultBits: 16
stamp: i16
=== Inputs ===
value: i600 
=== Succesors ===
=== Usages ===
v1205 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i600  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1205 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1368]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1457 
address: v1624 
value: i601 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v605 
=== Usages ===
=== Predecessor ===
v1457 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1457 address: v1624 value: i601 stateAfter: - lastLocationAccess: - #next: v605  <|@  <|@
f <@~|@floating>@ <|@
tid v595 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1343]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i593 
y: i7 
=== Succesors ===
=== Usages ===
i596 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i593 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i596 <|@
result v242|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1343]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v595 
trueValue: i7 
falseValue: i8 
=== Succesors ===
=== Usages ===
i553 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v595 trueValue: i7 falseValue: i8  <|@  <|@
f <@~|@floating>@ <|@
tid i599 <|@
result v243|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1359]
stamp: i32
=== Inputs ===
x: i551 
y: i7 
=== Succesors ===
=== Usages ===
i551 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i551 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v605 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1268]
stamp: void
=== Inputs ===
loopBegin: v550 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1205 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v550  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v240|QWORD[.] = UNCOMPRESSPOINTER (input: v239|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@40447647 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v241|DWORD = LEA [v234|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v240|QWORD[.] + v230|DWORD * 2 + 16], y: v241|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction CMP v238|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v242|DWORD = SETCC condition: < <|@ <|@
      nr   -1  <|@ instruction v243|DWORD = INC v230|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v243|DWORD, v237|DWORD, v242|DWORD, v235|QWORD[.]] destination: B156 -> B153 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B157"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1460 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1368]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v550 
=== Succesors ===
next: v1544 
=== Usages ===
=== Predecessor ===
v1461 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v550 #next: v1544  <|@  <|@
f <@~|@floating>@ <|@
tid i1546 <|@
result int[-306715|0xfffffffffffb51e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -306715
stableDimension: 0
stamp: i32 [-306715] ⇊00000000fffb51e5 ⇈00000000fffb51e5
stampKind: i32
value: int[-306715|0xfffffffffffb51e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1544 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1544 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?594 
actionAndReason: i1546 
speculation: a1503 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1460 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?594 actionAndReason: i1546 speculation: a1503  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -306715 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1343]
stack: v238|DWORD 
locals: v0|QWORD[.] - - - - - - - - v225|DWORD - - - - - - - v230|DWORD v237|DWORD - - - v234|DWORD - - v208|QWORD[.] - v210|QWORD[.] v235|QWORD[.] v216|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:1343] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B158"
    from_bci -1
    to_bci -1
    predecessors "B154" 
    successors "B160" 
    xhandlers
    flags 
    probability 4570309048910405919
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v570 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:752) [bci: 1372]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v550 
=== Succesors ===
next: v569 
=== Usages ===
=== Predecessor ===
v578 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v550 #next: v569  <|@  <|@
f <@*|@fixed>@ <|@
tid v569 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:752) [bci: 1372]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v568 
=== Predecessor ===
v570 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B158 -> B160 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B159"
    from_bci -1
    to_bci -1
    predecessors "B153" 
    successors "B160" 
    xhandlers
    flags 
    probability 4584817339224528992
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v559 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:752) [bci: 1372]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v550 
=== Succesors ===
next: v567 
=== Usages ===
=== Predecessor ===
v564 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v550 #next: v567  <|@  <|@
f <@*|@fixed>@ <|@
tid v567 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:752) [bci: 1372]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v568 
=== Predecessor ===
v559 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B159 -> B160 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B160"
    from_bci -1
    to_bci -1
    predecessors "B159" "B158" 
    successors "B161" "B162" 
    xhandlers
    flags 
    probability 4585327503373534834
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v568 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:752) [bci: 1372]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v567 v569 
=== Succesors ===
next: v610 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v567 v569 #next: v610  <|@  <|@
f <@*|@fixed>@ <|@
tid v610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:752) [bci: 1374]
stamp: void
trueSuccessorProbability: 0.045633359559402044
=== Inputs ===
condition: v565 
=== Succesors ===
trueSuccessor: v608 
falseSuccessor: v609 
=== Usages ===
=== Predecessor ===
v568 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v565 #trueSuccessor: v608 #falseSuccessor: v609  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v232|DWORD, y: v232|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.045633359559402044 condition: = trueDestination: B160 -> B161 falseDestination: B160 -> B162 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B161"
    from_bci -1
    to_bci -1
    predecessors "B160" 
    successors "B165" 
    xhandlers
    flags 
    probability 4565187561230056182
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v608 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:756) [bci: 1403]
stamp: void
=== Inputs ===
=== Succesors ===
next: v629 
=== Usages ===
=== Predecessor ===
v610 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v629  <|@  <|@
f <@*|@fixed>@ <|@
tid v629 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1406]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v628 
=== Predecessor ===
v608 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0], v210|QWORD[.]] destination: B161 -> B165 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B162"
    from_bci -1
    to_bci -1
    predecessors "B160" 
    successors "B163" "B164" 
    xhandlers
    flags 
    probability 4585091730300687514
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v609 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:752) [bci: 1377]
stamp: void
=== Inputs ===
=== Succesors ===
next: v617 
=== Usages ===
=== Predecessor ===
v610 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v617  <|@  <|@
f <@*|@fixed>@ <|@
tid v617 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:752) [bci: 1379]
stamp: void
trueSuccessorProbability: 0.10346248969497114
=== Inputs ===
condition: v556 
=== Succesors ===
trueSuccessor: v616 
falseSuccessor: v615 
=== Usages ===
=== Predecessor ===
v609 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v556 #trueSuccessor: v616 #falseSuccessor: v615  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v231|DWORD, y: v231|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.10346248969497114 condition: = trueDestination: B162 -> B163 falseDestination: B162 -> B164 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B163"
    from_bci -1
    to_bci -1
    predecessors "B162" 
    successors "B165" 
    xhandlers
    flags 
    probability 4570309048910405860
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v616 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:756) [bci: 1403]
stamp: void
=== Inputs ===
=== Succesors ===
next: v697 
=== Usages ===
=== Predecessor ===
v617 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v697  <|@  <|@
f <@*|@fixed>@ <|@
tid v697 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:756) [bci: 1403]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v628 
=== Predecessor ===
v616 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0], v210|QWORD[.]] destination: B163 -> B165 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B164"
    from_bci -1
    to_bci -1
    predecessors "B162" 
    successors "B165" 
    xhandlers
    flags 
    probability 4584498711640198423
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v615 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:753) [bci: 1382]
stamp: void
=== Inputs ===
=== Succesors ===
next: a619 
=== Usages ===
=== Predecessor ===
v617 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a619  <|@  <|@
tid v1212 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:753) [bci: 1385]
returnStamp: a# Lsun/misc/FDBigInteger;
signature: [Ljdk.vm.ci.meta.JavaType;@3c58fa5b
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.leftShift(int)>
=== Inputs ===
arguments: a474 i7 
=== Succesors ===
=== Usages ===
a619 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a474 i7  <|@  <|@
tid ?1489 <|@
d <@d|@=== Debug Properties ===
bci: 1385
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 753
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i524 - - - - - - - i551 i552 i553 - - - - - - - - - a485 - - - 
=== Succesors ===
=== Usages ===
a619 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i524 - - - - - - - i551 i552 i553 - - - - - - - - - a485 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a619 <|@
result v244|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 1385
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:753) [bci: 1385]
polymorphic: false
stamp: a# Lsun/misc/FDBigInteger;
targetMethod: Direct#FDBigInteger.leftShift
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1212 
stateDuring: ?1489 
=== Succesors ===
next: v1637 
=== Usages ===
v1216 a1299 ?1490 v1637 
=== Predecessor ===
v615 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1212 stateDuring: ?1489 #next: v1637  <|@  <|@
tid ?620 <|@
d <@d|@=== Debug Properties ===
bci: 1388
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:753) [bci: 1385]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 753
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i524 - - - - - - - i551 i552 i553 - - - - - - - - - a485 - - - a1503 
=== Succesors ===
=== Usages ===
v1637 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i524 - - - - - - - i551 i552 i553 - - - - - - - - - a485 - - - a1503  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1637 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?620 
object: a619 
=== Succesors ===
next: i622 
=== Usages ===
=== Predecessor ===
a619 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?620 object: a619 #next: i622  <|@  <|@
tid v1216 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:754) [bci: 1394]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@541ae89e
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)>
=== Inputs ===
arguments: a619 a485 
=== Succesors ===
=== Usages ===
i622 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a619 a485  <|@  <|@
tid ?1490 <|@
d <@d|@=== Debug Properties ===
bci: 1394
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 754
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i524 - - - - - - - i551 i552 i553 - - - - - - - a619 - - - - - 
=== Succesors ===
=== Usages ===
i622 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i524 - - - - - - - i551 i552 i553 - - - - - - - a619 - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i622 <|@
result v245|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 1394
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:754) [bci: 1394]
polymorphic: false
stamp: i32
targetMethod: Direct#FDBigInteger.cmp
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1216 
stateDuring: ?1490 
=== Succesors ===
next: v627 
=== Usages ===
j624 
=== Predecessor ===
v1637 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1216 stateDuring: ?1490 #next: v627  <|@  <|@
f <@~|@floating>@ <|@
tid j624 <|@
result v246|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:754) [bci: 1397]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i622 
=== Succesors ===
=== Usages ===
j630 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i622  <|@  <|@
f <@*|@fixed>@ <|@
tid v627 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1406]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v628 
=== Predecessor ===
i622 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v210|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:753) [bci: 1385]
locals: v0|QWORD[.] - - - - - - - - v225|DWORD - - - - - - - v230|DWORD v231|DWORD v232|DWORD - - - - - - - - - v216|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.leftShift(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1385] <|@ <|@
      nr   -1  <|@ instruction v244|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:753) [bci: 1388]
stack: Object[null] 
locals: v0|QWORD[.] - - - - - - - - v225|DWORD - - - - - - - v230|DWORD v231|DWORD v232|DWORD - - - - - - - - - v216|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK [v244|QWORD[.]] state [bci:1388] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v244|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v216|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:754) [bci: 1394]
locals: v0|QWORD[.] - - - - - - - - v225|DWORD - - - - - - - v230|DWORD v231|DWORD v232|DWORD - - - - - - - v244|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1394] <|@ <|@
      nr   -1  <|@ instruction v245|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v246|QWORD = MOVSXD v245|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v246|QWORD, v244|QWORD[.]] destination: B164 -> B165 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B165"
    from_bci -1
    to_bci -1
    predecessors "B164" "B161" "B163" 
    successors "B166" "B167" 
    xhandlers
    flags 
    probability 4585327503373534833
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j630 <|@
result v247|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1406]
stamp: i64 [-2147483648 - 2147483647]
valueDescription: i64
=== Inputs ===
merge: v628 
values: j624 j278 j278 
=== Succesors ===
=== Usages ===
?1491 ?636 j461 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v628 values: j624 j278 j278  <|@  <|@
f <@~|@floating>@ <|@
tid a1299 <|@
result v248|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1406]
stamp: a!# Lsun/misc/FDBigInteger;
valueDescription: a -
=== Inputs ===
merge: v628 
values: a619 a474 a474 
=== Succesors ===
=== Usages ===
v1209 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v628 values: a619 a474 a474  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v628 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1406]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v627 v629 v697 
=== Succesors ===
next: i635 
=== Usages ===
j630 a1299 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v627 v629 v697 #next: i635  <|@  <|@
f <@~|@floating>@ <|@
tid a633 <|@
result v249|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1409]
rawvalue: FDBigInteger@241972498
stableDimension: 0
stamp: a!# Lsun/misc/FDBigInteger;
stampKind: a -
value: Object[FDBigInteger@241972498]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1209 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid v1209 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1412]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@6820856
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)>
=== Inputs ===
arguments: a1299 a633 
=== Succesors ===
=== Usages ===
i635 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1299 a633  <|@  <|@
tid ?1491 <|@
d <@d|@=== Debug Properties ===
bci: 1412
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 758
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i524 - - - - - - - i551 i552 i553 j630 - - - - - - - - - - - - a1 
=== Succesors ===
=== Usages ===
i635 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i524 - - - - - - - i551 i552 i553 j630 - - - - - - - - - - - - a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i635 <|@
result v250|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 1412
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1412]
polymorphic: false
stamp: i32
targetMethod: Direct#FDBigInteger.cmp
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1209 
stateDuring: ?1491 
=== Succesors ===
next: v1469 
=== Usages ===
v637 
=== Predecessor ===
v628 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1209 stateDuring: ?1491 #next: v1469  <|@  <|@
f <@~|@floating>@ <|@
tid v637 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1415]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i635 
y: i8 
=== Succesors ===
=== Usages ===
v1469 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i635 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v1469 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1415]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v637 
=== Succesors ===
trueSuccessor: v1468 
falseSuccessor: v1466 
=== Usages ===
=== Predecessor ===
i635 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v637 #trueSuccessor: v1468 #falseSuccessor: v1466  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v247|QWORD, v248|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v249|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[FDBigInteger@241972498] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v248|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v249|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1412]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - - - - - - - - v225|DWORD - - - - - - - v230|DWORD v231|DWORD v232|DWORD v247|QWORD - - - - - - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1412] <|@ <|@
      nr   -1  <|@ instruction v250|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v250|DWORD, y: v250|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B165 -> B166 falseDestination: B165 -> B167 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B166"
    from_bci -1
    to_bci -1
    predecessors "B165" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1468 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1415]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1467 
=== Usages ===
=== Predecessor ===
v1469 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1467  <|@  <|@
tid ?636 <|@
d <@d|@=== Debug Properties ===
bci: 1415
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1412]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 758
stackSize: 2
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i524 - - - - - - - i551 i552 i553 j630 - - - - - - - - - - - - a1 i8 
=== Succesors ===
=== Usages ===
v1467 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i524 - - - - - - - i551 i552 i553 j630 - - - - - - - - - - - - a1 i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v1467 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1294
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1415]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?636 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1468 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?636  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -331283 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1415]
stack: v0|QWORD[.] int[0|0x0] 
locals: v0|QWORD[.] - - - - - - - - v225|DWORD - - - - - - - v230|DWORD v231|DWORD v232|DWORD v247|QWORD - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:1415] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B167"
    from_bci -1
    to_bci -1
    predecessors "B165" 
    successors "B168" 
    xhandlers
    flags 
    probability 4585327503373534833
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1466 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1415]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1211 
=== Usages ===
=== Predecessor ===
v1469 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1211  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1211 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: FloatingDecimal$BinaryToASCIIBuffer.exactDecimalConversion
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1423]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1607 
value: i1243 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v642 
=== Usages ===
=== Predecessor ===
v1466 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1607 value: i1243 stateAfter: - lastLocationAccess: - #next: v642  <|@  <|@
f <@*|@fixed>@ <|@
tid v642 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:760) [bci: 1426]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v455 
=== Predecessor ===
v1211 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + 25], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v225|DWORD, v230|DWORD, v231|DWORD, v232|DWORD, v247|QWORD] destination: B167 -> B168 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B168"
    from_bci -1
    to_bci -1
    predecessors "B94" "B131" "B167" 
    successors "B169" "B170" 
    xhandlers
    flags 
    probability 4605389661644661784
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i457 <|@
result v251|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:760) [bci: 1426]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v455 
values: i777 i922 i524 
=== Succesors ===
=== Usages ===
?650 i644 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v455 values: i777 i922 i524  <|@  <|@
f <@~|@floating>@ <|@
tid i458 <|@
result v252|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:760) [bci: 1426]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v455 
values: i702 i376 i551 
=== Succesors ===
=== Usages ===
?650 v1236 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v455 values: i702 i376 i551  <|@  <|@
f <@~|@floating>@ <|@
tid i459 <|@
result v253|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:760) [bci: 1426]
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v455 
values: i7 i377 i552 
=== Succesors ===
=== Usages ===
v655 ?650 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v455 values: i7 i377 i552  <|@  <|@
f <@~|@floating>@ <|@
tid i460 <|@
result v254|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:760) [bci: 1426]
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v455 
values: i8 i378 i553 
=== Succesors ===
=== Usages ===
v651 ?650 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v455 values: i8 i378 i553  <|@  <|@
f <@~|@floating>@ <|@
tid j461 <|@
result v255|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:760) [bci: 1426]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v455 
values: j301 j447 j630 
=== Succesors ===
=== Usages ===
v660 v662 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v455 values: j301 j447 j630  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:760) [bci: 1426]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v454 v456 v642 
=== Succesors ===
next: v1231 
=== Usages ===
i457 i458 i459 i460 j461 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v454 v456 v642 #next: v1231  <|@  <|@
f <@~|@floating>@ <|@
tid v1627 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v1231 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i644 <|@
result v256|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:760) [bci: 1430]
stamp: i32
=== Inputs ===
x: i457 
y: i7 
=== Succesors ===
=== Usages ===
v1231 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i457 y: i7  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1231 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: FloatingDecimal$BinaryToASCIIBuffer.decExponent
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:760) [bci: 1431]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1627 
value: i644 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1233 
=== Usages ===
=== Predecessor ===
v455 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1627 value: i644 stateAfter: - lastLocationAccess: - #next: v1233  <|@  <|@
f <@~|@floating>@ <|@
tid v1628 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v1233 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1233 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: FloatingDecimal$BinaryToASCIIBuffer.firstDigitIndex
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:761) [bci: 1436]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1628 
value: i8 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1236 
=== Usages ===
=== Predecessor ===
v1231 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1628 value: i8 stateAfter: - lastLocationAccess: - #next: v1236  <|@  <|@
f <@~|@floating>@ <|@
tid v1629 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v1236 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1236 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: FloatingDecimal$BinaryToASCIIBuffer.nDigits
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:762) [bci: 1442]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1629 
value: i458 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v654 
=== Usages ===
=== Predecessor ===
v1233 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1629 value: i458 stateAfter: - lastLocationAccess: - #next: v654  <|@  <|@
f <@~|@floating>@ <|@
tid v651 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:766) [bci: 1447]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i460 
y: i8 
=== Succesors ===
=== Usages ===
v654 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i460 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v654 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:766) [bci: 1447]
stamp: void
trueSuccessorProbability: 0.6008525479558225
=== Inputs ===
condition: v651 
=== Succesors ===
trueSuccessor: v652 
falseSuccessor: v653 
=== Usages ===
=== Predecessor ===
v1236 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v651 #trueSuccessor: v652 #falseSuccessor: v653  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v251|DWORD, v252|DWORD, v253|DWORD, v254|DWORD, v255|QWORD] = LABEL numbPhis: 5 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v256|DWORD = INC v251|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v256|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v252|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v254|DWORD, y: v254|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6008525479558225 condition: = trueDestination: B168 -> B169 falseDestination: B168 -> B170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B169"
    from_bci -1
    to_bci -1
    predecessors "B168" 
    successors 
    xhandlers
    flags 
    probability 4602341251752896824
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v652 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:781) [bci: 1508]
stamp: void
=== Inputs ===
=== Succesors ===
next: v698 
=== Usages ===
=== Predecessor ===
v654 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v698  <|@  <|@
f <@*|@fixed>@ <|@
tid v698 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:781) [bci: 1508]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v652 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B170"
    from_bci -1
    to_bci -1
    predecessors "B168" 
    successors "B171" "B172" 
    xhandlers
    flags 
    probability 4599430872281685752
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v653 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:767) [bci: 1450]
stamp: void
=== Inputs ===
=== Succesors ===
next: v658 
=== Usages ===
=== Predecessor ===
v654 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v658  <|@  <|@
f <@~|@floating>@ <|@
tid v655 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:767) [bci: 1452]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i459 
y: i8 
=== Succesors ===
=== Usages ===
v658 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i459 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v658 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:767) [bci: 1452]
stamp: void
trueSuccessorProbability: 0.7168137687555163
=== Inputs ===
condition: v655 
=== Succesors ===
trueSuccessor: v656 
falseSuccessor: v657 
=== Usages ===
=== Predecessor ===
v653 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v655 #trueSuccessor: v656 #falseSuccessor: v657  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v253|DWORD, y: v253|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7168137687555163 condition: = trueDestination: B170 -> B171 falseDestination: B170 -> B172 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B171"
    from_bci -1
    to_bci -1
    predecessors "B170" 
    successors 
    xhandlers
    flags 
    probability 4597424643074725698
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v656 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:778) [bci: 1504]
stamp: void
=== Inputs ===
=== Succesors ===
next: v674 
=== Usages ===
=== Predecessor ===
v658 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v674  <|@  <|@
tid v1237 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:778) [bci: 1505]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@2e3ef5ea
stamp: void
targetMethod: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.roundup()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
v674 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?1492 <|@
d <@d|@=== Debug Properties ===
bci: 1505
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 778
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
v674 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v674 <|@
d <@d|@=== Debug Properties ===
bci: 1505
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:778) [bci: 1505]
polymorphic: false
stamp: void
targetMethod: Direct#FloatingDecimal$BinaryToASCIIBuffer.roundup
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1237 
stateDuring: ?1492 
=== Succesors ===
next: v701 
=== Usages ===
=== Predecessor ===
v656 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1237 stateDuring: ?1492 #next: v701  <|@  <|@
f <@*|@fixed>@ <|@
tid v701 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:781) [bci: 1508]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v674 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:778) [bci: 1505]
locals: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.roundup()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1505] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B172"
    from_bci -1
    to_bci -1
    predecessors "B170" 
    successors "B173" "B174" 
    xhandlers
    flags 
    probability 4591188184549903708
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v657 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:768) [bci: 1455]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1473 
=== Usages ===
=== Predecessor ===
v658 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1473  <|@  <|@
f <@~|@floating>@ <|@
tid v660 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:768) [bci: 1459]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j461 
y: j278 
=== Succesors ===
=== Usages ===
v1473 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j461 y: j278  <|@  <|@
f <@*|@fixed>@ <|@
tid v1473 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:768) [bci: 1459]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v660 
=== Succesors ===
trueSuccessor: v1472 
falseSuccessor: v1470 
=== Usages ===
=== Predecessor ===
v657 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v660 #trueSuccessor: v1472 #falseSuccessor: v1470  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v255|QWORD, y: v255|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B172 -> B173 falseDestination: B172 -> B174 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B173"
    from_bci -1
    to_bci -1
    predecessors "B172" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1472 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:768) [bci: 1459]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1471 
=== Usages ===
=== Predecessor ===
v1473 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1471  <|@  <|@
tid ?650 <|@
d <@d|@=== Debug Properties ===
bci: 1445
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:762) [bci: 1442]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 766
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i457 - - - - - - - i458 i459 i460 j278 - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
v1471 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i457 - - - - - - - i458 i459 i460 j278 - - - - - - - - - - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1471 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1238
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:768) [bci: 1459]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?650 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1472 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?650  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -316947 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:766) [bci: 1445]
locals: v0|QWORD[.] - - - - - - - - v251|DWORD - - - - - - - v252|DWORD v253|DWORD v254|DWORD long[0|0x0] - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:1445] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B174"
    from_bci -1
    to_bci -1
    predecessors "B172" 
    successors "B175" "B176" 
    xhandlers
    flags 
    probability 4591188184549903708
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1470 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:768) [bci: 1459]
stamp: void
=== Inputs ===
=== Succesors ===
next: v668 
=== Usages ===
=== Predecessor ===
v1473 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v668  <|@  <|@
f <@~|@floating>@ <|@
tid v662 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:774) [bci: 1494]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j461 
y: j280 
=== Succesors ===
=== Usages ===
v668 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j461 y: j280  <|@  <|@
f <@*|@fixed>@ <|@
tid v668 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:774) [bci: 1494]
stamp: void
trueSuccessorProbability: 0.40049867539348605
=== Inputs ===
condition: v662 
=== Succesors ===
trueSuccessor: v667 
falseSuccessor: v666 
=== Usages ===
=== Predecessor ===
v1470 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v662 #trueSuccessor: v667 #falseSuccessor: v666  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v255|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.40049867539348605 condition: < trueDestination: B174 -> B175 falseDestination: B174 -> B176 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B175"
    from_bci -1
    to_bci -1
    predecessors "B174" 
    successors 
    xhandlers
    flags 
    probability 4585386338626231915
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v667 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:781) [bci: 1508]
stamp: void
=== Inputs ===
=== Succesors ===
next: v699 
=== Usages ===
=== Predecessor ===
v668 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v699  <|@  <|@
f <@*|@fixed>@ <|@
tid v699 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:781) [bci: 1508]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v667 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B176"
    from_bci -1
    to_bci -1
    predecessors "B174" 
    successors 
    xhandlers
    flags 
    probability 4587982831218834509
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v666 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:775) [bci: 1497]
stamp: void
=== Inputs ===
=== Succesors ===
next: v670 
=== Usages ===
=== Predecessor ===
v668 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v670  <|@  <|@
tid v1239 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:775) [bci: 1498]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@554f5854
stamp: void
targetMethod: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.roundup()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
v670 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?1493 <|@
d <@d|@=== Debug Properties ===
bci: 1498
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 775
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
v670 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v670 <|@
d <@d|@=== Debug Properties ===
bci: 1498
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:775) [bci: 1498]
polymorphic: false
stamp: void
targetMethod: Direct#FloatingDecimal$BinaryToASCIIBuffer.roundup
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1239 
stateDuring: ?1493 
=== Succesors ===
next: v700 
=== Usages ===
=== Predecessor ===
v666 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1239 stateDuring: ?1493 #next: v700  <|@  <|@
f <@*|@fixed>@ <|@
tid v700 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:781) [bci: 1508]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v670 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:775) [bci: 1498]
locals: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.roundup()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1498] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B177"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B178" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1324 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:825) [bci: 85]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1517 
=== Usages ===
=== Predecessor ===
v1325 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1517  <|@  <|@
f <@~|@floating>@ <|@
tid i1518 <|@
result int[-317715|0xfffffffffffb26ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -317715
stableDimension: 0
stamp: i32 [-317715] ⇊00000000fffb26ed ⇈00000000fffb26ed
stampKind: i32
value: int[-317715|0xfffffffffffb26ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1514 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1517 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1511 
=== Predecessor ===
v1324 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-317715|0xfffffffffffb26ed]] destination: B177 -> B178 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B178"
    from_bci -1
    to_bci -1
    predecessors "B30" "B177" "B36" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1514 <|@
result v257|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-317971 - -317459] ⇊00000000fffb24ed ⇈00000000fffb27ed
valueDescription: i32
=== Inputs ===
merge: v1511 
values: i1513 i1518 i1520 
=== Succesors ===
=== Usages ===
v1516 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1511 values: i1513 i1518 i1520  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1511 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1512 v1517 v1519 
=== Succesors ===
next: v1516 
=== Usages ===
i1514 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1512 v1517 v1519 #next: v1516  <|@  <|@
tid ?90 <|@
d <@d|@=== Debug Properties ===
bci: 174
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 515
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 j3 - i4 i5 i9 i11 i948 - - - - - - - - - - - - - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
v1516 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 j3 - i4 i5 i9 i11 i948 - - - - - - - - - - - - - - - - - - - - - - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1516 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?90 
actionAndReason: i1514 
speculation: a1503 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1511 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?90 actionAndReason: i1514 speculation: a1503  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v257|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v257|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174]
locals: v0|QWORD[.] v1|DWORD v2|QWORD - v3|DWORD v4|DWORD v6|DWORD v8|DWORD v25|DWORD - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:174] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD, r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@5692047b slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + 26], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + 25], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[27]{0, 3, 5, 7, 10, ...}] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = TZCNT v2|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOVE input: int[53|0x35] <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SUB (x: v7|DWORD, ~y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = SUB (x: v8|DWORD, ~y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = DEC v9|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v10|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7309313881269885 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4604758864199680626
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v1|DWORD y: 63 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9998165784832451 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" 
    xhandlers
    flags 
    probability 4604757656617592340
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B2 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B2" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607180766685868390
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v1|DWORD y: -21 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 3.66905155017428E-4 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B26" 
    xhandlers
    flags 
    probability 4607177462504198754
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v11|DWORD y: 27 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5322359783728843 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B25" 
    xhandlers
    flags 
    probability 4602966537134068855
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = ADD (x: v8|DWORD, ~y: [v5|QWORD[.] + v11|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v12|DWORD y: 64 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9985678292003713 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B24" 
    xhandlers
    flags 
    probability 4602959675148926439
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v11|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.37470452312023583 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B28" 
    xhandlers
    flags 
    probability 4599655016814494722
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v11|DWORD] destination: B24 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B7" "B26" "B25" "B24" "B3" 
    successors "B29" "B32" 
    xhandlers
    flags 
    probability 4605389661644661784
    begin_IR
      LIR
      nr   -1  <|@ instruction [v25|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOVE input: long[4503599627370495|0xfffffffffffff] <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = AND (x: v2|QWORD, y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOVE input: long[4607182418800017408|0x3ff0000000000000] <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = OR (x: v27|QWORD, y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|DOUBLE = VMOVQ v29|QWORD nZ: XMM <|@ <|@
      nr   -1  <|@ instruction v32|DOUBLE = VMOVE input: double[1.5|0x3ff8000000000000] <|@ <|@
      nr   -1  <|@ instruction v31|DOUBLE = VSUBSD (x: v30|DOUBLE, y: v32|DOUBLE) nZ: XMM <|@ <|@
      nr   -1  <|@ instruction v34|DOUBLE = VMOVE input: double[0.289529654|0x3fd287a762c9bd93] <|@ <|@
      nr   -1  <|@ instruction v33|DOUBLE = VMULSD (x: v31|DOUBLE, y: v34|DOUBLE) nZ: XMM <|@ <|@
      nr   -1  <|@ instruction v36|DOUBLE = VMOVE input: double[0.176091259|0x3fc68a288b421b8c] <|@ <|@
      nr   -1  <|@ instruction v35|DOUBLE = VADDSD (x: v33|DOUBLE, y: v36|DOUBLE) nZ: XMM <|@ <|@
      nr   -1  <|@ instruction v37|DOUBLE = VCVTSI2SD v1|DWORD <|@ <|@
      nr   -1  <|@ instruction v39|DOUBLE = VMOVE input: double[0.301029995663981|0x3fd34413509f79fb] <|@ <|@
      nr   -1  <|@ instruction v38|DOUBLE = VMULSD (x: v37|DOUBLE, y: v39|DOUBLE) nZ: XMM <|@ <|@
      nr   -1  <|@ instruction v40|DOUBLE = VADDSD (x: v35|DOUBLE, y: v38|DOUBLE) nZ: XMM <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = VMOVQ v40|DOUBLE <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = MOVE input: long[-9223372036854775808|0x8000000000000000] <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOVE input: long[9218868437227405312|0x7ff0000000000000] <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = AND (x: v41|QWORD, y: v43|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = SHR v44|QWORD y: 52 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = MOV v45|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = LEA [v46|DWORD - 1023] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v47|DWORD, y: v47|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8017068096060938 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4603959086903862549
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = MOVE input: long[9223372036854775807|0x7fffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v48|QWORD, y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B38" 
    xhandlers
    flags 
    probability 4603959086903862549
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v42|QWORD, y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = CMOVE (falseValue: int[-1|0xffffffffffffffff], ~trueValue: v50|DWORD) condition: = <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|DWORD] destination: B31 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" "B37" "B34" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4605389661644661784
    begin_IR
      LIR
      nr   -1  <|@ instruction [v61|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = NEG v61|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v62|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7309313881269885 condition: < trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603448481723541948
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], v25|DWORD, int[0|0x0], int[1|0x1]] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4605389661644661784
    begin_IR
      LIR
      nr   -1  <|@ instruction [v68|DWORD, v69|DWORD, v70|DWORD, v71|DWORD] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v61|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7309313881269885 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4603448481723541948
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], v25|DWORD, int[1|0x1], int[3|0x3]] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" "B43" 
    successors "B45" "B48" 
    xhandlers
    flags 
    probability 4605389661644661784
    begin_IR
      LIR
      nr   -1  <|@ instruction [v76|DWORD, v77|DWORD, v78|DWORD, v79|DWORD] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = ADD (x: v69|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v81|DWORD = MOVE input: int[52|0x34] <|@ <|@
      nr   -1  <|@ instruction v82|DWORD = SUB (x: v81|DWORD, ~y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v83|DWORD = SUB (x: v80|DWORD, ~y: v82|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v84|DWORD = SUB (x: v80|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v83|DWORD, y: v77|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.44744570600555483 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B49" "B51" 
    xhandlers
    flags 
    probability 4601644361839485290
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = SUB (x: v77|DWORD, ~y: v83|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = SUB (x: v84|DWORD, ~y: v83|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v8|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.3620750396336093 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B52" 
    xhandlers
    flags 
    probability 4598757630992240901
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v88|DWORD, int[0|0x0], v87|DWORD] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B47" "B50" "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4605389661644661784
    begin_IR
      LIR
      nr   -1  <|@ instruction [v93|DWORD, v94|DWORD, v95|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v93|DWORD, y: v93|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9999471561184408 condition: < trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4605389280405537968
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = SUB (x: v95|DWORD, ~y: v93|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v97|DWORD = SUB (x: v94|DWORD, ~y: v93|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v97|DWORD, v96|DWORD, int[0|0x0]] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B53" 
    successors "B56" "B59" 
    xhandlers
    flags 
    probability 4605389661644661784
    begin_IR
      LIR
      nr   -1  <|@ instruction [v98|DWORD, v99|DWORD, v100|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v101|DWORD = ADD (x: v98|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v6|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v102|QWORD = SHR (x: v2|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v68|DWORD y: 27 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9999471514639044 condition: |<| trueDestination: B55 -> B56 falseDestination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" "B58" 
    xhandlers
    flags 
    probability 4605389280371958085
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v103|DWORD = MOV [v5|QWORD[.] + v68|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v104|DWORD = ADD (x: v101|DWORD, y: v103|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v78|DWORD y: 27 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9999471523948773 condition: < trueDestination: B56 -> B57 falseDestination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B61" 
    xhandlers
    flags 
    probability 4605388899126120185
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v103|DWORD, v104|DWORD] destination: B57 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B57" 
    successors "B62" "B65" 
    xhandlers
    flags 
    probability 4605389280378674534
    begin_IR
      LIR
      nr   -1  <|@ instruction [v106|DWORD, v107|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v78|DWORD y: 27 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B61 -> B62 falseDestination: B61 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" "B64" 
    xhandlers
    flags 
    probability 4605389280378674534
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v107|DWORD y: 64 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9867185711014427 condition: < trueDestination: B62 -> B63 falseDestination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B69" 
    xhandlers
    flags 
    probability 4605293467342645890
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v108|DWORD = MOV [v5|QWORD[.] + v78|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v108|DWORD, v107|DWORD] destination: B63 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" "B63" 
    successors "B70" "B135" 
    xhandlers
    flags 
    probability 4605293843544876038
    begin_IR
      LIR
      nr   -1  <|@ instruction [v110|DWORD, v111|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = INC v99|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v113|DWORD = ADD (x: v112|DWORD, y: v110|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v113|DWORD y: 64 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9680978309381416 condition: < trueDestination: B69 -> B70 falseDestination: B69 -> B135 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" "B101" 
    xhandlers
    flags 
    probability 4605066743998553008
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v114|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v111|DWORD y: 32 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 9.220839096357736E-4 condition: < trueDestination: B70 -> B71 falseDestination: B70 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B102" "B133" 
    xhandlers
    flags 
    probability 4605060389434741780
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v68|DWORD y: 27 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B101 -> B102 falseDestination: B101 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B103" "B132" 
    xhandlers
    flags 
    probability 4605060389434741780
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v76|DWORD y: 27 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B102 -> B103 falseDestination: B102 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B104" "B109" 
    xhandlers
    flags 
    probability 4605060389434741780
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v150|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[long[27]{1, 5, 25, 125, 625, ...}] <|@ <|@
      nr   -1  <|@ instruction v151|QWORD = MOV [v150|QWORD[.] + v68|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v152|QWORD = MOV [v150|QWORD[.] + v76|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v153|QWORD = IMUL (x: v151|QWORD, y: v102|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v98|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v154|QWORD = SHL (x: v153|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v99|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v155|QWORD = SHL (x: v152|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v154|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = CDQ rax|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365]
stack: v112|DWORD v110|DWORD 
locals: v0|QWORD[.] - v102|QWORD - - v4|DWORD - - - v61|DWORD v98|DWORD v68|DWORD v99|DWORD v76|DWORD v100|DWORD v68|DWORD - - - - - - - v111|DWORD - - - - - - - - - 
>@ <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IDIV (highX: rdx|QWORD, lowX: rax|QWORD, y: v155|QWORD) size: QWORD state [bci:365] <|@ <|@
      nr   -1  <|@ instruction v156|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v157|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v158|QWORD = SHL v155|QWORD y: 3 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v159|QWORD = SHL v155|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v160|QWORD = ADD (x: v158|QWORD, y: v159|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v100|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v161|QWORD = SHL (x: v151|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v162|QWORD = SHL v161|QWORD y: 3 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v163|QWORD = SHL v161|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v164|QWORD = ADD (x: v162|QWORD, y: v163|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v165|QWORD = SHL v157|QWORD y: 3 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v166|QWORD = SHL v157|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v167|QWORD = ADD (x: v165|QWORD, y: v166|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v168|QWORD = ADD (x: v164|QWORD, y: v167|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v169|DWORD = MOV v156|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v169|DWORD, y: v169|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.12181344950436568 condition: = trueDestination: B103 -> B104 falseDestination: B103 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B110" "B111" 
    xhandlers
    flags 
    probability 4604221683140082412
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365]
stack: v112|DWORD v110|DWORD 
locals: v0|QWORD[.] - v102|QWORD - - v4|DWORD - - - v61|DWORD v98|DWORD v68|DWORD v99|DWORD v76|DWORD v100|DWORD v68|DWORD - - - - - - - v111|DWORD - - - - - - - - - 
>@ <|@ instruction CMP [v114|DWORD[.] * 8 + 12] y: 0 size: DWORD state [bci:365] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B109 -> B110 falseDestination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B112" "B113" 
    xhandlers
    flags 
    probability 4604221683140082412
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v171|DWORD = LEA [v169|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v114|DWORD[.] * 8 + 16], y: v171|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010669521717460728 condition: = trueDestination: B111 -> B112 falseDestination: B111 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" 
    xhandlers
    flags 
    probability 4604157170265443794
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v61|DWORD, int[1|0x1]] destination: B113 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B108" "B113" 
    successors "B115" "B116" 
    xhandlers
    flags 
    probability 4604986927965077723
    begin_IR
      LIR
      nr   -1  <|@ instruction [v172|DWORD, v173|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v164|QWORD, y: v167|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v174|DWORD = SETCC condition: > <|@ <|@
      nr   -1  <|@ instruction CMP (x: v168|QWORD, y: v160|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v175|DWORD = SETCC condition: > <|@ <|@
      nr   -1  <|@ instruction CMP v172|DWORD y: -3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B114 -> B115 falseDestination: B114 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" "B118" 
    xhandlers
    flags 
    probability 4604986927965077723
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v172|DWORD y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9998134328358209 condition: < trueDestination: B116 -> B117 falseDestination: B116 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B119" 
    xhandlers
    flags 
    probability 4604985657123954626
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v174|DWORD, v175|DWORD, v172|DWORD, v173|DWORD] destination: B117 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B117" "B107" "B118" "B112" 
    successors "B120" "B121" 
    xhandlers
    flags 
    probability 4605060389434741780
    begin_IR
      LIR
      nr   -1  <|@ instruction [v176|DWORD, v177|DWORD, v178|DWORD, v179|DWORD] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v114|DWORD[.], y: v114|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B119 -> B120 falseDestination: B119 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B122" 
    xhandlers
    flags 
    probability 4605060389434741780
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v181|DWORD = MOV [v114|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v182|QWORD[.] = UNCOMPRESSPOINTER (input: v114|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@40447647 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v179|DWORD, v176|DWORD, v177|DWORD, v167|QWORD, v164|QWORD] destination: B121 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" "B126" "B127" 
    successors "B123" "B130" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618403218649290590
    begin_IR
      LIR
      nr   -1  <|@ instruction [v183|DWORD, v184|DWORD, v185|DWORD, v186|QWORD, v187|QWORD] = LABEL numbPhis: 5 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v184|DWORD, y: v184|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9096921872746148 condition: = trueDestination: B122 -> B123 falseDestination: B122 -> B130 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B124" "B129" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617796602989612086
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v185|DWORD, y: v185|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9584277782398936 condition: = trueDestination: B123 -> B124 falseDestination: B123 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B125" "B128" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617542572413107419
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v181|DWORD, y: v183|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B124 -> B125 falseDestination: B124 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B126" "B127" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617542572413107419
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v186|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = CDQ rax|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
locals: v0|QWORD[.] - - - - - - - - v178|DWORD - - - - - - - v183|DWORD int[0|0x0] int[0|0x0] - - - - - v186|QWORD - v155|QWORD - v187|QWORD - v160|QWORD - 
>@ <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IDIV (highX: rdx|QWORD, lowX: rax|QWORD, y: v155|QWORD) size: QWORD state [bci:914] <|@ <|@
      nr   -1  <|@ instruction v188|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v189|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v190|DWORD = MOV v188|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v191|DWORD = LEA [v190|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v182|QWORD[.] + v183|DWORD * 2 + 16], y: v191|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v192|QWORD = SHL v189|QWORD y: 3 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v193|QWORD = SHL v189|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v194|QWORD = ADD (x: v192|QWORD, y: v193|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v195|DWORD = INC v183|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v196|QWORD = SHL v187|QWORD y: 3 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v197|QWORD = SHL v187|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v198|QWORD = ADD (x: v196|QWORD, y: v197|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v198|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 3.796929368977686E-4 condition: < trueDestination: B125 -> B126 falseDestination: B125 -> B127 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B122" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617540348720924481
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v198|QWORD, y: v194|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v199|DWORD = SETCC condition: > <|@ <|@
      nr   -1  <|@ instruction v200|QWORD = ADD (x: v198|QWORD, y: v194|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v200|QWORD, y: v160|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v201|DWORD = SETCC condition: > <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1039]
locals: v0|QWORD[.] - - - - - - - - v178|DWORD - - - - - - - v195|DWORD v199|DWORD v201|DWORD - - v190|DWORD - - v194|QWORD - v155|QWORD - v198|QWORD - v160|QWORD - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:1039] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v195|DWORD, v199|DWORD, v201|DWORD, v194|QWORD, v198|QWORD] destination: B127 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B122" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4566700544116969831
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1039]
locals: v0|QWORD[.] - - - - - - - - v178|DWORD - - - - - - - v195|DWORD int[1|0x1] int[1|0x1] - - v190|DWORD - - v194|QWORD - v155|QWORD - v198|QWORD - v160|QWORD - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:1039] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v195|DWORD, int[1|0x1], int[1|0x1], v194|QWORD, v198|QWORD] destination: B126 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B131" 
    xhandlers
    flags 
    probability 4603028144822704448
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B130 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B130" "B129" 
    successors "B168" 
    xhandlers
    flags 
    probability 4605060389434741781
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v186|QWORD, y: v186|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v202|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + 25], y: v202|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v203|QWORD = SHL v186|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v204|QWORD = SUB (x: v203|QWORD, ~y: v160|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v178|DWORD, v183|DWORD, v184|DWORD, v185|DWORD, v204|QWORD] destination: B131 -> B168 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B168"
    from_bci -1
    to_bci -1
    predecessors "B94" "B131" "B167" 
    successors "B169" "B170" 
    xhandlers
    flags 
    probability 4605389661644661784
    begin_IR
      LIR
      nr   -1  <|@ instruction [v251|DWORD, v252|DWORD, v253|DWORD, v254|DWORD, v255|QWORD] = LABEL numbPhis: 5 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v256|DWORD = INC v251|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v256|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v252|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v254|DWORD, y: v254|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6008525479558225 condition: = trueDestination: B168 -> B169 falseDestination: B168 -> B170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B169"
    from_bci -1
    to_bci -1
    predecessors "B168" 
    successors 
    xhandlers
    flags 
    probability 4602341251752896824
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B28" 
    xhandlers
    flags 
    probability 4602093470658165717
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v11|DWORD] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4600127762195097286
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = SUB (x: v83|DWORD, ~y: v77|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = SUB (x: v84|DWORD, ~y: v77|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v8|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.3620750396336093 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B52" 
    xhandlers
    flags 
    probability 4597405088903129587
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v86|DWORD, v85|DWORD, int[0|0x0]] destination: B47 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B170"
    from_bci -1
    to_bci -1
    predecessors "B168" 
    successors "B171" "B172" 
    xhandlers
    flags 
    probability 4599430872281685752
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v253|DWORD, y: v253|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7168137687555163 condition: = trueDestination: B170 -> B171 falseDestination: B170 -> B172 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B171"
    from_bci -1
    to_bci -1
    predecessors "B170" 
    successors 
    xhandlers
    flags 
    probability 4597424643074725698
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:778) [bci: 1505]
locals: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.roundup()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1505] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" "B27" 
    xhandlers
    flags 
    probability 4598518729118579484
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v1|DWORD y: 63 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9998165784832451 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4598517840054458020
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v10|DWORD] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B131" 
    xhandlers
    flags 
    probability 4597296998738684756
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B129 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4596932739975014766
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = INC v61|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = SHL v72|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = ADD (x: v73|DWORD, y: v72|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = ADD (x: v61|DWORD, y: v25|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v61|DWORD, v75|DWORD, v72|DWORD, v74|DWORD] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4596932739975014766
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = SUB (x: v63|DWORD, ~y: v61|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = SHL v62|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = SUB (x: v65|DWORD, ~y: v61|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v67|DWORD = SUB (x: v25|DWORD, ~y: v61|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v62|DWORD, v67|DWORD, v66|DWORD, v64|DWORD] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B22" 
    xhandlers
    flags 
    probability 4596339048911957912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v1|DWORD y: 52 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B20" 
    xhandlers
    flags 
    probability 4596339048911957912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v1|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0013467536149702752 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B21" 
    xhandlers
    flags 
    probability 4596329391303238956
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" "B20" "B19" "B14" 
    successors 
    xhandlers
    flags 
    probability 4596339048911957912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v20|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOVE input: int[52|0x34] <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = SUB (x: v21|DWORD, ~y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = SHR (x: v2|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE v23|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v20|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:476) [bci: 170]
locals: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD, r8|DWORD] [] callTarget: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(int, long, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:170] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" 
    xhandlers
    flags 
    probability 4594941481985024202
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v88|DWORD, int[0|0x0], v87|DWORD] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B46" "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4598895958736044594
    begin_IR
      LIR
      nr   -1  <|@ instruction [v89|DWORD, v90|DWORD, v91|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = DEC v89|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v92|DWORD, v90|DWORD, v91|DWORD] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B33" "B177" 
    xhandlers
    flags 
    probability 4594890319253732366
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v47|DWORD y: 52 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4594890319253732366
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = AND (x: v41|QWORD, y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = MOVE input: long[4503599627370496|0x10000000000000] <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = OR (x: v51|QWORD, y: v52|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = MOVE input: int[1075|0x433] <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = SUB (x: v54|DWORD, ~y: v46|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v55|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = SHR (x: v53|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = MOV v56|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v42|QWORD, y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.007647163435888316 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4594846559898331785
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v47|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = SHR (x: v26|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v58|QWORD, y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4594846559898331785
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = SUB (x: v59|DWORD, ~y: v57|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v60|DWORD] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B50" 
    xhandlers
    flags 
    probability 4593843236232323993
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v86|DWORD, v85|DWORD, int[0|0x0]] destination: B46 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B105" "B106" 
    xhandlers
    flags 
    probability 4591374071020439873
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v168|QWORD, y: v160|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B104 -> B105 falseDestination: B104 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B107" "B108" 
    xhandlers
    flags 
    probability 4591374071020439873
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v170|DWORD = DEC v61|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010669521717460728 condition: = trueDestination: B106 -> B107 falseDestination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B114" 
    xhandlers
    flags 
    probability 4591302482260236360
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v170|DWORD, int[0|0x0]] destination: B108 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B172"
    from_bci -1
    to_bci -1
    predecessors "B170" 
    successors "B173" "B174" 
    xhandlers
    flags 
    probability 4591188184549903708
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v255|QWORD, y: v255|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B172 -> B173 falseDestination: B172 -> B174 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B174"
    from_bci -1
    to_bci -1
    predecessors "B172" 
    successors "B175" "B176" 
    xhandlers
    flags 
    probability 4591188184549903708
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v255|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.40049867539348605 condition: < trueDestination: B174 -> B175 falseDestination: B174 -> B176 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B176"
    from_bci -1
    to_bci -1
    predecessors "B174" 
    successors 
    xhandlers
    flags 
    probability 4587982831218834509
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:775) [bci: 1498]
locals: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.roundup()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1498] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B175"
    from_bci -1
    to_bci -1
    predecessors "B174" 
    successors 
    xhandlers
    flags 
    probability 4585386338626231915
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B137" 
    xhandlers
    flags 
    probability 4582924406890760886
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B135 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" "B135" "B64" 
    successors "B138" "B141" 
    xhandlers
    flags 
    probability 4585327503373534833
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE v76|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v99|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1074]
locals: v0|QWORD[.] - v102|QWORD - - v4|DWORD - - - v61|DWORD v98|DWORD v68|DWORD v99|DWORD v76|DWORD v100|DWORD v68|DWORD - - - - - - - - - - - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|DWORD, rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.valueOfPow52(int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1074] <|@ <|@
      nr   -1  <|@ instruction v206|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1077]
stack: Object[null] 
locals: v0|QWORD[.] - v102|QWORD - - v4|DWORD - - - v61|DWORD v98|DWORD v68|DWORD v99|DWORD v76|DWORD v100|DWORD v68|DWORD - - - - - - - - - - - - - - - - - 
>@ <|@ instruction NULLCHECK [v206|QWORD[.]] state [bci:1077] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v206|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:711) [bci: 1081]
locals: v0|QWORD[.] - v102|QWORD - - v4|DWORD - - - v61|DWORD v98|DWORD v68|DWORD v99|DWORD v76|DWORD v100|DWORD v68|DWORD - - - - - - - - - v206|QWORD[.] - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.getNormalizationBias()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1081] <|@ <|@
      nr   -1  <|@ instruction v207|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v206|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v207|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:712) [bci: 1090]
locals: v0|QWORD[.] - v102|QWORD - - v4|DWORD - - - v61|DWORD v98|DWORD v68|DWORD v99|DWORD v76|DWORD v100|DWORD v68|DWORD - - - - - - - - - - v207|DWORD - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.leftShift(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1090] <|@ <|@
      nr   -1  <|@ instruction v208|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v209|DWORD = ADD (x: v207|DWORD, y: v98|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v102|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v68|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v209|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:714) [bci: 1103]
locals: v0|QWORD[.] - - - - v4|DWORD - - - v61|DWORD - - v99|DWORD v76|DWORD v100|DWORD v68|DWORD - - - - - - - - - v208|QWORD[.] v207|DWORD - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD, rdx|DWORD, rcx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.valueOfMulPow52(long, int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1103] <|@ <|@
      nr   -1  <|@ instruction v210|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:714) [bci: 1106]
stack: Object[null] 
locals: v0|QWORD[.] - - - - v4|DWORD - - - v61|DWORD - - v99|DWORD v76|DWORD v100|DWORD v68|DWORD - - - - - - - - - v208|QWORD[.] v207|DWORD - - - - - - 
>@ <|@ instruction NULLCHECK [v210|QWORD[.]] state [bci:1106] <|@ <|@
      nr   -1  <|@ instruction v211|DWORD = ADD (x: v207|DWORD, y: v100|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v212|DWORD = INC v211|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE v71|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v212|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:715) [bci: 1119]
locals: v0|QWORD[.] - - - - v4|DWORD - - - v61|DWORD - - v99|DWORD v76|DWORD - - - - - - - - - - - v208|QWORD[.] v207|DWORD v210|QWORD[.] - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|DWORD, rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.valueOfPow52(int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1119] <|@ <|@
      nr   -1  <|@ instruction v213|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v214|DWORD = ADD (x: v99|DWORD, y: v207|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v215|DWORD = INC v214|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE v78|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v215|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:717) [bci: 1135]
locals: v0|QWORD[.] - - - - v4|DWORD - - - v61|DWORD - - - - - - - - - - - - - - - v208|QWORD[.] - v210|QWORD[.] v213|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|DWORD, rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.valueOfPow52(int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1135] <|@ <|@
      nr   -1  <|@ instruction v216|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:717) [bci: 1138]
stack: Object[null] 
locals: v0|QWORD[.] - - - - v4|DWORD - - - v61|DWORD - - - - - - - - - - - - - - - v208|QWORD[.] - v210|QWORD[.] v213|QWORD[.] - - - - 
>@ <|@ instruction NULLCHECK [v216|QWORD[.]] state [bci:1138] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v210|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v208|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:724) [bci: 1147]
locals: v0|QWORD[.] - - - - v4|DWORD - - - v61|DWORD - - - - - - - int[0|0x0] - - - - - - - v208|QWORD[.] - v210|QWORD[.] v213|QWORD[.] v216|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.quoRemIteration(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1147] <|@ <|@
      nr   -1  <|@ instruction v217|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v210|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v213|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:725) [bci: 1156]
locals: v0|QWORD[.] - - - - v4|DWORD - - - v61|DWORD - - - - - - - int[0|0x0] - - - - v217|DWORD - - v208|QWORD[.] - v210|QWORD[.] v213|QWORD[.] v216|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1156] <|@ <|@
      nr   -1  <|@ instruction v218|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v218|DWORD, y: v218|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v219|DWORD = SETCC condition: < <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v216|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v210|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v213|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:726) [bci: 1175]
locals: v0|QWORD[.] - - - - v4|DWORD - - - v61|DWORD - - - - - - - int[0|0x0] v219|DWORD - - - v217|DWORD - - v208|QWORD[.] - v210|QWORD[.] v213|QWORD[.] v216|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1175] <|@ <|@
      nr   -1  <|@ instruction v220|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v217|DWORD, y: v217|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.10979929161747348 condition: = trueDestination: B137 -> B138 falseDestination: B137 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B137" 
    successors "B142" 
    xhandlers
    flags 
    probability 4584760205312838425
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B141 -> B142 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" "B139" 
    successors "B143" "B144" 
    xhandlers
    flags 
    probability 4584920838097049953
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v222|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v220|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v223|DWORD = SETCC condition: < <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1227]
locals: v0|QWORD[.] - - - - v4|DWORD - - - v61|DWORD - - - - - - - int[0|0x0] v219|DWORD v223|DWORD - - v217|DWORD - - v208|QWORD[.] - v210|QWORD[.] v213|QWORD[.] v216|QWORD[.] - - - 
>@ <|@ instruction CMP [v222|DWORD[.] * 8 + 12] y: 0 size: DWORD state [bci:1227] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B142 -> B143 falseDestination: B142 -> B144 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B145" 
    xhandlers
    flags 
    probability 4584920838097049953
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v224|DWORD = LEA [v217|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v222|DWORD[.] * 8 + 16], y: v224|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v61|DWORD, int[1|0x1]] destination: B144 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B140" "B144" 
    successors "B146" "B147" 
    xhandlers
    flags 
    probability 4585327503373534833
    begin_IR
      LIR
      nr   -1  <|@ instruction [v225|DWORD, v226|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0448642266824085 condition: = trueDestination: B145 -> B146 falseDestination: B145 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B145" 
    successors "B148" "B149" 
    xhandlers
    flags 
    probability 4585095704165938451
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v225|DWORD y: -3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.2735887927482489 condition: < trueDestination: B147 -> B148 falseDestination: B147 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B147" 
    successors "B150" "B151" 
    xhandlers
    flags 
    probability 4582826730232852371
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v225|DWORD y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.998298355076574 condition: < trueDestination: B149 -> B150 falseDestination: B149 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B149" 
    successors "B152" 
    xhandlers
    flags 
    probability 4582814530274557825
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v220|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v227|DWORD = SETCC condition: < <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v219|DWORD, v227|DWORD] destination: B150 -> B152 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B150" "B146" "B151" "B148" 
    successors "B153" 
    xhandlers
    flags 
    probability 4585327503373534833
    begin_IR
      LIR
      nr   -1  <|@ instruction [v228|DWORD, v229|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v226|DWORD, v228|DWORD, v229|DWORD, v213|QWORD[.]] destination: B152 -> B153 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B153" 
    successors "B155" "B158" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4603175615809548529
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v232|DWORD, y: v232|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9936234534969387 condition: = trueDestination: B154 -> B155 falseDestination: B154 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B154" 
    successors "B156" "B157" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4603143730550235664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1268]
locals: v0|QWORD[.] - - - - - - - - v225|DWORD - - - - - - - v230|DWORD int[0|0x0] int[0|0x0] - - - - - v208|QWORD[.] - v210|QWORD[.] Object[null] v216|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK [v233|QWORD[.]] state [bci:1268] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v210|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v208|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:745) [bci: 1282]
locals: v0|QWORD[.] - - - - - - - - v225|DWORD - - - - - - - v230|DWORD - - - - - - - v208|QWORD[.] - v210|QWORD[.] v233|QWORD[.] v216|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.quoRemIteration(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1282] <|@ <|@
      nr   -1  <|@ instruction v234|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v233|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:747) [bci: 1312]
locals: v0|QWORD[.] - - - - - - - - v225|DWORD - - - - - - - v230|DWORD - - - - v234|DWORD - - v208|QWORD[.] - v210|QWORD[.] - v216|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.multBy10()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1312] <|@ <|@
      nr   -1  <|@ instruction v235|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v210|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v235|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
locals: v0|QWORD[.] - - - - - - - - v225|DWORD - - - - - - - v230|DWORD - - - - v234|DWORD - - v208|QWORD[.] - v210|QWORD[.] v235|QWORD[.] v216|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1321] <|@ <|@
      nr   -1  <|@ instruction v236|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v236|DWORD, y: v236|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v237|DWORD = SETCC condition: < <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v216|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v210|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v235|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1340]
locals: v0|QWORD[.] - - - - - - - - v225|DWORD - - - - - - - v230|DWORD v237|DWORD - - - v234|DWORD - - v208|QWORD[.] - v210|QWORD[.] v235|QWORD[.] v216|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1340] <|@ <|@
      nr   -1  <|@ instruction v238|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v239|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1343]
stack: v238|DWORD 
locals: v0|QWORD[.] - - - - - - - - v225|DWORD - - - - - - - v230|DWORD v237|DWORD - - - v234|DWORD - - v208|QWORD[.] - v210|QWORD[.] v235|QWORD[.] v216|QWORD[.] - - - 
>@ <|@ instruction CMP (x: v230|DWORD, y: [v239|DWORD[.] * 8 + 12]) size: DWORD state [bci:1343] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B155 -> B156 falseDestination: B155 -> B157 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B156"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors "B153" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4603143730550235664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v240|QWORD[.] = UNCOMPRESSPOINTER (input: v239|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@40447647 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v241|DWORD = LEA [v234|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v240|QWORD[.] + v230|DWORD * 2 + 16], y: v241|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction CMP v238|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v242|DWORD = SETCC condition: < <|@ <|@
      nr   -1  <|@ instruction v243|DWORD = INC v230|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v243|DWORD, v237|DWORD, v242|DWORD, v235|QWORD[.]] destination: B156 -> B153 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B152" "B156" 
    successors "B154" "B159" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4603466648196344439
    begin_IR
      LIR
      nr   -1  <|@ instruction [v230|DWORD, v231|DWORD, v232|DWORD, v233|QWORD[.]] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v231|DWORD, y: v231|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9449992797810535 condition: = trueDestination: B153 -> B154 falseDestination: B153 -> B159 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B159"
    from_bci -1
    to_bci -1
    predecessors "B153" 
    successors "B160" 
    xhandlers
    flags 
    probability 4584817339224528992
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B159 -> B160 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B160"
    from_bci -1
    to_bci -1
    predecessors "B159" "B158" 
    successors "B161" "B162" 
    xhandlers
    flags 
    probability 4585327503373534834
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v232|DWORD, y: v232|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.045633359559402044 condition: = trueDestination: B160 -> B161 falseDestination: B160 -> B162 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B162"
    from_bci -1
    to_bci -1
    predecessors "B160" 
    successors "B163" "B164" 
    xhandlers
    flags 
    probability 4585091730300687514
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v231|DWORD, y: v231|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.10346248969497114 condition: = trueDestination: B162 -> B163 falseDestination: B162 -> B164 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B164"
    from_bci -1
    to_bci -1
    predecessors "B162" 
    successors "B165" 
    xhandlers
    flags 
    probability 4584498711640198423
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v210|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:753) [bci: 1385]
locals: v0|QWORD[.] - - - - - - - - v225|DWORD - - - - - - - v230|DWORD v231|DWORD v232|DWORD - - - - - - - - - v216|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.leftShift(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1385] <|@ <|@
      nr   -1  <|@ instruction v244|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:753) [bci: 1388]
stack: Object[null] 
locals: v0|QWORD[.] - - - - - - - - v225|DWORD - - - - - - - v230|DWORD v231|DWORD v232|DWORD - - - - - - - - - v216|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK [v244|QWORD[.]] state [bci:1388] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v244|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v216|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:754) [bci: 1394]
locals: v0|QWORD[.] - - - - - - - - v225|DWORD - - - - - - - v230|DWORD v231|DWORD v232|DWORD - - - - - - - v244|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1394] <|@ <|@
      nr   -1  <|@ instruction v245|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v246|QWORD = MOVSXD v245|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v246|QWORD, v244|QWORD[.]] destination: B164 -> B165 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B165"
    from_bci -1
    to_bci -1
    predecessors "B164" "B161" "B163" 
    successors "B166" "B167" 
    xhandlers
    flags 
    probability 4585327503373534833
    begin_IR
      LIR
      nr   -1  <|@ instruction [v247|QWORD, v248|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v249|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[FDBigInteger@241972498] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v248|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v249|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1412]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - - - - - - - - v225|DWORD - - - - - - - v230|DWORD v231|DWORD v232|DWORD v247|QWORD - - - - - - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1412] <|@ <|@
      nr   -1  <|@ instruction v250|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v250|DWORD, y: v250|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B165 -> B166 falseDestination: B165 -> B167 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B167"
    from_bci -1
    to_bci -1
    predecessors "B165" 
    successors "B168" 
    xhandlers
    flags 
    probability 4585327503373534833
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + 25], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v225|DWORD, v230|DWORD, v231|DWORD, v232|DWORD, v247|QWORD] destination: B167 -> B168 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B137" 
    xhandlers
    flags 
    probability 4577285656086886675
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B64 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B147" 
    successors "B152" 
    xhandlers
    flags 
    probability 4576554136652772647
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], int[0|0x0]] destination: B148 -> B152 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B119" 
    xhandlers
    flags 
    probability 4574907670107426078
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], int[0|0x0], v61|DWORD, int[1|0x1]] destination: B112 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B137" 
    successors "B139" "B140" 
    xhandlers
    flags 
    probability 4571188406639254207
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v220|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.2831541218637993 condition: < trueDestination: B138 -> B139 falseDestination: B138 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B138" 
    successors "B145" 
    xhandlers
    flags 
    probability 4568653066950070531
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v221|DWORD = DEC v61|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v221|DWORD, int[0|0x0]] destination: B140 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B158"
    from_bci -1
    to_bci -1
    predecessors "B154" 
    successors "B160" 
    xhandlers
    flags 
    probability 4570309048910405919
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B158 -> B160 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B163"
    from_bci -1
    to_bci -1
    predecessors "B162" 
    successors "B165" 
    xhandlers
    flags 
    probability 4570309048910405860
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0], v210|QWORD[.]] destination: B163 -> B165 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B161"
    from_bci -1
    to_bci -1
    predecessors "B160" 
    successors "B165" 
    xhandlers
    flags 
    probability 4565187561230056182
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0], v210|QWORD[.]] destination: B161 -> B165 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B145" 
    successors "B152" 
    xhandlers
    flags 
    probability 4565060397542026164
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], int[0|0x0]] destination: B146 -> B152 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B38" 
    xhandlers
    flags 
    probability 4563244020390216355
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v57|DWORD] destination: B34 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B138" 
    successors "B142" 
    xhandlers
    flags 
    probability 4562783071993710838
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B139 -> B142 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B119" 
    xhandlers
    flags 
    probability 4562224503551966794
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], int[0|0x0], v170|DWORD, int[0|0x0]] destination: B107 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B28" 
    xhandlers
    flags 
    probability 4560165896057405122
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v11|DWORD] destination: B25 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B72" "B100" 
    xhandlers
    flags 
    probability 4559646296614268741
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v113|DWORD y: 32 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B71 -> B72 falseDestination: B71 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B73" "B99" 
    xhandlers
    flags 
    probability 4559646296614268741
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v68|DWORD y: 14 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B72 -> B73 falseDestination: B72 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B74" "B98" 
    xhandlers
    flags 
    probability 4559646296614268741
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v76|DWORD y: 14 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B73 -> B74 falseDestination: B73 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4559646296614268741
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365]
stack: v112|DWORD v110|DWORD 
locals: v0|QWORD[.] - v102|QWORD - - v4|DWORD - - - v61|DWORD v98|DWORD v68|DWORD v99|DWORD v76|DWORD v100|DWORD v68|DWORD - - - - - - - v111|DWORD - - - - - - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v114|DWORD[.] * 8] state [bci:365] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4559646296614268741
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v61|DWORD y: -3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B97" 
    xhandlers
    flags 
    probability 4559646296614268741
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v61|DWORD y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B78 -> B79 falseDestination: B78 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B80" "B81" 
    xhandlers
    flags 
    probability 4559646296614268741
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v115|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[14]{1, 5, 25, 125, 625, ...}] <|@ <|@
      nr   -1  <|@ instruction v116|DWORD = MOV [v115|QWORD[.] + v68|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v100|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v117|DWORD = SHL (x: v116|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v118|DWORD = SHL v117|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v119|DWORD = SHL v117|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v120|DWORD = ADD (x: v118|DWORD, y: v119|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v121|DWORD = SHL v120|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v122|DWORD = SHL v120|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = ADD (x: v121|DWORD, y: v122|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v123|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B79 -> B80 falseDestination: B79 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" "B83" 
    xhandlers
    flags 
    probability 4559646296614268741
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v114|DWORD[.] * 8 + 12] y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B81 -> B82 falseDestination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    probability 4559646296614268741
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v124|DWORD = MOV [v115|QWORD[.] + v76|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v125|DWORD = MOV v102|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v126|DWORD = IMUL (x: v125|DWORD, y: v116|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v98|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v127|DWORD = SHL (x: v126|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v99|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v128|DWORD = SHL (x: v124|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v127|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ rax|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365]
stack: v112|DWORD v110|DWORD 
locals: v0|QWORD[.] - v102|QWORD - - v4|DWORD - - - v61|DWORD v98|DWORD v68|DWORD v99|DWORD v76|DWORD v100|DWORD v68|DWORD - - - - - - - v111|DWORD - - - - - - - - - 
>@ <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: v128|DWORD) size: DWORD state [bci:365] <|@ <|@
      nr   -1  <|@ instruction v129|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v130|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v129|DWORD, y: v129|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" "B87" 
    xhandlers
    flags 
    probability 4559646296614268741
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v131|DWORD = SHL v130|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v132|DWORD = SHL v130|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v133|DWORD = ADD (x: v131|DWORD, y: v132|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v120|DWORD, y: v133|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    probability 4559646296614268741
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v134|DWORD = SHL v128|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v135|DWORD = SHL v128|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v136|DWORD = ADD (x: v134|DWORD, y: v135|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v137|DWORD = ADD (x: v133|DWORD, y: v120|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v137|DWORD, y: v136|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B87 -> B88 falseDestination: B87 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" "B95" 
    xhandlers
    flags 
    probability 4559646296614268741
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = LEA [v129|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v114|DWORD[.] * 8 + 16], y: v138|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v133|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ rax|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 552]
locals: v0|QWORD[.] - - - - v4|DWORD - - - v61|DWORD - - - - - - - int[1|0x1] int[0|0x0] int[0|0x0] - - - - - v133|DWORD v128|DWORD v120|DWORD v136|DWORD - - - - 
>@ <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: v128|DWORD) size: DWORD state [bci:552] <|@ <|@
      nr   -1  <|@ instruction v139|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v140|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v141|DWORD = SHL v140|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v142|DWORD = SHL v140|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v143|DWORD = ADD (x: v141|DWORD, y: v142|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v123|DWORD, y: v143|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B89 -> B90 falseDestination: B89 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B91" "B92" 
    xhandlers
    flags 
    probability 4559646296614268741
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v144|DWORD = ADD (x: v123|DWORD, y: v143|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v144|DWORD, y: v136|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B90 -> B91 falseDestination: B90 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B93" "B94" 
    xhandlers
    flags 
    probability 4559646296614268741
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v143|DWORD, y: v143|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B92 -> B93 falseDestination: B92 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B168" 
    xhandlers
    flags 
    probability 4559646296614268741
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v145|DWORD = LEA [v139|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v114|DWORD[.] * 8 + 18], y: v145|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v146|DWORD = SHL v143|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v147|DWORD = SUB (x: v146|DWORD, ~y: v136|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v148|QWORD = MOVSXD v147|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v61|DWORD, int[2|0x2], int[1|0x1], int[0|0x0], v148|QWORD] destination: B94 -> B168 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B28" 
    xhandlers
    flags 
    probability 4555402587703614778
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v11|DWORD] destination: B7 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4553580319308306455
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = SUB (x: v1|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = DEC v13|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v14|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B19" 
    xhandlers
    flags 
    probability 4549076719680935959
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:sun.misc.FloatingDecimal$BinaryToASCIIBuffer] <|@ <|@
      nr   -1  <|@ instruction v16|DWORD[.] = MOV [v15|QWORD[.] + 104] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Math.max(Math.java:1252) [bci: 10]
stack: int[0|0x0] 
locals: - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 74]
locals: v0|QWORD[.] v1|DWORD v2|QWORD - v3|DWORD v4|DWORD v6|DWORD v8|DWORD - - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction v17|DWORD = MOV [v16|DWORD[.] * 8 + 12] size: DWORD state [bci:10, 74] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v17|DWORD, y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B21" 
    xhandlers
    flags 
    probability 4544573120053565463
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B119" 
    xhandlers
    flags 
    probability 4549337389257036309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], int[0|0x0], v172|DWORD, v173|DWORD] destination: B118 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B28" 
    xhandlers
    flags 
    probability 4549078280250449777
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B3 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 4549076719680935959
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B14 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4544573120053565463
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v17|DWORD, y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B21" 
    xhandlers
    flags 
    probability 4544573120053565463
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@40447647 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = MOV [v18|QWORD[.] + v14|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v19|DWORD] destination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B28" 
    xhandlers
    flags 
    probability 4542408038045123131
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v10|DWORD] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" "B66" 
    xhandlers
    flags 
    probability 4541371596739487840
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = ADD (x: v70|DWORD, y: v101|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v78|DWORD y: 27 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9999471523948773 condition: < trueDestination: B59 -> B60 falseDestination: B59 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" 
    xhandlers
    flags 
    probability 4541371266612549087
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v70|DWORD, v105|DWORD] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B149" 
    successors "B152" 
    xhandlers
    flags 
    probability 4541371203408897121
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], int[0|0x0]] destination: B151 -> B152 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B67" 
    xhandlers
    flags 
    probability 4541371156570236319
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v104|DWORD] destination: B58 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B58" 
    successors "B68" "B136" 
    xhandlers
    flags 
    probability 4541371486697175072
    begin_IR
      LIR
      nr   -1  <|@ instruction [v109|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v109|DWORD y: 64 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9867185711014427 condition: < trueDestination: B67 -> B68 falseDestination: B67 -> B136 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B69" 
    xhandlers
    flags 
    probability 4541288522100830908
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v79|DWORD, v109|DWORD] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4541371046566689324
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v94|DWORD, v95|DWORD, v93|DWORD] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B137" 
    xhandlers
    flags 
    probability 4513412961163892986
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B136 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B67" 
    xhandlers
    flags 
    probability 4477483229743432929
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v105|DWORD] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-278803|0xfffffffffffbbeed]] destination: B97 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B105" "B100" "B99" "B98" "B75" "B133" "B132" "B77" "B110" "B80" "B97" "B82" "B84" "B86" "B88" 
    successors 
    xhandlers
    flags 
    probability 2372834053670830080
    begin_IR
      LIR
      nr   -1  <|@ instruction [v205|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v205|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365]
stack: v112|DWORD v110|DWORD 
locals: v0|QWORD[.] - v102|QWORD - - v4|DWORD - - - v61|DWORD v98|DWORD v68|DWORD v99|DWORD v76|DWORD v100|DWORD v68|DWORD - - - - - - - v111|DWORD - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:365] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-282387|0xfffffffffffbb0ed]] destination: B93 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B91" "B95" "B93" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v149|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v149|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 552]
locals: v0|QWORD[.] - - - - v4|DWORD - - - v61|DWORD - - - - - - - int[1|0x1] int[0|0x0] int[0|0x0] - - - - - v133|DWORD v128|DWORD v120|DWORD v136|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:552] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-279571|0xfffffffffffbbbed]] destination: B91 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-273427|0xfffffffffffbd3ed]] destination: B84 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-278547|0xfffffffffffbbfed]] destination: B77 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-279059|0xfffffffffffbbded]] destination: B80 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-278291|0xfffffffffffbc0ed]] destination: B75 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-270875|0xfffffffffffbdde5]] destination: B98 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-268827|0xfffffffffffbe5e5]] destination: B99 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-268051|0xfffffffffffbe8ed]] destination: B100 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -266267 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:591) [bci: 330]
stack: v101|DWORD v106|DWORD 
locals: v0|QWORD[.] - v102|QWORD - - v4|DWORD - - - v61|DWORD v98|DWORD v68|DWORD v99|DWORD v76|DWORD v100|DWORD v68|DWORD - - - - - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:330] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v180|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@464852764] <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -330763 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v180|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
locals: v0|QWORD[.] - - - - - - - - v178|DWORD - - - - - - - v179|DWORD v176|DWORD v177|DWORD - - - - - v167|QWORD - v155|QWORD - v164|QWORD - v160|QWORD - 
>@ <|@ instruction DEOPT info [bci:914] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-320027|0xfffffffffffb1de5]] destination: B82 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B173"
    from_bci -1
    to_bci -1
    predecessors "B172" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -316947 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:766) [bci: 1445]
locals: v0|QWORD[.] - - - - - - - - v251|DWORD - - - - - - - v252|DWORD v253|DWORD v254|DWORD long[0|0x0] - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:1445] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-258579|0xfffffffffffc0ded]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B18" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v24|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Math.max(Math.java:1252) [bci: 10]
stack: int[0|0x0] 
locals: - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 74]
locals: v0|QWORD[.] v1|DWORD v2|QWORD - v3|DWORD v4|DWORD v6|DWORD v8|DWORD - - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:10, 74] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-282651|0xfffffffffffbafe5]] destination: B133 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B178" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-317459|0xfffffffffffb27ed]] destination: B30 -> B178 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B178"
    from_bci -1
    to_bci -1
    predecessors "B30" "B177" "B36" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v257|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v257|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174]
locals: v0|QWORD[.] v1|DWORD v2|QWORD - v3|DWORD v4|DWORD v6|DWORD v8|DWORD v25|DWORD - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:174] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B157"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -306715 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1343]
stack: v238|DWORD 
locals: v0|QWORD[.] - - - - - - - - v225|DWORD - - - - - - - v230|DWORD v237|DWORD - - - v234|DWORD - - v208|QWORD[.] - v210|QWORD[.] v235|QWORD[.] v216|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:1343] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B166"
    from_bci -1
    to_bci -1
    predecessors "B165" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -331283 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1415]
stack: v0|QWORD[.] int[0|0x0] 
locals: v0|QWORD[.] - - - - - - - - v225|DWORD - - - - - - - v230|DWORD v231|DWORD v232|DWORD v247|QWORD - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:1415] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -322587 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1227]
locals: v0|QWORD[.] - - - - v4|DWORD - - - v61|DWORD - - - - - - - int[0|0x0] v219|DWORD v223|DWORD - - v217|DWORD - - v208|QWORD[.] - v210|QWORD[.] v213|QWORD[.] v216|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:1227] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -333083 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
locals: v0|QWORD[.] - - - - - - - - v178|DWORD - - - - - - - v183|DWORD int[0|0x0] int[0|0x0] - - - - - v186|QWORD - v155|QWORD - v187|QWORD - v160|QWORD - 
>@ <|@ instruction DEOPT info [bci:914] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B177"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B178" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-317715|0xfffffffffffb26ed]] destination: B177 -> B178 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -298003 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 889]
locals: v0|QWORD[.] - - - - v4|DWORD - - - v172|DWORD - - - - - - - v173|DWORD v174|DWORD v175|DWORD - - - - - v167|QWORD - v155|QWORD - v164|QWORD - v160|QWORD - 
>@ <|@ instruction DEOPT info [bci:889] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-279315|0xfffffffffffbbced]] destination: B95 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-284699|0xfffffffffffba7e5]] destination: B132 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-272915|0xfffffffffffbd5ed]] destination: B86 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-294419|0xfffffffffffb81ed]] destination: B105 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B178" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-317971|0xfffffffffffb25ed]] destination: B36 -> B178 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-273171|0xfffffffffffbd4ed]] destination: B88 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-322075|0xfffffffffffb15e5]] destination: B110 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-262427|0xfffffffffffbfee5]] destination: B18 -> B23 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #15         // $assertionsDisabled:boolean
     3: ifne          20
     6: lload_2       
     7: lconst_0      
     8: lcmp          
     9: ifgt          20
    12: new           #21         // java.lang.AssertionError
    15: dup           
    16: invokespecial #16         // java.lang.AssertionError.<init>:()void
    19: athrow        
    20: getstatic     #15         // $assertionsDisabled:boolean
    23: ifne          44
    26: lload_2       
    27: ldc2_w        #31         // 4503599627370496
    30: land          
    31: lconst_0      
    32: lcmp          
    33: ifne          44
    36: new           #21         // java.lang.AssertionError
    39: dup           
    40: invokespecial #16         // java.lang.AssertionError.<init>:()void
    43: athrow        
    44: lload_2       
    45: invokestatic  #20         // java.lang.Long.numberOfTrailingZeros:(long)int
    48: istore        6
    50: bipush        53
    52: iload         6
    54: isub          
    55: istore        7
    57: aload_0       
    58: iconst_0      
    59: putfield      #5          // decimalDigitsRoundedUp:boolean
    62: aload_0       
    63: iconst_0      
    64: putfield      #4          // exactDecimalConversion:boolean
    67: iconst_0      
    68: iload         7
    70: iload_1       
    71: isub          
    72: iconst_1      
    73: isub          
    74: invokestatic  #21         // java.lang.Math.max:(int, int)int
    77: istore        8
    79: iload_1       
    80: bipush        62
    82: if_icmpgt     174
    85: iload_1       
    86: bipush        -21
    88: if_icmplt     174
    91: iload         8
    93: getstatic     #18         // sun.misc.FDBigInteger.LONG_5_POW:long[]
    96: arraylength   
    97: if_icmpge     174
   100: iload         7
   102: getstatic     #22         // N_5_BITS:int[]
   105: iload         8
   107: iaload        
   108: iadd          
   109: bipush        64
   111: if_icmpge     174
   114: iload         8
   116: ifne          174
   119: iload_1       
   120: iload         4
   122: if_icmple     139
   125: iload_1       
   126: iload         4
   128: isub          
   129: iconst_1      
   130: isub          
   131: invokestatic  #23         // insignificantDigitsForPow2:(int)int
   134: istore        9
   136: goto          142
   139: iconst_0      
   140: istore        9
   142: iload_1       
   143: bipush        52
   145: if_icmplt     158
   148: lload_2       
   149: iload_1       
   150: bipush        52
   152: isub          
   153: lshl          
   154: lstore_2      
   155: goto          165
   158: lload_2       
   159: bipush        52
   161: iload_1       
   162: isub          
   163: lushr         
   164: lstore_2      
   165: aload_0       
   166: iconst_0      
   167: lload_2       
   168: iload         9
   170: invokespecial #24         // developLongDigits:(int, long, int)void
   173: return        
   174: lload_2       
   175: iload_1       
   176: invokestatic  #25         // estimateDecExp:(long, int)int
   179: istore        9
   181: iconst_0      
   182: iload         9
   184: ineg          
   185: invokestatic  #21         // java.lang.Math.max:(int, int)int
   188: istore        11
   190: iload         11
   192: iload         8
   194: iadd          
   195: iload_1       
   196: iadd          
   197: istore        10
   199: iconst_0      
   200: iload         9
   202: invokestatic  #21         // java.lang.Math.max:(int, int)int
   205: istore        13
   207: iload         13
   209: iload         8
   211: iadd          
   212: istore        12
   214: iload         11
   216: istore        15
   218: iload         10
   220: iload         4
   222: isub          
   223: istore        14
   225: lload_2       
   226: iload         6
   228: lushr         
   229: lstore_2      
   230: iload         10
   232: iload         7
   234: iconst_1      
   235: isub          
   236: isub          
   237: istore        10
   239: iload         10
   241: iload         12
   243: invokestatic  #26         // java.lang.Math.min:(int, int)int
   246: istore        16
   248: iload         10
   250: iload         16
   252: isub          
   253: istore        10
   255: iload         12
   257: iload         16
   259: isub          
   260: istore        12
   262: iload         14
   264: iload         16
   266: isub          
   267: istore        14
   269: iload         7
   271: iconst_1      
   272: if_icmpne     278
   275: iinc          
   278: iload         14
   280: ifge          300
   283: iload         10
   285: iload         14
   287: isub          
   288: istore        10
   290: iload         12
   292: iload         14
   294: isub          
   295: istore        12
   297: iconst_0      
   298: istore        14
   300: iconst_0      
   301: istore        17
   303: iload         7
   305: iload         10
   307: iadd          
   308: iload         11
   310: getstatic     #22         // N_5_BITS:int[]
   313: arraylength   
   314: if_icmpge     326
   317: getstatic     #22         // N_5_BITS:int[]
   320: iload         11
   322: iaload        
   323: goto          330
   326: iload         11
   328: iconst_3      
   329: imul          
   330: iadd          
   331: istore        23
   333: iload         12
   335: iconst_1      
   336: iadd          
   337: iload         13
   339: iconst_1      
   340: iadd          
   341: getstatic     #22         // N_5_BITS:int[]
   344: arraylength   
   345: if_icmpge     359
   348: getstatic     #22         // N_5_BITS:int[]
   351: iload         13
   353: iconst_1      
   354: iadd          
   355: iaload        
   356: goto          365
   359: iload         13
   361: iconst_1      
   362: iadd          
   363: iconst_3      
   364: imul          
   365: iadd          
   366: istore        24
   368: iload         23
   370: bipush        64
   372: if_icmpge     1070
   375: iload         24
   377: bipush        64
   379: if_icmpge     1070
   382: iload         23
   384: bipush        32
   386: if_icmpge     728
   389: iload         24
   391: bipush        32
   393: if_icmpge     728
   396: lload_2       
   397: l2i           
   398: getstatic     #27         // sun.misc.FDBigInteger.SMALL_5_POW:int[]
   401: iload         11
   403: iaload        
   404: imul          
   405: iload         10
   407: ishl          
   408: istore        25
   410: getstatic     #27         // sun.misc.FDBigInteger.SMALL_5_POW:int[]
   413: iload         13
   415: iaload        
   416: iload         12
   418: ishl          
   419: istore        26
   421: getstatic     #27         // sun.misc.FDBigInteger.SMALL_5_POW:int[]
   424: iload         15
   426: iaload        
   427: iload         14
   429: ishl          
   430: istore        27
   432: iload         26
   434: bipush        10
   436: imul          
   437: istore        28
   439: iconst_0      
   440: istore        17
   442: iload         25
   444: iload         26
   446: idiv          
   447: istore        22
   449: bipush        10
   451: iload         25
   453: iload         26
   455: irem          
   456: imul          
   457: istore        25
   459: iload         27
   461: bipush        10
   463: imul          
   464: istore        27
   466: iload         25
   468: iload         27
   470: if_icmpge     477
   473: iconst_1      
   474: goto          478
   477: iconst_0      
   478: istore        18
   480: iload         25
   482: iload         27
   484: iadd          
   485: iload         28
   487: if_icmple     494
   490: iconst_1      
   491: goto          495
   494: iconst_0      
   495: istore        19
   497: getstatic     #15         // $assertionsDisabled:boolean
   500: ifne          520
   503: iload         22
   505: bipush        10
   507: if_icmplt     520
   510: new           #21         // java.lang.AssertionError
   513: dup           
   514: iload         22
   516: invokespecial #28         // java.lang.AssertionError.<init>:(int)void
   519: athrow        
   520: iload         22
   522: ifne          536
   525: iload         19
   527: ifne          536
   530: iinc          
   533: goto          552
   536: aload_0       
   537: getfield      #6          // digits:char[]
   540: iload         17
   542: iinc          
   545: bipush        48
   547: iload         22
   549: iadd          
   550: i2c           
   551: castore       
   552: iload         5
   554: ifeq          571
   557: iload         9
   559: bipush        -3
   561: if_icmplt     571
   564: iload         9
   566: bipush        8
   568: if_icmplt     577
   571: iconst_0      
   572: dup           
   573: istore        18
   575: istore        19
   577: iload         18
   579: ifne          701
   582: iload         19
   584: ifne          701
   587: iload         25
   589: iload         26
   591: idiv          
   592: istore        22
   594: bipush        10
   596: iload         25
   598: iload         26
   600: irem          
   601: imul          
   602: istore        25
   604: iload         27
   606: bipush        10
   608: imul          
   609: istore        27
   611: getstatic     #15         // $assertionsDisabled:boolean
   614: ifne          634
   617: iload         22
   619: bipush        10
   621: if_icmplt     634
   624: new           #21         // java.lang.AssertionError
   627: dup           
   628: iload         22
   630: invokespecial #28         // java.lang.AssertionError.<init>:(int)void
   633: athrow        
   634: iload         27
   636: i2l           
   637: lconst_0      
   638: lcmp          
   639: ifle          676
   642: iload         25
   644: iload         27
   646: if_icmpge     653
   649: iconst_1      
   650: goto          654
   653: iconst_0      
   654: istore        18
   656: iload         25
   658: iload         27
   660: iadd          
   661: iload         28
   663: if_icmple     670
   666: iconst_1      
   667: goto          671
   670: iconst_0      
   671: istore        19
   673: goto          682
   676: iconst_1      
   677: istore        18
   679: iconst_1      
   680: istore        19
   682: aload_0       
   683: getfield      #6          // digits:char[]
   686: iload         17
   688: iinc          
   691: bipush        48
   693: iload         22
   695: iadd          
   696: i2c           
   697: castore       
   698: goto          577
   701: iload         25
   703: iconst_1      
   704: ishl          
   705: iload         28
   707: isub          
   708: i2l           
   709: lstore        20
   711: aload_0       
   712: iload         25
   714: ifne          721
   717: iconst_1      
   718: goto          722
   721: iconst_0      
   722: putfield      #4          // exactDecimalConversion:boolean
   725: goto          1426
   728: lload_2       
   729: getstatic     #18         // sun.misc.FDBigInteger.LONG_5_POW:long[]
   732: iload         11
   734: laload        
   735: lmul          
   736: iload         10
   738: lshl          
   739: lstore        25
   741: getstatic     #18         // sun.misc.FDBigInteger.LONG_5_POW:long[]
   744: iload         13
   746: laload        
   747: iload         12
   749: lshl          
   750: lstore        27
   752: getstatic     #18         // sun.misc.FDBigInteger.LONG_5_POW:long[]
   755: iload         15
   757: laload        
   758: iload         14
   760: lshl          
   761: lstore        29
   763: lload         27
   765: ldc2_w        #29         // 10
   768: lmul          
   769: lstore        31
   771: iconst_0      
   772: istore        17
   774: lload         25
   776: lload         27
   778: ldiv          
   779: l2i           
   780: istore        22
   782: ldc2_w        #29         // 10
   785: lload         25
   787: lload         27
   789: lrem          
   790: lmul          
   791: lstore        25
   793: lload         29
   795: ldc2_w        #29         // 10
   798: lmul          
   799: lstore        29
   801: lload         25
   803: lload         29
   805: lcmp          
   806: ifge          813
   809: iconst_1      
   810: goto          814
   813: iconst_0      
   814: istore        18
   816: lload         25
   818: lload         29
   820: ladd          
   821: lload         31
   823: lcmp          
   824: ifle          831
   827: iconst_1      
   828: goto          832
   831: iconst_0      
   832: istore        19
   834: getstatic     #15         // $assertionsDisabled:boolean
   837: ifne          857
   840: iload         22
   842: bipush        10
   844: if_icmplt     857
   847: new           #21         // java.lang.AssertionError
   850: dup           
   851: iload         22
   853: invokespecial #28         // java.lang.AssertionError.<init>:(int)void
   856: athrow        
   857: iload         22
   859: ifne          873
   862: iload         19
   864: ifne          873
   867: iinc          
   870: goto          889
   873: aload_0       
   874: getfield      #6          // digits:char[]
   877: iload         17
   879: iinc          
   882: bipush        48
   884: iload         22
   886: iadd          
   887: i2c           
   888: castore       
   889: iload         5
   891: ifeq          908
   894: iload         9
   896: bipush        -3
   898: if_icmplt     908
   901: iload         9
   903: bipush        8
   905: if_icmplt     914
   908: iconst_0      
   909: dup           
   910: istore        18
   912: istore        19
   914: iload         18
   916: ifne          1042
   919: iload         19
   921: ifne          1042
   924: lload         25
   926: lload         27
   928: ldiv          
   929: l2i           
   930: istore        22
   932: ldc2_w        #29         // 10
   935: lload         25
   937: lload         27
   939: lrem          
   940: lmul          
   941: lstore        25
   943: lload         29
   945: ldc2_w        #29         // 10
   948: lmul          
   949: lstore        29
   951: getstatic     #15         // $assertionsDisabled:boolean
   954: ifne          974
   957: iload         22
   959: bipush        10
   961: if_icmplt     974
   964: new           #21         // java.lang.AssertionError
   967: dup           
   968: iload         22
   970: invokespecial #28         // java.lang.AssertionError.<init>:(int)void
   973: athrow        
   974: lload         29
   976: lconst_0      
   977: lcmp          
   978: ifle          1017
   981: lload         25
   983: lload         29
   985: lcmp          
   986: ifge          993
   989: iconst_1      
   990: goto          994
   993: iconst_0      
   994: istore        18
   996: lload         25
   998: lload         29
  1000: ladd          
  1001: lload         31
  1003: lcmp          
  1004: ifle          1011
  1007: iconst_1      
  1008: goto          1012
  1011: iconst_0      
  1012: istore        19
  1014: goto          1023
  1017: iconst_1      
  1018: istore        18
  1020: iconst_1      
  1021: istore        19
  1023: aload_0       
  1024: getfield      #6          // digits:char[]
  1027: iload         17
  1029: iinc          
  1032: bipush        48
  1034: iload         22
  1036: iadd          
  1037: i2c           
  1038: castore       
  1039: goto          914
  1042: lload         25
  1044: iconst_1      
  1045: lshl          
  1046: lload         31
  1048: lsub          
  1049: lstore        20
  1051: aload_0       
  1052: lload         25
  1054: lconst_0      
  1055: lcmp          
  1056: ifne          1063
  1059: iconst_1      
  1060: goto          1064
  1063: iconst_0      
  1064: putfield      #4          // exactDecimalConversion:boolean
  1067: goto          1426
  1070: iload         13
  1072: iload         12
  1074: invokestatic  #29         // sun.misc.FDBigInteger.valueOfPow52:(int, int)sun.misc.FDBigInteger
  1077: astore        25
  1079: aload         25
  1081: invokevirtual #30         // sun.misc.FDBigInteger.getNormalizationBias:()int
  1084: istore        26
  1086: aload         25
  1088: iload         26
  1090: invokevirtual #31         // sun.misc.FDBigInteger.leftShift:(int)sun.misc.FDBigInteger
  1093: astore        25
  1095: lload_2       
  1096: iload         11
  1098: iload         10
  1100: iload         26
  1102: iadd          
  1103: invokestatic  #32         // sun.misc.FDBigInteger.valueOfMulPow52:(long, int, int)sun.misc.FDBigInteger
  1106: astore        27
  1108: iload         15
  1110: iconst_1      
  1111: iadd          
  1112: iload         14
  1114: iload         26
  1116: iadd          
  1117: iconst_1      
  1118: iadd          
  1119: invokestatic  #29         // sun.misc.FDBigInteger.valueOfPow52:(int, int)sun.misc.FDBigInteger
  1122: astore        28
  1124: iload         13
  1126: iconst_1      
  1127: iadd          
  1128: iload         12
  1130: iload         26
  1132: iadd          
  1133: iconst_1      
  1134: iadd          
  1135: invokestatic  #29         // sun.misc.FDBigInteger.valueOfPow52:(int, int)sun.misc.FDBigInteger
  1138: astore        29
  1140: iconst_0      
  1141: istore        17
  1143: aload         27
  1145: aload         25
  1147: invokevirtual #33         // sun.misc.FDBigInteger.quoRemIteration:(sun.misc.FDBigInteger)int
  1150: istore        22
  1152: aload         27
  1154: aload         28
  1156: invokevirtual #34         // sun.misc.FDBigInteger.cmp:(sun.misc.FDBigInteger)int
  1159: ifge          1166
  1162: iconst_1      
  1163: goto          1167
  1166: iconst_0      
  1167: istore        18
  1169: aload         29
  1171: aload         27
  1173: aload         28
  1175: invokevirtual #35         // sun.misc.FDBigInteger.addAndCmp:(sun.misc.FDBigInteger, sun.misc.FDBigInteger)int
  1178: ifgt          1185
  1181: iconst_1      
  1182: goto          1186
  1185: iconst_0      
  1186: istore        19
  1188: getstatic     #15         // $assertionsDisabled:boolean
  1191: ifne          1211
  1194: iload         22
  1196: bipush        10
  1198: if_icmplt     1211
  1201: new           #21         // java.lang.AssertionError
  1204: dup           
  1205: iload         22
  1207: invokespecial #28         // java.lang.AssertionError.<init>:(int)void
  1210: athrow        
  1211: iload         22
  1213: ifne          1227
  1216: iload         19
  1218: ifne          1227
  1221: iinc          
  1224: goto          1243
  1227: aload_0       
  1228: getfield      #6          // digits:char[]
  1231: iload         17
  1233: iinc          
  1236: bipush        48
  1238: iload         22
  1240: iadd          
  1241: i2c           
  1242: castore       
  1243: iload         5
  1245: ifeq          1262
  1248: iload         9
  1250: bipush        -3
  1252: if_icmplt     1262
  1255: iload         9
  1257: bipush        8
  1259: if_icmplt     1268
  1262: iconst_0      
  1263: dup           
  1264: istore        18
  1266: istore        19
  1268: iload         18
  1270: ifne          1372
  1273: iload         19
  1275: ifne          1372
  1278: aload         27
  1280: aload         25
  1282: invokevirtual #33         // sun.misc.FDBigInteger.quoRemIteration:(sun.misc.FDBigInteger)int
  1285: istore        22
  1287: getstatic     #15         // $assertionsDisabled:boolean
  1290: ifne          1310
  1293: iload         22
  1295: bipush        10
  1297: if_icmplt     1310
  1300: new           #21         // java.lang.AssertionError
  1303: dup           
  1304: iload         22
  1306: invokespecial #28         // java.lang.AssertionError.<init>:(int)void
  1309: athrow        
  1310: aload         28
  1312: invokevirtual #36         // sun.misc.FDBigInteger.multBy10:()sun.misc.FDBigInteger
  1315: astore        28
  1317: aload         27
  1319: aload         28
  1321: invokevirtual #34         // sun.misc.FDBigInteger.cmp:(sun.misc.FDBigInteger)int
  1324: ifge          1331
  1327: iconst_1      
  1328: goto          1332
  1331: iconst_0      
  1332: istore        18
  1334: aload         29
  1336: aload         27
  1338: aload         28
  1340: invokevirtual #35         // sun.misc.FDBigInteger.addAndCmp:(sun.misc.FDBigInteger, sun.misc.FDBigInteger)int
  1343: ifgt          1350
  1346: iconst_1      
  1347: goto          1351
  1350: iconst_0      
  1351: istore        19
  1353: aload_0       
  1354: getfield      #6          // digits:char[]
  1357: iload         17
  1359: iinc          
  1362: bipush        48
  1364: iload         22
  1366: iadd          
  1367: i2c           
  1368: castore       
  1369: goto          1268
  1372: iload         19
  1374: ifeq          1403
  1377: iload         18
  1379: ifeq          1403
  1382: aload         27
  1384: iconst_1      
  1385: invokevirtual #31         // sun.misc.FDBigInteger.leftShift:(int)sun.misc.FDBigInteger
  1388: astore        27
  1390: aload         27
  1392: aload         29
  1394: invokevirtual #34         // sun.misc.FDBigInteger.cmp:(sun.misc.FDBigInteger)int
  1397: i2l           
  1398: lstore        20
  1400: goto          1406
  1403: lconst_0      
  1404: lstore        20
  1406: aload_0       
  1407: aload         27
  1409: getstatic     #37         // sun.misc.FDBigInteger.ZERO:sun.misc.FDBigInteger
  1412: invokevirtual #34         // sun.misc.FDBigInteger.cmp:(sun.misc.FDBigInteger)int
  1415: ifne          1422
  1418: iconst_1      
  1419: goto          1423
  1422: iconst_0      
  1423: putfield      #4          // exactDecimalConversion:boolean
  1426: aload_0       
  1427: iload         9
  1429: iconst_1      
  1430: iadd          
  1431: putfield      #8          // decExponent:int
  1434: aload_0       
  1435: iconst_0      
  1436: putfield      #9          // firstDigitIndex:int
  1439: aload_0       
  1440: iload         17
  1442: putfield      #10         // nDigits:int
  1445: iload         19
  1447: ifeq          1508
  1450: iload         18
  1452: ifeq          1504
  1455: lload         20
  1457: lconst_0      
  1458: lcmp          
  1459: ifne          1490
  1462: aload_0       
  1463: getfield      #6          // digits:char[]
  1466: aload_0       
  1467: getfield      #9          // firstDigitIndex:int
  1470: aload_0       
  1471: getfield      #10         // nDigits:int
  1474: iadd          
  1475: iconst_1      
  1476: isub          
  1477: caload        
  1478: iconst_1      
  1479: iand          
  1480: ifeq          1508
  1483: aload_0       
  1484: invokespecial #38         // roundup:()void
  1487: goto          1508
  1490: lload         20
  1492: lconst_0      
  1493: lcmp          
  1494: ifle          1508
  1497: aload_0       
  1498: invokespecial #38         // roundup:()void
  1501: goto          1508
  1504: aload_0       
  1505: invokespecial #38         // roundup:()void
  1508: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD, r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@5692047b slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:28|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction MOVB (x: [rsi|QWORD[.] + 26], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   12  <|@ instruction MOVB (x: [rsi|QWORD[.] + 25], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   14  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[27]{0, 3, 5, 7, 10, ...}] <|@ <|@
      nr   16  <|@ instruction rbx|DWORD = TZCNT r10|QWORD size: QWORD <|@ <|@
      nr   18  <|@ instruction rcx|DWORD = MOVE input: int[53|0x35] <|@ <|@
      nr   20  <|@ instruction rdi|DWORD = SUB (x: rcx|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr   22  <|@ instruction rcx|DWORD = SUB (x: rdi|DWORD, ~y: rdx|DWORD) size: DWORD <|@ <|@
      nr   24  <|@ instruction rcx|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr   26  <|@ instruction CMP rcx|DWORD y: 1 size: DWORD <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 0.7309313881269885 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4604758864199680626
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction CMP rdx|DWORD y: 63 size: DWORD <|@ <|@
      nr   34  <|@ instruction BRANCH trueDestinationProbability: 0.9998165784832451 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" 
    xhandlers
    flags 
    probability 4604757656617592340
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   40  <|@ instruction JUMP ~[] destination: B2 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B2" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607180766685868390
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   60  <|@ instruction CMP rdx|DWORD y: -21 size: DWORD <|@ <|@
      nr   62  <|@ instruction BRANCH trueDestinationProbability: 3.66905155017428E-4 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B26" 
    xhandlers
    flags 
    probability 4607177462504198754
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   72  <|@ instruction CMP rcx|DWORD y: 27 size: DWORD <|@ <|@
      nr   74  <|@ instruction BRANCH trueDestinationProbability: 0.5322359783728843 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B25" 
    xhandlers
    flags 
    probability 4602966537134068855
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   78  <|@ instruction rax|DWORD = ADD (x: rdi|DWORD, ~y: [r11|QWORD[.] + rcx|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   80  <|@ instruction CMP rax|DWORD y: 64 size: DWORD <|@ <|@
      nr   82  <|@ instruction BRANCH trueDestinationProbability: 0.9985678292003713 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B24" 
    xhandlers
    flags 
    probability 4602959675148926439
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   88  <|@ instruction BRANCH trueDestinationProbability: 0.37470452312023583 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B28" 
    xhandlers
    flags 
    probability 4599655016814494722
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  202  <|@ instruction rax|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  204  <|@ instruction JUMP ~[] destination: B24 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B7" "B26" "B25" "B24" "B3" 
    successors "B29" "B32" 
    xhandlers
    flags 
    probability 4605389661644661784
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  226  <|@ instruction stack:40|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction rbp|QWORD = MOVE input: long[4503599627370495|0xfffffffffffff] <|@ <|@
      nr  230  <|@ instruction rcx|QWORD = AND (x: r10|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr  232  <|@ instruction r13|QWORD = MOVE input: long[4607182418800017408|0x3ff0000000000000] <|@ <|@
      nr  234  <|@ instruction rcx|QWORD = OR (x: rcx|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr  236  <|@ instruction xmm0|DOUBLE = VMOVQ rcx|QWORD nZ: XMM <|@ <|@
      nr  238  <|@ instruction xmm1|DOUBLE = VMOVE input: double[1.5|0x3ff8000000000000] <|@ <|@
      nr  240  <|@ instruction xmm0|DOUBLE = VSUBSD (x: xmm0|DOUBLE, y: xmm1|DOUBLE) nZ: XMM <|@ <|@
      nr  242  <|@ instruction xmm1|DOUBLE = VMOVE input: double[0.289529654|0x3fd287a762c9bd93] <|@ <|@
      nr  244  <|@ instruction xmm0|DOUBLE = VMULSD (x: xmm0|DOUBLE, y: xmm1|DOUBLE) nZ: XMM <|@ <|@
      nr  246  <|@ instruction xmm1|DOUBLE = VMOVE input: double[0.176091259|0x3fc68a288b421b8c] <|@ <|@
      nr  248  <|@ instruction xmm0|DOUBLE = VADDSD (x: xmm0|DOUBLE, y: xmm1|DOUBLE) nZ: XMM <|@ <|@
      nr  250  <|@ instruction xmm1|DOUBLE = VCVTSI2SD rdx|DWORD <|@ <|@
      nr  252  <|@ instruction xmm2|DOUBLE = VMOVE input: double[0.301029995663981|0x3fd34413509f79fb] <|@ <|@
      nr  254  <|@ instruction xmm1|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm2|DOUBLE) nZ: XMM <|@ <|@
      nr  256  <|@ instruction xmm0|DOUBLE = VADDSD (x: xmm0|DOUBLE, y: xmm1|DOUBLE) nZ: XMM <|@ <|@
      nr  258  <|@ instruction r13|QWORD = VMOVQ xmm0|DOUBLE <|@ <|@
      nr  260  <|@ instruction r14|QWORD = MOVE input: long[-9223372036854775808|0x8000000000000000] <|@ <|@
      nr  262  <|@ instruction rcx|QWORD = MOVE input: long[9218868437227405312|0x7ff0000000000000] <|@ <|@
      nr  264  <|@ instruction rcx|QWORD = AND (x: r13|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  266  <|@ instruction rcx|QWORD = SHR rcx|QWORD y: 52 size: QWORD <|@ <|@
      nr  268  <|@ instruction rcx|DWORD = MOV rcx|QWORD size: DWORD <|@ <|@
      nr  270  <|@ instruction r9|DWORD = LEA [rcx|DWORD - 1023] size: DWORD <|@ <|@
      nr  272  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  274  <|@ instruction BRANCH trueDestinationProbability: 0.8017068096060938 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4603959086903862549
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  278  <|@ instruction rcx|QWORD = MOVE input: long[9223372036854775807|0x7fffffffffffffff] <|@ <|@
      nr  280  <|@ instruction TEST (x: rcx|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr  282  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B38" 
    xhandlers
    flags 
    probability 4603959086903862549
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  296  <|@ instruction TEST (x: r14|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr  298  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  300  <|@ instruction r9|DWORD = CMOVE (falseValue: int[-1|0xffffffffffffffff], ~trueValue: rcx|DWORD) condition: = <|@ <|@
      nr  302  <|@ instruction r11|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  304  <|@ instruction JUMP ~[] destination: B31 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" "B37" "B34" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4605389661644661784
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  370  <|@ instruction rcx|DWORD = NEG r11|DWORD size: DWORD <|@ <|@
      nr  372  <|@ instruction CMP rcx|DWORD y: 1 size: DWORD <|@ <|@
      nr  374  <|@ instruction BRANCH trueDestinationProbability: 0.7309313881269885 condition: < trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603448481723541948
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  378  <|@ instruction stack:44|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  380  <|@ instruction stack:48|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  382  <|@ instruction rsi|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  384  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  386  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4605389661644661784
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr  410  <|@ instruction CMP r11|DWORD y: 1 size: DWORD <|@ <|@
      nr  412  <|@ instruction BRANCH trueDestinationProbability: 0.7309313881269885 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4603448481723541948
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  416  <|@ instruction stack:52|DWORD = MOVE input: int[3|0x3] <|@ <|@
      nr  418  <|@ instruction r14|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  420  <|@ instruction r13|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  422  <|@ instruction JUMP ~[] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" "B43" 
    successors "B45" "B48" 
    xhandlers
    flags 
    probability 4605389661644661784
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr  444  <|@ instruction stack:56|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  446  <|@ instruction rsi|DWORD = ADD (x: rsi|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  448  <|@ instruction rdx|DWORD = MOVE input: int[52|0x34] <|@ <|@
      nr  450  <|@ instruction rdx|DWORD = SUB (x: rdx|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr  452  <|@ instruction r9|DWORD = SUB (x: rsi|DWORD, ~y: rdx|DWORD) size: DWORD <|@ <|@
      nr  454  <|@ instruction rsi|DWORD = SUB (x: rsi|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  456  <|@ instruction CMP (x: r9|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  458  <|@ instruction BRANCH trueDestinationProbability: 0.44744570600555483 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B49" "B51" 
    xhandlers
    flags 
    probability 4601644361839485290
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  484  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: r9|DWORD) size: DWORD <|@ <|@
      nr  486  <|@ instruction rsi|DWORD = SUB (x: rsi|DWORD, ~y: r9|DWORD) size: DWORD <|@ <|@
      nr  488  <|@ instruction CMP rdi|DWORD y: 1 size: DWORD <|@ <|@
      nr  490  <|@ instruction BRANCH trueDestinationProbability: 0.3620750396336093 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B52" 
    xhandlers
    flags 
    probability 4598757630992240901
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  506  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  508  <|@ instruction JUMP ~[] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B47" "B50" "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4605389661644661784
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr  512  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  514  <|@ instruction BRANCH trueDestinationProbability: 0.9999471561184408 condition: < trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4605389280405537968
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  518  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr  520  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr  522  <|@ instruction rsi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  524  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B53" 
    successors "B56" "B59" 
    xhandlers
    flags 
    probability 4605389661644661784
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr  532  <|@ instruction r8|DWORD = ADD (x: r9|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  534  <|@ instruction rdi|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  536  <|@ instruction rcx|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  538  <|@ instruction r10|QWORD = SHR (x: r10|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  540  <|@ instruction stack:64|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  542  <|@ instruction CMP rdi|DWORD y: 27 size: DWORD <|@ <|@
      nr  544  <|@ instruction BRANCH trueDestinationProbability: 0.9999471514639044 condition: |<| trueDestination: B55 -> B56 falseDestination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" "B58" 
    xhandlers
    flags 
    probability 4605389280371958085
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  548  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[27]{0, 3, 5, 7, 10, ...}] <|@ <|@
      nr  550  <|@ instruction rdx|DWORD = MOV [rcx|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  552  <|@ instruction rbx|DWORD = ADD (x: r8|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  554  <|@ instruction CMP r14|DWORD y: 27 size: DWORD <|@ <|@
      nr  556  <|@ instruction BRANCH trueDestinationProbability: 0.9999471523948773 condition: < trueDestination: B56 -> B57 falseDestination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B61" 
    xhandlers
    flags 
    probability 4605388899126120185
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  560  <|@ instruction JUMP ~[] destination: B57 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B57" 
    successors "B62" "B65" 
    xhandlers
    flags 
    probability 4605389280378674534
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  640  <|@ instruction CMP r14|DWORD y: 27 size: DWORD <|@ <|@
      nr  642  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B61 -> B62 falseDestination: B61 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" "B64" 
    xhandlers
    flags 
    probability 4605389280378674534
    begin_IR
      LIR
      nr  644  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  646  <|@ instruction CMP rbx|DWORD y: 64 size: DWORD <|@ <|@
      nr  648  <|@ instruction BRANCH trueDestinationProbability: 0.9867185711014427 condition: < trueDestination: B62 -> B63 falseDestination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B69" 
    xhandlers
    flags 
    probability 4605293467342645890
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  652  <|@ instruction rcx|DWORD = MOV [rcx|QWORD[.] + r14|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  654  <|@ instruction r8|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  656  <|@ instruction JUMP ~[] destination: B63 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" "B63" 
    successors "B70" "B135" 
    xhandlers
    flags 
    probability 4605293843544876038
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  728  <|@ instruction rdx|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  730  <|@ instruction rcx|DWORD = ADD (x: rdx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  732  <|@ instruction CMP rcx|DWORD y: 64 size: DWORD <|@ <|@
      nr  734  <|@ instruction BRANCH trueDestinationProbability: 0.9680978309381416 condition: < trueDestination: B69 -> B70 falseDestination: B69 -> B135 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" "B101" 
    xhandlers
    flags 
    probability 4605066743998553008
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  738  <|@ instruction rbp|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  740  <|@ instruction r14|DWORD[.] = MOV [rbp|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  742  <|@ instruction CMP rbx|DWORD y: 32 size: DWORD <|@ <|@
      nr  744  <|@ instruction BRANCH trueDestinationProbability: 9.220839096357736E-4 condition: < trueDestination: B70 -> B71 falseDestination: B70 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B102" "B133" 
    xhandlers
    flags 
    probability 4605060389434741780
    begin_IR
      LIR
      nr 1178  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1180  <|@ instruction CMP rdi|DWORD y: 27 size: DWORD <|@ <|@
      nr 1182  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B101 -> B102 falseDestination: B101 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B103" "B132" 
    xhandlers
    flags 
    probability 4605060389434741780
    begin_IR
      LIR
      nr 1184  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1186  <|@ instruction CMP r13|DWORD y: 27 size: DWORD <|@ <|@
      nr 1188  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B102 -> B103 falseDestination: B102 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B104" "B109" 
    xhandlers
    flags 
    probability 4605060389434741780
    begin_IR
      LIR
      nr 1190  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1192  <|@ instruction stack:52|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1194  <|@ instruction stack:88|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1196  <|@ instruction stack:92|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1198  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[long[27]{1, 5, 25, 125, 625, ...}] <|@ <|@
      nr 1200  <|@ instruction r8|QWORD = MOV [rcx|QWORD[.] + rdi|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr 1202  <|@ instruction rcx|QWORD = MOV [rcx|QWORD[.] + r13|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr 1204  <|@ instruction rbx|QWORD = IMUL (x: r8|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1206  <|@ instruction r13|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr 1208  <|@ instruction rcx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1210  <|@ instruction rbx|QWORD = SHL (x: rbx|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr 1212  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1214  <|@ instruction r13|QWORD = SHL (x: r13|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr 1216  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1218  <|@ instruction rax|QWORD = MOVE rbx|QWORD moveKind: QWORD <|@ <|@
      nr 1220  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = CDQ rax|QWORD size: QWORD <|@ <|@
      nr 1222  <|@ st <@st|@reference-map: [rbp:0, r14:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365]
stack: stack:52|DWORD stack:92|DWORD 
locals: rbp|QWORD[.] - r10|QWORD - - stack:28|DWORD - - - r11|DWORD r9|DWORD rdi|DWORD rcx|DWORD stack:56|DWORD rsi|DWORD rdi|DWORD - - - - - - - stack:88|DWORD - - - - - - - - - 
>@ <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IDIV (highX: rdx|QWORD, lowX: rax|QWORD, y: r13|QWORD) size: QWORD state [bci:365] <|@ <|@
      nr 1224  <|@ instruction rbx|QWORD = SHL r13|QWORD y: 3 size: QWORD <|@ <|@
      nr 1226  <|@ instruction r10|QWORD = SHL r13|QWORD size: QWORD <|@ <|@
      nr 1228  <|@ instruction rbx|QWORD = ADD (x: rbx|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1230  <|@ instruction r10|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1232  <|@ instruction rcx|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1234  <|@ instruction r8|QWORD = SHL (x: r8|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr 1236  <|@ instruction rcx|QWORD = SHL r8|QWORD y: 3 size: QWORD <|@ <|@
      nr 1238  <|@ instruction r8|QWORD = SHL r8|QWORD size: QWORD <|@ <|@
      nr 1240  <|@ instruction rcx|QWORD = ADD (x: rcx|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr 1242  <|@ instruction r8|QWORD = SHL rdx|QWORD y: 3 size: QWORD <|@ <|@
      nr 1244  <|@ instruction rdx|QWORD = SHL rdx|QWORD size: QWORD <|@ <|@
      nr 1246  <|@ instruction r8|QWORD = ADD (x: r8|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1248  <|@ instruction rdx|QWORD = ADD (x: rcx|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr 1250  <|@ instruction rax|DWORD = MOV rax|QWORD size: DWORD <|@ <|@
      nr 1252  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 1254  <|@ instruction BRANCH trueDestinationProbability: 0.12181344950436568 condition: = trueDestination: B103 -> B104 falseDestination: B103 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B110" "B111" 
    xhandlers
    flags 
    probability 4604221683140082412
    begin_IR
      LIR
      nr 1316  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1318  <|@ st <@st|@reference-map: [rbp:0, r14:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365]
stack: stack:52|DWORD stack:92|DWORD 
locals: rbp|QWORD[.] - stack:64|QWORD - - stack:28|DWORD - - - r11|DWORD r9|DWORD rdi|DWORD r10|DWORD stack:56|DWORD rsi|DWORD rdi|DWORD - - - - - - - stack:88|DWORD - - - - - - - - - 
>@ <|@ instruction CMP [r14|DWORD[.] * 8 + 12] y: 0 size: DWORD state [bci:365] <|@ <|@
      nr 1320  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B109 -> B110 falseDestination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B112" "B113" 
    xhandlers
    flags 
    probability 4604221683140082412
    begin_IR
      LIR
      nr 1350  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1352  <|@ instruction r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1354  <|@ instruction rax|DWORD = LEA [rax|DWORD + 48] size: DWORD <|@ <|@
      nr 1356  <|@ instruction MOV (x: [r14|DWORD[.] * 8 + 16], y: rax|DWORD) size: WORD <|@ <|@
      nr 1358  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1360  <|@ instruction BRANCH trueDestinationProbability: 0.010669521717460728 condition: = trueDestination: B111 -> B112 falseDestination: B111 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" 
    xhandlers
    flags 
    probability 4604157170265443794
    begin_IR
      LIR
      nr 1372  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1374  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1376  <|@ instruction rax|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1378  <|@ instruction JUMP ~[] destination: B113 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B108" "B113" 
    successors "B115" "B116" 
    xhandlers
    flags 
    probability 4604986927965077723
    begin_IR
      LIR
      nr 1380  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1382  <|@ instruction CMP (x: rcx|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr 1384  <|@ instruction r9|DWORD = SETCC condition: > <|@ <|@
      nr 1386  <|@ instruction CMP (x: rdx|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr 1388  <|@ instruction rdi|DWORD = SETCC condition: > <|@ <|@
      nr 1390  <|@ instruction CMP r11|DWORD y: -3 size: DWORD <|@ <|@
      nr 1392  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B114 -> B115 falseDestination: B114 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" "B118" 
    xhandlers
    flags 
    probability 4604986927965077723
    begin_IR
      LIR
      nr 1406  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1408  <|@ instruction CMP r11|DWORD y: 8 size: DWORD <|@ <|@
      nr 1410  <|@ instruction BRANCH trueDestinationProbability: 0.9998134328358209 condition: < trueDestination: B116 -> B117 falseDestination: B116 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B119" 
    xhandlers
    flags 
    probability 4604985657123954626
    begin_IR
      LIR
      nr 1412  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1414  <|@ instruction JUMP ~[] destination: B117 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B117" "B107" "B118" "B112" 
    successors "B120" "B121" 
    xhandlers
    flags 
    probability 4605060389434741780
    begin_IR
      LIR
      nr 1424  <|@ instruction [] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr 1426  <|@ instruction TEST (x: r14|DWORD[.], y: r14|DWORD[.]) size: DWORD <|@ <|@
      nr 1428  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B119 -> B120 falseDestination: B119 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B122" 
    xhandlers
    flags 
    probability 4605060389434741780
    begin_IR
      LIR
      nr 1442  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1444  <|@ instruction rsi|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr 1446  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: r14|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@40447647 encoding: base: 0 shift: 3 <|@ <|@
      nr 1448  <|@ instruction stack:92|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1450  <|@ instruction r9|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1452  <|@ instruction rdi|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr 1454  <|@ instruction rcx|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr 1456  <|@ instruction r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1458  <|@ instruction JUMP ~[] destination: B121 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" "B126" "B127" 
    successors "B123" "B130" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618403218649290590
    begin_IR
      LIR
      nr 1460  <|@ instruction [] = LABEL numbPhis: 5 align: true label: ? <|@ <|@
      nr 1462  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr 1464  <|@ instruction BRANCH trueDestinationProbability: 0.9096921872746148 condition: = trueDestination: B122 -> B123 falseDestination: B122 -> B130 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B124" "B129" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617796602989612086
    begin_IR
      LIR
      nr 1466  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1468  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1470  <|@ instruction BRANCH trueDestinationProbability: 0.9584277782398936 condition: = trueDestination: B123 -> B124 falseDestination: B123 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B125" "B128" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617542572413107419
    begin_IR
      LIR
      nr 1472  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1474  <|@ instruction CMP (x: rsi|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 1476  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B124 -> B125 falseDestination: B124 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B126" "B127" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617542572413107419
    begin_IR
      LIR
      nr 1478  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1480  <|@ instruction rax|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr 1482  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = CDQ rax|QWORD size: QWORD <|@ <|@
      nr 1484  <|@ st <@st|@reference-map: [rbp:0, r14:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
locals: rbp|QWORD[.] - - - - - - - - r11|DWORD - - - - - - - r10|DWORD int[0|0x0] int[0|0x0] - - - - - rcx|QWORD - r13|QWORD - rdi|QWORD - rbx|QWORD - 
>@ <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IDIV (highX: rdx|QWORD, lowX: rax|QWORD, y: r13|QWORD) size: QWORD state [bci:914] <|@ <|@
      nr 1486  <|@ instruction r8|DWORD = MOV rax|QWORD size: DWORD <|@ <|@
      nr 1488  <|@ instruction r9|DWORD = LEA [r8|DWORD + 48] size: DWORD <|@ <|@
      nr 1490  <|@ instruction MOV (x: [r14|QWORD[.] + r10|DWORD * 2 + 16], y: r9|DWORD) size: WORD <|@ <|@
      nr 1492  <|@ instruction r9|QWORD = SHL rdx|QWORD y: 3 size: QWORD <|@ <|@
      nr 1494  <|@ instruction rdx|QWORD = SHL rdx|QWORD size: QWORD <|@ <|@
      nr 1496  <|@ instruction r9|QWORD = ADD (x: r9|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1498  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr 1500  <|@ instruction rcx|QWORD = SHL rdi|QWORD y: 3 size: QWORD <|@ <|@
      nr 1502  <|@ instruction rdi|QWORD = SHL rdi|QWORD size: QWORD <|@ <|@
      nr 1504  <|@ instruction rcx|QWORD = ADD (x: rcx|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr 1506  <|@ instruction CMP rcx|QWORD y: 1 size: QWORD <|@ <|@
      nr 1508  <|@ instruction BRANCH trueDestinationProbability: 3.796929368977686E-4 condition: < trueDestination: B125 -> B126 falseDestination: B125 -> B127 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B122" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617540348720924481
    begin_IR
      LIR
      nr 1524  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1526  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr 1528  <|@ instruction rdi|DWORD = SETCC condition: > <|@ <|@
      nr 1530  <|@ instruction rdx|QWORD = ADD (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr 1532  <|@ instruction CMP (x: rdx|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr 1534  <|@ instruction rdx|DWORD = SETCC condition: > <|@ <|@
      nr 1536  <|@ st <@st|@reference-map: [rbp:0, r14:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1039]
locals: rbp|QWORD[.] - - - - - - - - r11|DWORD - - - - - - - r10|DWORD rdi|DWORD rdx|DWORD - - r8|DWORD - - r9|QWORD - r13|QWORD - rcx|QWORD - rbx|QWORD - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:1039] <|@ <|@
      nr 1538  <|@ instruction r8|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1540  <|@ instruction rdi|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr 1542  <|@ instruction rcx|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr 1544  <|@ instruction r9|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1546  <|@ instruction JUMP ~[] destination: B127 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B122" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4566700544116969831
    begin_IR
      LIR
      nr 1510  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1512  <|@ st <@st|@reference-map: [rbp:0, r14:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1039]
locals: rbp|QWORD[.] - - - - - - - - r11|DWORD - - - - - - - r10|DWORD int[1|0x1] int[1|0x1] - - r8|DWORD - - r9|QWORD - r13|QWORD - rcx|QWORD - rbx|QWORD - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:1039] <|@ <|@
      nr 1514  <|@ instruction rdi|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr 1516  <|@ instruction rcx|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr 1518  <|@ instruction r9|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1520  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1522  <|@ instruction JUMP ~[] destination: B126 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B131" 
    xhandlers
    flags 
    probability 4603028144822704448
    begin_IR
      LIR
      nr 1562  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1564  <|@ instruction JUMP ~[] destination: B130 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B130" "B129" 
    successors "B168" 
    xhandlers
    flags 
    probability 4605060389434741781
    begin_IR
      LIR
      nr 1566  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1568  <|@ instruction TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr 1570  <|@ instruction rsi|DWORD = SETCC condition: = <|@ <|@
      nr 1572  <|@ instruction MOVB (x: [rbp|QWORD[.] + 25], y: rsi|DWORD) size: BYTE <|@ <|@
      nr 1574  <|@ instruction rcx|QWORD = SHL rcx|QWORD size: QWORD <|@ <|@
      nr 1576  <|@ instruction rcx|QWORD = SUB (x: rcx|QWORD, ~y: rbx|QWORD) size: QWORD <|@ <|@
      nr 1578  <|@ instruction stack:92|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1580  <|@ instruction r11|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1582  <|@ instruction r10|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1584  <|@ instruction JUMP ~[] destination: B131 -> B168 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B168"
    from_bci -1
    to_bci -1
    predecessors "B94" "B131" "B167" 
    successors "B169" "B170" 
    xhandlers
    flags 
    probability 4605389661644661784
    begin_IR
      LIR
      nr 2152  <|@ instruction [] = LABEL numbPhis: 5 align: false label: ? <|@ <|@
      nr 2154  <|@ instruction rsi|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr 2156  <|@ instruction MOV (x: [rbp|QWORD[.] + 12], y: rsi|DWORD) size: DWORD <|@ <|@
      nr 2158  <|@ instruction MOV (x: [rbp|QWORD[.] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr 2160  <|@ instruction MOV (x: [rbp|QWORD[.] + 20], y: r11|DWORD) size: DWORD <|@ <|@
      nr 2162  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 2164  <|@ instruction BRANCH trueDestinationProbability: 0.6008525479558225 condition: = trueDestination: B168 -> B169 falseDestination: B168 -> B170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B169"
    from_bci -1
    to_bci -1
    predecessors "B168" 
    successors 
    xhandlers
    flags 
    probability 4602341251752896824
    begin_IR
      LIR
      nr 2166  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2168  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B28" 
    xhandlers
    flags 
    probability 4602093470658165717
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  214  <|@ instruction rax|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  216  <|@ instruction JUMP ~[] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4600127762195097286
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  462  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  464  <|@ instruction rsi|DWORD = SUB (x: rsi|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  466  <|@ instruction CMP rdi|DWORD y: 1 size: DWORD <|@ <|@
      nr  468  <|@ instruction BRANCH trueDestinationProbability: 0.3620750396336093 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B52" 
    xhandlers
    flags 
    probability 4597405088903129587
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  478  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  480  <|@ instruction JUMP ~[] destination: B47 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B170"
    from_bci -1
    to_bci -1
    predecessors "B168" 
    successors "B171" "B172" 
    xhandlers
    flags 
    probability 4599430872281685752
    begin_IR
      LIR
      nr 2170  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2172  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr 2174  <|@ instruction BRANCH trueDestinationProbability: 0.7168137687555163 condition: = trueDestination: B170 -> B171 falseDestination: B170 -> B172 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B171"
    from_bci -1
    to_bci -1
    predecessors "B170" 
    successors 
    xhandlers
    flags 
    probability 4597424643074725698
    begin_IR
      LIR
      nr 2176  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2178  <|@ instruction rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2180  <|@ st <@st|@reference-map: []
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:778) [bci: 1505]
locals: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.roundup()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1505] <|@ <|@
      nr 2182  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" "B27" 
    xhandlers
    flags 
    probability 4598518729118579484
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction CMP rdx|DWORD y: 63 size: DWORD <|@ <|@
      nr   52  <|@ instruction BRANCH trueDestinationProbability: 0.9998165784832451 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4598517840054458020
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   56  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B131" 
    xhandlers
    flags 
    probability 4597296998738684756
    begin_IR
      LIR
      nr 1558  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1560  <|@ instruction JUMP ~[] destination: B129 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4596932739975014766
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  426  <|@ instruction r13|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  428  <|@ instruction r14|DWORD = SHL r13|DWORD size: DWORD <|@ <|@
      nr  430  <|@ instruction r14|DWORD = ADD (x: r14|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  432  <|@ instruction rax|DWORD = ADD (x: r11|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  434  <|@ instruction stack:52|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  436  <|@ instruction r14|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  438  <|@ instruction r13|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  440  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4596932739975014766
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  390  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  392  <|@ instruction rsi|DWORD = SUB (x: rsi|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  394  <|@ instruction r9|DWORD = SHL rcx|DWORD size: DWORD <|@ <|@
      nr  396  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  398  <|@ instruction rbp|DWORD = SUB (x: rax|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  400  <|@ instruction stack:44|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  402  <|@ instruction stack:48|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  404  <|@ instruction rsi|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  406  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B22" 
    xhandlers
    flags 
    probability 4596339048911957912
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   92  <|@ instruction CMP rdx|DWORD y: 52 size: DWORD <|@ <|@
      nr   94  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B20" 
    xhandlers
    flags 
    probability 4596339048911957912
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   98  <|@ instruction CMP (x: rdx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  100  <|@ instruction BRANCH trueDestinationProbability: 0.0013467536149702752 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B21" 
    xhandlers
    flags 
    probability 4596329391303238956
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  162  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  164  <|@ instruction JUMP ~[] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" "B20" "B19" "B14" 
    successors 
    xhandlers
    flags 
    probability 4596339048911957912
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  168  <|@ instruction rcx|DWORD = MOVE input: int[52|0x34] <|@ <|@
      nr  170  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: rdx|DWORD) size: DWORD <|@ <|@
      nr  172  <|@ instruction r10|QWORD = SHR (x: r10|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  174  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  176  <|@ instruction rcx|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  178  <|@ st <@st|@reference-map: []
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:476) [bci: 170]
locals: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD, r8|DWORD] [] callTarget: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(int, long, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:170] <|@ <|@
      nr  180  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" 
    xhandlers
    flags 
    probability 4594941481985024202
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  494  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  496  <|@ instruction JUMP ~[] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B46" "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4598895958736044594
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr  500  <|@ instruction rsi|DWORD = DEC rsi|DWORD size: DWORD <|@ <|@
      nr  502  <|@ instruction JUMP ~[] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B33" "B177" 
    xhandlers
    flags 
    probability 4594890319253732366
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  308  <|@ instruction CMP r9|DWORD y: 52 size: DWORD <|@ <|@
      nr  310  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4594890319253732366
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  314  <|@ instruction rsi|QWORD = AND (x: r13|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr  316  <|@ instruction r11|QWORD = MOVE input: long[4503599627370496|0x10000000000000] <|@ <|@
      nr  318  <|@ instruction rsi|QWORD = OR (x: rsi|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  320  <|@ instruction r11|DWORD = MOVE input: int[1075|0x433] <|@ <|@
      nr  322  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  324  <|@ instruction rcx|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  326  <|@ instruction rsi|QWORD = SHR (x: rsi|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  328  <|@ instruction r11|DWORD = MOV rsi|QWORD size: DWORD <|@ <|@
      nr  330  <|@ instruction TEST (x: r14|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr  332  <|@ instruction BRANCH trueDestinationProbability: 0.007647163435888316 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4594846559898331785
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  340  <|@ instruction rcx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  342  <|@ instruction rbp|QWORD = SHR (x: rbp|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  344  <|@ instruction TEST (x: rbp|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr  346  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4594846559898331785
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  360  <|@ instruction rcx|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  362  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  364  <|@ instruction r11|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  366  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B50" 
    xhandlers
    flags 
    probability 4593843236232323993
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  472  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  474  <|@ instruction JUMP ~[] destination: B46 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B105" "B106" 
    xhandlers
    flags 
    probability 4591374071020439873
    begin_IR
      LIR
      nr 1256  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1258  <|@ instruction rax|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1260  <|@ instruction CMP (x: rdx|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr 1262  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B104 -> B105 falseDestination: B104 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B107" "B108" 
    xhandlers
    flags 
    probability 4591374071020439873
    begin_IR
      LIR
      nr 1292  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1294  <|@ instruction r11|DWORD = DEC r11|DWORD size: DWORD <|@ <|@
      nr 1296  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 1298  <|@ instruction BRANCH trueDestinationProbability: 0.010669521717460728 condition: = trueDestination: B106 -> B107 falseDestination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B114" 
    xhandlers
    flags 
    probability 4591302482260236360
    begin_IR
      LIR
      nr 1310  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1312  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1314  <|@ instruction JUMP ~[] destination: B108 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B172"
    from_bci -1
    to_bci -1
    predecessors "B170" 
    successors "B173" "B174" 
    xhandlers
    flags 
    probability 4591188184549903708
    begin_IR
      LIR
      nr 2184  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2186  <|@ instruction TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr 2188  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B172 -> B173 falseDestination: B172 -> B174 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B174"
    from_bci -1
    to_bci -1
    predecessors "B172" 
    successors "B175" "B176" 
    xhandlers
    flags 
    probability 4591188184549903708
    begin_IR
      LIR
      nr 2200  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2202  <|@ instruction CMP rcx|QWORD y: 1 size: QWORD <|@ <|@
      nr 2204  <|@ instruction BRANCH trueDestinationProbability: 0.40049867539348605 condition: < trueDestination: B174 -> B175 falseDestination: B174 -> B176 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B176"
    from_bci -1
    to_bci -1
    predecessors "B174" 
    successors 
    xhandlers
    flags 
    probability 4587982831218834509
    begin_IR
      LIR
      nr 2210  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2212  <|@ instruction rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2214  <|@ st <@st|@reference-map: []
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:775) [bci: 1498]
locals: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.roundup()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1498] <|@ <|@
      nr 2216  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B175"
    from_bci -1
    to_bci -1
    predecessors "B174" 
    successors 
    xhandlers
    flags 
    probability 4585386338626231915
    begin_IR
      LIR
      nr 2206  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2208  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B137" 
    xhandlers
    flags 
    probability 4582924406890760886
    begin_IR
      LIR
      nr 1638  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1640  <|@ instruction stack:68|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1642  <|@ instruction r10|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1644  <|@ instruction stack:76|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1646  <|@ instruction stack:80|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr 1648  <|@ instruction stack:48|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1650  <|@ instruction stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1652  <|@ instruction JUMP ~[] destination: B135 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" "B135" "B64" 
    successors "B138" "B141" 
    xhandlers
    flags 
    probability 4585327503373534833
    begin_IR
      LIR
      nr 1664  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1666  <|@ instruction rsi|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1668  <|@ instruction rdx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1670  <|@ instruction stack:72|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1672  <|@ st <@st|@reference-map: [stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1074]
locals: stack:40|QWORD[.] - stack:64|QWORD - - stack:28|DWORD - - - stack:84|DWORD stack:76|DWORD stack:48|DWORD stack:72|DWORD stack:56|DWORD stack:68|DWORD stack:48|DWORD - - - - - - - - - - - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|DWORD, rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.valueOfPow52(int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1074] <|@ <|@
      nr 1674  <|@ st <@st|@reference-map: [rax:0, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1077]
stack: Object[null] 
locals: stack:40|QWORD[.] - stack:64|QWORD - - stack:28|DWORD - - - stack:84|DWORD stack:76|DWORD stack:48|DWORD stack:72|DWORD stack:56|DWORD stack:68|DWORD stack:48|DWORD - - - - - - - - - - - - - - - - - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:1077] <|@ <|@
      nr 1676  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1678  <|@ instruction stack:104|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1680  <|@ st <@st|@reference-map: [stack:24, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:711) [bci: 1081]
locals: stack:40|QWORD[.] - stack:64|QWORD - - stack:28|DWORD - - - stack:84|DWORD stack:76|DWORD stack:48|DWORD stack:72|DWORD stack:56|DWORD stack:68|DWORD stack:48|DWORD - - - - - - - - - stack:104|QWORD[.] - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.getNormalizationBias()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1081] <|@ <|@
      nr 1682  <|@ instruction rsi|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1684  <|@ instruction rdx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1686  <|@ instruction stack:92|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1688  <|@ st <@st|@reference-map: [stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:712) [bci: 1090]
locals: stack:40|QWORD[.] - stack:64|QWORD - - stack:28|DWORD - - - stack:84|DWORD stack:76|DWORD stack:48|DWORD stack:72|DWORD stack:56|DWORD stack:68|DWORD stack:48|DWORD - - - - - - - - - - stack:92|DWORD - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.leftShift(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1090] <|@ <|@
      nr 1690  <|@ instruction stack:104|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1692  <|@ instruction rcx|DWORD = ADD (x: stack:92|DWORD, y: stack:76|DWORD) size: DWORD <|@ <|@
      nr 1694  <|@ instruction rsi|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr 1696  <|@ instruction rdx|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1698  <|@ st <@st|@reference-map: [stack:24, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:714) [bci: 1103]
locals: stack:40|QWORD[.] - - - - stack:28|DWORD - - - stack:84|DWORD - - stack:72|DWORD stack:56|DWORD stack:68|DWORD stack:48|DWORD - - - - - - - - - stack:104|QWORD[.] stack:92|DWORD - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD, rdx|DWORD, rcx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.valueOfMulPow52(long, int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1103] <|@ <|@
      nr 1700  <|@ instruction stack:64|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1702  <|@ st <@st|@reference-map: [stack:24, stack:64, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:714) [bci: 1106]
stack: Object[null] 
locals: stack:40|QWORD[.] - - - - stack:28|DWORD - - - stack:84|DWORD - - stack:72|DWORD stack:56|DWORD stack:68|DWORD stack:48|DWORD - - - - - - - - - stack:104|QWORD[.] stack:92|DWORD - - - - - - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:1106] <|@ <|@
      nr 1704  <|@ instruction rsi|DWORD = ADD (x: stack:92|DWORD, y: stack:68|DWORD) size: DWORD <|@ <|@
      nr 1706  <|@ instruction rdx|DWORD = INC rsi|DWORD size: DWORD <|@ <|@
      nr 1708  <|@ instruction rsi|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1710  <|@ st <@st|@reference-map: [stack:24, stack:64, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:715) [bci: 1119]
locals: stack:40|QWORD[.] - - - - stack:28|DWORD - - - stack:84|DWORD - - stack:72|DWORD stack:56|DWORD - - - - - - - - - - - stack:104|QWORD[.] stack:92|DWORD stack:64|QWORD[.] - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|DWORD, rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.valueOfPow52(int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1119] <|@ <|@
      nr 1712  <|@ instruction rsi|DWORD = ADD (x: stack:72|DWORD, y: stack:92|DWORD) size: DWORD <|@ <|@
      nr 1714  <|@ instruction rdx|DWORD = INC rsi|DWORD size: DWORD <|@ <|@
      nr 1716  <|@ instruction rsi|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr 1718  <|@ instruction stack:112|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1720  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:64, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:717) [bci: 1135]
locals: stack:40|QWORD[.] - - - - stack:28|DWORD - - - stack:84|DWORD - - - - - - - - - - - - - - - stack:104|QWORD[.] - stack:64|QWORD[.] stack:112|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|DWORD, rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.valueOfPow52(int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1135] <|@ <|@
      nr 1722  <|@ instruction stack:120|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1724  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24, stack:64, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:717) [bci: 1138]
stack: Object[null] 
locals: stack:40|QWORD[.] - - - - stack:28|DWORD - - - stack:84|DWORD - - - - - - - - - - - - - - - stack:104|QWORD[.] - stack:64|QWORD[.] stack:112|QWORD[.] - - - - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:1138] <|@ <|@
      nr 1726  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1728  <|@ instruction rdx|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1730  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24, stack:64, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:724) [bci: 1147]
locals: stack:40|QWORD[.] - - - - stack:28|DWORD - - - stack:84|DWORD - - - - - - - int[0|0x0] - - - - - - - stack:104|QWORD[.] - stack:64|QWORD[.] stack:112|QWORD[.] stack:120|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.quoRemIteration(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1147] <|@ <|@
      nr 1732  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1734  <|@ instruction rdx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1736  <|@ instruction stack:80|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1738  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24, stack:64, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:725) [bci: 1156]
locals: stack:40|QWORD[.] - - - - stack:28|DWORD - - - stack:84|DWORD - - - - - - - int[0|0x0] - - - - stack:80|DWORD - - stack:104|QWORD[.] - stack:64|QWORD[.] stack:112|QWORD[.] stack:120|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1156] <|@ <|@
      nr 1740  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 1742  <|@ instruction r10|DWORD = SETCC condition: < <|@ <|@
      nr 1744  <|@ instruction rsi|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1746  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1748  <|@ instruction rcx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1750  <|@ instruction stack:92|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1752  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24, stack:64, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:726) [bci: 1175]
locals: stack:40|QWORD[.] - - - - stack:28|DWORD - - - stack:84|DWORD - - - - - - - int[0|0x0] stack:92|DWORD - - - stack:80|DWORD - - stack:104|QWORD[.] - stack:64|QWORD[.] stack:112|QWORD[.] stack:120|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1175] <|@ <|@
      nr 1754  <|@ instruction r10|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr 1756  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 1758  <|@ instruction BRANCH trueDestinationProbability: 0.10979929161747348 condition: = trueDestination: B137 -> B138 falseDestination: B137 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B137" 
    successors "B142" 
    xhandlers
    flags 
    probability 4584760205312838425
    begin_IR
      LIR
      nr 1782  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1784  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1786  <|@ instruction JUMP ~[] destination: B141 -> B142 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" "B139" 
    successors "B143" "B144" 
    xhandlers
    flags 
    probability 4584920838097049953
    begin_IR
      LIR
      nr 1788  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1790  <|@ instruction rdx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr 1792  <|@ instruction CMP rax|DWORD y: 1 size: DWORD <|@ <|@
      nr 1794  <|@ instruction r11|DWORD = SETCC condition: < <|@ <|@
      nr 1796  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:8, stack:16, stack:24, stack:64, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1227]
locals: rsi|QWORD[.] - - - - stack:28|DWORD - - - stack:84|DWORD - - - - - - - int[0|0x0] stack:92|DWORD r11|DWORD - - r10|DWORD - - stack:104|QWORD[.] - stack:64|QWORD[.] stack:112|QWORD[.] stack:120|QWORD[.] - - - 
>@ <|@ instruction CMP [rdx|DWORD[.] * 8 + 12] y: 0 size: DWORD state [bci:1227] <|@ <|@
      nr 1798  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B142 -> B143 falseDestination: B142 -> B144 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B145" 
    xhandlers
    flags 
    probability 4584920838097049953
    begin_IR
      LIR
      nr 1822  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1824  <|@ instruction r10|DWORD = LEA [r10|DWORD + 48] size: DWORD <|@ <|@
      nr 1826  <|@ instruction MOV (x: [rdx|DWORD[.] * 8 + 16], y: r10|DWORD) size: WORD <|@ <|@
      nr 1828  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1830  <|@ instruction r11|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr 1832  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1834  <|@ instruction JUMP ~[] destination: B144 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B140" "B144" 
    successors "B146" "B147" 
    xhandlers
    flags 
    probability 4585327503373534833
    begin_IR
      LIR
      nr 1836  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1838  <|@ instruction stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1840  <|@ instruction TEST (x: rbp|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr 1842  <|@ instruction BRANCH trueDestinationProbability: 0.0448642266824085 condition: = trueDestination: B145 -> B146 falseDestination: B145 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B145" 
    successors "B148" "B149" 
    xhandlers
    flags 
    probability 4585095704165938451
    begin_IR
      LIR
      nr 1852  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1854  <|@ instruction CMP r11|DWORD y: -3 size: DWORD <|@ <|@
      nr 1856  <|@ instruction BRANCH trueDestinationProbability: 0.2735887927482489 condition: < trueDestination: B147 -> B148 falseDestination: B147 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B147" 
    successors "B150" "B151" 
    xhandlers
    flags 
    probability 4582826730232852371
    begin_IR
      LIR
      nr 1866  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1868  <|@ instruction CMP r11|DWORD y: 8 size: DWORD <|@ <|@
      nr 1870  <|@ instruction BRANCH trueDestinationProbability: 0.998298355076574 condition: < trueDestination: B149 -> B150 falseDestination: B149 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B149" 
    successors "B152" 
    xhandlers
    flags 
    probability 4582814530274557825
    begin_IR
      LIR
      nr 1872  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1874  <|@ instruction CMP rax|DWORD y: 1 size: DWORD <|@ <|@
      nr 1876  <|@ instruction rdx|DWORD = SETCC condition: < <|@ <|@
      nr 1878  <|@ instruction r8|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1880  <|@ instruction rdx|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1882  <|@ instruction JUMP ~[] destination: B150 -> B152 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B150" "B146" "B151" "B148" 
    successors "B153" 
    xhandlers
    flags 
    probability 4585327503373534833
    begin_IR
      LIR
      nr 1892  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1894  <|@ instruction rbx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1896  <|@ instruction rcx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1898  <|@ instruction r9|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1900  <|@ instruction stack:92|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1902  <|@ instruction rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1904  <|@ instruction r10|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1906  <|@ instruction JUMP ~[] destination: B152 -> B153 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B153" 
    successors "B155" "B158" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4603175615809548529
    begin_IR
      LIR
      nr 1914  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1916  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1918  <|@ instruction BRANCH trueDestinationProbability: 0.9936234534969387 condition: = trueDestination: B154 -> B155 falseDestination: B154 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B154" 
    successors "B156" "B157" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4603143730550235664
    begin_IR
      LIR
      nr 1920  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1922  <|@ st <@st|@reference-map: [rax:0, rbx:0, r10:0, stack:8, stack:24, stack:64, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1268]
locals: stack:40|QWORD[.] - - - - - - - - stack:84|DWORD - - - - - - - stack:92|DWORD int[0|0x0] int[0|0x0] - - - - - r10|QWORD[.] - rax|QWORD[.] Object[null] stack:120|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK [rbx|QWORD[.]] state [bci:1268] <|@ <|@
      nr 1924  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1926  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1928  <|@ instruction stack:112|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1930  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24, stack:64, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:745) [bci: 1282]
locals: stack:40|QWORD[.] - - - - - - - - stack:84|DWORD - - - - - - - stack:92|DWORD - - - - - - - stack:104|QWORD[.] - stack:64|QWORD[.] stack:112|QWORD[.] stack:120|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.quoRemIteration(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1282] <|@ <|@
      nr 1932  <|@ instruction rsi|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1934  <|@ instruction stack:80|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1936  <|@ st <@st|@reference-map: [stack:8, stack:24, stack:64, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:747) [bci: 1312]
locals: stack:40|QWORD[.] - - - - - - - - stack:84|DWORD - - - - - - - stack:92|DWORD - - - - stack:80|DWORD - - stack:104|QWORD[.] - stack:64|QWORD[.] - stack:120|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.multBy10()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1312] <|@ <|@
      nr 1938  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1940  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1942  <|@ instruction stack:112|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1944  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24, stack:64, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
locals: stack:40|QWORD[.] - - - - - - - - stack:84|DWORD - - - - - - - stack:92|DWORD - - - - stack:80|DWORD - - stack:104|QWORD[.] - stack:64|QWORD[.] stack:112|QWORD[.] stack:120|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1321] <|@ <|@
      nr 1946  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 1948  <|@ instruction r9|DWORD = SETCC condition: < <|@ <|@
      nr 1950  <|@ instruction rsi|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1952  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1954  <|@ instruction rcx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1956  <|@ instruction stack:72|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1958  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24, stack:64, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1340]
locals: stack:40|QWORD[.] - - - - - - - - stack:84|DWORD - - - - - - - stack:92|DWORD stack:72|DWORD - - - stack:80|DWORD - - stack:104|QWORD[.] - stack:64|QWORD[.] stack:112|QWORD[.] stack:120|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1340] <|@ <|@
      nr 1960  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1962  <|@ instruction rdx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr 1964  <|@ instruction r10|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1966  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:8, stack:16, stack:24, stack:64, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1343]
stack: rax|DWORD 
locals: rsi|QWORD[.] - - - - - - - - stack:84|DWORD - - - - - - - r10|DWORD stack:72|DWORD - - - stack:80|DWORD - - stack:104|QWORD[.] - stack:64|QWORD[.] stack:112|QWORD[.] stack:120|QWORD[.] - - - 
>@ <|@ instruction CMP (x: r10|DWORD, y: [rdx|DWORD[.] * 8 + 12]) size: DWORD state [bci:1343] <|@ <|@
      nr 1968  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B155 -> B156 falseDestination: B155 -> B157 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B156"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors "B153" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4603143730550235664
    begin_IR
      LIR
      nr 1970  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1972  <|@ instruction r11|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr 1974  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@40447647 encoding: base: 0 shift: 3 <|@ <|@
      nr 1976  <|@ instruction r11|DWORD = LEA [r11|DWORD + 48] size: DWORD <|@ <|@
      nr 1978  <|@ instruction MOV (x: [rdx|QWORD[.] + r10|DWORD * 2 + 16], y: r11|DWORD) size: WORD <|@ <|@
      nr 1980  <|@ instruction CMP rax|DWORD y: 1 size: DWORD <|@ <|@
      nr 1982  <|@ instruction rcx|DWORD = SETCC condition: < <|@ <|@
      nr 1984  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr 1986  <|@ instruction rbx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1988  <|@ instruction r9|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr 1990  <|@ instruction stack:92|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1992  <|@ instruction rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1994  <|@ instruction r10|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1996  <|@ instruction JUMP ~[] destination: B156 -> B153 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B152" "B156" 
    successors "B154" "B159" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4603466648196344439
    begin_IR
      LIR
      nr 1908  <|@ instruction [] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr 1910  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1912  <|@ instruction BRANCH trueDestinationProbability: 0.9449992797810535 condition: = trueDestination: B153 -> B154 falseDestination: B153 -> B159 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B159"
    from_bci -1
    to_bci -1
    predecessors "B153" 
    successors "B160" 
    xhandlers
    flags 
    probability 4584817339224528992
    begin_IR
      LIR
      nr 2024  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2026  <|@ instruction r10|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 2028  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2030  <|@ instruction JUMP ~[] destination: B159 -> B160 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B160"
    from_bci -1
    to_bci -1
    predecessors "B159" "B158" 
    successors "B161" "B162" 
    xhandlers
    flags 
    probability 4585327503373534834
    begin_IR
      LIR
      nr 2032  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2034  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr 2036  <|@ instruction BRANCH trueDestinationProbability: 0.045633359559402044 condition: = trueDestination: B160 -> B161 falseDestination: B160 -> B162 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B162"
    from_bci -1
    to_bci -1
    predecessors "B160" 
    successors "B163" "B164" 
    xhandlers
    flags 
    probability 4585091730300687514
    begin_IR
      LIR
      nr 2052  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2054  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 2056  <|@ instruction BRANCH trueDestinationProbability: 0.10346248969497114 condition: = trueDestination: B162 -> B163 falseDestination: B162 -> B164 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B164"
    from_bci -1
    to_bci -1
    predecessors "B162" 
    successors "B165" 
    xhandlers
    flags 
    probability 4584498711640198423
    begin_IR
      LIR
      nr 2072  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2074  <|@ instruction stack:80|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 2076  <|@ instruction stack:72|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 2078  <|@ instruction stack:92|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 2080  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2082  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 2084  <|@ st <@st|@reference-map: [stack:8, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:753) [bci: 1385]
locals: stack:40|QWORD[.] - - - - - - - - stack:84|DWORD - - - - - - - stack:92|DWORD stack:72|DWORD stack:80|DWORD - - - - - - - - - stack:120|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.leftShift(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1385] <|@ <|@
      nr 2086  <|@ st <@st|@reference-map: [rax:0, stack:8, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:753) [bci: 1388]
stack: Object[null] 
locals: stack:40|QWORD[.] - - - - - - - - stack:84|DWORD - - - - - - - stack:92|DWORD stack:72|DWORD stack:80|DWORD - - - - - - - - - stack:120|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:1388] <|@ <|@
      nr 2088  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2090  <|@ instruction rdx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2092  <|@ instruction stack:120|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2094  <|@ st <@st|@reference-map: [stack:8, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:754) [bci: 1394]
locals: stack:40|QWORD[.] - - - - - - - - stack:84|DWORD - - - - - - - stack:92|DWORD stack:72|DWORD stack:80|DWORD - - - - - - - stack:120|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1394] <|@ <|@
      nr 2096  <|@ instruction rsi|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr 2098  <|@ instruction rax|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2100  <|@ instruction stack:104|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 2102  <|@ instruction JUMP ~[] destination: B164 -> B165 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B165"
    from_bci -1
    to_bci -1
    predecessors "B164" "B161" "B163" 
    successors "B166" "B167" 
    xhandlers
    flags 
    probability 4585327503373534833
    begin_IR
      LIR
      nr 2104  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 2106  <|@ instruction rdx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[FDBigInteger@241972498] <|@ <|@
      nr 2108  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2110  <|@ st <@st|@reference-map: [stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1412]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] - - - - - - - - stack:84|DWORD - - - - - - - stack:92|DWORD stack:72|DWORD stack:80|DWORD stack:104|QWORD - - - - - - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1412] <|@ <|@
      nr 2112  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 2114  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B165 -> B166 falseDestination: B165 -> B167 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B167"
    from_bci -1
    to_bci -1
    predecessors "B165" 
    successors "B168" 
    xhandlers
    flags 
    probability 4585327503373534833
    begin_IR
      LIR
      nr 2132  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2134  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2136  <|@ instruction MOVB (x: [rsi|QWORD[.] + 25], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 2138  <|@ instruction rcx|QWORD = MOVE stack:104|QWORD moveKind: QWORD <|@ <|@
      nr 2140  <|@ instruction r9|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr 2142  <|@ instruction r8|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr 2144  <|@ instruction r11|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 2146  <|@ instruction r10|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr 2148  <|@ instruction rbp|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2150  <|@ instruction JUMP ~[] destination: B167 -> B168 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B137" 
    xhandlers
    flags 
    probability 4577285656086886675
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  660  <|@ instruction stack:68|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  662  <|@ instruction r10|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  664  <|@ instruction stack:76|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  666  <|@ instruction stack:80|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  668  <|@ instruction stack:48|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  670  <|@ instruction stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  672  <|@ instruction JUMP ~[] destination: B64 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B147" 
    successors "B152" 
    xhandlers
    flags 
    probability 4576554136652772647
    begin_IR
      LIR
      nr 1858  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1860  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1862  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1864  <|@ instruction JUMP ~[] destination: B148 -> B152 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B119" 
    xhandlers
    flags 
    probability 4574907670107426078
    begin_IR
      LIR
      nr 1362  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1364  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1366  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1368  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1370  <|@ instruction JUMP ~[] destination: B112 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B137" 
    successors "B139" "B140" 
    xhandlers
    flags 
    probability 4571188406639254207
    begin_IR
      LIR
      nr 1760  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1762  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1764  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1766  <|@ instruction CMP rax|DWORD y: 1 size: DWORD <|@ <|@
      nr 1768  <|@ instruction BRANCH trueDestinationProbability: 0.2831541218637993 condition: < trueDestination: B138 -> B139 falseDestination: B138 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B138" 
    successors "B145" 
    xhandlers
    flags 
    probability 4568653066950070531
    begin_IR
      LIR
      nr 1774  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1776  <|@ instruction r11|DWORD = DEC stack:84|DWORD size: DWORD <|@ <|@
      nr 1778  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1780  <|@ instruction JUMP ~[] destination: B140 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B158"
    from_bci -1
    to_bci -1
    predecessors "B154" 
    successors "B160" 
    xhandlers
    flags 
    probability 4570309048910405919
    begin_IR
      LIR
      nr 2016  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2018  <|@ instruction r10|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 2020  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2022  <|@ instruction JUMP ~[] destination: B158 -> B160 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B163"
    from_bci -1
    to_bci -1
    predecessors "B162" 
    successors "B165" 
    xhandlers
    flags 
    probability 4570309048910405860
    begin_IR
      LIR
      nr 2058  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2060  <|@ instruction rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2062  <|@ instruction stack:104|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2064  <|@ instruction stack:80|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 2066  <|@ instruction stack:72|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 2068  <|@ instruction stack:92|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 2070  <|@ instruction JUMP ~[] destination: B163 -> B165 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B161"
    from_bci -1
    to_bci -1
    predecessors "B160" 
    successors "B165" 
    xhandlers
    flags 
    probability 4565187561230056182
    begin_IR
      LIR
      nr 2038  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2040  <|@ instruction rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2042  <|@ instruction stack:104|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2044  <|@ instruction stack:80|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 2046  <|@ instruction stack:72|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 2048  <|@ instruction stack:92|DWORD = MOVE r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 2050  <|@ instruction JUMP ~[] destination: B161 -> B165 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B145" 
    successors "B152" 
    xhandlers
    flags 
    probability 4565060397542026164
    begin_IR
      LIR
      nr 1844  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1846  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1848  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1850  <|@ instruction JUMP ~[] destination: B146 -> B152 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B38" 
    xhandlers
    flags 
    probability 4563244020390216355
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B34 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B138" 
    successors "B142" 
    xhandlers
    flags 
    probability 4562783071993710838
    begin_IR
      LIR
      nr 1770  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1772  <|@ instruction JUMP ~[] destination: B139 -> B142 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B119" 
    xhandlers
    flags 
    probability 4562224503551966794
    begin_IR
      LIR
      nr 1300  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1302  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1304  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1306  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1308  <|@ instruction JUMP ~[] destination: B107 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B28" 
    xhandlers
    flags 
    probability 4560165896057405122
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  208  <|@ instruction rax|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B25 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B72" "B100" 
    xhandlers
    flags 
    probability 4559646296614268741
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  748  <|@ instruction stack:52|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  750  <|@ instruction stack:88|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  752  <|@ instruction stack:92|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  754  <|@ instruction stack:68|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  756  <|@ instruction stack:72|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  758  <|@ instruction stack:76|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  760  <|@ instruction stack:48|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  762  <|@ instruction stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  764  <|@ instruction rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  766  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  768  <|@ instruction CMP rcx|DWORD y: 32 size: DWORD <|@ <|@
      nr  770  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B71 -> B72 falseDestination: B71 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B73" "B99" 
    xhandlers
    flags 
    probability 4559646296614268741
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  774  <|@ instruction CMP stack:48|DWORD y: 14 size: DWORD <|@ <|@
      nr  776  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B72 -> B73 falseDestination: B72 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B74" "B98" 
    xhandlers
    flags 
    probability 4559646296614268741
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  780  <|@ instruction CMP stack:56|DWORD y: 14 size: DWORD <|@ <|@
      nr  782  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B73 -> B74 falseDestination: B73 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4559646296614268741
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  786  <|@ st <@st|@reference-map: [rsi:0, r14:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365]
stack: stack:52|DWORD stack:92|DWORD 
locals: rsi|QWORD[.] - stack:64|QWORD - - rbp|DWORD - - - stack:84|DWORD stack:76|DWORD stack:48|DWORD stack:72|DWORD stack:56|DWORD stack:68|DWORD stack:48|DWORD - - - - - - - stack:88|DWORD - - - - - - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r14|DWORD[.] * 8] state [bci:365] <|@ <|@
      nr  788  <|@ instruction TEST (x: rbp|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  790  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4559646296614268741
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  812  <|@ instruction CMP stack:84|DWORD y: -3 size: DWORD <|@ <|@
      nr  814  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B97" 
    xhandlers
    flags 
    probability 4559646296614268741
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  836  <|@ instruction CMP stack:84|DWORD y: 8 size: DWORD <|@ <|@
      nr  838  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B78 -> B79 falseDestination: B78 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B80" "B81" 
    xhandlers
    flags 
    probability 4559646296614268741
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  842  <|@ instruction r13|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  844  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[14]{1, 5, 25, 125, 625, ...}] <|@ <|@
      nr  846  <|@ instruction rdx|DWORD = MOV [rax|QWORD[.] + r13|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  848  <|@ instruction rcx|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  850  <|@ instruction r10|DWORD = SHL (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  852  <|@ instruction rcx|DWORD = SHL r10|DWORD y: 3 size: DWORD <|@ <|@
      nr  854  <|@ instruction r10|DWORD = SHL r10|DWORD size: DWORD <|@ <|@
      nr  856  <|@ instruction r10|DWORD = ADD (x: rcx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  858  <|@ instruction rcx|DWORD = SHL r10|DWORD y: 3 size: DWORD <|@ <|@
      nr  860  <|@ instruction r11|DWORD = SHL r10|DWORD size: DWORD <|@ <|@
      nr  862  <|@ instruction r11|DWORD = ADD (x: rcx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  864  <|@ instruction CMP r11|DWORD y: 1 size: DWORD <|@ <|@
      nr  866  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B79 -> B80 falseDestination: B79 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" "B83" 
    xhandlers
    flags 
    probability 4559646296614268741
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  886  <|@ instruction CMP [r14|DWORD[.] * 8 + 12] y: 2 size: DWORD <|@ <|@
      nr  888  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B81 -> B82 falseDestination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    probability 4559646296614268741
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  908  <|@ instruction r9|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr  910  <|@ instruction rax|DWORD = MOV [rax|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  912  <|@ instruction rcx|DWORD = MOV stack:64|QWORD size: DWORD <|@ <|@
      nr  914  <|@ instruction rdx|DWORD = IMUL (x: rcx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  916  <|@ instruction rcx|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  918  <|@ instruction rdx|DWORD = SHL (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  920  <|@ instruction rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  922  <|@ instruction r8|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  924  <|@ instruction rax|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  926  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ rax|DWORD size: DWORD <|@ <|@
      nr  928  <|@ st <@st|@reference-map: [rsi:0, r14:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365]
stack: stack:52|DWORD stack:92|DWORD 
locals: rsi|QWORD[.] - stack:64|QWORD - - rbp|DWORD - - - stack:84|DWORD stack:76|DWORD r13|DWORD stack:72|DWORD r9|DWORD stack:68|DWORD r13|DWORD - - - - - - - stack:88|DWORD - - - - - - - - - 
>@ <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: r8|DWORD) size: DWORD state [bci:365] <|@ <|@
      nr  930  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  932  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" "B87" 
    xhandlers
    flags 
    probability 4559646296614268741
    begin_IR
      LIR
      nr  950  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  952  <|@ instruction rcx|DWORD = SHL rdx|DWORD y: 3 size: DWORD <|@ <|@
      nr  954  <|@ instruction rdx|DWORD = SHL rdx|DWORD size: DWORD <|@ <|@
      nr  956  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  958  <|@ instruction CMP (x: r10|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  960  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    probability 4559646296614268741
    begin_IR
      LIR
      nr  978  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  980  <|@ instruction rdx|DWORD = SHL r8|DWORD y: 3 size: DWORD <|@ <|@
      nr  982  <|@ instruction rbx|DWORD = SHL r8|DWORD size: DWORD <|@ <|@
      nr  984  <|@ instruction rbx|DWORD = ADD (x: rdx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  986  <|@ instruction rdx|DWORD = ADD (x: rcx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  988  <|@ instruction CMP (x: rdx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  990  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B87 -> B88 falseDestination: B87 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" "B95" 
    xhandlers
    flags 
    probability 4559646296614268741
    begin_IR
      LIR
      nr 1008  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1010  <|@ instruction rax|DWORD = LEA [rax|DWORD + 48] size: DWORD <|@ <|@
      nr 1012  <|@ instruction MOV (x: [r14|DWORD[.] * 8 + 16], y: rax|DWORD) size: WORD <|@ <|@
      nr 1014  <|@ instruction rax|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1016  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ rax|DWORD size: DWORD <|@ <|@
      nr 1018  <|@ st <@st|@reference-map: [rsi:0, r14:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 552]
locals: rsi|QWORD[.] - - - - rbp|DWORD - - - stack:84|DWORD - - - - - - - int[1|0x1] int[0|0x0] int[0|0x0] - - - - - rcx|DWORD r8|DWORD r10|DWORD rbx|DWORD - - - - 
>@ <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: r8|DWORD) size: DWORD state [bci:552] <|@ <|@
      nr 1020  <|@ instruction r9|DWORD = SHL rdx|DWORD y: 3 size: DWORD <|@ <|@
      nr 1022  <|@ instruction rdx|DWORD = SHL rdx|DWORD size: DWORD <|@ <|@
      nr 1024  <|@ instruction r9|DWORD = ADD (x: r9|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1026  <|@ instruction CMP (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1028  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B89 -> B90 falseDestination: B89 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B91" "B92" 
    xhandlers
    flags 
    probability 4559646296614268741
    begin_IR
      LIR
      nr 1030  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1032  <|@ instruction r11|DWORD = ADD (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1034  <|@ instruction CMP (x: r11|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr 1036  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B90 -> B91 falseDestination: B90 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B93" "B94" 
    xhandlers
    flags 
    probability 4559646296614268741
    begin_IR
      LIR
      nr 1048  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1050  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1052  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B92 -> B93 falseDestination: B92 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B168" 
    xhandlers
    flags 
    probability 4559646296614268741
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1066  <|@ instruction r10|DWORD = LEA [rax|DWORD + 48] size: DWORD <|@ <|@
      nr 1068  <|@ instruction MOV (x: [r14|DWORD[.] * 8 + 18], y: r10|DWORD) size: WORD <|@ <|@
      nr 1070  <|@ instruction r9|DWORD = SHL r9|DWORD size: DWORD <|@ <|@
      nr 1072  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr 1074  <|@ instruction rcx|QWORD = MOVSXD r9|DWORD size: QWORD <|@ <|@
      nr 1076  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1078  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1080  <|@ instruction r11|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr 1082  <|@ instruction r10|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr 1084  <|@ instruction rbp|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1086  <|@ instruction JUMP ~[] destination: B94 -> B168 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B28" 
    xhandlers
    flags 
    probability 4555402587703614778
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   66  <|@ instruction rax|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   68  <|@ instruction JUMP ~[] destination: B7 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4553580319308306455
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  104  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction r11|DWORD = SUB (x: rdx|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction r11|DWORD = DEC r11|DWORD size: DWORD <|@ <|@
      nr  110  <|@ instruction CMP r11|DWORD y: 2 size: DWORD <|@ <|@
      nr  112  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B19" 
    xhandlers
    flags 
    probability 4549076719680935959
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  122  <|@ instruction r9|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:sun.misc.FloatingDecimal$BinaryToASCIIBuffer] <|@ <|@
      nr  124  <|@ instruction r9|DWORD[.] = MOV [r9|QWORD[.] + 104] size: DWORD <|@ <|@
      nr  126  <|@ st <@st|@reference-map: [rsi:0, r9:0]
live-base-pointers: []
java.lang.Math.max(Math.java:1252) [bci: 10]
stack: int[0|0x0] 
locals: - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 74]
locals: rsi|QWORD[.] rdx|DWORD r10|QWORD - r8|DWORD rbp|DWORD rbx|DWORD rdi|DWORD - - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction rcx|DWORD = MOV [r9|DWORD[.] * 8 + 12] size: DWORD state [bci:10, 74] <|@ <|@
      nr  128  <|@ instruction CMP (x: rcx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  130  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B21" 
    xhandlers
    flags 
    probability 4544573120053565463
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  156  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  158  <|@ instruction JUMP ~[] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B119" 
    xhandlers
    flags 
    probability 4549337389257036309
    begin_IR
      LIR
      nr 1416  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1418  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1420  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1422  <|@ instruction JUMP ~[] destination: B118 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B28" 
    xhandlers
    flags 
    probability 4549078280250449777
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B3 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 4549076719680935959
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  116  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  118  <|@ instruction JUMP ~[] destination: B14 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4544573120053565463
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  134  <|@ instruction CMP (x: rcx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  136  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B21" 
    xhandlers
    flags 
    probability 4544573120053565463
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  140  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@40447647 encoding: base: 0 shift: 3 <|@ <|@
      nr  142  <|@ instruction r8|DWORD = MOV [r9|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  144  <|@ instruction JUMP ~[] destination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B28" 
    xhandlers
    flags 
    probability 4542408038045123131
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  220  <|@ instruction rax|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  222  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" "B66" 
    xhandlers
    flags 
    probability 4541371596739487840
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  586  <|@ instruction stack:68|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  588  <|@ instruction stack:72|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  590  <|@ instruction stack:76|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  592  <|@ instruction stack:80|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  594  <|@ instruction r9|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  596  <|@ instruction r13|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  598  <|@ instruction stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  600  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[27]{0, 3, 5, 7, 10, ...}] <|@ <|@
      nr  602  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  604  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  606  <|@ instruction r10|DWORD = ADD (x: stack:48|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  608  <|@ instruction CMP stack:80|DWORD y: 27 size: DWORD <|@ <|@
      nr  610  <|@ instruction BRANCH trueDestinationProbability: 0.9999471523948773 condition: < trueDestination: B59 -> B60 falseDestination: B59 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" 
    xhandlers
    flags 
    probability 4541371266612549087
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  614  <|@ instruction rbx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  616  <|@ instruction rdx|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  618  <|@ instruction r10|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  620  <|@ instruction rax|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  622  <|@ instruction r14|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr  624  <|@ instruction rdi|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  626  <|@ instruction rcx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  628  <|@ instruction rsi|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  630  <|@ instruction r13|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  632  <|@ instruction r11|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  634  <|@ instruction r9|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  636  <|@ instruction JUMP ~[] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B149" 
    successors "B152" 
    xhandlers
    flags 
    probability 4541371203408897121
    begin_IR
      LIR
      nr 1884  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1886  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1888  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1890  <|@ instruction JUMP ~[] destination: B151 -> B152 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B67" 
    xhandlers
    flags 
    probability 4541371156570236319
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  564  <|@ instruction stack:68|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  566  <|@ instruction stack:72|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  568  <|@ instruction stack:76|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  570  <|@ instruction stack:80|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  572  <|@ instruction r9|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  574  <|@ instruction r13|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  576  <|@ instruction stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  578  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  580  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  582  <|@ instruction JUMP ~[] destination: B58 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B58" 
    successors "B68" "B136" 
    xhandlers
    flags 
    probability 4541371486697175072
    begin_IR
      LIR
      nr  698  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  700  <|@ instruction CMP rbx|DWORD y: 64 size: DWORD <|@ <|@
      nr  702  <|@ instruction BRANCH trueDestinationProbability: 0.9867185711014427 condition: < trueDestination: B67 -> B68 falseDestination: B67 -> B136 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B69" 
    xhandlers
    flags 
    probability 4541288522100830908
    begin_IR
      LIR
      nr  704  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  706  <|@ instruction r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  708  <|@ instruction r10|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  710  <|@ instruction rax|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  712  <|@ instruction r14|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr  714  <|@ instruction rdi|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  716  <|@ instruction r11|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  718  <|@ instruction rsi|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  720  <|@ instruction r13|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  722  <|@ instruction r9|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  724  <|@ instruction JUMP ~[] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4541371046566689324
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  528  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B137" 
    xhandlers
    flags 
    probability 4513412961163892986
    begin_IR
      LIR
      nr 1654  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1656  <|@ instruction r10|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr 1658  <|@ instruction stack:48|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1660  <|@ instruction r13|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1662  <|@ instruction JUMP ~[] destination: B136 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B67" 
    xhandlers
    flags 
    probability 4477483229743432929
    begin_IR
      LIR
      nr  692  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  694  <|@ instruction rbx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  696  <|@ instruction JUMP ~[] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1106  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1108  <|@ instruction r10|DWORD = MOVE input: int[-278803|0xfffffffffffbbeed] <|@ <|@
      nr 1110  <|@ instruction rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr 1112  <|@ instruction rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr 1114  <|@ instruction r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1116  <|@ instruction rcx|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr 1118  <|@ instruction r13|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1120  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1122  <|@ instruction JUMP ~[] destination: B97 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B105" "B100" "B99" "B98" "B75" "B133" "B132" "B77" "B110" "B80" "B97" "B82" "B84" "B86" "B88" 
    successors 
    xhandlers
    flags 
    probability 2372834053670830080
    begin_IR
      LIR
      nr 1630  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1632  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1634  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1636  <|@ st <@st|@reference-map: [r14:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365]
stack: rdx|DWORD r8|DWORD 
locals: r14|QWORD[.] - stack:64|QWORD - - rbp|DWORD - - - stack:84|DWORD stack:76|DWORD r13|DWORD stack:72|DWORD rcx|DWORD stack:68|DWORD r13|DWORD - - - - - - - rbx|DWORD - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:365] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1054  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1056  <|@ instruction r11|DWORD = MOVE input: int[-282387|0xfffffffffffbb0ed] <|@ <|@
      nr 1058  <|@ instruction r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr 1060  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1062  <|@ instruction JUMP ~[] destination: B93 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B91" "B95" "B93" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1098  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1100  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1102  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1104  <|@ st <@st|@reference-map: [r14:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 552]
locals: r14|QWORD[.] - - - - rbp|DWORD - - - r9|DWORD - - - - - - - int[1|0x1] int[0|0x0] int[0|0x0] - - - - - rcx|DWORD r8|DWORD r10|DWORD rbx|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:552] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1038  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1040  <|@ instruction r11|DWORD = MOVE input: int[-279571|0xfffffffffffbbbed] <|@ <|@
      nr 1042  <|@ instruction r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr 1044  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1046  <|@ instruction JUMP ~[] destination: B91 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  936  <|@ instruction r10|DWORD = MOVE input: int[-273427|0xfffffffffffbd3ed] <|@ <|@
      nr  938  <|@ instruction rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  940  <|@ instruction rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr  942  <|@ instruction r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr  944  <|@ instruction rcx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  946  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  948  <|@ instruction JUMP ~[] destination: B84 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  818  <|@ instruction r10|DWORD = MOVE input: int[-278547|0xfffffffffffbbfed] <|@ <|@
      nr  820  <|@ instruction rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  822  <|@ instruction rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr  824  <|@ instruction r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr  826  <|@ instruction rcx|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr  828  <|@ instruction r13|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  830  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  832  <|@ instruction JUMP ~[] destination: B77 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  870  <|@ instruction r10|DWORD = MOVE input: int[-279059|0xfffffffffffbbded] <|@ <|@
      nr  872  <|@ instruction rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  874  <|@ instruction rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr  876  <|@ instruction r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr  878  <|@ instruction rcx|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr  880  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  882  <|@ instruction JUMP ~[] destination: B80 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  794  <|@ instruction r10|DWORD = MOVE input: int[-278291|0xfffffffffffbc0ed] <|@ <|@
      nr  796  <|@ instruction rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  798  <|@ instruction rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr  800  <|@ instruction r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr  802  <|@ instruction rcx|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr  804  <|@ instruction r13|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  806  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  808  <|@ instruction JUMP ~[] destination: B75 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1124  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1126  <|@ instruction r10|DWORD = MOVE input: int[-270875|0xfffffffffffbdde5] <|@ <|@
      nr 1128  <|@ instruction rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr 1130  <|@ instruction rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr 1132  <|@ instruction r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1134  <|@ instruction rcx|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr 1136  <|@ instruction r13|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1138  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1140  <|@ instruction JUMP ~[] destination: B98 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1142  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1144  <|@ instruction r10|DWORD = MOVE input: int[-268827|0xfffffffffffbe5e5] <|@ <|@
      nr 1146  <|@ instruction rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr 1148  <|@ instruction rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr 1150  <|@ instruction r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1152  <|@ instruction rcx|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr 1154  <|@ instruction r13|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1156  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1158  <|@ instruction JUMP ~[] destination: B99 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1162  <|@ instruction r10|DWORD = MOVE input: int[-268051|0xfffffffffffbe8ed] <|@ <|@
      nr 1164  <|@ instruction rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr 1166  <|@ instruction rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr 1168  <|@ instruction r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1170  <|@ instruction rcx|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr 1172  <|@ instruction r13|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1174  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1176  <|@ instruction JUMP ~[] destination: B100 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  676  <|@ instruction rcx|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction r13|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  680  <|@ instruction stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  682  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  684  <|@ instruction r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  686  <|@ instruction MOV [r15|QWORD + 668] y: -266267 size: DWORD <|@ <|@
      nr  688  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  690  <|@ st <@st|@reference-map: [r14:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:591) [bci: 330]
stack: r8|DWORD rdx|DWORD 
locals: r14|QWORD[.] - r10|QWORD - - rbp|DWORD - - - stack:84|DWORD r9|DWORD r13|DWORD rax|DWORD rcx|DWORD rsi|DWORD r13|DWORD - - - - - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:330] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1430  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1432  <|@ instruction r14|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1434  <|@ instruction rdx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@464852764] <|@ <|@
      nr 1436  <|@ instruction MOV [r15|QWORD + 668] y: -330763 size: DWORD <|@ <|@
      nr 1438  <|@ instruction MOV (x: [r15|QWORD + 680], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr 1440  <|@ st <@st|@reference-map: [r14:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
locals: r14|QWORD[.] - - - - - - - - r11|DWORD - - - - - - - r10|DWORD r9|DWORD rdi|DWORD - - - - - r8|QWORD - r13|QWORD - rcx|QWORD - rbx|QWORD - 
>@ <|@ instruction DEOPT info [bci:914] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  890  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  892  <|@ instruction r10|DWORD = MOVE input: int[-320027|0xfffffffffffb1de5] <|@ <|@
      nr  894  <|@ instruction rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  896  <|@ instruction rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr  898  <|@ instruction r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr  900  <|@ instruction rcx|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr  902  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  904  <|@ instruction JUMP ~[] destination: B82 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B173"
    from_bci -1
    to_bci -1
    predecessors "B172" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2190  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2192  <|@ instruction r14|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2194  <|@ instruction MOV [r15|QWORD + 668] y: -316947 size: DWORD <|@ <|@
      nr 2196  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2198  <|@ st <@st|@reference-map: [r14:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:766) [bci: 1445]
locals: r14|QWORD[.] - - - - - - - - r10|DWORD - - - - - - - r11|DWORD r8|DWORD r9|DWORD long[0|0x0] - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:1445] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  184  <|@ instruction r11|DWORD = MOVE input: int[-258579|0xfffffffffffc0ded] <|@ <|@
      nr  186  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  188  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B18" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  194  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr  196  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  198  <|@ st <@st|@reference-map: [r14:0]
live-base-pointers: []
java.lang.Math.max(Math.java:1252) [bci: 10]
stack: int[0|0x0] 
locals: - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 74]
locals: r14|QWORD[.] rdx|DWORD r10|QWORD - r8|DWORD rbp|DWORD rbx|DWORD rdi|DWORD - - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:10, 74] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1608  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1610  <|@ instruction stack:68|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1612  <|@ instruction stack:72|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1614  <|@ instruction stack:76|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1616  <|@ instruction rcx|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1618  <|@ instruction r13|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1620  <|@ instruction stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1622  <|@ instruction r14|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1624  <|@ instruction r10|DWORD = MOVE input: int[-282651|0xfffffffffffbafe5] <|@ <|@
      nr 1626  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1628  <|@ instruction JUMP ~[] destination: B133 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B178" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  286  <|@ instruction r11|DWORD = MOVE input: int[-317459|0xfffffffffffb27ed] <|@ <|@
      nr  288  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  290  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  292  <|@ instruction JUMP ~[] destination: B30 -> B178 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B178"
    from_bci -1
    to_bci -1
    predecessors "B30" "B177" "B36" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 2228  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2230  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr 2232  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2234  <|@ st <@st|@reference-map: [r14:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174]
locals: r14|QWORD[.] rdx|DWORD r10|QWORD - r8|DWORD rbp|DWORD rbx|DWORD rdi|DWORD rax|DWORD - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:174] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B157"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1998  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2000  <|@ instruction r9|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr 2002  <|@ instruction r8|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2004  <|@ instruction r11|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr 2006  <|@ instruction rcx|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr 2008  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2010  <|@ instruction MOV [r15|QWORD + 668] y: -306715 size: DWORD <|@ <|@
      nr 2012  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2014  <|@ st <@st|@reference-map: [r8:0, r14:0, stack:8, stack:24, stack:64]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1343]
stack: rax|DWORD 
locals: r14|QWORD[.] - - - - - - - - rcx|DWORD - - - - - - - r10|DWORD r9|DWORD - - - r11|DWORD - - stack:104|QWORD[.] - stack:64|QWORD[.] r8|QWORD[.] stack:120|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:1343] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B166"
    from_bci -1
    to_bci -1
    predecessors "B165" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2118  <|@ instruction r10|QWORD = MOVE stack:104|QWORD moveKind: QWORD <|@ <|@
      nr 2120  <|@ instruction rcx|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr 2122  <|@ instruction r9|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr 2124  <|@ instruction r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2126  <|@ instruction MOV [r15|QWORD + 668] y: -331283 size: DWORD <|@ <|@
      nr 2128  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2130  <|@ st <@st|@reference-map: [r14:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1415]
stack: r14|QWORD[.] int[0|0x0] 
locals: r14|QWORD[.] - - - - - - - - stack:84|DWORD - - - - - - - stack:92|DWORD r9|DWORD rcx|DWORD r10|QWORD - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:1415] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1800  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1802  <|@ instruction rcx|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1804  <|@ instruction r8|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1806  <|@ instruction rbx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1808  <|@ instruction r9|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1810  <|@ instruction rax|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1812  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1814  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1816  <|@ instruction MOV [r15|QWORD + 668] y: -322587 size: DWORD <|@ <|@
      nr 1818  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1820  <|@ st <@st|@reference-map: [rax:0, rbx:0, r8:0, r9:0, r14:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1227]
locals: r14|QWORD[.] - - - - rbp|DWORD - - - stack:84|DWORD - - - - - - - int[0|0x0] rcx|DWORD r11|DWORD - - r10|DWORD - - rax|QWORD[.] - r9|QWORD[.] rbx|QWORD[.] r8|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:1227] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1548  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1550  <|@ instruction r14|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1552  <|@ instruction MOV [r15|QWORD + 668] y: -333083 size: DWORD <|@ <|@
      nr 1554  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1556  <|@ st <@st|@reference-map: [r14:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
locals: r14|QWORD[.] - - - - - - - - r11|DWORD - - - - - - - r10|DWORD int[0|0x0] int[0|0x0] - - - - - rcx|QWORD - r13|QWORD - rdi|QWORD - rbx|QWORD - 
>@ <|@ instruction DEOPT info [bci:914] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B177"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B178" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2218  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2220  <|@ instruction r11|DWORD = MOVE input: int[-317715|0xfffffffffffb26ed] <|@ <|@
      nr 2222  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 2224  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2226  <|@ instruction JUMP ~[] destination: B177 -> B178 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1394  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1396  <|@ instruction r14|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1398  <|@ instruction rbp|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1400  <|@ instruction MOV [r15|QWORD + 668] y: -298003 size: DWORD <|@ <|@
      nr 1402  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1404  <|@ st <@st|@reference-map: [r14:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 889]
locals: r14|QWORD[.] - - - - rbp|DWORD - - - r11|DWORD - - - - - - - r10|DWORD r9|DWORD rdi|DWORD - - - - - r8|QWORD - r13|QWORD - rcx|QWORD - rbx|QWORD - 
>@ <|@ instruction DEOPT info [bci:889] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1088  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1090  <|@ instruction r11|DWORD = MOVE input: int[-279315|0xfffffffffffbbced] <|@ <|@
      nr 1092  <|@ instruction r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr 1094  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1096  <|@ instruction JUMP ~[] destination: B95 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1586  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1588  <|@ instruction stack:68|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1590  <|@ instruction stack:72|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1592  <|@ instruction stack:76|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1594  <|@ instruction rcx|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1596  <|@ instruction r13|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1598  <|@ instruction stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1600  <|@ instruction r14|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1602  <|@ instruction r10|DWORD = MOVE input: int[-284699|0xfffffffffffba7e5] <|@ <|@
      nr 1604  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1606  <|@ instruction JUMP ~[] destination: B132 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  962  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  964  <|@ instruction r10|DWORD = MOVE input: int[-272915|0xfffffffffffbd5ed] <|@ <|@
      nr  966  <|@ instruction rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  968  <|@ instruction rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr  970  <|@ instruction r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr  972  <|@ instruction rcx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  974  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  976  <|@ instruction JUMP ~[] destination: B86 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1264  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1266  <|@ instruction rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr 1268  <|@ instruction rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr 1270  <|@ instruction r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1272  <|@ instruction stack:68|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1274  <|@ instruction stack:72|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1276  <|@ instruction stack:76|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1278  <|@ instruction rcx|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr 1280  <|@ instruction r13|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1282  <|@ instruction stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1284  <|@ instruction r14|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1286  <|@ instruction r10|DWORD = MOVE input: int[-294419|0xfffffffffffb81ed] <|@ <|@
      nr 1288  <|@ instruction rbp|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1290  <|@ instruction JUMP ~[] destination: B105 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B178" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  350  <|@ instruction r11|DWORD = MOVE input: int[-317971|0xfffffffffffb25ed] <|@ <|@
      nr  352  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  354  <|@ instruction r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  356  <|@ instruction JUMP ~[] destination: B36 -> B178 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  994  <|@ instruction r10|DWORD = MOVE input: int[-273171|0xfffffffffffbd4ed] <|@ <|@
      nr  996  <|@ instruction rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  998  <|@ instruction rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr 1000  <|@ instruction r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1002  <|@ instruction rcx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1004  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1006  <|@ instruction JUMP ~[] destination: B88 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1322  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1324  <|@ instruction rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr 1326  <|@ instruction rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr 1328  <|@ instruction r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1330  <|@ instruction stack:68|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1332  <|@ instruction stack:72|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1334  <|@ instruction stack:76|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1336  <|@ instruction rcx|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr 1338  <|@ instruction r13|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1340  <|@ instruction stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1342  <|@ instruction r14|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1344  <|@ instruction r10|DWORD = MOVE input: int[-322075|0xfffffffffffb15e5] <|@ <|@
      nr 1346  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1348  <|@ instruction JUMP ~[] destination: B110 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  148  <|@ instruction r11|DWORD = MOVE input: int[-262427|0xfffffffffffbfee5] <|@ <|@
      nr  150  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ instruction JUMP ~[] destination: B18 -> B23 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #15         // $assertionsDisabled:boolean
     3: ifne          20
     6: lload_2       
     7: lconst_0      
     8: lcmp          
     9: ifgt          20
    12: new           #21         // java.lang.AssertionError
    15: dup           
    16: invokespecial #16         // java.lang.AssertionError.<init>:()void
    19: athrow        
    20: getstatic     #15         // $assertionsDisabled:boolean
    23: ifne          44
    26: lload_2       
    27: ldc2_w        #31         // 4503599627370496
    30: land          
    31: lconst_0      
    32: lcmp          
    33: ifne          44
    36: new           #21         // java.lang.AssertionError
    39: dup           
    40: invokespecial #16         // java.lang.AssertionError.<init>:()void
    43: athrow        
    44: lload_2       
    45: invokestatic  #20         // java.lang.Long.numberOfTrailingZeros:(long)int
    48: istore        6
    50: bipush        53
    52: iload         6
    54: isub          
    55: istore        7
    57: aload_0       
    58: iconst_0      
    59: putfield      #5          // decimalDigitsRoundedUp:boolean
    62: aload_0       
    63: iconst_0      
    64: putfield      #4          // exactDecimalConversion:boolean
    67: iconst_0      
    68: iload         7
    70: iload_1       
    71: isub          
    72: iconst_1      
    73: isub          
    74: invokestatic  #21         // java.lang.Math.max:(int, int)int
    77: istore        8
    79: iload_1       
    80: bipush        62
    82: if_icmpgt     174
    85: iload_1       
    86: bipush        -21
    88: if_icmplt     174
    91: iload         8
    93: getstatic     #18         // sun.misc.FDBigInteger.LONG_5_POW:long[]
    96: arraylength   
    97: if_icmpge     174
   100: iload         7
   102: getstatic     #22         // N_5_BITS:int[]
   105: iload         8
   107: iaload        
   108: iadd          
   109: bipush        64
   111: if_icmpge     174
   114: iload         8
   116: ifne          174
   119: iload_1       
   120: iload         4
   122: if_icmple     139
   125: iload_1       
   126: iload         4
   128: isub          
   129: iconst_1      
   130: isub          
   131: invokestatic  #23         // insignificantDigitsForPow2:(int)int
   134: istore        9
   136: goto          142
   139: iconst_0      
   140: istore        9
   142: iload_1       
   143: bipush        52
   145: if_icmplt     158
   148: lload_2       
   149: iload_1       
   150: bipush        52
   152: isub          
   153: lshl          
   154: lstore_2      
   155: goto          165
   158: lload_2       
   159: bipush        52
   161: iload_1       
   162: isub          
   163: lushr         
   164: lstore_2      
   165: aload_0       
   166: iconst_0      
   167: lload_2       
   168: iload         9
   170: invokespecial #24         // developLongDigits:(int, long, int)void
   173: return        
   174: lload_2       
   175: iload_1       
   176: invokestatic  #25         // estimateDecExp:(long, int)int
   179: istore        9
   181: iconst_0      
   182: iload         9
   184: ineg          
   185: invokestatic  #21         // java.lang.Math.max:(int, int)int
   188: istore        11
   190: iload         11
   192: iload         8
   194: iadd          
   195: iload_1       
   196: iadd          
   197: istore        10
   199: iconst_0      
   200: iload         9
   202: invokestatic  #21         // java.lang.Math.max:(int, int)int
   205: istore        13
   207: iload         13
   209: iload         8
   211: iadd          
   212: istore        12
   214: iload         11
   216: istore        15
   218: iload         10
   220: iload         4
   222: isub          
   223: istore        14
   225: lload_2       
   226: iload         6
   228: lushr         
   229: lstore_2      
   230: iload         10
   232: iload         7
   234: iconst_1      
   235: isub          
   236: isub          
   237: istore        10
   239: iload         10
   241: iload         12
   243: invokestatic  #26         // java.lang.Math.min:(int, int)int
   246: istore        16
   248: iload         10
   250: iload         16
   252: isub          
   253: istore        10
   255: iload         12
   257: iload         16
   259: isub          
   260: istore        12
   262: iload         14
   264: iload         16
   266: isub          
   267: istore        14
   269: iload         7
   271: iconst_1      
   272: if_icmpne     278
   275: iinc          
   278: iload         14
   280: ifge          300
   283: iload         10
   285: iload         14
   287: isub          
   288: istore        10
   290: iload         12
   292: iload         14
   294: isub          
   295: istore        12
   297: iconst_0      
   298: istore        14
   300: iconst_0      
   301: istore        17
   303: iload         7
   305: iload         10
   307: iadd          
   308: iload         11
   310: getstatic     #22         // N_5_BITS:int[]
   313: arraylength   
   314: if_icmpge     326
   317: getstatic     #22         // N_5_BITS:int[]
   320: iload         11
   322: iaload        
   323: goto          330
   326: iload         11
   328: iconst_3      
   329: imul          
   330: iadd          
   331: istore        23
   333: iload         12
   335: iconst_1      
   336: iadd          
   337: iload         13
   339: iconst_1      
   340: iadd          
   341: getstatic     #22         // N_5_BITS:int[]
   344: arraylength   
   345: if_icmpge     359
   348: getstatic     #22         // N_5_BITS:int[]
   351: iload         13
   353: iconst_1      
   354: iadd          
   355: iaload        
   356: goto          365
   359: iload         13
   361: iconst_1      
   362: iadd          
   363: iconst_3      
   364: imul          
   365: iadd          
   366: istore        24
   368: iload         23
   370: bipush        64
   372: if_icmpge     1070
   375: iload         24
   377: bipush        64
   379: if_icmpge     1070
   382: iload         23
   384: bipush        32
   386: if_icmpge     728
   389: iload         24
   391: bipush        32
   393: if_icmpge     728
   396: lload_2       
   397: l2i           
   398: getstatic     #27         // sun.misc.FDBigInteger.SMALL_5_POW:int[]
   401: iload         11
   403: iaload        
   404: imul          
   405: iload         10
   407: ishl          
   408: istore        25
   410: getstatic     #27         // sun.misc.FDBigInteger.SMALL_5_POW:int[]
   413: iload         13
   415: iaload        
   416: iload         12
   418: ishl          
   419: istore        26
   421: getstatic     #27         // sun.misc.FDBigInteger.SMALL_5_POW:int[]
   424: iload         15
   426: iaload        
   427: iload         14
   429: ishl          
   430: istore        27
   432: iload         26
   434: bipush        10
   436: imul          
   437: istore        28
   439: iconst_0      
   440: istore        17
   442: iload         25
   444: iload         26
   446: idiv          
   447: istore        22
   449: bipush        10
   451: iload         25
   453: iload         26
   455: irem          
   456: imul          
   457: istore        25
   459: iload         27
   461: bipush        10
   463: imul          
   464: istore        27
   466: iload         25
   468: iload         27
   470: if_icmpge     477
   473: iconst_1      
   474: goto          478
   477: iconst_0      
   478: istore        18
   480: iload         25
   482: iload         27
   484: iadd          
   485: iload         28
   487: if_icmple     494
   490: iconst_1      
   491: goto          495
   494: iconst_0      
   495: istore        19
   497: getstatic     #15         // $assertionsDisabled:boolean
   500: ifne          520
   503: iload         22
   505: bipush        10
   507: if_icmplt     520
   510: new           #21         // java.lang.AssertionError
   513: dup           
   514: iload         22
   516: invokespecial #28         // java.lang.AssertionError.<init>:(int)void
   519: athrow        
   520: iload         22
   522: ifne          536
   525: iload         19
   527: ifne          536
   530: iinc          
   533: goto          552
   536: aload_0       
   537: getfield      #6          // digits:char[]
   540: iload         17
   542: iinc          
   545: bipush        48
   547: iload         22
   549: iadd          
   550: i2c           
   551: castore       
   552: iload         5
   554: ifeq          571
   557: iload         9
   559: bipush        -3
   561: if_icmplt     571
   564: iload         9
   566: bipush        8
   568: if_icmplt     577
   571: iconst_0      
   572: dup           
   573: istore        18
   575: istore        19
   577: iload         18
   579: ifne          701
   582: iload         19
   584: ifne          701
   587: iload         25
   589: iload         26
   591: idiv          
   592: istore        22
   594: bipush        10
   596: iload         25
   598: iload         26
   600: irem          
   601: imul          
   602: istore        25
   604: iload         27
   606: bipush        10
   608: imul          
   609: istore        27
   611: getstatic     #15         // $assertionsDisabled:boolean
   614: ifne          634
   617: iload         22
   619: bipush        10
   621: if_icmplt     634
   624: new           #21         // java.lang.AssertionError
   627: dup           
   628: iload         22
   630: invokespecial #28         // java.lang.AssertionError.<init>:(int)void
   633: athrow        
   634: iload         27
   636: i2l           
   637: lconst_0      
   638: lcmp          
   639: ifle          676
   642: iload         25
   644: iload         27
   646: if_icmpge     653
   649: iconst_1      
   650: goto          654
   653: iconst_0      
   654: istore        18
   656: iload         25
   658: iload         27
   660: iadd          
   661: iload         28
   663: if_icmple     670
   666: iconst_1      
   667: goto          671
   670: iconst_0      
   671: istore        19
   673: goto          682
   676: iconst_1      
   677: istore        18
   679: iconst_1      
   680: istore        19
   682: aload_0       
   683: getfield      #6          // digits:char[]
   686: iload         17
   688: iinc          
   691: bipush        48
   693: iload         22
   695: iadd          
   696: i2c           
   697: castore       
   698: goto          577
   701: iload         25
   703: iconst_1      
   704: ishl          
   705: iload         28
   707: isub          
   708: i2l           
   709: lstore        20
   711: aload_0       
   712: iload         25
   714: ifne          721
   717: iconst_1      
   718: goto          722
   721: iconst_0      
   722: putfield      #4          // exactDecimalConversion:boolean
   725: goto          1426
   728: lload_2       
   729: getstatic     #18         // sun.misc.FDBigInteger.LONG_5_POW:long[]
   732: iload         11
   734: laload        
   735: lmul          
   736: iload         10
   738: lshl          
   739: lstore        25
   741: getstatic     #18         // sun.misc.FDBigInteger.LONG_5_POW:long[]
   744: iload         13
   746: laload        
   747: iload         12
   749: lshl          
   750: lstore        27
   752: getstatic     #18         // sun.misc.FDBigInteger.LONG_5_POW:long[]
   755: iload         15
   757: laload        
   758: iload         14
   760: lshl          
   761: lstore        29
   763: lload         27
   765: ldc2_w        #29         // 10
   768: lmul          
   769: lstore        31
   771: iconst_0      
   772: istore        17
   774: lload         25
   776: lload         27
   778: ldiv          
   779: l2i           
   780: istore        22
   782: ldc2_w        #29         // 10
   785: lload         25
   787: lload         27
   789: lrem          
   790: lmul          
   791: lstore        25
   793: lload         29
   795: ldc2_w        #29         // 10
   798: lmul          
   799: lstore        29
   801: lload         25
   803: lload         29
   805: lcmp          
   806: ifge          813
   809: iconst_1      
   810: goto          814
   813: iconst_0      
   814: istore        18
   816: lload         25
   818: lload         29
   820: ladd          
   821: lload         31
   823: lcmp          
   824: ifle          831
   827: iconst_1      
   828: goto          832
   831: iconst_0      
   832: istore        19
   834: getstatic     #15         // $assertionsDisabled:boolean
   837: ifne          857
   840: iload         22
   842: bipush        10
   844: if_icmplt     857
   847: new           #21         // java.lang.AssertionError
   850: dup           
   851: iload         22
   853: invokespecial #28         // java.lang.AssertionError.<init>:(int)void
   856: athrow        
   857: iload         22
   859: ifne          873
   862: iload         19
   864: ifne          873
   867: iinc          
   870: goto          889
   873: aload_0       
   874: getfield      #6          // digits:char[]
   877: iload         17
   879: iinc          
   882: bipush        48
   884: iload         22
   886: iadd          
   887: i2c           
   888: castore       
   889: iload         5
   891: ifeq          908
   894: iload         9
   896: bipush        -3
   898: if_icmplt     908
   901: iload         9
   903: bipush        8
   905: if_icmplt     914
   908: iconst_0      
   909: dup           
   910: istore        18
   912: istore        19
   914: iload         18
   916: ifne          1042
   919: iload         19
   921: ifne          1042
   924: lload         25
   926: lload         27
   928: ldiv          
   929: l2i           
   930: istore        22
   932: ldc2_w        #29         // 10
   935: lload         25
   937: lload         27
   939: lrem          
   940: lmul          
   941: lstore        25
   943: lload         29
   945: ldc2_w        #29         // 10
   948: lmul          
   949: lstore        29
   951: getstatic     #15         // $assertionsDisabled:boolean
   954: ifne          974
   957: iload         22
   959: bipush        10
   961: if_icmplt     974
   964: new           #21         // java.lang.AssertionError
   967: dup           
   968: iload         22
   970: invokespecial #28         // java.lang.AssertionError.<init>:(int)void
   973: athrow        
   974: lload         29
   976: lconst_0      
   977: lcmp          
   978: ifle          1017
   981: lload         25
   983: lload         29
   985: lcmp          
   986: ifge          993
   989: iconst_1      
   990: goto          994
   993: iconst_0      
   994: istore        18
   996: lload         25
   998: lload         29
  1000: ladd          
  1001: lload         31
  1003: lcmp          
  1004: ifle          1011
  1007: iconst_1      
  1008: goto          1012
  1011: iconst_0      
  1012: istore        19
  1014: goto          1023
  1017: iconst_1      
  1018: istore        18
  1020: iconst_1      
  1021: istore        19
  1023: aload_0       
  1024: getfield      #6          // digits:char[]
  1027: iload         17
  1029: iinc          
  1032: bipush        48
  1034: iload         22
  1036: iadd          
  1037: i2c           
  1038: castore       
  1039: goto          914
  1042: lload         25
  1044: iconst_1      
  1045: lshl          
  1046: lload         31
  1048: lsub          
  1049: lstore        20
  1051: aload_0       
  1052: lload         25
  1054: lconst_0      
  1055: lcmp          
  1056: ifne          1063
  1059: iconst_1      
  1060: goto          1064
  1063: iconst_0      
  1064: putfield      #4          // exactDecimalConversion:boolean
  1067: goto          1426
  1070: iload         13
  1072: iload         12
  1074: invokestatic  #29         // sun.misc.FDBigInteger.valueOfPow52:(int, int)sun.misc.FDBigInteger
  1077: astore        25
  1079: aload         25
  1081: invokevirtual #30         // sun.misc.FDBigInteger.getNormalizationBias:()int
  1084: istore        26
  1086: aload         25
  1088: iload         26
  1090: invokevirtual #31         // sun.misc.FDBigInteger.leftShift:(int)sun.misc.FDBigInteger
  1093: astore        25
  1095: lload_2       
  1096: iload         11
  1098: iload         10
  1100: iload         26
  1102: iadd          
  1103: invokestatic  #32         // sun.misc.FDBigInteger.valueOfMulPow52:(long, int, int)sun.misc.FDBigInteger
  1106: astore        27
  1108: iload         15
  1110: iconst_1      
  1111: iadd          
  1112: iload         14
  1114: iload         26
  1116: iadd          
  1117: iconst_1      
  1118: iadd          
  1119: invokestatic  #29         // sun.misc.FDBigInteger.valueOfPow52:(int, int)sun.misc.FDBigInteger
  1122: astore        28
  1124: iload         13
  1126: iconst_1      
  1127: iadd          
  1128: iload         12
  1130: iload         26
  1132: iadd          
  1133: iconst_1      
  1134: iadd          
  1135: invokestatic  #29         // sun.misc.FDBigInteger.valueOfPow52:(int, int)sun.misc.FDBigInteger
  1138: astore        29
  1140: iconst_0      
  1141: istore        17
  1143: aload         27
  1145: aload         25
  1147: invokevirtual #33         // sun.misc.FDBigInteger.quoRemIteration:(sun.misc.FDBigInteger)int
  1150: istore        22
  1152: aload         27
  1154: aload         28
  1156: invokevirtual #34         // sun.misc.FDBigInteger.cmp:(sun.misc.FDBigInteger)int
  1159: ifge          1166
  1162: iconst_1      
  1163: goto          1167
  1166: iconst_0      
  1167: istore        18
  1169: aload         29
  1171: aload         27
  1173: aload         28
  1175: invokevirtual #35         // sun.misc.FDBigInteger.addAndCmp:(sun.misc.FDBigInteger, sun.misc.FDBigInteger)int
  1178: ifgt          1185
  1181: iconst_1      
  1182: goto          1186
  1185: iconst_0      
  1186: istore        19
  1188: getstatic     #15         // $assertionsDisabled:boolean
  1191: ifne          1211
  1194: iload         22
  1196: bipush        10
  1198: if_icmplt     1211
  1201: new           #21         // java.lang.AssertionError
  1204: dup           
  1205: iload         22
  1207: invokespecial #28         // java.lang.AssertionError.<init>:(int)void
  1210: athrow        
  1211: iload         22
  1213: ifne          1227
  1216: iload         19
  1218: ifne          1227
  1221: iinc          
  1224: goto          1243
  1227: aload_0       
  1228: getfield      #6          // digits:char[]
  1231: iload         17
  1233: iinc          
  1236: bipush        48
  1238: iload         22
  1240: iadd          
  1241: i2c           
  1242: castore       
  1243: iload         5
  1245: ifeq          1262
  1248: iload         9
  1250: bipush        -3
  1252: if_icmplt     1262
  1255: iload         9
  1257: bipush        8
  1259: if_icmplt     1268
  1262: iconst_0      
  1263: dup           
  1264: istore        18
  1266: istore        19
  1268: iload         18
  1270: ifne          1372
  1273: iload         19
  1275: ifne          1372
  1278: aload         27
  1280: aload         25
  1282: invokevirtual #33         // sun.misc.FDBigInteger.quoRemIteration:(sun.misc.FDBigInteger)int
  1285: istore        22
  1287: getstatic     #15         // $assertionsDisabled:boolean
  1290: ifne          1310
  1293: iload         22
  1295: bipush        10
  1297: if_icmplt     1310
  1300: new           #21         // java.lang.AssertionError
  1303: dup           
  1304: iload         22
  1306: invokespecial #28         // java.lang.AssertionError.<init>:(int)void
  1309: athrow        
  1310: aload         28
  1312: invokevirtual #36         // sun.misc.FDBigInteger.multBy10:()sun.misc.FDBigInteger
  1315: astore        28
  1317: aload         27
  1319: aload         28
  1321: invokevirtual #34         // sun.misc.FDBigInteger.cmp:(sun.misc.FDBigInteger)int
  1324: ifge          1331
  1327: iconst_1      
  1328: goto          1332
  1331: iconst_0      
  1332: istore        18
  1334: aload         29
  1336: aload         27
  1338: aload         28
  1340: invokevirtual #35         // sun.misc.FDBigInteger.addAndCmp:(sun.misc.FDBigInteger, sun.misc.FDBigInteger)int
  1343: ifgt          1350
  1346: iconst_1      
  1347: goto          1351
  1350: iconst_0      
  1351: istore        19
  1353: aload_0       
  1354: getfield      #6          // digits:char[]
  1357: iload         17
  1359: iinc          
  1362: bipush        48
  1364: iload         22
  1366: iadd          
  1367: i2c           
  1368: castore       
  1369: goto          1268
  1372: iload         19
  1374: ifeq          1403
  1377: iload         18
  1379: ifeq          1403
  1382: aload         27
  1384: iconst_1      
  1385: invokevirtual #31         // sun.misc.FDBigInteger.leftShift:(int)sun.misc.FDBigInteger
  1388: astore        27
  1390: aload         27
  1392: aload         29
  1394: invokevirtual #34         // sun.misc.FDBigInteger.cmp:(sun.misc.FDBigInteger)int
  1397: i2l           
  1398: lstore        20
  1400: goto          1406
  1403: lconst_0      
  1404: lstore        20
  1406: aload_0       
  1407: aload         27
  1409: getstatic     #37         // sun.misc.FDBigInteger.ZERO:sun.misc.FDBigInteger
  1412: invokevirtual #34         // sun.misc.FDBigInteger.cmp:(sun.misc.FDBigInteger)int
  1415: ifne          1422
  1418: iconst_1      
  1419: goto          1423
  1422: iconst_0      
  1423: putfield      #4          // exactDecimalConversion:boolean
  1426: aload_0       
  1427: iload         9
  1429: iconst_1      
  1430: iadd          
  1431: putfield      #8          // decExponent:int
  1434: aload_0       
  1435: iconst_0      
  1436: putfield      #9          // firstDigitIndex:int
  1439: aload_0       
  1440: iload         17
  1442: putfield      #10         // nDigits:int
  1445: iload         19
  1447: ifeq          1508
  1450: iload         18
  1452: ifeq          1504
  1455: lload         20
  1457: lconst_0      
  1458: lcmp          
  1459: ifne          1490
  1462: aload_0       
  1463: getfield      #6          // digits:char[]
  1466: aload_0       
  1467: getfield      #9          // firstDigitIndex:int
  1470: aload_0       
  1471: getfield      #10         // nDigits:int
  1474: iadd          
  1475: iconst_1      
  1476: isub          
  1477: caload        
  1478: iconst_1      
  1479: iand          
  1480: ifeq          1508
  1483: aload_0       
  1484: invokespecial #38         // roundup:()void
  1487: goto          1508
  1490: lload         20
  1492: lconst_0      
  1493: lcmp          
  1494: ifle          1508
  1497: aload_0       
  1498: invokespecial #38         // roundup:()void
  1501: goto          1508
  1504: aload_0       
  1505: invokespecial #38         // roundup:()void
  1508: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD, r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@5692047b slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:28|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction MOVB (x: [rsi|QWORD[.] + 26], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   12  <|@ instruction MOVB (x: [rsi|QWORD[.] + 25], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   14  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[27]{0, 3, 5, 7, 10, ...}] <|@ <|@
      nr   16  <|@ instruction rbx|DWORD = TZCNT r10|QWORD size: QWORD <|@ <|@
      nr   18  <|@ instruction rcx|DWORD = MOVE input: int[53|0x35] <|@ <|@
      nr   20  <|@ instruction rdi|DWORD = SUB (x: rcx|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr   22  <|@ instruction rcx|DWORD = SUB (x: rdi|DWORD, ~y: rdx|DWORD) size: DWORD <|@ <|@
      nr   24  <|@ instruction rcx|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr   26  <|@ instruction CMP rcx|DWORD y: 1 size: DWORD <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 0.7309313881269885 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4604758864199680626
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction CMP rdx|DWORD y: 63 size: DWORD <|@ <|@
      nr   34  <|@ instruction BRANCH trueDestinationProbability: 0.9998165784832451 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" 
    xhandlers
    flags 
    probability 4604757656617592340
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   40  <|@ instruction JUMP ~[] destination: B2 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" "B2" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607180766685868390
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   60  <|@ instruction CMP rdx|DWORD y: -21 size: DWORD <|@ <|@
      nr   62  <|@ instruction BRANCH trueDestinationProbability: 3.66905155017428E-4 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B26" 
    xhandlers
    flags 
    probability 4607177462504198754
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   72  <|@ instruction CMP rcx|DWORD y: 27 size: DWORD <|@ <|@
      nr   74  <|@ instruction BRANCH trueDestinationProbability: 0.5322359783728843 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B25" 
    xhandlers
    flags 
    probability 4602966537134068855
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   78  <|@ instruction rax|DWORD = ADD (x: rdi|DWORD, ~y: [r11|QWORD[.] + rcx|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   80  <|@ instruction CMP rax|DWORD y: 64 size: DWORD <|@ <|@
      nr   82  <|@ instruction BRANCH trueDestinationProbability: 0.9985678292003713 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B24" 
    xhandlers
    flags 
    probability 4602959675148926439
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   88  <|@ instruction BRANCH trueDestinationProbability: 0.37470452312023583 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B28" 
    xhandlers
    flags 
    probability 4599655016814494722
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  202  <|@ instruction rax|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  204  <|@ instruction JUMP ~[] destination: B24 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B7" "B26" "B25" "B24" "B3" 
    successors "B29" "B32" 
    xhandlers
    flags 
    probability 4605389661644661784
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  226  <|@ instruction stack:40|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction rbp|QWORD = MOVE input: long[4503599627370495|0xfffffffffffff] <|@ <|@
      nr  230  <|@ instruction rcx|QWORD = AND (x: r10|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr  232  <|@ instruction r13|QWORD = MOVE input: long[4607182418800017408|0x3ff0000000000000] <|@ <|@
      nr  234  <|@ instruction rcx|QWORD = OR (x: rcx|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr  236  <|@ instruction xmm0|DOUBLE = VMOVQ rcx|QWORD nZ: XMM <|@ <|@
      nr  238  <|@ instruction xmm1|DOUBLE = VMOVE input: double[1.5|0x3ff8000000000000] <|@ <|@
      nr  240  <|@ instruction xmm0|DOUBLE = VSUBSD (x: xmm0|DOUBLE, y: xmm1|DOUBLE) nZ: XMM <|@ <|@
      nr  242  <|@ instruction xmm1|DOUBLE = VMOVE input: double[0.289529654|0x3fd287a762c9bd93] <|@ <|@
      nr  244  <|@ instruction xmm0|DOUBLE = VMULSD (x: xmm0|DOUBLE, y: xmm1|DOUBLE) nZ: XMM <|@ <|@
      nr  246  <|@ instruction xmm1|DOUBLE = VMOVE input: double[0.176091259|0x3fc68a288b421b8c] <|@ <|@
      nr  248  <|@ instruction xmm0|DOUBLE = VADDSD (x: xmm0|DOUBLE, y: xmm1|DOUBLE) nZ: XMM <|@ <|@
      nr  250  <|@ instruction xmm1|DOUBLE = VCVTSI2SD rdx|DWORD <|@ <|@
      nr  252  <|@ instruction xmm2|DOUBLE = VMOVE input: double[0.301029995663981|0x3fd34413509f79fb] <|@ <|@
      nr  254  <|@ instruction xmm1|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm2|DOUBLE) nZ: XMM <|@ <|@
      nr  256  <|@ instruction xmm0|DOUBLE = VADDSD (x: xmm0|DOUBLE, y: xmm1|DOUBLE) nZ: XMM <|@ <|@
      nr  258  <|@ instruction r13|QWORD = VMOVQ xmm0|DOUBLE <|@ <|@
      nr  260  <|@ instruction r14|QWORD = MOVE input: long[-9223372036854775808|0x8000000000000000] <|@ <|@
      nr  262  <|@ instruction rcx|QWORD = MOVE input: long[9218868437227405312|0x7ff0000000000000] <|@ <|@
      nr  264  <|@ instruction rcx|QWORD = AND (x: r13|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  266  <|@ instruction rcx|QWORD = SHR rcx|QWORD y: 52 size: QWORD <|@ <|@
      nr  268  <|@ instruction rcx|DWORD = MOV rcx|QWORD size: DWORD <|@ <|@
      nr  270  <|@ instruction r9|DWORD = LEA [rcx|DWORD - 1023] size: DWORD <|@ <|@
      nr  272  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  274  <|@ instruction BRANCH trueDestinationProbability: 0.8017068096060938 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4603959086903862549
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  278  <|@ instruction rcx|QWORD = MOVE input: long[9223372036854775807|0x7fffffffffffffff] <|@ <|@
      nr  280  <|@ instruction TEST (x: rcx|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr  282  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B38" 
    xhandlers
    flags 
    probability 4603959086903862549
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  296  <|@ instruction TEST (x: r14|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr  298  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  300  <|@ instruction r9|DWORD = CMOVE (falseValue: int[-1|0xffffffffffffffff], ~trueValue: rcx|DWORD) condition: = <|@ <|@
      nr  302  <|@ instruction r11|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  304  <|@ instruction JUMP ~[] destination: B31 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" "B37" "B33" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4605389661644661784
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  370  <|@ instruction rcx|DWORD = NEG r11|DWORD size: DWORD <|@ <|@
      nr  372  <|@ instruction CMP rcx|DWORD y: 1 size: DWORD <|@ <|@
      nr  374  <|@ instruction BRANCH trueDestinationProbability: 0.7309313881269885 condition: < trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603448481723541948
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  378  <|@ instruction stack:44|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  380  <|@ instruction stack:48|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  382  <|@ instruction rsi|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  384  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  386  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4605389661644661784
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr  410  <|@ instruction CMP r11|DWORD y: 1 size: DWORD <|@ <|@
      nr  412  <|@ instruction BRANCH trueDestinationProbability: 0.7309313881269885 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4603448481723541948
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  416  <|@ instruction stack:52|DWORD = MOVE input: int[3|0x3] <|@ <|@
      nr  418  <|@ instruction r14|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  420  <|@ instruction r13|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  422  <|@ instruction JUMP ~[] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" "B43" 
    successors "B45" "B48" 
    xhandlers
    flags 
    probability 4605389661644661784
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr  444  <|@ instruction stack:56|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  446  <|@ instruction rsi|DWORD = ADD (x: rsi|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  448  <|@ instruction rdx|DWORD = MOVE input: int[52|0x34] <|@ <|@
      nr  450  <|@ instruction rdx|DWORD = SUB (x: rdx|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr  452  <|@ instruction r9|DWORD = SUB (x: rsi|DWORD, ~y: rdx|DWORD) size: DWORD <|@ <|@
      nr  454  <|@ instruction rsi|DWORD = SUB (x: rsi|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  456  <|@ instruction CMP (x: r9|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  458  <|@ instruction BRANCH trueDestinationProbability: 0.44744570600555483 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B50" "B52" 
    xhandlers
    flags 
    probability 4601644361839485290
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  484  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: r9|DWORD) size: DWORD <|@ <|@
      nr  486  <|@ instruction rsi|DWORD = SUB (x: rsi|DWORD, ~y: r9|DWORD) size: DWORD <|@ <|@
      nr  488  <|@ instruction CMP rdi|DWORD y: 1 size: DWORD <|@ <|@
      nr  494  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  490  <|@ instruction BRANCH trueDestinationProbability: 0.3620750396336093 condition: = trueDestination: B48 -> B50 falseDestination: B48 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B45" "B50" "B48" 
    successors "B53" "B55" 
    xhandlers
    flags 
    probability 4605389661644661784
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr  512  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  514  <|@ instruction BRANCH trueDestinationProbability: 0.9999471561184408 condition: < trueDestination: B52 -> B53 falseDestination: B52 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4605389280405537968
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  518  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr  520  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr  522  <|@ instruction rsi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  524  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B52" "B53" 
    successors "B56" "B59" 
    xhandlers
    flags 
    probability 4605389661644661784
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr  532  <|@ instruction r8|DWORD = ADD (x: r9|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  534  <|@ instruction rdi|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  536  <|@ instruction rcx|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  538  <|@ instruction r10|QWORD = SHR (x: r10|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  540  <|@ instruction stack:64|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  542  <|@ instruction CMP rdi|DWORD y: 27 size: DWORD <|@ <|@
      nr  544  <|@ instruction BRANCH trueDestinationProbability: 0.9999471514639044 condition: |<| trueDestination: B55 -> B56 falseDestination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B61" "B58" 
    xhandlers
    flags 
    probability 4605389280371958085
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  548  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[27]{0, 3, 5, 7, 10, ...}] <|@ <|@
      nr  550  <|@ instruction rdx|DWORD = MOV [rcx|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  552  <|@ instruction rbx|DWORD = ADD (x: r8|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  554  <|@ instruction CMP r14|DWORD y: 27 size: DWORD <|@ <|@
      nr  556  <|@ instruction BRANCH trueDestinationProbability: 0.9999471523948773 condition: < trueDestination: B56 -> B61 falseDestination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B56" 
    successors "B62" "B65" 
    xhandlers
    flags 
    probability 4605389280378674534
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  640  <|@ instruction CMP r14|DWORD y: 27 size: DWORD <|@ <|@
      nr  642  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B61 -> B62 falseDestination: B61 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" "B64" 
    xhandlers
    flags 
    probability 4605389280378674534
    begin_IR
      LIR
      nr  644  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  646  <|@ instruction CMP rbx|DWORD y: 64 size: DWORD <|@ <|@
      nr  648  <|@ instruction BRANCH trueDestinationProbability: 0.9867185711014427 condition: < trueDestination: B62 -> B63 falseDestination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B69" 
    xhandlers
    flags 
    probability 4605293467342645890
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  652  <|@ instruction rcx|DWORD = MOV [rcx|QWORD[.] + r14|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  654  <|@ instruction r8|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  656  <|@ instruction JUMP ~[] destination: B63 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" "B63" 
    successors "B70" "B135" 
    xhandlers
    flags 
    probability 4605293843544876038
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  728  <|@ instruction rdx|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  730  <|@ instruction rcx|DWORD = ADD (x: rdx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  732  <|@ instruction CMP rcx|DWORD y: 64 size: DWORD <|@ <|@
      nr  734  <|@ instruction BRANCH trueDestinationProbability: 0.9680978309381416 condition: < trueDestination: B69 -> B70 falseDestination: B69 -> B135 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" "B101" 
    xhandlers
    flags 
    probability 4605066743998553008
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  738  <|@ instruction rbp|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  740  <|@ instruction r14|DWORD[.] = MOV [rbp|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  742  <|@ instruction CMP rbx|DWORD y: 32 size: DWORD <|@ <|@
      nr  744  <|@ instruction BRANCH trueDestinationProbability: 9.220839096357736E-4 condition: < trueDestination: B70 -> B71 falseDestination: B70 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B102" "B133" 
    xhandlers
    flags 
    probability 4605060389434741780
    begin_IR
      LIR
      nr 1178  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1180  <|@ instruction CMP rdi|DWORD y: 27 size: DWORD <|@ <|@
      nr 1182  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B101 -> B102 falseDestination: B101 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B103" "B132" 
    xhandlers
    flags 
    probability 4605060389434741780
    begin_IR
      LIR
      nr 1184  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1186  <|@ instruction CMP r13|DWORD y: 27 size: DWORD <|@ <|@
      nr 1188  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B102 -> B103 falseDestination: B102 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B104" "B109" 
    xhandlers
    flags 
    probability 4605060389434741780
    begin_IR
      LIR
      nr 1190  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1192  <|@ instruction stack:52|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1194  <|@ instruction stack:88|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1196  <|@ instruction stack:92|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1198  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[long[27]{1, 5, 25, 125, 625, ...}] <|@ <|@
      nr 1200  <|@ instruction r8|QWORD = MOV [rcx|QWORD[.] + rdi|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr 1202  <|@ instruction rcx|QWORD = MOV [rcx|QWORD[.] + r13|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr 1204  <|@ instruction rbx|QWORD = IMUL (x: r8|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1206  <|@ instruction r13|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr 1208  <|@ instruction rcx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1210  <|@ instruction rbx|QWORD = SHL (x: rbx|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr 1212  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1214  <|@ instruction r13|QWORD = SHL (x: r13|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr 1218  <|@ instruction rax|QWORD = MOVE rbx|QWORD moveKind: QWORD <|@ <|@
      nr 1220  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = CDQ rax|QWORD size: QWORD <|@ <|@
      nr 1222  <|@ st <@st|@reference-map: [rbp:0, r14:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365]
stack: stack:52|DWORD stack:92|DWORD 
locals: rbp|QWORD[.] - r10|QWORD - - stack:28|DWORD - - - r11|DWORD r9|DWORD rdi|DWORD rcx|DWORD stack:56|DWORD rsi|DWORD rdi|DWORD - - - - - - - stack:88|DWORD - - - - - - - - - 
>@ <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IDIV (highX: rdx|QWORD, lowX: rax|QWORD, y: r13|QWORD) size: QWORD state [bci:365] <|@ <|@
      nr 1224  <|@ instruction rbx|QWORD = SHL r13|QWORD y: 3 size: QWORD <|@ <|@
      nr 1226  <|@ instruction r10|QWORD = SHL r13|QWORD size: QWORD <|@ <|@
      nr 1228  <|@ instruction rbx|QWORD = ADD (x: rbx|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1230  <|@ instruction r10|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1232  <|@ instruction rcx|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1234  <|@ instruction r8|QWORD = SHL (x: r8|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr 1236  <|@ instruction rcx|QWORD = SHL r8|QWORD y: 3 size: QWORD <|@ <|@
      nr 1238  <|@ instruction r8|QWORD = SHL r8|QWORD size: QWORD <|@ <|@
      nr 1240  <|@ instruction rcx|QWORD = ADD (x: rcx|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr 1242  <|@ instruction r8|QWORD = SHL rdx|QWORD y: 3 size: QWORD <|@ <|@
      nr 1244  <|@ instruction rdx|QWORD = SHL rdx|QWORD size: QWORD <|@ <|@
      nr 1246  <|@ instruction r8|QWORD = ADD (x: r8|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1248  <|@ instruction rdx|QWORD = ADD (x: rcx|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr 1250  <|@ instruction rax|DWORD = MOV rax|QWORD size: DWORD <|@ <|@
      nr 1252  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 1254  <|@ instruction BRANCH trueDestinationProbability: 0.12181344950436568 condition: = trueDestination: B103 -> B104 falseDestination: B103 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B110" "B111" 
    xhandlers
    flags 
    probability 4604221683140082412
    begin_IR
      LIR
      nr 1316  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1318  <|@ st <@st|@reference-map: [rbp:0, r14:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365]
stack: stack:52|DWORD stack:92|DWORD 
locals: rbp|QWORD[.] - stack:64|QWORD - - stack:28|DWORD - - - r11|DWORD r9|DWORD rdi|DWORD r10|DWORD stack:56|DWORD rsi|DWORD rdi|DWORD - - - - - - - stack:88|DWORD - - - - - - - - - 
>@ <|@ instruction CMP [r14|DWORD[.] * 8 + 12] y: 0 size: DWORD state [bci:365] <|@ <|@
      nr 1320  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B109 -> B110 falseDestination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B112" "B113" 
    xhandlers
    flags 
    probability 4604221683140082412
    begin_IR
      LIR
      nr 1350  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1352  <|@ instruction r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1354  <|@ instruction rax|DWORD = LEA [rax|DWORD + 48] size: DWORD <|@ <|@
      nr 1356  <|@ instruction MOV (x: [r14|DWORD[.] * 8 + 16], y: rax|DWORD) size: WORD <|@ <|@
      nr 1358  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1364  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1360  <|@ instruction BRANCH trueDestinationProbability: 0.010669521717460728 condition: = trueDestination: B111 -> B112 falseDestination: B111 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" 
    xhandlers
    flags 
    probability 4604157170265443794
    begin_IR
      LIR
      nr 1372  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1376  <|@ instruction rax|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1378  <|@ instruction JUMP ~[] destination: B113 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B106" "B113" 
    successors "B115" "B116" 
    xhandlers
    flags 
    probability 4604986927965077723
    begin_IR
      LIR
      nr 1380  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1382  <|@ instruction CMP (x: rcx|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr 1384  <|@ instruction r9|DWORD = SETCC condition: > <|@ <|@
      nr 1386  <|@ instruction CMP (x: rdx|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr 1388  <|@ instruction rdi|DWORD = SETCC condition: > <|@ <|@
      nr 1390  <|@ instruction CMP r11|DWORD y: -3 size: DWORD <|@ <|@
      nr 1392  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B114 -> B115 falseDestination: B114 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B119" "B118" 
    xhandlers
    flags 
    probability 4604986927965077723
    begin_IR
      LIR
      nr 1406  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1408  <|@ instruction CMP r11|DWORD y: 8 size: DWORD <|@ <|@
      nr 1410  <|@ instruction BRANCH trueDestinationProbability: 0.9998134328358209 condition: < trueDestination: B116 -> B119 falseDestination: B116 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B116" "B107" "B118" "B112" 
    successors "B120" "B121" 
    xhandlers
    flags 
    probability 4605060389434741780
    begin_IR
      LIR
      nr 1424  <|@ instruction [] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr 1426  <|@ instruction TEST (x: r14|DWORD[.], y: r14|DWORD[.]) size: DWORD <|@ <|@
      nr 1428  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B119 -> B120 falseDestination: B119 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B122" 
    xhandlers
    flags 
    probability 4605060389434741780
    begin_IR
      LIR
      nr 1442  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1444  <|@ instruction rsi|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr 1446  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: r14|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@40447647 encoding: base: 0 shift: 3 <|@ <|@
      nr 1448  <|@ instruction stack:92|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1450  <|@ instruction r9|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1452  <|@ instruction rdi|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr 1454  <|@ instruction rcx|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr 1456  <|@ instruction r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1458  <|@ instruction JUMP ~[] destination: B121 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" "B126" "B127" 
    successors "B123" "B131" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618403218649290590
    begin_IR
      LIR
      nr 1460  <|@ instruction [] = LABEL numbPhis: 5 align: true label: ? <|@ <|@
      nr 1462  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr 1464  <|@ instruction BRANCH trueDestinationProbability: 0.9096921872746148 condition: = trueDestination: B122 -> B123 falseDestination: B122 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B124" "B131" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617796602989612086
    begin_IR
      LIR
      nr 1466  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1468  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1470  <|@ instruction BRANCH trueDestinationProbability: 0.9584277782398936 condition: = trueDestination: B123 -> B124 falseDestination: B123 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B125" "B128" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617542572413107419
    begin_IR
      LIR
      nr 1472  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1474  <|@ instruction CMP (x: rsi|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 1476  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B124 -> B125 falseDestination: B124 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B126" "B127" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617542572413107419
    begin_IR
      LIR
      nr 1478  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1480  <|@ instruction rax|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr 1482  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = CDQ rax|QWORD size: QWORD <|@ <|@
      nr 1484  <|@ st <@st|@reference-map: [rbp:0, r14:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
locals: rbp|QWORD[.] - - - - - - - - r11|DWORD - - - - - - - r10|DWORD int[0|0x0] int[0|0x0] - - - - - rcx|QWORD - r13|QWORD - rdi|QWORD - rbx|QWORD - 
>@ <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IDIV (highX: rdx|QWORD, lowX: rax|QWORD, y: r13|QWORD) size: QWORD state [bci:914] <|@ <|@
      nr 1486  <|@ instruction r8|DWORD = MOV rax|QWORD size: DWORD <|@ <|@
      nr 1488  <|@ instruction r9|DWORD = LEA [r8|DWORD + 48] size: DWORD <|@ <|@
      nr 1490  <|@ instruction MOV (x: [r14|QWORD[.] + r10|DWORD * 2 + 16], y: r9|DWORD) size: WORD <|@ <|@
      nr 1492  <|@ instruction r9|QWORD = SHL rdx|QWORD y: 3 size: QWORD <|@ <|@
      nr 1494  <|@ instruction rdx|QWORD = SHL rdx|QWORD size: QWORD <|@ <|@
      nr 1496  <|@ instruction r9|QWORD = ADD (x: r9|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1498  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr 1500  <|@ instruction rcx|QWORD = SHL rdi|QWORD y: 3 size: QWORD <|@ <|@
      nr 1502  <|@ instruction rdi|QWORD = SHL rdi|QWORD size: QWORD <|@ <|@
      nr 1504  <|@ instruction rcx|QWORD = ADD (x: rcx|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr 1506  <|@ instruction CMP rcx|QWORD y: 1 size: QWORD <|@ <|@
      nr 1508  <|@ instruction BRANCH trueDestinationProbability: 3.796929368977686E-4 condition: < trueDestination: B125 -> B126 falseDestination: B125 -> B127 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B122" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617540348720924481
    begin_IR
      LIR
      nr 1524  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1526  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr 1528  <|@ instruction rdi|DWORD = SETCC condition: > <|@ <|@
      nr 1530  <|@ instruction rdx|QWORD = ADD (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr 1532  <|@ instruction CMP (x: rdx|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr 1534  <|@ instruction rdx|DWORD = SETCC condition: > <|@ <|@
      nr 1536  <|@ st <@st|@reference-map: [rbp:0, r14:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1039]
locals: rbp|QWORD[.] - - - - - - - - r11|DWORD - - - - - - - r10|DWORD rdi|DWORD rdx|DWORD - - r8|DWORD - - r9|QWORD - r13|QWORD - rcx|QWORD - rbx|QWORD - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:1039] <|@ <|@
      nr 1538  <|@ instruction r8|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1540  <|@ instruction rdi|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr 1542  <|@ instruction rcx|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr 1544  <|@ instruction r9|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1546  <|@ instruction JUMP ~[] destination: B127 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B122" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4566700544116969831
    begin_IR
      LIR
      nr 1510  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1512  <|@ st <@st|@reference-map: [rbp:0, r14:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1039]
locals: rbp|QWORD[.] - - - - - - - - r11|DWORD - - - - - - - r10|DWORD int[1|0x1] int[1|0x1] - - r8|DWORD - - r9|QWORD - r13|QWORD - rcx|QWORD - rbx|QWORD - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:1039] <|@ <|@
      nr 1514  <|@ instruction rdi|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr 1516  <|@ instruction rcx|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr 1518  <|@ instruction r9|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1520  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1522  <|@ instruction JUMP ~[] destination: B126 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B122" "B123" 
    successors "B168" 
    xhandlers
    flags 
    probability 4605060389434741781
    begin_IR
      LIR
      nr 1566  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1568  <|@ instruction TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr 1570  <|@ instruction rsi|DWORD = SETCC condition: = <|@ <|@
      nr 1572  <|@ instruction MOVB (x: [rbp|QWORD[.] + 25], y: rsi|DWORD) size: BYTE <|@ <|@
      nr 1574  <|@ instruction rcx|QWORD = SHL rcx|QWORD size: QWORD <|@ <|@
      nr 1576  <|@ instruction rcx|QWORD = SUB (x: rcx|QWORD, ~y: rbx|QWORD) size: QWORD <|@ <|@
      nr 1578  <|@ instruction stack:92|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1580  <|@ instruction r11|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1582  <|@ instruction r10|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1584  <|@ instruction JUMP ~[] destination: B131 -> B168 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B168"
    from_bci -1
    to_bci -1
    predecessors "B94" "B131" "B167" 
    successors "B169" "B170" 
    xhandlers
    flags 
    probability 4605389661644661784
    begin_IR
      LIR
      nr 2152  <|@ instruction [] = LABEL numbPhis: 5 align: false label: ? <|@ <|@
      nr 2154  <|@ instruction rsi|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr 2156  <|@ instruction MOV (x: [rbp|QWORD[.] + 12], y: rsi|DWORD) size: DWORD <|@ <|@
      nr 2158  <|@ instruction MOV (x: [rbp|QWORD[.] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr 2160  <|@ instruction MOV (x: [rbp|QWORD[.] + 20], y: r11|DWORD) size: DWORD <|@ <|@
      nr 2162  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 2164  <|@ instruction BRANCH trueDestinationProbability: 0.6008525479558225 condition: = trueDestination: B168 -> B169 falseDestination: B168 -> B170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B169"
    from_bci -1
    to_bci -1
    predecessors "B168" 
    successors 
    xhandlers
    flags 
    probability 4602341251752896824
    begin_IR
      LIR
      nr 2166  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2168  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B28" 
    xhandlers
    flags 
    probability 4602093470658165717
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  214  <|@ instruction rax|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  216  <|@ instruction JUMP ~[] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B50" "B52" 
    xhandlers
    flags 
    probability 4600127762195097286
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  462  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  464  <|@ instruction rsi|DWORD = SUB (x: rsi|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  466  <|@ instruction CMP rdi|DWORD y: 1 size: DWORD <|@ <|@
      nr  472  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  468  <|@ instruction BRANCH trueDestinationProbability: 0.3620750396336093 condition: = trueDestination: B45 -> B50 falseDestination: B45 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B170"
    from_bci -1
    to_bci -1
    predecessors "B168" 
    successors "B171" "B172" 
    xhandlers
    flags 
    probability 4599430872281685752
    begin_IR
      LIR
      nr 2170  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2172  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr 2174  <|@ instruction BRANCH trueDestinationProbability: 0.7168137687555163 condition: = trueDestination: B170 -> B171 falseDestination: B170 -> B172 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B171"
    from_bci -1
    to_bci -1
    predecessors "B170" 
    successors 
    xhandlers
    flags 
    probability 4597424643074725698
    begin_IR
      LIR
      nr 2176  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2178  <|@ instruction rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2180  <|@ st <@st|@reference-map: []
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:778) [bci: 1505]
locals: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.roundup()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1505] <|@ <|@
      nr 2182  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" "B27" 
    xhandlers
    flags 
    probability 4598518729118579484
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction CMP rdx|DWORD y: 63 size: DWORD <|@ <|@
      nr   52  <|@ instruction BRANCH trueDestinationProbability: 0.9998165784832451 condition: < trueDestination: B4 -> B6 falseDestination: B4 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4596932739975014766
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  426  <|@ instruction r13|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  428  <|@ instruction r14|DWORD = SHL r13|DWORD size: DWORD <|@ <|@
      nr  430  <|@ instruction r14|DWORD = ADD (x: r14|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  432  <|@ instruction rax|DWORD = ADD (x: r11|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  434  <|@ instruction stack:52|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  436  <|@ instruction r14|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  438  <|@ instruction r13|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  440  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4596932739975014766
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  390  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  392  <|@ instruction rsi|DWORD = SUB (x: rsi|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  394  <|@ instruction r9|DWORD = SHL rcx|DWORD size: DWORD <|@ <|@
      nr  396  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  398  <|@ instruction rbp|DWORD = SUB (x: rax|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  400  <|@ instruction stack:44|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  402  <|@ instruction stack:48|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  404  <|@ instruction rsi|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  406  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B22" 
    xhandlers
    flags 
    probability 4596339048911957912
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   92  <|@ instruction CMP rdx|DWORD y: 52 size: DWORD <|@ <|@
      nr   94  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B20" 
    xhandlers
    flags 
    probability 4596339048911957912
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   98  <|@ instruction CMP (x: rdx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  100  <|@ instruction BRANCH trueDestinationProbability: 0.0013467536149702752 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B21" 
    xhandlers
    flags 
    probability 4596329391303238956
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  162  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  164  <|@ instruction JUMP ~[] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" "B20" "B19" "B14" 
    successors 
    xhandlers
    flags 
    probability 4596339048911957912
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  168  <|@ instruction rcx|DWORD = MOVE input: int[52|0x34] <|@ <|@
      nr  170  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: rdx|DWORD) size: DWORD <|@ <|@
      nr  172  <|@ instruction r10|QWORD = SHR (x: r10|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  174  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  176  <|@ instruction rcx|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  178  <|@ st <@st|@reference-map: []
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:476) [bci: 170]
locals: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD, r8|DWORD] [] callTarget: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(int, long, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:170] <|@ <|@
      nr  180  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B45" "B48" 
    successors "B52" 
    xhandlers
    flags 
    probability 4598895958736044594
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr  500  <|@ instruction rsi|DWORD = DEC rsi|DWORD size: DWORD <|@ <|@
      nr  502  <|@ instruction JUMP ~[] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B33" "B177" 
    xhandlers
    flags 
    probability 4594890319253732366
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  308  <|@ instruction CMP r9|DWORD y: 52 size: DWORD <|@ <|@
      nr  310  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B38" "B35" 
    xhandlers
    flags 
    probability 4594890319253732366
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  314  <|@ instruction rsi|QWORD = AND (x: r13|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr  316  <|@ instruction r11|QWORD = MOVE input: long[4503599627370496|0x10000000000000] <|@ <|@
      nr  318  <|@ instruction rsi|QWORD = OR (x: rsi|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  320  <|@ instruction r11|DWORD = MOVE input: int[1075|0x433] <|@ <|@
      nr  322  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  324  <|@ instruction rcx|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  326  <|@ instruction rsi|QWORD = SHR (x: rsi|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  328  <|@ instruction r11|DWORD = MOV rsi|QWORD size: DWORD <|@ <|@
      nr  330  <|@ instruction TEST (x: r14|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr  332  <|@ instruction BRANCH trueDestinationProbability: 0.007647163435888316 condition: = trueDestination: B33 -> B38 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4594846559898331785
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  340  <|@ instruction rcx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  342  <|@ instruction rbp|QWORD = SHR (x: rbp|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  344  <|@ instruction TEST (x: rbp|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr  346  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4594846559898331785
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  360  <|@ instruction rcx|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  362  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  364  <|@ instruction r11|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  366  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B105" "B106" 
    xhandlers
    flags 
    probability 4591374071020439873
    begin_IR
      LIR
      nr 1256  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1258  <|@ instruction rax|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1260  <|@ instruction CMP (x: rdx|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr 1262  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B104 -> B105 falseDestination: B104 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B107" "B114" 
    xhandlers
    flags 
    probability 4591374071020439873
    begin_IR
      LIR
      nr 1292  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1294  <|@ instruction r11|DWORD = DEC r11|DWORD size: DWORD <|@ <|@
      nr 1296  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 1302  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1298  <|@ instruction BRANCH trueDestinationProbability: 0.010669521717460728 condition: = trueDestination: B106 -> B107 falseDestination: B106 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B172"
    from_bci -1
    to_bci -1
    predecessors "B170" 
    successors "B173" "B174" 
    xhandlers
    flags 
    probability 4591188184549903708
    begin_IR
      LIR
      nr 2184  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2186  <|@ instruction TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr 2188  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B172 -> B173 falseDestination: B172 -> B174 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B174"
    from_bci -1
    to_bci -1
    predecessors "B172" 
    successors "B175" "B176" 
    xhandlers
    flags 
    probability 4591188184549903708
    begin_IR
      LIR
      nr 2200  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2202  <|@ instruction CMP rcx|QWORD y: 1 size: QWORD <|@ <|@
      nr 2204  <|@ instruction BRANCH trueDestinationProbability: 0.40049867539348605 condition: < trueDestination: B174 -> B175 falseDestination: B174 -> B176 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B176"
    from_bci -1
    to_bci -1
    predecessors "B174" 
    successors 
    xhandlers
    flags 
    probability 4587982831218834509
    begin_IR
      LIR
      nr 2210  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2212  <|@ instruction rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2214  <|@ st <@st|@reference-map: []
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:775) [bci: 1498]
locals: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.roundup()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1498] <|@ <|@
      nr 2216  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B175"
    from_bci -1
    to_bci -1
    predecessors "B174" 
    successors 
    xhandlers
    flags 
    probability 4585386338626231915
    begin_IR
      LIR
      nr 2206  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2208  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B137" 
    xhandlers
    flags 
    probability 4582924406890760886
    begin_IR
      LIR
      nr 1638  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1640  <|@ instruction stack:68|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1642  <|@ instruction r10|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1644  <|@ instruction stack:76|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1646  <|@ instruction stack:80|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr 1648  <|@ instruction stack:48|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1650  <|@ instruction stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1652  <|@ instruction JUMP ~[] destination: B135 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" "B135" "B64" 
    successors "B138" "B141" 
    xhandlers
    flags 
    probability 4585327503373534833
    begin_IR
      LIR
      nr 1664  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1666  <|@ instruction rsi|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1668  <|@ instruction rdx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1670  <|@ instruction stack:72|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1672  <|@ st <@st|@reference-map: [stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1074]
locals: stack:40|QWORD[.] - stack:64|QWORD - - stack:28|DWORD - - - stack:84|DWORD stack:76|DWORD stack:48|DWORD stack:72|DWORD stack:56|DWORD stack:68|DWORD stack:48|DWORD - - - - - - - - - - - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|DWORD, rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.valueOfPow52(int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1074] <|@ <|@
      nr 1674  <|@ st <@st|@reference-map: [rax:0, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1077]
stack: Object[null] 
locals: stack:40|QWORD[.] - stack:64|QWORD - - stack:28|DWORD - - - stack:84|DWORD stack:76|DWORD stack:48|DWORD stack:72|DWORD stack:56|DWORD stack:68|DWORD stack:48|DWORD - - - - - - - - - - - - - - - - - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:1077] <|@ <|@
      nr 1676  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1678  <|@ instruction stack:104|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1680  <|@ st <@st|@reference-map: [stack:24, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:711) [bci: 1081]
locals: stack:40|QWORD[.] - stack:64|QWORD - - stack:28|DWORD - - - stack:84|DWORD stack:76|DWORD stack:48|DWORD stack:72|DWORD stack:56|DWORD stack:68|DWORD stack:48|DWORD - - - - - - - - - stack:104|QWORD[.] - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.getNormalizationBias()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1081] <|@ <|@
      nr 1682  <|@ instruction rsi|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1684  <|@ instruction rdx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1686  <|@ instruction stack:92|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1688  <|@ st <@st|@reference-map: [stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:712) [bci: 1090]
locals: stack:40|QWORD[.] - stack:64|QWORD - - stack:28|DWORD - - - stack:84|DWORD stack:76|DWORD stack:48|DWORD stack:72|DWORD stack:56|DWORD stack:68|DWORD stack:48|DWORD - - - - - - - - - - stack:92|DWORD - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.leftShift(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1090] <|@ <|@
      nr 1690  <|@ instruction stack:104|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1692  <|@ instruction rcx|DWORD = ADD (x: stack:92|DWORD, y: stack:76|DWORD) size: DWORD <|@ <|@
      nr 1694  <|@ instruction rsi|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr 1696  <|@ instruction rdx|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1698  <|@ st <@st|@reference-map: [stack:24, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:714) [bci: 1103]
locals: stack:40|QWORD[.] - - - - stack:28|DWORD - - - stack:84|DWORD - - stack:72|DWORD stack:56|DWORD stack:68|DWORD stack:48|DWORD - - - - - - - - - stack:104|QWORD[.] stack:92|DWORD - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD, rdx|DWORD, rcx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.valueOfMulPow52(long, int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1103] <|@ <|@
      nr 1700  <|@ instruction stack:64|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1702  <|@ st <@st|@reference-map: [stack:24, stack:64, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:714) [bci: 1106]
stack: Object[null] 
locals: stack:40|QWORD[.] - - - - stack:28|DWORD - - - stack:84|DWORD - - stack:72|DWORD stack:56|DWORD stack:68|DWORD stack:48|DWORD - - - - - - - - - stack:104|QWORD[.] stack:92|DWORD - - - - - - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:1106] <|@ <|@
      nr 1704  <|@ instruction rsi|DWORD = ADD (x: stack:92|DWORD, y: stack:68|DWORD) size: DWORD <|@ <|@
      nr 1706  <|@ instruction rdx|DWORD = INC rsi|DWORD size: DWORD <|@ <|@
      nr 1708  <|@ instruction rsi|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1710  <|@ st <@st|@reference-map: [stack:24, stack:64, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:715) [bci: 1119]
locals: stack:40|QWORD[.] - - - - stack:28|DWORD - - - stack:84|DWORD - - stack:72|DWORD stack:56|DWORD - - - - - - - - - - - stack:104|QWORD[.] stack:92|DWORD stack:64|QWORD[.] - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|DWORD, rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.valueOfPow52(int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1119] <|@ <|@
      nr 1712  <|@ instruction rsi|DWORD = ADD (x: stack:72|DWORD, y: stack:92|DWORD) size: DWORD <|@ <|@
      nr 1714  <|@ instruction rdx|DWORD = INC rsi|DWORD size: DWORD <|@ <|@
      nr 1716  <|@ instruction rsi|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr 1718  <|@ instruction stack:112|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1720  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:64, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:717) [bci: 1135]
locals: stack:40|QWORD[.] - - - - stack:28|DWORD - - - stack:84|DWORD - - - - - - - - - - - - - - - stack:104|QWORD[.] - stack:64|QWORD[.] stack:112|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|DWORD, rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.valueOfPow52(int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1135] <|@ <|@
      nr 1722  <|@ instruction stack:120|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1724  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24, stack:64, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:717) [bci: 1138]
stack: Object[null] 
locals: stack:40|QWORD[.] - - - - stack:28|DWORD - - - stack:84|DWORD - - - - - - - - - - - - - - - stack:104|QWORD[.] - stack:64|QWORD[.] stack:112|QWORD[.] - - - - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:1138] <|@ <|@
      nr 1726  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1728  <|@ instruction rdx|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1730  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24, stack:64, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:724) [bci: 1147]
locals: stack:40|QWORD[.] - - - - stack:28|DWORD - - - stack:84|DWORD - - - - - - - int[0|0x0] - - - - - - - stack:104|QWORD[.] - stack:64|QWORD[.] stack:112|QWORD[.] stack:120|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.quoRemIteration(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1147] <|@ <|@
      nr 1732  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1734  <|@ instruction rdx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1736  <|@ instruction stack:80|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1738  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24, stack:64, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:725) [bci: 1156]
locals: stack:40|QWORD[.] - - - - stack:28|DWORD - - - stack:84|DWORD - - - - - - - int[0|0x0] - - - - stack:80|DWORD - - stack:104|QWORD[.] - stack:64|QWORD[.] stack:112|QWORD[.] stack:120|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1156] <|@ <|@
      nr 1740  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 1742  <|@ instruction r10|DWORD = SETCC condition: < <|@ <|@
      nr 1744  <|@ instruction rsi|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1746  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1748  <|@ instruction rcx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1750  <|@ instruction stack:92|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1752  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24, stack:64, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:726) [bci: 1175]
locals: stack:40|QWORD[.] - - - - stack:28|DWORD - - - stack:84|DWORD - - - - - - - int[0|0x0] stack:92|DWORD - - - stack:80|DWORD - - stack:104|QWORD[.] - stack:64|QWORD[.] stack:112|QWORD[.] stack:120|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1175] <|@ <|@
      nr 1754  <|@ instruction r10|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr 1756  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 1758  <|@ instruction BRANCH trueDestinationProbability: 0.10979929161747348 condition: = trueDestination: B137 -> B138 falseDestination: B137 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B137" 
    successors "B142" 
    xhandlers
    flags 
    probability 4584760205312838425
    begin_IR
      LIR
      nr 1782  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1784  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1786  <|@ instruction JUMP ~[] destination: B141 -> B142 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" "B138" 
    successors "B143" "B144" 
    xhandlers
    flags 
    probability 4584920838097049953
    begin_IR
      LIR
      nr 1788  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1790  <|@ instruction rdx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr 1792  <|@ instruction CMP rax|DWORD y: 1 size: DWORD <|@ <|@
      nr 1794  <|@ instruction r11|DWORD = SETCC condition: < <|@ <|@
      nr 1796  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:8, stack:16, stack:24, stack:64, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1227]
locals: rsi|QWORD[.] - - - - stack:28|DWORD - - - stack:84|DWORD - - - - - - - int[0|0x0] stack:92|DWORD r11|DWORD - - r10|DWORD - - stack:104|QWORD[.] - stack:64|QWORD[.] stack:112|QWORD[.] stack:120|QWORD[.] - - - 
>@ <|@ instruction CMP [rdx|DWORD[.] * 8 + 12] y: 0 size: DWORD state [bci:1227] <|@ <|@
      nr 1798  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B142 -> B143 falseDestination: B142 -> B144 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B145" 
    xhandlers
    flags 
    probability 4584920838097049953
    begin_IR
      LIR
      nr 1822  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1824  <|@ instruction r10|DWORD = LEA [r10|DWORD + 48] size: DWORD <|@ <|@
      nr 1826  <|@ instruction MOV (x: [rdx|DWORD[.] * 8 + 16], y: r10|DWORD) size: WORD <|@ <|@
      nr 1828  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1830  <|@ instruction r11|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr 1832  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1834  <|@ instruction JUMP ~[] destination: B144 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B140" "B144" 
    successors "B146" "B147" 
    xhandlers
    flags 
    probability 4585327503373534833
    begin_IR
      LIR
      nr 1836  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1838  <|@ instruction stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1840  <|@ instruction TEST (x: rbp|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr 1842  <|@ instruction BRANCH trueDestinationProbability: 0.0448642266824085 condition: = trueDestination: B145 -> B146 falseDestination: B145 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B145" 
    successors "B148" "B149" 
    xhandlers
    flags 
    probability 4585095704165938451
    begin_IR
      LIR
      nr 1852  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1854  <|@ instruction CMP r11|DWORD y: -3 size: DWORD <|@ <|@
      nr 1856  <|@ instruction BRANCH trueDestinationProbability: 0.2735887927482489 condition: < trueDestination: B147 -> B148 falseDestination: B147 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B147" 
    successors "B150" "B151" 
    xhandlers
    flags 
    probability 4582826730232852371
    begin_IR
      LIR
      nr 1866  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1868  <|@ instruction CMP r11|DWORD y: 8 size: DWORD <|@ <|@
      nr 1870  <|@ instruction BRANCH trueDestinationProbability: 0.998298355076574 condition: < trueDestination: B149 -> B150 falseDestination: B149 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B149" 
    successors "B152" 
    xhandlers
    flags 
    probability 4582814530274557825
    begin_IR
      LIR
      nr 1872  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1874  <|@ instruction CMP rax|DWORD y: 1 size: DWORD <|@ <|@
      nr 1876  <|@ instruction rdx|DWORD = SETCC condition: < <|@ <|@
      nr 1878  <|@ instruction r8|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1880  <|@ instruction rdx|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1882  <|@ instruction JUMP ~[] destination: B150 -> B152 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B150" "B146" "B151" "B148" 
    successors "B153" 
    xhandlers
    flags 
    probability 4585327503373534833
    begin_IR
      LIR
      nr 1892  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1894  <|@ instruction rbx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1896  <|@ instruction rcx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1898  <|@ instruction r9|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1906  <|@ instruction JUMP ~[] destination: B152 -> B153 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B153" 
    successors "B155" "B160" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4603175615809548529
    begin_IR
      LIR
      nr 1914  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1916  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1918  <|@ instruction BRANCH trueDestinationProbability: 0.9936234534969387 condition: = trueDestination: B154 -> B155 falseDestination: B154 -> B160 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B154" 
    successors "B156" "B157" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4603143730550235664
    begin_IR
      LIR
      nr 1920  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1922  <|@ st <@st|@reference-map: [rax:0, rbx:0, r10:0, stack:8, stack:24, stack:64, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1268]
locals: stack:40|QWORD[.] - - - - - - - - stack:84|DWORD - - - - - - - stack:92|DWORD int[0|0x0] int[0|0x0] - - - - - r10|QWORD[.] - rax|QWORD[.] Object[null] stack:120|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK [rbx|QWORD[.]] state [bci:1268] <|@ <|@
      nr 1924  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1926  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1928  <|@ instruction stack:112|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1930  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24, stack:64, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:745) [bci: 1282]
locals: stack:40|QWORD[.] - - - - - - - - stack:84|DWORD - - - - - - - stack:92|DWORD - - - - - - - stack:104|QWORD[.] - stack:64|QWORD[.] stack:112|QWORD[.] stack:120|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.quoRemIteration(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1282] <|@ <|@
      nr 1932  <|@ instruction rsi|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1934  <|@ instruction stack:80|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1936  <|@ st <@st|@reference-map: [stack:8, stack:24, stack:64, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:747) [bci: 1312]
locals: stack:40|QWORD[.] - - - - - - - - stack:84|DWORD - - - - - - - stack:92|DWORD - - - - stack:80|DWORD - - stack:104|QWORD[.] - stack:64|QWORD[.] - stack:120|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.multBy10()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1312] <|@ <|@
      nr 1938  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1940  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1942  <|@ instruction stack:112|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1944  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24, stack:64, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
locals: stack:40|QWORD[.] - - - - - - - - stack:84|DWORD - - - - - - - stack:92|DWORD - - - - stack:80|DWORD - - stack:104|QWORD[.] - stack:64|QWORD[.] stack:112|QWORD[.] stack:120|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1321] <|@ <|@
      nr 1946  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 1948  <|@ instruction r9|DWORD = SETCC condition: < <|@ <|@
      nr 1950  <|@ instruction rsi|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1952  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1954  <|@ instruction rcx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1956  <|@ instruction stack:72|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1958  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24, stack:64, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1340]
locals: stack:40|QWORD[.] - - - - - - - - stack:84|DWORD - - - - - - - stack:92|DWORD stack:72|DWORD - - - stack:80|DWORD - - stack:104|QWORD[.] - stack:64|QWORD[.] stack:112|QWORD[.] stack:120|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1340] <|@ <|@
      nr 1960  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1962  <|@ instruction rdx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr 1964  <|@ instruction r10|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1966  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:8, stack:16, stack:24, stack:64, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1343]
stack: rax|DWORD 
locals: rsi|QWORD[.] - - - - - - - - stack:84|DWORD - - - - - - - r10|DWORD stack:72|DWORD - - - stack:80|DWORD - - stack:104|QWORD[.] - stack:64|QWORD[.] stack:112|QWORD[.] stack:120|QWORD[.] - - - 
>@ <|@ instruction CMP (x: r10|DWORD, y: [rdx|DWORD[.] * 8 + 12]) size: DWORD state [bci:1343] <|@ <|@
      nr 1968  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B155 -> B156 falseDestination: B155 -> B157 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B156"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors "B153" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4603143730550235664
    begin_IR
      LIR
      nr 1970  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1972  <|@ instruction r11|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr 1974  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@40447647 encoding: base: 0 shift: 3 <|@ <|@
      nr 1976  <|@ instruction r11|DWORD = LEA [r11|DWORD + 48] size: DWORD <|@ <|@
      nr 1978  <|@ instruction MOV (x: [rdx|QWORD[.] + r10|DWORD * 2 + 16], y: r11|DWORD) size: WORD <|@ <|@
      nr 1980  <|@ instruction CMP rax|DWORD y: 1 size: DWORD <|@ <|@
      nr 1982  <|@ instruction rcx|DWORD = SETCC condition: < <|@ <|@
      nr 1984  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr 1986  <|@ instruction rbx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1988  <|@ instruction r9|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr 1996  <|@ instruction JUMP ~[] destination: B156 -> B153 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B152" "B156" 
    successors "B154" "B160" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4603466648196344439
    begin_IR
      LIR
      nr 1908  <|@ instruction [] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr 1900  <|@ instruction stack:92|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1902  <|@ instruction rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1904  <|@ instruction r10|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1910  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1912  <|@ instruction BRANCH trueDestinationProbability: 0.9449992797810535 condition: = trueDestination: B153 -> B154 falseDestination: B153 -> B160 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B160"
    from_bci -1
    to_bci -1
    predecessors "B153" "B154" 
    successors "B161" "B162" 
    xhandlers
    flags 
    probability 4585327503373534834
    begin_IR
      LIR
      nr 2032  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2026  <|@ instruction r10|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 2028  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2034  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr 2036  <|@ instruction BRANCH trueDestinationProbability: 0.045633359559402044 condition: = trueDestination: B160 -> B161 falseDestination: B160 -> B162 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B162"
    from_bci -1
    to_bci -1
    predecessors "B160" 
    successors "B163" "B164" 
    xhandlers
    flags 
    probability 4585091730300687514
    begin_IR
      LIR
      nr 2052  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2054  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 2056  <|@ instruction BRANCH trueDestinationProbability: 0.10346248969497114 condition: = trueDestination: B162 -> B163 falseDestination: B162 -> B164 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B164"
    from_bci -1
    to_bci -1
    predecessors "B162" 
    successors "B165" 
    xhandlers
    flags 
    probability 4584498711640198423
    begin_IR
      LIR
      nr 2072  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2074  <|@ instruction stack:80|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 2076  <|@ instruction stack:72|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 2078  <|@ instruction stack:92|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 2080  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2082  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 2084  <|@ st <@st|@reference-map: [stack:8, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:753) [bci: 1385]
locals: stack:40|QWORD[.] - - - - - - - - stack:84|DWORD - - - - - - - stack:92|DWORD stack:72|DWORD stack:80|DWORD - - - - - - - - - stack:120|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.leftShift(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1385] <|@ <|@
      nr 2086  <|@ st <@st|@reference-map: [rax:0, stack:8, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:753) [bci: 1388]
stack: Object[null] 
locals: stack:40|QWORD[.] - - - - - - - - stack:84|DWORD - - - - - - - stack:92|DWORD stack:72|DWORD stack:80|DWORD - - - - - - - - - stack:120|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:1388] <|@ <|@
      nr 2088  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2090  <|@ instruction rdx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2092  <|@ instruction stack:120|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2094  <|@ st <@st|@reference-map: [stack:8, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:754) [bci: 1394]
locals: stack:40|QWORD[.] - - - - - - - - stack:84|DWORD - - - - - - - stack:92|DWORD stack:72|DWORD stack:80|DWORD - - - - - - - stack:120|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1394] <|@ <|@
      nr 2096  <|@ instruction rsi|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr 2098  <|@ instruction rax|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2100  <|@ instruction stack:104|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 2102  <|@ instruction JUMP ~[] destination: B164 -> B165 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B165"
    from_bci -1
    to_bci -1
    predecessors "B164" "B161" "B163" 
    successors "B166" "B167" 
    xhandlers
    flags 
    probability 4585327503373534833
    begin_IR
      LIR
      nr 2104  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 2106  <|@ instruction rdx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[FDBigInteger@241972498] <|@ <|@
      nr 2108  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2110  <|@ st <@st|@reference-map: [stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1412]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] - - - - - - - - stack:84|DWORD - - - - - - - stack:92|DWORD stack:72|DWORD stack:80|DWORD stack:104|QWORD - - - - - - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1412] <|@ <|@
      nr 2112  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 2114  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B165 -> B166 falseDestination: B165 -> B167 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B167"
    from_bci -1
    to_bci -1
    predecessors "B165" 
    successors "B168" 
    xhandlers
    flags 
    probability 4585327503373534833
    begin_IR
      LIR
      nr 2132  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2134  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2136  <|@ instruction MOVB (x: [rsi|QWORD[.] + 25], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 2138  <|@ instruction rcx|QWORD = MOVE stack:104|QWORD moveKind: QWORD <|@ <|@
      nr 2140  <|@ instruction r9|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr 2142  <|@ instruction r8|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr 2144  <|@ instruction r11|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 2146  <|@ instruction r10|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr 2148  <|@ instruction rbp|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2150  <|@ instruction JUMP ~[] destination: B167 -> B168 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B137" 
    xhandlers
    flags 
    probability 4577285656086886675
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  660  <|@ instruction stack:68|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  662  <|@ instruction r10|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  664  <|@ instruction stack:76|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  666  <|@ instruction stack:80|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  668  <|@ instruction stack:48|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  670  <|@ instruction stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  672  <|@ instruction JUMP ~[] destination: B64 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B147" 
    successors "B152" 
    xhandlers
    flags 
    probability 4576554136652772647
    begin_IR
      LIR
      nr 1858  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1860  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1862  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1864  <|@ instruction JUMP ~[] destination: B148 -> B152 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B119" 
    xhandlers
    flags 
    probability 4574907670107426078
    begin_IR
      LIR
      nr 1362  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1366  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1368  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1370  <|@ instruction JUMP ~[] destination: B112 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B137" 
    successors "B142" "B140" 
    xhandlers
    flags 
    probability 4571188406639254207
    begin_IR
      LIR
      nr 1760  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1762  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1764  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1766  <|@ instruction CMP rax|DWORD y: 1 size: DWORD <|@ <|@
      nr 1768  <|@ instruction BRANCH trueDestinationProbability: 0.2831541218637993 condition: < trueDestination: B138 -> B142 falseDestination: B138 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B138" 
    successors "B145" 
    xhandlers
    flags 
    probability 4568653066950070531
    begin_IR
      LIR
      nr 1774  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1776  <|@ instruction r11|DWORD = DEC stack:84|DWORD size: DWORD <|@ <|@
      nr 1778  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1780  <|@ instruction JUMP ~[] destination: B140 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B163"
    from_bci -1
    to_bci -1
    predecessors "B162" 
    successors "B165" 
    xhandlers
    flags 
    probability 4570309048910405860
    begin_IR
      LIR
      nr 2058  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2060  <|@ instruction rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2062  <|@ instruction stack:104|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2064  <|@ instruction stack:80|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 2066  <|@ instruction stack:72|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 2068  <|@ instruction stack:92|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 2070  <|@ instruction JUMP ~[] destination: B163 -> B165 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B161"
    from_bci -1
    to_bci -1
    predecessors "B160" 
    successors "B165" 
    xhandlers
    flags 
    probability 4565187561230056182
    begin_IR
      LIR
      nr 2038  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2040  <|@ instruction rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2042  <|@ instruction stack:104|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2044  <|@ instruction stack:80|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 2046  <|@ instruction stack:72|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 2048  <|@ instruction stack:92|DWORD = MOVE r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 2050  <|@ instruction JUMP ~[] destination: B161 -> B165 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B145" 
    successors "B152" 
    xhandlers
    flags 
    probability 4565060397542026164
    begin_IR
      LIR
      nr 1844  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1846  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1848  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1850  <|@ instruction JUMP ~[] destination: B146 -> B152 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B119" 
    xhandlers
    flags 
    probability 4562224503551966794
    begin_IR
      LIR
      nr 1300  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1304  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1306  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1308  <|@ instruction JUMP ~[] destination: B107 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B28" 
    xhandlers
    flags 
    probability 4560165896057405122
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  208  <|@ instruction rax|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B25 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B72" "B100" 
    xhandlers
    flags 
    probability 4559646296614268741
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  748  <|@ instruction stack:52|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  750  <|@ instruction stack:88|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  752  <|@ instruction stack:92|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  754  <|@ instruction stack:68|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  756  <|@ instruction stack:72|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  758  <|@ instruction stack:76|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  760  <|@ instruction stack:48|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  762  <|@ instruction stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  764  <|@ instruction rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  766  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  768  <|@ instruction CMP rcx|DWORD y: 32 size: DWORD <|@ <|@
      nr  770  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B71 -> B72 falseDestination: B71 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B73" "B99" 
    xhandlers
    flags 
    probability 4559646296614268741
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  774  <|@ instruction CMP stack:48|DWORD y: 14 size: DWORD <|@ <|@
      nr  776  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B72 -> B73 falseDestination: B72 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B74" "B98" 
    xhandlers
    flags 
    probability 4559646296614268741
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  780  <|@ instruction CMP stack:56|DWORD y: 14 size: DWORD <|@ <|@
      nr  782  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B73 -> B74 falseDestination: B73 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4559646296614268741
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  786  <|@ st <@st|@reference-map: [rsi:0, r14:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365]
stack: stack:52|DWORD stack:92|DWORD 
locals: rsi|QWORD[.] - stack:64|QWORD - - rbp|DWORD - - - stack:84|DWORD stack:76|DWORD stack:48|DWORD stack:72|DWORD stack:56|DWORD stack:68|DWORD stack:48|DWORD - - - - - - - stack:88|DWORD - - - - - - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r14|DWORD[.] * 8] state [bci:365] <|@ <|@
      nr  788  <|@ instruction TEST (x: rbp|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  790  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4559646296614268741
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  812  <|@ instruction CMP stack:84|DWORD y: -3 size: DWORD <|@ <|@
      nr  814  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B97" 
    xhandlers
    flags 
    probability 4559646296614268741
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  836  <|@ instruction CMP stack:84|DWORD y: 8 size: DWORD <|@ <|@
      nr  838  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B78 -> B79 falseDestination: B78 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B80" "B81" 
    xhandlers
    flags 
    probability 4559646296614268741
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  842  <|@ instruction r13|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  844  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[14]{1, 5, 25, 125, 625, ...}] <|@ <|@
      nr  846  <|@ instruction rdx|DWORD = MOV [rax|QWORD[.] + r13|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  848  <|@ instruction rcx|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  850  <|@ instruction r10|DWORD = SHL (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  852  <|@ instruction rcx|DWORD = SHL r10|DWORD y: 3 size: DWORD <|@ <|@
      nr  854  <|@ instruction r10|DWORD = SHL r10|DWORD size: DWORD <|@ <|@
      nr  856  <|@ instruction r10|DWORD = ADD (x: rcx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  858  <|@ instruction rcx|DWORD = SHL r10|DWORD y: 3 size: DWORD <|@ <|@
      nr  860  <|@ instruction r11|DWORD = SHL r10|DWORD size: DWORD <|@ <|@
      nr  862  <|@ instruction r11|DWORD = ADD (x: rcx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  864  <|@ instruction CMP r11|DWORD y: 1 size: DWORD <|@ <|@
      nr  866  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B79 -> B80 falseDestination: B79 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" "B83" 
    xhandlers
    flags 
    probability 4559646296614268741
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  886  <|@ instruction CMP [r14|DWORD[.] * 8 + 12] y: 2 size: DWORD <|@ <|@
      nr  888  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B81 -> B82 falseDestination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    probability 4559646296614268741
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  908  <|@ instruction r9|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr  910  <|@ instruction rax|DWORD = MOV [rax|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  912  <|@ instruction rcx|DWORD = MOV stack:64|QWORD size: DWORD <|@ <|@
      nr  914  <|@ instruction rdx|DWORD = IMUL (x: rcx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  916  <|@ instruction rcx|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  918  <|@ instruction rdx|DWORD = SHL (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  920  <|@ instruction rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  922  <|@ instruction r8|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  924  <|@ instruction rax|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  926  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ rax|DWORD size: DWORD <|@ <|@
      nr  928  <|@ st <@st|@reference-map: [rsi:0, r14:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365]
stack: stack:52|DWORD stack:92|DWORD 
locals: rsi|QWORD[.] - stack:64|QWORD - - rbp|DWORD - - - stack:84|DWORD stack:76|DWORD r13|DWORD stack:72|DWORD r9|DWORD stack:68|DWORD r13|DWORD - - - - - - - stack:88|DWORD - - - - - - - - - 
>@ <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: r8|DWORD) size: DWORD state [bci:365] <|@ <|@
      nr  930  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  932  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" "B87" 
    xhandlers
    flags 
    probability 4559646296614268741
    begin_IR
      LIR
      nr  950  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  952  <|@ instruction rcx|DWORD = SHL rdx|DWORD y: 3 size: DWORD <|@ <|@
      nr  954  <|@ instruction rdx|DWORD = SHL rdx|DWORD size: DWORD <|@ <|@
      nr  956  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  958  <|@ instruction CMP (x: r10|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  960  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    probability 4559646296614268741
    begin_IR
      LIR
      nr  978  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  980  <|@ instruction rdx|DWORD = SHL r8|DWORD y: 3 size: DWORD <|@ <|@
      nr  982  <|@ instruction rbx|DWORD = SHL r8|DWORD size: DWORD <|@ <|@
      nr  984  <|@ instruction rbx|DWORD = ADD (x: rdx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  986  <|@ instruction rdx|DWORD = ADD (x: rcx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  988  <|@ instruction CMP (x: rdx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  990  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B87 -> B88 falseDestination: B87 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" "B95" 
    xhandlers
    flags 
    probability 4559646296614268741
    begin_IR
      LIR
      nr 1008  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1010  <|@ instruction rax|DWORD = LEA [rax|DWORD + 48] size: DWORD <|@ <|@
      nr 1012  <|@ instruction MOV (x: [r14|DWORD[.] * 8 + 16], y: rax|DWORD) size: WORD <|@ <|@
      nr 1014  <|@ instruction rax|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1016  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ rax|DWORD size: DWORD <|@ <|@
      nr 1018  <|@ st <@st|@reference-map: [rsi:0, r14:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 552]
locals: rsi|QWORD[.] - - - - rbp|DWORD - - - stack:84|DWORD - - - - - - - int[1|0x1] int[0|0x0] int[0|0x0] - - - - - rcx|DWORD r8|DWORD r10|DWORD rbx|DWORD - - - - 
>@ <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: r8|DWORD) size: DWORD state [bci:552] <|@ <|@
      nr 1020  <|@ instruction r9|DWORD = SHL rdx|DWORD y: 3 size: DWORD <|@ <|@
      nr 1022  <|@ instruction rdx|DWORD = SHL rdx|DWORD size: DWORD <|@ <|@
      nr 1024  <|@ instruction r9|DWORD = ADD (x: r9|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1026  <|@ instruction CMP (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1028  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B89 -> B90 falseDestination: B89 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B91" "B92" 
    xhandlers
    flags 
    probability 4559646296614268741
    begin_IR
      LIR
      nr 1030  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1032  <|@ instruction r11|DWORD = ADD (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1034  <|@ instruction CMP (x: r11|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr 1036  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B90 -> B91 falseDestination: B90 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B93" "B94" 
    xhandlers
    flags 
    probability 4559646296614268741
    begin_IR
      LIR
      nr 1048  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1050  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1052  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B92 -> B93 falseDestination: B92 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B168" 
    xhandlers
    flags 
    probability 4559646296614268741
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1066  <|@ instruction r10|DWORD = LEA [rax|DWORD + 48] size: DWORD <|@ <|@
      nr 1068  <|@ instruction MOV (x: [r14|DWORD[.] * 8 + 18], y: r10|DWORD) size: WORD <|@ <|@
      nr 1070  <|@ instruction r9|DWORD = SHL r9|DWORD size: DWORD <|@ <|@
      nr 1072  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr 1074  <|@ instruction rcx|QWORD = MOVSXD r9|DWORD size: QWORD <|@ <|@
      nr 1076  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1078  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1080  <|@ instruction r11|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr 1082  <|@ instruction r10|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr 1084  <|@ instruction rbp|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1086  <|@ instruction JUMP ~[] destination: B94 -> B168 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B28" 
    xhandlers
    flags 
    probability 4555402587703614778
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   66  <|@ instruction rax|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   68  <|@ instruction JUMP ~[] destination: B7 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4553580319308306455
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  104  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction r11|DWORD = SUB (x: rdx|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction r11|DWORD = DEC r11|DWORD size: DWORD <|@ <|@
      nr  110  <|@ instruction CMP r11|DWORD y: 2 size: DWORD <|@ <|@
      nr  112  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B19" 
    xhandlers
    flags 
    probability 4549076719680935959
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  122  <|@ instruction r9|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:sun.misc.FloatingDecimal$BinaryToASCIIBuffer] <|@ <|@
      nr  124  <|@ instruction r9|DWORD[.] = MOV [r9|QWORD[.] + 104] size: DWORD <|@ <|@
      nr  126  <|@ st <@st|@reference-map: [rsi:0, r9:0]
live-base-pointers: []
java.lang.Math.max(Math.java:1252) [bci: 10]
stack: int[0|0x0] 
locals: - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 74]
locals: rsi|QWORD[.] rdx|DWORD r10|QWORD - r8|DWORD rbp|DWORD rbx|DWORD rdi|DWORD - - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction rcx|DWORD = MOV [r9|DWORD[.] * 8 + 12] size: DWORD state [bci:10, 74] <|@ <|@
      nr  128  <|@ instruction CMP (x: rcx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  130  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B21" 
    xhandlers
    flags 
    probability 4544573120053565463
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  156  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  158  <|@ instruction JUMP ~[] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B119" 
    xhandlers
    flags 
    probability 4549337389257036309
    begin_IR
      LIR
      nr 1416  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1418  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1420  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1422  <|@ instruction JUMP ~[] destination: B118 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B28" 
    xhandlers
    flags 
    probability 4549078280250449777
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B3 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 4549076719680935959
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  116  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  118  <|@ instruction JUMP ~[] destination: B14 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4544573120053565463
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  134  <|@ instruction CMP (x: rcx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  136  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B21" 
    xhandlers
    flags 
    probability 4544573120053565463
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  140  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@40447647 encoding: base: 0 shift: 3 <|@ <|@
      nr  142  <|@ instruction r8|DWORD = MOV [r9|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  144  <|@ instruction JUMP ~[] destination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B28" 
    xhandlers
    flags 
    probability 4542408038045123131
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  220  <|@ instruction rax|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  222  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" "B67" 
    xhandlers
    flags 
    probability 4541371596739487840
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  586  <|@ instruction stack:68|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  588  <|@ instruction stack:72|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  590  <|@ instruction stack:76|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  592  <|@ instruction stack:80|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  594  <|@ instruction r9|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  596  <|@ instruction r13|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  598  <|@ instruction stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  600  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[27]{0, 3, 5, 7, 10, ...}] <|@ <|@
      nr  602  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  604  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  606  <|@ instruction r10|DWORD = ADD (x: stack:48|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  608  <|@ instruction CMP stack:80|DWORD y: 27 size: DWORD <|@ <|@
      nr  614  <|@ instruction rbx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  610  <|@ instruction BRANCH trueDestinationProbability: 0.9999471523948773 condition: < trueDestination: B59 -> B60 falseDestination: B59 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" 
    xhandlers
    flags 
    probability 4541371266612549087
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  616  <|@ instruction rdx|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  618  <|@ instruction r10|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction rcx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  628  <|@ instruction rsi|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  630  <|@ instruction r13|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  632  <|@ instruction r11|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  634  <|@ instruction r9|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  636  <|@ instruction JUMP ~[] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B149" 
    successors "B152" 
    xhandlers
    flags 
    probability 4541371203408897121
    begin_IR
      LIR
      nr 1884  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1886  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1888  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1890  <|@ instruction JUMP ~[] destination: B151 -> B152 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B67" 
    xhandlers
    flags 
    probability 4541371156570236319
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  564  <|@ instruction stack:68|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  566  <|@ instruction stack:72|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  568  <|@ instruction stack:76|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  570  <|@ instruction stack:80|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  572  <|@ instruction r9|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  574  <|@ instruction r13|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  576  <|@ instruction stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  578  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  580  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  582  <|@ instruction JUMP ~[] destination: B58 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B59" "B58" 
    successors "B68" "B136" 
    xhandlers
    flags 
    probability 4541371486697175072
    begin_IR
      LIR
      nr  698  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  700  <|@ instruction CMP rbx|DWORD y: 64 size: DWORD <|@ <|@
      nr  702  <|@ instruction BRANCH trueDestinationProbability: 0.9867185711014427 condition: < trueDestination: B67 -> B68 falseDestination: B67 -> B136 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B69" 
    xhandlers
    flags 
    probability 4541288522100830908
    begin_IR
      LIR
      nr  704  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  706  <|@ instruction r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  708  <|@ instruction r10|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  716  <|@ instruction r11|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  718  <|@ instruction rsi|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  720  <|@ instruction r13|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  722  <|@ instruction r9|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  724  <|@ instruction JUMP ~[] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B137" 
    xhandlers
    flags 
    probability 4513412961163892986
    begin_IR
      LIR
      nr 1654  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1656  <|@ instruction r10|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr 1658  <|@ instruction stack:48|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1660  <|@ instruction r13|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1662  <|@ instruction JUMP ~[] destination: B136 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1106  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1108  <|@ instruction r10|DWORD = MOVE input: int[-278803|0xfffffffffffbbeed] <|@ <|@
      nr 1112  <|@ instruction rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr 1114  <|@ instruction r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1116  <|@ instruction rcx|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr 1118  <|@ instruction r13|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1120  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1122  <|@ instruction JUMP ~[] destination: B97 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B105" "B100" "B99" "B98" "B75" "B133" "B132" "B77" "B110" "B80" "B97" "B82" "B84" "B86" "B88" 
    successors 
    xhandlers
    flags 
    probability 2372834053670830080
    begin_IR
      LIR
      nr 1630  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1632  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1634  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1636  <|@ st <@st|@reference-map: [r14:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365]
stack: rdx|DWORD r8|DWORD 
locals: r14|QWORD[.] - stack:64|QWORD - - rbp|DWORD - - - stack:84|DWORD stack:76|DWORD r13|DWORD stack:72|DWORD rcx|DWORD stack:68|DWORD r13|DWORD - - - - - - - rbx|DWORD - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:365] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1054  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1056  <|@ instruction r11|DWORD = MOVE input: int[-282387|0xfffffffffffbb0ed] <|@ <|@
      nr 1062  <|@ instruction JUMP ~[] destination: B93 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B91" "B95" "B93" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1098  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1042  <|@ instruction r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr 1044  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1100  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1102  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1104  <|@ st <@st|@reference-map: [r14:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 552]
locals: r14|QWORD[.] - - - - rbp|DWORD - - - r9|DWORD - - - - - - - int[1|0x1] int[0|0x0] int[0|0x0] - - - - - rcx|DWORD r8|DWORD r10|DWORD rbx|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:552] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1038  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1040  <|@ instruction r11|DWORD = MOVE input: int[-279571|0xfffffffffffbbbed] <|@ <|@
      nr 1046  <|@ instruction JUMP ~[] destination: B91 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  936  <|@ instruction r10|DWORD = MOVE input: int[-273427|0xfffffffffffbd3ed] <|@ <|@
      nr  938  <|@ instruction rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  940  <|@ instruction rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr  942  <|@ instruction r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr  944  <|@ instruction rcx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  946  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  948  <|@ instruction JUMP ~[] destination: B84 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  818  <|@ instruction r10|DWORD = MOVE input: int[-278547|0xfffffffffffbbfed] <|@ <|@
      nr  822  <|@ instruction rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr  824  <|@ instruction r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr  826  <|@ instruction rcx|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr  828  <|@ instruction r13|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  830  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  832  <|@ instruction JUMP ~[] destination: B77 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  870  <|@ instruction r10|DWORD = MOVE input: int[-279059|0xfffffffffffbbded] <|@ <|@
      nr  872  <|@ instruction rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  874  <|@ instruction rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr  876  <|@ instruction r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr  878  <|@ instruction rcx|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr  880  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  882  <|@ instruction JUMP ~[] destination: B80 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  794  <|@ instruction r10|DWORD = MOVE input: int[-278291|0xfffffffffffbc0ed] <|@ <|@
      nr  798  <|@ instruction rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr  800  <|@ instruction r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr  802  <|@ instruction rcx|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr  804  <|@ instruction r13|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  806  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  808  <|@ instruction JUMP ~[] destination: B75 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1124  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1126  <|@ instruction r10|DWORD = MOVE input: int[-270875|0xfffffffffffbdde5] <|@ <|@
      nr 1130  <|@ instruction rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr 1132  <|@ instruction r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1134  <|@ instruction rcx|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr 1136  <|@ instruction r13|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1138  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1140  <|@ instruction JUMP ~[] destination: B98 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1142  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1144  <|@ instruction r10|DWORD = MOVE input: int[-268827|0xfffffffffffbe5e5] <|@ <|@
      nr 1148  <|@ instruction rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr 1150  <|@ instruction r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1152  <|@ instruction rcx|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr 1154  <|@ instruction r13|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1156  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1158  <|@ instruction JUMP ~[] destination: B99 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1162  <|@ instruction r10|DWORD = MOVE input: int[-268051|0xfffffffffffbe8ed] <|@ <|@
      nr 1166  <|@ instruction rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr 1168  <|@ instruction r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1170  <|@ instruction rcx|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr 1172  <|@ instruction r13|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1174  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1176  <|@ instruction JUMP ~[] destination: B100 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  676  <|@ instruction rcx|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction r13|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  680  <|@ instruction stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  682  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  684  <|@ instruction r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  686  <|@ instruction MOV [r15|QWORD + 668] y: -266267 size: DWORD <|@ <|@
      nr  688  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  690  <|@ st <@st|@reference-map: [r14:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:591) [bci: 330]
stack: r8|DWORD rdx|DWORD 
locals: r14|QWORD[.] - r10|QWORD - - rbp|DWORD - - - stack:84|DWORD r9|DWORD r13|DWORD rax|DWORD rcx|DWORD rsi|DWORD r13|DWORD - - - - - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:330] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1430  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1432  <|@ instruction r14|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1434  <|@ instruction rdx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@464852764] <|@ <|@
      nr 1436  <|@ instruction MOV [r15|QWORD + 668] y: -330763 size: DWORD <|@ <|@
      nr 1438  <|@ instruction MOV (x: [r15|QWORD + 680], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr 1440  <|@ st <@st|@reference-map: [r14:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
locals: r14|QWORD[.] - - - - - - - - r11|DWORD - - - - - - - r10|DWORD r9|DWORD rdi|DWORD - - - - - r8|QWORD - r13|QWORD - rcx|QWORD - rbx|QWORD - 
>@ <|@ instruction DEOPT info [bci:914] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  890  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  892  <|@ instruction r10|DWORD = MOVE input: int[-320027|0xfffffffffffb1de5] <|@ <|@
      nr  894  <|@ instruction rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  896  <|@ instruction rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr  898  <|@ instruction r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr  900  <|@ instruction rcx|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr  902  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  904  <|@ instruction JUMP ~[] destination: B82 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B173"
    from_bci -1
    to_bci -1
    predecessors "B172" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2190  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2192  <|@ instruction r14|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2194  <|@ instruction MOV [r15|QWORD + 668] y: -316947 size: DWORD <|@ <|@
      nr 2196  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2198  <|@ st <@st|@reference-map: [r14:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:766) [bci: 1445]
locals: r14|QWORD[.] - - - - - - - - r10|DWORD - - - - - - - r11|DWORD r8|DWORD r9|DWORD long[0|0x0] - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:1445] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  184  <|@ instruction r11|DWORD = MOVE input: int[-258579|0xfffffffffffc0ded] <|@ <|@
      nr  186  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  190  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B18" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  188  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  194  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr  196  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  198  <|@ st <@st|@reference-map: [r14:0]
live-base-pointers: []
java.lang.Math.max(Math.java:1252) [bci: 10]
stack: int[0|0x0] 
locals: - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 74]
locals: r14|QWORD[.] rdx|DWORD r10|QWORD - r8|DWORD rbp|DWORD rbx|DWORD rdi|DWORD - - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:10, 74] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1608  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1610  <|@ instruction stack:68|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1612  <|@ instruction stack:72|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1614  <|@ instruction stack:76|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1616  <|@ instruction rcx|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1618  <|@ instruction r13|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1620  <|@ instruction stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1622  <|@ instruction r14|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1624  <|@ instruction r10|DWORD = MOVE input: int[-282651|0xfffffffffffbafe5] <|@ <|@
      nr 1626  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1628  <|@ instruction JUMP ~[] destination: B133 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B178" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  286  <|@ instruction r11|DWORD = MOVE input: int[-317459|0xfffffffffffb27ed] <|@ <|@
      nr  288  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  290  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  292  <|@ instruction JUMP ~[] destination: B30 -> B178 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B178"
    from_bci -1
    to_bci -1
    predecessors "B30" "B177" "B36" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 2228  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2230  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr 2232  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2234  <|@ st <@st|@reference-map: [r14:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174]
locals: r14|QWORD[.] rdx|DWORD r10|QWORD - r8|DWORD rbp|DWORD rbx|DWORD rdi|DWORD rax|DWORD - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:174] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B157"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1998  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2000  <|@ instruction r9|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr 2002  <|@ instruction r8|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2004  <|@ instruction r11|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr 2006  <|@ instruction rcx|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr 2008  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2010  <|@ instruction MOV [r15|QWORD + 668] y: -306715 size: DWORD <|@ <|@
      nr 2012  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2014  <|@ st <@st|@reference-map: [r8:0, r14:0, stack:8, stack:24, stack:64]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1343]
stack: rax|DWORD 
locals: r14|QWORD[.] - - - - - - - - rcx|DWORD - - - - - - - r10|DWORD r9|DWORD - - - r11|DWORD - - stack:104|QWORD[.] - stack:64|QWORD[.] r8|QWORD[.] stack:120|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:1343] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B166"
    from_bci -1
    to_bci -1
    predecessors "B165" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2118  <|@ instruction r10|QWORD = MOVE stack:104|QWORD moveKind: QWORD <|@ <|@
      nr 2120  <|@ instruction rcx|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr 2122  <|@ instruction r9|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr 2124  <|@ instruction r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2126  <|@ instruction MOV [r15|QWORD + 668] y: -331283 size: DWORD <|@ <|@
      nr 2128  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2130  <|@ st <@st|@reference-map: [r14:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1415]
stack: r14|QWORD[.] int[0|0x0] 
locals: r14|QWORD[.] - - - - - - - - stack:84|DWORD - - - - - - - stack:92|DWORD r9|DWORD rcx|DWORD r10|QWORD - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:1415] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1800  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1802  <|@ instruction rcx|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1804  <|@ instruction r8|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1806  <|@ instruction rbx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1808  <|@ instruction r9|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1810  <|@ instruction rax|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1812  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1814  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1816  <|@ instruction MOV [r15|QWORD + 668] y: -322587 size: DWORD <|@ <|@
      nr 1818  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1820  <|@ st <@st|@reference-map: [rax:0, rbx:0, r8:0, r9:0, r14:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1227]
locals: r14|QWORD[.] - - - - rbp|DWORD - - - stack:84|DWORD - - - - - - - int[0|0x0] rcx|DWORD r11|DWORD - - r10|DWORD - - rax|QWORD[.] - r9|QWORD[.] rbx|QWORD[.] r8|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:1227] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1548  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1550  <|@ instruction r14|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1552  <|@ instruction MOV [r15|QWORD + 668] y: -333083 size: DWORD <|@ <|@
      nr 1554  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1556  <|@ st <@st|@reference-map: [r14:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
locals: r14|QWORD[.] - - - - - - - - r11|DWORD - - - - - - - r10|DWORD int[0|0x0] int[0|0x0] - - - - - rcx|QWORD - r13|QWORD - rdi|QWORD - rbx|QWORD - 
>@ <|@ instruction DEOPT info [bci:914] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B177"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B178" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2218  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2220  <|@ instruction r11|DWORD = MOVE input: int[-317715|0xfffffffffffb26ed] <|@ <|@
      nr 2222  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 2224  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2226  <|@ instruction JUMP ~[] destination: B177 -> B178 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1394  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1396  <|@ instruction r14|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1398  <|@ instruction rbp|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1400  <|@ instruction MOV [r15|QWORD + 668] y: -298003 size: DWORD <|@ <|@
      nr 1402  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1404  <|@ st <@st|@reference-map: [r14:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 889]
locals: r14|QWORD[.] - - - - rbp|DWORD - - - r11|DWORD - - - - - - - r10|DWORD r9|DWORD rdi|DWORD - - - - - r8|QWORD - r13|QWORD - rcx|QWORD - rbx|QWORD - 
>@ <|@ instruction DEOPT info [bci:889] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1088  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1090  <|@ instruction r11|DWORD = MOVE input: int[-279315|0xfffffffffffbbced] <|@ <|@
      nr 1096  <|@ instruction JUMP ~[] destination: B95 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1586  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1588  <|@ instruction stack:68|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1590  <|@ instruction stack:72|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1592  <|@ instruction stack:76|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1594  <|@ instruction rcx|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1596  <|@ instruction r13|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1598  <|@ instruction stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1600  <|@ instruction r14|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1602  <|@ instruction r10|DWORD = MOVE input: int[-284699|0xfffffffffffba7e5] <|@ <|@
      nr 1604  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1606  <|@ instruction JUMP ~[] destination: B132 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  962  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  964  <|@ instruction r10|DWORD = MOVE input: int[-272915|0xfffffffffffbd5ed] <|@ <|@
      nr  966  <|@ instruction rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  968  <|@ instruction rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr  970  <|@ instruction r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr  972  <|@ instruction rcx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  974  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  976  <|@ instruction JUMP ~[] destination: B86 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1264  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1266  <|@ instruction rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr 1268  <|@ instruction rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr 1270  <|@ instruction r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1272  <|@ instruction stack:68|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1274  <|@ instruction stack:72|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1276  <|@ instruction stack:76|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1278  <|@ instruction rcx|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr 1280  <|@ instruction r13|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1282  <|@ instruction stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1284  <|@ instruction r14|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1286  <|@ instruction r10|DWORD = MOVE input: int[-294419|0xfffffffffffb81ed] <|@ <|@
      nr 1288  <|@ instruction rbp|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1290  <|@ instruction JUMP ~[] destination: B105 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B178" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  350  <|@ instruction r11|DWORD = MOVE input: int[-317971|0xfffffffffffb25ed] <|@ <|@
      nr  352  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  354  <|@ instruction r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  356  <|@ instruction JUMP ~[] destination: B36 -> B178 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  994  <|@ instruction r10|DWORD = MOVE input: int[-273171|0xfffffffffffbd4ed] <|@ <|@
      nr  996  <|@ instruction rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  998  <|@ instruction rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr 1000  <|@ instruction r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1002  <|@ instruction rcx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1004  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1006  <|@ instruction JUMP ~[] destination: B88 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1322  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1324  <|@ instruction rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr 1326  <|@ instruction rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr 1328  <|@ instruction r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1330  <|@ instruction stack:68|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1332  <|@ instruction stack:72|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1334  <|@ instruction stack:76|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1336  <|@ instruction rcx|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr 1338  <|@ instruction r13|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1340  <|@ instruction stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1342  <|@ instruction r14|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1344  <|@ instruction r10|DWORD = MOVE input: int[-322075|0xfffffffffffb15e5] <|@ <|@
      nr 1346  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1348  <|@ instruction JUMP ~[] destination: B110 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  148  <|@ instruction r11|DWORD = MOVE input: int[-262427|0xfffffffffffbfee5] <|@ <|@
      nr  152  <|@ instruction JUMP ~[] destination: B18 -> B23 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #15         // $assertionsDisabled:boolean
     3: ifne          20
     6: lload_2       
     7: lconst_0      
     8: lcmp          
     9: ifgt          20
    12: new           #21         // java.lang.AssertionError
    15: dup           
    16: invokespecial #16         // java.lang.AssertionError.<init>:()void
    19: athrow        
    20: getstatic     #15         // $assertionsDisabled:boolean
    23: ifne          44
    26: lload_2       
    27: ldc2_w        #31         // 4503599627370496
    30: land          
    31: lconst_0      
    32: lcmp          
    33: ifne          44
    36: new           #21         // java.lang.AssertionError
    39: dup           
    40: invokespecial #16         // java.lang.AssertionError.<init>:()void
    43: athrow        
    44: lload_2       
    45: invokestatic  #20         // java.lang.Long.numberOfTrailingZeros:(long)int
    48: istore        6
    50: bipush        53
    52: iload         6
    54: isub          
    55: istore        7
    57: aload_0       
    58: iconst_0      
    59: putfield      #5          // decimalDigitsRoundedUp:boolean
    62: aload_0       
    63: iconst_0      
    64: putfield      #4          // exactDecimalConversion:boolean
    67: iconst_0      
    68: iload         7
    70: iload_1       
    71: isub          
    72: iconst_1      
    73: isub          
    74: invokestatic  #21         // java.lang.Math.max:(int, int)int
    77: istore        8
    79: iload_1       
    80: bipush        62
    82: if_icmpgt     174
    85: iload_1       
    86: bipush        -21
    88: if_icmplt     174
    91: iload         8
    93: getstatic     #18         // sun.misc.FDBigInteger.LONG_5_POW:long[]
    96: arraylength   
    97: if_icmpge     174
   100: iload         7
   102: getstatic     #22         // N_5_BITS:int[]
   105: iload         8
   107: iaload        
   108: iadd          
   109: bipush        64
   111: if_icmpge     174
   114: iload         8
   116: ifne          174
   119: iload_1       
   120: iload         4
   122: if_icmple     139
   125: iload_1       
   126: iload         4
   128: isub          
   129: iconst_1      
   130: isub          
   131: invokestatic  #23         // insignificantDigitsForPow2:(int)int
   134: istore        9
   136: goto          142
   139: iconst_0      
   140: istore        9
   142: iload_1       
   143: bipush        52
   145: if_icmplt     158
   148: lload_2       
   149: iload_1       
   150: bipush        52
   152: isub          
   153: lshl          
   154: lstore_2      
   155: goto          165
   158: lload_2       
   159: bipush        52
   161: iload_1       
   162: isub          
   163: lushr         
   164: lstore_2      
   165: aload_0       
   166: iconst_0      
   167: lload_2       
   168: iload         9
   170: invokespecial #24         // developLongDigits:(int, long, int)void
   173: return        
   174: lload_2       
   175: iload_1       
   176: invokestatic  #25         // estimateDecExp:(long, int)int
   179: istore        9
   181: iconst_0      
   182: iload         9
   184: ineg          
   185: invokestatic  #21         // java.lang.Math.max:(int, int)int
   188: istore        11
   190: iload         11
   192: iload         8
   194: iadd          
   195: iload_1       
   196: iadd          
   197: istore        10
   199: iconst_0      
   200: iload         9
   202: invokestatic  #21         // java.lang.Math.max:(int, int)int
   205: istore        13
   207: iload         13
   209: iload         8
   211: iadd          
   212: istore        12
   214: iload         11
   216: istore        15
   218: iload         10
   220: iload         4
   222: isub          
   223: istore        14
   225: lload_2       
   226: iload         6
   228: lushr         
   229: lstore_2      
   230: iload         10
   232: iload         7
   234: iconst_1      
   235: isub          
   236: isub          
   237: istore        10
   239: iload         10
   241: iload         12
   243: invokestatic  #26         // java.lang.Math.min:(int, int)int
   246: istore        16
   248: iload         10
   250: iload         16
   252: isub          
   253: istore        10
   255: iload         12
   257: iload         16
   259: isub          
   260: istore        12
   262: iload         14
   264: iload         16
   266: isub          
   267: istore        14
   269: iload         7
   271: iconst_1      
   272: if_icmpne     278
   275: iinc          
   278: iload         14
   280: ifge          300
   283: iload         10
   285: iload         14
   287: isub          
   288: istore        10
   290: iload         12
   292: iload         14
   294: isub          
   295: istore        12
   297: iconst_0      
   298: istore        14
   300: iconst_0      
   301: istore        17
   303: iload         7
   305: iload         10
   307: iadd          
   308: iload         11
   310: getstatic     #22         // N_5_BITS:int[]
   313: arraylength   
   314: if_icmpge     326
   317: getstatic     #22         // N_5_BITS:int[]
   320: iload         11
   322: iaload        
   323: goto          330
   326: iload         11
   328: iconst_3      
   329: imul          
   330: iadd          
   331: istore        23
   333: iload         12
   335: iconst_1      
   336: iadd          
   337: iload         13
   339: iconst_1      
   340: iadd          
   341: getstatic     #22         // N_5_BITS:int[]
   344: arraylength   
   345: if_icmpge     359
   348: getstatic     #22         // N_5_BITS:int[]
   351: iload         13
   353: iconst_1      
   354: iadd          
   355: iaload        
   356: goto          365
   359: iload         13
   361: iconst_1      
   362: iadd          
   363: iconst_3      
   364: imul          
   365: iadd          
   366: istore        24
   368: iload         23
   370: bipush        64
   372: if_icmpge     1070
   375: iload         24
   377: bipush        64
   379: if_icmpge     1070
   382: iload         23
   384: bipush        32
   386: if_icmpge     728
   389: iload         24
   391: bipush        32
   393: if_icmpge     728
   396: lload_2       
   397: l2i           
   398: getstatic     #27         // sun.misc.FDBigInteger.SMALL_5_POW:int[]
   401: iload         11
   403: iaload        
   404: imul          
   405: iload         10
   407: ishl          
   408: istore        25
   410: getstatic     #27         // sun.misc.FDBigInteger.SMALL_5_POW:int[]
   413: iload         13
   415: iaload        
   416: iload         12
   418: ishl          
   419: istore        26
   421: getstatic     #27         // sun.misc.FDBigInteger.SMALL_5_POW:int[]
   424: iload         15
   426: iaload        
   427: iload         14
   429: ishl          
   430: istore        27
   432: iload         26
   434: bipush        10
   436: imul          
   437: istore        28
   439: iconst_0      
   440: istore        17
   442: iload         25
   444: iload         26
   446: idiv          
   447: istore        22
   449: bipush        10
   451: iload         25
   453: iload         26
   455: irem          
   456: imul          
   457: istore        25
   459: iload         27
   461: bipush        10
   463: imul          
   464: istore        27
   466: iload         25
   468: iload         27
   470: if_icmpge     477
   473: iconst_1      
   474: goto          478
   477: iconst_0      
   478: istore        18
   480: iload         25
   482: iload         27
   484: iadd          
   485: iload         28
   487: if_icmple     494
   490: iconst_1      
   491: goto          495
   494: iconst_0      
   495: istore        19
   497: getstatic     #15         // $assertionsDisabled:boolean
   500: ifne          520
   503: iload         22
   505: bipush        10
   507: if_icmplt     520
   510: new           #21         // java.lang.AssertionError
   513: dup           
   514: iload         22
   516: invokespecial #28         // java.lang.AssertionError.<init>:(int)void
   519: athrow        
   520: iload         22
   522: ifne          536
   525: iload         19
   527: ifne          536
   530: iinc          
   533: goto          552
   536: aload_0       
   537: getfield      #6          // digits:char[]
   540: iload         17
   542: iinc          
   545: bipush        48
   547: iload         22
   549: iadd          
   550: i2c           
   551: castore       
   552: iload         5
   554: ifeq          571
   557: iload         9
   559: bipush        -3
   561: if_icmplt     571
   564: iload         9
   566: bipush        8
   568: if_icmplt     577
   571: iconst_0      
   572: dup           
   573: istore        18
   575: istore        19
   577: iload         18
   579: ifne          701
   582: iload         19
   584: ifne          701
   587: iload         25
   589: iload         26
   591: idiv          
   592: istore        22
   594: bipush        10
   596: iload         25
   598: iload         26
   600: irem          
   601: imul          
   602: istore        25
   604: iload         27
   606: bipush        10
   608: imul          
   609: istore        27
   611: getstatic     #15         // $assertionsDisabled:boolean
   614: ifne          634
   617: iload         22
   619: bipush        10
   621: if_icmplt     634
   624: new           #21         // java.lang.AssertionError
   627: dup           
   628: iload         22
   630: invokespecial #28         // java.lang.AssertionError.<init>:(int)void
   633: athrow        
   634: iload         27
   636: i2l           
   637: lconst_0      
   638: lcmp          
   639: ifle          676
   642: iload         25
   644: iload         27
   646: if_icmpge     653
   649: iconst_1      
   650: goto          654
   653: iconst_0      
   654: istore        18
   656: iload         25
   658: iload         27
   660: iadd          
   661: iload         28
   663: if_icmple     670
   666: iconst_1      
   667: goto          671
   670: iconst_0      
   671: istore        19
   673: goto          682
   676: iconst_1      
   677: istore        18
   679: iconst_1      
   680: istore        19
   682: aload_0       
   683: getfield      #6          // digits:char[]
   686: iload         17
   688: iinc          
   691: bipush        48
   693: iload         22
   695: iadd          
   696: i2c           
   697: castore       
   698: goto          577
   701: iload         25
   703: iconst_1      
   704: ishl          
   705: iload         28
   707: isub          
   708: i2l           
   709: lstore        20
   711: aload_0       
   712: iload         25
   714: ifne          721
   717: iconst_1      
   718: goto          722
   721: iconst_0      
   722: putfield      #4          // exactDecimalConversion:boolean
   725: goto          1426
   728: lload_2       
   729: getstatic     #18         // sun.misc.FDBigInteger.LONG_5_POW:long[]
   732: iload         11
   734: laload        
   735: lmul          
   736: iload         10
   738: lshl          
   739: lstore        25
   741: getstatic     #18         // sun.misc.FDBigInteger.LONG_5_POW:long[]
   744: iload         13
   746: laload        
   747: iload         12
   749: lshl          
   750: lstore        27
   752: getstatic     #18         // sun.misc.FDBigInteger.LONG_5_POW:long[]
   755: iload         15
   757: laload        
   758: iload         14
   760: lshl          
   761: lstore        29
   763: lload         27
   765: ldc2_w        #29         // 10
   768: lmul          
   769: lstore        31
   771: iconst_0      
   772: istore        17
   774: lload         25
   776: lload         27
   778: ldiv          
   779: l2i           
   780: istore        22
   782: ldc2_w        #29         // 10
   785: lload         25
   787: lload         27
   789: lrem          
   790: lmul          
   791: lstore        25
   793: lload         29
   795: ldc2_w        #29         // 10
   798: lmul          
   799: lstore        29
   801: lload         25
   803: lload         29
   805: lcmp          
   806: ifge          813
   809: iconst_1      
   810: goto          814
   813: iconst_0      
   814: istore        18
   816: lload         25
   818: lload         29
   820: ladd          
   821: lload         31
   823: lcmp          
   824: ifle          831
   827: iconst_1      
   828: goto          832
   831: iconst_0      
   832: istore        19
   834: getstatic     #15         // $assertionsDisabled:boolean
   837: ifne          857
   840: iload         22
   842: bipush        10
   844: if_icmplt     857
   847: new           #21         // java.lang.AssertionError
   850: dup           
   851: iload         22
   853: invokespecial #28         // java.lang.AssertionError.<init>:(int)void
   856: athrow        
   857: iload         22
   859: ifne          873
   862: iload         19
   864: ifne          873
   867: iinc          
   870: goto          889
   873: aload_0       
   874: getfield      #6          // digits:char[]
   877: iload         17
   879: iinc          
   882: bipush        48
   884: iload         22
   886: iadd          
   887: i2c           
   888: castore       
   889: iload         5
   891: ifeq          908
   894: iload         9
   896: bipush        -3
   898: if_icmplt     908
   901: iload         9
   903: bipush        8
   905: if_icmplt     914
   908: iconst_0      
   909: dup           
   910: istore        18
   912: istore        19
   914: iload         18
   916: ifne          1042
   919: iload         19
   921: ifne          1042
   924: lload         25
   926: lload         27
   928: ldiv          
   929: l2i           
   930: istore        22
   932: ldc2_w        #29         // 10
   935: lload         25
   937: lload         27
   939: lrem          
   940: lmul          
   941: lstore        25
   943: lload         29
   945: ldc2_w        #29         // 10
   948: lmul          
   949: lstore        29
   951: getstatic     #15         // $assertionsDisabled:boolean
   954: ifne          974
   957: iload         22
   959: bipush        10
   961: if_icmplt     974
   964: new           #21         // java.lang.AssertionError
   967: dup           
   968: iload         22
   970: invokespecial #28         // java.lang.AssertionError.<init>:(int)void
   973: athrow        
   974: lload         29
   976: lconst_0      
   977: lcmp          
   978: ifle          1017
   981: lload         25
   983: lload         29
   985: lcmp          
   986: ifge          993
   989: iconst_1      
   990: goto          994
   993: iconst_0      
   994: istore        18
   996: lload         25
   998: lload         29
  1000: ladd          
  1001: lload         31
  1003: lcmp          
  1004: ifle          1011
  1007: iconst_1      
  1008: goto          1012
  1011: iconst_0      
  1012: istore        19
  1014: goto          1023
  1017: iconst_1      
  1018: istore        18
  1020: iconst_1      
  1021: istore        19
  1023: aload_0       
  1024: getfield      #6          // digits:char[]
  1027: iload         17
  1029: iinc          
  1032: bipush        48
  1034: iload         22
  1036: iadd          
  1037: i2c           
  1038: castore       
  1039: goto          914
  1042: lload         25
  1044: iconst_1      
  1045: lshl          
  1046: lload         31
  1048: lsub          
  1049: lstore        20
  1051: aload_0       
  1052: lload         25
  1054: lconst_0      
  1055: lcmp          
  1056: ifne          1063
  1059: iconst_1      
  1060: goto          1064
  1063: iconst_0      
  1064: putfield      #4          // exactDecimalConversion:boolean
  1067: goto          1426
  1070: iload         13
  1072: iload         12
  1074: invokestatic  #29         // sun.misc.FDBigInteger.valueOfPow52:(int, int)sun.misc.FDBigInteger
  1077: astore        25
  1079: aload         25
  1081: invokevirtual #30         // sun.misc.FDBigInteger.getNormalizationBias:()int
  1084: istore        26
  1086: aload         25
  1088: iload         26
  1090: invokevirtual #31         // sun.misc.FDBigInteger.leftShift:(int)sun.misc.FDBigInteger
  1093: astore        25
  1095: lload_2       
  1096: iload         11
  1098: iload         10
  1100: iload         26
  1102: iadd          
  1103: invokestatic  #32         // sun.misc.FDBigInteger.valueOfMulPow52:(long, int, int)sun.misc.FDBigInteger
  1106: astore        27
  1108: iload         15
  1110: iconst_1      
  1111: iadd          
  1112: iload         14
  1114: iload         26
  1116: iadd          
  1117: iconst_1      
  1118: iadd          
  1119: invokestatic  #29         // sun.misc.FDBigInteger.valueOfPow52:(int, int)sun.misc.FDBigInteger
  1122: astore        28
  1124: iload         13
  1126: iconst_1      
  1127: iadd          
  1128: iload         12
  1130: iload         26
  1132: iadd          
  1133: iconst_1      
  1134: iadd          
  1135: invokestatic  #29         // sun.misc.FDBigInteger.valueOfPow52:(int, int)sun.misc.FDBigInteger
  1138: astore        29
  1140: iconst_0      
  1141: istore        17
  1143: aload         27
  1145: aload         25
  1147: invokevirtual #33         // sun.misc.FDBigInteger.quoRemIteration:(sun.misc.FDBigInteger)int
  1150: istore        22
  1152: aload         27
  1154: aload         28
  1156: invokevirtual #34         // sun.misc.FDBigInteger.cmp:(sun.misc.FDBigInteger)int
  1159: ifge          1166
  1162: iconst_1      
  1163: goto          1167
  1166: iconst_0      
  1167: istore        18
  1169: aload         29
  1171: aload         27
  1173: aload         28
  1175: invokevirtual #35         // sun.misc.FDBigInteger.addAndCmp:(sun.misc.FDBigInteger, sun.misc.FDBigInteger)int
  1178: ifgt          1185
  1181: iconst_1      
  1182: goto          1186
  1185: iconst_0      
  1186: istore        19
  1188: getstatic     #15         // $assertionsDisabled:boolean
  1191: ifne          1211
  1194: iload         22
  1196: bipush        10
  1198: if_icmplt     1211
  1201: new           #21         // java.lang.AssertionError
  1204: dup           
  1205: iload         22
  1207: invokespecial #28         // java.lang.AssertionError.<init>:(int)void
  1210: athrow        
  1211: iload         22
  1213: ifne          1227
  1216: iload         19
  1218: ifne          1227
  1221: iinc          
  1224: goto          1243
  1227: aload_0       
  1228: getfield      #6          // digits:char[]
  1231: iload         17
  1233: iinc          
  1236: bipush        48
  1238: iload         22
  1240: iadd          
  1241: i2c           
  1242: castore       
  1243: iload         5
  1245: ifeq          1262
  1248: iload         9
  1250: bipush        -3
  1252: if_icmplt     1262
  1255: iload         9
  1257: bipush        8
  1259: if_icmplt     1268
  1262: iconst_0      
  1263: dup           
  1264: istore        18
  1266: istore        19
  1268: iload         18
  1270: ifne          1372
  1273: iload         19
  1275: ifne          1372
  1278: aload         27
  1280: aload         25
  1282: invokevirtual #33         // sun.misc.FDBigInteger.quoRemIteration:(sun.misc.FDBigInteger)int
  1285: istore        22
  1287: getstatic     #15         // $assertionsDisabled:boolean
  1290: ifne          1310
  1293: iload         22
  1295: bipush        10
  1297: if_icmplt     1310
  1300: new           #21         // java.lang.AssertionError
  1303: dup           
  1304: iload         22
  1306: invokespecial #28         // java.lang.AssertionError.<init>:(int)void
  1309: athrow        
  1310: aload         28
  1312: invokevirtual #36         // sun.misc.FDBigInteger.multBy10:()sun.misc.FDBigInteger
  1315: astore        28
  1317: aload         27
  1319: aload         28
  1321: invokevirtual #34         // sun.misc.FDBigInteger.cmp:(sun.misc.FDBigInteger)int
  1324: ifge          1331
  1327: iconst_1      
  1328: goto          1332
  1331: iconst_0      
  1332: istore        18
  1334: aload         29
  1336: aload         27
  1338: aload         28
  1340: invokevirtual #35         // sun.misc.FDBigInteger.addAndCmp:(sun.misc.FDBigInteger, sun.misc.FDBigInteger)int
  1343: ifgt          1350
  1346: iconst_1      
  1347: goto          1351
  1350: iconst_0      
  1351: istore        19
  1353: aload_0       
  1354: getfield      #6          // digits:char[]
  1357: iload         17
  1359: iinc          
  1362: bipush        48
  1364: iload         22
  1366: iadd          
  1367: i2c           
  1368: castore       
  1369: goto          1268
  1372: iload         19
  1374: ifeq          1403
  1377: iload         18
  1379: ifeq          1403
  1382: aload         27
  1384: iconst_1      
  1385: invokevirtual #31         // sun.misc.FDBigInteger.leftShift:(int)sun.misc.FDBigInteger
  1388: astore        27
  1390: aload         27
  1392: aload         29
  1394: invokevirtual #34         // sun.misc.FDBigInteger.cmp:(sun.misc.FDBigInteger)int
  1397: i2l           
  1398: lstore        20
  1400: goto          1406
  1403: lconst_0      
  1404: lstore        20
  1406: aload_0       
  1407: aload         27
  1409: getstatic     #37         // sun.misc.FDBigInteger.ZERO:sun.misc.FDBigInteger
  1412: invokevirtual #34         // sun.misc.FDBigInteger.cmp:(sun.misc.FDBigInteger)int
  1415: ifne          1422
  1418: iconst_1      
  1419: goto          1423
  1422: iconst_0      
  1423: putfield      #4          // exactDecimalConversion:boolean
  1426: aload_0       
  1427: iload         9
  1429: iconst_1      
  1430: iadd          
  1431: putfield      #8          // decExponent:int
  1434: aload_0       
  1435: iconst_0      
  1436: putfield      #9          // firstDigitIndex:int
  1439: aload_0       
  1440: iload         17
  1442: putfield      #10         // nDigits:int
  1445: iload         19
  1447: ifeq          1508
  1450: iload         18
  1452: ifeq          1504
  1455: lload         20
  1457: lconst_0      
  1458: lcmp          
  1459: ifne          1490
  1462: aload_0       
  1463: getfield      #6          // digits:char[]
  1466: aload_0       
  1467: getfield      #9          // firstDigitIndex:int
  1470: aload_0       
  1471: getfield      #10         // nDigits:int
  1474: iadd          
  1475: iconst_1      
  1476: isub          
  1477: caload        
  1478: iconst_1      
  1479: iand          
  1480: ifeq          1508
  1483: aload_0       
  1484: invokespecial #38         // roundup:()void
  1487: goto          1508
  1490: lload         20
  1492: lconst_0      
  1493: lcmp          
  1494: ifle          1508
  1497: aload_0       
  1498: invokespecial #38         // roundup:()void
  1501: goto          1508
  1504: aload_0       
  1505: invokespecial #38         // roundup:()void
  1508: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0   <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|DWORD, rcx|QWORD, r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@5692047b slotKind: QWORD  <||@
  Comment 48 6 r10|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 51 8 stack:28|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 56 10 MOVB (x: [rsi|QWORD[.] + 26], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 60 12 MOVB (x: [rsi|QWORD[.] + 25], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 64 14 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[27]{0, 3, 5, 7, 10, ...}]  <||@
  Comment 64 {Object[int[27]{0, 3, 5, 7, 10, ...}]}  <||@
  Comment 74 16 rbx|DWORD = TZCNT r10|QWORD size: QWORD  <||@
  Comment 79 18 rcx|DWORD = MOVE input: int[53|0x35]  <||@
  Comment 84 20 rdi|DWORD = SUB (x: rcx|DWORD, ~y: rbx|DWORD) size: DWORD  <||@
  Comment 88 22 rcx|DWORD = SUB (x: rdi|DWORD, ~y: rdx|DWORD) size: DWORD  <||@
  Comment 92 24 rcx|DWORD = DEC rcx|DWORD size: DWORD  <||@
  Comment 94 26 CMP rcx|DWORD y: 1 size: DWORD  <||@
  Comment 97 28 BRANCH trueDestinationProbability: 0.7309313881269885 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B4  <||@
  Comment 103 block B1 null  <||@
  Comment 103 30 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 103 32 CMP rdx|DWORD y: 63 size: DWORD  <||@
  Comment 106 34 BRANCH trueDestinationProbability: 0.9998165784832451 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3  <||@
  Comment 112 block B2 null  <||@
  Comment 112 36 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 112 38 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 117 40 JUMP ~[] destination: B2 -> B6  <||@
  Comment 117 block B6 null  <||@
  Comment 117 58 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 117 60 CMP rdx|DWORD y: -21 size: DWORD  <||@
  Comment 120 62 BRANCH trueDestinationProbability: 3.66905155017428E-4 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8  <||@
  Comment 126 block B8 null  <||@
  Comment 126 70 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 126 72 CMP rcx|DWORD y: 27 size: DWORD  <||@
  Comment 129 74 BRANCH trueDestinationProbability: 0.5322359783728843 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B26  <||@
  Comment 135 block B9 null  <||@
  Comment 135 76 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 135 78 rax|DWORD = ADD (x: rdi|DWORD, ~y: [r11|QWORD[.] + rcx|DWORD * 4 + 16]) size: DWORD  <||@
  Comment 142 80 CMP rax|DWORD y: 64 size: DWORD  <||@
  Comment 145 82 BRANCH trueDestinationProbability: 0.9985678292003713 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B25  <||@
  Comment 151 block B10 null  <||@
  Comment 151 84 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 151 86 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 153 88 BRANCH trueDestinationProbability: 0.37470452312023583 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B24  <||@
  Comment 159 block B24 null  <||@
  Comment 159 200 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 159 202 rax|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 161 204 JUMP ~[] destination: B24 -> B28  <||@
  Comment 161 block B28 null  <||@
  Comment 161 224 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 161 226 stack:40|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 166 228 rbp|QWORD = MOVE input: long[4503599627370495|0xfffffffffffff]  <||@
  Comment 176 230 rcx|QWORD = AND (x: r10|QWORD, y: rbp|QWORD) size: QWORD  <||@
  Comment 182 232 r13|QWORD = MOVE input: long[4607182418800017408|0x3ff0000000000000]  <||@
  Comment 192 234 rcx|QWORD = OR (x: rcx|QWORD, y: r13|QWORD) size: QWORD  <||@
  Comment 195 236 xmm0|DOUBLE = VMOVQ rcx|QWORD nZ: XMM  <||@
  Comment 200 238 xmm1|DOUBLE = VMOVE input: double[1.5|0x3ff8000000000000]  <||@
  Comment 200 {DataSection[0x0]}  <||@
  Comment 209 240 xmm0|DOUBLE = VSUBSD (x: xmm0|DOUBLE, y: xmm1|DOUBLE) nZ: XMM  <||@
  Comment 213 242 xmm1|DOUBLE = VMOVE input: double[0.289529654|0x3fd287a762c9bd93]  <||@
  Comment 213 {DataSection[0x8]}  <||@
  Comment 222 244 xmm0|DOUBLE = VMULSD (x: xmm0|DOUBLE, y: xmm1|DOUBLE) nZ: XMM  <||@
  Comment 226 246 xmm1|DOUBLE = VMOVE input: double[0.176091259|0x3fc68a288b421b8c]  <||@
  Comment 226 {DataSection[0x10]}  <||@
  Comment 235 248 xmm0|DOUBLE = VADDSD (x: xmm0|DOUBLE, y: xmm1|DOUBLE) nZ: XMM  <||@
  Comment 239 250 xmm1|DOUBLE = VCVTSI2SD rdx|DWORD  <||@
  Comment 247 252 xmm2|DOUBLE = VMOVE input: double[0.301029995663981|0x3fd34413509f79fb]  <||@
  Comment 247 {DataSection[0x18]}  <||@
  Comment 256 254 xmm1|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm2|DOUBLE) nZ: XMM  <||@
  Comment 260 256 xmm0|DOUBLE = VADDSD (x: xmm0|DOUBLE, y: xmm1|DOUBLE) nZ: XMM  <||@
  Comment 264 258 r13|QWORD = VMOVQ xmm0|DOUBLE  <||@
  Comment 269 260 r14|QWORD = MOVE input: long[-9223372036854775808|0x8000000000000000]  <||@
  Comment 279 262 rcx|QWORD = MOVE input: long[9218868437227405312|0x7ff0000000000000]  <||@
  Comment 289 264 rcx|QWORD = AND (x: r13|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 292 266 rcx|QWORD = SHR rcx|QWORD y: 52 size: QWORD  <||@
  Comment 296 268 rcx|DWORD = MOV rcx|QWORD size: DWORD  <||@
  Comment 298 270 r9|DWORD = LEA [rcx|DWORD - 1023] size: DWORD  <||@
  Comment 305 272 TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 308 274 BRANCH trueDestinationProbability: 0.8017068096060938 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B32  <||@
  Comment 314 block B29 null  <||@
  Comment 314 276 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 314 278 rcx|QWORD = MOVE input: long[9223372036854775807|0x7fffffffffffffff]  <||@
  Comment 324 280 TEST (x: rcx|QWORD, y: r13|QWORD) size: QWORD  <||@
  Comment 327 282 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31  <||@
  Comment 333 block B31 null  <||@
  Comment 333 294 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 333 296 TEST (x: r14|QWORD, y: r13|QWORD) size: QWORD  <||@
  Comment 336 298 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 341 300 r9|DWORD = CMOVE (falseValue: int[-1|0xffffffffffffffff], ~trueValue: rcx|DWORD) condition: =  <||@
  Comment 351 302 r11|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 354 304 JUMP ~[] destination: B31 -> B38  <||@
  Comment 354 block B38 null  <||@
  Comment 354 368 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 354 370 rcx|DWORD = NEG r11|DWORD size: DWORD  <||@
  Comment 359 372 CMP rcx|DWORD y: 1 size: DWORD  <||@
  Comment 362 374 BRANCH trueDestinationProbability: 0.7309313881269885 condition: < trueDestination: B38 -> B39 falseDestination: B38 -> B40  <||@
  Comment 368 block B39 null  <||@
  Comment 368 376 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 368 378 stack:44|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 376 380 stack:48|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 384 382 rsi|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 386 384 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 391 386 JUMP ~[] destination: B39 -> B41  <||@
  Comment 391 block B41 null  <||@
  Comment 391 408 [] = LABEL numbPhis: 4 align: false label: ?  <||@
  Comment 391 410 CMP r11|DWORD y: 1 size: DWORD  <||@
  Comment 395 412 BRANCH trueDestinationProbability: 0.7309313881269885 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B43  <||@
  Comment 401 block B42 null  <||@
  Comment 401 414 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 401 416 stack:52|DWORD = MOVE input: int[3|0x3]  <||@
  Comment 409 418 r14|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 415 420 r13|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 421 422 JUMP ~[] destination: B42 -> B44  <||@
  Comment 421 block B44 null  <||@
  Comment 421 442 [] = LABEL numbPhis: 4 align: false label: ?  <||@
  Comment 421 444 stack:56|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 426 446 rsi|DWORD = ADD (x: rsi|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 428 448 rdx|DWORD = MOVE input: int[52|0x34]  <||@
  Comment 433 450 rdx|DWORD = SUB (x: rdx|DWORD, ~y: rbx|DWORD) size: DWORD  <||@
  Comment 435 452 r9|DWORD = SUB (x: rsi|DWORD, ~y: rdx|DWORD) size: DWORD  <||@
  Comment 441 454 rsi|DWORD = SUB (x: rsi|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 444 456 CMP (x: r9|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 447 458 BRANCH trueDestinationProbability: 0.44744570600555483 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B48  <||@
  Comment 453 block B48 null  <||@
  Comment 453 482 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 453 484 rax|DWORD = SUB (x: rax|DWORD, ~y: r9|DWORD) size: DWORD  <||@
  Comment 456 486 rsi|DWORD = SUB (x: rsi|DWORD, ~y: r9|DWORD) size: DWORD  <||@
  Comment 459 488 CMP rdi|DWORD y: 1 size: DWORD  <||@
  Comment 462 494 r9|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 468 490 BRANCH trueDestinationProbability: 0.3620750396336093 condition: = trueDestination: B48 -> B50 falseDestination: B48 -> B52  <||@
  Comment 474 block B52 null  <||@
  Comment 474 510 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 474 512 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 476 514 BRANCH trueDestinationProbability: 0.9999471561184408 condition: < trueDestination: B52 -> B53 falseDestination: B52 -> B55  <||@
  Comment 482 block B53 null  <||@
  Comment 482 516 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 482 518 rax|DWORD = SUB (x: rax|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 484 520 r9|DWORD = SUB (x: r9|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 487 522 rsi|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 492 524 JUMP ~[] destination: B53 -> B55  <||@
  Comment 492 block B55 null  <||@
  Comment 492 530 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 492 532 r8|DWORD = ADD (x: r9|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 498 534 rdi|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 500 536 rcx|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 502 538 r10|QWORD = SHR (x: r10|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 505 540 stack:64|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 510 542 CMP rdi|DWORD y: 27 size: DWORD  <||@
  Comment 513 544 BRANCH trueDestinationProbability: 0.9999471514639044 condition: |<| trueDestination: B55 -> B56 falseDestination: B55 -> B59  <||@
  Comment 519 block B56 null  <||@
  Comment 519 546 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 519 548 rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[27]{0, 3, 5, 7, 10, ...}]  <||@
  Comment 519 {Object[int[27]{0, 3, 5, 7, 10, ...}]}  <||@
  Comment 529 550 rdx|DWORD = MOV [rcx|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD  <||@
  Comment 533 552 rbx|DWORD = ADD (x: r8|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 538 554 CMP r14|DWORD y: 27 size: DWORD  <||@
  Comment 542 556 BRANCH trueDestinationProbability: 0.9999471523948773 condition: < trueDestination: B56 -> B61 falseDestination: B56 -> B58  <||@
  Comment 548 block B61 null  <||@
  Comment 548 638 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 548 640 CMP r14|DWORD y: 27 size: DWORD  <||@
  Comment 552 642 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B61 -> B62 falseDestination: B61 -> B65  <||@
  Comment 558 block B62 null  <||@
  Comment 558 644 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 558 646 CMP rbx|DWORD y: 64 size: DWORD  <||@
  Comment 561 648 BRANCH trueDestinationProbability: 0.9867185711014427 condition: < trueDestination: B62 -> B63 falseDestination: B62 -> B64  <||@
  Comment 567 block B63 null  <||@
  Comment 567 650 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 567 652 rcx|DWORD = MOV [rcx|QWORD[.] + r14|DWORD * 4 + 16] size: DWORD  <||@
  Comment 572 654 r8|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 575 656 JUMP ~[] destination: B63 -> B69  <||@
  Comment 575 block B69 null  <||@
  Comment 575 726 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 575 728 rdx|DWORD = INC rax|DWORD size: DWORD  <||@
  Comment 579 730 rcx|DWORD = ADD (x: rdx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 584 732 CMP rcx|DWORD y: 64 size: DWORD  <||@
  Comment 587 734 BRANCH trueDestinationProbability: 0.9680978309381416 condition: < trueDestination: B69 -> B70 falseDestination: B69 -> B135  <||@
  Comment 593 block B70 null  <||@
  Comment 593 736 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 593 738 rbp|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 598 740 r14|DWORD[.] = MOV [rbp|QWORD[.] + 28] size: DWORD  <||@
  Comment 602 742 CMP rbx|DWORD y: 32 size: DWORD  <||@
  Comment 605 744 BRANCH trueDestinationProbability: 9.220839096357736E-4 condition: < trueDestination: B70 -> B71 falseDestination: B70 -> B101  <||@
  Comment 611 block B101 null  <||@
  Comment 611 1178 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 611 1180 CMP rdi|DWORD y: 27 size: DWORD  <||@
  Comment 614 1182 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B101 -> B102 falseDestination: B101 -> B133  <||@
  Comment 620 block B102 null  <||@
  Comment 620 1184 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 620 1186 CMP r13|DWORD y: 27 size: DWORD  <||@
  Comment 624 1188 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B102 -> B103 falseDestination: B102 -> B132  <||@
  Comment 630 block B103 null  <||@
  Comment 630 1190 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 630 1192 stack:52|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 634 1194 stack:88|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 638 1196 stack:92|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 643 1198 rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[long[27]{1, 5, 25, 125, 625, ...}]  <||@
  Comment 643 {Object[long[27]{1, 5, 25, 125, 625, ...}]}  <||@
  Comment 653 1200 r8|QWORD = MOV [rcx|QWORD[.] + rdi|DWORD * 8 + 16] size: QWORD  <||@
  Comment 658 1202 rcx|QWORD = MOV [rcx|QWORD[.] + r13|DWORD * 8 + 16] size: QWORD  <||@
  Comment 663 1204 rbx|QWORD = IMUL (x: r8|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 670 1206 r13|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 673 1208 rcx|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 676 1210 rbx|QWORD = SHL (x: rbx|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 679 1212 rcx|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 681 1214 r13|QWORD = SHL (x: r13|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 684 1218 rax|QWORD = MOVE rbx|QWORD moveKind: QWORD  <||@
  Comment 687 1220 (highResult: rdx|QWORD, lowResult: rax|QWORD) = CDQ rax|QWORD size: QWORD  <||@
  Comment 689 1222 (highResult: rdx|QWORD, lowResult: rax|QWORD) = IDIV (highX: rdx|QWORD, lowX: rax|QWORD, y: r13|QWORD) size: QWORD state [bci:365]  <||@
  Comment 689 [rbp:0, r14:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365, duringCall: false, rethrow: false]
              |0               |1               |2          |3  |4  |5               |6  |7  |8  |9          |10        |11         |12         |13              |14         |15         |16  |17  |18  |19  |20  |21  |22  |23              |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |rbp|QWORD[.]    |-               |r10|QWORD  |-  |-  |stack:28|DWORD  |-  |-  |-  |r11|DWORD  |r9|DWORD  |rdi|DWORD  |rcx|DWORD  |stack:56|DWORD  |rsi|DWORD  |rdi|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:88|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-  
     stack:   |stack:52|DWORD  |stack:92|DWORD  |           |   |   |                |   |   |   |           |          |           |           |                |           |           |    |    |    |    |    |    |    |                |    |    |    |    |    |    |    |    |     <||@
  Comment 689 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 692 1224 rbx|QWORD = SHL r13|QWORD y: 3 size: QWORD  <||@
  Comment 699 1226 r10|QWORD = SHL r13|QWORD size: QWORD  <||@
  Comment 705 1228 rbx|QWORD = ADD (x: rbx|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 708 1230 r10|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 711 1232 rcx|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 713 1234 r8|QWORD = SHL (x: r8|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 716 1236 rcx|QWORD = SHL r8|QWORD y: 3 size: QWORD  <||@
  Comment 723 1238 r8|QWORD = SHL r8|QWORD size: QWORD  <||@
  Comment 726 1240 rcx|QWORD = ADD (x: rcx|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 729 1242 r8|QWORD = SHL rdx|QWORD y: 3 size: QWORD  <||@
  Comment 736 1244 rdx|QWORD = SHL rdx|QWORD size: QWORD  <||@
  Comment 739 1246 r8|QWORD = ADD (x: r8|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 742 1248 rdx|QWORD = ADD (x: rcx|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 748 1250 rax|DWORD = MOV rax|QWORD size: DWORD  <||@
  Comment 750 1252 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 752 1254 BRANCH trueDestinationProbability: 0.12181344950436568 condition: = trueDestination: B103 -> B104 falseDestination: B103 -> B109  <||@
  Comment 758 block B109 null  <||@
  Comment 758 1316 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 758 1318 CMP [r14|DWORD[.] * 8 + 12] y: 0 size: DWORD state [bci:365]  <||@
  Comment 758 [rbp:0, r14:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365, duringCall: false, rethrow: false]
              |0               |1               |2               |3  |4  |5               |6  |7  |8  |9          |10        |11         |12         |13              |14         |15         |16  |17  |18  |19  |20  |21  |22  |23              |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |rbp|QWORD[.]    |-               |stack:64|QWORD  |-  |-  |stack:28|DWORD  |-  |-  |-  |r11|DWORD  |r9|DWORD  |rdi|DWORD  |r10|DWORD  |stack:56|DWORD  |rsi|DWORD  |rdi|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:88|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-  
     stack:   |stack:52|DWORD  |stack:92|DWORD  |                |   |   |                |   |   |   |           |          |           |           |                |           |           |    |    |    |    |    |    |    |                |    |    |    |    |    |    |    |    |     <||@
  Comment 758 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 767 1320 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B109 -> B110 falseDestination: B109 -> B111  <||@
  Comment 773 block B111 null  <||@
  Comment 773 1350 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 773 1352 r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 778 1354 rax|DWORD = LEA [rax|DWORD + 48] size: DWORD  <||@
  Comment 781 1356 MOV (x: [r14|DWORD[.] * 8 + 16], y: rax|DWORD) size: WORD  <||@
  Comment 790 1358 TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 793 1364 r10|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 799 1360 BRANCH trueDestinationProbability: 0.010669521717460728 condition: = trueDestination: B111 -> B112 falseDestination: B111 -> B113  <||@
  Comment 805 block B113 null  <||@
  Comment 805 1372 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 805 1376 rax|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 808 1378 JUMP ~[] destination: B113 -> B114  <||@
  Comment 808 block B114 null  <||@
  Comment 808 1380 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 808 1382 CMP (x: rcx|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 811 1384 r9|DWORD = SETCC condition: >  <||@
  Comment 819 1386 CMP (x: rdx|QWORD, y: rbx|QWORD) size: QWORD  <||@
  Comment 822 1388 rdi|DWORD = SETCC condition: >  <||@
  Comment 830 1390 CMP r11|DWORD y: -3 size: DWORD  <||@
  Comment 834 1392 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B114 -> B115 falseDestination: B114 -> B116  <||@
  Comment 840 block B116 null  <||@
  Comment 840 1406 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 840 1408 CMP r11|DWORD y: 8 size: DWORD  <||@
  Comment 844 1410 BRANCH trueDestinationProbability: 0.9998134328358209 condition: < trueDestination: B116 -> B119 falseDestination: B116 -> B118  <||@
  Comment 850 block B119 null  <||@
  Comment 850 1424 [] = LABEL numbPhis: 4 align: false label: ?  <||@
  Comment 850 1426 TEST (x: r14|DWORD[.], y: r14|DWORD[.]) size: DWORD  <||@
  Comment 853 1428 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B119 -> B120 falseDestination: B119 -> B121  <||@
  Comment 859 block B121 null  <||@
  Comment 859 1442 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 859 1444 rsi|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 867 1446 r14|QWORD[.] = UNCOMPRESSPOINTER (input: r14|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@40447647 encoding: base: 0 shift: 3  <||@
  Comment 871 1448 stack:92|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 876 1450 r9|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 879 1452 rdi|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 882 1454 rcx|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 885 1456 r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 890 1458 JUMP ~[] destination: B121 -> B122  <||@
  Comment 890 block B122 loop 0 depth 1 header:375|LoopBegin  <||@
  Comment 890 1460 [] = LABEL numbPhis: 5 align: true label: ?  <||@
  Comment 896 1462 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 899 1464 BRANCH trueDestinationProbability: 0.9096921872746148 condition: = trueDestination: B122 -> B123 falseDestination: B122 -> B131  <||@
  Comment 905 block B123 loop 0 depth 1 header:375|LoopBegin  <||@
  Comment 905 1466 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 905 1468 TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 908 1470 BRANCH trueDestinationProbability: 0.9584277782398936 condition: = trueDestination: B123 -> B124 falseDestination: B123 -> B131  <||@
  Comment 914 block B124 loop 0 depth 1 header:375|LoopBegin  <||@
  Comment 914 1472 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 914 1474 CMP (x: rsi|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 917 1476 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B124 -> B125 falseDestination: B124 -> B128  <||@
  Comment 923 block B125 loop 0 depth 1 header:375|LoopBegin  <||@
  Comment 923 1478 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 923 1480 rax|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 926 1482 (highResult: rdx|QWORD, lowResult: rax|QWORD) = CDQ rax|QWORD size: QWORD  <||@
  Comment 928 1484 (highResult: rdx|QWORD, lowResult: rax|QWORD) = IDIV (highX: rdx|QWORD, lowX: rax|QWORD, y: r13|QWORD) size: QWORD state [bci:914]  <||@
  Comment 928 [rbp:0, r14:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6  |7  |8  |9          |10  |11  |12  |13  |14  |15  |16  |17         |18          |19          |20  |21  |22  |23  |24  |25         |26  |27         |28  |29         |30  |31         |32 
     locals:  |rbp|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |r11|DWORD  |-   |-   |-   |-   |-   |-   |-   |r10|DWORD  |int[0|0x0]  |int[0|0x0]  |-   |-   |-   |-   |-   |rcx|QWORD  |-   |r13|QWORD  |-   |rdi|QWORD  |-   |rbx|QWORD  |-    <||@
  Comment 928 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 931 1486 r8|DWORD = MOV rax|QWORD size: DWORD  <||@
  Comment 934 1488 r9|DWORD = LEA [r8|DWORD + 48] size: DWORD  <||@
  Comment 938 1490 MOV (x: [r14|QWORD[.] + r10|DWORD * 2 + 16], y: r9|DWORD) size: WORD  <||@
  Comment 944 1492 r9|QWORD = SHL rdx|QWORD y: 3 size: QWORD  <||@
  Comment 951 1494 rdx|QWORD = SHL rdx|QWORD size: QWORD  <||@
  Comment 954 1496 r9|QWORD = ADD (x: r9|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 957 1498 r10|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 960 1500 rcx|QWORD = SHL rdi|QWORD y: 3 size: QWORD  <||@
  Comment 967 1502 rdi|QWORD = SHL rdi|QWORD size: QWORD  <||@
  Comment 970 1504 rcx|QWORD = ADD (x: rcx|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 973 1506 CMP rcx|QWORD y: 1 size: QWORD  <||@
  Comment 977 1508 BRANCH trueDestinationProbability: 3.796929368977686E-4 condition: < trueDestination: B125 -> B126 falseDestination: B125 -> B127  <||@
  Comment 983 block B127 loop 0 depth 1 header:375|LoopBegin  <||@
  Comment 983 1524 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 983 1526 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 986 1528 rdi|DWORD = SETCC condition: >  <||@
  Comment 994 1530 rdx|QWORD = ADD (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 1000 1532 CMP (x: rdx|QWORD, y: rbx|QWORD) size: QWORD  <||@
  Comment 1003 1534 rdx|DWORD = SETCC condition: >  <||@
  Comment 1009 1536 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:1039]  <||@
  Comment 1009 [rbp:0, r14:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1039, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6  |7  |8  |9          |10  |11  |12  |13  |14  |15  |16  |17         |18         |19         |20  |21  |22        |23  |24  |25        |26  |27         |28  |29         |30  |31         |32 
     locals:  |rbp|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |r11|DWORD  |-   |-   |-   |-   |-   |-   |-   |r10|DWORD  |rdi|DWORD  |rdx|DWORD  |-   |-   |r8|DWORD  |-   |-   |r9|QWORD  |-   |r13|QWORD  |-   |rcx|QWORD  |-   |rbx|QWORD  |-    <||@
  Comment 1009 {infopoint: SAFEPOINT}  <||@
  Comment 1009 11  <||@
  Comment 1015 1538 r8|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 1018 1540 rdi|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 1021 1542 rcx|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 1024 1544 r9|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 1027 1546 JUMP ~[] destination: B127 -> B122  <||@
  Comment 1032 block B126 loop 0 depth 1 header:375|LoopBegin  <||@
  Comment 1032 1510 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1032 1512 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:1039]  <||@
  Comment 1032 [rbp:0, r14:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1039, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6  |7  |8  |9          |10  |11  |12  |13  |14  |15  |16  |17         |18          |19          |20  |21  |22        |23  |24  |25        |26  |27         |28  |29         |30  |31         |32 
     locals:  |rbp|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |r11|DWORD  |-   |-   |-   |-   |-   |-   |-   |r10|DWORD  |int[1|0x1]  |int[1|0x1]  |-   |-   |r8|DWORD  |-   |-   |r9|QWORD  |-   |r13|QWORD  |-   |rcx|QWORD  |-   |rbx|QWORD  |-    <||@
  Comment 1032 {infopoint: SAFEPOINT}  <||@
  Comment 1032 11  <||@
  Comment 1038 1514 rdi|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 1041 1516 rcx|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 1044 1518 r9|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1050 1520 r8|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1056 1522 JUMP ~[] destination: B126 -> B122  <||@
  Comment 1061 block B131 null  <||@
  Comment 1061 1566 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1061 1568 TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 1064 1570 rsi|DWORD = SETCC condition: =  <||@
  Comment 1072 1572 MOVB (x: [rbp|QWORD[.] + 25], y: rsi|DWORD) size: BYTE  <||@
  Comment 1076 1574 rcx|QWORD = SHL rcx|QWORD size: QWORD  <||@
  Comment 1079 1576 rcx|QWORD = SUB (x: rcx|QWORD, ~y: rbx|QWORD) size: QWORD  <||@
  Comment 1082 1578 stack:92|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1087 1580 r11|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1090 1582 r10|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 1095 1584 JUMP ~[] destination: B131 -> B168  <||@
  Comment 1095 block B168 null  <||@
  Comment 1095 2152 [] = LABEL numbPhis: 5 align: false label: ?  <||@
  Comment 1095 2154 rsi|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 1100 2156 MOV (x: [rbp|QWORD[.] + 12], y: rsi|DWORD) size: DWORD  <||@
  Comment 1103 2158 MOV (x: [rbp|QWORD[.] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 1107 2160 MOV (x: [rbp|QWORD[.] + 20], y: r11|DWORD) size: DWORD  <||@
  Comment 1111 2162 TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 1114 2164 BRANCH trueDestinationProbability: 0.6008525479558225 condition: = trueDestination: B168 -> B169 falseDestination: B168 -> B170  <||@
  Comment 1120 block B169 null  <||@
  Comment 1120 2166 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1120 2168 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1129 12  <||@
  Comment 1139 block B26 null  <||@
  Comment 1139 212 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1139 214 rax|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1141 216 JUMP ~[] destination: B26 -> B28  <||@
  Comment 1146 block B45 null  <||@
  Comment 1146 460 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1146 462 r9|DWORD = SUB (x: r9|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 1149 464 rsi|DWORD = SUB (x: rsi|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 1151 466 CMP rdi|DWORD y: 1 size: DWORD  <||@
  Comment 1154 472 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1159 468 BRANCH trueDestinationProbability: 0.3620750396336093 condition: = trueDestination: B45 -> B50 falseDestination: B45 -> B52  <||@
  Comment 1170 block B170 null  <||@
  Comment 1170 2170 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1170 2172 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 1173 2174 BRANCH trueDestinationProbability: 0.7168137687555163 condition: = trueDestination: B170 -> B171 falseDestination: B170 -> B172  <||@
  Comment 1179 block B171 null  <||@
  Comment 1179 2176 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1179 2178 rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 1182 2180 - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.roundup()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1505]  <||@
  Comment 1182 9  <||@
  Comment 1183 {HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.roundup()>}  <||@
  Comment 1188 []at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:778) [bci: 1505, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8  |9  |10  |11  |12  |13  |14  |15  |16  |17  |18  |19  |20  |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-    <||@
  Comment 1189 2182 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1198 12  <||@
  Comment 1208 block B4 null  <||@
  Comment 1208 48 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1208 50 CMP rdx|DWORD y: 63 size: DWORD  <||@
  Comment 1211 52 BRANCH trueDestinationProbability: 0.9998165784832451 condition: < trueDestination: B4 -> B6 falseDestination: B4 -> B27  <||@
  Comment 1222 block B43 null  <||@
  Comment 1222 424 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1222 426 r13|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 1228 428 r14|DWORD = SHL r13|DWORD size: DWORD  <||@
  Comment 1234 430 r14|DWORD = ADD (x: r14|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 1237 432 rax|DWORD = ADD (x: r11|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1240 434 stack:52|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1245 436 r14|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 1248 438 r13|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1251 440 JUMP ~[] destination: B43 -> B44  <||@
  Comment 1256 block B40 null  <||@
  Comment 1256 388 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1256 390 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1261 392 rsi|DWORD = SUB (x: rsi|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 1264 394 r9|DWORD = SHL rcx|DWORD size: DWORD  <||@
  Comment 1270 396 r9|DWORD = SUB (x: r9|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 1273 398 rbp|DWORD = SUB (x: rax|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 1278 400 stack:44|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 1282 402 stack:48|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1287 404 rsi|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 1289 406 JUMP ~[] destination: B40 -> B41  <||@
  Comment 1294 block B11 null  <||@
  Comment 1294 90 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1294 92 CMP rdx|DWORD y: 52 size: DWORD  <||@
  Comment 1297 94 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B22  <||@
  Comment 1303 block B12 null  <||@
  Comment 1303 96 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1303 98 CMP (x: rdx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 1306 100 BRANCH trueDestinationProbability: 0.0013467536149702752 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B20  <||@
  Comment 1312 block B20 null  <||@
  Comment 1312 160 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1312 162 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1318 164 JUMP ~[] destination: B20 -> B21  <||@
  Comment 1318 block B21 null  <||@
  Comment 1318 166 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1318 168 rcx|DWORD = MOVE input: int[52|0x34]  <||@
  Comment 1323 170 rcx|DWORD = SUB (x: rcx|DWORD, ~y: rdx|DWORD) size: DWORD  <||@
  Comment 1325 172 r10|QWORD = SHR (x: r10|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 1328 174 rdx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1333 176 rcx|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1336 178 - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD, r8|DWORD] [] callTarget: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(int, long, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:170]  <||@
  Comment 1336 9  <||@
  Comment 1343 {HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(int, long, int)>}  <||@
  Comment 1348 []at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:476) [bci: 170, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8  |9  |10  |11  |12  |13  |14  |15  |16  |17  |18  |19  |20  |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-    <||@
  Comment 1349 180 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1358 12  <||@
  Comment 1368 block B50 null  <||@
  Comment 1368 498 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 1368 500 rsi|DWORD = DEC rsi|DWORD size: DWORD  <||@
  Comment 1370 502 JUMP ~[] destination: B50 -> B52  <||@
  Comment 1375 block B32 null  <||@
  Comment 1375 306 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1375 308 CMP r9|DWORD y: 52 size: DWORD  <||@
  Comment 1379 310 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B177  <||@
  Comment 1385 block B33 null  <||@
  Comment 1385 312 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1385 314 rsi|QWORD = AND (x: r13|QWORD, y: rbp|QWORD) size: QWORD  <||@
  Comment 1391 316 r11|QWORD = MOVE input: long[4503599627370496|0x10000000000000]  <||@
  Comment 1401 318 rsi|QWORD = OR (x: rsi|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1404 320 r11|DWORD = MOVE input: int[1075|0x433]  <||@
  Comment 1410 322 r11|DWORD = SUB (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 1413 324 rcx|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1416 326 rsi|QWORD = SHR (x: rsi|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 1419 328 r11|DWORD = MOV rsi|QWORD size: DWORD  <||@
  Comment 1422 330 TEST (x: r14|QWORD, y: r13|QWORD) size: QWORD  <||@
  Comment 1425 332 BRANCH trueDestinationProbability: 0.007647163435888316 condition: = trueDestination: B33 -> B38 falseDestination: B33 -> B35  <||@
  Comment 1431 block B35 null  <||@
  Comment 1431 338 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1431 340 rcx|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1434 342 rbp|QWORD = SHR (x: rbp|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 1437 344 TEST (x: rbp|QWORD, y: r13|QWORD) size: QWORD  <||@
  Comment 1440 346 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37  <||@
  Comment 1446 block B37 null  <||@
  Comment 1446 358 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1446 360 rcx|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 1451 362 rcx|DWORD = SUB (x: rcx|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 1454 364 r11|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1457 366 JUMP ~[] destination: B37 -> B38  <||@
  Comment 1462 block B104 null  <||@
  Comment 1462 1256 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1462 1258 rax|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 1466 1260 CMP (x: rdx|QWORD, y: rbx|QWORD) size: QWORD  <||@
  Comment 1469 1262 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B104 -> B105 falseDestination: B104 -> B106  <||@
  Comment 1475 block B106 null  <||@
  Comment 1475 1292 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1475 1294 r11|DWORD = DEC r11|DWORD size: DWORD  <||@
  Comment 1478 1296 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1480 1302 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1486 1298 BRANCH trueDestinationProbability: 0.010669521717460728 condition: = trueDestination: B106 -> B107 falseDestination: B106 -> B114  <||@
  Comment 1497 block B172 null  <||@
  Comment 1497 2184 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1497 2186 TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 1500 2188 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B172 -> B173 falseDestination: B172 -> B174  <||@
  Comment 1506 block B174 null  <||@
  Comment 1506 2200 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1506 2202 CMP rcx|QWORD y: 1 size: QWORD  <||@
  Comment 1510 2204 BRANCH trueDestinationProbability: 0.40049867539348605 condition: < trueDestination: B174 -> B175 falseDestination: B174 -> B176  <||@
  Comment 1516 block B176 null  <||@
  Comment 1516 2210 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1516 2212 rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 1519 2214 - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.roundup()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1498]  <||@
  Comment 1519 {HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.roundup()>}  <||@
  Comment 1519 9  <||@
  Comment 1524 []at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:775) [bci: 1498, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8  |9  |10  |11  |12  |13  |14  |15  |16  |17  |18  |19  |20  |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-    <||@
  Comment 1525 2216 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1534 12  <||@
  Comment 1544 block B175 null  <||@
  Comment 1544 2206 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1544 2208 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1553 12  <||@
  Comment 1563 block B135 null  <||@
  Comment 1563 1638 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1563 1640 stack:68|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 1567 1642 r10|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1570 1644 stack:76|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1575 1646 stack:80|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1580 1648 stack:48|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 1584 1650 stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1589 1652 JUMP ~[] destination: B135 -> B137  <||@
  Comment 1589 block B137 null  <||@
  Comment 1589 1664 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1589 1666 rsi|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 1592 1668 rdx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1595 1670 stack:72|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1600 1672 rax|QWORD[.] = CALL_DIRECT [rsi|DWORD, rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.valueOfPow52(int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1074]  <||@
  Comment 1600 8  <||@
  Comment 1607 {HotSpotMethod<FDBigInteger.valueOfPow52(int, int)>}  <||@
  Comment 1612 [stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1074, duringCall: true, rethrow: false]
              |0                  |1  |2               |3  |4  |5               |6  |7  |8  |9               |10              |11              |12              |13              |14              |15              |16  |17  |18  |19  |20  |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |stack:64|QWORD  |-  |-  |stack:28|DWORD  |-  |-  |-  |stack:84|DWORD  |stack:76|DWORD  |stack:48|DWORD  |stack:72|DWORD  |stack:56|DWORD  |stack:68|DWORD  |stack:48|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-    <||@
  Comment 1613 1674 NULLCHECK [rax|QWORD[.]] state [bci:1077]  <||@
  Comment 1613 [rax:0, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1077, duringCall: false, rethrow: false]
              |0                  |1  |2               |3  |4  |5               |6  |7  |8  |9               |10              |11              |12              |13              |14              |15              |16  |17  |18  |19  |20  |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |stack:64|QWORD  |-  |-  |stack:28|DWORD  |-  |-  |-  |stack:84|DWORD  |stack:76|DWORD  |stack:48|DWORD  |stack:72|DWORD  |stack:56|DWORD  |stack:68|DWORD  |stack:48|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-  
     stack:   |Object[null]       |   |                |   |   |                |   |   |   |                |                |                |                |                |                |                |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |     <||@
  Comment 1613 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1615 1676 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1618 1678 stack:104|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1623 1680 rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.getNormalizationBias()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1081]  <||@
  Comment 1623 {HotSpotMethod<FDBigInteger.getNormalizationBias()>}  <||@
  Comment 1623 9  <||@
  Comment 1628 [stack:24, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:711) [bci: 1081, duringCall: true, rethrow: false]
              |0                  |1  |2               |3  |4  |5               |6  |7  |8  |9               |10              |11              |12              |13              |14              |15              |16  |17  |18  |19  |20  |21  |22  |23  |24  |25                  |26  |27  |28  |29  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |stack:64|QWORD  |-  |-  |stack:28|DWORD  |-  |-  |-  |stack:84|DWORD  |stack:76|DWORD  |stack:48|DWORD  |stack:72|DWORD  |stack:56|DWORD  |stack:68|DWORD  |stack:48|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |stack:104|QWORD[.]  |-   |-   |-   |-   |-   |-   |-    <||@
  Comment 1629 1682 rsi|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 1634 1684 rdx|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1636 1686 stack:92|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1640 1688 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.leftShift(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1090]  <||@
  Comment 1640 9  <||@
  Comment 1647 {HotSpotMethod<FDBigInteger.leftShift(int)>}  <||@
  Comment 1652 [stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:712) [bci: 1090, duringCall: true, rethrow: false]
              |0                  |1  |2               |3  |4  |5               |6  |7  |8  |9               |10              |11              |12              |13              |14              |15              |16  |17  |18  |19  |20  |21  |22  |23  |24  |25  |26              |27  |28  |29  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |stack:64|QWORD  |-  |-  |stack:28|DWORD  |-  |-  |-  |stack:84|DWORD  |stack:76|DWORD  |stack:48|DWORD  |stack:72|DWORD  |stack:56|DWORD  |stack:68|DWORD  |stack:48|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |stack:92|DWORD  |-   |-   |-   |-   |-   |-    <||@
  Comment 1653 1690 stack:104|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1658 1692 rcx|DWORD = ADD (x: stack:92|DWORD, y: stack:76|DWORD) size: DWORD  <||@
  Comment 1666 1694 rsi|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 1671 1696 rdx|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 1675 1698 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD, rdx|DWORD, rcx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.valueOfMulPow52(long, int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1103]  <||@
  Comment 1675 8  <||@
  Comment 1679 {HotSpotMethod<FDBigInteger.valueOfMulPow52(long, int, int)>}  <||@
  Comment 1684 [stack:24, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:714) [bci: 1103, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5               |6  |7  |8  |9               |10  |11  |12              |13              |14              |15              |16  |17  |18  |19  |20  |21  |22  |23  |24  |25                  |26              |27  |28  |29  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |stack:28|DWORD  |-  |-  |-  |stack:84|DWORD  |-   |-   |stack:72|DWORD  |stack:56|DWORD  |stack:68|DWORD  |stack:48|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |stack:104|QWORD[.]  |stack:92|DWORD  |-   |-   |-   |-   |-   |-    <||@
  Comment 1685 1700 stack:64|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1690 1702 NULLCHECK [rax|QWORD[.]] state [bci:1106]  <||@
  Comment 1690 [stack:24, stack:64, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:714) [bci: 1106, duringCall: false, rethrow: false]
              |0                  |1  |2  |3  |4  |5               |6  |7  |8  |9               |10  |11  |12              |13              |14              |15              |16  |17  |18  |19  |20  |21  |22  |23  |24  |25                  |26              |27  |28  |29  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |stack:28|DWORD  |-  |-  |-  |stack:84|DWORD  |-   |-   |stack:72|DWORD  |stack:56|DWORD  |stack:68|DWORD  |stack:48|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |stack:104|QWORD[.]  |stack:92|DWORD  |-   |-   |-   |-   |-   |-  
     stack:   |Object[null]       |   |   |   |   |                |   |   |   |                |    |    |                |                |                |                |    |    |    |    |    |    |    |    |    |                    |                |    |    |    |    |    |     <||@
  Comment 1690 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1692 1704 rsi|DWORD = ADD (x: stack:92|DWORD, y: stack:68|DWORD) size: DWORD  <||@
  Comment 1700 1706 rdx|DWORD = INC rsi|DWORD size: DWORD  <||@
  Comment 1704 1708 rsi|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1708 1710 rax|QWORD[.] = CALL_DIRECT [rsi|DWORD, rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.valueOfPow52(int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1119]  <||@
  Comment 1708 8  <||@
  Comment 1711 {HotSpotMethod<FDBigInteger.valueOfPow52(int, int)>}  <||@
  Comment 1716 [stack:24, stack:64, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:715) [bci: 1119, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5               |6  |7  |8  |9               |10  |11  |12              |13              |14  |15  |16  |17  |18  |19  |20  |21  |22  |23  |24  |25                  |26              |27                 |28  |29  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |stack:28|DWORD  |-  |-  |-  |stack:84|DWORD  |-   |-   |stack:72|DWORD  |stack:56|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |stack:104|QWORD[.]  |stack:92|DWORD  |stack:64|QWORD[.]  |-   |-   |-   |-   |-    <||@
  Comment 1717 1712 rsi|DWORD = ADD (x: stack:72|DWORD, y: stack:92|DWORD) size: DWORD  <||@
  Comment 1725 1714 rdx|DWORD = INC rsi|DWORD size: DWORD  <||@
  Comment 1729 1716 rsi|DWORD = MOVE stack:80|DWORD moveKind: DWORD  <||@
  Comment 1733 1718 stack:112|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1738 1720 rax|QWORD[.] = CALL_DIRECT [rsi|DWORD, rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.valueOfPow52(int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1135]  <||@
  Comment 1738 8  <||@
  Comment 1743 {HotSpotMethod<FDBigInteger.valueOfPow52(int, int)>}  <||@
  Comment 1748 [stack:16, stack:24, stack:64, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:717) [bci: 1135, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5               |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17  |18  |19  |20  |21  |22  |23  |24  |25                  |26  |27                 |28                  |29  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |stack:28|DWORD  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |stack:104|QWORD[.]  |-   |stack:64|QWORD[.]  |stack:112|QWORD[.]  |-   |-   |-   |-    <||@
  Comment 1749 1722 stack:120|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1754 1724 NULLCHECK [rax|QWORD[.]] state [bci:1138]  <||@
  Comment 1754 [stack:8, stack:16, stack:24, stack:64, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:717) [bci: 1138, duringCall: false, rethrow: false]
              |0                  |1  |2  |3  |4  |5               |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17  |18  |19  |20  |21  |22  |23  |24  |25                  |26  |27                 |28                  |29  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |stack:28|DWORD  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |stack:104|QWORD[.]  |-   |stack:64|QWORD[.]  |stack:112|QWORD[.]  |-   |-   |-   |-  
     stack:   |Object[null]       |   |   |   |   |                |   |   |   |                |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |                    |    |                   |                    |    |    |    |     <||@
  Comment 1754 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1756 1726 rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1761 1728 rdx|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 1766 1730 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.quoRemIteration(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1147]  <||@
  Comment 1766 9  <||@
  Comment 1767 {HotSpotMethod<FDBigInteger.quoRemIteration(FDBigInteger)>}  <||@
  Comment 1772 [stack:8, stack:16, stack:24, stack:64, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:724) [bci: 1147, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5               |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17          |18  |19  |20  |21  |22  |23  |24  |25                  |26  |27                 |28                  |29                  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |stack:28|DWORD  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |int[0|0x0]  |-   |-   |-   |-   |-   |-   |-   |stack:104|QWORD[.]  |-   |stack:64|QWORD[.]  |stack:112|QWORD[.]  |stack:120|QWORD[.]  |-   |-   |-    <||@
  Comment 1773 1732 rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1778 1734 rdx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 1783 1736 stack:80|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1787 1738 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1156]  <||@
  Comment 1787 9  <||@
  Comment 1791 {HotSpotMethod<FDBigInteger.cmp(FDBigInteger)>}  <||@
  Comment 1796 [stack:8, stack:16, stack:24, stack:64, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:725) [bci: 1156, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5               |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17          |18  |19  |20  |21  |22              |23  |24  |25                  |26  |27                 |28                  |29                  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |stack:28|DWORD  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |int[0|0x0]  |-   |-   |-   |-   |stack:80|DWORD  |-   |-   |stack:104|QWORD[.]  |-   |stack:64|QWORD[.]  |stack:112|QWORD[.]  |stack:120|QWORD[.]  |-   |-   |-    <||@
  Comment 1797 1740 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1799 1742 r10|DWORD = SETCC condition: <  <||@
  Comment 1807 1744 rsi|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD  <||@
  Comment 1812 1746 rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1817 1748 rcx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 1822 1750 stack:92|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1827 1752 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1175]  <||@
  Comment 1827 9  <||@
  Comment 1831 {HotSpotMethod<FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)>}  <||@
  Comment 1836 [stack:8, stack:16, stack:24, stack:64, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:726) [bci: 1175, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5               |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17          |18              |19  |20  |21  |22              |23  |24  |25                  |26  |27                 |28                  |29                  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |stack:28|DWORD  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |int[0|0x0]  |stack:92|DWORD  |-   |-   |-   |stack:80|DWORD  |-   |-   |stack:104|QWORD[.]  |-   |stack:64|QWORD[.]  |stack:112|QWORD[.]  |stack:120|QWORD[.]  |-   |-   |-    <||@
  Comment 1837 1754 r10|DWORD = MOVE stack:80|DWORD moveKind: DWORD  <||@
  Comment 1842 1756 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 1845 1758 BRANCH trueDestinationProbability: 0.10979929161747348 condition: = trueDestination: B137 -> B138 falseDestination: B137 -> B141  <||@
  Comment 1851 block B141 null  <||@
  Comment 1851 1782 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1851 1784 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1856 1786 JUMP ~[] destination: B141 -> B142  <||@
  Comment 1856 block B142 null  <||@
  Comment 1856 1788 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1856 1790 rdx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 1859 1792 CMP rax|DWORD y: 1 size: DWORD  <||@
  Comment 1862 1794 r11|DWORD = SETCC condition: <  <||@
  Comment 1870 1796 CMP [rdx|DWORD[.] * 8 + 12] y: 0 size: DWORD state [bci:1227]  <||@
  Comment 1870 [rdx:0, rsi:0, stack:8, stack:16, stack:24, stack:64, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1227, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5               |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17          |18              |19         |20  |21  |22         |23  |24  |25                  |26  |27                 |28                  |29                  |30  |31  |32 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |stack:28|DWORD  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |int[0|0x0]  |stack:92|DWORD  |r11|DWORD  |-   |-   |r10|DWORD  |-   |-   |stack:104|QWORD[.]  |-   |stack:64|QWORD[.]  |stack:112|QWORD[.]  |stack:120|QWORD[.]  |-   |-   |-    <||@
  Comment 1870 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1878 1798 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B142 -> B143 falseDestination: B142 -> B144  <||@
  Comment 1884 block B144 null  <||@
  Comment 1884 1822 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1884 1824 r10|DWORD = LEA [r10|DWORD + 48] size: DWORD  <||@
  Comment 1888 1826 MOV (x: [rdx|DWORD[.] * 8 + 16], y: r10|DWORD) size: WORD  <||@
  Comment 1897 1828 r10|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1903 1830 r11|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 1908 1832 rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 1912 1834 JUMP ~[] destination: B144 -> B145  <||@
  Comment 1912 block B145 null  <||@
  Comment 1912 1836 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 1912 1838 stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1917 1840 TEST (x: rbp|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 1919 1842 BRANCH trueDestinationProbability: 0.0448642266824085 condition: = trueDestination: B145 -> B146 falseDestination: B145 -> B147  <||@
  Comment 1925 block B147 null  <||@
  Comment 1925 1852 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1925 1854 CMP r11|DWORD y: -3 size: DWORD  <||@
  Comment 1929 1856 BRANCH trueDestinationProbability: 0.2735887927482489 condition: < trueDestination: B147 -> B148 falseDestination: B147 -> B149  <||@
  Comment 1935 block B149 null  <||@
  Comment 1935 1866 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1935 1868 CMP r11|DWORD y: 8 size: DWORD  <||@
  Comment 1939 1870 BRANCH trueDestinationProbability: 0.998298355076574 condition: < trueDestination: B149 -> B150 falseDestination: B149 -> B151  <||@
  Comment 1945 block B150 null  <||@
  Comment 1945 1872 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1945 1874 CMP rax|DWORD y: 1 size: DWORD  <||@
  Comment 1948 1876 rdx|DWORD = SETCC condition: <  <||@
  Comment 1954 1878 r8|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 1957 1880 rdx|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 1961 1882 JUMP ~[] destination: B150 -> B152  <||@
  Comment 1961 block B152 null  <||@
  Comment 1961 1892 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 1961 1894 rbx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 1966 1896 rcx|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1969 1898 r9|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 1972 1906 JUMP ~[] destination: B152 -> B153  <||@
  Comment 1977 block B154 loop 1 depth 1 header:550|LoopBegin  <||@
  Comment 1977 1914 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1984 1916 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 1986 1918 BRANCH trueDestinationProbability: 0.9936234534969387 condition: = trueDestination: B154 -> B155 falseDestination: B154 -> B160  <||@
  Comment 1992 block B155 loop 1 depth 1 header:550|LoopBegin  <||@
  Comment 1992 1920 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1992 1922 NULLCHECK [rbx|QWORD[.]] state [bci:1268]  <||@
  Comment 1992 [rax:0, rbx:0, r10:0, stack:8, stack:24, stack:64, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1268, duringCall: false, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17              |18          |19          |20  |21  |22  |23  |24  |25            |26  |27            |28            |29                  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:92|DWORD  |int[0|0x0]  |int[0|0x0]  |-   |-   |-   |-   |-   |r10|QWORD[.]  |-   |rax|QWORD[.]  |Object[null]  |stack:120|QWORD[.]  |-   |-   |-    <||@
  Comment 1992 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1994 1924 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1997 1926 rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2000 1928 stack:112|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 2005 1930 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.quoRemIteration(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1282]  <||@
  Comment 2005 9  <||@
  Comment 2007 {HotSpotMethod<FDBigInteger.quoRemIteration(FDBigInteger)>}  <||@
  Comment 2012 [stack:8, stack:16, stack:24, stack:64, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:745) [bci: 1282, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17              |18  |19  |20  |21  |22  |23  |24  |25                  |26  |27                 |28                  |29                  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:92|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:104|QWORD[.]  |-   |stack:64|QWORD[.]  |stack:112|QWORD[.]  |stack:120|QWORD[.]  |-   |-   |-    <||@
  Comment 2013 1932 rsi|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 2018 1934 stack:80|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 2022 1936 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.multBy10()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1312]  <||@
  Comment 2022 9  <||@
  Comment 2023 {HotSpotMethod<FDBigInteger.multBy10()>}  <||@
  Comment 2028 [stack:8, stack:24, stack:64, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:747) [bci: 1312, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17              |18  |19  |20  |21  |22              |23  |24  |25                  |26  |27                 |28  |29                  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:92|DWORD  |-   |-   |-   |-   |stack:80|DWORD  |-   |-   |stack:104|QWORD[.]  |-   |stack:64|QWORD[.]  |-   |stack:120|QWORD[.]  |-   |-   |-    <||@
  Comment 2029 1938 rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2034 1940 rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2037 1942 stack:112|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2042 1944 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1321]  <||@
  Comment 2042 9  <||@
  Comment 2047 {HotSpotMethod<FDBigInteger.cmp(FDBigInteger)>}  <||@
  Comment 2052 [stack:8, stack:16, stack:24, stack:64, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17              |18  |19  |20  |21  |22              |23  |24  |25                  |26  |27                 |28                  |29                  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:92|DWORD  |-   |-   |-   |-   |stack:80|DWORD  |-   |-   |stack:104|QWORD[.]  |-   |stack:64|QWORD[.]  |stack:112|QWORD[.]  |stack:120|QWORD[.]  |-   |-   |-    <||@
  Comment 2053 1946 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 2055 1948 r9|DWORD = SETCC condition: <  <||@
  Comment 2063 1950 rsi|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD  <||@
  Comment 2068 1952 rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2073 1954 rcx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 2078 1956 stack:72|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 2083 1958 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1340]  <||@
  Comment 2083 9  <||@
  Comment 2087 {HotSpotMethod<FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)>}  <||@
  Comment 2092 [stack:8, stack:16, stack:24, stack:64, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1340, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17              |18              |19  |20  |21  |22              |23  |24  |25                  |26  |27                 |28                  |29                  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:92|DWORD  |stack:72|DWORD  |-   |-   |-   |stack:80|DWORD  |-   |-   |stack:104|QWORD[.]  |-   |stack:64|QWORD[.]  |stack:112|QWORD[.]  |stack:120|QWORD[.]  |-   |-   |-    <||@
  Comment 2093 1960 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2098 1962 rdx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 2101 1964 r10|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 2106 1966 CMP (x: r10|DWORD, y: [rdx|DWORD[.] * 8 + 12]) size: DWORD state [bci:1343]  <||@
  Comment 2106 [rdx:0, rsi:0, stack:8, stack:16, stack:24, stack:64, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1343, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17         |18              |19  |20  |21  |22              |23  |24  |25                  |26  |27                 |28                  |29                  |30  |31  |32 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |r10|DWORD  |stack:72|DWORD  |-   |-   |-   |stack:80|DWORD  |-   |-   |stack:104|QWORD[.]  |-   |stack:64|QWORD[.]  |stack:112|QWORD[.]  |stack:120|QWORD[.]  |-   |-   |-  
     stack:   |rax|DWORD     |   |   |   |   |   |   |   |   |                |    |    |    |    |    |    |    |           |                |    |    |    |                |    |    |                    |    |                   |                    |                    |    |    |     <||@
  Comment 2106 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2114 1968 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B155 -> B156 falseDestination: B155 -> B157  <||@
  Comment 2120 block B156 loop 1 depth 1 header:550|LoopBegin  <||@
  Comment 2120 1970 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2120 1972 r11|DWORD = MOVE stack:80|DWORD moveKind: DWORD  <||@
  Comment 2125 1974 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@40447647 encoding: base: 0 shift: 3  <||@
  Comment 2129 1976 r11|DWORD = LEA [r11|DWORD + 48] size: DWORD  <||@
  Comment 2133 1978 MOV (x: [rdx|QWORD[.] + r10|DWORD * 2 + 16], y: r11|DWORD) size: WORD  <||@
  Comment 2139 1980 CMP rax|DWORD y: 1 size: DWORD  <||@
  Comment 2142 1982 rcx|DWORD = SETCC condition: <  <||@
  Comment 2148 1984 r10|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 2151 1986 rbx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 2156 1988 r9|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 2161 1996 JUMP ~[] destination: B156 -> B153  <||@
  Comment 2161 block B153 loop 1 depth 1 header:550|LoopBegin  <||@
  Comment 2161 1908 [] = LABEL numbPhis: 4 align: false label: ?  <||@
  Comment 2161 1900 stack:92|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2166 1902 rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2171 1904 r10|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 2176 1910 TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 2179 1912 BRANCH trueDestinationProbability: 0.9449992797810535 condition: = trueDestination: B153 -> B154 falseDestination: B153 -> B160  <||@
  Comment 2185 block B160 null  <||@
  Comment 2185 2032 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2185 2026 r10|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 2190 2028 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2195 2034 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 2197 2036 BRANCH trueDestinationProbability: 0.045633359559402044 condition: = trueDestination: B160 -> B161 falseDestination: B160 -> B162  <||@
  Comment 2203 block B162 null  <||@
  Comment 2203 2052 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2203 2054 TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 2206 2056 BRANCH trueDestinationProbability: 0.10346248969497114 condition: = trueDestination: B162 -> B163 falseDestination: B162 -> B164  <||@
  Comment 2212 block B164 null  <||@
  Comment 2212 2072 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2212 2074 stack:80|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 2216 2076 stack:72|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 2221 2078 stack:92|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2226 2080 rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2231 2082 rdx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2236 2084 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.leftShift(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1385]  <||@
  Comment 2236 9  <||@
  Comment 2239 {HotSpotMethod<FDBigInteger.leftShift(int)>}  <||@
  Comment 2244 [stack:8, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:753) [bci: 1385, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17              |18              |19              |20  |21  |22  |23  |24  |25  |26  |27  |28  |29                  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:92|DWORD  |stack:72|DWORD  |stack:80|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |stack:120|QWORD[.]  |-   |-   |-    <||@
  Comment 2245 2086 NULLCHECK [rax|QWORD[.]] state [bci:1388]  <||@
  Comment 2245 [rax:0, stack:8, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:753) [bci: 1388, duringCall: false, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17              |18              |19              |20  |21  |22  |23  |24  |25  |26  |27  |28  |29                  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:92|DWORD  |stack:72|DWORD  |stack:80|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |stack:120|QWORD[.]  |-   |-   |-  
     stack:   |Object[null]       |   |   |   |   |   |   |   |   |                |    |    |    |    |    |    |    |                |                |                |    |    |    |    |    |    |    |    |    |                    |    |    |     <||@
  Comment 2245 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2247 2088 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2250 2090 rdx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD  <||@
  Comment 2255 2092 stack:120|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2260 2094 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1394]  <||@
  Comment 2260 9  <||@
  Comment 2263 {HotSpotMethod<FDBigInteger.cmp(FDBigInteger)>}  <||@
  Comment 2268 [stack:8, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:754) [bci: 1394, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17              |18              |19              |20  |21  |22  |23  |24  |25  |26  |27                  |28  |29  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:92|DWORD  |stack:72|DWORD  |stack:80|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:120|QWORD[.]  |-   |-   |-   |-   |-    <||@
  Comment 2269 2096 rsi|QWORD = MOVSXD rax|DWORD size: QWORD  <||@
  Comment 2272 2098 rax|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD  <||@
  Comment 2277 2100 stack:104|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 2282 2102 JUMP ~[] destination: B164 -> B165  <||@
  Comment 2282 block B165 null  <||@
  Comment 2282 2104 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 2282 2106 rdx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[FDBigInteger@241972498]  <||@
  Comment 2282 {Object[FDBigInteger@241972498]}  <||@
  Comment 2292 2108 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2295 2110 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1412]  <||@
  Comment 2295 {HotSpotMethod<FDBigInteger.cmp(FDBigInteger)>}  <||@
  Comment 2295 9  <||@
  Comment 2300 [stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1412, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17              |18              |19              |20               |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:92|DWORD  |stack:72|DWORD  |stack:80|DWORD  |stack:104|QWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-  
     stack:   |stack:40|QWORD[.]  |   |   |   |   |   |   |   |   |                |    |    |    |    |    |    |    |                |                |                |                 |    |    |    |    |    |    |    |    |    |    |    |     <||@
  Comment 2301 2112 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 2303 2114 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B165 -> B166 falseDestination: B165 -> B167  <||@
  Comment 2309 block B167 null  <||@
  Comment 2309 2132 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2309 2134 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2314 2136 MOVB (x: [rsi|QWORD[.] + 25], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 2318 2138 rcx|QWORD = MOVE stack:104|QWORD moveKind: QWORD  <||@
  Comment 2323 2140 r9|DWORD = MOVE stack:80|DWORD moveKind: DWORD  <||@
  Comment 2328 2142 r8|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 2333 2144 r11|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 2338 2146 r10|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 2343 2148 rbp|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2346 2150 JUMP ~[] destination: B167 -> B168  <||@
  Comment 2351 block B64 null  <||@
  Comment 2351 658 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2351 660 stack:68|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 2355 662 r10|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 2358 664 stack:76|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 2363 666 stack:80|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 2368 668 stack:48|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 2372 670 stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2377 672 JUMP ~[] destination: B64 -> B137  <||@
  Comment 2382 block B148 null  <||@
  Comment 2382 1858 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2382 1860 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2388 1862 rdx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2393 1864 JUMP ~[] destination: B148 -> B152  <||@
  Comment 2398 block B112 null  <||@
  Comment 2398 1362 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2398 1366 rdi|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2403 1368 r9|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2409 1370 JUMP ~[] destination: B112 -> B119  <||@
  Comment 2414 block B138 null  <||@
  Comment 2414 1760 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2414 1762 rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 2418 1764 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2423 1766 CMP rax|DWORD y: 1 size: DWORD  <||@
  Comment 2426 1768 BRANCH trueDestinationProbability: 0.2831541218637993 condition: < trueDestination: B138 -> B142 falseDestination: B138 -> B140  <||@
  Comment 2432 block B140 null  <||@
  Comment 2432 1774 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2432 1776 r11|DWORD = DEC stack:84|DWORD size: DWORD  <||@
  Comment 2440 1778 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2446 1780 JUMP ~[] destination: B140 -> B145  <||@
  Comment 2451 block B163 null  <||@
  Comment 2451 2058 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2451 2060 rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2456 2062 stack:104|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2465 2064 stack:80|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 2469 2066 stack:72|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 2474 2068 stack:92|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2479 2070 JUMP ~[] destination: B163 -> B165  <||@
  Comment 2484 block B161 null  <||@
  Comment 2484 2038 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2484 2040 rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2489 2042 stack:104|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2498 2044 stack:80|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 2502 2046 stack:72|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 2507 2048 stack:92|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2512 2050 JUMP ~[] destination: B161 -> B165  <||@
  Comment 2517 block B146 null  <||@
  Comment 2517 1844 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2517 1846 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2523 1848 rdx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2528 1850 JUMP ~[] destination: B146 -> B152  <||@
  Comment 2533 block B107 null  <||@
  Comment 2533 1300 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2533 1304 rdi|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2538 1306 r9|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2544 1308 JUMP ~[] destination: B107 -> B119  <||@
  Comment 2549 block B25 null  <||@
  Comment 2549 206 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2549 208 rax|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 2551 210 JUMP ~[] destination: B25 -> B28  <||@
  Comment 2556 block B71 null  <||@
  Comment 2556 746 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2556 748 stack:52|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 2560 750 stack:88|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 2564 752 stack:92|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 2569 754 stack:68|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 2573 756 stack:72|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 2577 758 stack:76|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 2582 760 stack:48|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 2586 762 stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2591 764 rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 2594 766 rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 2598 768 CMP rcx|DWORD y: 32 size: DWORD  <||@
  Comment 2601 770 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B71 -> B72 falseDestination: B71 -> B100  <||@
  Comment 2607 block B72 null  <||@
  Comment 2607 772 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2607 774 CMP stack:48|DWORD y: 14 size: DWORD  <||@
  Comment 2612 776 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B72 -> B73 falseDestination: B72 -> B99  <||@
  Comment 2618 block B73 null  <||@
  Comment 2618 778 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2618 780 CMP stack:56|DWORD y: 14 size: DWORD  <||@
  Comment 2623 782 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B73 -> B74 falseDestination: B73 -> B98  <||@
  Comment 2629 block B74 null  <||@
  Comment 2629 784 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2629 786 NULLCHECK [r12|QWORD[*] + r14|DWORD[.] * 8] state [bci:365]  <||@
  Comment 2629 [rsi:0, r14:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365, duringCall: false, rethrow: false]
              |0               |1               |2               |3  |4  |5          |6  |7  |8  |9               |10              |11              |12              |13              |14              |15              |16  |17  |18  |19  |20  |21  |22  |23              |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |rsi|QWORD[.]    |-               |stack:64|QWORD  |-  |-  |rbp|DWORD  |-  |-  |-  |stack:84|DWORD  |stack:76|DWORD  |stack:48|DWORD  |stack:72|DWORD  |stack:56|DWORD  |stack:68|DWORD  |stack:48|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:88|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-  
     stack:   |stack:52|DWORD  |stack:92|DWORD  |                |   |   |           |   |   |   |                |                |                |                |                |                |                |    |    |    |    |    |    |    |                |    |    |    |    |    |    |    |    |     <||@
  Comment 2629 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2633 788 TEST (x: rbp|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 2635 790 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76  <||@
  Comment 2641 block B76 null  <||@
  Comment 2641 810 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2641 812 CMP stack:84|DWORD y: -3 size: DWORD  <||@
  Comment 2646 814 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B76 -> B77 falseDestination: B76 -> B78  <||@
  Comment 2652 block B78 null  <||@
  Comment 2652 834 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2652 836 CMP stack:84|DWORD y: 8 size: DWORD  <||@
  Comment 2657 838 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B78 -> B79 falseDestination: B78 -> B97  <||@
  Comment 2663 block B79 null  <||@
  Comment 2663 840 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2663 842 r13|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 2668 844 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[14]{1, 5, 25, 125, 625, ...}]  <||@
  Comment 2668 {Object[int[14]{1, 5, 25, 125, 625, ...}]}  <||@
  Comment 2678 846 rdx|DWORD = MOV [rax|QWORD[.] + r13|DWORD * 4 + 16] size: DWORD  <||@
  Comment 2683 848 rcx|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 2687 850 r10|DWORD = SHL (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 2693 852 rcx|DWORD = SHL r10|DWORD y: 3 size: DWORD  <||@
  Comment 2699 854 r10|DWORD = SHL r10|DWORD size: DWORD  <||@
  Comment 2702 856 r10|DWORD = ADD (x: rcx|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 2705 858 rcx|DWORD = SHL r10|DWORD y: 3 size: DWORD  <||@
  Comment 2711 860 r11|DWORD = SHL r10|DWORD size: DWORD  <||@
  Comment 2717 862 r11|DWORD = ADD (x: rcx|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 2720 864 CMP r11|DWORD y: 1 size: DWORD  <||@
  Comment 2724 866 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B79 -> B80 falseDestination: B79 -> B81  <||@
  Comment 2730 block B81 null  <||@
  Comment 2730 884 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2730 886 CMP [r14|DWORD[.] * 8 + 12] y: 2 size: DWORD  <||@
  Comment 2739 888 BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B81 -> B82 falseDestination: B81 -> B83  <||@
  Comment 2745 block B83 null  <||@
  Comment 2745 906 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2745 908 r9|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 2750 910 rax|DWORD = MOV [rax|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD  <||@
  Comment 2755 912 rcx|DWORD = MOV stack:64|QWORD size: DWORD  <||@
  Comment 2759 914 rdx|DWORD = IMUL (x: rcx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 2762 916 rcx|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 2766 918 rdx|DWORD = SHL (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 2768 920 rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 2772 922 r8|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 2778 924 rax|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 2780 926 (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ rax|DWORD size: DWORD  <||@
  Comment 2781 928 (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: r8|DWORD) size: DWORD state [bci:365]  <||@
  Comment 2781 [rsi:0, r14:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365, duringCall: false, rethrow: false]
              |0               |1               |2               |3  |4  |5          |6  |7  |8  |9               |10              |11         |12              |13        |14              |15         |16  |17  |18  |19  |20  |21  |22  |23              |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |rsi|QWORD[.]    |-               |stack:64|QWORD  |-  |-  |rbp|DWORD  |-  |-  |-  |stack:84|DWORD  |stack:76|DWORD  |r13|DWORD  |stack:72|DWORD  |r9|DWORD  |stack:68|DWORD  |r13|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:88|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-  
     stack:   |stack:52|DWORD  |stack:92|DWORD  |                |   |   |           |   |   |   |                |                |           |                |          |                |           |    |    |    |    |    |    |    |                |    |    |    |    |    |    |    |    |     <||@
  Comment 2781 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2784 930 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 2786 932 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B85  <||@
  Comment 2792 block B85 null  <||@
  Comment 2792 950 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2792 952 rcx|DWORD = SHL rdx|DWORD y: 3 size: DWORD  <||@
  Comment 2797 954 rdx|DWORD = SHL rdx|DWORD size: DWORD  <||@
  Comment 2799 956 rcx|DWORD = ADD (x: rcx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 2801 958 CMP (x: r10|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 2804 960 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B87  <||@
  Comment 2810 block B87 null  <||@
  Comment 2810 978 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2810 980 rdx|DWORD = SHL r8|DWORD y: 3 size: DWORD  <||@
  Comment 2816 982 rbx|DWORD = SHL r8|DWORD size: DWORD  <||@
  Comment 2821 984 rbx|DWORD = ADD (x: rdx|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 2823 986 rdx|DWORD = ADD (x: rcx|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 2828 988 CMP (x: rdx|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 2830 990 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B87 -> B88 falseDestination: B87 -> B89  <||@
  Comment 2836 block B89 null  <||@
  Comment 2836 1008 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2836 1010 rax|DWORD = LEA [rax|DWORD + 48] size: DWORD  <||@
  Comment 2839 1012 MOV (x: [r14|DWORD[.] * 8 + 16], y: rax|DWORD) size: WORD  <||@
  Comment 2848 1014 rax|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 2850 1016 (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ rax|DWORD size: DWORD  <||@
  Comment 2851 1018 (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: r8|DWORD) size: DWORD state [bci:552]  <||@
  Comment 2851 [rsi:0, r14:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 552, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5          |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17          |18          |19          |20  |21  |22  |23  |24  |25         |26        |27         |28         |29  |30  |31  |32 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |rbp|DWORD  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |int[1|0x1]  |int[0|0x0]  |int[0|0x0]  |-   |-   |-   |-   |-   |rcx|DWORD  |r8|DWORD  |r10|DWORD  |rbx|DWORD  |-   |-   |-   |-    <||@
  Comment 2851 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2854 1020 r9|DWORD = SHL rdx|DWORD y: 3 size: DWORD  <||@
  Comment 2861 1022 rdx|DWORD = SHL rdx|DWORD size: DWORD  <||@
  Comment 2863 1024 r9|DWORD = ADD (x: r9|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 2866 1026 CMP (x: r11|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 2869 1028 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B89 -> B90 falseDestination: B89 -> B95  <||@
  Comment 2875 block B90 null  <||@
  Comment 2875 1030 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2875 1032 r11|DWORD = ADD (x: r11|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 2878 1034 CMP (x: r11|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 2881 1036 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B90 -> B91 falseDestination: B90 -> B92  <||@
  Comment 2887 block B92 null  <||@
  Comment 2887 1048 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2887 1050 TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 2890 1052 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B92 -> B93 falseDestination: B92 -> B94  <||@
  Comment 2896 block B94 null  <||@
  Comment 2896 1064 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2896 1066 r10|DWORD = LEA [rax|DWORD + 48] size: DWORD  <||@
  Comment 2900 1068 MOV (x: [r14|DWORD[.] * 8 + 18], y: r10|DWORD) size: WORD  <||@
  Comment 2909 1070 r9|DWORD = SHL r9|DWORD size: DWORD  <||@
  Comment 2912 1072 r9|DWORD = SUB (x: r9|DWORD, ~y: rbx|DWORD) size: DWORD  <||@
  Comment 2915 1074 rcx|QWORD = MOVSXD r9|DWORD size: QWORD  <||@
  Comment 2918 1076 r9|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2924 1078 r8|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2930 1080 r11|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 2936 1082 r10|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 2941 1084 rbp|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2944 1086 JUMP ~[] destination: B94 -> B168  <||@
  Comment 2949 block B7 null  <||@
  Comment 2949 64 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2949 66 rax|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 2951 68 JUMP ~[] destination: B7 -> B28  <||@
  Comment 2956 block B13 null  <||@
  Comment 2956 102 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2956 104 rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 2960 106 r11|DWORD = SUB (x: rdx|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 2966 108 r11|DWORD = DEC r11|DWORD size: DWORD  <||@
  Comment 2969 110 CMP r11|DWORD y: 2 size: DWORD  <||@
  Comment 2973 112 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15  <||@
  Comment 2979 block B15 null  <||@
  Comment 2979 120 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2979 122 r9|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:sun.misc.FloatingDecimal$BinaryToASCIIBuffer]  <||@
  Comment 2979 {Object[Class:sun.misc.FloatingDecimal$BinaryToASCIIBuffer]}  <||@
  Comment 2989 124 r9|DWORD[.] = MOV [r9|QWORD[.] + 104] size: DWORD  <||@
  Comment 2993 126 rcx|DWORD = MOV [r9|DWORD[.] * 8 + 12] size: DWORD state [bci:10, 74]  <||@
  Comment 2993 [rsi:0, r9:0]at java.lang.Math.max(Math.java:1252) [bci: 10, duringCall: false, rethrow: false]
              |0           |1 
     locals:  |-           |- 
     stack:   |int[0|0x0]  |  
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 74, duringCall: true, rethrow: false]
              |0             |1          |2          |3  |4         |5          |6          |7          |8  |9  |10  |11  |12  |13  |14  |15  |16  |17  |18  |19  |20  |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |r10|QWORD  |-  |r8|DWORD  |rbp|DWORD  |rbx|DWORD  |rdi|DWORD  |-  |-  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-    <||@
  Comment 2993 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 3001 128 CMP (x: rcx|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 3004 130 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B19  <||@
  Comment 3010 block B19 null  <||@
  Comment 3010 154 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3010 156 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 3016 158 JUMP ~[] destination: B19 -> B21  <||@
  Comment 3021 block B118 null  <||@
  Comment 3021 1416 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3021 1418 rdi|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 3026 1420 r9|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 3032 1422 JUMP ~[] destination: B118 -> B119  <||@
  Comment 3037 block B3 null  <||@
  Comment 3037 42 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3037 44 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 3042 46 JUMP ~[] destination: B3 -> B28  <||@
  Comment 3047 block B14 null  <||@
  Comment 3047 114 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3047 116 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 3053 118 JUMP ~[] destination: B14 -> B21  <||@
  Comment 3058 block B16 null  <||@
  Comment 3058 132 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3058 134 CMP (x: rcx|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 3061 136 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B18  <||@
  Comment 3067 block B17 null  <||@
  Comment 3067 138 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3067 140 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@40447647 encoding: base: 0 shift: 3  <||@
  Comment 3071 142 r8|DWORD = MOV [r9|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD  <||@
  Comment 3076 144 JUMP ~[] destination: B17 -> B21  <||@
  Comment 3081 block B27 null  <||@
  Comment 3081 218 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3081 220 rax|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 3083 222 JUMP ~[] destination: B27 -> B28  <||@
  Comment 3088 block B59 null  <||@
  Comment 3088 584 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3088 586 stack:68|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 3092 588 stack:72|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 3096 590 stack:76|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 3101 592 stack:80|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 3106 594 r9|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 3109 596 r13|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 3112 598 stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 3117 600 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[27]{0, 3, 5, 7, 10, ...}]  <||@
  Comment 3117 {Object[int[27]{0, 3, 5, 7, 10, ...}]}  <||@
  Comment 3127 602 rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 3131 604 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3136 606 r10|DWORD = ADD (x: stack:48|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 3144 608 CMP stack:80|DWORD y: 27 size: DWORD  <||@
  Comment 3149 614 rbx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 3152 610 BRANCH trueDestinationProbability: 0.9999471523948773 condition: < trueDestination: B59 -> B60 falseDestination: B59 -> B67  <||@
  Comment 3158 block B60 null  <||@
  Comment 3158 612 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3158 616 rdx|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 3162 618 r10|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 3167 626 rcx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 3170 628 rsi|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 3174 630 r13|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 3177 632 r11|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 3182 634 r9|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 3187 636 JUMP ~[] destination: B60 -> B61  <||@
  Comment 3192 block B151 null  <||@
  Comment 3192 1884 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3192 1886 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 3198 1888 rdx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 3203 1890 JUMP ~[] destination: B151 -> B152  <||@
  Comment 3208 block B58 null  <||@
  Comment 3208 562 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3208 564 stack:68|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 3212 566 stack:72|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 3216 568 stack:76|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 3221 570 stack:80|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 3226 572 r9|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 3229 574 r13|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 3232 576 stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 3237 578 rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 3241 580 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3246 582 JUMP ~[] destination: B58 -> B67  <||@
  Comment 3246 block B67 null  <||@
  Comment 3246 698 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3246 700 CMP rbx|DWORD y: 64 size: DWORD  <||@
  Comment 3249 702 BRANCH trueDestinationProbability: 0.9867185711014427 condition: < trueDestination: B67 -> B68 falseDestination: B67 -> B136  <||@
  Comment 3255 block B68 null  <||@
  Comment 3255 704 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3255 706 r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 3260 708 r10|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 3265 716 r11|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 3270 718 rsi|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 3274 720 r13|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 3277 722 r9|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 3282 724 JUMP ~[] destination: B68 -> B69  <||@
  Comment 3287 block B136 null  <||@
  Comment 3287 1654 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3287 1656 r10|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 3292 1658 stack:48|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 3297 1660 r13|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 3300 1662 JUMP ~[] destination: B136 -> B137  <||@
  Comment 3305 block B97 null  <||@
  Comment 3305 1106 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3305 1108 r10|DWORD = MOVE input: int[-278803|0xfffffffffffbbeed]  <||@
  Comment 3311 1112 rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 3315 1114 r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 3320 1116 rcx|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 3324 1118 r13|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 3329 1120 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 3332 1122 JUMP ~[] destination: B97 -> B134  <||@
  Comment 3332 block B134 null  <||@
  Comment 3332 1630 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3332 1632 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 3339 1634 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3346 1636 DEOPT info [bci:365]  <||@
  Comment 3346 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3351 [r14:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365, duringCall: false, rethrow: false]
              |0             |1         |2               |3  |4  |5          |6  |7  |8  |9               |10              |11         |12              |13         |14              |15         |16  |17  |18  |19  |20  |21  |22  |23         |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |r14|QWORD[.]  |-         |stack:64|QWORD  |-  |-  |rbp|DWORD  |-  |-  |-  |stack:84|DWORD  |stack:76|DWORD  |r13|DWORD  |stack:72|DWORD  |rcx|DWORD  |stack:68|DWORD  |r13|DWORD  |-   |-   |-   |-   |-   |-   |-   |rbx|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-  
     stack:   |rdx|DWORD     |r8|DWORD  |                |   |   |           |   |   |   |                |                |           |                |           |                |           |    |    |    |    |    |    |    |           |    |    |    |    |    |    |    |    |     <||@
  Comment 3352 block B93 null  <||@
  Comment 3352 1054 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3352 1056 r11|DWORD = MOVE input: int[-282387|0xfffffffffffbb0ed]  <||@
  Comment 3358 1062 JUMP ~[] destination: B93 -> B96  <||@
  Comment 3358 block B96 null  <||@
  Comment 3358 1098 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3358 1042 r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 3363 1044 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 3366 1100 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 3373 1102 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3380 1104 DEOPT info [bci:552]  <||@
  Comment 3380 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3385 [r14:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 552, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5          |6  |7  |8  |9         |10  |11  |12  |13  |14  |15  |16  |17          |18          |19          |20  |21  |22  |23  |24  |25         |26        |27         |28         |29  |30  |31  |32 
     locals:  |r14|QWORD[.]  |-  |-  |-  |-  |rbp|DWORD  |-  |-  |-  |r9|DWORD  |-   |-   |-   |-   |-   |-   |-   |int[1|0x1]  |int[0|0x0]  |int[0|0x0]  |-   |-   |-   |-   |-   |rcx|DWORD  |r8|DWORD  |r10|DWORD  |rbx|DWORD  |-   |-   |-   |-    <||@
  Comment 3386 block B91 null  <||@
  Comment 3386 1038 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3386 1040 r11|DWORD = MOVE input: int[-279571|0xfffffffffffbbbed]  <||@
  Comment 3392 1046 JUMP ~[] destination: B91 -> B96  <||@
  Comment 3394 block B84 null  <||@
  Comment 3394 934 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3394 936 r10|DWORD = MOVE input: int[-273427|0xfffffffffffbd3ed]  <||@
  Comment 3400 938 rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 3404 940 rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 3408 942 r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 3413 944 rcx|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 3416 946 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 3419 948 JUMP ~[] destination: B84 -> B134  <||@
  Comment 3421 block B77 null  <||@
  Comment 3421 816 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3421 818 r10|DWORD = MOVE input: int[-278547|0xfffffffffffbbfed]  <||@
  Comment 3427 822 rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 3431 824 r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 3436 826 rcx|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 3440 828 r13|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 3445 830 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 3448 832 JUMP ~[] destination: B77 -> B134  <||@
  Comment 3450 block B80 null  <||@
  Comment 3450 868 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3450 870 r10|DWORD = MOVE input: int[-279059|0xfffffffffffbbded]  <||@
  Comment 3456 872 rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 3460 874 rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 3464 876 r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 3469 878 rcx|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 3473 880 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 3476 882 JUMP ~[] destination: B80 -> B134  <||@
  Comment 3481 block B75 null  <||@
  Comment 3481 792 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3481 794 r10|DWORD = MOVE input: int[-278291|0xfffffffffffbc0ed]  <||@
  Comment 3487 798 rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 3491 800 r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 3496 802 rcx|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 3500 804 r13|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 3505 806 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 3508 808 JUMP ~[] destination: B75 -> B134  <||@
  Comment 3513 block B98 null  <||@
  Comment 3513 1124 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3513 1126 r10|DWORD = MOVE input: int[-270875|0xfffffffffffbdde5]  <||@
  Comment 3519 1130 rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 3523 1132 r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 3528 1134 rcx|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 3532 1136 r13|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 3537 1138 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 3540 1140 JUMP ~[] destination: B98 -> B134  <||@
  Comment 3545 block B99 null  <||@
  Comment 3545 1142 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3545 1144 r10|DWORD = MOVE input: int[-268827|0xfffffffffffbe5e5]  <||@
  Comment 3551 1148 rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 3555 1150 r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 3560 1152 rcx|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 3564 1154 r13|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 3569 1156 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 3572 1158 JUMP ~[] destination: B99 -> B134  <||@
  Comment 3577 block B100 null  <||@
  Comment 3577 1160 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3577 1162 r10|DWORD = MOVE input: int[-268051|0xfffffffffffbe8ed]  <||@
  Comment 3583 1166 rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 3587 1168 r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 3592 1170 rcx|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 3596 1172 r13|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 3601 1174 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 3604 1176 JUMP ~[] destination: B100 -> B134  <||@
  Comment 3609 block B65 null  <||@
  Comment 3609 674 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3609 676 rcx|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 3612 678 r13|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 3615 680 stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 3620 682 rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 3624 684 r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3629 686 MOV [r15|QWORD + 668] y: -266267 size: DWORD  <||@
  Comment 3640 688 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3647 690 DEOPT info [bci:330]  <||@
  Comment 3647 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3652 [r14:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:591) [bci: 330, duringCall: false, rethrow: false]
              |0             |1          |2          |3  |4  |5          |6  |7  |8  |9               |10        |11         |12         |13         |14         |15         |16  |17  |18  |19  |20  |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |r14|QWORD[.]  |-          |r10|QWORD  |-  |-  |rbp|DWORD  |-  |-  |-  |stack:84|DWORD  |r9|DWORD  |r13|DWORD  |rax|DWORD  |rcx|DWORD  |rsi|DWORD  |r13|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-  
     stack:   |r8|DWORD      |rdx|DWORD  |           |   |   |           |   |   |   |                |          |           |           |           |           |           |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |     <||@
  Comment 3653 block B120 null  <||@
  Comment 3653 1430 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3653 1432 r14|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 3656 1434 rdx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@464852764]  <||@
  Comment 3656 {Object[d.a@464852764]}  <||@
  Comment 3666 1436 MOV [r15|QWORD + 668] y: -330763 size: DWORD  <||@
  Comment 3677 1438 MOV (x: [r15|QWORD + 680], y: rdx|QWORD[.]) size: QWORD  <||@
  Comment 3684 1440 DEOPT info [bci:914]  <||@
  Comment 3684 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3689 [r14:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6  |7  |8  |9          |10  |11  |12  |13  |14  |15  |16  |17         |18        |19         |20  |21  |22  |23  |24  |25        |26  |27         |28  |29         |30  |31         |32 
     locals:  |r14|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |r11|DWORD  |-   |-   |-   |-   |-   |-   |-   |r10|DWORD  |r9|DWORD  |rdi|DWORD  |-   |-   |-   |-   |-   |r8|QWORD  |-   |r13|QWORD  |-   |rcx|QWORD  |-   |rbx|QWORD  |-    <||@
  Comment 3690 block B82 null  <||@
  Comment 3690 890 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3690 892 r10|DWORD = MOVE input: int[-320027|0xfffffffffffb1de5]  <||@
  Comment 3696 894 rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 3700 896 rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 3704 898 r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 3709 900 rcx|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 3713 902 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 3716 904 JUMP ~[] destination: B82 -> B134  <||@
  Comment 3721 block B173 null  <||@
  Comment 3721 2190 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3721 2192 r14|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 3724 2194 MOV [r15|QWORD + 668] y: -316947 size: DWORD  <||@
  Comment 3735 2196 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3742 2198 DEOPT info [bci:1445]  <||@
  Comment 3742 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3747 [r14:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:766) [bci: 1445, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6  |7  |8  |9          |10  |11  |12  |13  |14  |15  |16  |17         |18        |19        |20           |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |r14|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |r10|DWORD  |-   |-   |-   |-   |-   |-   |-   |r11|DWORD  |r8|DWORD  |r9|DWORD  |long[0|0x0]  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-    <||@
  Comment 3748 block B22 null  <||@
  Comment 3748 182 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3748 184 r11|DWORD = MOVE input: int[-258579|0xfffffffffffc0ded]  <||@
  Comment 3754 186 rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 3758 190 JUMP ~[] destination: B22 -> B23  <||@
  Comment 3758 block B23 null  <||@
  Comment 3758 192 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3758 188 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 3761 194 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 3768 196 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3775 198 DEOPT info [bci:10, 74]  <||@
  Comment 3775 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3780 [r14:0]at java.lang.Math.max(Math.java:1252) [bci: 10, duringCall: false, rethrow: false]
              |0           |1 
     locals:  |-           |- 
     stack:   |int[0|0x0]  |  
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 74, duringCall: true, rethrow: false]
              |0             |1          |2          |3  |4         |5          |6          |7          |8  |9  |10  |11  |12  |13  |14  |15  |16  |17  |18  |19  |20  |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |r14|QWORD[.]  |rdx|DWORD  |r10|QWORD  |-  |r8|DWORD  |rbp|DWORD  |rbx|DWORD  |rdi|DWORD  |-  |-  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-    <||@
  Comment 3781 block B133 null  <||@
  Comment 3781 1608 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3781 1610 stack:68|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 3785 1612 stack:72|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 3789 1614 stack:76|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 3794 1616 rcx|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 3797 1618 r13|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 3800 1620 stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 3805 1622 r14|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 3808 1624 r10|DWORD = MOVE input: int[-282651|0xfffffffffffbafe5]  <||@
  Comment 3814 1626 rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 3818 1628 JUMP ~[] destination: B133 -> B134  <||@
  Comment 3823 block B30 null  <||@
  Comment 3823 284 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3823 286 r11|DWORD = MOVE input: int[-317459|0xfffffffffffb27ed]  <||@
  Comment 3829 288 rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 3833 290 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 3836 292 JUMP ~[] destination: B30 -> B178  <||@
  Comment 3836 block B178 null  <||@
  Comment 3836 2228 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3836 2230 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 3843 2232 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3850 2234 DEOPT info [bci:174]  <||@
  Comment 3850 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3855 [r14:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174, duringCall: false, rethrow: false]
              |0             |1          |2          |3  |4         |5          |6          |7          |8          |9  |10  |11  |12  |13  |14  |15  |16  |17  |18  |19  |20  |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |r14|QWORD[.]  |rdx|DWORD  |r10|QWORD  |-  |r8|DWORD  |rbp|DWORD  |rbx|DWORD  |rdi|DWORD  |rax|DWORD  |-  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-    <||@
  Comment 3856 block B157 null  <||@
  Comment 3856 1998 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3856 2000 r9|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 3861 2002 r8|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 3866 2004 r11|DWORD = MOVE stack:80|DWORD moveKind: DWORD  <||@
  Comment 3871 2006 rcx|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 3875 2008 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 3878 2010 MOV [r15|QWORD + 668] y: -306715 size: DWORD  <||@
  Comment 3889 2012 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3896 2014 DEOPT info [bci:1343]  <||@
  Comment 3896 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3901 [r8:0, r14:0, stack:8, stack:24, stack:64]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1343, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6  |7  |8  |9          |10  |11  |12  |13  |14  |15  |16  |17         |18        |19  |20  |21  |22         |23  |24  |25                  |26  |27                 |28           |29                  |30  |31  |32 
     locals:  |r14|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |rcx|DWORD  |-   |-   |-   |-   |-   |-   |-   |r10|DWORD  |r9|DWORD  |-   |-   |-   |r11|DWORD  |-   |-   |stack:104|QWORD[.]  |-   |stack:64|QWORD[.]  |r8|QWORD[.]  |stack:120|QWORD[.]  |-   |-   |-  
     stack:   |rax|DWORD     |   |   |   |   |   |   |   |   |           |    |    |    |    |    |    |    |           |          |    |    |    |           |    |    |                    |    |                   |             |                    |    |    |     <||@
  Comment 3902 block B166 null  <||@
  Comment 3902 2116 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3902 2118 r10|QWORD = MOVE stack:104|QWORD moveKind: QWORD  <||@
  Comment 3907 2120 rcx|DWORD = MOVE stack:80|DWORD moveKind: DWORD  <||@
  Comment 3911 2122 r9|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 3916 2124 r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3921 2126 MOV [r15|QWORD + 668] y: -331283 size: DWORD  <||@
  Comment 3932 2128 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3939 2130 DEOPT info [bci:1415]  <||@
  Comment 3939 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3944 [r14:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1415, duringCall: false, rethrow: false]
              |0             |1           |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17              |18        |19         |20         |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |r14|QWORD[.]  |-           |-  |-  |-  |-  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:92|DWORD  |r9|DWORD  |rcx|DWORD  |r10|QWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-  
     stack:   |r14|QWORD[.]  |int[0|0x0]  |   |   |   |   |   |   |   |                |    |    |    |    |    |    |    |                |          |           |           |    |    |    |    |    |    |    |    |    |    |    |     <||@
  Comment 3945 block B143 null  <||@
  Comment 3945 1800 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3945 1802 rcx|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 3949 1804 r8|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD  <||@
  Comment 3954 1806 rbx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 3959 1808 r9|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 3964 1810 rax|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 3969 1812 rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 3973 1814 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 3976 1816 MOV [r15|QWORD + 668] y: -322587 size: DWORD  <||@
  Comment 3987 1818 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3994 1820 DEOPT info [bci:1227]  <||@
  Comment 3994 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3999 [rax:0, rbx:0, r8:0, r9:0, r14:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1227, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5          |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17          |18         |19         |20  |21  |22         |23  |24  |25            |26  |27           |28            |29           |30  |31  |32 
     locals:  |r14|QWORD[.]  |-  |-  |-  |-  |rbp|DWORD  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |int[0|0x0]  |rcx|DWORD  |r11|DWORD  |-   |-   |r10|DWORD  |-   |-   |rax|QWORD[.]  |-   |r9|QWORD[.]  |rbx|QWORD[.]  |r8|QWORD[.]  |-   |-   |-    <||@
  Comment 4000 block B128 null  <||@
  Comment 4000 1548 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4000 1550 r14|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 4003 1552 MOV [r15|QWORD + 668] y: -333083 size: DWORD  <||@
  Comment 4014 1554 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4021 1556 DEOPT info [bci:914]  <||@
  Comment 4021 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4026 [r14:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6  |7  |8  |9          |10  |11  |12  |13  |14  |15  |16  |17         |18          |19          |20  |21  |22  |23  |24  |25         |26  |27         |28  |29         |30  |31         |32 
     locals:  |r14|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |r11|DWORD  |-   |-   |-   |-   |-   |-   |-   |r10|DWORD  |int[0|0x0]  |int[0|0x0]  |-   |-   |-   |-   |-   |rcx|QWORD  |-   |r13|QWORD  |-   |rdi|QWORD  |-   |rbx|QWORD  |-    <||@
  Comment 4027 block B177 null  <||@
  Comment 4027 2218 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4027 2220 r11|DWORD = MOVE input: int[-317715|0xfffffffffffb26ed]  <||@
  Comment 4033 2222 rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 4037 2224 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 4040 2226 JUMP ~[] destination: B177 -> B178  <||@
  Comment 4045 block B115 null  <||@
  Comment 4045 1394 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4045 1396 r14|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 4048 1398 rbp|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 4050 1400 MOV [r15|QWORD + 668] y: -298003 size: DWORD  <||@
  Comment 4061 1402 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4068 1404 DEOPT info [bci:889]  <||@
  Comment 4068 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4073 [r14:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 889, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5          |6  |7  |8  |9          |10  |11  |12  |13  |14  |15  |16  |17         |18        |19         |20  |21  |22  |23  |24  |25        |26  |27         |28  |29         |30  |31         |32 
     locals:  |r14|QWORD[.]  |-  |-  |-  |-  |rbp|DWORD  |-  |-  |-  |r11|DWORD  |-   |-   |-   |-   |-   |-   |-   |r10|DWORD  |r9|DWORD  |rdi|DWORD  |-   |-   |-   |-   |-   |r8|QWORD  |-   |r13|QWORD  |-   |rcx|QWORD  |-   |rbx|QWORD  |-    <||@
  Comment 4074 block B95 null  <||@
  Comment 4074 1088 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4074 1090 r11|DWORD = MOVE input: int[-279315|0xfffffffffffbbced]  <||@
  Comment 4080 1096 JUMP ~[] destination: B95 -> B96  <||@
  Comment 4085 block B132 null  <||@
  Comment 4085 1586 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4085 1588 stack:68|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 4089 1590 stack:72|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 4093 1592 stack:76|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 4098 1594 rcx|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 4101 1596 r13|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 4104 1598 stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 4109 1600 r14|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 4112 1602 r10|DWORD = MOVE input: int[-284699|0xfffffffffffba7e5]  <||@
  Comment 4118 1604 rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 4122 1606 JUMP ~[] destination: B132 -> B134  <||@
  Comment 4127 block B86 null  <||@
  Comment 4127 962 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4127 964 r10|DWORD = MOVE input: int[-272915|0xfffffffffffbd5ed]  <||@
  Comment 4133 966 rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 4137 968 rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 4141 970 r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 4146 972 rcx|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 4149 974 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 4152 976 JUMP ~[] destination: B86 -> B134  <||@
  Comment 4157 block B105 null  <||@
  Comment 4157 1264 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4157 1266 rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 4161 1268 rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 4165 1270 r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 4170 1272 stack:68|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 4174 1274 stack:72|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 4179 1276 stack:76|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 4184 1278 rcx|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 4188 1280 r13|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 4191 1282 stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 4196 1284 r14|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 4199 1286 r10|DWORD = MOVE input: int[-294419|0xfffffffffffb81ed]  <||@
  Comment 4205 1288 rbp|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 4207 1290 JUMP ~[] destination: B105 -> B134  <||@
  Comment 4212 block B36 null  <||@
  Comment 4212 348 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4212 350 r11|DWORD = MOVE input: int[-317971|0xfffffffffffb25ed]  <||@
  Comment 4218 352 rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 4222 354 r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 4227 356 JUMP ~[] destination: B36 -> B178  <||@
  Comment 4232 block B88 null  <||@
  Comment 4232 992 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4232 994 r10|DWORD = MOVE input: int[-273171|0xfffffffffffbd4ed]  <||@
  Comment 4238 996 rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 4242 998 rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 4246 1000 r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 4251 1002 rcx|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 4254 1004 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 4257 1006 JUMP ~[] destination: B88 -> B134  <||@
  Comment 4262 block B110 null  <||@
  Comment 4262 1322 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4262 1324 rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 4266 1326 rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 4270 1328 r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 4275 1330 stack:68|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 4279 1332 stack:72|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 4284 1334 stack:76|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 4289 1336 rcx|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 4293 1338 r13|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 4296 1340 stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 4301 1342 r14|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 4304 1344 r10|DWORD = MOVE input: int[-322075|0xfffffffffffb15e5]  <||@
  Comment 4310 1346 rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 4314 1348 JUMP ~[] destination: B110 -> B134  <||@
  Comment 4319 block B18 null  <||@
  Comment 4319 146 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4319 148 r11|DWORD = MOVE input: int[-262427|0xfffffffffffbfee5]  <||@
  Comment 4325 152 JUMP ~[] destination: B18 -> B23  <||@
  Comment 4330 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 4330 4  <||@
  Comment 4336 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 4336 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-9627[sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)]"
  method "HotSpotCompilation-9627[sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)]"
  date 1527005210197
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 107bd1ce0   <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|DWORD, rcx|QWORD, r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@5692047b slotKind: QWORD  <||@
  Comment 48 6 r10|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 51 8 stack:28|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 56 10 MOVB (x: [rsi|QWORD[.] + 26], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 60 12 MOVB (x: [rsi|QWORD[.] + 25], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 64 14 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[27]{0, 3, 5, 7, 10, ...}]  <||@
  Comment 64 {Object[int[27]{0, 3, 5, 7, 10, ...}]}  <||@
  Comment 74 16 rbx|DWORD = TZCNT r10|QWORD size: QWORD  <||@
  Comment 79 18 rcx|DWORD = MOVE input: int[53|0x35]  <||@
  Comment 84 20 rdi|DWORD = SUB (x: rcx|DWORD, ~y: rbx|DWORD) size: DWORD  <||@
  Comment 88 22 rcx|DWORD = SUB (x: rdi|DWORD, ~y: rdx|DWORD) size: DWORD  <||@
  Comment 92 24 rcx|DWORD = DEC rcx|DWORD size: DWORD  <||@
  Comment 94 26 CMP rcx|DWORD y: 1 size: DWORD  <||@
  Comment 97 28 BRANCH trueDestinationProbability: 0.7309313881269885 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B4  <||@
  Comment 103 block B1 null  <||@
  Comment 103 30 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 103 32 CMP rdx|DWORD y: 63 size: DWORD  <||@
  Comment 106 34 BRANCH trueDestinationProbability: 0.9998165784832451 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3  <||@
  Comment 112 block B2 null  <||@
  Comment 112 36 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 112 38 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 117 40 JUMP ~[] destination: B2 -> B6  <||@
  Comment 117 block B6 null  <||@
  Comment 117 58 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 117 60 CMP rdx|DWORD y: -21 size: DWORD  <||@
  Comment 120 62 BRANCH trueDestinationProbability: 3.66905155017428E-4 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8  <||@
  Comment 126 block B8 null  <||@
  Comment 126 70 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 126 72 CMP rcx|DWORD y: 27 size: DWORD  <||@
  Comment 129 74 BRANCH trueDestinationProbability: 0.5322359783728843 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B26  <||@
  Comment 135 block B9 null  <||@
  Comment 135 76 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 135 78 rax|DWORD = ADD (x: rdi|DWORD, ~y: [r11|QWORD[.] + rcx|DWORD * 4 + 16]) size: DWORD  <||@
  Comment 142 80 CMP rax|DWORD y: 64 size: DWORD  <||@
  Comment 145 82 BRANCH trueDestinationProbability: 0.9985678292003713 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B25  <||@
  Comment 151 block B10 null  <||@
  Comment 151 84 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 151 86 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 153 88 BRANCH trueDestinationProbability: 0.37470452312023583 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B24  <||@
  Comment 159 block B24 null  <||@
  Comment 159 200 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 159 202 rax|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 161 204 JUMP ~[] destination: B24 -> B28  <||@
  Comment 161 block B28 null  <||@
  Comment 161 224 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 161 226 stack:40|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 166 228 rbp|QWORD = MOVE input: long[4503599627370495|0xfffffffffffff]  <||@
  Comment 176 230 rcx|QWORD = AND (x: r10|QWORD, y: rbp|QWORD) size: QWORD  <||@
  Comment 182 232 r13|QWORD = MOVE input: long[4607182418800017408|0x3ff0000000000000]  <||@
  Comment 192 234 rcx|QWORD = OR (x: rcx|QWORD, y: r13|QWORD) size: QWORD  <||@
  Comment 195 236 xmm0|DOUBLE = VMOVQ rcx|QWORD nZ: XMM  <||@
  Comment 200 238 xmm1|DOUBLE = VMOVE input: double[1.5|0x3ff8000000000000]  <||@
  Comment 200 {DataSection[0x0]}  <||@
  Comment 209 240 xmm0|DOUBLE = VSUBSD (x: xmm0|DOUBLE, y: xmm1|DOUBLE) nZ: XMM  <||@
  Comment 213 242 xmm1|DOUBLE = VMOVE input: double[0.289529654|0x3fd287a762c9bd93]  <||@
  Comment 213 {DataSection[0x8]}  <||@
  Comment 222 244 xmm0|DOUBLE = VMULSD (x: xmm0|DOUBLE, y: xmm1|DOUBLE) nZ: XMM  <||@
  Comment 226 246 xmm1|DOUBLE = VMOVE input: double[0.176091259|0x3fc68a288b421b8c]  <||@
  Comment 226 {DataSection[0x10]}  <||@
  Comment 235 248 xmm0|DOUBLE = VADDSD (x: xmm0|DOUBLE, y: xmm1|DOUBLE) nZ: XMM  <||@
  Comment 239 250 xmm1|DOUBLE = VCVTSI2SD rdx|DWORD  <||@
  Comment 247 252 xmm2|DOUBLE = VMOVE input: double[0.301029995663981|0x3fd34413509f79fb]  <||@
  Comment 247 {DataSection[0x18]}  <||@
  Comment 256 254 xmm1|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm2|DOUBLE) nZ: XMM  <||@
  Comment 260 256 xmm0|DOUBLE = VADDSD (x: xmm0|DOUBLE, y: xmm1|DOUBLE) nZ: XMM  <||@
  Comment 264 258 r13|QWORD = VMOVQ xmm0|DOUBLE  <||@
  Comment 269 260 r14|QWORD = MOVE input: long[-9223372036854775808|0x8000000000000000]  <||@
  Comment 279 262 rcx|QWORD = MOVE input: long[9218868437227405312|0x7ff0000000000000]  <||@
  Comment 289 264 rcx|QWORD = AND (x: r13|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 292 266 rcx|QWORD = SHR rcx|QWORD y: 52 size: QWORD  <||@
  Comment 296 268 rcx|DWORD = MOV rcx|QWORD size: DWORD  <||@
  Comment 298 270 r9|DWORD = LEA [rcx|DWORD - 1023] size: DWORD  <||@
  Comment 305 272 TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 308 274 BRANCH trueDestinationProbability: 0.8017068096060938 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B32  <||@
  Comment 314 block B29 null  <||@
  Comment 314 276 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 314 278 rcx|QWORD = MOVE input: long[9223372036854775807|0x7fffffffffffffff]  <||@
  Comment 324 280 TEST (x: rcx|QWORD, y: r13|QWORD) size: QWORD  <||@
  Comment 327 282 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31  <||@
  Comment 333 block B31 null  <||@
  Comment 333 294 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 333 296 TEST (x: r14|QWORD, y: r13|QWORD) size: QWORD  <||@
  Comment 336 298 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 341 300 r9|DWORD = CMOVE (falseValue: int[-1|0xffffffffffffffff], ~trueValue: rcx|DWORD) condition: =  <||@
  Comment 351 302 r11|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 354 304 JUMP ~[] destination: B31 -> B38  <||@
  Comment 354 block B38 null  <||@
  Comment 354 368 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 354 370 rcx|DWORD = NEG r11|DWORD size: DWORD  <||@
  Comment 359 372 CMP rcx|DWORD y: 1 size: DWORD  <||@
  Comment 362 374 BRANCH trueDestinationProbability: 0.7309313881269885 condition: < trueDestination: B38 -> B39 falseDestination: B38 -> B40  <||@
  Comment 368 block B39 null  <||@
  Comment 368 376 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 368 378 stack:44|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 376 380 stack:48|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 384 382 rsi|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 386 384 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 391 386 JUMP ~[] destination: B39 -> B41  <||@
  Comment 391 block B41 null  <||@
  Comment 391 408 [] = LABEL numbPhis: 4 align: false label: ?  <||@
  Comment 391 410 CMP r11|DWORD y: 1 size: DWORD  <||@
  Comment 395 412 BRANCH trueDestinationProbability: 0.7309313881269885 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B43  <||@
  Comment 401 block B42 null  <||@
  Comment 401 414 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 401 416 stack:52|DWORD = MOVE input: int[3|0x3]  <||@
  Comment 409 418 r14|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 415 420 r13|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 421 422 JUMP ~[] destination: B42 -> B44  <||@
  Comment 421 block B44 null  <||@
  Comment 421 442 [] = LABEL numbPhis: 4 align: false label: ?  <||@
  Comment 421 444 stack:56|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 426 446 rsi|DWORD = ADD (x: rsi|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 428 448 rdx|DWORD = MOVE input: int[52|0x34]  <||@
  Comment 433 450 rdx|DWORD = SUB (x: rdx|DWORD, ~y: rbx|DWORD) size: DWORD  <||@
  Comment 435 452 r9|DWORD = SUB (x: rsi|DWORD, ~y: rdx|DWORD) size: DWORD  <||@
  Comment 441 454 rsi|DWORD = SUB (x: rsi|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 444 456 CMP (x: r9|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 447 458 BRANCH trueDestinationProbability: 0.44744570600555483 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B48  <||@
  Comment 453 block B48 null  <||@
  Comment 453 482 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 453 484 rax|DWORD = SUB (x: rax|DWORD, ~y: r9|DWORD) size: DWORD  <||@
  Comment 456 486 rsi|DWORD = SUB (x: rsi|DWORD, ~y: r9|DWORD) size: DWORD  <||@
  Comment 459 488 CMP rdi|DWORD y: 1 size: DWORD  <||@
  Comment 462 494 r9|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 468 490 BRANCH trueDestinationProbability: 0.3620750396336093 condition: = trueDestination: B48 -> B50 falseDestination: B48 -> B52  <||@
  Comment 474 block B52 null  <||@
  Comment 474 510 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 474 512 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 476 514 BRANCH trueDestinationProbability: 0.9999471561184408 condition: < trueDestination: B52 -> B53 falseDestination: B52 -> B55  <||@
  Comment 482 block B53 null  <||@
  Comment 482 516 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 482 518 rax|DWORD = SUB (x: rax|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 484 520 r9|DWORD = SUB (x: r9|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 487 522 rsi|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 492 524 JUMP ~[] destination: B53 -> B55  <||@
  Comment 492 block B55 null  <||@
  Comment 492 530 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 492 532 r8|DWORD = ADD (x: r9|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 498 534 rdi|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 500 536 rcx|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 502 538 r10|QWORD = SHR (x: r10|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 505 540 stack:64|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 510 542 CMP rdi|DWORD y: 27 size: DWORD  <||@
  Comment 513 544 BRANCH trueDestinationProbability: 0.9999471514639044 condition: |<| trueDestination: B55 -> B56 falseDestination: B55 -> B59  <||@
  Comment 519 block B56 null  <||@
  Comment 519 546 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 519 548 rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[27]{0, 3, 5, 7, 10, ...}]  <||@
  Comment 519 {Object[int[27]{0, 3, 5, 7, 10, ...}]}  <||@
  Comment 529 550 rdx|DWORD = MOV [rcx|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD  <||@
  Comment 533 552 rbx|DWORD = ADD (x: r8|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 538 554 CMP r14|DWORD y: 27 size: DWORD  <||@
  Comment 542 556 BRANCH trueDestinationProbability: 0.9999471523948773 condition: < trueDestination: B56 -> B61 falseDestination: B56 -> B58  <||@
  Comment 548 block B61 null  <||@
  Comment 548 638 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 548 640 CMP r14|DWORD y: 27 size: DWORD  <||@
  Comment 552 642 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B61 -> B62 falseDestination: B61 -> B65  <||@
  Comment 558 block B62 null  <||@
  Comment 558 644 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 558 646 CMP rbx|DWORD y: 64 size: DWORD  <||@
  Comment 561 648 BRANCH trueDestinationProbability: 0.9867185711014427 condition: < trueDestination: B62 -> B63 falseDestination: B62 -> B64  <||@
  Comment 567 block B63 null  <||@
  Comment 567 650 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 567 652 rcx|DWORD = MOV [rcx|QWORD[.] + r14|DWORD * 4 + 16] size: DWORD  <||@
  Comment 572 654 r8|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 575 656 JUMP ~[] destination: B63 -> B69  <||@
  Comment 575 block B69 null  <||@
  Comment 575 726 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 575 728 rdx|DWORD = INC rax|DWORD size: DWORD  <||@
  Comment 579 730 rcx|DWORD = ADD (x: rdx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 584 732 CMP rcx|DWORD y: 64 size: DWORD  <||@
  Comment 587 734 BRANCH trueDestinationProbability: 0.9680978309381416 condition: < trueDestination: B69 -> B70 falseDestination: B69 -> B135  <||@
  Comment 593 block B70 null  <||@
  Comment 593 736 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 593 738 rbp|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 598 740 r14|DWORD[.] = MOV [rbp|QWORD[.] + 28] size: DWORD  <||@
  Comment 602 742 CMP rbx|DWORD y: 32 size: DWORD  <||@
  Comment 605 744 BRANCH trueDestinationProbability: 9.220839096357736E-4 condition: < trueDestination: B70 -> B71 falseDestination: B70 -> B101  <||@
  Comment 611 block B101 null  <||@
  Comment 611 1178 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 611 1180 CMP rdi|DWORD y: 27 size: DWORD  <||@
  Comment 614 1182 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B101 -> B102 falseDestination: B101 -> B133  <||@
  Comment 620 block B102 null  <||@
  Comment 620 1184 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 620 1186 CMP r13|DWORD y: 27 size: DWORD  <||@
  Comment 624 1188 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B102 -> B103 falseDestination: B102 -> B132  <||@
  Comment 630 block B103 null  <||@
  Comment 630 1190 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 630 1192 stack:52|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 634 1194 stack:88|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 638 1196 stack:92|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 643 1198 rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[long[27]{1, 5, 25, 125, 625, ...}]  <||@
  Comment 643 {Object[long[27]{1, 5, 25, 125, 625, ...}]}  <||@
  Comment 653 1200 r8|QWORD = MOV [rcx|QWORD[.] + rdi|DWORD * 8 + 16] size: QWORD  <||@
  Comment 658 1202 rcx|QWORD = MOV [rcx|QWORD[.] + r13|DWORD * 8 + 16] size: QWORD  <||@
  Comment 663 1204 rbx|QWORD = IMUL (x: r8|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 670 1206 r13|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 673 1208 rcx|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 676 1210 rbx|QWORD = SHL (x: rbx|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 679 1212 rcx|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 681 1214 r13|QWORD = SHL (x: r13|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 684 1218 rax|QWORD = MOVE rbx|QWORD moveKind: QWORD  <||@
  Comment 687 1220 (highResult: rdx|QWORD, lowResult: rax|QWORD) = CDQ rax|QWORD size: QWORD  <||@
  Comment 689 1222 (highResult: rdx|QWORD, lowResult: rax|QWORD) = IDIV (highX: rdx|QWORD, lowX: rax|QWORD, y: r13|QWORD) size: QWORD state [bci:365]  <||@
  Comment 689 [rbp:0, r14:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365, duringCall: false, rethrow: false]
              |0               |1               |2          |3  |4  |5               |6  |7  |8  |9          |10        |11         |12         |13              |14         |15         |16  |17  |18  |19  |20  |21  |22  |23              |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |rbp|QWORD[.]    |-               |r10|QWORD  |-  |-  |stack:28|DWORD  |-  |-  |-  |r11|DWORD  |r9|DWORD  |rdi|DWORD  |rcx|DWORD  |stack:56|DWORD  |rsi|DWORD  |rdi|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:88|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-  
     stack:   |stack:52|DWORD  |stack:92|DWORD  |           |   |   |                |   |   |   |           |          |           |           |                |           |           |    |    |    |    |    |    |    |                |    |    |    |    |    |    |    |    |     <||@
  Comment 689 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 692 1224 rbx|QWORD = SHL r13|QWORD y: 3 size: QWORD  <||@
  Comment 699 1226 r10|QWORD = SHL r13|QWORD size: QWORD  <||@
  Comment 705 1228 rbx|QWORD = ADD (x: rbx|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 708 1230 r10|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 711 1232 rcx|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 713 1234 r8|QWORD = SHL (x: r8|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 716 1236 rcx|QWORD = SHL r8|QWORD y: 3 size: QWORD  <||@
  Comment 723 1238 r8|QWORD = SHL r8|QWORD size: QWORD  <||@
  Comment 726 1240 rcx|QWORD = ADD (x: rcx|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 729 1242 r8|QWORD = SHL rdx|QWORD y: 3 size: QWORD  <||@
  Comment 736 1244 rdx|QWORD = SHL rdx|QWORD size: QWORD  <||@
  Comment 739 1246 r8|QWORD = ADD (x: r8|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 742 1248 rdx|QWORD = ADD (x: rcx|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 748 1250 rax|DWORD = MOV rax|QWORD size: DWORD  <||@
  Comment 750 1252 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 752 1254 BRANCH trueDestinationProbability: 0.12181344950436568 condition: = trueDestination: B103 -> B104 falseDestination: B103 -> B109  <||@
  Comment 758 block B109 null  <||@
  Comment 758 1316 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 758 1318 CMP [r14|DWORD[.] * 8 + 12] y: 0 size: DWORD state [bci:365]  <||@
  Comment 758 [rbp:0, r14:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365, duringCall: false, rethrow: false]
              |0               |1               |2               |3  |4  |5               |6  |7  |8  |9          |10        |11         |12         |13              |14         |15         |16  |17  |18  |19  |20  |21  |22  |23              |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |rbp|QWORD[.]    |-               |stack:64|QWORD  |-  |-  |stack:28|DWORD  |-  |-  |-  |r11|DWORD  |r9|DWORD  |rdi|DWORD  |r10|DWORD  |stack:56|DWORD  |rsi|DWORD  |rdi|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:88|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-  
     stack:   |stack:52|DWORD  |stack:92|DWORD  |                |   |   |                |   |   |   |           |          |           |           |                |           |           |    |    |    |    |    |    |    |                |    |    |    |    |    |    |    |    |     <||@
  Comment 758 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 767 1320 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B109 -> B110 falseDestination: B109 -> B111  <||@
  Comment 773 block B111 null  <||@
  Comment 773 1350 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 773 1352 r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 778 1354 rax|DWORD = LEA [rax|DWORD + 48] size: DWORD  <||@
  Comment 781 1356 MOV (x: [r14|DWORD[.] * 8 + 16], y: rax|DWORD) size: WORD  <||@
  Comment 790 1358 TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 793 1364 r10|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 799 1360 BRANCH trueDestinationProbability: 0.010669521717460728 condition: = trueDestination: B111 -> B112 falseDestination: B111 -> B113  <||@
  Comment 805 block B113 null  <||@
  Comment 805 1372 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 805 1376 rax|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 808 1378 JUMP ~[] destination: B113 -> B114  <||@
  Comment 808 block B114 null  <||@
  Comment 808 1380 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 808 1382 CMP (x: rcx|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 811 1384 r9|DWORD = SETCC condition: >  <||@
  Comment 819 1386 CMP (x: rdx|QWORD, y: rbx|QWORD) size: QWORD  <||@
  Comment 822 1388 rdi|DWORD = SETCC condition: >  <||@
  Comment 830 1390 CMP r11|DWORD y: -3 size: DWORD  <||@
  Comment 834 1392 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B114 -> B115 falseDestination: B114 -> B116  <||@
  Comment 840 block B116 null  <||@
  Comment 840 1406 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 840 1408 CMP r11|DWORD y: 8 size: DWORD  <||@
  Comment 844 1410 BRANCH trueDestinationProbability: 0.9998134328358209 condition: < trueDestination: B116 -> B119 falseDestination: B116 -> B118  <||@
  Comment 850 block B119 null  <||@
  Comment 850 1424 [] = LABEL numbPhis: 4 align: false label: ?  <||@
  Comment 850 1426 TEST (x: r14|DWORD[.], y: r14|DWORD[.]) size: DWORD  <||@
  Comment 853 1428 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B119 -> B120 falseDestination: B119 -> B121  <||@
  Comment 859 block B121 null  <||@
  Comment 859 1442 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 859 1444 rsi|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 867 1446 r14|QWORD[.] = UNCOMPRESSPOINTER (input: r14|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@40447647 encoding: base: 0 shift: 3  <||@
  Comment 871 1448 stack:92|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 876 1450 r9|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 879 1452 rdi|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 882 1454 rcx|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 885 1456 r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 890 1458 JUMP ~[] destination: B121 -> B122  <||@
  Comment 890 block B122 loop 0 depth 1 header:375|LoopBegin  <||@
  Comment 890 1460 [] = LABEL numbPhis: 5 align: true label: ?  <||@
  Comment 896 1462 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 899 1464 BRANCH trueDestinationProbability: 0.9096921872746148 condition: = trueDestination: B122 -> B123 falseDestination: B122 -> B131  <||@
  Comment 905 block B123 loop 0 depth 1 header:375|LoopBegin  <||@
  Comment 905 1466 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 905 1468 TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 908 1470 BRANCH trueDestinationProbability: 0.9584277782398936 condition: = trueDestination: B123 -> B124 falseDestination: B123 -> B131  <||@
  Comment 914 block B124 loop 0 depth 1 header:375|LoopBegin  <||@
  Comment 914 1472 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 914 1474 CMP (x: rsi|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 917 1476 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B124 -> B125 falseDestination: B124 -> B128  <||@
  Comment 923 block B125 loop 0 depth 1 header:375|LoopBegin  <||@
  Comment 923 1478 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 923 1480 rax|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 926 1482 (highResult: rdx|QWORD, lowResult: rax|QWORD) = CDQ rax|QWORD size: QWORD  <||@
  Comment 928 1484 (highResult: rdx|QWORD, lowResult: rax|QWORD) = IDIV (highX: rdx|QWORD, lowX: rax|QWORD, y: r13|QWORD) size: QWORD state [bci:914]  <||@
  Comment 928 [rbp:0, r14:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6  |7  |8  |9          |10  |11  |12  |13  |14  |15  |16  |17         |18          |19          |20  |21  |22  |23  |24  |25         |26  |27         |28  |29         |30  |31         |32 
     locals:  |rbp|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |r11|DWORD  |-   |-   |-   |-   |-   |-   |-   |r10|DWORD  |int[0|0x0]  |int[0|0x0]  |-   |-   |-   |-   |-   |rcx|QWORD  |-   |r13|QWORD  |-   |rdi|QWORD  |-   |rbx|QWORD  |-    <||@
  Comment 928 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 931 1486 r8|DWORD = MOV rax|QWORD size: DWORD  <||@
  Comment 934 1488 r9|DWORD = LEA [r8|DWORD + 48] size: DWORD  <||@
  Comment 938 1490 MOV (x: [r14|QWORD[.] + r10|DWORD * 2 + 16], y: r9|DWORD) size: WORD  <||@
  Comment 944 1492 r9|QWORD = SHL rdx|QWORD y: 3 size: QWORD  <||@
  Comment 951 1494 rdx|QWORD = SHL rdx|QWORD size: QWORD  <||@
  Comment 954 1496 r9|QWORD = ADD (x: r9|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 957 1498 r10|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 960 1500 rcx|QWORD = SHL rdi|QWORD y: 3 size: QWORD  <||@
  Comment 967 1502 rdi|QWORD = SHL rdi|QWORD size: QWORD  <||@
  Comment 970 1504 rcx|QWORD = ADD (x: rcx|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 973 1506 CMP rcx|QWORD y: 1 size: QWORD  <||@
  Comment 977 1508 BRANCH trueDestinationProbability: 3.796929368977686E-4 condition: < trueDestination: B125 -> B126 falseDestination: B125 -> B127  <||@
  Comment 983 block B127 loop 0 depth 1 header:375|LoopBegin  <||@
  Comment 983 1524 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 983 1526 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 986 1528 rdi|DWORD = SETCC condition: >  <||@
  Comment 994 1530 rdx|QWORD = ADD (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 1000 1532 CMP (x: rdx|QWORD, y: rbx|QWORD) size: QWORD  <||@
  Comment 1003 1534 rdx|DWORD = SETCC condition: >  <||@
  Comment 1009 1536 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:1039]  <||@
  Comment 1009 [rbp:0, r14:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1039, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6  |7  |8  |9          |10  |11  |12  |13  |14  |15  |16  |17         |18         |19         |20  |21  |22        |23  |24  |25        |26  |27         |28  |29         |30  |31         |32 
     locals:  |rbp|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |r11|DWORD  |-   |-   |-   |-   |-   |-   |-   |r10|DWORD  |rdi|DWORD  |rdx|DWORD  |-   |-   |r8|DWORD  |-   |-   |r9|QWORD  |-   |r13|QWORD  |-   |rcx|QWORD  |-   |rbx|QWORD  |-    <||@
  Comment 1009 {infopoint: SAFEPOINT}  <||@
  Comment 1009 11  <||@
  Comment 1015 1538 r8|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 1018 1540 rdi|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 1021 1542 rcx|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 1024 1544 r9|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 1027 1546 JUMP ~[] destination: B127 -> B122  <||@
  Comment 1032 block B126 loop 0 depth 1 header:375|LoopBegin  <||@
  Comment 1032 1510 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1032 1512 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:1039]  <||@
  Comment 1032 [rbp:0, r14:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1039, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6  |7  |8  |9          |10  |11  |12  |13  |14  |15  |16  |17         |18          |19          |20  |21  |22        |23  |24  |25        |26  |27         |28  |29         |30  |31         |32 
     locals:  |rbp|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |r11|DWORD  |-   |-   |-   |-   |-   |-   |-   |r10|DWORD  |int[1|0x1]  |int[1|0x1]  |-   |-   |r8|DWORD  |-   |-   |r9|QWORD  |-   |r13|QWORD  |-   |rcx|QWORD  |-   |rbx|QWORD  |-    <||@
  Comment 1032 {infopoint: SAFEPOINT}  <||@
  Comment 1032 11  <||@
  Comment 1038 1514 rdi|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 1041 1516 rcx|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 1044 1518 r9|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1050 1520 r8|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1056 1522 JUMP ~[] destination: B126 -> B122  <||@
  Comment 1061 block B131 null  <||@
  Comment 1061 1566 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1061 1568 TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 1064 1570 rsi|DWORD = SETCC condition: =  <||@
  Comment 1072 1572 MOVB (x: [rbp|QWORD[.] + 25], y: rsi|DWORD) size: BYTE  <||@
  Comment 1076 1574 rcx|QWORD = SHL rcx|QWORD size: QWORD  <||@
  Comment 1079 1576 rcx|QWORD = SUB (x: rcx|QWORD, ~y: rbx|QWORD) size: QWORD  <||@
  Comment 1082 1578 stack:92|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1087 1580 r11|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1090 1582 r10|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 1095 1584 JUMP ~[] destination: B131 -> B168  <||@
  Comment 1095 block B168 null  <||@
  Comment 1095 2152 [] = LABEL numbPhis: 5 align: false label: ?  <||@
  Comment 1095 2154 rsi|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 1100 2156 MOV (x: [rbp|QWORD[.] + 12], y: rsi|DWORD) size: DWORD  <||@
  Comment 1103 2158 MOV (x: [rbp|QWORD[.] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 1107 2160 MOV (x: [rbp|QWORD[.] + 20], y: r11|DWORD) size: DWORD  <||@
  Comment 1111 2162 TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 1114 2164 BRANCH trueDestinationProbability: 0.6008525479558225 condition: = trueDestination: B168 -> B169 falseDestination: B168 -> B170  <||@
  Comment 1120 block B169 null  <||@
  Comment 1120 2166 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1120 2168 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1129 12  <||@
  Comment 1139 block B26 null  <||@
  Comment 1139 212 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1139 214 rax|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1141 216 JUMP ~[] destination: B26 -> B28  <||@
  Comment 1146 block B45 null  <||@
  Comment 1146 460 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1146 462 r9|DWORD = SUB (x: r9|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 1149 464 rsi|DWORD = SUB (x: rsi|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 1151 466 CMP rdi|DWORD y: 1 size: DWORD  <||@
  Comment 1154 472 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1159 468 BRANCH trueDestinationProbability: 0.3620750396336093 condition: = trueDestination: B45 -> B50 falseDestination: B45 -> B52  <||@
  Comment 1170 block B170 null  <||@
  Comment 1170 2170 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1170 2172 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 1173 2174 BRANCH trueDestinationProbability: 0.7168137687555163 condition: = trueDestination: B170 -> B171 falseDestination: B170 -> B172  <||@
  Comment 1179 block B171 null  <||@
  Comment 1179 2176 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1179 2178 rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 1182 2180 - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.roundup()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1505]  <||@
  Comment 1182 9  <||@
  Comment 1183 {HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.roundup()>}  <||@
  Comment 1188 []at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:778) [bci: 1505, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8  |9  |10  |11  |12  |13  |14  |15  |16  |17  |18  |19  |20  |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-    <||@
  Comment 1189 2182 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1198 12  <||@
  Comment 1208 block B4 null  <||@
  Comment 1208 48 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1208 50 CMP rdx|DWORD y: 63 size: DWORD  <||@
  Comment 1211 52 BRANCH trueDestinationProbability: 0.9998165784832451 condition: < trueDestination: B4 -> B6 falseDestination: B4 -> B27  <||@
  Comment 1222 block B43 null  <||@
  Comment 1222 424 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1222 426 r13|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 1228 428 r14|DWORD = SHL r13|DWORD size: DWORD  <||@
  Comment 1234 430 r14|DWORD = ADD (x: r14|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 1237 432 rax|DWORD = ADD (x: r11|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1240 434 stack:52|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1245 436 r14|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 1248 438 r13|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1251 440 JUMP ~[] destination: B43 -> B44  <||@
  Comment 1256 block B40 null  <||@
  Comment 1256 388 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1256 390 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1261 392 rsi|DWORD = SUB (x: rsi|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 1264 394 r9|DWORD = SHL rcx|DWORD size: DWORD  <||@
  Comment 1270 396 r9|DWORD = SUB (x: r9|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 1273 398 rbp|DWORD = SUB (x: rax|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 1278 400 stack:44|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 1282 402 stack:48|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1287 404 rsi|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 1289 406 JUMP ~[] destination: B40 -> B41  <||@
  Comment 1294 block B11 null  <||@
  Comment 1294 90 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1294 92 CMP rdx|DWORD y: 52 size: DWORD  <||@
  Comment 1297 94 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B22  <||@
  Comment 1303 block B12 null  <||@
  Comment 1303 96 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1303 98 CMP (x: rdx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 1306 100 BRANCH trueDestinationProbability: 0.0013467536149702752 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B20  <||@
  Comment 1312 block B20 null  <||@
  Comment 1312 160 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1312 162 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1318 164 JUMP ~[] destination: B20 -> B21  <||@
  Comment 1318 block B21 null  <||@
  Comment 1318 166 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1318 168 rcx|DWORD = MOVE input: int[52|0x34]  <||@
  Comment 1323 170 rcx|DWORD = SUB (x: rcx|DWORD, ~y: rdx|DWORD) size: DWORD  <||@
  Comment 1325 172 r10|QWORD = SHR (x: r10|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 1328 174 rdx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1333 176 rcx|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1336 178 - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD, r8|DWORD] [] callTarget: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(int, long, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:170]  <||@
  Comment 1336 9  <||@
  Comment 1343 {HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(int, long, int)>}  <||@
  Comment 1348 []at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:476) [bci: 170, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8  |9  |10  |11  |12  |13  |14  |15  |16  |17  |18  |19  |20  |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-    <||@
  Comment 1349 180 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1358 12  <||@
  Comment 1368 block B50 null  <||@
  Comment 1368 498 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 1368 500 rsi|DWORD = DEC rsi|DWORD size: DWORD  <||@
  Comment 1370 502 JUMP ~[] destination: B50 -> B52  <||@
  Comment 1375 block B32 null  <||@
  Comment 1375 306 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1375 308 CMP r9|DWORD y: 52 size: DWORD  <||@
  Comment 1379 310 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B177  <||@
  Comment 1385 block B33 null  <||@
  Comment 1385 312 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1385 314 rsi|QWORD = AND (x: r13|QWORD, y: rbp|QWORD) size: QWORD  <||@
  Comment 1391 316 r11|QWORD = MOVE input: long[4503599627370496|0x10000000000000]  <||@
  Comment 1401 318 rsi|QWORD = OR (x: rsi|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1404 320 r11|DWORD = MOVE input: int[1075|0x433]  <||@
  Comment 1410 322 r11|DWORD = SUB (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 1413 324 rcx|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1416 326 rsi|QWORD = SHR (x: rsi|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 1419 328 r11|DWORD = MOV rsi|QWORD size: DWORD  <||@
  Comment 1422 330 TEST (x: r14|QWORD, y: r13|QWORD) size: QWORD  <||@
  Comment 1425 332 BRANCH trueDestinationProbability: 0.007647163435888316 condition: = trueDestination: B33 -> B38 falseDestination: B33 -> B35  <||@
  Comment 1431 block B35 null  <||@
  Comment 1431 338 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1431 340 rcx|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1434 342 rbp|QWORD = SHR (x: rbp|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 1437 344 TEST (x: rbp|QWORD, y: r13|QWORD) size: QWORD  <||@
  Comment 1440 346 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37  <||@
  Comment 1446 block B37 null  <||@
  Comment 1446 358 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1446 360 rcx|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 1451 362 rcx|DWORD = SUB (x: rcx|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 1454 364 r11|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1457 366 JUMP ~[] destination: B37 -> B38  <||@
  Comment 1462 block B104 null  <||@
  Comment 1462 1256 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1462 1258 rax|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 1466 1260 CMP (x: rdx|QWORD, y: rbx|QWORD) size: QWORD  <||@
  Comment 1469 1262 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B104 -> B105 falseDestination: B104 -> B106  <||@
  Comment 1475 block B106 null  <||@
  Comment 1475 1292 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1475 1294 r11|DWORD = DEC r11|DWORD size: DWORD  <||@
  Comment 1478 1296 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1480 1302 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1486 1298 BRANCH trueDestinationProbability: 0.010669521717460728 condition: = trueDestination: B106 -> B107 falseDestination: B106 -> B114  <||@
  Comment 1497 block B172 null  <||@
  Comment 1497 2184 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1497 2186 TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 1500 2188 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B172 -> B173 falseDestination: B172 -> B174  <||@
  Comment 1506 block B174 null  <||@
  Comment 1506 2200 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1506 2202 CMP rcx|QWORD y: 1 size: QWORD  <||@
  Comment 1510 2204 BRANCH trueDestinationProbability: 0.40049867539348605 condition: < trueDestination: B174 -> B175 falseDestination: B174 -> B176  <||@
  Comment 1516 block B176 null  <||@
  Comment 1516 2210 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1516 2212 rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 1519 2214 - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.roundup()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1498]  <||@
  Comment 1519 {HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.roundup()>}  <||@
  Comment 1519 9  <||@
  Comment 1524 []at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:775) [bci: 1498, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8  |9  |10  |11  |12  |13  |14  |15  |16  |17  |18  |19  |20  |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-    <||@
  Comment 1525 2216 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1534 12  <||@
  Comment 1544 block B175 null  <||@
  Comment 1544 2206 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1544 2208 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1553 12  <||@
  Comment 1563 block B135 null  <||@
  Comment 1563 1638 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1563 1640 stack:68|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 1567 1642 r10|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1570 1644 stack:76|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1575 1646 stack:80|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1580 1648 stack:48|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 1584 1650 stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1589 1652 JUMP ~[] destination: B135 -> B137  <||@
  Comment 1589 block B137 null  <||@
  Comment 1589 1664 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1589 1666 rsi|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 1592 1668 rdx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1595 1670 stack:72|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1600 1672 rax|QWORD[.] = CALL_DIRECT [rsi|DWORD, rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.valueOfPow52(int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1074]  <||@
  Comment 1600 8  <||@
  Comment 1607 {HotSpotMethod<FDBigInteger.valueOfPow52(int, int)>}  <||@
  Comment 1612 [stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1074, duringCall: true, rethrow: false]
              |0                  |1  |2               |3  |4  |5               |6  |7  |8  |9               |10              |11              |12              |13              |14              |15              |16  |17  |18  |19  |20  |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |stack:64|QWORD  |-  |-  |stack:28|DWORD  |-  |-  |-  |stack:84|DWORD  |stack:76|DWORD  |stack:48|DWORD  |stack:72|DWORD  |stack:56|DWORD  |stack:68|DWORD  |stack:48|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-    <||@
  Comment 1613 1674 NULLCHECK [rax|QWORD[.]] state [bci:1077]  <||@
  Comment 1613 [rax:0, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1077, duringCall: false, rethrow: false]
              |0                  |1  |2               |3  |4  |5               |6  |7  |8  |9               |10              |11              |12              |13              |14              |15              |16  |17  |18  |19  |20  |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |stack:64|QWORD  |-  |-  |stack:28|DWORD  |-  |-  |-  |stack:84|DWORD  |stack:76|DWORD  |stack:48|DWORD  |stack:72|DWORD  |stack:56|DWORD  |stack:68|DWORD  |stack:48|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-  
     stack:   |Object[null]       |   |                |   |   |                |   |   |   |                |                |                |                |                |                |                |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |     <||@
  Comment 1613 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1615 1676 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1618 1678 stack:104|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1623 1680 rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.getNormalizationBias()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1081]  <||@
  Comment 1623 {HotSpotMethod<FDBigInteger.getNormalizationBias()>}  <||@
  Comment 1623 9  <||@
  Comment 1628 [stack:24, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:711) [bci: 1081, duringCall: true, rethrow: false]
              |0                  |1  |2               |3  |4  |5               |6  |7  |8  |9               |10              |11              |12              |13              |14              |15              |16  |17  |18  |19  |20  |21  |22  |23  |24  |25                  |26  |27  |28  |29  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |stack:64|QWORD  |-  |-  |stack:28|DWORD  |-  |-  |-  |stack:84|DWORD  |stack:76|DWORD  |stack:48|DWORD  |stack:72|DWORD  |stack:56|DWORD  |stack:68|DWORD  |stack:48|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |stack:104|QWORD[.]  |-   |-   |-   |-   |-   |-   |-    <||@
  Comment 1629 1682 rsi|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 1634 1684 rdx|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1636 1686 stack:92|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1640 1688 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.leftShift(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1090]  <||@
  Comment 1640 9  <||@
  Comment 1647 {HotSpotMethod<FDBigInteger.leftShift(int)>}  <||@
  Comment 1652 [stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:712) [bci: 1090, duringCall: true, rethrow: false]
              |0                  |1  |2               |3  |4  |5               |6  |7  |8  |9               |10              |11              |12              |13              |14              |15              |16  |17  |18  |19  |20  |21  |22  |23  |24  |25  |26              |27  |28  |29  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |stack:64|QWORD  |-  |-  |stack:28|DWORD  |-  |-  |-  |stack:84|DWORD  |stack:76|DWORD  |stack:48|DWORD  |stack:72|DWORD  |stack:56|DWORD  |stack:68|DWORD  |stack:48|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |stack:92|DWORD  |-   |-   |-   |-   |-   |-    <||@
  Comment 1653 1690 stack:104|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1658 1692 rcx|DWORD = ADD (x: stack:92|DWORD, y: stack:76|DWORD) size: DWORD  <||@
  Comment 1666 1694 rsi|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 1671 1696 rdx|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 1675 1698 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD, rdx|DWORD, rcx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.valueOfMulPow52(long, int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1103]  <||@
  Comment 1675 8  <||@
  Comment 1679 {HotSpotMethod<FDBigInteger.valueOfMulPow52(long, int, int)>}  <||@
  Comment 1684 [stack:24, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:714) [bci: 1103, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5               |6  |7  |8  |9               |10  |11  |12              |13              |14              |15              |16  |17  |18  |19  |20  |21  |22  |23  |24  |25                  |26              |27  |28  |29  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |stack:28|DWORD  |-  |-  |-  |stack:84|DWORD  |-   |-   |stack:72|DWORD  |stack:56|DWORD  |stack:68|DWORD  |stack:48|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |stack:104|QWORD[.]  |stack:92|DWORD  |-   |-   |-   |-   |-   |-    <||@
  Comment 1685 1700 stack:64|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1690 1702 NULLCHECK [rax|QWORD[.]] state [bci:1106]  <||@
  Comment 1690 [stack:24, stack:64, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:714) [bci: 1106, duringCall: false, rethrow: false]
              |0                  |1  |2  |3  |4  |5               |6  |7  |8  |9               |10  |11  |12              |13              |14              |15              |16  |17  |18  |19  |20  |21  |22  |23  |24  |25                  |26              |27  |28  |29  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |stack:28|DWORD  |-  |-  |-  |stack:84|DWORD  |-   |-   |stack:72|DWORD  |stack:56|DWORD  |stack:68|DWORD  |stack:48|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |stack:104|QWORD[.]  |stack:92|DWORD  |-   |-   |-   |-   |-   |-  
     stack:   |Object[null]       |   |   |   |   |                |   |   |   |                |    |    |                |                |                |                |    |    |    |    |    |    |    |    |    |                    |                |    |    |    |    |    |     <||@
  Comment 1690 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1692 1704 rsi|DWORD = ADD (x: stack:92|DWORD, y: stack:68|DWORD) size: DWORD  <||@
  Comment 1700 1706 rdx|DWORD = INC rsi|DWORD size: DWORD  <||@
  Comment 1704 1708 rsi|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1708 1710 rax|QWORD[.] = CALL_DIRECT [rsi|DWORD, rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.valueOfPow52(int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1119]  <||@
  Comment 1708 8  <||@
  Comment 1711 {HotSpotMethod<FDBigInteger.valueOfPow52(int, int)>}  <||@
  Comment 1716 [stack:24, stack:64, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:715) [bci: 1119, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5               |6  |7  |8  |9               |10  |11  |12              |13              |14  |15  |16  |17  |18  |19  |20  |21  |22  |23  |24  |25                  |26              |27                 |28  |29  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |stack:28|DWORD  |-  |-  |-  |stack:84|DWORD  |-   |-   |stack:72|DWORD  |stack:56|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |stack:104|QWORD[.]  |stack:92|DWORD  |stack:64|QWORD[.]  |-   |-   |-   |-   |-    <||@
  Comment 1717 1712 rsi|DWORD = ADD (x: stack:72|DWORD, y: stack:92|DWORD) size: DWORD  <||@
  Comment 1725 1714 rdx|DWORD = INC rsi|DWORD size: DWORD  <||@
  Comment 1729 1716 rsi|DWORD = MOVE stack:80|DWORD moveKind: DWORD  <||@
  Comment 1733 1718 stack:112|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1738 1720 rax|QWORD[.] = CALL_DIRECT [rsi|DWORD, rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.valueOfPow52(int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1135]  <||@
  Comment 1738 8  <||@
  Comment 1743 {HotSpotMethod<FDBigInteger.valueOfPow52(int, int)>}  <||@
  Comment 1748 [stack:16, stack:24, stack:64, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:717) [bci: 1135, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5               |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17  |18  |19  |20  |21  |22  |23  |24  |25                  |26  |27                 |28                  |29  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |stack:28|DWORD  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |stack:104|QWORD[.]  |-   |stack:64|QWORD[.]  |stack:112|QWORD[.]  |-   |-   |-   |-    <||@
  Comment 1749 1722 stack:120|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1754 1724 NULLCHECK [rax|QWORD[.]] state [bci:1138]  <||@
  Comment 1754 [stack:8, stack:16, stack:24, stack:64, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:717) [bci: 1138, duringCall: false, rethrow: false]
              |0                  |1  |2  |3  |4  |5               |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17  |18  |19  |20  |21  |22  |23  |24  |25                  |26  |27                 |28                  |29  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |stack:28|DWORD  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |stack:104|QWORD[.]  |-   |stack:64|QWORD[.]  |stack:112|QWORD[.]  |-   |-   |-   |-  
     stack:   |Object[null]       |   |   |   |   |                |   |   |   |                |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |                    |    |                   |                    |    |    |    |     <||@
  Comment 1754 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1756 1726 rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1761 1728 rdx|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 1766 1730 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.quoRemIteration(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1147]  <||@
  Comment 1766 9  <||@
  Comment 1767 {HotSpotMethod<FDBigInteger.quoRemIteration(FDBigInteger)>}  <||@
  Comment 1772 [stack:8, stack:16, stack:24, stack:64, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:724) [bci: 1147, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5               |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17          |18  |19  |20  |21  |22  |23  |24  |25                  |26  |27                 |28                  |29                  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |stack:28|DWORD  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |int[0|0x0]  |-   |-   |-   |-   |-   |-   |-   |stack:104|QWORD[.]  |-   |stack:64|QWORD[.]  |stack:112|QWORD[.]  |stack:120|QWORD[.]  |-   |-   |-    <||@
  Comment 1773 1732 rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1778 1734 rdx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 1783 1736 stack:80|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1787 1738 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1156]  <||@
  Comment 1787 9  <||@
  Comment 1791 {HotSpotMethod<FDBigInteger.cmp(FDBigInteger)>}  <||@
  Comment 1796 [stack:8, stack:16, stack:24, stack:64, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:725) [bci: 1156, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5               |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17          |18  |19  |20  |21  |22              |23  |24  |25                  |26  |27                 |28                  |29                  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |stack:28|DWORD  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |int[0|0x0]  |-   |-   |-   |-   |stack:80|DWORD  |-   |-   |stack:104|QWORD[.]  |-   |stack:64|QWORD[.]  |stack:112|QWORD[.]  |stack:120|QWORD[.]  |-   |-   |-    <||@
  Comment 1797 1740 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1799 1742 r10|DWORD = SETCC condition: <  <||@
  Comment 1807 1744 rsi|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD  <||@
  Comment 1812 1746 rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1817 1748 rcx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 1822 1750 stack:92|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1827 1752 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1175]  <||@
  Comment 1827 9  <||@
  Comment 1831 {HotSpotMethod<FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)>}  <||@
  Comment 1836 [stack:8, stack:16, stack:24, stack:64, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:726) [bci: 1175, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5               |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17          |18              |19  |20  |21  |22              |23  |24  |25                  |26  |27                 |28                  |29                  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |stack:28|DWORD  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |int[0|0x0]  |stack:92|DWORD  |-   |-   |-   |stack:80|DWORD  |-   |-   |stack:104|QWORD[.]  |-   |stack:64|QWORD[.]  |stack:112|QWORD[.]  |stack:120|QWORD[.]  |-   |-   |-    <||@
  Comment 1837 1754 r10|DWORD = MOVE stack:80|DWORD moveKind: DWORD  <||@
  Comment 1842 1756 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 1845 1758 BRANCH trueDestinationProbability: 0.10979929161747348 condition: = trueDestination: B137 -> B138 falseDestination: B137 -> B141  <||@
  Comment 1851 block B141 null  <||@
  Comment 1851 1782 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1851 1784 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1856 1786 JUMP ~[] destination: B141 -> B142  <||@
  Comment 1856 block B142 null  <||@
  Comment 1856 1788 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1856 1790 rdx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 1859 1792 CMP rax|DWORD y: 1 size: DWORD  <||@
  Comment 1862 1794 r11|DWORD = SETCC condition: <  <||@
  Comment 1870 1796 CMP [rdx|DWORD[.] * 8 + 12] y: 0 size: DWORD state [bci:1227]  <||@
  Comment 1870 [rdx:0, rsi:0, stack:8, stack:16, stack:24, stack:64, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1227, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5               |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17          |18              |19         |20  |21  |22         |23  |24  |25                  |26  |27                 |28                  |29                  |30  |31  |32 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |stack:28|DWORD  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |int[0|0x0]  |stack:92|DWORD  |r11|DWORD  |-   |-   |r10|DWORD  |-   |-   |stack:104|QWORD[.]  |-   |stack:64|QWORD[.]  |stack:112|QWORD[.]  |stack:120|QWORD[.]  |-   |-   |-    <||@
  Comment 1870 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1878 1798 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B142 -> B143 falseDestination: B142 -> B144  <||@
  Comment 1884 block B144 null  <||@
  Comment 1884 1822 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1884 1824 r10|DWORD = LEA [r10|DWORD + 48] size: DWORD  <||@
  Comment 1888 1826 MOV (x: [rdx|DWORD[.] * 8 + 16], y: r10|DWORD) size: WORD  <||@
  Comment 1897 1828 r10|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1903 1830 r11|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 1908 1832 rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 1912 1834 JUMP ~[] destination: B144 -> B145  <||@
  Comment 1912 block B145 null  <||@
  Comment 1912 1836 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 1912 1838 stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1917 1840 TEST (x: rbp|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 1919 1842 BRANCH trueDestinationProbability: 0.0448642266824085 condition: = trueDestination: B145 -> B146 falseDestination: B145 -> B147  <||@
  Comment 1925 block B147 null  <||@
  Comment 1925 1852 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1925 1854 CMP r11|DWORD y: -3 size: DWORD  <||@
  Comment 1929 1856 BRANCH trueDestinationProbability: 0.2735887927482489 condition: < trueDestination: B147 -> B148 falseDestination: B147 -> B149  <||@
  Comment 1935 block B149 null  <||@
  Comment 1935 1866 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1935 1868 CMP r11|DWORD y: 8 size: DWORD  <||@
  Comment 1939 1870 BRANCH trueDestinationProbability: 0.998298355076574 condition: < trueDestination: B149 -> B150 falseDestination: B149 -> B151  <||@
  Comment 1945 block B150 null  <||@
  Comment 1945 1872 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1945 1874 CMP rax|DWORD y: 1 size: DWORD  <||@
  Comment 1948 1876 rdx|DWORD = SETCC condition: <  <||@
  Comment 1954 1878 r8|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 1957 1880 rdx|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 1961 1882 JUMP ~[] destination: B150 -> B152  <||@
  Comment 1961 block B152 null  <||@
  Comment 1961 1892 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 1961 1894 rbx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 1966 1896 rcx|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1969 1898 r9|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 1972 1906 JUMP ~[] destination: B152 -> B153  <||@
  Comment 1977 block B154 loop 1 depth 1 header:550|LoopBegin  <||@
  Comment 1977 1914 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1984 1916 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 1986 1918 BRANCH trueDestinationProbability: 0.9936234534969387 condition: = trueDestination: B154 -> B155 falseDestination: B154 -> B160  <||@
  Comment 1992 block B155 loop 1 depth 1 header:550|LoopBegin  <||@
  Comment 1992 1920 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1992 1922 NULLCHECK [rbx|QWORD[.]] state [bci:1268]  <||@
  Comment 1992 [rax:0, rbx:0, r10:0, stack:8, stack:24, stack:64, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1268, duringCall: false, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17              |18          |19          |20  |21  |22  |23  |24  |25            |26  |27            |28            |29                  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:92|DWORD  |int[0|0x0]  |int[0|0x0]  |-   |-   |-   |-   |-   |r10|QWORD[.]  |-   |rax|QWORD[.]  |Object[null]  |stack:120|QWORD[.]  |-   |-   |-    <||@
  Comment 1992 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1994 1924 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1997 1926 rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2000 1928 stack:112|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 2005 1930 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.quoRemIteration(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1282]  <||@
  Comment 2005 9  <||@
  Comment 2007 {HotSpotMethod<FDBigInteger.quoRemIteration(FDBigInteger)>}  <||@
  Comment 2012 [stack:8, stack:16, stack:24, stack:64, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:745) [bci: 1282, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17              |18  |19  |20  |21  |22  |23  |24  |25                  |26  |27                 |28                  |29                  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:92|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:104|QWORD[.]  |-   |stack:64|QWORD[.]  |stack:112|QWORD[.]  |stack:120|QWORD[.]  |-   |-   |-    <||@
  Comment 2013 1932 rsi|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 2018 1934 stack:80|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 2022 1936 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.multBy10()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1312]  <||@
  Comment 2022 9  <||@
  Comment 2023 {HotSpotMethod<FDBigInteger.multBy10()>}  <||@
  Comment 2028 [stack:8, stack:24, stack:64, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:747) [bci: 1312, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17              |18  |19  |20  |21  |22              |23  |24  |25                  |26  |27                 |28  |29                  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:92|DWORD  |-   |-   |-   |-   |stack:80|DWORD  |-   |-   |stack:104|QWORD[.]  |-   |stack:64|QWORD[.]  |-   |stack:120|QWORD[.]  |-   |-   |-    <||@
  Comment 2029 1938 rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2034 1940 rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2037 1942 stack:112|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2042 1944 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1321]  <||@
  Comment 2042 9  <||@
  Comment 2047 {HotSpotMethod<FDBigInteger.cmp(FDBigInteger)>}  <||@
  Comment 2052 [stack:8, stack:16, stack:24, stack:64, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17              |18  |19  |20  |21  |22              |23  |24  |25                  |26  |27                 |28                  |29                  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:92|DWORD  |-   |-   |-   |-   |stack:80|DWORD  |-   |-   |stack:104|QWORD[.]  |-   |stack:64|QWORD[.]  |stack:112|QWORD[.]  |stack:120|QWORD[.]  |-   |-   |-    <||@
  Comment 2053 1946 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 2055 1948 r9|DWORD = SETCC condition: <  <||@
  Comment 2063 1950 rsi|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD  <||@
  Comment 2068 1952 rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2073 1954 rcx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 2078 1956 stack:72|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 2083 1958 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1340]  <||@
  Comment 2083 9  <||@
  Comment 2087 {HotSpotMethod<FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)>}  <||@
  Comment 2092 [stack:8, stack:16, stack:24, stack:64, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1340, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17              |18              |19  |20  |21  |22              |23  |24  |25                  |26  |27                 |28                  |29                  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:92|DWORD  |stack:72|DWORD  |-   |-   |-   |stack:80|DWORD  |-   |-   |stack:104|QWORD[.]  |-   |stack:64|QWORD[.]  |stack:112|QWORD[.]  |stack:120|QWORD[.]  |-   |-   |-    <||@
  Comment 2093 1960 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2098 1962 rdx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 2101 1964 r10|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 2106 1966 CMP (x: r10|DWORD, y: [rdx|DWORD[.] * 8 + 12]) size: DWORD state [bci:1343]  <||@
  Comment 2106 [rdx:0, rsi:0, stack:8, stack:16, stack:24, stack:64, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1343, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17         |18              |19  |20  |21  |22              |23  |24  |25                  |26  |27                 |28                  |29                  |30  |31  |32 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |r10|DWORD  |stack:72|DWORD  |-   |-   |-   |stack:80|DWORD  |-   |-   |stack:104|QWORD[.]  |-   |stack:64|QWORD[.]  |stack:112|QWORD[.]  |stack:120|QWORD[.]  |-   |-   |-  
     stack:   |rax|DWORD     |   |   |   |   |   |   |   |   |                |    |    |    |    |    |    |    |           |                |    |    |    |                |    |    |                    |    |                   |                    |                    |    |    |     <||@
  Comment 2106 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2114 1968 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B155 -> B156 falseDestination: B155 -> B157  <||@
  Comment 2120 block B156 loop 1 depth 1 header:550|LoopBegin  <||@
  Comment 2120 1970 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2120 1972 r11|DWORD = MOVE stack:80|DWORD moveKind: DWORD  <||@
  Comment 2125 1974 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@40447647 encoding: base: 0 shift: 3  <||@
  Comment 2129 1976 r11|DWORD = LEA [r11|DWORD + 48] size: DWORD  <||@
  Comment 2133 1978 MOV (x: [rdx|QWORD[.] + r10|DWORD * 2 + 16], y: r11|DWORD) size: WORD  <||@
  Comment 2139 1980 CMP rax|DWORD y: 1 size: DWORD  <||@
  Comment 2142 1982 rcx|DWORD = SETCC condition: <  <||@
  Comment 2148 1984 r10|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 2151 1986 rbx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 2156 1988 r9|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 2161 1996 JUMP ~[] destination: B156 -> B153  <||@
  Comment 2161 block B153 loop 1 depth 1 header:550|LoopBegin  <||@
  Comment 2161 1908 [] = LABEL numbPhis: 4 align: false label: ?  <||@
  Comment 2161 1900 stack:92|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2166 1902 rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2171 1904 r10|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 2176 1910 TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 2179 1912 BRANCH trueDestinationProbability: 0.9449992797810535 condition: = trueDestination: B153 -> B154 falseDestination: B153 -> B160  <||@
  Comment 2185 block B160 null  <||@
  Comment 2185 2032 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2185 2026 r10|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 2190 2028 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2195 2034 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 2197 2036 BRANCH trueDestinationProbability: 0.045633359559402044 condition: = trueDestination: B160 -> B161 falseDestination: B160 -> B162  <||@
  Comment 2203 block B162 null  <||@
  Comment 2203 2052 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2203 2054 TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 2206 2056 BRANCH trueDestinationProbability: 0.10346248969497114 condition: = trueDestination: B162 -> B163 falseDestination: B162 -> B164  <||@
  Comment 2212 block B164 null  <||@
  Comment 2212 2072 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2212 2074 stack:80|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 2216 2076 stack:72|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 2221 2078 stack:92|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2226 2080 rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2231 2082 rdx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2236 2084 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.leftShift(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1385]  <||@
  Comment 2236 9  <||@
  Comment 2239 {HotSpotMethod<FDBigInteger.leftShift(int)>}  <||@
  Comment 2244 [stack:8, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:753) [bci: 1385, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17              |18              |19              |20  |21  |22  |23  |24  |25  |26  |27  |28  |29                  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:92|DWORD  |stack:72|DWORD  |stack:80|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |stack:120|QWORD[.]  |-   |-   |-    <||@
  Comment 2245 2086 NULLCHECK [rax|QWORD[.]] state [bci:1388]  <||@
  Comment 2245 [rax:0, stack:8, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:753) [bci: 1388, duringCall: false, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17              |18              |19              |20  |21  |22  |23  |24  |25  |26  |27  |28  |29                  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:92|DWORD  |stack:72|DWORD  |stack:80|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |stack:120|QWORD[.]  |-   |-   |-  
     stack:   |Object[null]       |   |   |   |   |   |   |   |   |                |    |    |    |    |    |    |    |                |                |                |    |    |    |    |    |    |    |    |    |                    |    |    |     <||@
  Comment 2245 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2247 2088 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2250 2090 rdx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD  <||@
  Comment 2255 2092 stack:120|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2260 2094 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1394]  <||@
  Comment 2260 9  <||@
  Comment 2263 {HotSpotMethod<FDBigInteger.cmp(FDBigInteger)>}  <||@
  Comment 2268 [stack:8, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:754) [bci: 1394, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17              |18              |19              |20  |21  |22  |23  |24  |25  |26  |27                  |28  |29  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:92|DWORD  |stack:72|DWORD  |stack:80|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:120|QWORD[.]  |-   |-   |-   |-   |-    <||@
  Comment 2269 2096 rsi|QWORD = MOVSXD rax|DWORD size: QWORD  <||@
  Comment 2272 2098 rax|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD  <||@
  Comment 2277 2100 stack:104|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 2282 2102 JUMP ~[] destination: B164 -> B165  <||@
  Comment 2282 block B165 null  <||@
  Comment 2282 2104 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 2282 2106 rdx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[FDBigInteger@241972498]  <||@
  Comment 2282 {Object[FDBigInteger@241972498]}  <||@
  Comment 2292 2108 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2295 2110 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1412]  <||@
  Comment 2295 {HotSpotMethod<FDBigInteger.cmp(FDBigInteger)>}  <||@
  Comment 2295 9  <||@
  Comment 2300 [stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1412, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17              |18              |19              |20               |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:92|DWORD  |stack:72|DWORD  |stack:80|DWORD  |stack:104|QWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-  
     stack:   |stack:40|QWORD[.]  |   |   |   |   |   |   |   |   |                |    |    |    |    |    |    |    |                |                |                |                 |    |    |    |    |    |    |    |    |    |    |    |     <||@
  Comment 2301 2112 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 2303 2114 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B165 -> B166 falseDestination: B165 -> B167  <||@
  Comment 2309 block B167 null  <||@
  Comment 2309 2132 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2309 2134 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2314 2136 MOVB (x: [rsi|QWORD[.] + 25], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 2318 2138 rcx|QWORD = MOVE stack:104|QWORD moveKind: QWORD  <||@
  Comment 2323 2140 r9|DWORD = MOVE stack:80|DWORD moveKind: DWORD  <||@
  Comment 2328 2142 r8|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 2333 2144 r11|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 2338 2146 r10|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 2343 2148 rbp|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2346 2150 JUMP ~[] destination: B167 -> B168  <||@
  Comment 2351 block B64 null  <||@
  Comment 2351 658 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2351 660 stack:68|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 2355 662 r10|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 2358 664 stack:76|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 2363 666 stack:80|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 2368 668 stack:48|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 2372 670 stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2377 672 JUMP ~[] destination: B64 -> B137  <||@
  Comment 2382 block B148 null  <||@
  Comment 2382 1858 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2382 1860 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2388 1862 rdx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2393 1864 JUMP ~[] destination: B148 -> B152  <||@
  Comment 2398 block B112 null  <||@
  Comment 2398 1362 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2398 1366 rdi|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2403 1368 r9|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2409 1370 JUMP ~[] destination: B112 -> B119  <||@
  Comment 2414 block B138 null  <||@
  Comment 2414 1760 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2414 1762 rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 2418 1764 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2423 1766 CMP rax|DWORD y: 1 size: DWORD  <||@
  Comment 2426 1768 BRANCH trueDestinationProbability: 0.2831541218637993 condition: < trueDestination: B138 -> B142 falseDestination: B138 -> B140  <||@
  Comment 2432 block B140 null  <||@
  Comment 2432 1774 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2432 1776 r11|DWORD = DEC stack:84|DWORD size: DWORD  <||@
  Comment 2440 1778 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2446 1780 JUMP ~[] destination: B140 -> B145  <||@
  Comment 2451 block B163 null  <||@
  Comment 2451 2058 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2451 2060 rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2456 2062 stack:104|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2465 2064 stack:80|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 2469 2066 stack:72|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 2474 2068 stack:92|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2479 2070 JUMP ~[] destination: B163 -> B165  <||@
  Comment 2484 block B161 null  <||@
  Comment 2484 2038 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2484 2040 rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2489 2042 stack:104|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2498 2044 stack:80|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 2502 2046 stack:72|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 2507 2048 stack:92|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2512 2050 JUMP ~[] destination: B161 -> B165  <||@
  Comment 2517 block B146 null  <||@
  Comment 2517 1844 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2517 1846 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2523 1848 rdx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2528 1850 JUMP ~[] destination: B146 -> B152  <||@
  Comment 2533 block B107 null  <||@
  Comment 2533 1300 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2533 1304 rdi|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2538 1306 r9|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2544 1308 JUMP ~[] destination: B107 -> B119  <||@
  Comment 2549 block B25 null  <||@
  Comment 2549 206 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2549 208 rax|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 2551 210 JUMP ~[] destination: B25 -> B28  <||@
  Comment 2556 block B71 null  <||@
  Comment 2556 746 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2556 748 stack:52|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 2560 750 stack:88|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 2564 752 stack:92|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 2569 754 stack:68|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 2573 756 stack:72|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 2577 758 stack:76|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 2582 760 stack:48|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 2586 762 stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2591 764 rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 2594 766 rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 2598 768 CMP rcx|DWORD y: 32 size: DWORD  <||@
  Comment 2601 770 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B71 -> B72 falseDestination: B71 -> B100  <||@
  Comment 2607 block B72 null  <||@
  Comment 2607 772 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2607 774 CMP stack:48|DWORD y: 14 size: DWORD  <||@
  Comment 2612 776 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B72 -> B73 falseDestination: B72 -> B99  <||@
  Comment 2618 block B73 null  <||@
  Comment 2618 778 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2618 780 CMP stack:56|DWORD y: 14 size: DWORD  <||@
  Comment 2623 782 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B73 -> B74 falseDestination: B73 -> B98  <||@
  Comment 2629 block B74 null  <||@
  Comment 2629 784 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2629 786 NULLCHECK [r12|QWORD[*] + r14|DWORD[.] * 8] state [bci:365]  <||@
  Comment 2629 [rsi:0, r14:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365, duringCall: false, rethrow: false]
              |0               |1               |2               |3  |4  |5          |6  |7  |8  |9               |10              |11              |12              |13              |14              |15              |16  |17  |18  |19  |20  |21  |22  |23              |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |rsi|QWORD[.]    |-               |stack:64|QWORD  |-  |-  |rbp|DWORD  |-  |-  |-  |stack:84|DWORD  |stack:76|DWORD  |stack:48|DWORD  |stack:72|DWORD  |stack:56|DWORD  |stack:68|DWORD  |stack:48|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:88|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-  
     stack:   |stack:52|DWORD  |stack:92|DWORD  |                |   |   |           |   |   |   |                |                |                |                |                |                |                |    |    |    |    |    |    |    |                |    |    |    |    |    |    |    |    |     <||@
  Comment 2629 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2633 788 TEST (x: rbp|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 2635 790 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76  <||@
  Comment 2641 block B76 null  <||@
  Comment 2641 810 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2641 812 CMP stack:84|DWORD y: -3 size: DWORD  <||@
  Comment 2646 814 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B76 -> B77 falseDestination: B76 -> B78  <||@
  Comment 2652 block B78 null  <||@
  Comment 2652 834 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2652 836 CMP stack:84|DWORD y: 8 size: DWORD  <||@
  Comment 2657 838 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B78 -> B79 falseDestination: B78 -> B97  <||@
  Comment 2663 block B79 null  <||@
  Comment 2663 840 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2663 842 r13|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 2668 844 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[14]{1, 5, 25, 125, 625, ...}]  <||@
  Comment 2668 {Object[int[14]{1, 5, 25, 125, 625, ...}]}  <||@
  Comment 2678 846 rdx|DWORD = MOV [rax|QWORD[.] + r13|DWORD * 4 + 16] size: DWORD  <||@
  Comment 2683 848 rcx|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 2687 850 r10|DWORD = SHL (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 2693 852 rcx|DWORD = SHL r10|DWORD y: 3 size: DWORD  <||@
  Comment 2699 854 r10|DWORD = SHL r10|DWORD size: DWORD  <||@
  Comment 2702 856 r10|DWORD = ADD (x: rcx|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 2705 858 rcx|DWORD = SHL r10|DWORD y: 3 size: DWORD  <||@
  Comment 2711 860 r11|DWORD = SHL r10|DWORD size: DWORD  <||@
  Comment 2717 862 r11|DWORD = ADD (x: rcx|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 2720 864 CMP r11|DWORD y: 1 size: DWORD  <||@
  Comment 2724 866 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B79 -> B80 falseDestination: B79 -> B81  <||@
  Comment 2730 block B81 null  <||@
  Comment 2730 884 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2730 886 CMP [r14|DWORD[.] * 8 + 12] y: 2 size: DWORD  <||@
  Comment 2739 888 BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B81 -> B82 falseDestination: B81 -> B83  <||@
  Comment 2745 block B83 null  <||@
  Comment 2745 906 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2745 908 r9|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 2750 910 rax|DWORD = MOV [rax|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD  <||@
  Comment 2755 912 rcx|DWORD = MOV stack:64|QWORD size: DWORD  <||@
  Comment 2759 914 rdx|DWORD = IMUL (x: rcx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 2762 916 rcx|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 2766 918 rdx|DWORD = SHL (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 2768 920 rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 2772 922 r8|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 2778 924 rax|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 2780 926 (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ rax|DWORD size: DWORD  <||@
  Comment 2781 928 (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: r8|DWORD) size: DWORD state [bci:365]  <||@
  Comment 2781 [rsi:0, r14:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365, duringCall: false, rethrow: false]
              |0               |1               |2               |3  |4  |5          |6  |7  |8  |9               |10              |11         |12              |13        |14              |15         |16  |17  |18  |19  |20  |21  |22  |23              |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |rsi|QWORD[.]    |-               |stack:64|QWORD  |-  |-  |rbp|DWORD  |-  |-  |-  |stack:84|DWORD  |stack:76|DWORD  |r13|DWORD  |stack:72|DWORD  |r9|DWORD  |stack:68|DWORD  |r13|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:88|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-  
     stack:   |stack:52|DWORD  |stack:92|DWORD  |                |   |   |           |   |   |   |                |                |           |                |          |                |           |    |    |    |    |    |    |    |                |    |    |    |    |    |    |    |    |     <||@
  Comment 2781 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2784 930 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 2786 932 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B85  <||@
  Comment 2792 block B85 null  <||@
  Comment 2792 950 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2792 952 rcx|DWORD = SHL rdx|DWORD y: 3 size: DWORD  <||@
  Comment 2797 954 rdx|DWORD = SHL rdx|DWORD size: DWORD  <||@
  Comment 2799 956 rcx|DWORD = ADD (x: rcx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 2801 958 CMP (x: r10|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 2804 960 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B87  <||@
  Comment 2810 block B87 null  <||@
  Comment 2810 978 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2810 980 rdx|DWORD = SHL r8|DWORD y: 3 size: DWORD  <||@
  Comment 2816 982 rbx|DWORD = SHL r8|DWORD size: DWORD  <||@
  Comment 2821 984 rbx|DWORD = ADD (x: rdx|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 2823 986 rdx|DWORD = ADD (x: rcx|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 2828 988 CMP (x: rdx|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 2830 990 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B87 -> B88 falseDestination: B87 -> B89  <||@
  Comment 2836 block B89 null  <||@
  Comment 2836 1008 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2836 1010 rax|DWORD = LEA [rax|DWORD + 48] size: DWORD  <||@
  Comment 2839 1012 MOV (x: [r14|DWORD[.] * 8 + 16], y: rax|DWORD) size: WORD  <||@
  Comment 2848 1014 rax|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 2850 1016 (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ rax|DWORD size: DWORD  <||@
  Comment 2851 1018 (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: r8|DWORD) size: DWORD state [bci:552]  <||@
  Comment 2851 [rsi:0, r14:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 552, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5          |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17          |18          |19          |20  |21  |22  |23  |24  |25         |26        |27         |28         |29  |30  |31  |32 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |rbp|DWORD  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |int[1|0x1]  |int[0|0x0]  |int[0|0x0]  |-   |-   |-   |-   |-   |rcx|DWORD  |r8|DWORD  |r10|DWORD  |rbx|DWORD  |-   |-   |-   |-    <||@
  Comment 2851 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2854 1020 r9|DWORD = SHL rdx|DWORD y: 3 size: DWORD  <||@
  Comment 2861 1022 rdx|DWORD = SHL rdx|DWORD size: DWORD  <||@
  Comment 2863 1024 r9|DWORD = ADD (x: r9|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 2866 1026 CMP (x: r11|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 2869 1028 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B89 -> B90 falseDestination: B89 -> B95  <||@
  Comment 2875 block B90 null  <||@
  Comment 2875 1030 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2875 1032 r11|DWORD = ADD (x: r11|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 2878 1034 CMP (x: r11|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 2881 1036 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B90 -> B91 falseDestination: B90 -> B92  <||@
  Comment 2887 block B92 null  <||@
  Comment 2887 1048 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2887 1050 TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 2890 1052 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B92 -> B93 falseDestination: B92 -> B94  <||@
  Comment 2896 block B94 null  <||@
  Comment 2896 1064 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2896 1066 r10|DWORD = LEA [rax|DWORD + 48] size: DWORD  <||@
  Comment 2900 1068 MOV (x: [r14|DWORD[.] * 8 + 18], y: r10|DWORD) size: WORD  <||@
  Comment 2909 1070 r9|DWORD = SHL r9|DWORD size: DWORD  <||@
  Comment 2912 1072 r9|DWORD = SUB (x: r9|DWORD, ~y: rbx|DWORD) size: DWORD  <||@
  Comment 2915 1074 rcx|QWORD = MOVSXD r9|DWORD size: QWORD  <||@
  Comment 2918 1076 r9|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2924 1078 r8|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2930 1080 r11|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 2936 1082 r10|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 2941 1084 rbp|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2944 1086 JUMP ~[] destination: B94 -> B168  <||@
  Comment 2949 block B7 null  <||@
  Comment 2949 64 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2949 66 rax|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 2951 68 JUMP ~[] destination: B7 -> B28  <||@
  Comment 2956 block B13 null  <||@
  Comment 2956 102 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2956 104 rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 2960 106 r11|DWORD = SUB (x: rdx|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 2966 108 r11|DWORD = DEC r11|DWORD size: DWORD  <||@
  Comment 2969 110 CMP r11|DWORD y: 2 size: DWORD  <||@
  Comment 2973 112 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15  <||@
  Comment 2979 block B15 null  <||@
  Comment 2979 120 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2979 122 r9|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:sun.misc.FloatingDecimal$BinaryToASCIIBuffer]  <||@
  Comment 2979 {Object[Class:sun.misc.FloatingDecimal$BinaryToASCIIBuffer]}  <||@
  Comment 2989 124 r9|DWORD[.] = MOV [r9|QWORD[.] + 104] size: DWORD  <||@
  Comment 2993 126 rcx|DWORD = MOV [r9|DWORD[.] * 8 + 12] size: DWORD state [bci:10, 74]  <||@
  Comment 2993 [rsi:0, r9:0]at java.lang.Math.max(Math.java:1252) [bci: 10, duringCall: false, rethrow: false]
              |0           |1 
     locals:  |-           |- 
     stack:   |int[0|0x0]  |  
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 74, duringCall: true, rethrow: false]
              |0             |1          |2          |3  |4         |5          |6          |7          |8  |9  |10  |11  |12  |13  |14  |15  |16  |17  |18  |19  |20  |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |r10|QWORD  |-  |r8|DWORD  |rbp|DWORD  |rbx|DWORD  |rdi|DWORD  |-  |-  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-    <||@
  Comment 2993 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 3001 128 CMP (x: rcx|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 3004 130 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B19  <||@
  Comment 3010 block B19 null  <||@
  Comment 3010 154 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3010 156 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 3016 158 JUMP ~[] destination: B19 -> B21  <||@
  Comment 3021 block B118 null  <||@
  Comment 3021 1416 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3021 1418 rdi|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 3026 1420 r9|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 3032 1422 JUMP ~[] destination: B118 -> B119  <||@
  Comment 3037 block B3 null  <||@
  Comment 3037 42 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3037 44 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 3042 46 JUMP ~[] destination: B3 -> B28  <||@
  Comment 3047 block B14 null  <||@
  Comment 3047 114 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3047 116 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 3053 118 JUMP ~[] destination: B14 -> B21  <||@
  Comment 3058 block B16 null  <||@
  Comment 3058 132 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3058 134 CMP (x: rcx|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 3061 136 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B18  <||@
  Comment 3067 block B17 null  <||@
  Comment 3067 138 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3067 140 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@40447647 encoding: base: 0 shift: 3  <||@
  Comment 3071 142 r8|DWORD = MOV [r9|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD  <||@
  Comment 3076 144 JUMP ~[] destination: B17 -> B21  <||@
  Comment 3081 block B27 null  <||@
  Comment 3081 218 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3081 220 rax|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 3083 222 JUMP ~[] destination: B27 -> B28  <||@
  Comment 3088 block B59 null  <||@
  Comment 3088 584 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3088 586 stack:68|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 3092 588 stack:72|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 3096 590 stack:76|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 3101 592 stack:80|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 3106 594 r9|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 3109 596 r13|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 3112 598 stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 3117 600 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[27]{0, 3, 5, 7, 10, ...}]  <||@
  Comment 3117 {Object[int[27]{0, 3, 5, 7, 10, ...}]}  <||@
  Comment 3127 602 rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 3131 604 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3136 606 r10|DWORD = ADD (x: stack:48|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 3144 608 CMP stack:80|DWORD y: 27 size: DWORD  <||@
  Comment 3149 614 rbx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 3152 610 BRANCH trueDestinationProbability: 0.9999471523948773 condition: < trueDestination: B59 -> B60 falseDestination: B59 -> B67  <||@
  Comment 3158 block B60 null  <||@
  Comment 3158 612 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3158 616 rdx|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 3162 618 r10|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 3167 626 rcx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 3170 628 rsi|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 3174 630 r13|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 3177 632 r11|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 3182 634 r9|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 3187 636 JUMP ~[] destination: B60 -> B61  <||@
  Comment 3192 block B151 null  <||@
  Comment 3192 1884 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3192 1886 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 3198 1888 rdx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 3203 1890 JUMP ~[] destination: B151 -> B152  <||@
  Comment 3208 block B58 null  <||@
  Comment 3208 562 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3208 564 stack:68|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 3212 566 stack:72|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 3216 568 stack:76|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 3221 570 stack:80|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 3226 572 r9|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 3229 574 r13|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 3232 576 stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 3237 578 rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 3241 580 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3246 582 JUMP ~[] destination: B58 -> B67  <||@
  Comment 3246 block B67 null  <||@
  Comment 3246 698 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3246 700 CMP rbx|DWORD y: 64 size: DWORD  <||@
  Comment 3249 702 BRANCH trueDestinationProbability: 0.9867185711014427 condition: < trueDestination: B67 -> B68 falseDestination: B67 -> B136  <||@
  Comment 3255 block B68 null  <||@
  Comment 3255 704 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3255 706 r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 3260 708 r10|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 3265 716 r11|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 3270 718 rsi|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 3274 720 r13|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 3277 722 r9|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 3282 724 JUMP ~[] destination: B68 -> B69  <||@
  Comment 3287 block B136 null  <||@
  Comment 3287 1654 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3287 1656 r10|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 3292 1658 stack:48|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 3297 1660 r13|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 3300 1662 JUMP ~[] destination: B136 -> B137  <||@
  Comment 3305 block B97 null  <||@
  Comment 3305 1106 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3305 1108 r10|DWORD = MOVE input: int[-278803|0xfffffffffffbbeed]  <||@
  Comment 3311 1112 rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 3315 1114 r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 3320 1116 rcx|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 3324 1118 r13|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 3329 1120 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 3332 1122 JUMP ~[] destination: B97 -> B134  <||@
  Comment 3332 block B134 null  <||@
  Comment 3332 1630 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3332 1632 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 3339 1634 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3346 1636 DEOPT info [bci:365]  <||@
  Comment 3346 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3351 [r14:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365, duringCall: false, rethrow: false]
              |0             |1         |2               |3  |4  |5          |6  |7  |8  |9               |10              |11         |12              |13         |14              |15         |16  |17  |18  |19  |20  |21  |22  |23         |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |r14|QWORD[.]  |-         |stack:64|QWORD  |-  |-  |rbp|DWORD  |-  |-  |-  |stack:84|DWORD  |stack:76|DWORD  |r13|DWORD  |stack:72|DWORD  |rcx|DWORD  |stack:68|DWORD  |r13|DWORD  |-   |-   |-   |-   |-   |-   |-   |rbx|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-  
     stack:   |rdx|DWORD     |r8|DWORD  |                |   |   |           |   |   |   |                |                |           |                |           |                |           |    |    |    |    |    |    |    |           |    |    |    |    |    |    |    |    |     <||@
  Comment 3352 block B93 null  <||@
  Comment 3352 1054 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3352 1056 r11|DWORD = MOVE input: int[-282387|0xfffffffffffbb0ed]  <||@
  Comment 3358 1062 JUMP ~[] destination: B93 -> B96  <||@
  Comment 3358 block B96 null  <||@
  Comment 3358 1098 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3358 1042 r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 3363 1044 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 3366 1100 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 3373 1102 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3380 1104 DEOPT info [bci:552]  <||@
  Comment 3380 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3385 [r14:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 552, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5          |6  |7  |8  |9         |10  |11  |12  |13  |14  |15  |16  |17          |18          |19          |20  |21  |22  |23  |24  |25         |26        |27         |28         |29  |30  |31  |32 
     locals:  |r14|QWORD[.]  |-  |-  |-  |-  |rbp|DWORD  |-  |-  |-  |r9|DWORD  |-   |-   |-   |-   |-   |-   |-   |int[1|0x1]  |int[0|0x0]  |int[0|0x0]  |-   |-   |-   |-   |-   |rcx|DWORD  |r8|DWORD  |r10|DWORD  |rbx|DWORD  |-   |-   |-   |-    <||@
  Comment 3386 block B91 null  <||@
  Comment 3386 1038 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3386 1040 r11|DWORD = MOVE input: int[-279571|0xfffffffffffbbbed]  <||@
  Comment 3392 1046 JUMP ~[] destination: B91 -> B96  <||@
  Comment 3394 block B84 null  <||@
  Comment 3394 934 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3394 936 r10|DWORD = MOVE input: int[-273427|0xfffffffffffbd3ed]  <||@
  Comment 3400 938 rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 3404 940 rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 3408 942 r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 3413 944 rcx|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 3416 946 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 3419 948 JUMP ~[] destination: B84 -> B134  <||@
  Comment 3421 block B77 null  <||@
  Comment 3421 816 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3421 818 r10|DWORD = MOVE input: int[-278547|0xfffffffffffbbfed]  <||@
  Comment 3427 822 rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 3431 824 r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 3436 826 rcx|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 3440 828 r13|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 3445 830 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 3448 832 JUMP ~[] destination: B77 -> B134  <||@
  Comment 3450 block B80 null  <||@
  Comment 3450 868 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3450 870 r10|DWORD = MOVE input: int[-279059|0xfffffffffffbbded]  <||@
  Comment 3456 872 rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 3460 874 rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 3464 876 r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 3469 878 rcx|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 3473 880 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 3476 882 JUMP ~[] destination: B80 -> B134  <||@
  Comment 3481 block B75 null  <||@
  Comment 3481 792 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3481 794 r10|DWORD = MOVE input: int[-278291|0xfffffffffffbc0ed]  <||@
  Comment 3487 798 rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 3491 800 r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 3496 802 rcx|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 3500 804 r13|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 3505 806 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 3508 808 JUMP ~[] destination: B75 -> B134  <||@
  Comment 3513 block B98 null  <||@
  Comment 3513 1124 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3513 1126 r10|DWORD = MOVE input: int[-270875|0xfffffffffffbdde5]  <||@
  Comment 3519 1130 rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 3523 1132 r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 3528 1134 rcx|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 3532 1136 r13|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 3537 1138 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 3540 1140 JUMP ~[] destination: B98 -> B134  <||@
  Comment 3545 block B99 null  <||@
  Comment 3545 1142 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3545 1144 r10|DWORD = MOVE input: int[-268827|0xfffffffffffbe5e5]  <||@
  Comment 3551 1148 rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 3555 1150 r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 3560 1152 rcx|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 3564 1154 r13|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 3569 1156 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 3572 1158 JUMP ~[] destination: B99 -> B134  <||@
  Comment 3577 block B100 null  <||@
  Comment 3577 1160 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3577 1162 r10|DWORD = MOVE input: int[-268051|0xfffffffffffbe8ed]  <||@
  Comment 3583 1166 rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 3587 1168 r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 3592 1170 rcx|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 3596 1172 r13|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 3601 1174 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 3604 1176 JUMP ~[] destination: B100 -> B134  <||@
  Comment 3609 block B65 null  <||@
  Comment 3609 674 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3609 676 rcx|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 3612 678 r13|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 3615 680 stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 3620 682 rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 3624 684 r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3629 686 MOV [r15|QWORD + 668] y: -266267 size: DWORD  <||@
  Comment 3640 688 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3647 690 DEOPT info [bci:330]  <||@
  Comment 3647 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3652 [r14:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:591) [bci: 330, duringCall: false, rethrow: false]
              |0             |1          |2          |3  |4  |5          |6  |7  |8  |9               |10        |11         |12         |13         |14         |15         |16  |17  |18  |19  |20  |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |r14|QWORD[.]  |-          |r10|QWORD  |-  |-  |rbp|DWORD  |-  |-  |-  |stack:84|DWORD  |r9|DWORD  |r13|DWORD  |rax|DWORD  |rcx|DWORD  |rsi|DWORD  |r13|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-  
     stack:   |r8|DWORD      |rdx|DWORD  |           |   |   |           |   |   |   |                |          |           |           |           |           |           |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |     <||@
  Comment 3653 block B120 null  <||@
  Comment 3653 1430 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3653 1432 r14|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 3656 1434 rdx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@464852764]  <||@
  Comment 3656 {Object[d.a@464852764]}  <||@
  Comment 3666 1436 MOV [r15|QWORD + 668] y: -330763 size: DWORD  <||@
  Comment 3677 1438 MOV (x: [r15|QWORD + 680], y: rdx|QWORD[.]) size: QWORD  <||@
  Comment 3684 1440 DEOPT info [bci:914]  <||@
  Comment 3684 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3689 [r14:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6  |7  |8  |9          |10  |11  |12  |13  |14  |15  |16  |17         |18        |19         |20  |21  |22  |23  |24  |25        |26  |27         |28  |29         |30  |31         |32 
     locals:  |r14|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |r11|DWORD  |-   |-   |-   |-   |-   |-   |-   |r10|DWORD  |r9|DWORD  |rdi|DWORD  |-   |-   |-   |-   |-   |r8|QWORD  |-   |r13|QWORD  |-   |rcx|QWORD  |-   |rbx|QWORD  |-    <||@
  Comment 3690 block B82 null  <||@
  Comment 3690 890 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3690 892 r10|DWORD = MOVE input: int[-320027|0xfffffffffffb1de5]  <||@
  Comment 3696 894 rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 3700 896 rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 3704 898 r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 3709 900 rcx|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 3713 902 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 3716 904 JUMP ~[] destination: B82 -> B134  <||@
  Comment 3721 block B173 null  <||@
  Comment 3721 2190 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3721 2192 r14|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 3724 2194 MOV [r15|QWORD + 668] y: -316947 size: DWORD  <||@
  Comment 3735 2196 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3742 2198 DEOPT info [bci:1445]  <||@
  Comment 3742 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3747 [r14:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:766) [bci: 1445, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6  |7  |8  |9          |10  |11  |12  |13  |14  |15  |16  |17         |18        |19        |20           |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |r14|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |r10|DWORD  |-   |-   |-   |-   |-   |-   |-   |r11|DWORD  |r8|DWORD  |r9|DWORD  |long[0|0x0]  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-    <||@
  Comment 3748 block B22 null  <||@
  Comment 3748 182 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3748 184 r11|DWORD = MOVE input: int[-258579|0xfffffffffffc0ded]  <||@
  Comment 3754 186 rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 3758 190 JUMP ~[] destination: B22 -> B23  <||@
  Comment 3758 block B23 null  <||@
  Comment 3758 192 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3758 188 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 3761 194 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 3768 196 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3775 198 DEOPT info [bci:10, 74]  <||@
  Comment 3775 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3780 [r14:0]at java.lang.Math.max(Math.java:1252) [bci: 10, duringCall: false, rethrow: false]
              |0           |1 
     locals:  |-           |- 
     stack:   |int[0|0x0]  |  
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 74, duringCall: true, rethrow: false]
              |0             |1          |2          |3  |4         |5          |6          |7          |8  |9  |10  |11  |12  |13  |14  |15  |16  |17  |18  |19  |20  |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |r14|QWORD[.]  |rdx|DWORD  |r10|QWORD  |-  |r8|DWORD  |rbp|DWORD  |rbx|DWORD  |rdi|DWORD  |-  |-  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-    <||@
  Comment 3781 block B133 null  <||@
  Comment 3781 1608 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3781 1610 stack:68|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 3785 1612 stack:72|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 3789 1614 stack:76|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 3794 1616 rcx|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 3797 1618 r13|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 3800 1620 stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 3805 1622 r14|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 3808 1624 r10|DWORD = MOVE input: int[-282651|0xfffffffffffbafe5]  <||@
  Comment 3814 1626 rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 3818 1628 JUMP ~[] destination: B133 -> B134  <||@
  Comment 3823 block B30 null  <||@
  Comment 3823 284 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3823 286 r11|DWORD = MOVE input: int[-317459|0xfffffffffffb27ed]  <||@
  Comment 3829 288 rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 3833 290 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 3836 292 JUMP ~[] destination: B30 -> B178  <||@
  Comment 3836 block B178 null  <||@
  Comment 3836 2228 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3836 2230 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 3843 2232 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3850 2234 DEOPT info [bci:174]  <||@
  Comment 3850 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3855 [r14:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174, duringCall: false, rethrow: false]
              |0             |1          |2          |3  |4         |5          |6          |7          |8          |9  |10  |11  |12  |13  |14  |15  |16  |17  |18  |19  |20  |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |r14|QWORD[.]  |rdx|DWORD  |r10|QWORD  |-  |r8|DWORD  |rbp|DWORD  |rbx|DWORD  |rdi|DWORD  |rax|DWORD  |-  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-    <||@
  Comment 3856 block B157 null  <||@
  Comment 3856 1998 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3856 2000 r9|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 3861 2002 r8|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 3866 2004 r11|DWORD = MOVE stack:80|DWORD moveKind: DWORD  <||@
  Comment 3871 2006 rcx|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 3875 2008 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 3878 2010 MOV [r15|QWORD + 668] y: -306715 size: DWORD  <||@
  Comment 3889 2012 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3896 2014 DEOPT info [bci:1343]  <||@
  Comment 3896 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3901 [r8:0, r14:0, stack:8, stack:24, stack:64]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1343, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6  |7  |8  |9          |10  |11  |12  |13  |14  |15  |16  |17         |18        |19  |20  |21  |22         |23  |24  |25                  |26  |27                 |28           |29                  |30  |31  |32 
     locals:  |r14|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |rcx|DWORD  |-   |-   |-   |-   |-   |-   |-   |r10|DWORD  |r9|DWORD  |-   |-   |-   |r11|DWORD  |-   |-   |stack:104|QWORD[.]  |-   |stack:64|QWORD[.]  |r8|QWORD[.]  |stack:120|QWORD[.]  |-   |-   |-  
     stack:   |rax|DWORD     |   |   |   |   |   |   |   |   |           |    |    |    |    |    |    |    |           |          |    |    |    |           |    |    |                    |    |                   |             |                    |    |    |     <||@
  Comment 3902 block B166 null  <||@
  Comment 3902 2116 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3902 2118 r10|QWORD = MOVE stack:104|QWORD moveKind: QWORD  <||@
  Comment 3907 2120 rcx|DWORD = MOVE stack:80|DWORD moveKind: DWORD  <||@
  Comment 3911 2122 r9|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 3916 2124 r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3921 2126 MOV [r15|QWORD + 668] y: -331283 size: DWORD  <||@
  Comment 3932 2128 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3939 2130 DEOPT info [bci:1415]  <||@
  Comment 3939 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3944 [r14:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1415, duringCall: false, rethrow: false]
              |0             |1           |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17              |18        |19         |20         |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |r14|QWORD[.]  |-           |-  |-  |-  |-  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:92|DWORD  |r9|DWORD  |rcx|DWORD  |r10|QWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-  
     stack:   |r14|QWORD[.]  |int[0|0x0]  |   |   |   |   |   |   |   |                |    |    |    |    |    |    |    |                |          |           |           |    |    |    |    |    |    |    |    |    |    |    |     <||@
  Comment 3945 block B143 null  <||@
  Comment 3945 1800 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3945 1802 rcx|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 3949 1804 r8|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD  <||@
  Comment 3954 1806 rbx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 3959 1808 r9|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 3964 1810 rax|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 3969 1812 rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 3973 1814 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 3976 1816 MOV [r15|QWORD + 668] y: -322587 size: DWORD  <||@
  Comment 3987 1818 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3994 1820 DEOPT info [bci:1227]  <||@
  Comment 3994 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3999 [rax:0, rbx:0, r8:0, r9:0, r14:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1227, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5          |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17          |18         |19         |20  |21  |22         |23  |24  |25            |26  |27           |28            |29           |30  |31  |32 
     locals:  |r14|QWORD[.]  |-  |-  |-  |-  |rbp|DWORD  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |int[0|0x0]  |rcx|DWORD  |r11|DWORD  |-   |-   |r10|DWORD  |-   |-   |rax|QWORD[.]  |-   |r9|QWORD[.]  |rbx|QWORD[.]  |r8|QWORD[.]  |-   |-   |-    <||@
  Comment 4000 block B128 null  <||@
  Comment 4000 1548 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4000 1550 r14|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 4003 1552 MOV [r15|QWORD + 668] y: -333083 size: DWORD  <||@
  Comment 4014 1554 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4021 1556 DEOPT info [bci:914]  <||@
  Comment 4021 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4026 [r14:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6  |7  |8  |9          |10  |11  |12  |13  |14  |15  |16  |17         |18          |19          |20  |21  |22  |23  |24  |25         |26  |27         |28  |29         |30  |31         |32 
     locals:  |r14|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |r11|DWORD  |-   |-   |-   |-   |-   |-   |-   |r10|DWORD  |int[0|0x0]  |int[0|0x0]  |-   |-   |-   |-   |-   |rcx|QWORD  |-   |r13|QWORD  |-   |rdi|QWORD  |-   |rbx|QWORD  |-    <||@
  Comment 4027 block B177 null  <||@
  Comment 4027 2218 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4027 2220 r11|DWORD = MOVE input: int[-317715|0xfffffffffffb26ed]  <||@
  Comment 4033 2222 rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 4037 2224 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 4040 2226 JUMP ~[] destination: B177 -> B178  <||@
  Comment 4045 block B115 null  <||@
  Comment 4045 1394 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4045 1396 r14|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 4048 1398 rbp|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 4050 1400 MOV [r15|QWORD + 668] y: -298003 size: DWORD  <||@
  Comment 4061 1402 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4068 1404 DEOPT info [bci:889]  <||@
  Comment 4068 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4073 [r14:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 889, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5          |6  |7  |8  |9          |10  |11  |12  |13  |14  |15  |16  |17         |18        |19         |20  |21  |22  |23  |24  |25        |26  |27         |28  |29         |30  |31         |32 
     locals:  |r14|QWORD[.]  |-  |-  |-  |-  |rbp|DWORD  |-  |-  |-  |r11|DWORD  |-   |-   |-   |-   |-   |-   |-   |r10|DWORD  |r9|DWORD  |rdi|DWORD  |-   |-   |-   |-   |-   |r8|QWORD  |-   |r13|QWORD  |-   |rcx|QWORD  |-   |rbx|QWORD  |-    <||@
  Comment 4074 block B95 null  <||@
  Comment 4074 1088 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4074 1090 r11|DWORD = MOVE input: int[-279315|0xfffffffffffbbced]  <||@
  Comment 4080 1096 JUMP ~[] destination: B95 -> B96  <||@
  Comment 4085 block B132 null  <||@
  Comment 4085 1586 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4085 1588 stack:68|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 4089 1590 stack:72|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 4093 1592 stack:76|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 4098 1594 rcx|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 4101 1596 r13|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 4104 1598 stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 4109 1600 r14|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 4112 1602 r10|DWORD = MOVE input: int[-284699|0xfffffffffffba7e5]  <||@
  Comment 4118 1604 rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 4122 1606 JUMP ~[] destination: B132 -> B134  <||@
  Comment 4127 block B86 null  <||@
  Comment 4127 962 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4127 964 r10|DWORD = MOVE input: int[-272915|0xfffffffffffbd5ed]  <||@
  Comment 4133 966 rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 4137 968 rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 4141 970 r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 4146 972 rcx|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 4149 974 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 4152 976 JUMP ~[] destination: B86 -> B134  <||@
  Comment 4157 block B105 null  <||@
  Comment 4157 1264 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4157 1266 rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 4161 1268 rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 4165 1270 r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 4170 1272 stack:68|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 4174 1274 stack:72|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 4179 1276 stack:76|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 4184 1278 rcx|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 4188 1280 r13|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 4191 1282 stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 4196 1284 r14|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 4199 1286 r10|DWORD = MOVE input: int[-294419|0xfffffffffffb81ed]  <||@
  Comment 4205 1288 rbp|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 4207 1290 JUMP ~[] destination: B105 -> B134  <||@
  Comment 4212 block B36 null  <||@
  Comment 4212 348 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4212 350 r11|DWORD = MOVE input: int[-317971|0xfffffffffffb25ed]  <||@
  Comment 4218 352 rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 4222 354 r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 4227 356 JUMP ~[] destination: B36 -> B178  <||@
  Comment 4232 block B88 null  <||@
  Comment 4232 992 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4232 994 r10|DWORD = MOVE input: int[-273171|0xfffffffffffbd4ed]  <||@
  Comment 4238 996 rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 4242 998 rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 4246 1000 r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 4251 1002 rcx|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 4254 1004 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 4257 1006 JUMP ~[] destination: B88 -> B134  <||@
  Comment 4262 block B110 null  <||@
  Comment 4262 1322 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4262 1324 rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 4266 1326 rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 4270 1328 r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 4275 1330 stack:68|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 4279 1332 stack:72|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 4284 1334 stack:76|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 4289 1336 rcx|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 4293 1338 r13|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 4296 1340 stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 4301 1342 r14|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 4304 1344 r10|DWORD = MOVE input: int[-322075|0xfffffffffffb15e5]  <||@
  Comment 4310 1346 rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 4314 1348 JUMP ~[] destination: B110 -> B134  <||@
  Comment 4319 block B18 null  <||@
  Comment 4319 146 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4319 148 r11|DWORD = MOVE input: int[-262427|0xfffffffffffbfee5]  <||@
  Comment 4325 152 JUMP ~[] destination: B18 -> B23  <||@
  Comment 4330 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 4330 4  <||@
  Comment 4336 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 4336 5  <||@
  HexCodeFile>>> <|@
end_nmethod
