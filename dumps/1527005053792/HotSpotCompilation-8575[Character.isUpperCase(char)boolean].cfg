begin_compilation
  name " HotSpotCompilation-8575[java.lang.Character.isUpperCase(char)]"
  method "HotSpotCompilation-8575[java.lang.Character.isUpperCase(char)]"
  date 1527005159330
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v85 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v85  <|@  <|@
f <@~|@floating>@ <|@
tid i1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: i32 [0 - 65535] ⇈000000000000ffff
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v108 v40 v107 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i28 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.CharacterData.of(CharacterData.java:77) [bci: 4]
at java.lang.Character.getType(Character.java:6924) [bci: 1]
at java.lang.Character.isUpperCase(Character.java:5518) [bci: 1]
at java.lang.Character.isUpperCase(Character.java:5488) [bci: 1]
rawvalue: -256
stableDimension: 0
stamp: i32 [-256] ⇊00000000ffffff00 ⇈00000000ffffff00
stampKind: i32
value: int[-256|0xffffffffffffff00]
=== Inputs ===
=== Succesors ===
=== Usages ===
v40 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.CharacterData.of(CharacterData.java:77) [bci: 4]
at java.lang.Character.isUpperCase(Character.java:5519) [bci: 9]
at java.lang.Character.isUpperCase(Character.java:5488) [bci: 1]
stamp: void
=== Inputs ===
x: i1 
y: i28 
=== Succesors ===
=== Usages ===
v85 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: i1 y: i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.CharacterData.of(CharacterData.java:77) [bci: 4]
at java.lang.Character.getType(Character.java:6924) [bci: 1]
at java.lang.Character.isUpperCase(Character.java:5518) [bci: 1]
at java.lang.Character.isUpperCase(Character.java:5488) [bci: 1]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v40 
=== Succesors ===
trueSuccessor: v82 
falseSuccessor: v84 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v40 #trueSuccessor: v82 #falseSuccessor: v84  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.CharacterData.of(CharacterData.java:77) [bci: 4]
at java.lang.Character.getType(Character.java:6924) [bci: 1]
at java.lang.Character.isUpperCase(Character.java:5518) [bci: 1]
at java.lang.Character.isUpperCase(Character.java:5488) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: i105 
=== Usages ===
i105 i106 
=== Predecessor ===
v85 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i105  <|@  <|@
f <@~|@floating>@ <|@
tid a53 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.CharacterDataLatin1.getProperties(CharacterDataLatin1.java:72) [bci: 3]
at java.lang.CharacterDataLatin1.getType(CharacterDataLatin1.java:103) [bci: 2]
at java.lang.Character.getType(Character.java:6924) [bci: 5]
at java.lang.Character.isUpperCase(Character.java:5518) [bci: 1]
at java.lang.Character.isUpperCase(Character.java:5488) [bci: 1]
rawvalue: int[256]{1207963663, 1207963663, 1207963663, 1207963663, 1207963663, ...}
stableDimension: 0
stamp: a!# [I
stampKind: a -
value: Object[int[256]{1207963663, 1207963663, 1207963663, 1207963663, 1207963663, ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v107 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a53 
index: i1 
=== Succesors ===
=== Usages ===
i105 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a53 index: i1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i105 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.lang.CharacterDataLatin1.getProperties(CharacterDataLatin1.java:72) [bci: 7]
at java.lang.CharacterDataLatin1.getType(CharacterDataLatin1.java:103) [bci: 2]
at java.lang.Character.getType(Character.java:6924) [bci: 5]
at java.lang.Character.isUpperCase(Character.java:5518) [bci: 1]
at java.lang.Character.isUpperCase(Character.java:5488) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v82 
address: v107 
=== Succesors ===
next: v89 
=== Usages ===
i37 
=== Predecessor ===
v82 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v82 address: v107 #next: v89  <|@  <|@
f <@~|@floating>@ <|@
tid i36 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.CharacterDataLatin1.getType(CharacterDataLatin1.java:104) [bci: 7]
at java.lang.Character.getType(Character.java:6924) [bci: 5]
at java.lang.Character.isUpperCase(Character.java:5518) [bci: 1]
at java.lang.Character.isUpperCase(Character.java:5488) [bci: 1]
rawvalue: 31
stableDimension: 0
stamp: i32 [31] ⇊000000000000001f ⇈000000000000001f
stampKind: i32
value: int[31|0x1f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i37 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i37 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at java.lang.CharacterDataLatin1.getType(CharacterDataLatin1.java:104) [bci: 9]
at java.lang.Character.getType(Character.java:6924) [bci: 5]
at java.lang.Character.isUpperCase(Character.java:5518) [bci: 1]
at java.lang.Character.isUpperCase(Character.java:5488) [bci: 1]
stamp: i32 [0 - 31] ⇈000000000000001f
=== Inputs ===
x: i105 
y: i36 
=== Succesors ===
=== Usages ===
v15 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i105 y: i36  <|@  <|@
f <@~|@floating>@ <|@
tid i14 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Character.isUpperCase(Character.java:5518) [bci: 4]
at java.lang.Character.isUpperCase(Character.java:5488) [bci: 1]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v15 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.Character.isUpperCase(Character.java:5518) [bci: 5]
at java.lang.Character.isUpperCase(Character.java:5488) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i37 
y: i14 
=== Succesors ===
=== Usages ===
v89 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i37 y: i14  <|@  <|@
f <@*|@fixed>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isUpperCase(Character.java:5518) [bci: 5]
at java.lang.Character.isUpperCase(Character.java:5488) [bci: 1]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v15 
=== Succesors ===
trueSuccessor: v88 
falseSuccessor: v86 
=== Usages ===
=== Predecessor ===
i105 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v15 #trueSuccessor: v88 #falseSuccessor: v86  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isUpperCase(Character.java:5518) [bci: 5]
at java.lang.Character.isUpperCase(Character.java:5488) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v95 
=== Usages ===
=== Predecessor ===
v89 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v95  <|@  <|@
f <@~|@floating>@ <|@
tid i96 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -18451
stableDimension: 0
stamp: i32 [-18451] ⇊00000000ffffb7ed ⇈00000000ffffb7ed
stampKind: i32
value: int[-18451|0xffffffffffffb7ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i98 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v94 
=== Predecessor ===
v88 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isUpperCase(Character.java:5518) [bci: 5]
at java.lang.Character.isUpperCase(Character.java:5488) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: i106 
=== Usages ===
=== Predecessor ===
v89 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i106  <|@  <|@
f <@~|@floating>@ <|@
tid a58 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.CharacterDataLatin1.getPropertiesEx(CharacterDataLatin1.java:78) [bci: 3]
at java.lang.CharacterDataLatin1.isOtherUppercase(CharacterDataLatin1.java:88) [bci: 2]
at java.lang.Character.isUpperCase(Character.java:5519) [bci: 13]
at java.lang.Character.isUpperCase(Character.java:5488) [bci: 1]
rawvalue: char[256]{ ,  ,  ,  ,  , ...}
stableDimension: 0
stamp: a!# [C
stampKind: a -
value: Object[char[256]{ ,  ,  ,  ,  , ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v108 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a58 
index: i1 
=== Succesors ===
=== Usages ===
i106 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a58 index: i1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i106 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at java.lang.CharacterDataLatin1.getPropertiesEx(CharacterDataLatin1.java:78) [bci: 7]
at java.lang.CharacterDataLatin1.isOtherUppercase(CharacterDataLatin1.java:88) [bci: 2]
at java.lang.Character.isUpperCase(Character.java:5519) [bci: 13]
at java.lang.Character.isUpperCase(Character.java:5488) [bci: 1]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v82 
address: v108 
=== Succesors ===
next: v93 
=== Usages ===
i77 
=== Predecessor ===
v86 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v82 address: v108 #next: v93  <|@  <|@
f <@~|@floating>@ <|@
tid i77 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.lang.CharacterDataLatin1.getPropertiesEx(CharacterDataLatin1.java:78) [bci: 7]
at java.lang.CharacterDataLatin1.isOtherUppercase(CharacterDataLatin1.java:88) [bci: 2]
at java.lang.Character.isUpperCase(Character.java:5519) [bci: 13]
at java.lang.Character.isUpperCase(Character.java:5488) [bci: 1]
resultBits: 32
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i106 
=== Succesors ===
=== Usages ===
v47 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i106  <|@  <|@
f <@~|@floating>@ <|@
tid i46 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.CharacterDataLatin1.isOtherUppercase(CharacterDataLatin1.java:89) [bci: 7]
at java.lang.Character.isUpperCase(Character.java:5519) [bci: 13]
at java.lang.Character.isUpperCase(Character.java:5488) [bci: 1]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v47 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.CharacterDataLatin1.isOtherUppercase(CharacterDataLatin1.java:89) [bci: 9]
at java.lang.Character.isUpperCase(Character.java:5519) [bci: 13]
at java.lang.Character.isUpperCase(Character.java:5488) [bci: 1]
stamp: void
=== Inputs ===
x: i77 
y: i46 
=== Succesors ===
=== Usages ===
v93 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: i77 y: i46  <|@  <|@
f <@*|@fixed>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.CharacterDataLatin1.isOtherUppercase(CharacterDataLatin1.java:89) [bci: 9]
at java.lang.Character.isUpperCase(Character.java:5519) [bci: 13]
at java.lang.Character.isUpperCase(Character.java:5488) [bci: 1]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v47 
=== Succesors ===
trueSuccessor: v90 
falseSuccessor: v92 
=== Usages ===
=== Predecessor ===
i106 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v47 #trueSuccessor: v90 #falseSuccessor: v92  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.CharacterDataLatin1.isOtherUppercase(CharacterDataLatin1.java:89) [bci: 9]
at java.lang.Character.isUpperCase(Character.java:5519) [bci: 13]
at java.lang.Character.isUpperCase(Character.java:5488) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v6 
=== Usages ===
=== Predecessor ===
v93 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v6  <|@  <|@
f <@~|@floating>@ <|@
tid i23 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Character.isUpperCase(Character.java:5519) [bci: 16]
at java.lang.Character.isUpperCase(Character.java:5488) [bci: 1]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v6 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v6 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isUpperCase(Character.java:5488) [bci: 4]
stamp: void
=== Inputs ===
result: i23 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v90 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i23 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.CharacterDataLatin1.isOtherUppercase(CharacterDataLatin1.java:89) [bci: 9]
at java.lang.Character.isUpperCase(Character.java:5519) [bci: 13]
at java.lang.Character.isUpperCase(Character.java:5488) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v103 
=== Usages ===
=== Predecessor ===
v93 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v103  <|@  <|@
f <@~|@floating>@ <|@
tid i104 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -19987
stableDimension: 0
stamp: i32 [-19987] ⇊00000000ffffb1ed ⇈00000000ffffb1ed
stampKind: i32
value: int[-19987|0xffffffffffffb1ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i98 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v94 
=== Predecessor ===
v92 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.CharacterData.of(CharacterData.java:77) [bci: 4]
at java.lang.Character.getType(Character.java:6924) [bci: 1]
at java.lang.Character.isUpperCase(Character.java:5518) [bci: 1]
at java.lang.Character.isUpperCase(Character.java:5488) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v101 
=== Usages ===
=== Predecessor ===
v85 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v101  <|@  <|@
f <@~|@floating>@ <|@
tid i102 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -15891
stableDimension: 0
stamp: i32 [-15891] ⇊00000000ffffc1ed ⇈00000000ffffc1ed
stampKind: i32
value: int[-15891|0xffffffffffffc1ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i98 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v94 
=== Predecessor ===
v84 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" "B6" "B5" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i98 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-19987 - -15891] ⇊00000000ffff81ed ⇈00000000fffff7ed
valueDescription: i32
=== Inputs ===
merge: v94 
values: i96 i102 i104 
=== Succesors ===
=== Usages ===
v100 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v94 values: i96 i102 i104  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v95 v101 v103 
=== Succesors ===
next: v100 
=== Usages ===
i98 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v95 v101 v103 #next: v100  <|@  <|@
f <@~|@floating>@ <|@
tid a97 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v100 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<Character.isUpperCase(char)>
duringCall: false
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: Character.java
sourceLine: 5488
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i1 
=== Succesors ===
=== Usages ===
v100 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i1  <|@  <|@
f <@*|@fixed>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2 
actionAndReason: i98 
speculation: a97 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v94 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2 actionAndReason: i98 speculation: a97  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v85 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v85  <|@  <|@
f <@~|@floating>@ <|@
tid i1 <|@
result v0|DWORD <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: i32 [0 - 65535] ⇈000000000000ffff
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v108 v40 v107 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i28 <|@
result int[-256|0xffffffffffffff00] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.CharacterData.of(CharacterData.java:77) [bci: 4]
at java.lang.Character.getType(Character.java:6924) [bci: 1]
at java.lang.Character.isUpperCase(Character.java:5518) [bci: 1]
at java.lang.Character.isUpperCase(Character.java:5488) [bci: 1]
rawvalue: -256
stableDimension: 0
stamp: i32 [-256] ⇊00000000ffffff00 ⇈00000000ffffff00
stampKind: i32
value: int[-256|0xffffffffffffff00]
=== Inputs ===
=== Succesors ===
=== Usages ===
v40 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.CharacterData.of(CharacterData.java:77) [bci: 4]
at java.lang.Character.isUpperCase(Character.java:5519) [bci: 9]
at java.lang.Character.isUpperCase(Character.java:5488) [bci: 1]
stamp: void
=== Inputs ===
x: i1 
y: i28 
=== Succesors ===
=== Usages ===
v85 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: i1 y: i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.CharacterData.of(CharacterData.java:77) [bci: 4]
at java.lang.Character.getType(Character.java:6924) [bci: 1]
at java.lang.Character.isUpperCase(Character.java:5518) [bci: 1]
at java.lang.Character.isUpperCase(Character.java:5488) [bci: 1]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v40 
=== Succesors ===
trueSuccessor: v82 
falseSuccessor: v84 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v40 #trueSuccessor: v82 #falseSuccessor: v84  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6dbfde61 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST v0|DWORD y: -256 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.CharacterData.of(CharacterData.java:77) [bci: 4]
at java.lang.Character.getType(Character.java:6924) [bci: 1]
at java.lang.Character.isUpperCase(Character.java:5518) [bci: 1]
at java.lang.Character.isUpperCase(Character.java:5488) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: i105 
=== Usages ===
i105 i106 
=== Predecessor ===
v85 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i105  <|@  <|@
f <@~|@floating>@ <|@
tid a53 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.CharacterDataLatin1.getProperties(CharacterDataLatin1.java:72) [bci: 3]
at java.lang.CharacterDataLatin1.getType(CharacterDataLatin1.java:103) [bci: 2]
at java.lang.Character.getType(Character.java:6924) [bci: 5]
at java.lang.Character.isUpperCase(Character.java:5518) [bci: 1]
at java.lang.Character.isUpperCase(Character.java:5488) [bci: 1]
rawvalue: int[256]{1207963663, 1207963663, 1207963663, 1207963663, 1207963663, ...}
stableDimension: 0
stamp: a!# [I
stampKind: a -
value: Object[int[256]{1207963663, 1207963663, 1207963663, 1207963663, 1207963663, ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v107 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v107 <|@
result [v1|QWORD[.] + v0|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a53 
index: i1 
=== Succesors ===
=== Usages ===
i105 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a53 index: i1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i105 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.lang.CharacterDataLatin1.getProperties(CharacterDataLatin1.java:72) [bci: 7]
at java.lang.CharacterDataLatin1.getType(CharacterDataLatin1.java:103) [bci: 2]
at java.lang.Character.getType(Character.java:6924) [bci: 5]
at java.lang.Character.isUpperCase(Character.java:5518) [bci: 1]
at java.lang.Character.isUpperCase(Character.java:5488) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v82 
address: v107 
=== Succesors ===
next: v89 
=== Usages ===
i37 
=== Predecessor ===
v82 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v82 address: v107 #next: v89  <|@  <|@
f <@~|@floating>@ <|@
tid i36 <|@
result int[31|0x1f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.CharacterDataLatin1.getType(CharacterDataLatin1.java:104) [bci: 7]
at java.lang.Character.getType(Character.java:6924) [bci: 5]
at java.lang.Character.isUpperCase(Character.java:5518) [bci: 1]
at java.lang.Character.isUpperCase(Character.java:5488) [bci: 1]
rawvalue: 31
stableDimension: 0
stamp: i32 [31] ⇊000000000000001f ⇈000000000000001f
stampKind: i32
value: int[31|0x1f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i37 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i37 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at java.lang.CharacterDataLatin1.getType(CharacterDataLatin1.java:104) [bci: 9]
at java.lang.Character.getType(Character.java:6924) [bci: 5]
at java.lang.Character.isUpperCase(Character.java:5518) [bci: 1]
at java.lang.Character.isUpperCase(Character.java:5488) [bci: 1]
stamp: i32 [0 - 31] ⇈000000000000001f
=== Inputs ===
x: i105 
y: i36 
=== Succesors ===
=== Usages ===
v15 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i105 y: i36  <|@  <|@
f <@~|@floating>@ <|@
tid i14 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Character.isUpperCase(Character.java:5518) [bci: 4]
at java.lang.Character.isUpperCase(Character.java:5488) [bci: 1]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v15 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.Character.isUpperCase(Character.java:5518) [bci: 5]
at java.lang.Character.isUpperCase(Character.java:5488) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i37 
y: i14 
=== Succesors ===
=== Usages ===
v89 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i37 y: i14  <|@  <|@
f <@*|@fixed>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isUpperCase(Character.java:5518) [bci: 5]
at java.lang.Character.isUpperCase(Character.java:5488) [bci: 1]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v15 
=== Succesors ===
trueSuccessor: v88 
falseSuccessor: v86 
=== Usages ===
=== Predecessor ===
i105 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v15 #trueSuccessor: v88 #falseSuccessor: v86  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[256]{1207963663, 1207963663, 1207963663, 1207963663, 1207963663, ...}] <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: int[31|0x1f] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = AND (x: v2|DWORD, ~y: [v1|QWORD[.] + v0|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v3|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isUpperCase(Character.java:5518) [bci: 5]
at java.lang.Character.isUpperCase(Character.java:5488) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v95 
=== Usages ===
=== Predecessor ===
v89 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v95  <|@  <|@
f <@~|@floating>@ <|@
tid i96 <|@
result int[-18451|0xffffffffffffb7ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -18451
stableDimension: 0
stamp: i32 [-18451] ⇊00000000ffffb7ed ⇈00000000ffffb7ed
stampKind: i32
value: int[-18451|0xffffffffffffb7ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i98 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v94 
=== Predecessor ===
v88 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-18451|0xffffffffffffb7ed]] destination: B2 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isUpperCase(Character.java:5518) [bci: 5]
at java.lang.Character.isUpperCase(Character.java:5488) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: i106 
=== Usages ===
=== Predecessor ===
v89 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i106  <|@  <|@
f <@~|@floating>@ <|@
tid a58 <|@
result v4|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.CharacterDataLatin1.getPropertiesEx(CharacterDataLatin1.java:78) [bci: 3]
at java.lang.CharacterDataLatin1.isOtherUppercase(CharacterDataLatin1.java:88) [bci: 2]
at java.lang.Character.isUpperCase(Character.java:5519) [bci: 13]
at java.lang.Character.isUpperCase(Character.java:5488) [bci: 1]
rawvalue: char[256]{ ,  ,  ,  ,  , ...}
stableDimension: 0
stamp: a!# [C
stampKind: a -
value: Object[char[256]{ ,  ,  ,  ,  , ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v108 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v108 <|@
result [v4|QWORD[.] + v0|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a58 
index: i1 
=== Succesors ===
=== Usages ===
i106 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a58 index: i1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i106 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at java.lang.CharacterDataLatin1.getPropertiesEx(CharacterDataLatin1.java:78) [bci: 7]
at java.lang.CharacterDataLatin1.isOtherUppercase(CharacterDataLatin1.java:88) [bci: 2]
at java.lang.Character.isUpperCase(Character.java:5519) [bci: 13]
at java.lang.Character.isUpperCase(Character.java:5488) [bci: 1]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v82 
address: v108 
=== Succesors ===
next: v93 
=== Usages ===
i77 
=== Predecessor ===
v86 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v82 address: v108 #next: v93  <|@  <|@
f <@~|@floating>@ <|@
tid i77 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.lang.CharacterDataLatin1.getPropertiesEx(CharacterDataLatin1.java:78) [bci: 7]
at java.lang.CharacterDataLatin1.isOtherUppercase(CharacterDataLatin1.java:88) [bci: 2]
at java.lang.Character.isUpperCase(Character.java:5519) [bci: 13]
at java.lang.Character.isUpperCase(Character.java:5488) [bci: 1]
resultBits: 32
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i106 
=== Succesors ===
=== Usages ===
v47 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i106  <|@  <|@
f <@~|@floating>@ <|@
tid i46 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.CharacterDataLatin1.isOtherUppercase(CharacterDataLatin1.java:89) [bci: 7]
at java.lang.Character.isUpperCase(Character.java:5519) [bci: 13]
at java.lang.Character.isUpperCase(Character.java:5488) [bci: 1]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v47 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.CharacterDataLatin1.isOtherUppercase(CharacterDataLatin1.java:89) [bci: 9]
at java.lang.Character.isUpperCase(Character.java:5519) [bci: 13]
at java.lang.Character.isUpperCase(Character.java:5488) [bci: 1]
stamp: void
=== Inputs ===
x: i77 
y: i46 
=== Succesors ===
=== Usages ===
v93 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: i77 y: i46  <|@  <|@
f <@*|@fixed>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.CharacterDataLatin1.isOtherUppercase(CharacterDataLatin1.java:89) [bci: 9]
at java.lang.Character.isUpperCase(Character.java:5519) [bci: 13]
at java.lang.Character.isUpperCase(Character.java:5488) [bci: 1]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v47 
=== Succesors ===
trueSuccessor: v90 
falseSuccessor: v92 
=== Usages ===
=== Predecessor ===
i106 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v47 #trueSuccessor: v90 #falseSuccessor: v92  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[256]{ ,  ,  ,  ,  , ...}] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVZX [v4|QWORD[.] + v0|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST v5|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.CharacterDataLatin1.isOtherUppercase(CharacterDataLatin1.java:89) [bci: 9]
at java.lang.Character.isUpperCase(Character.java:5519) [bci: 13]
at java.lang.Character.isUpperCase(Character.java:5488) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v6 
=== Usages ===
=== Predecessor ===
v93 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v6  <|@  <|@
f <@~|@floating>@ <|@
tid i23 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Character.isUpperCase(Character.java:5519) [bci: 16]
at java.lang.Character.isUpperCase(Character.java:5488) [bci: 1]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v6 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v6 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isUpperCase(Character.java:5488) [bci: 4]
stamp: void
=== Inputs ===
result: i23 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v90 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i23 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.CharacterDataLatin1.isOtherUppercase(CharacterDataLatin1.java:89) [bci: 9]
at java.lang.Character.isUpperCase(Character.java:5519) [bci: 13]
at java.lang.Character.isUpperCase(Character.java:5488) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v103 
=== Usages ===
=== Predecessor ===
v93 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v103  <|@  <|@
f <@~|@floating>@ <|@
tid i104 <|@
result int[-19987|0xffffffffffffb1ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -19987
stableDimension: 0
stamp: i32 [-19987] ⇊00000000ffffb1ed ⇈00000000ffffb1ed
stampKind: i32
value: int[-19987|0xffffffffffffb1ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i98 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v94 
=== Predecessor ===
v92 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-19987|0xffffffffffffb1ed]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.CharacterData.of(CharacterData.java:77) [bci: 4]
at java.lang.Character.getType(Character.java:6924) [bci: 1]
at java.lang.Character.isUpperCase(Character.java:5518) [bci: 1]
at java.lang.Character.isUpperCase(Character.java:5488) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v101 
=== Usages ===
=== Predecessor ===
v85 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v101  <|@  <|@
f <@~|@floating>@ <|@
tid i102 <|@
result int[-15891|0xffffffffffffc1ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -15891
stableDimension: 0
stamp: i32 [-15891] ⇊00000000ffffc1ed ⇈00000000ffffc1ed
stampKind: i32
value: int[-15891|0xffffffffffffc1ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i98 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v94 
=== Predecessor ===
v84 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-15891|0xffffffffffffc1ed]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" "B6" "B5" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i98 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-19987 - -15891] ⇊00000000ffff81ed ⇈00000000fffff7ed
valueDescription: i32
=== Inputs ===
merge: v94 
values: i96 i102 i104 
=== Succesors ===
=== Usages ===
v100 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v94 values: i96 i102 i104  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v95 v101 v103 
=== Succesors ===
next: v100 
=== Usages ===
i98 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v95 v101 v103 #next: v100  <|@  <|@
f <@~|@floating>@ <|@
tid a97 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v100 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<Character.isUpperCase(char)>
duringCall: false
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: Character.java
sourceLine: 5488
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i1 
=== Succesors ===
=== Usages ===
v100 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i1  <|@  <|@
f <@*|@fixed>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2 
actionAndReason: i98 
speculation: a97 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v94 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2 actionAndReason: i98 speculation: a97  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v6|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Character.isUpperCase(Character.java:5488) [bci: 0]
locals: v0|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6dbfde61 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST v0|DWORD y: -256 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[256]{1207963663, 1207963663, 1207963663, 1207963663, 1207963663, ...}] <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: int[31|0x1f] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = AND (x: v2|DWORD, ~y: [v1|QWORD[.] + v0|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v3|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[256]{ ,  ,  ,  ,  , ...}] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVZX [v4|QWORD[.] + v0|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST v5|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-15891|0xffffffffffffc1ed]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" "B6" "B5" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v6|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Character.isUpperCase(Character.java:5488) [bci: 0]
locals: v0|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-18451|0xffffffffffffb7ed]] destination: B2 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-19987|0xffffffffffffb1ed]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: invokestatic  #28         // isUpperCase:(int)boolean
     4: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6dbfde61 slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction TEST rsi|DWORD y: -256 size: DWORD <|@ <|@
      nr   10  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   14  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[256]{1207963663, 1207963663, 1207963663, 1207963663, 1207963663, ...}] <|@ <|@
      nr   16  <|@ instruction r10|DWORD = MOVE input: int[31|0x1f] <|@ <|@
      nr   18  <|@ instruction r10|DWORD = AND (x: r10|DWORD, ~y: [rax|QWORD[.] + rsi|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   20  <|@ instruction CMP r10|DWORD y: 1 size: DWORD <|@ <|@
      nr   22  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   26  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[256]{ ,  ,  ,  ,  , ...}] <|@ <|@
      nr   28  <|@ instruction rax|DWORD = MOVZX [rax|QWORD[.] + rsi|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   30  <|@ instruction TEST rax|DWORD y: 2 size: DWORD <|@ <|@
      nr   32  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   38  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-15891|0xffffffffffffc1ed] // MoveResolver resolve mapping <|@ <|@
      nr   42  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" "B6" "B5" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   54  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr   56  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   58  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.lang.Character.isUpperCase(Character.java:5488) [bci: 0]
locals: rsi|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-18451|0xffffffffffffb7ed] // MoveResolver resolve mapping <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B2 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-19987|0xffffffffffffb1ed] // MoveResolver resolve mapping <|@ <|@
      nr   50  <|@ instruction JUMP ~[] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: invokestatic  #28         // isUpperCase:(int)boolean
     4: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6dbfde61 slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction TEST rsi|DWORD y: -256 size: DWORD <|@ <|@
      nr   10  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   14  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[256]{1207963663, 1207963663, 1207963663, 1207963663, 1207963663, ...}] <|@ <|@
      nr   16  <|@ instruction r10|DWORD = MOVE input: int[31|0x1f] <|@ <|@
      nr   18  <|@ instruction r10|DWORD = AND (x: r10|DWORD, ~y: [rax|QWORD[.] + rsi|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   20  <|@ instruction CMP r10|DWORD y: 1 size: DWORD <|@ <|@
      nr   22  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   26  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[256]{ ,  ,  ,  ,  , ...}] <|@ <|@
      nr   28  <|@ instruction rax|DWORD = MOVZX [rax|QWORD[.] + rsi|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   30  <|@ instruction TEST rax|DWORD y: 2 size: DWORD <|@ <|@
      nr   32  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   38  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-15891|0xffffffffffffc1ed] // MoveResolver resolve mapping <|@ <|@
      nr   42  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" "B6" "B5" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   54  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr   56  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   58  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.lang.Character.isUpperCase(Character.java:5488) [bci: 0]
locals: rsi|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-18451|0xffffffffffffb7ed] // MoveResolver resolve mapping <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B2 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-19987|0xffffffffffffb1ed] // MoveResolver resolve mapping <|@ <|@
      nr   50  <|@ instruction JUMP ~[] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: invokestatic  #28         // isUpperCase:(int)boolean
     4: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 89842400c0feff4883ec1848896c2410f7c600ffffff0f855200000048b8addeaddeaddeadde41ba1f000000442354b0104183fa010f844d00000048b8addeaddeaddeadde0fb7447010f7c0020000000f853a000000b800000000488b6c24104883c418850500000000c5f877c341baedc1ffff4589979c0200004d89a7a8020000e8000000009041baedb7ffffebe441baedb1ffffebdce80000000090e80000000090  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 3  <||@
  Comment 0 1  <||@
  Comment 11 block B0 null  <||@
  Comment 11 0 [rsi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 11 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 16 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6dbfde61 slotKind: QWORD  <||@
  Comment 16 8 TEST rsi|DWORD y: -256 size: DWORD  <||@
  Comment 22 10 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B6  <||@
  Comment 28 block B1 null  <||@
  Comment 28 12 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 28 14 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[256]{1207963663, 1207963663, 1207963663, 1207963663, 1207963663, ...}]  <||@
  Comment 28 {Object[int[256]{1207963663, 1207963663, 1207963663, 1207963663, 1207963663, ...}]}  <||@
  Comment 38 16 r10|DWORD = MOVE input: int[31|0x1f]  <||@
  Comment 44 18 r10|DWORD = AND (x: r10|DWORD, ~y: [rax|QWORD[.] + rsi|DWORD * 4 + 16]) size: DWORD  <||@
  Comment 49 20 CMP r10|DWORD y: 1 size: DWORD  <||@
  Comment 53 22 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3  <||@
  Comment 59 block B3 null  <||@
  Comment 59 24 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 59 26 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[256]{ ,  ,  ,  ,  , ...}]  <||@
  Comment 59 {Object[char[256]{ ,  ,  ,  ,  , ...}]}  <||@
  Comment 69 28 rax|DWORD = MOVZX [rax|QWORD[.] + rsi|DWORD * 2 + 16] size: DWORD  <||@
  Comment 74 30 TEST rax|DWORD y: 2 size: DWORD  <||@
  Comment 80 32 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5  <||@
  Comment 86 block B4 null  <||@
  Comment 86 34 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 86 36 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 91 38 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 100 12  <||@
  Comment 110 block B6 null  <||@
  Comment 110 40 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 110 -1 r10|DWORD = MOVE input: int[-15891|0xffffffffffffc1ed]  <||@
  Comment 116 42 JUMP ~[] destination: B6 -> B7  <||@
  Comment 116 block B7 null  <||@
  Comment 116 52 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 116 54 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 123 56 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 130 58 DEOPT info [bci:0]  <||@
  Comment 130 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 135 []at java.lang.Character.isUpperCase(Character.java:5488) [bci: 0, duringCall: false, rethrow: false]
              |0         
     locals:  |rsi|DWORD   <||@
  Comment 136 block B2 null  <||@
  Comment 136 44 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 136 -1 r10|DWORD = MOVE input: int[-18451|0xffffffffffffb7ed]  <||@
  Comment 142 46 JUMP ~[] destination: B2 -> B7  <||@
  Comment 144 block B5 null  <||@
  Comment 144 48 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 144 -1 r10|DWORD = MOVE input: int[-19987|0xffffffffffffb1ed]  <||@
  Comment 150 50 JUMP ~[] destination: B5 -> B7  <||@
  Comment 152 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 152 4  <||@
  Comment 158 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 158 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-8575[java.lang.Character.isUpperCase(char)]"
  method "HotSpotCompilation-8575[java.lang.Character.isUpperCase(char)]"
  date 1527005159374
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 10795c360 89842400c0feff4883ec1848896c2410f7c600ffffff0f855200000048b8600400c00600000041ba1f000000442354b0104183fa010f844d00000048b8d8b31ac0060000000fb7447010f7c0020000000f853a000000b800000000488b6c24104883c41885053c2cf3fcc5f877c341baedc1ffff4589979c0200004d89a7a8020000e817b2eafe9041baedb7ffffebe441baedb1ffffebdce823e22eff90e8fdb0eafe90f4f4f4f4  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 3  <||@
  Comment 0 1  <||@
  Comment 11 block B0 null  <||@
  Comment 11 0 [rsi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 11 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 16 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6dbfde61 slotKind: QWORD  <||@
  Comment 16 8 TEST rsi|DWORD y: -256 size: DWORD  <||@
  Comment 22 10 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B6  <||@
  Comment 28 block B1 null  <||@
  Comment 28 12 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 28 14 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[256]{1207963663, 1207963663, 1207963663, 1207963663, 1207963663, ...}]  <||@
  Comment 28 {Object[int[256]{1207963663, 1207963663, 1207963663, 1207963663, 1207963663, ...}]}  <||@
  Comment 38 16 r10|DWORD = MOVE input: int[31|0x1f]  <||@
  Comment 44 18 r10|DWORD = AND (x: r10|DWORD, ~y: [rax|QWORD[.] + rsi|DWORD * 4 + 16]) size: DWORD  <||@
  Comment 49 20 CMP r10|DWORD y: 1 size: DWORD  <||@
  Comment 53 22 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3  <||@
  Comment 59 block B3 null  <||@
  Comment 59 24 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 59 26 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[256]{ ,  ,  ,  ,  , ...}]  <||@
  Comment 59 {Object[char[256]{ ,  ,  ,  ,  , ...}]}  <||@
  Comment 69 28 rax|DWORD = MOVZX [rax|QWORD[.] + rsi|DWORD * 2 + 16] size: DWORD  <||@
  Comment 74 30 TEST rax|DWORD y: 2 size: DWORD  <||@
  Comment 80 32 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5  <||@
  Comment 86 block B4 null  <||@
  Comment 86 34 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 86 36 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 91 38 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 100 12  <||@
  Comment 110 block B6 null  <||@
  Comment 110 40 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 110 -1 r10|DWORD = MOVE input: int[-15891|0xffffffffffffc1ed]  <||@
  Comment 116 42 JUMP ~[] destination: B6 -> B7  <||@
  Comment 116 block B7 null  <||@
  Comment 116 52 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 116 54 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 123 56 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 130 58 DEOPT info [bci:0]  <||@
  Comment 130 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 135 []at java.lang.Character.isUpperCase(Character.java:5488) [bci: 0, duringCall: false, rethrow: false]
              |0         
     locals:  |rsi|DWORD   <||@
  Comment 136 block B2 null  <||@
  Comment 136 44 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 136 -1 r10|DWORD = MOVE input: int[-18451|0xffffffffffffb7ed]  <||@
  Comment 142 46 JUMP ~[] destination: B2 -> B7  <||@
  Comment 144 block B5 null  <||@
  Comment 144 48 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 144 -1 r10|DWORD = MOVE input: int[-19987|0xffffffffffffb1ed]  <||@
  Comment 150 50 JUMP ~[] destination: B5 -> B7  <||@
  Comment 152 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 152 4  <||@
  Comment 158 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 158 5  <||@
  HexCodeFile>>> <|@
end_nmethod
