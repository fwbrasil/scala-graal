begin_compilation
  name " HotSpotCompilation-10080[java.util.Collections$SetFromMap.<init>(Map)]"
  method "HotSpotCompilation-10080[java.util.Collections$SetFromMap.<init>(Map)]"
  date 1527005236018
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v250 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v250  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/Collections$SetFromMap;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v256 v254 ?11 j169 j236 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a -
uncheckedStamp: a Ljava/util/Map;
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v258 v255 a84 ?11 j229 v253 a142 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<Collections$SetFromMap.<init>(Map)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Collections.java
sourceLine: 5449
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 
=== Succesors ===
=== Usages ===
v155 v250 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2  <|@  <|@
f <@~|@floating>@ <|@
tid v258 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v250 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v250 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.Collections$SetFromMap.<init>(Collections.java:5450) [bci: 5]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v258 
=== Succesors ===
next: v108 
=== Usages ===
v244 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v258 #next: v108  <|@  <|@
f <@~|@floating>@ <|@
tid v243 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Collections$SetFromMap.<init>(Collections.java:5450) [bci: 5]
rawvalue: meta{HotSpotType<Ljava/util/IdentityHashMap;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/IdentityHashMap;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v244 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Collections$SetFromMap.<init>(Collections.java:5450) [bci: 5]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v250 
y: v243 
=== Succesors ===
=== Usages ===
v108 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v250 y: v243  <|@  <|@
f <@*|@fixed>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/IdentityHashMap; target_method=isEmpty target_method_class=Ljava/util/IdentityHashMap; position=at java.util.Collections$SetFromMap.<init>(Collections.java:5450) [bci: 5]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v244 
=== Succesors ===
trueSuccessor: v105 
falseSuccessor: v107 
=== Usages ===
=== Predecessor ===
v250 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v244 #trueSuccessor: v105 #falseSuccessor: v107  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/IdentityHashMap; target_method=isEmpty target_method_class=Ljava/util/IdentityHashMap; position=at java.util.Collections$SetFromMap.<init>(Collections.java:5450) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: i251 
=== Usages ===
=== Predecessor ===
v108 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i251  <|@  <|@
f <@~|@floating>@ <|@
tid v253 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i251 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i251 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: IdentityHashMap.size
nodeSourcePosition: at java.util.IdentityHashMap.isEmpty(IdentityHashMap.java:288) [bci: 1]
at java.util.Collections$SetFromMap.<init>(Collections.java:5450) [bci: 5]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v253 
=== Succesors ===
next: v112 
=== Usages ===
v53 
=== Predecessor ===
v105 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v253 #next: v112  <|@  <|@
f <@~|@floating>@ <|@
tid i7 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Collections$SetFromMap.<init>(Collections.java:5450) [bci: 10]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] â‡ˆ0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v53 a196 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.IdentityHashMap.isEmpty(IdentityHashMap.java:288) [bci: 4]
at java.util.Collections$SetFromMap.<init>(Collections.java:5450) [bci: 5]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i251 
y: i7 
=== Succesors ===
=== Usages ===
v112 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i251 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.IdentityHashMap.isEmpty(IdentityHashMap.java:288) [bci: 4]
at java.util.Collections$SetFromMap.<init>(Collections.java:5450) [bci: 5]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v53 
=== Succesors ===
trueSuccessor: v109 
falseSuccessor: v111 
=== Usages ===
=== Predecessor ===
i251 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v53 #trueSuccessor: v109 #falseSuccessor: v111  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.IdentityHashMap.isEmpty(IdentityHashMap.java:288) [bci: 4]
at java.util.Collections$SetFromMap.<init>(Collections.java:5450) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: a252 
=== Usages ===
=== Predecessor ===
v112 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a252  <|@  <|@
f <@~|@floating>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a252 v93 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a252 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractMap.keySet
nodeSourcePosition: at java.util.IdentityHashMap.keySet(IdentityHashMap.java:967) [bci: 1]
at java.util.Collections$SetFromMap.<init>(Collections.java:5453) [bci: 30]
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v255 
=== Succesors ===
next: v116 
=== Usages ===
v98 
=== Predecessor ===
v109 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v255 #next: v116  <|@  <|@
f <@~|@floating>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.IdentityHashMap.keySet(IdentityHashMap.java:968) [bci: 6]
at java.util.Collections$SetFromMap.<init>(Collections.java:5453) [bci: 30]
stamp: void
=== Inputs ===
value: a252 
=== Succesors ===
=== Usages ===
v116 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a252  <|@  <|@
f <@*|@fixed>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.IdentityHashMap.keySet(IdentityHashMap.java:968) [bci: 6]
at java.util.Collections$SetFromMap.<init>(Collections.java:5453) [bci: 30]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v98 
=== Succesors ===
trueSuccessor: v113 
falseSuccessor: v115 
=== Usages ===
=== Predecessor ===
a252 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v98 #trueSuccessor: v113 #falseSuccessor: v115  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.IdentityHashMap.keySet(IdentityHashMap.java:968) [bci: 6]
at java.util.Collections$SetFromMap.<init>(Collections.java:5453) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v87 
=== Usages ===
=== Predecessor ===
v116 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v87  <|@  <|@
f <@~|@floating>@ <|@
tid v254 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v87 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a84 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.Collections$SetFromMap.<init>(Collections.java:5452) [bci: 25]
op: Compress
stamp: n -
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v87 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: Collections$SetFromMap.m
nodeSourcePosition: at java.util.Collections$SetFromMap.<init>(Collections.java:5452) [bci: 25]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v254 
value: a84 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j169 
=== Usages ===
=== Predecessor ===
v113 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v254 value: a84 stateAfter: - lastLocationAccess: - #next: j169  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j169 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.Collections$SetFromMap.<init>(Collections.java:5452) [bci: 25]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v175 
=== Usages ===
j171 
=== Predecessor ===
v87 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v175  <|@  <|@
f <@~|@floating>@ <|@
tid i170 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.Collections$SetFromMap.<init>(Collections.java:5452) [bci: 25]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] â‡Š0000000000000009 â‡ˆ0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j171 j230 j237 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j171 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.Collections$SetFromMap.<init>(Collections.java:5452) [bci: 25]
stamp: i64 [0 - 36028797018963967] â‡ˆ007fffffffffffff
=== Inputs ===
x: j169 
y: i170 
=== Succesors ===
=== Usages ===
v259 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j169 y: i170  <|@  <|@
f <@~|@floating>@ <|@
tid j174 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.Collections$SetFromMap.<init>(Collections.java:5452) [bci: 25]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] â‡Š00000001171be000 â‡ˆ00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v259 v265 v266 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v259 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j171 
index: j174 
=== Succesors ===
=== Usages ===
v175 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j171 index: j174  <|@  <|@
f <@~|@floating>@ <|@
tid i176 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.Collections$SetFromMap.<init>(Collections.java:5452) [bci: 25]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] â‡ˆ0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v175 v233 v240 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v175 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.Collections$SetFromMap.<init>(Collections.java:5452) [bci: 25]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v259 
value: i176 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j183 
=== Usages ===
=== Predecessor ===
j169 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v259 value: i176 stateAfter: - lastLocationAccess: - #next: j183  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j183 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j203 
=== Usages ===
v260 v261 
=== Predecessor ===
v175 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j203  <|@  <|@
f <@~|@floating>@ <|@
tid v260 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j183 
index: - 
=== Succesors ===
=== Usages ===
j203 v205 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j183 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j203 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v260 
=== Succesors ===
next: j204 
=== Usages ===
j245 j209 v267 
=== Predecessor ===
j183 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v260 #next: j204  <|@  <|@
f <@~|@floating>@ <|@
tid v261 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j183 
index: - 
=== Succesors ===
=== Usages ===
j204 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j183 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j204 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v261 
=== Succesors ===
next: v191 
=== Usages ===
v188 
=== Predecessor ===
j203 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v261 #next: v191  <|@  <|@
f <@~|@floating>@ <|@
tid j94 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Collections$SetFromMap.<init>(Collections.java:5453) [bci: 35]
rawvalue: 16
stableDimension: 0
stamp: i64 [16] â‡Š0000000000000010 â‡ˆ0000000000000010
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j245 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j245 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j203 
y: j94 
=== Succesors ===
=== Usages ===
v188 v205 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j203 y: j94  <|@  <|@
f <@~|@floating>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j204 
y: j245 
=== Succesors ===
=== Usages ===
v191 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j204 y: j245  <|@  <|@
f <@*|@fixed>@ <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v188 
=== Succesors ===
trueSuccessor: v189 
falseSuccessor: v190 
=== Usages ===
=== Predecessor ===
j204 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v188 #trueSuccessor: v189 #falseSuccessor: v190  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a196 
=== Usages ===
=== Predecessor ===
v191 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a196  <|@  <|@
tid ?11 <|@
d <@d|@=== Debug Properties ===
bci: 28
code: ResolvedJavaMethodBytecode<Collections$SetFromMap.<init>(Map)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.Collections$SetFromMap.<init>(Collections.java:5452) [bci: 25]
rethrowException: false
sourceFile: Collections.java
sourceLine: 5453
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 
=== Succesors ===
=== Usages ===
a196 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2  <|@  <|@
f <@~|@floating>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a196 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i182 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1
stableDimension: 0
stamp: i32 [1] â‡Š0000000000000001 â‡ˆ0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
a196 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a196 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?11 
arguments: v180 i7 i182 
=== Succesors ===
next: j197 
=== Usages ===
j197 
=== Predecessor ===
v189 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?11 arguments: v180 i7 i182 #next: j197  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j197 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a196 
=== Succesors ===
next: v210 
=== Usages ===
j209 
=== Predecessor ===
a196 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a196 #next: v210  <|@  <|@
f <@*|@fixed>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v207 
=== Predecessor ===
j197 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v205 
=== Usages ===
=== Predecessor ===
v191 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v205  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v260 
value: j245 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v201 
=== Usages ===
=== Predecessor ===
v190 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v260 value: j245 stateAfter: - lastLocationAccess: - #next: v201  <|@  <|@
f <@~|@floating>@ <|@
tid v267 <|@
d <@d|@=== Debug Properties ===
displacement: 208
scale: Times1
stamp: void*
=== Inputs ===
base: j203 
index: - 
=== Succesors ===
=== Usages ===
v201 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j203 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v201 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v267 
=== Succesors ===
next: v208 
=== Usages ===
=== Predecessor ===
v205 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v267 #next: v208  <|@  <|@
f <@*|@fixed>@ <|@
tid v208 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v207 
=== Predecessor ===
v201 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j209 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v207 
values: j203 j197 
=== Succesors ===
=== Usages ===
v264 v257 a139 v263 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v207 values: j203 j197  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v208 v210 
=== Succesors ===
next: a139 
=== Usages ===
j209 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v208 v210 #next: a139  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a139 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j209 
=== Succesors ===
next: j222 
=== Usages ===
a145 
=== Predecessor ===
v207 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j209 #next: j222  <|@  <|@
f <@~|@floating>@ <|@
tid v215 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/IdentityHashMap$KeySet;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/IdentityHashMap$KeySet;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j216 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j216 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v215 
=== Succesors ===
=== Usages ===
v262 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v215  <|@  <|@
f <@~|@floating>@ <|@
tid v262 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j216 
index: - 
=== Succesors ===
=== Usages ===
j222 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j216 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j222 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v262 
=== Succesors ===
next: v223 
=== Usages ===
v223 
=== Predecessor ===
a139 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v262 #next: v223  <|@  <|@
f <@~|@floating>@ <|@
tid v263 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j209 
index: - 
=== Succesors ===
=== Usages ===
v223 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j209 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v223 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v263 
value: j222 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v226 
=== Usages ===
=== Predecessor ===
j222 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v263 value: j222 stateAfter: - lastLocationAccess: - #next: v226  <|@  <|@
f <@~|@floating>@ <|@
tid v264 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j209 
index: - 
=== Succesors ===
=== Usages ===
v226 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j209 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v248 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/IdentityHashMap$KeySet;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/IdentityHashMap$KeySet;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v226 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v264 
value: v248 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v144 
=== Usages ===
=== Predecessor ===
v223 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v264 value: v248 stateAfter: - lastLocationAccess: - #next: v144  <|@  <|@
f <@~|@floating>@ <|@
tid v257 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j209 
index: - 
=== Succesors ===
=== Usages ===
v144 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j209 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a142 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n -
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v144 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v144 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v257 
value: a142 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a145 
=== Usages ===
=== Predecessor ===
v226 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v257 value: a142 stateAfter: - lastLocationAccess: - #next: a145  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a145 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a139 
=== Succesors ===
next: v146 
=== Usages ===
a92 
=== Predecessor ===
v144 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a139 #next: v146  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v146 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v93 
=== Usages ===
=== Predecessor ===
a145 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v93  <|@  <|@
f <@~|@floating>@ <|@
tid a92 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.IdentityHashMap.keySet(IdentityHashMap.java:970) [bci: 21]
at java.util.Collections$SetFromMap.<init>(Collections.java:5453) [bci: 30]
op: Compress
stamp: n -
=== Inputs ===
value: a145 
=== Succesors ===
=== Usages ===
v93 v96 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a145  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: AbstractMap.keySet
nodeSourcePosition: at java.util.IdentityHashMap.keySet(IdentityHashMap.java:970) [bci: 21]
at java.util.Collections$SetFromMap.<init>(Collections.java:5453) [bci: 30]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v255 
value: a92 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j229 
=== Usages ===
=== Predecessor ===
v146 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v255 value: a92 stateAfter: - lastLocationAccess: - #next: j229  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j229 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.IdentityHashMap.keySet(IdentityHashMap.java:970) [bci: 21]
at java.util.Collections$SetFromMap.<init>(Collections.java:5453) [bci: 30]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a2 
=== Succesors ===
next: v233 
=== Usages ===
j230 
=== Predecessor ===
v93 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a2 #next: v233  <|@  <|@
f <@~|@floating>@ <|@
tid j230 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.IdentityHashMap.keySet(IdentityHashMap.java:970) [bci: 21]
at java.util.Collections$SetFromMap.<init>(Collections.java:5453) [bci: 30]
stamp: i64 [0 - 36028797018963967] â‡ˆ007fffffffffffff
=== Inputs ===
x: j229 
y: i170 
=== Succesors ===
=== Usages ===
v265 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j229 y: i170  <|@  <|@
f <@~|@floating>@ <|@
tid v265 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j230 
index: j174 
=== Succesors ===
=== Usages ===
v233 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j230 index: j174  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v233 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.IdentityHashMap.keySet(IdentityHashMap.java:970) [bci: 21]
at java.util.Collections$SetFromMap.<init>(Collections.java:5453) [bci: 30]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v265 
value: i176 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v96 
=== Usages ===
=== Predecessor ===
j229 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v265 value: i176 stateAfter: - lastLocationAccess: - #next: v96  <|@  <|@
f <@~|@floating>@ <|@
tid v256 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v96 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: Collections$SetFromMap.s
nodeSourcePosition: at java.util.Collections$SetFromMap.<init>(Collections.java:5453) [bci: 35]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v256 
value: a92 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j236 
=== Usages ===
=== Predecessor ===
v233 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v256 value: a92 stateAfter: - lastLocationAccess: - #next: j236  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j236 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.Collections$SetFromMap.<init>(Collections.java:5453) [bci: 35]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v240 
=== Usages ===
j237 
=== Predecessor ===
v96 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v240  <|@  <|@
f <@~|@floating>@ <|@
tid j237 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.Collections$SetFromMap.<init>(Collections.java:5453) [bci: 35]
stamp: i64 [0 - 36028797018963967] â‡ˆ007fffffffffffff
=== Inputs ===
x: j236 
y: i170 
=== Succesors ===
=== Usages ===
v266 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j236 y: i170  <|@  <|@
f <@~|@floating>@ <|@
tid v266 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j237 
index: j174 
=== Succesors ===
=== Usages ===
v240 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j237 index: j174  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v240 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.Collections$SetFromMap.<init>(Collections.java:5453) [bci: 35]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v266 
value: i176 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v97 
=== Usages ===
=== Predecessor ===
j236 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v266 value: i176 stateAfter: - lastLocationAccess: - #next: v97  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: ANY_LOCATION
nodeSourcePosition: at java.util.Collections$SetFromMap.<init>(Collections.java:5454) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v18 
=== Usages ===
=== Predecessor ===
v240 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v18  <|@  <|@
f <@*|@fixed>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Collections$SetFromMap.<init>(Collections.java:5454) [bci: 38]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v97 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.IdentityHashMap.keySet(IdentityHashMap.java:968) [bci: 6]
at java.util.Collections$SetFromMap.<init>(Collections.java:5453) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v160 
=== Usages ===
=== Predecessor ===
v116 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v160  <|@  <|@
f <@~|@floating>@ <|@
tid i161 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -23315
stableDimension: 0
stamp: i32 [-23315] â‡Š00000000ffffa4ed â‡ˆ00000000ffffa4ed
stampKind: i32
value: int[-23315|0xffffffffffffa4ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i153 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v149 
=== Predecessor ===
v115 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.IdentityHashMap.isEmpty(IdentityHashMap.java:288) [bci: 4]
at java.util.Collections$SetFromMap.<init>(Collections.java:5450) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v158 
=== Usages ===
=== Predecessor ===
v112 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v158  <|@  <|@
f <@~|@floating>@ <|@
tid i159 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -21267
stableDimension: 0
stamp: i32 [-21267] â‡Š00000000ffffaced â‡ˆ00000000ffffaced
stampKind: i32
value: int[-21267|0xffffffffffffaced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i153 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v149 
=== Predecessor ===
v111 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/IdentityHashMap; target_method=isEmpty target_method_class=Ljava/util/IdentityHashMap; position=at java.util.Collections$SetFromMap.<init>(Collections.java:5450) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v156 
=== Usages ===
=== Predecessor ===
v108 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v156  <|@  <|@
f <@~|@floating>@ <|@
tid i157 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -20275
stableDimension: 0
stamp: i32 [-20275] â‡Š00000000ffffb0cd â‡ˆ00000000ffffb0cd
stampKind: i32
value: int[-20275|0xffffffffffffb0cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i153 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v149 
=== Predecessor ===
v107 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" "B7" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i153 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-23315 - -19979] â‡Š00000000ffffa0c5 â‡ˆ00000000ffffbdfd
valueDescription: i32
=== Inputs ===
merge: v149 
values: i157 i159 i161 
=== Succesors ===
=== Usages ===
v155 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v149 values: i157 i159 i161  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v149 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v156 v158 v160 
=== Succesors ===
next: v155 
=== Usages ===
i153 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v156 v158 v160 #next: v155  <|@  <|@
f <@~|@floating>@ <|@
tid a152 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v155 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i153 
speculation: a152 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v149 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i153 speculation: a152  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v250 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v250  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/Collections$SetFromMap;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v256 v254 ?11 j169 j236 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a -
uncheckedStamp: a Ljava/util/Map;
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v258 v255 a84 ?11 j229 v253 a142 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<Collections$SetFromMap.<init>(Map)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Collections.java
sourceLine: 5449
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 
=== Succesors ===
=== Usages ===
v155 v250 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2  <|@  <|@
f <@~|@floating>@ <|@
tid v258 <|@
result [v1|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v250 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v250 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.Collections$SetFromMap.<init>(Collections.java:5450) [bci: 5]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v258 
=== Succesors ===
next: v108 
=== Usages ===
v244 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v258 #next: v108  <|@  <|@
f <@~|@floating>@ <|@
tid v243 <|@
result meta{HotSpotType<Ljava/util/IdentityHashMap;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Collections$SetFromMap.<init>(Collections.java:5450) [bci: 5]
rawvalue: meta{HotSpotType<Ljava/util/IdentityHashMap;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/IdentityHashMap;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v244 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v244 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Collections$SetFromMap.<init>(Collections.java:5450) [bci: 5]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v250 
y: v243 
=== Succesors ===
=== Usages ===
v108 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v250 y: v243  <|@  <|@
f <@*|@fixed>@ <|@
tid v108 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/IdentityHashMap; target_method=isEmpty target_method_class=Ljava/util/IdentityHashMap; position=at java.util.Collections$SetFromMap.<init>(Collections.java:5450) [bci: 5]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v244 
=== Succesors ===
trueSuccessor: v105 
falseSuccessor: v107 
=== Usages ===
=== Predecessor ===
v250 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v244 #trueSuccessor: v105 #falseSuccessor: v107  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7831c1fe slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Collections$SetFromMap.<init>(Collections.java:5449) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction CMP [v1|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/IdentityHashMap;, resolved>;compressed} state [bci:0] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/IdentityHashMap; target_method=isEmpty target_method_class=Ljava/util/IdentityHashMap; position=at java.util.Collections$SetFromMap.<init>(Collections.java:5450) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: i251 
=== Usages ===
=== Predecessor ===
v108 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i251  <|@  <|@
f <@~|@floating>@ <|@
tid v253 <|@
result [v1|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i251 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i251 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: IdentityHashMap.size
nodeSourcePosition: at java.util.IdentityHashMap.isEmpty(IdentityHashMap.java:288) [bci: 1]
at java.util.Collections$SetFromMap.<init>(Collections.java:5450) [bci: 5]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v253 
=== Succesors ===
next: v112 
=== Usages ===
v53 
=== Predecessor ===
v105 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v253 #next: v112  <|@  <|@
f <@~|@floating>@ <|@
tid i7 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Collections$SetFromMap.<init>(Collections.java:5450) [bci: 10]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] â‡ˆ0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v53 a196 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v53 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.IdentityHashMap.isEmpty(IdentityHashMap.java:288) [bci: 4]
at java.util.Collections$SetFromMap.<init>(Collections.java:5450) [bci: 5]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i251 
y: i7 
=== Succesors ===
=== Usages ===
v112 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i251 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v112 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.IdentityHashMap.isEmpty(IdentityHashMap.java:288) [bci: 4]
at java.util.Collections$SetFromMap.<init>(Collections.java:5450) [bci: 5]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v53 
=== Succesors ===
trueSuccessor: v109 
falseSuccessor: v111 
=== Usages ===
=== Predecessor ===
i251 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v53 #trueSuccessor: v109 #falseSuccessor: v111  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v1|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.IdentityHashMap.isEmpty(IdentityHashMap.java:288) [bci: 4]
at java.util.Collections$SetFromMap.<init>(Collections.java:5450) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: a252 
=== Usages ===
=== Predecessor ===
v112 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a252  <|@  <|@
f <@~|@floating>@ <|@
tid v255 <|@
result [v1|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a252 v93 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a252 <|@
result v2|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractMap.keySet
nodeSourcePosition: at java.util.IdentityHashMap.keySet(IdentityHashMap.java:967) [bci: 1]
at java.util.Collections$SetFromMap.<init>(Collections.java:5453) [bci: 30]
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v255 
=== Succesors ===
next: v116 
=== Usages ===
v98 
=== Predecessor ===
v109 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v255 #next: v116  <|@  <|@
f <@~|@floating>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.IdentityHashMap.keySet(IdentityHashMap.java:968) [bci: 6]
at java.util.Collections$SetFromMap.<init>(Collections.java:5453) [bci: 30]
stamp: void
=== Inputs ===
value: a252 
=== Succesors ===
=== Usages ===
v116 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a252  <|@  <|@
f <@*|@fixed>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.IdentityHashMap.keySet(IdentityHashMap.java:968) [bci: 6]
at java.util.Collections$SetFromMap.<init>(Collections.java:5453) [bci: 30]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v98 
=== Succesors ===
trueSuccessor: v113 
falseSuccessor: v115 
=== Usages ===
=== Predecessor ===
a252 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v98 #trueSuccessor: v113 #falseSuccessor: v115  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[.] = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|DWORD[.], y: v2|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.IdentityHashMap.keySet(IdentityHashMap.java:968) [bci: 6]
at java.util.Collections$SetFromMap.<init>(Collections.java:5453) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v87 
=== Usages ===
=== Predecessor ===
v116 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v87  <|@  <|@
f <@~|@floating>@ <|@
tid v254 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v87 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a84 <|@
result v3|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.Collections$SetFromMap.<init>(Collections.java:5452) [bci: 25]
op: Compress
stamp: n -
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v87 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: Collections$SetFromMap.m
nodeSourcePosition: at java.util.Collections$SetFromMap.<init>(Collections.java:5452) [bci: 25]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v254 
value: a84 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j169 
=== Usages ===
=== Predecessor ===
v113 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v254 value: a84 stateAfter: - lastLocationAccess: - #next: j169  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j169 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.Collections$SetFromMap.<init>(Collections.java:5452) [bci: 25]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v175 
=== Usages ===
j171 
=== Predecessor ===
v87 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v175  <|@  <|@
f <@~|@floating>@ <|@
tid i170 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.Collections$SetFromMap.<init>(Collections.java:5452) [bci: 25]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] â‡Š0000000000000009 â‡ˆ0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j171 j230 j237 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j171 <|@
result v4|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.Collections$SetFromMap.<init>(Collections.java:5452) [bci: 25]
stamp: i64 [0 - 36028797018963967] â‡ˆ007fffffffffffff
=== Inputs ===
x: j169 
y: i170 
=== Succesors ===
=== Usages ===
v259 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j169 y: i170  <|@  <|@
f <@~|@floating>@ <|@
tid j174 <|@
result v5|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.Collections$SetFromMap.<init>(Collections.java:5452) [bci: 25]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] â‡Š00000001171be000 â‡ˆ00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v259 v265 v266 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v259 <|@
result [v4|QWORD[*] + v5|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j171 
index: j174 
=== Succesors ===
=== Usages ===
v175 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j171 index: j174  <|@  <|@
f <@~|@floating>@ <|@
tid i176 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.Collections$SetFromMap.<init>(Collections.java:5452) [bci: 25]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] â‡ˆ0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v175 v233 v240 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v175 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.Collections$SetFromMap.<init>(Collections.java:5452) [bci: 25]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v259 
value: i176 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j183 
=== Usages ===
=== Predecessor ===
j169 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v259 value: i176 stateAfter: - lastLocationAccess: - #next: j183  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j183 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j203 
=== Usages ===
v260 v261 
=== Predecessor ===
v175 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j203  <|@  <|@
f <@~|@floating>@ <|@
tid v260 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j183 
index: - 
=== Succesors ===
=== Usages ===
j203 v205 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j183 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j203 <|@
result v6|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v260 
=== Succesors ===
next: j204 
=== Usages ===
j245 j209 v267 
=== Predecessor ===
j183 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v260 #next: j204  <|@  <|@
f <@~|@floating>@ <|@
tid v261 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j183 
index: - 
=== Succesors ===
=== Usages ===
j204 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j183 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j204 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v261 
=== Succesors ===
next: v191 
=== Usages ===
v188 
=== Predecessor ===
j203 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v261 #next: v191  <|@  <|@
f <@~|@floating>@ <|@
tid j94 <|@
result long[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Collections$SetFromMap.<init>(Collections.java:5453) [bci: 35]
rawvalue: 16
stableDimension: 0
stamp: i64 [16] â‡Š0000000000000010 â‡ˆ0000000000000010
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j245 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j245 <|@
result v7|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j203 
y: j94 
=== Succesors ===
=== Usages ===
v188 v205 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j203 y: j94  <|@  <|@
f <@~|@floating>@ <|@
tid v188 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j204 
y: j245 
=== Succesors ===
=== Usages ===
v191 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j204 y: j245  <|@  <|@
f <@*|@fixed>@ <|@
tid v191 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v188 
=== Succesors ===
trueSuccessor: v189 
falseSuccessor: v190 
=== Usages ===
=== Predecessor ===
j204 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v188 #trueSuccessor: v189 #falseSuccessor: v190  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@25b84133 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v3|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v4|QWORD[*] + v5|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = LEA [v6|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a196 
=== Usages ===
=== Predecessor ===
v191 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a196  <|@  <|@
tid ?11 <|@
d <@d|@=== Debug Properties ===
bci: 28
code: ResolvedJavaMethodBytecode<Collections$SetFromMap.<init>(Map)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.Collections$SetFromMap.<init>(Collections.java:5452) [bci: 25]
rethrowException: false
sourceFile: Collections.java
sourceLine: 5453
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 
=== Succesors ===
=== Usages ===
a196 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2  <|@  <|@
f <@~|@floating>@ <|@
tid v180 <|@
result v8|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a196 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i182 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1
stableDimension: 0
stamp: i32 [1] â‡Š0000000000000001 â‡ˆ0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
a196 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a196 <|@
result v9|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?11 
arguments: v180 i7 i182 
=== Succesors ===
next: j197 
=== Usages ===
j197 
=== Predecessor ===
v189 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?11 arguments: v180 i7 i182 #next: j197  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j197 <|@
result v9|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a196 
=== Succesors ===
next: v210 
=== Usages ===
j209 
=== Predecessor ===
a196 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a196 #next: v210  <|@  <|@
f <@*|@fixed>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v207 
=== Predecessor ===
j197 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v8|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Collections$SetFromMap.<init>(Collections.java:5453) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:28] <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v9|QWORD[.]] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v205 
=== Usages ===
=== Predecessor ===
v191 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v205  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v260 
value: j245 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v201 
=== Usages ===
=== Predecessor ===
v190 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v260 value: j245 stateAfter: - lastLocationAccess: - #next: v201  <|@  <|@
f <@~|@floating>@ <|@
tid v267 <|@
result [v6|QWORD + 208] <|@
d <@d|@=== Debug Properties ===
displacement: 208
scale: Times1
stamp: void*
=== Inputs ===
base: j203 
index: - 
=== Succesors ===
=== Usages ===
v201 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j203 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v201 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v267 
=== Succesors ===
next: v208 
=== Usages ===
=== Predecessor ===
v205 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v267 #next: v208  <|@  <|@
f <@*|@fixed>@ <|@
tid v208 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v207 
=== Predecessor ===
v201 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v7|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v6|QWORD + 208] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v6|QWORD] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j209 <|@
result v10|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v207 
values: j203 j197 
=== Succesors ===
=== Usages ===
v264 v257 a139 v263 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v207 values: j203 j197  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v208 v210 
=== Succesors ===
next: a139 
=== Usages ===
j209 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v208 v210 #next: a139  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a139 <|@
result v11|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j209 
=== Succesors ===
next: j222 
=== Usages ===
a145 
=== Predecessor ===
v207 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j209 #next: j222  <|@  <|@
f <@~|@floating>@ <|@
tid v215 <|@
result v12|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/IdentityHashMap$KeySet;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/IdentityHashMap$KeySet;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j216 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j216 <|@
result v12|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v215 
=== Succesors ===
=== Usages ===
v262 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v215  <|@  <|@
f <@~|@floating>@ <|@
tid v262 <|@
result [v12|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j216 
index: - 
=== Succesors ===
=== Usages ===
j222 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j216 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j222 <|@
result v13|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v262 
=== Succesors ===
next: v223 
=== Usages ===
v223 
=== Predecessor ===
a139 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v262 #next: v223  <|@  <|@
f <@~|@floating>@ <|@
tid v263 <|@
result [v10|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j209 
index: - 
=== Succesors ===
=== Usages ===
v223 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j209 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v223 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v263 
value: j222 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v226 
=== Usages ===
=== Predecessor ===
j222 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v263 value: j222 stateAfter: - lastLocationAccess: - #next: v226  <|@  <|@
f <@~|@floating>@ <|@
tid v264 <|@
result [v10|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j209 
index: - 
=== Succesors ===
=== Usages ===
v226 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j209 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v248 <|@
result meta{HotSpotType<Ljava/util/IdentityHashMap$KeySet;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/IdentityHashMap$KeySet;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/IdentityHashMap$KeySet;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v226 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v264 
value: v248 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v144 
=== Usages ===
=== Predecessor ===
v223 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v264 value: v248 stateAfter: - lastLocationAccess: - #next: v144  <|@  <|@
f <@~|@floating>@ <|@
tid v257 <|@
result [v10|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j209 
index: - 
=== Succesors ===
=== Usages ===
v144 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j209 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a142 <|@
result v14|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n -
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v144 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v144 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v257 
value: a142 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a145 
=== Usages ===
=== Predecessor ===
v226 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v257 value: a142 stateAfter: - lastLocationAccess: - #next: a145  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a145 <|@
result v11|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a139 
=== Succesors ===
next: v146 
=== Usages ===
a92 
=== Predecessor ===
v144 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a139 #next: v146  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v146 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v93 
=== Usages ===
=== Predecessor ===
a145 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v93  <|@  <|@
f <@~|@floating>@ <|@
tid a92 <|@
result v15|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.IdentityHashMap.keySet(IdentityHashMap.java:970) [bci: 21]
at java.util.Collections$SetFromMap.<init>(Collections.java:5453) [bci: 30]
op: Compress
stamp: n -
=== Inputs ===
value: a145 
=== Succesors ===
=== Usages ===
v93 v96 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a145  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: AbstractMap.keySet
nodeSourcePosition: at java.util.IdentityHashMap.keySet(IdentityHashMap.java:970) [bci: 21]
at java.util.Collections$SetFromMap.<init>(Collections.java:5453) [bci: 30]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v255 
value: a92 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j229 
=== Usages ===
=== Predecessor ===
v146 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v255 value: a92 stateAfter: - lastLocationAccess: - #next: j229  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j229 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.IdentityHashMap.keySet(IdentityHashMap.java:970) [bci: 21]
at java.util.Collections$SetFromMap.<init>(Collections.java:5453) [bci: 30]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a2 
=== Succesors ===
next: v233 
=== Usages ===
j230 
=== Predecessor ===
v93 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a2 #next: v233  <|@  <|@
f <@~|@floating>@ <|@
tid j230 <|@
result v16|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.IdentityHashMap.keySet(IdentityHashMap.java:970) [bci: 21]
at java.util.Collections$SetFromMap.<init>(Collections.java:5453) [bci: 30]
stamp: i64 [0 - 36028797018963967] â‡ˆ007fffffffffffff
=== Inputs ===
x: j229 
y: i170 
=== Succesors ===
=== Usages ===
v265 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j229 y: i170  <|@  <|@
f <@~|@floating>@ <|@
tid v265 <|@
result [v16|QWORD[*] + v5|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j230 
index: j174 
=== Succesors ===
=== Usages ===
v233 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j230 index: j174  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v233 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.IdentityHashMap.keySet(IdentityHashMap.java:970) [bci: 21]
at java.util.Collections$SetFromMap.<init>(Collections.java:5453) [bci: 30]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v265 
value: i176 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v96 
=== Usages ===
=== Predecessor ===
j229 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v265 value: i176 stateAfter: - lastLocationAccess: - #next: v96  <|@  <|@
f <@~|@floating>@ <|@
tid v256 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v96 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: Collections$SetFromMap.s
nodeSourcePosition: at java.util.Collections$SetFromMap.<init>(Collections.java:5453) [bci: 35]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v256 
value: a92 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j236 
=== Usages ===
=== Predecessor ===
v233 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v256 value: a92 stateAfter: - lastLocationAccess: - #next: j236  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j236 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.Collections$SetFromMap.<init>(Collections.java:5453) [bci: 35]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v240 
=== Usages ===
j237 
=== Predecessor ===
v96 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v240  <|@  <|@
f <@~|@floating>@ <|@
tid j237 <|@
result v17|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.Collections$SetFromMap.<init>(Collections.java:5453) [bci: 35]
stamp: i64 [0 - 36028797018963967] â‡ˆ007fffffffffffff
=== Inputs ===
x: j236 
y: i170 
=== Succesors ===
=== Usages ===
v266 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j236 y: i170  <|@  <|@
f <@~|@floating>@ <|@
tid v266 <|@
result [v17|QWORD[*] + v5|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j237 
index: j174 
=== Succesors ===
=== Usages ===
v240 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j237 index: j174  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v240 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.Collections$SetFromMap.<init>(Collections.java:5453) [bci: 35]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v266 
value: i176 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v97 
=== Usages ===
=== Predecessor ===
j236 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v266 value: i176 stateAfter: - lastLocationAccess: - #next: v97  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: ANY_LOCATION
nodeSourcePosition: at java.util.Collections$SetFromMap.<init>(Collections.java:5454) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v18 
=== Usages ===
=== Predecessor ===
v240 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v18  <|@  <|@
f <@*|@fixed>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Collections$SetFromMap.<init>(Collections.java:5454) [bci: 38]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v97 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v10|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = MOVE v10|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/IdentityHashMap$KeySet;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOV [v12|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v10|QWORD[*]], y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/IdentityHashMap$KeySet;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v14|DWORD[.] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@25b84133 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v10|QWORD[*] + 12], y: v14|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD[.] = COMPRESSPOINTER (input: v11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@25b84133 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + 12], y: v15|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[*] = SHR v1|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v16|QWORD[*] + v5|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v15|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v17|QWORD[*] + v5|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.IdentityHashMap.keySet(IdentityHashMap.java:968) [bci: 6]
at java.util.Collections$SetFromMap.<init>(Collections.java:5453) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v160 
=== Usages ===
=== Predecessor ===
v116 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v160  <|@  <|@
f <@~|@floating>@ <|@
tid i161 <|@
result int[-23315|0xffffffffffffa4ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -23315
stableDimension: 0
stamp: i32 [-23315] â‡Š00000000ffffa4ed â‡ˆ00000000ffffa4ed
stampKind: i32
value: int[-23315|0xffffffffffffa4ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i153 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v149 
=== Predecessor ===
v115 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-23315|0xffffffffffffa4ed]] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.IdentityHashMap.isEmpty(IdentityHashMap.java:288) [bci: 4]
at java.util.Collections$SetFromMap.<init>(Collections.java:5450) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v158 
=== Usages ===
=== Predecessor ===
v112 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v158  <|@  <|@
f <@~|@floating>@ <|@
tid i159 <|@
result int[-21267|0xffffffffffffaced] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -21267
stableDimension: 0
stamp: i32 [-21267] â‡Š00000000ffffaced â‡ˆ00000000ffffaced
stampKind: i32
value: int[-21267|0xffffffffffffaced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i153 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v149 
=== Predecessor ===
v111 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-21267|0xffffffffffffaced]] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/IdentityHashMap; target_method=isEmpty target_method_class=Ljava/util/IdentityHashMap; position=at java.util.Collections$SetFromMap.<init>(Collections.java:5450) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v156 
=== Usages ===
=== Predecessor ===
v108 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v156  <|@  <|@
f <@~|@floating>@ <|@
tid i157 <|@
result int[-20275|0xffffffffffffb0cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -20275
stableDimension: 0
stamp: i32 [-20275] â‡Š00000000ffffb0cd â‡ˆ00000000ffffb0cd
stampKind: i32
value: int[-20275|0xffffffffffffb0cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i153 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v149 
=== Predecessor ===
v107 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-20275|0xffffffffffffb0cd]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" "B7" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i153 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-23315 - -19979] â‡Š00000000ffffa0c5 â‡ˆ00000000ffffbdfd
valueDescription: i32
=== Inputs ===
merge: v149 
values: i157 i159 i161 
=== Succesors ===
=== Usages ===
v155 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v149 values: i157 i159 i161  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v149 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v156 v158 v160 
=== Succesors ===
next: v155 
=== Usages ===
i153 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v156 v158 v160 #next: v155  <|@  <|@
f <@~|@floating>@ <|@
tid a152 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v155 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i153 
speculation: a152 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v149 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i153 speculation: a152  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Collections$SetFromMap.<init>(Collections.java:5449) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7831c1fe slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Collections$SetFromMap.<init>(Collections.java:5449) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction CMP [v1|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/IdentityHashMap;, resolved>;compressed} state [bci:0] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v1|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[.] = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|DWORD[.], y: v2|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@25b84133 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v3|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v4|QWORD[*] + v5|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = LEA [v6|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v7|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v6|QWORD + 208] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v6|QWORD] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v10|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = MOVE v10|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/IdentityHashMap$KeySet;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOV [v12|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v10|QWORD[*]], y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/IdentityHashMap$KeySet;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v14|DWORD[.] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@25b84133 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v10|QWORD[*] + 12], y: v14|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD[.] = COMPRESSPOINTER (input: v11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@25b84133 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + 12], y: v15|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[*] = SHR v1|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v16|QWORD[*] + v5|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v15|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v17|QWORD[*] + v5|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v8|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Collections$SetFromMap.<init>(Collections.java:5453) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:28] <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v9|QWORD[.]] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-23315|0xffffffffffffa4ed]] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" "B7" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Collections$SetFromMap.<init>(Collections.java:5449) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-20275|0xffffffffffffb0cd]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-21267|0xffffffffffffaced]] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokespecial #0          // java.util.AbstractSet.<init>:()void
     4: aload_1       
     5: invokeinterface#1, 1       // java.util.Map.isEmpty:()boolean
    10: ifne          23
    13: new           #3          // java.lang.IllegalArgumentException
    16: dup           
    17: ldc           #4          // "Map is non-empty"
    19: invokespecial #2          // java.lang.IllegalArgumentException.<init>:(java.lang.String)void
    22: athrow        
    23: aload_0       
    24: aload_1       
    25: putfield      #3          // m:java.util.Map
    28: aload_0       
    29: aload_1       
    30: invokeinterface#4, 1       // java.util.Map.keySet:()java.util.Set
    35: putfield      #5          // s:java.util.Set
    38: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7831c1fe slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [r13:0, r14:0]
live-base-pointers: []
java.util.Collections$SetFromMap.<init>(Collections.java:5449) [bci: 0]
locals: r13|QWORD[.] r14|QWORD[.] 
>@ <|@ instruction CMP [r14|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/IdentityHashMap;, resolved>;compressed} state [bci:0] <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction CMP [r14|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr   18  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction rsi|DWORD[.] = MOV [r14|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   24  <|@ instruction TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr   26  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction rsi|DWORD[.] = COMPRESSPOINTER (input: r14|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@25b84133 encoding: base: 0 shift: 3 <|@ <|@
      nr   32  <|@ instruction MOV (x: [r13|QWORD[.] + 12], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr   34  <|@ instruction rsi|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   36  <|@ instruction r10|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   38  <|@ instruction MOVB (x: [rsi|QWORD[*] + r10|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   40  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   42  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr   44  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   46  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr   52  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 208] instr: 0 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   58  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/IdentityHashMap$KeySet;, resolved>} <|@ <|@
      nr   62  <|@ instruction rcx|QWORD = MOV [rcx|QWORD + 168] size: QWORD <|@ <|@
      nr   64  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD <|@ <|@
      nr   66  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/IdentityHashMap$KeySet;, resolved>;compressed} <|@ <|@
      nr   68  <|@ instruction rcx|DWORD[.] = COMPRESSPOINTER (input: r14|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@25b84133 encoding: base: 0 shift: 3 <|@ <|@
      nr   70  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr   72  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@25b84133 encoding: base: 0 shift: 3 <|@ <|@
      nr   74  <|@ instruction MOV (x: [r14|QWORD[.] + 12], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr   76  <|@ instruction r14|QWORD[*] = SHR r14|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   78  <|@ instruction MOVB (x: [r14|QWORD[*] + r10|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   80  <|@ instruction MOV (x: [r13|QWORD[.] + 16], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr   82  <|@ instruction r13|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   84  <|@ instruction MOVB (x: [r13|QWORD[*] + r10|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   86  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   90  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   94  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   96  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   98  <|@ st <@st|@reference-map: [r13:0, r14:0]
live-base-pointers: []
java.util.Collections$SetFromMap.<init>(Collections.java:5453) [bci: 28]
locals: r13|QWORD[.] r14|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:28] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD = MOVE input: long[4682670080|0x1171be000] // MoveResolver resolve mapping <|@ <|@
      nr  102  <|@ instruction JUMP ~[] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-23315|0xffffffffffffa4ed] // MoveResolver resolve mapping <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" "B7" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  118  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  120  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  122  <|@ st <@st|@reference-map: [r13:0, r14:0]
live-base-pointers: []
java.util.Collections$SetFromMap.<init>(Collections.java:5449) [bci: 0]
locals: r13|QWORD[.] r14|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-20275|0xffffffffffffb0cd] // MoveResolver resolve mapping <|@ <|@
      nr  110  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-21267|0xffffffffffffaced] // MoveResolver resolve mapping <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokespecial #0          // java.util.AbstractSet.<init>:()void
     4: aload_1       
     5: invokeinterface#1, 1       // java.util.Map.isEmpty:()boolean
    10: ifne          23
    13: new           #3          // java.lang.IllegalArgumentException
    16: dup           
    17: ldc           #4          // "Map is non-empty"
    19: invokespecial #2          // java.lang.IllegalArgumentException.<init>:(java.lang.String)void
    22: athrow        
    23: aload_0       
    24: aload_1       
    25: putfield      #3          // m:java.util.Map
    28: aload_0       
    29: aload_1       
    30: invokeinterface#4, 1       // java.util.Map.keySet:()java.util.Set
    35: putfield      #5          // s:java.util.Set
    38: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7831c1fe slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [r13:0, r14:0]
live-base-pointers: []
java.util.Collections$SetFromMap.<init>(Collections.java:5449) [bci: 0]
locals: r13|QWORD[.] r14|QWORD[.] 
>@ <|@ instruction CMP [r14|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/IdentityHashMap;, resolved>;compressed} state [bci:0] <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction CMP [r14|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr   18  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction rsi|DWORD[.] = MOV [r14|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   24  <|@ instruction TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr   26  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction rsi|DWORD[.] = COMPRESSPOINTER (input: r14|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@25b84133 encoding: base: 0 shift: 3 <|@ <|@
      nr   32  <|@ instruction MOV (x: [r13|QWORD[.] + 12], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr   34  <|@ instruction rsi|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   36  <|@ instruction r10|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   38  <|@ instruction MOVB (x: [rsi|QWORD[*] + r10|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   40  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   42  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr   44  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   46  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr   52  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 208] instr: 0 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   58  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/IdentityHashMap$KeySet;, resolved>} <|@ <|@
      nr   62  <|@ instruction rcx|QWORD = MOV [rcx|QWORD + 168] size: QWORD <|@ <|@
      nr   64  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD <|@ <|@
      nr   66  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/IdentityHashMap$KeySet;, resolved>;compressed} <|@ <|@
      nr   68  <|@ instruction rcx|DWORD[.] = COMPRESSPOINTER (input: r14|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@25b84133 encoding: base: 0 shift: 3 <|@ <|@
      nr   70  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr   72  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@25b84133 encoding: base: 0 shift: 3 <|@ <|@
      nr   74  <|@ instruction MOV (x: [r14|QWORD[.] + 12], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr   76  <|@ instruction r14|QWORD[*] = SHR r14|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   78  <|@ instruction MOVB (x: [r14|QWORD[*] + r10|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   80  <|@ instruction MOV (x: [r13|QWORD[.] + 16], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr   82  <|@ instruction r13|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   84  <|@ instruction MOVB (x: [r13|QWORD[*] + r10|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   86  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   90  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   94  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   96  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   98  <|@ st <@st|@reference-map: [r13:0, r14:0]
live-base-pointers: []
java.util.Collections$SetFromMap.<init>(Collections.java:5453) [bci: 28]
locals: r13|QWORD[.] r14|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:28] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD = MOVE input: long[4682670080|0x1171be000] // MoveResolver resolve mapping <|@ <|@
      nr  102  <|@ instruction JUMP ~[] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-23315|0xffffffffffffa4ed] // MoveResolver resolve mapping <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" "B7" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  118  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  120  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  122  <|@ st <@st|@reference-map: [r13:0, r14:0]
live-base-pointers: []
java.util.Collections$SetFromMap.<init>(Collections.java:5449) [bci: 0]
locals: r13|QWORD[.] r14|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-20275|0xffffffffffffb0cd] // MoveResolver resolve mapping <|@ <|@
      nr  110  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-21267|0xffffffffffffaced] // MoveResolver resolve mapping <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokespecial #0          // java.util.AbstractSet.<init>:()void
     4: aload_1       
     5: invokeinterface#1, 1       // java.util.Map.isEmpty:()boolean
    10: ifne          23
    13: new           #3          // java.lang.IllegalArgumentException
    16: dup           
    17: ldc           #4          // "Map is non-empty"
    19: invokespecial #2          // java.lang.IllegalArgumentException.<init>:(java.lang.String)void
    22: athrow        
    23: aload_0       
    24: aload_1       
    25: putfield      #3          // m:java.util.Map
    28: aload_0       
    29: aload_1       
    30: invokeinterface#4, 1       // java.util.Map.keySet:()java.util.Set
    35: putfield      #5          // s:java.util.Set
    38: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c24104c8bee4c8bf241817e08addeadde0f85f200000041837e14000f85ef000000418b760c85f60f85c1000000498bf648c1ee034189750c498bf548c1ee0949ba00e01b170100000046882416498b7760488d5610493b57700f8763000000498957600f1886d0000000488bd648b9addeaddeaddeadde488b89a800000048890ec74608addeadde498bce48c1e903894e0c48c1ea034189560c49c1ee09478824164189551049c1ed094788641500488b6c24104883c418850500000000c5f877c348beaddeaddeaddeaddeba00000000b901000000e80000000090488bf049ba00e01b1701000000e97cffffff41baeda4ffff4589979c0200004d89a7a8020000e8000000009041bacdb0ffffebe441baedacffffebdce80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7831c1fe slotKind: QWORD  <||@
  Comment 48 6 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 51 8 r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 54 10 CMP [r14|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/IdentityHashMap;, resolved>;compressed} state [bci:0]  <||@
  Comment 54 [r13:0, r14:0]at java.util.Collections$SetFromMap.<init>(Collections.java:5449) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |r13|QWORD[.]  |r14|QWORD[.]   <||@
  Comment 54 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 54 {meta{HotSpotType<Ljava/util/IdentityHashMap;, resolved>;compressed}}  <||@
  Comment 62 12 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B9  <||@
  Comment 68 block B1 null  <||@
  Comment 68 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 68 16 CMP [r14|QWORD[.] + 20] y: 0 size: DWORD  <||@
  Comment 73 18 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B8  <||@
  Comment 79 block B2 null  <||@
  Comment 79 20 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 79 22 rsi|DWORD[.] = MOV [r14|QWORD[.] + 12] size: DWORD  <||@
  Comment 83 24 TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 85 26 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B7  <||@
  Comment 91 block B3 null  <||@
  Comment 91 28 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 91 30 rsi|DWORD[.] = COMPRESSPOINTER (input: r14|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@25b84133 encoding: base: 0 shift: 3  <||@
  Comment 98 32 MOV (x: [r13|QWORD[.] + 12], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 102 34 rsi|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD  <||@
  Comment 109 36 r10|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 119 38 MOVB (x: [rsi|QWORD[*] + r10|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 123 40 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 127 42 rdx|QWORD = LEA [rsi|QWORD + 16] size: QWORD  <||@
  Comment 131 44 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 135 46 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B5  <||@
  Comment 141 block B5 null  <||@
  Comment 141 48 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 141 50 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 145 52 AMD64PREFETCH ~[rsi|QWORD + 208] instr: 0  <||@
  Comment 152 -1 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 152 54 JUMP ~[] destination: B5 -> B6  <||@
  Comment 152 block B6 null  <||@
  Comment 152 56 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 152 58 rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 155 60 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/IdentityHashMap$KeySet;, resolved>}  <||@
  Comment 155 {meta{HotSpotType<Ljava/util/IdentityHashMap$KeySet;, resolved>}}  <||@
  Comment 165 62 rcx|QWORD = MOV [rcx|QWORD + 168] size: QWORD  <||@
  Comment 172 64 MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD  <||@
  Comment 175 66 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/IdentityHashMap$KeySet;, resolved>;compressed}  <||@
  Comment 175 {meta{HotSpotType<Ljava/util/IdentityHashMap$KeySet;, resolved>;compressed}}  <||@
  Comment 182 68 rcx|DWORD[.] = COMPRESSPOINTER (input: r14|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@25b84133 encoding: base: 0 shift: 3  <||@
  Comment 189 70 MOV (x: [rsi|QWORD[*] + 12], y: rcx|DWORD[.]) size: DWORD  <||@
  Comment 192 72 rdx|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@25b84133 encoding: base: 0 shift: 3  <||@
  Comment 196 74 MOV (x: [r14|QWORD[.] + 12], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 200 76 r14|QWORD[*] = SHR r14|QWORD[.] y: 9 size: QWORD  <||@
  Comment 204 78 MOVB (x: [r14|QWORD[*] + r10|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 208 80 MOV (x: [r13|QWORD[.] + 16], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 212 82 r13|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD  <||@
  Comment 216 84 MOVB (x: [r13|QWORD[*] + r10|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 221 86 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 230 12  <||@
  Comment 240 block B4 null  <||@
  Comment 240 88 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 240 90 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 240 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 250 94 rdx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 255 96 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 260 98 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:28]  <||@
  Comment 260 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 265 [r13:0, r14:0]at java.util.Collections$SetFromMap.<init>(Collections.java:5453) [bci: 28, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |r13|QWORD[.]  |r14|QWORD[.]   <||@
  Comment 266 -1 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 269 -1 r10|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 279 102 JUMP ~[] destination: B4 -> B6  <||@
  Comment 284 block B7 null  <||@
  Comment 284 104 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 284 -1 r10|DWORD = MOVE input: int[-23315|0xffffffffffffa4ed]  <||@
  Comment 290 106 JUMP ~[] destination: B7 -> B10  <||@
  Comment 290 block B10 null  <||@
  Comment 290 116 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 290 118 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 297 120 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 304 122 DEOPT info [bci:0]  <||@
  Comment 304 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 309 [r13:0, r14:0]at java.util.Collections$SetFromMap.<init>(Collections.java:5449) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |r13|QWORD[.]  |r14|QWORD[.]   <||@
  Comment 310 block B9 null  <||@
  Comment 310 108 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 310 -1 r10|DWORD = MOVE input: int[-20275|0xffffffffffffb0cd]  <||@
  Comment 316 110 JUMP ~[] destination: B9 -> B10  <||@
  Comment 318 block B8 null  <||@
  Comment 318 112 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 318 -1 r10|DWORD = MOVE input: int[-21267|0xffffffffffffaced]  <||@
  Comment 324 114 JUMP ~[] destination: B8 -> B10  <||@
  Comment 326 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 326 4  <||@
  Comment 332 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 332 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-10080[java.util.Collections$SetFromMap.<init>(Map)]"
  method "HotSpotCompilation-10080[java.util.Collections$SetFromMap.<init>(Map)]"
  date 1527005236101
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 107cca600 448b560849c1e203493bc20f854fb8b3fe900f1f80000000000f1f800000000089842400c0feff4883ec1848896c24104c8bee4c8bf241817e08c4ff00f80f85f200000041837e14000f85ef000000418b760c85f60f85c1000000498bf648c1ee034189750c498bf548c1ee0949ba00e01b170100000046882416498b7760488d5610493b57700f8763000000498957600f1886d0000000488bd648b9a0352dc007000000488b89a800000048890ec74608b4a605f8498bce48c1e903894e0c48c1ea034189560c49c1ee09478824164189551049c1ed094788641500488b6c24104883c41885051a49bcfcc5f877c348be680b00c007000000ba00000000b901000000e8d7c62cff90488bf049ba00e01b1701000000e97cffffff41baeda4ffff4589979c0200004d89a7a8020000e8c9ceb3fe9041bacdb0ffffebe441baedacffffebdce8d5fef7fe90e8afcdb3fe90f4f4f4f4f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7831c1fe slotKind: QWORD  <||@
  Comment 48 6 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 51 8 r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 54 10 CMP [r14|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/IdentityHashMap;, resolved>;compressed} state [bci:0]  <||@
  Comment 54 [r13:0, r14:0]at java.util.Collections$SetFromMap.<init>(Collections.java:5449) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |r13|QWORD[.]  |r14|QWORD[.]   <||@
  Comment 54 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 54 {meta{HotSpotType<Ljava/util/IdentityHashMap;, resolved>;compressed}}  <||@
  Comment 62 12 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B9  <||@
  Comment 68 block B1 null  <||@
  Comment 68 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 68 16 CMP [r14|QWORD[.] + 20] y: 0 size: DWORD  <||@
  Comment 73 18 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B8  <||@
  Comment 79 block B2 null  <||@
  Comment 79 20 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 79 22 rsi|DWORD[.] = MOV [r14|QWORD[.] + 12] size: DWORD  <||@
  Comment 83 24 TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 85 26 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B7  <||@
  Comment 91 block B3 null  <||@
  Comment 91 28 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 91 30 rsi|DWORD[.] = COMPRESSPOINTER (input: r14|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@25b84133 encoding: base: 0 shift: 3  <||@
  Comment 98 32 MOV (x: [r13|QWORD[.] + 12], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 102 34 rsi|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD  <||@
  Comment 109 36 r10|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 119 38 MOVB (x: [rsi|QWORD[*] + r10|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 123 40 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 127 42 rdx|QWORD = LEA [rsi|QWORD + 16] size: QWORD  <||@
  Comment 131 44 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 135 46 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B5  <||@
  Comment 141 block B5 null  <||@
  Comment 141 48 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 141 50 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 145 52 AMD64PREFETCH ~[rsi|QWORD + 208] instr: 0  <||@
  Comment 152 -1 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 152 54 JUMP ~[] destination: B5 -> B6  <||@
  Comment 152 block B6 null  <||@
  Comment 152 56 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 152 58 rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 155 60 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/IdentityHashMap$KeySet;, resolved>}  <||@
  Comment 155 {meta{HotSpotType<Ljava/util/IdentityHashMap$KeySet;, resolved>}}  <||@
  Comment 165 62 rcx|QWORD = MOV [rcx|QWORD + 168] size: QWORD  <||@
  Comment 172 64 MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD  <||@
  Comment 175 66 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/IdentityHashMap$KeySet;, resolved>;compressed}  <||@
  Comment 175 {meta{HotSpotType<Ljava/util/IdentityHashMap$KeySet;, resolved>;compressed}}  <||@
  Comment 182 68 rcx|DWORD[.] = COMPRESSPOINTER (input: r14|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@25b84133 encoding: base: 0 shift: 3  <||@
  Comment 189 70 MOV (x: [rsi|QWORD[*] + 12], y: rcx|DWORD[.]) size: DWORD  <||@
  Comment 192 72 rdx|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@25b84133 encoding: base: 0 shift: 3  <||@
  Comment 196 74 MOV (x: [r14|QWORD[.] + 12], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 200 76 r14|QWORD[*] = SHR r14|QWORD[.] y: 9 size: QWORD  <||@
  Comment 204 78 MOVB (x: [r14|QWORD[*] + r10|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 208 80 MOV (x: [r13|QWORD[.] + 16], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 212 82 r13|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD  <||@
  Comment 216 84 MOVB (x: [r13|QWORD[*] + r10|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 221 86 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 230 12  <||@
  Comment 240 block B4 null  <||@
  Comment 240 88 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 240 90 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 240 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 250 94 rdx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 255 96 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 260 98 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:28]  <||@
  Comment 260 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 265 [r13:0, r14:0]at java.util.Collections$SetFromMap.<init>(Collections.java:5453) [bci: 28, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |r13|QWORD[.]  |r14|QWORD[.]   <||@
  Comment 266 -1 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 269 -1 r10|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 279 102 JUMP ~[] destination: B4 -> B6  <||@
  Comment 284 block B7 null  <||@
  Comment 284 104 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 284 -1 r10|DWORD = MOVE input: int[-23315|0xffffffffffffa4ed]  <||@
  Comment 290 106 JUMP ~[] destination: B7 -> B10  <||@
  Comment 290 block B10 null  <||@
  Comment 290 116 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 290 118 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 297 120 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 304 122 DEOPT info [bci:0]  <||@
  Comment 304 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 309 [r13:0, r14:0]at java.util.Collections$SetFromMap.<init>(Collections.java:5449) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |r13|QWORD[.]  |r14|QWORD[.]   <||@
  Comment 310 block B9 null  <||@
  Comment 310 108 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 310 -1 r10|DWORD = MOVE input: int[-20275|0xffffffffffffb0cd]  <||@
  Comment 316 110 JUMP ~[] destination: B9 -> B10  <||@
  Comment 318 block B8 null  <||@
  Comment 318 112 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 318 -1 r10|DWORD = MOVE input: int[-21267|0xffffffffffffaced]  <||@
  Comment 324 114 JUMP ~[] destination: B8 -> B10  <||@
  Comment 326 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 326 4  <||@
  Comment 332 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 332 5  <||@
  HexCodeFile>>> <|@
end_nmethod
