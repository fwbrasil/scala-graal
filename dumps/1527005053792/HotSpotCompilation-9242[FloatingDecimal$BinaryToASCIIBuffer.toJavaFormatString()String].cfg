begin_compilation
  name " HotSpotCompilation-9242[sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString()]"
  method "HotSpotCompilation-9242[sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString()]"
  date 1527005201439
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i1945 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: i1945  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Lsun/misc/FloatingDecimal$BinaryToASCIIBuffer;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v1965 ?216 ?6 ?334 v1966 ?94 v1967 ?119 ?111 v1970 ?126 ?58 v1971 v1972 ?145 ?75 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1972 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1945 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1945 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.firstDigitIndex
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 76]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1972 
=== Succesors ===
next: i1946 
=== Usages ===
j1289 i68 v675 v591 v492 v692 v1979 i133 v722 j1942 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1972 #next: i1946  <|@  <|@
f <@~|@floating>@ <|@
tid v1970 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1946 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1946 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.nDigits
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:914) [bci: 60]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1970 
=== Succesors ===
next: a1947 
=== Usages ===
v399 v251 v686 i65 j1316 i691 i398 i697 i590 i596 v129 i140 i118 j1938 
=== Predecessor ===
i1945 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1970 #next: a1947  <|@  <|@
f <@~|@floating>@ <|@
tid v1971 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1947 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1947 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.digits
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 72]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v1971 
=== Succesors ===
next: a1948 
=== Usages ===
v2042 a668 a1943 a1944 v1974 
=== Predecessor ===
i1946 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1971 #next: a1948  <|@  <|@
f <@~|@floating>@ <|@
tid v1965 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1948 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1948 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.buffer
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 2]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v1965 
=== Succesors ===
next: i1949 
=== Usages ===
a438 v2043 v1968 v1969 v1977 v1978 v2041 v2044 
=== Predecessor ===
a1947 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1965 #next: i1949  <|@  <|@
f <@~|@floating>@ <|@
tid v1967 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1949 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1949 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.decExponent
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 44]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1967 
=== Succesors ===
next: i1950 
=== Usages ===
i427 v96 i491 i428 v29 i497 i154 v35 i65 v251 ?58 i106 v399 i68 j1298 i933 v83 i156 
=== Predecessor ===
a1948 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1967 #next: i1950  <|@  <|@
f <@~|@floating>@ <|@
tid v1966 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1950 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1950 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.isNegative
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:908) [bci: 30]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: false
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
stateBefore: - 
guard: - 
address: v1966 
=== Succesors ===
next: v19 
=== Usages ===
i442 
=== Predecessor ===
i1949 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1966 #next: v19  <|@  <|@
f <@~|@floating>@ <|@
tid i442 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:908) [bci: 30]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i1950 
=== Succesors ===
=== Usages ===
v16 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1950  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 17]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v675 v16 v686 i346 v96 v229 v239 v1489 v1386 i347 v451 a1413 v531 v542 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:908) [bci: 33]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i442 
y: i9 
=== Succesors ===
=== Usages ===
v19 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i442 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid i14 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:906) [bci: 0]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i346 v29 i55 i303 i353 i133 i142 i295 i154 i168 v225 a1459 i401 a1350 i1389 i351 i347 i427 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 47]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1949 
y: i14 
=== Succesors ===
=== Usages ===
v32 v376 v150 v80 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1949 y: i14  <|@  <|@
f <@~|@floating>@ <|@
tid a438 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 2]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1948 
=== Succesors ===
=== Usages ===
?162 v1984 v1982 ?334 ?94 v1985 ?111 ?126 ?58 j1293 v1980 ?75 j1320 ?145 ?119 v1981 j1331 v1975 v1976 j1314 j1305 v1973 v1983 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1948  <|@  <|@
f <@~|@floating>@ <|@
tid v1968 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1948 
=== Succesors ===
=== Usages ===
i1951 i1953 i1954 i1957 i1959 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1948  <|@  <|@
f <@~|@floating>@ <|@
tid v1974 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1947 
=== Succesors ===
=== Usages ===
i1952 i1955 i1956 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1947  <|@  <|@
f <@~|@floating>@ <|@
tid v675 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1945 
y: i9 
=== Succesors ===
=== Usages ===
v678 v577 v478 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1945 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid j1752 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1753 j1814 j1865 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1065 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1842 v1804 j1795 v1855 v1754 j1787 j1708 j1848 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1388 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1437 v1506 v1577 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j935 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j936 j1817 j1868 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i214 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:969) [bci: 488]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
rawvalue: 3
stableDimension: 0
stamp: i32 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
i215 i294 i302 i357 i359 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1110 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1111 j1841 j1786 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1086 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1094 j1111 j1108 j1708 j1778 j1835 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1100 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 18
stableDimension: 0
stamp: i64 [18] ⇊0000000000000012 ⇈0000000000000012
stampKind: i64
value: long[18|0x12]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1102 j1104 j1112 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j456 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:909) [bci: 40]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
rawvalue: 16
stableDimension: 0
stamp: i64 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1103 j1853 j1802 j1112 j1102 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i128 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:945) [bci: 311]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v129 i204 i359 i212 i213 i308 i318 i351 i357 i353 a1350 a1459 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i888 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:930) [bci: 193]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
rawvalue: 48
stableDimension: 0
stamp: i16 [48] ⇊0000000000000030 ⇈0000000000000030
stampKind: i16
value: short[48|0x30]
=== Inputs ===
=== Succesors ===
=== Usages ===
v635 v646 v1882 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i885 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
rawvalue: 46
stableDimension: 0
stamp: i16 [46] ⇊000000000000002e ⇈000000000000002e
stampKind: i16
value: short[46|0x2e]
=== Inputs ===
=== Succesors ===
=== Usages ===
v526 v625 v654 v744 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?216 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString()>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 301
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - 
=== Succesors ===
=== Usages ===
?111 ?334 ?94 ?162 ?58 ?119 ?145 ?75 ?126 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 -  <|@  <|@
f <@~|@floating>@ <|@
tid i881 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:909) [bci: 40]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
rawvalue: 45
stableDimension: 0
stamp: i16 [45] ⇊000000000000002d ⇈000000000000002d
stampKind: i16
value: short[45|0x2d]
=== Inputs ===
=== Succesors ===
=== Usages ===
v460 v868 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a1183 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1186 v1227 a1215 a1215 v1253 v1194 v1263 v1235 v1206 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:908) [bci: 33]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.9997660380889991
=== Inputs ===
condition: v16 
=== Succesors ===
trueSuccessor: v17 
falseSuccessor: v18 
=== Usages ===
=== Predecessor ===
i1950 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v16 #trueSuccessor: v17 #falseSuccessor: v18  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607180311458467003
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v376 
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v376  <|@  <|@
f <@*|@fixed>@ <|@
tid v376 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 47]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.8239147472715149
=== Inputs ===
condition: v29 
=== Succesors ===
trueSuccessor: v374 
falseSuccessor: v375 
=== Usages ===
=== Predecessor ===
v17 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v29 #trueSuccessor: v374 #falseSuccessor: v375  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B44" 
    xhandlers
    flags 
    probability 4605594647573089601
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v374 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v377 
=== Usages ===
=== Predecessor ===
v376 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v377  <|@  <|@
f <@*|@fixed>@ <|@
tid v377 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v38 
=== Predecessor ===
v374 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B9" 
    xhandlers
    flags 
    probability 4595510675832045031
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 50]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v335 
=== Usages ===
=== Predecessor ===
v376 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v335  <|@  <|@
f <@*|@fixed>@ <|@
tid v335 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v332 
=== Predecessor ===
v375 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4552763695007289344
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:909) [bci: 36]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1951 
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1951  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString()>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 301
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - 
=== Succesors ===
=== Usages ===
v1186 i1951 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1951 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:909) [bci: 40]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v1968 
=== Succesors ===
next: v955 
=== Usages ===
v451 
=== Predecessor ===
v18 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v1968 #next: v955  <|@  <|@
f <@~|@floating>@ <|@
tid v451 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:909) [bci: 40]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1951 
y: i9 
=== Succesors ===
=== Usages ===
v955 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1951 y: i9  <|@  <|@
f <@*|@fixed>@ <|@
tid v955 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:909) [bci: 40]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v451 
=== Succesors ===
trueSuccessor: v954 
falseSuccessor: v952 
=== Usages ===
=== Predecessor ===
i1951 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v451 #trueSuccessor: v954 #falseSuccessor: v952  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v954 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:909) [bci: 40]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1186 
=== Usages ===
=== Predecessor ===
v955 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1186  <|@  <|@
f <@~|@floating>@ <|@
tid i1188 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -225051
stableDimension: 0
stamp: i32 [-225051] ⇊00000000fffc90e5 ⇈00000000fffc90e5
stampKind: i32
value: int[-225051|0xfffffffffffc90e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1186 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1186 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2 
actionAndReason: i1188 
speculation: a1183 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v954 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2 actionAndReason: i1188 speculation: a1183  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4552763695007289344
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v952 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:909) [bci: 40]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v460 
=== Usages ===
v460 
=== Predecessor ===
v955 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v460  <|@  <|@
f <@~|@floating>@ <|@
tid v1969 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1948 
=== Succesors ===
=== Usages ===
v460 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1948  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v460 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:909) [bci: 40]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v952 
address: v1969 
value: i881 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v32 
=== Usages ===
=== Predecessor ===
v952 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v952 address: v1969 value: i881 stateAfter: - lastLocationAccess: - #next: v32  <|@  <|@
f <@~|@floating>@ <|@
tid j1092 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 3
stableDimension: 0
stamp: i64 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i64
value: long[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1094 j1108 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 47]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.8239147472715149
=== Inputs ===
condition: v29 
=== Succesors ===
trueSuccessor: v30 
falseSuccessor: v31 
=== Usages ===
=== Predecessor ===
v460 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v29 #trueSuccessor: v30 #falseSuccessor: v31  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B44" 
    xhandlers
    flags 
    probability 4551243785039465259
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v37 
=== Usages ===
=== Predecessor ===
v32 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v37  <|@  <|@
f <@~|@floating>@ <|@
tid j462 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:914) [bci: 60]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
rawvalue: 20
stableDimension: 0
stamp: i64 [20] ⇊0000000000000014 ⇈0000000000000014
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1104 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v38 
=== Predecessor ===
v30 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4541204464633385812
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 50]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v333 
=== Usages ===
=== Predecessor ===
v32 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v333  <|@  <|@
f <@~|@floating>@ <|@
tid i427 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:916) [bci: 87]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i1949 
y: i14 
=== Succesors ===
=== Usages ===
i428 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1949 y: i14  <|@  <|@
f <@*|@fixed>@ <|@
tid v333 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v332 
=== Predecessor ===
v31 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B3" 
    successors "B10" "B43" 
    xhandlers
    flags 
    probability 4595512160119122984
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1108 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [2 - 3] ⇊0000000000000002 ⇈0000000000000003
valueDescription: i64
=== Inputs ===
merge: v332 
values: j1092 j1086 
=== Succesors ===
=== Usages ===
j1094 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v332 values: j1092 j1086  <|@  <|@
f <@~|@floating>@ <|@
tid i346 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v332 
values: i14 i9 
=== Succesors ===
=== Usages ===
i398 v1992 v498 v597 i347 ?334 v1988 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v332 values: i14 i9  <|@  <|@
f <@~|@floating>@ <|@
tid i353 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [1 - 2] ⇈0000000000000003
valueDescription: i32
=== Inputs ===
merge: v332 
values: i128 i14 
=== Succesors ===
=== Usages ===
i351 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v332 values: i128 i14  <|@  <|@
f <@~|@floating>@ <|@
tid i359 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [2 - 3] ⇊0000000000000002 ⇈0000000000000003
valueDescription: i32
=== Inputs ===
merge: v332 
values: i214 i128 
=== Succesors ===
=== Usages ===
i357 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v332 values: i214 i128  <|@  <|@
f <@~|@floating>@ <|@
tid i428 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v332 
values: i427 i1949 
=== Succesors ===
=== Usages ===
i55 v1973 v518 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v332 values: i427 i1949  <|@  <|@
f <@~|@floating>@ <|@
tid j1112 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [16 - 18] ⇊0000000000000010 ⇈0000000000000012
valueDescription: i64
=== Inputs ===
merge: v332 
values: j1100 j456 
=== Succesors ===
=== Usages ===
j1102 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v332 values: j1100 j456  <|@  <|@
f <@~|@floating>@ <|@
tid j1111 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [2 - 4] ⇈0000000000000006
valueDescription: i64
=== Inputs ===
merge: v332 
values: j1110 j1086 
=== Succesors ===
=== Usages ===
j1103 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v332 values: j1110 j1086  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v332 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v333 v335 
=== Succesors ===
next: v41 
=== Usages ===
j1108 i346 i353 i359 i428 j1112 j1111 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v333 v335 #next: v41  <|@  <|@
f <@~|@floating>@ <|@
tid i34 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 54]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
rawvalue: 8
stableDimension: 0
stamp: i32 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
v35 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 56]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1949 
y: i34 
=== Succesors ===
=== Usages ===
v41 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1949 y: i34  <|@  <|@
f <@*|@fixed>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 56]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.9952836455427129
=== Inputs ===
condition: v35 
=== Succesors ===
trueSuccessor: v36 
falseSuccessor: v40 
=== Usages ===
=== Predecessor ===
v332 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v35 #trueSuccessor: v36 #falseSuccessor: v40  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B29" 
    xhandlers
    flags 
    probability 4595482238906964772
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:914) [bci: 59]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2043 
=== Usages ===
=== Predecessor ===
v41 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2043  <|@  <|@
tid ?334 <|@
d <@d|@=== Debug Properties ===
bci: 43
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 912
stackSize: 0
=== Inputs ===
outerFrameState: ?216 
values: a1 a438 i346 - - 
=== Succesors ===
=== Usages ===
v1263 v2043 i1952 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?216 values: a1 a438 i346 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2043 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?334 
object: a1948 
=== Succesors ===
next: i1952 
=== Usages ===
=== Predecessor ===
v36 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?334 object: a1948 #next: i1952  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1952 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 60]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?334 
guard: - 
address: v1974 
=== Succesors ===
next: i1953 
=== Usages ===
i547 i491 i590 
=== Predecessor ===
v2043 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?334 guard: - address: v1974 #next: i1953  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1953 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 85]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1968 
=== Succesors ===
next: v254 
=== Usages ===
i596 v618 v627 i497 v518 i553 
=== Predecessor ===
i1952 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1968 #next: v254  <|@  <|@
f <@~|@floating>@ <|@
tid v251 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:914) [bci: 67]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1949 
y: i1946 
=== Succesors ===
=== Usages ===
v254 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1949 y: i1946  <|@  <|@
f <@~|@floating>@ <|@
tid a1944 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 257]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1947 
=== Succesors ===
=== Usages ===
j1288 j1300 j1312 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1947  <|@  <|@
f <@~|@floating>@ <|@
tid j1289 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1945 
=== Succesors ===
=== Usages ===
v1991 v1987 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1945  <|@  <|@
f <@*|@fixed>@ <|@
tid v254 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:914) [bci: 67]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.44783436248413755
=== Inputs ===
condition: v251 
=== Succesors ===
trueSuccessor: v252 
falseSuccessor: v253 
=== Usages ===
=== Predecessor ===
i1953 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v251 #trueSuccessor: v252 #falseSuccessor: v253  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B28" 
    xhandlers
    flags 
    probability 4590319868800513148
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v252 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 9]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:914) [bci: 67]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v967 
=== Usages ===
=== Predecessor ===
v254 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v967  <|@  <|@
f <@~|@floating>@ <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i428 
y: i1953 
=== Succesors ===
=== Usages ===
v967 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i428 y: i1953  <|@  <|@
f <@*|@fixed>@ <|@
tid v967 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v518 
=== Succesors ===
trueSuccessor: v964 
falseSuccessor: v966 
=== Usages ===
=== Predecessor ===
v252 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v518 #trueSuccessor: v964 #falseSuccessor: v966  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4590319868800513148
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v964 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v478 
=== Usages ===
v526 
=== Predecessor ===
v967 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v478  <|@  <|@
f <@~|@floating>@ <|@
tid i1275 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -128865
stableDimension: 0
stamp: i32 [-128865] ⇊00000000fffe089f ⇈00000000fffe089f
stampKind: i32
value: int[-128865|0xfffffffffffe089f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1261 i1261 i1261 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v478 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v675 
=== Succesors ===
trueSuccessor: v477 
falseSuccessor: v476 
=== Usages ===
=== Predecessor ===
v964 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v675 #trueSuccessor: v477 #falseSuccessor: v476  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B42" 
    xhandlers
    flags 
    probability 4560378196887377184
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v477 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1274 
=== Usages ===
=== Predecessor ===
v478 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1274  <|@  <|@
f <@*|@fixed>@ <|@
tid v1274 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1258 
=== Predecessor ===
v477 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590263314319139666
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v476 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v496 
=== Usages ===
=== Predecessor ===
v478 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v496  <|@  <|@
f <@~|@floating>@ <|@
tid i491 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 65]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i1952 
y: i1949 
=== Succesors ===
=== Usages ===
v492 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i1952 y: i1949  <|@  <|@
f <@~|@floating>@ <|@
tid v492 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i491 
y: i1945 
=== Succesors ===
=== Usages ===
v496 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i491 y: i1945  <|@  <|@
f <@*|@fixed>@ <|@
tid v496 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 77]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v492 
=== Succesors ===
trueSuccessor: v495 
falseSuccessor: v493 
=== Usages ===
=== Predecessor ===
v476 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v492 #trueSuccessor: v495 #falseSuccessor: v493  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B42" 
    xhandlers
    flags 
    probability 4560305807151219127
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v495 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1279 
=== Usages ===
=== Predecessor ===
v496 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1279  <|@  <|@
f <@*|@fixed>@ <|@
tid v1279 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1258 
=== Predecessor ===
v495 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4590207325382579919
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v493 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 80]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v502 
=== Usages ===
=== Predecessor ===
v496 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v502  <|@  <|@
f <@~|@floating>@ <|@
tid i497 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i1953 
y: i1949 
=== Succesors ===
=== Usages ===
v498 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i1953 y: i1949  <|@  <|@
f <@~|@floating>@ <|@
tid v498 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i497 
y: i346 
=== Succesors ===
=== Usages ===
v502 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i497 y: i346  <|@  <|@
f <@*|@fixed>@ <|@
tid v502 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v498 
=== Succesors ===
trueSuccessor: v501 
falseSuccessor: v499 
=== Usages ===
=== Predecessor ===
v493 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v498 #trueSuccessor: v501 #falseSuccessor: v499  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B42" 
    xhandlers
    flags 
    probability 4560234141312422651
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v501 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1278 
=== Usages ===
=== Predecessor ===
v502 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1278  <|@  <|@
f <@*|@fixed>@ <|@
tid v1278 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1258 
=== Predecessor ===
v501 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4590151896335385769
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v499 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1288 
=== Usages ===
=== Predecessor ===
v502 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1288  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1288 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i64
=== Inputs ===
object: a1944 
=== Succesors ===
next: j1293 
=== Usages ===
v1987 
=== Predecessor ===
v499 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a1944 #next: j1293  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1293 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i64
=== Inputs ===
object: a438 
=== Succesors ===
next: v1299 
=== Usages ===
v1988 
=== Predecessor ===
j1288 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a438 #next: v1299  <|@  <|@
f <@~|@floating>@ <|@
tid v1987 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j1288 
index: j1289 
=== Succesors ===
=== Usages ===
v1299 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1288 index: j1289  <|@  <|@
f <@~|@floating>@ <|@
tid v1988 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j1293 
index: i346 
=== Succesors ===
=== Usages ===
v1299 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1293 index: i346  <|@  <|@
f <@~|@floating>@ <|@
tid j1298 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1949 
=== Succesors ===
=== Usages ===
v1299 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1949  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1299 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: charArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v1987 v1988 j1298 
=== Succesors ===
next: v526 
=== Usages ===
=== Predecessor ===
j1293 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v1987 v1988 j1298 #next: v526  <|@  <|@
f <@~|@floating>@ <|@
tid v1973 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a438 
index: i428 
=== Succesors ===
=== Usages ===
v526 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a438 index: i428  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v526 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v964 
address: v1973 
value: i885 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v534 
=== Usages ===
=== Predecessor ===
v1299 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v964 address: v1973 value: i885 stateAfter: - lastLocationAccess: - #next: v534  <|@  <|@
f <@~|@floating>@ <|@
tid i55 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 139]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i428 
y: i14 
=== Succesors ===
=== Usages ===
?58 i71 v554 j1306 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i428 y: i14  <|@  <|@
f <@~|@floating>@ <|@
tid i68 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 170]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i1945 
y: i1949 
=== Succesors ===
=== Usages ===
j1301 v531 v548 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1945 y: i1949  <|@  <|@
f <@~|@floating>@ <|@
tid v531 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i68 
y: i9 
=== Succesors ===
=== Usages ===
v534 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i68 y: i9  <|@  <|@
f <@*|@fixed>@ <|@
tid v534 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v531 
=== Succesors ===
trueSuccessor: v533 
falseSuccessor: v532 
=== Usages ===
=== Predecessor ===
v526 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v531 #trueSuccessor: v533 #falseSuccessor: v532  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B26" 
    xhandlers
    flags 
    probability 4560163192132014139
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v533 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v537 
=== Usages ===
=== Predecessor ===
v534 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v537  <|@  <|@
f <@*|@fixed>@ <|@
tid v537 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v538 
=== Predecessor ===
v533 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4590097021578663561
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v532 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v546 
=== Usages ===
=== Predecessor ===
v534 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v546  <|@  <|@
f <@~|@floating>@ <|@
tid i65 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:926) [bci: 158]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i1946 
y: i1949 
=== Succesors ===
=== Usages ===
j1310 i553 i71 v542 i547 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i1946 y: i1949  <|@  <|@
f <@~|@floating>@ <|@
tid v542 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 41]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i65 
y: i9 
=== Succesors ===
=== Usages ===
v546 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i65 y: i9  <|@  <|@
f <@*|@fixed>@ <|@
tid v546 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:259) [bci: 52]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v542 
=== Succesors ===
trueSuccessor: v545 
falseSuccessor: v543 
=== Usages ===
=== Predecessor ===
v532 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v542 #trueSuccessor: v545 #falseSuccessor: v543  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B26" 
    xhandlers
    flags 
    probability 4560092952443409712
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v544 
=== Usages ===
=== Predecessor ===
v546 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v544  <|@  <|@
f <@*|@fixed>@ <|@
tid v544 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v538 
=== Predecessor ===
v545 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4590042695569508575
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v543 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:259) [bci: 55]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v552 
=== Usages ===
=== Predecessor ===
v546 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v552  <|@  <|@
f <@~|@floating>@ <|@
tid i547 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 65]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i1952 
y: i65 
=== Succesors ===
=== Usages ===
v548 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i1952 y: i65  <|@  <|@
f <@~|@floating>@ <|@
tid v548 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i547 
y: i68 
=== Succesors ===
=== Usages ===
v552 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i547 y: i68  <|@  <|@
f <@*|@fixed>@ <|@
tid v552 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 77]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v548 
=== Succesors ===
trueSuccessor: v551 
falseSuccessor: v549 
=== Usages ===
=== Predecessor ===
v543 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v548 #trueSuccessor: v551 #falseSuccessor: v549  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    probability 4560023415151691330
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v551 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v550 
=== Usages ===
=== Predecessor ===
v552 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v550  <|@  <|@
f <@*|@fixed>@ <|@
tid v550 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v538 
=== Predecessor ===
v551 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B27" 
    xhandlers
    flags 
    probability 4589988912820445138
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v549 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 80]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v558 
=== Usages ===
=== Predecessor ===
v552 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v558  <|@  <|@
f <@~|@floating>@ <|@
tid i553 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i1953 
y: i65 
=== Succesors ===
=== Usages ===
v554 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i1953 y: i65  <|@  <|@
f <@~|@floating>@ <|@
tid v554 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i553 
y: i55 
=== Succesors ===
=== Usages ===
v558 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i553 y: i55  <|@  <|@
f <@*|@fixed>@ <|@
tid v558 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v554 
=== Succesors ===
trueSuccessor: v557 
falseSuccessor: v555 
=== Usages ===
=== Predecessor ===
v549 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v554 #trueSuccessor: v557 #falseSuccessor: v555  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 4559954573232890131
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v557 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v556 
=== Usages ===
=== Predecessor ===
v558 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v556  <|@  <|@
f <@*|@fixed>@ <|@
tid v556 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v538 
=== Predecessor ===
v557 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" "B23" "B25" 
    successors 
    xhandlers
    flags 
    probability 4569065732494742321
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v538 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v537 v544 v550 v556 
=== Succesors ===
next: v559 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v537 v544 v550 v556 #next: v559  <|@  <|@
tid ?58 <|@
d <@d|@=== Debug Properties ===
bci: 145
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: false
localsSize: 5
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 925
stackSize: 0
=== Inputs ===
outerFrameState: ?216 
values: a1 a438 i55 i1949 - 
=== Succesors ===
=== Usages ===
v559 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?216 values: a1 a438 i55 i1949 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v559 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
nodeSourcePosition: at org.graalvm.compiler.nodes.DeoptimizeNode.deopt(DeoptimizationAction, DeoptimizationReason) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:263) [bci: 119]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
reason: RuntimeConstraint
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?58 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v538 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?58  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B109" 
    xhandlers
    flags 
    probability 4589935667898872336
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v555 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1300 
=== Usages ===
=== Predecessor ===
v558 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1300  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1300 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i64
=== Inputs ===
object: a1944 
=== Succesors ===
next: j1305 
=== Usages ===
v1989 
=== Predecessor ===
v555 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a1944 #next: j1305  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1305 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i64
=== Inputs ===
object: a438 
=== Succesors ===
next: v1311 
=== Usages ===
v1990 
=== Predecessor ===
j1300 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a438 #next: v1311  <|@  <|@
f <@~|@floating>@ <|@
tid j1301 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i68 
=== Succesors ===
=== Usages ===
v1989 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i68  <|@  <|@
f <@~|@floating>@ <|@
tid v1989 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j1300 
index: j1301 
=== Succesors ===
=== Usages ===
v1311 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1300 index: j1301  <|@  <|@
f <@~|@floating>@ <|@
tid j1306 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i55 
=== Succesors ===
=== Usages ===
v1990 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i55  <|@  <|@
f <@~|@floating>@ <|@
tid v1990 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j1305 
index: j1306 
=== Succesors ===
=== Usages ===
v1311 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1305 index: j1306  <|@  <|@
f <@~|@floating>@ <|@
tid j1310 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i65 
=== Succesors ===
=== Usages ===
v1311 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i65  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1311 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: charArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v1989 v1990 j1310 
=== Succesors ===
next: v218 
=== Usages ===
=== Predecessor ===
j1305 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v1989 v1990 j1310 #next: v218  <|@  <|@
f <@~|@floating>@ <|@
tid i71 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:928) [bci: 181]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i55 
y: i65 
=== Succesors ===
=== Usages ===
i219 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i55 y: i65  <|@  <|@
f <@*|@fixed>@ <|@
tid v218 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v217 
=== Predecessor ===
v1311 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v966 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1268 
=== Usages ===
=== Predecessor ===
v967 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1268  <|@  <|@
f <@~|@floating>@ <|@
tid i1269 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -132891
stableDimension: 0
stamp: i32 [-132891] ⇊00000000fffdf8e5 ⇈00000000fffdf8e5
stampKind: i32
value: int[-132891|0xfffffffffffdf8e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1261 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1268 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1258 
=== Predecessor ===
v966 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4591637409758675404
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v253 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 5]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:914) [bci: 67]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v971 
=== Usages ===
=== Predecessor ===
v254 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v971  <|@  <|@
f <@~|@floating>@ <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:917) [bci: 94]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1946 
y: i1949 
=== Succesors ===
=== Usages ===
v971 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1946 y: i1949  <|@  <|@
f <@*|@fixed>@ <|@
tid v971 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:917) [bci: 94]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v399 
=== Succesors ===
trueSuccessor: v970 
falseSuccessor: v968 
=== Usages ===
=== Predecessor ===
v253 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v399 #trueSuccessor: v970 #falseSuccessor: v968  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v970 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:917) [bci: 94]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1266 
=== Usages ===
=== Predecessor ===
v971 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1266  <|@  <|@
f <@~|@floating>@ <|@
tid i1267 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -156947
stableDimension: 0
stamp: i32 [-156947] ⇊00000000fffd9aed ⇈00000000fffd9aed
stampKind: i32
value: int[-156947|0xfffffffffffd9aed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1261 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1266 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1258 
=== Predecessor ===
v970 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B41" 
    xhandlers
    flags 
    probability 4591637409758675404
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v968 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:917) [bci: 94]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v975 
=== Usages ===
=== Predecessor ===
v971 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v975  <|@  <|@
f <@~|@floating>@ <|@
tid i398 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:916) [bci: 87]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i346 
y: i1946 
=== Succesors ===
=== Usages ===
i401 v1975 i204 v618 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i346 y: i1946  <|@  <|@
f <@~|@floating>@ <|@
tid v618 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i398 
y: i1953 
=== Succesors ===
=== Usages ===
v975 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i398 y: i1953  <|@  <|@
f <@*|@fixed>@ <|@
tid v975 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v618 
=== Succesors ===
trueSuccessor: v972 
falseSuccessor: v974 
=== Usages ===
=== Predecessor ===
v968 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v618 #trueSuccessor: v972 #falseSuccessor: v974  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B40" 
    xhandlers
    flags 
    probability 4591637409758675404
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v972 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v979 
=== Usages ===
v625 
=== Predecessor ===
v975 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v979  <|@  <|@
f <@~|@floating>@ <|@
tid i401 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 139]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i398 
y: i14 
=== Succesors ===
=== Usages ===
v627 v1976 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i398 y: i14  <|@  <|@
f <@~|@floating>@ <|@
tid v627 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:930) [bci: 193]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i401 
y: i1953 
=== Succesors ===
=== Usages ===
v979 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i401 y: i1953  <|@  <|@
f <@*|@fixed>@ <|@
tid v979 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:930) [bci: 193]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v627 
=== Succesors ===
trueSuccessor: v976 
falseSuccessor: v978 
=== Usages ===
=== Predecessor ===
v972 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v627 #trueSuccessor: v976 #falseSuccessor: v978  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4591637409758675404
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v976 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:930) [bci: 193]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v577 
=== Usages ===
v635 
=== Predecessor ===
v979 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v577  <|@  <|@
f <@~|@floating>@ <|@
tid i1277 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -154209
stableDimension: 0
stamp: i32 [-154209] ⇊00000000fffda59f ⇈00000000fffda59f
stampKind: i32
value: int[-154209|0xfffffffffffda59f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1261 i1261 i1261 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v577 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v675 
=== Succesors ===
trueSuccessor: v576 
falseSuccessor: v575 
=== Usages ===
=== Predecessor ===
v976 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v675 #trueSuccessor: v576 #falseSuccessor: v575  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B42" 
    xhandlers
    flags 
    probability 4562064649313824873
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v576 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1276 
=== Usages ===
=== Predecessor ===
v577 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1276  <|@  <|@
f <@*|@fixed>@ <|@
tid v1276 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1258 
=== Predecessor ===
v576 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4591567679867720299
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v575 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v595 
=== Usages ===
=== Predecessor ===
v577 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v595  <|@  <|@
f <@~|@floating>@ <|@
tid i590 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 65]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i1952 
y: i1946 
=== Succesors ===
=== Usages ===
v591 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i1952 y: i1946  <|@  <|@
f <@~|@floating>@ <|@
tid v591 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i590 
y: i1945 
=== Succesors ===
=== Usages ===
v595 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i590 y: i1945  <|@  <|@
f <@*|@fixed>@ <|@
tid v595 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 77]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v591 
=== Succesors ===
trueSuccessor: v594 
falseSuccessor: v592 
=== Usages ===
=== Predecessor ===
v575 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v591 #trueSuccessor: v594 #falseSuccessor: v592  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B42" 
    xhandlers
    flags 
    probability 4561975395053402339
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v594 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1282 
=== Usages ===
=== Predecessor ===
v595 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1282  <|@  <|@
f <@*|@fixed>@ <|@
tid v1282 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1258 
=== Predecessor ===
v594 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4591498647275674745
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v592 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 80]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v601 
=== Usages ===
=== Predecessor ===
v595 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v601  <|@  <|@
f <@~|@floating>@ <|@
tid i596 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i1953 
y: i1946 
=== Succesors ===
=== Usages ===
v597 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i1953 y: i1946  <|@  <|@
f <@~|@floating>@ <|@
tid v597 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i596 
y: i346 
=== Succesors ===
=== Usages ===
v601 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i596 y: i346  <|@  <|@
f <@*|@fixed>@ <|@
tid v601 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v597 
=== Succesors ===
trueSuccessor: v600 
falseSuccessor: v598 
=== Usages ===
=== Predecessor ===
v592 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v597 #trueSuccessor: v600 #falseSuccessor: v598  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B42" 
    xhandlers
    flags 
    probability 4561887033335584030
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v600 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1281 
=== Usages ===
=== Predecessor ===
v601 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1281  <|@  <|@
f <@*|@fixed>@ <|@
tid v1281 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1258 
=== Predecessor ===
v600 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B109" 
    xhandlers
    flags 
    probability 4591430305009549647
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v598 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1312 
=== Usages ===
=== Predecessor ===
v601 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1312  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1312 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i64
=== Inputs ===
object: a1944 
=== Succesors ===
next: j1314 
=== Usages ===
v1991 
=== Predecessor ===
v598 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a1944 #next: j1314  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1314 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i64
=== Inputs ===
object: a438 
=== Succesors ===
next: v1317 
=== Usages ===
v1992 
=== Predecessor ===
j1312 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a438 #next: v1317  <|@  <|@
f <@~|@floating>@ <|@
tid v1991 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j1312 
index: j1289 
=== Succesors ===
=== Usages ===
v1317 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1312 index: j1289  <|@  <|@
f <@~|@floating>@ <|@
tid v1992 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j1314 
index: i346 
=== Succesors ===
=== Usages ===
v1317 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1314 index: i346  <|@  <|@
f <@~|@floating>@ <|@
tid j1316 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1946 
=== Succesors ===
=== Usages ===
v1317 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1946  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1317 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: charArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v1991 v1992 j1316 
=== Succesors ===
next: v625 
=== Usages ===
=== Predecessor ===
j1314 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v1991 v1992 j1316 #next: v625  <|@  <|@
f <@~|@floating>@ <|@
tid v1975 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a438 
index: i398 
=== Succesors ===
=== Usages ===
v625 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a438 index: i398  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v625 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v972 
address: v1975 
value: i885 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v635 
=== Usages ===
=== Predecessor ===
v1317 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v972 address: v1975 value: i885 stateAfter: - lastLocationAccess: - #next: v635  <|@  <|@
f <@~|@floating>@ <|@
tid v1976 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a438 
index: i401 
=== Succesors ===
=== Usages ===
v635 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a438 index: i401  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v635 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:930) [bci: 193]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v976 
address: v1976 
value: i888 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v224 
=== Usages ===
=== Predecessor ===
v625 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v976 address: v1976 value: i888 stateAfter: - lastLocationAccess: - #next: v224  <|@  <|@
f <@~|@floating>@ <|@
tid i204 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:930) [bci: 188]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i398 
y: i128 
=== Succesors ===
=== Usages ===
i219 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i398 y: i128  <|@  <|@
f <@*|@fixed>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v217 
=== Predecessor ===
v635 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v978 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:930) [bci: 193]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1272 
=== Usages ===
=== Predecessor ===
v979 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1272  <|@  <|@
f <@~|@floating>@ <|@
tid i1273 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -160795
stableDimension: 0
stamp: i32 [-160795] ⇊00000000fffd8be5 ⇈00000000fffd8be5
stampKind: i32
value: int[-160795|0xfffffffffffd8be5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1261 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1272 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1258 
=== Predecessor ===
v978 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v974 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1270 
=== Usages ===
=== Predecessor ===
v975 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1270  <|@  <|@
f <@~|@floating>@ <|@
tid i1271 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -158491
stableDimension: 0
stamp: i32 [-158491] ⇊00000000fffd94e5 ⇈00000000fffd94e5
stampKind: i32
value: int[-158491|0xfffffffffffd94e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1261 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1270 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1258 
=== Predecessor ===
v974 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" "B41" "B40" "B13" "B34" "B17" "B15" "B38" "B36" 
    successors 
    xhandlers
    flags 
    probability 4572651257581733127
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1261 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-235531 - -128865] ⇊00000000fffc0085
valueDescription: i32
=== Inputs ===
merge: v1258 
values: i1267 i1269 i1271 i1273 i1275 i1277 i1275 i1275 i1277 i1277 
=== Succesors ===
=== Usages ===
v1263 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1258 values: i1267 i1269 i1271 i1273 i1275 i1277 i1275 i1275 i1277 i1277  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1258 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1266 v1268 v1270 v1272 v1274 v1276 v1278 v1279 v1281 v1282 
=== Succesors ===
next: v1263 
=== Usages ===
i1261 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1266 v1268 v1270 v1272 v1274 v1276 v1278 v1279 v1281 v1282 #next: v1263  <|@  <|@
f <@*|@fixed>@ <|@
tid v1263 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?334 
actionAndReason: i1261 
speculation: a1183 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1258 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?334 actionAndReason: i1261 speculation: a1183  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B44" 
    xhandlers
    flags 
    probability 4560799053584073665
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v39 
=== Usages ===
=== Predecessor ===
v41 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v39  <|@  <|@
f <@~|@floating>@ <|@
tid j1103 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:935) [bci: 228]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i64 [18 - 20] ⇊0000000000000010 ⇈0000000000000016
=== Inputs ===
x: j1111 
y: j456 
=== Succesors ===
=== Usages ===
j1104 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1111 y: j456  <|@  <|@
f <@*|@fixed>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v38 
=== Predecessor ===
v40 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B7" "B43" "B2" 
    successors "B45" "B84" 
    xhandlers
    flags 
    probability 4605603864145910071
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1094 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [2 - 3] ⇊0000000000000002 ⇈0000000000000003
valueDescription: i64
=== Inputs ===
merge: v38 
values: j1092 j1108 j1086 
=== Succesors ===
=== Usages ===
j937 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v38 values: j1092 j1108 j1086  <|@  <|@
f <@~|@floating>@ <|@
tid i347 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v38 
values: i14 i346 i9 
=== Succesors ===
=== Usages ===
?75 v735 v640 ?119 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v38 values: i14 i346 i9  <|@  <|@
f <@~|@floating>@ <|@
tid i351 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [1 - 2] ⇈0000000000000003
valueDescription: i32
=== Inputs ===
merge: v38 
values: i128 i353 i14 
=== Succesors ===
=== Usages ===
v648 v741 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v38 values: i128 i353 i14  <|@  <|@
f <@~|@floating>@ <|@
tid i357 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [2 - 3] ⇊0000000000000002 ⇈0000000000000003
valueDescription: i32
=== Inputs ===
merge: v38 
values: i214 i359 i128 
=== Succesors ===
=== Usages ===
?94 v288 v1985 v940 i106 i110 ?126 v774 v943 i141 v1996 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v38 values: i214 i359 i128  <|@  <|@
f <@~|@floating>@ <|@
tid j1102 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [16 - 18] ⇊0000000000000010 ⇈0000000000000012
valueDescription: i64
=== Inputs ===
merge: v38 
values: j1100 j1112 j456 
=== Succesors ===
=== Usages ===
v1977 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v38 values: j1100 j1112 j456  <|@  <|@
f <@~|@floating>@ <|@
tid j1104 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [18 - 20] ⇊0000000000000010 ⇈0000000000000016
valueDescription: i64
=== Inputs ===
merge: v38 
values: j462 j1103 j1100 
=== Succesors ===
=== Usages ===
v1978 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v38 values: j462 j1103 j1100  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v37 v39 v377 
=== Succesors ===
next: v80 
=== Usages ===
j1094 i347 i351 i357 j1102 j1104 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v37 v39 v377 #next: v80  <|@  <|@
f <@~|@floating>@ <|@
tid v1978 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j1104 
index: a1948 
=== Succesors ===
=== Usages ===
v654 v744 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1104 index: a1948  <|@  <|@
f <@~|@floating>@ <|@
tid v1977 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j1102 
index: a1948 
=== Succesors ===
=== Usages ===
v646 v739 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1102 index: a1948  <|@  <|@
f <@*|@fixed>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 201]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.9989929363705994
=== Inputs ===
condition: v29 
=== Succesors ===
trueSuccessor: v78 
falseSuccessor: v79 
=== Usages ===
=== Predecessor ===
v38 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v29 #trueSuccessor: v78 #falseSuccessor: v79  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4605596383028117030
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 204]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v89 
=== Usages ===
=== Predecessor ===
v80 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v89  <|@  <|@
f <@~|@floating>@ <|@
tid i82 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 210]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
rawvalue: -2
stableDimension: 0
stamp: i32 [-2] ⇊00000000fffffffe ⇈00000000fffffffe
stampKind: i32
value: int[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
v83 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 210]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1949 
y: i82 
=== Succesors ===
=== Usages ===
v89 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1949 y: i82  <|@  <|@
f <@*|@fixed>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 210]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.009242564066160308
=== Inputs ===
condition: v83 
=== Succesors ===
trueSuccessor: v88 
falseSuccessor: v87 
=== Usages ===
=== Predecessor ===
v78 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v83 #trueSuccessor: v88 #falseSuccessor: v87  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B85" 
    xhandlers
    flags 
    probability 4575429616257440223
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v86 
=== Usages ===
=== Predecessor ===
v89 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v86  <|@  <|@
f <@*|@fixed>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v85 
=== Predecessor ===
v88 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B82" 
    xhandlers
    flags 
    probability 4605527792449181426
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:934) [bci: 213]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1954 
=== Usages ===
=== Predecessor ===
v89 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1954  <|@  <|@
tid ?75 <|@
d <@d|@=== Debug Properties ===
bci: 197
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 933
stackSize: 0
=== Inputs ===
outerFrameState: ?216 
values: a1 a438 i347 - - 
=== Succesors ===
=== Usages ===
v1206 i1954 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?216 values: a1 a438 i347 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1954 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:934) [bci: 220]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?75 
guard: - 
address: v1968 
=== Succesors ===
next: v987 
=== Usages ===
v640 v648 v290 v940 i697 j930 
=== Predecessor ===
v87 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?75 guard: - address: v1968 #next: v987  <|@  <|@
f <@~|@floating>@ <|@
tid v640 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:934) [bci: 220]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i347 
y: i1954 
=== Succesors ===
=== Usages ===
v987 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i347 y: i1954  <|@  <|@
f <@*|@fixed>@ <|@
tid v987 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:934) [bci: 220]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v640 
=== Succesors ===
trueSuccessor: v984 
falseSuccessor: v986 
=== Usages ===
=== Predecessor ===
i1954 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v640 #trueSuccessor: v984 #falseSuccessor: v986  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B81" 
    xhandlers
    flags 
    probability 4605527792449181426
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v984 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:934) [bci: 220]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v991 
=== Usages ===
v646 
=== Predecessor ===
v987 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v991  <|@  <|@
f <@~|@floating>@ <|@
tid v648 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:935) [bci: 228]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i351 
y: i1954 
=== Succesors ===
=== Usages ===
v991 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i351 y: i1954  <|@  <|@
f <@*|@fixed>@ <|@
tid v991 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:935) [bci: 228]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v648 
=== Succesors ===
trueSuccessor: v988 
falseSuccessor: v990 
=== Usages ===
=== Predecessor ===
v984 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v648 #trueSuccessor: v988 #falseSuccessor: v990  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605527792449181426
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v988 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:935) [bci: 228]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v646 
=== Usages ===
v654 
=== Predecessor ===
v991 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v646  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v646 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:934) [bci: 220]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v984 
address: v1977 
value: i888 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v654 
=== Usages ===
=== Predecessor ===
v988 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v984 address: v1977 value: i888 stateAfter: - lastLocationAccess: - #next: v654  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v654 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:935) [bci: 228]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v988 
address: v1978 
value: i885 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v99 
=== Usages ===
=== Predecessor ===
v646 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v988 address: v1978 value: i885 stateAfter: - lastLocationAccess: - #next: v99  <|@  <|@
f <@~|@floating>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:936) [bci: 233]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1949 
y: i9 
=== Succesors ===
=== Usages ===
v99 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1949 y: i9  <|@  <|@
f <@*|@fixed>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:936) [bci: 233]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.8193763792164618
=== Inputs ===
condition: v96 
=== Succesors ===
trueSuccessor: v97 
falseSuccessor: v98 
=== Usages ===
=== Predecessor ===
v654 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v96 #trueSuccessor: v97 #falseSuccessor: v98  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B71" 
    xhandlers
    flags 
    probability 4604199744109203169
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 256]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v107 
=== Usages ===
=== Predecessor ===
v99 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v107  <|@  <|@
f <@*|@fixed>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 256]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v108 
=== Predecessor ===
v97 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B57" 
    xhandlers
    flags 
    probability 4594480213650448452
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 236]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1926 
=== Usages ===
=== Predecessor ===
v99 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1926  <|@  <|@
f <@~|@floating>@ <|@
tid i106 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:938) [bci: 254]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i357 
y: i1949 
=== Succesors ===
=== Usages ===
i110 v943 v288 v290 i110 i110 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i357 y: i1949  <|@  <|@
f <@~|@floating>@ <|@
tid v943 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i357 
y: i106 
=== Succesors ===
=== Usages ===
v1926 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i357 y: i106  <|@  <|@
f <@~|@floating>@ <|@
tid i933 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NegateNode$$Lambda$180/1857180762@4b0ec103
stamp: i32
=== Inputs ===
value: i1949 
=== Succesors ===
=== Usages ===
j934 
=== Predecessor ===
- >@ <|@
instruction <@Negate|@org.graalvm.compiler.nodes.calc.NegateNode>@ value: i1949  <|@  <|@
f <@~|@floating>@ <|@
tid j934 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i933 
=== Succesors ===
=== Usages ===
j936 j1753 v1506 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i933  <|@  <|@
f <@~|@floating>@ <|@
tid j936 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j934 
y: j935 
=== Succesors ===
=== Usages ===
j937 v1756 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j934 y: j935  <|@  <|@
f <@*|@fixed>@ <|@
tid v1926 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v943 
=== Succesors ===
trueSuccessor: v1925 
falseSuccessor: v1922 
=== Usages ===
=== Predecessor ===
v98 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v943 #trueSuccessor: v1925 #falseSuccessor: v1922  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B56" 
    xhandlers
    flags 
    probability 4589976614023077956
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1925 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1934 
=== Usages ===
=== Predecessor ===
v1926 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1934  <|@  <|@
f <@~|@floating>@ <|@
tid j937 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483647 - 2147483649]
=== Inputs ===
x: j936 
y: j1094 
=== Succesors ===
=== Usages ===
v939 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j936 y: j1094  <|@  <|@
f <@~|@floating>@ <|@
tid j930 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i1954 
=== Succesors ===
=== Usages ===
v939 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1954  <|@  <|@
f <@~|@floating>@ <|@
tid v939 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j937 
y: j930 
=== Succesors ===
=== Usages ===
v1934 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j937 y: j930  <|@  <|@
f <@~|@floating>@ <|@
tid a1219 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@550168632
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@550168632]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1215 a1215 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1218 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -168987
stableDimension: 0
stamp: i32 [-168987] ⇊00000000fffd6be5 ⇈00000000fffd6be5
stampKind: i32
value: int[-168987|0xfffffffffffd6be5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1214 i1214 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1934 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v939 
=== Succesors ===
trueSuccessor: v1933 
falseSuccessor: v1930 
=== Usages ===
=== Predecessor ===
v1925 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v939 #trueSuccessor: v1933 #falseSuccessor: v1930  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4589976614023077956
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1933 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1932 
=== Usages ===
=== Predecessor ===
v1934 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1932  <|@  <|@
f <@~|@floating>@ <|@
tid v940 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i357 
y: i1954 
=== Succesors ===
=== Usages ===
v1932 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i357 y: i1954  <|@  <|@
f <@*|@fixed>@ <|@
tid v1932 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v940 
=== Succesors ===
trueSuccessor: v1923 
falseSuccessor: v1931 
=== Usages ===
=== Predecessor ===
v1933 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v940 #trueSuccessor: v1923 #falseSuccessor: v1931  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" 
    xhandlers
    flags 
    probability 4589976614023077956
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1923 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1921 
=== Usages ===
=== Predecessor ===
v1932 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1921  <|@  <|@
f <@*|@fixed>@ <|@
tid v1921 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1919 
=== Predecessor ===
v1923 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1931 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2040 
=== Usages ===
=== Predecessor ===
v1932 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2040  <|@  <|@
f <@*|@fixed>@ <|@
tid v2040 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1211 
=== Predecessor ===
v1931 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1930 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1217 
=== Usages ===
=== Predecessor ===
v1934 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1217  <|@  <|@
f <@*|@fixed>@ <|@
tid v1217 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1211 
=== Predecessor ===
v1930 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B58" 
    xhandlers
    flags 
    probability 4589976614023077956
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1922 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1920 
=== Usages ===
=== Predecessor ===
v1926 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1920  <|@  <|@
f <@*|@fixed>@ <|@
tid v1920 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1919 
=== Predecessor ===
v1922 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B54" 
    successors "B59" "B60" 
    xhandlers
    flags 
    probability 4594480213650448452
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1919 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1920 v1921 
=== Succesors ===
next: v999 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1920 v1921 #next: v999  <|@  <|@
f <@~|@floating>@ <|@
tid v288 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.Arrays.rangeCheck(Arrays.java:112) [bci: 2]
at java.util.Arrays.fill(Arrays.java:2973) [bci: 4]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i106 
y: i357 
=== Succesors ===
=== Usages ===
v999 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i106 y: i357  <|@  <|@
f <@*|@fixed>@ <|@
tid v999 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.rangeCheck(Arrays.java:112) [bci: 2]
at java.util.Arrays.fill(Arrays.java:2973) [bci: 4]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v288 
=== Succesors ===
trueSuccessor: v998 
falseSuccessor: v996 
=== Usages ===
=== Predecessor ===
v1919 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v288 #trueSuccessor: v998 #falseSuccessor: v996  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v998 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.rangeCheck(Arrays.java:112) [bci: 2]
at java.util.Arrays.fill(Arrays.java:2973) [bci: 4]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1212 
=== Usages ===
=== Predecessor ===
v999 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1212  <|@  <|@
f <@~|@floating>@ <|@
tid i1213 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -167955
stableDimension: 0
stamp: i32 [-167955] ⇊00000000fffd6fed ⇈00000000fffd6fed
stampKind: i32
value: int[-167955|0xfffffffffffd6fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1214 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1212 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1211 
=== Predecessor ===
v998 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" "B63" 
    xhandlers
    flags 
    probability 4594480213650448452
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v996 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.rangeCheck(Arrays.java:112) [bci: 2]
at java.util.Arrays.fill(Arrays.java:2973) [bci: 4]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1003 
=== Usages ===
=== Predecessor ===
v999 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1003  <|@  <|@
f <@~|@floating>@ <|@
tid v290 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.Arrays.rangeCheck(Arrays.java:119) [bci: 61]
at java.util.Arrays.fill(Arrays.java:2973) [bci: 4]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1954 
y: i106 
=== Succesors ===
=== Usages ===
v1003 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1954 y: i106  <|@  <|@
f <@*|@fixed>@ <|@
tid v1003 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.rangeCheck(Arrays.java:119) [bci: 61]
at java.util.Arrays.fill(Arrays.java:2973) [bci: 4]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v290 
=== Succesors ===
trueSuccessor: v1002 
falseSuccessor: v1000 
=== Usages ===
=== Predecessor ===
v996 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v290 #trueSuccessor: v1002 #falseSuccessor: v1000  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1002 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.rangeCheck(Arrays.java:119) [bci: 61]
at java.util.Arrays.fill(Arrays.java:2973) [bci: 4]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1220 
=== Usages ===
=== Predecessor ===
v1003 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1220  <|@  <|@
f <@~|@floating>@ <|@
tid i1221 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -168211
stableDimension: 0
stamp: i32 [-168211] ⇊00000000fffd6eed ⇈00000000fffd6eed
stampKind: i32
value: int[-168211|0xfffffffffffd6eed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1214 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1220 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1211 
=== Predecessor ===
v1002 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B59" "B56" "B61" "B55" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1214 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-168987 - -167955] ⇊00000000fffd6ae5 ⇈00000000fffd6fed
valueDescription: i32
=== Inputs ===
merge: v1211 
values: i1213 i1218 i1221 i1218 
=== Succesors ===
=== Usages ===
v1216 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1211 values: i1213 i1218 i1221 i1218  <|@  <|@
f <@~|@floating>@ <|@
tid a1215 <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/k/d$a;
valueDescription: a -
=== Inputs ===
merge: v1211 
values: a1183 a1219 a1183 a1219 
=== Succesors ===
=== Usages ===
v1216 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1211 values: a1183 a1219 a1183 a1219  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1211 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1212 v1217 v1220 v2040 
=== Succesors ===
next: v1216 
=== Usages ===
i1214 a1215 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1212 v1217 v1220 v2040 #next: v1216  <|@  <|@
tid ?94 <|@
d <@d|@=== Debug Properties ===
bci: 229
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: false
localsSize: 5
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:935) [bci: 228]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 936
stackSize: 0
=== Inputs ===
outerFrameState: ?216 
values: a1 a438 i357 - - 
=== Succesors ===
=== Usages ===
v1216 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?216 values: a1 a438 i357 - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1216 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?94 
actionAndReason: i1214 
speculation: a1215 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1211 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?94 actionAndReason: i1214 speculation: a1215  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4594480213650448452
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1000 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.rangeCheck(Arrays.java:119) [bci: 61]
at java.util.Arrays.fill(Arrays.java:2973) [bci: 4]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1705 
=== Usages ===
=== Predecessor ===
v1003 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1705  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1705 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v1509 
=== Usages ===
j1707 
=== Predecessor ===
v1000 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v1509  <|@  <|@
f <@~|@floating>@ <|@
tid v1506 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j934 
y: j1388 
=== Succesors ===
=== Usages ===
v1509 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j934 y: j1388  <|@  <|@
f <@*|@fixed>@ <|@
tid v1509 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1506 
=== Succesors ===
trueSuccessor: v1507 
falseSuccessor: v1508 
=== Usages ===
=== Predecessor ===
v1705 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1506 #trueSuccessor: v1507 #falseSuccessor: v1508  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B71" 
    xhandlers
    flags 
    probability 4589976614023077956
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1507 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v109 
=== Usages ===
=== Predecessor ===
v1509 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v109  <|@  <|@
f <@*|@fixed>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 256]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v108 
=== Predecessor ===
v1507 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4589976614023077956
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1508 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1557 
=== Usages ===
=== Predecessor ===
v1509 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1557  <|@  <|@
f <@~|@floating>@ <|@
tid v1985 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a438 
index: i357 
=== Succesors ===
=== Usages ===
j1707 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a438 index: i357  <|@  <|@
f <@~|@floating>@ <|@
tid j1707 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1705 
address: v1985 
=== Succesors ===
=== Usages ===
v2022 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1705 address: v1985  <|@  <|@
f <@~|@floating>@ <|@
tid v2022 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1707 
index: - 
=== Succesors ===
=== Usages ===
v1882 v1884 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1707 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1753 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j934 
y: j1752 
=== Succesors ===
=== Usages ===
v1754 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j934 y: j1752  <|@  <|@
f <@~|@floating>@ <|@
tid v1754 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1753 
y: j1065 
=== Succesors ===
=== Usages ===
v1557 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1753 y: j1065  <|@  <|@
f <@*|@fixed>@ <|@
tid v1557 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1754 
=== Succesors ===
trueSuccessor: v1556 
falseSuccessor: v1555 
=== Usages ===
=== Predecessor ===
v1508 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1754 #trueSuccessor: v1556 #falseSuccessor: v1555  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" 
    xhandlers
    flags 
    probability 4580969414768336964
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1556 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1560 
=== Usages ===
=== Predecessor ===
v1557 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1560  <|@  <|@
f <@*|@fixed>@ <|@
tid v1560 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1540 
=== Predecessor ===
v1556 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" 
    xhandlers
    flags 
    probability 4588129111075663974
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1555 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1884 
=== Usages ===
=== Predecessor ===
v1557 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1884  <|@  <|@
f <@~|@floating>@ <|@
tid v1911 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <48,48>
stableDimension: 0
stamp: <i16 [48] ⇊0000000000000030 ⇈0000000000000030,i16 [48] ⇊0000000000000030 ⇈0000000000000030>
stampKind: <i16,i16>
value: SIMD<48,48>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1884 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1884 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2022 
value: v1911 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1539 
=== Usages ===
=== Predecessor ===
v1555 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2022 value: v1911 stateAfter: - lastLocationAccess: - #next: v1539  <|@  <|@
f <@*|@fixed>@ <|@
tid v1539 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1540 
=== Predecessor ===
v1884 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B66" 
    successors "B69" "B70" 
    xhandlers
    flags 
    probability 4589976614023077956
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1708 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [0 - 2] ⇈0000000000000002
valueDescription: i64
=== Inputs ===
merge: v1540 
values: j1086 j1065 
=== Succesors ===
=== Usages ===
v1756 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1540 values: j1086 j1065  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1540 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1539 v1560 
=== Succesors ===
next: v1563 
=== Usages ===
j1708 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1539 v1560 #next: v1563  <|@  <|@
f <@~|@floating>@ <|@
tid v1756 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j936 
y: j1708 
=== Succesors ===
=== Usages ===
v1563 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j936 y: j1708  <|@  <|@
f <@*|@fixed>@ <|@
tid v1563 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1756 
=== Succesors ===
trueSuccessor: v1562 
falseSuccessor: v1561 
=== Usages ===
=== Predecessor ===
v1540 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1756 #trueSuccessor: v1562 #falseSuccessor: v1561  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" 
    xhandlers
    flags 
    probability 4580969414768336964
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1562 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1871 
=== Usages ===
=== Predecessor ===
v1563 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1871  <|@  <|@
f <@*|@fixed>@ <|@
tid v1871 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v108 
=== Predecessor ===
v1562 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" 
    xhandlers
    flags 
    probability 4588129111075663974
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1561 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1882 
=== Usages ===
=== Predecessor ===
v1563 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1882  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1882 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2022 
value: i888 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1872 
=== Usages ===
=== Predecessor ===
v1561 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2022 value: i888 stateAfter: - lastLocationAccess: - #next: v1872  <|@  <|@
f <@*|@fixed>@ <|@
tid v1872 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v108 
=== Predecessor ===
v1882 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B50" "B64" "B69" "B70" 
    successors "B72" "B73" 
    xhandlers
    flags 
    probability 4605527792449181426
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i110 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 256]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v108 
values: i357 i106 i106 i106 
=== Succesors ===
=== Usages ===
?111 j1321 v698 i118 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v108 values: i357 i106 i106 i106  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 256]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v107 v109 v1871 v1872 
=== Succesors ===
next: v2042 
=== Usages ===
i110 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v107 v109 v1871 v1872 #next: v2042  <|@  <|@
tid ?111 <|@
d <@d|@=== Debug Properties ===
bci: 256
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 940
stackSize: 0
=== Inputs ===
outerFrameState: ?216 
values: a1 a438 i110 - - 
=== Succesors ===
=== Usages ===
v1227 v2042 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?216 values: a1 a438 i110 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2042 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?111 
object: a1947 
=== Succesors ===
next: v678 
=== Usages ===
=== Predecessor ===
v108 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?111 object: a1947 #next: v678  <|@  <|@
f <@~|@floating>@ <|@
tid i1229 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -180065
stableDimension: 0
stamp: i32 [-180065] ⇊00000000fffd409f ⇈00000000fffd409f
stampKind: i32
value: int[-180065|0xfffffffffffd409f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1225 i1225 i1225 i1225 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v678 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v675 
=== Succesors ===
trueSuccessor: v677 
falseSuccessor: v676 
=== Usages ===
=== Predecessor ===
v2042 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v675 #trueSuccessor: v677 #falseSuccessor: v676  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B79" 
    xhandlers
    flags 
    probability 4575859268439552651
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v677 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1228 
=== Usages ===
=== Predecessor ===
v678 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1228  <|@  <|@
f <@*|@fixed>@ <|@
tid v1228 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1222 
=== Predecessor ===
v677 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    probability 4605454266720142376
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v676 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v690 
=== Usages ===
=== Predecessor ===
v678 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v690  <|@  <|@
f <@~|@floating>@ <|@
tid v686 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 41]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1946 
y: i9 
=== Succesors ===
=== Usages ===
v690 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1946 y: i9  <|@  <|@
f <@*|@fixed>@ <|@
tid v690 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:259) [bci: 52]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v686 
=== Succesors ===
trueSuccessor: v689 
falseSuccessor: v687 
=== Usages ===
=== Predecessor ===
v676 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v686 #trueSuccessor: v689 #falseSuccessor: v687  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B79" 
    xhandlers
    flags 
    probability 4575812211972967659
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v689 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1286 
=== Usages ===
=== Predecessor ===
v690 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1286  <|@  <|@
f <@*|@fixed>@ <|@
tid v1286 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1222 
=== Predecessor ===
v689 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" "B77" 
    xhandlers
    flags 
    probability 4605381476248393716
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v687 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:259) [bci: 55]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1955 
=== Usages ===
=== Predecessor ===
v690 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1955  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1955 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 60]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1974 
=== Succesors ===
next: v696 
=== Usages ===
i691 
=== Predecessor ===
v687 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1974 #next: v696  <|@  <|@
f <@~|@floating>@ <|@
tid i691 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 65]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i1955 
y: i1946 
=== Succesors ===
=== Usages ===
v692 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i1955 y: i1946  <|@  <|@
f <@~|@floating>@ <|@
tid v692 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i691 
y: i1945 
=== Succesors ===
=== Usages ===
v696 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i691 y: i1945  <|@  <|@
f <@*|@fixed>@ <|@
tid v696 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 77]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v692 
=== Succesors ===
trueSuccessor: v695 
falseSuccessor: v693 
=== Usages ===
=== Predecessor ===
i1955 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v692 #trueSuccessor: v695 #falseSuccessor: v693  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B79" 
    xhandlers
    flags 
    probability 4575765626071048516
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v695 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1285 
=== Usages ===
=== Predecessor ===
v696 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1285  <|@  <|@
f <@*|@fixed>@ <|@
tid v1285 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1222 
=== Predecessor ===
v695 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B78" "B80" 
    xhandlers
    flags 
    probability 4605309413681362543
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v693 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 80]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v702 
=== Usages ===
=== Predecessor ===
v696 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v702  <|@  <|@
f <@~|@floating>@ <|@
tid i697 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i1954 
y: i1946 
=== Succesors ===
=== Usages ===
v698 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i1954 y: i1946  <|@  <|@
f <@~|@floating>@ <|@
tid v698 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i697 
y: i110 
=== Succesors ===
=== Usages ===
v702 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i697 y: i110  <|@  <|@
f <@*|@fixed>@ <|@
tid v702 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v698 
=== Succesors ===
trueSuccessor: v701 
falseSuccessor: v699 
=== Usages ===
=== Predecessor ===
v693 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v698 #trueSuccessor: v701 #falseSuccessor: v699  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B79" 
    xhandlers
    flags 
    probability 4575719506028148565
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v701 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1284 
=== Usages ===
=== Predecessor ===
v702 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1284  <|@  <|@
f <@*|@fixed>@ <|@
tid v1284 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1222 
=== Predecessor ===
v701 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B72" "B78" "B76" "B74" 
    successors 
    xhandlers
    flags 
    probability 4584796352382670340
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1225 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-180747 - -180065] ⇊00000000fffd0095 ⇈00000000fffd7dff
valueDescription: i32
=== Inputs ===
merge: v1222 
values: i1229 i1229 i1229 i1229 
=== Succesors ===
=== Usages ===
v1227 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1222 values: i1229 i1229 i1229 i1229  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1222 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1228 v1284 v1285 v1286 
=== Succesors ===
next: v1227 
=== Usages ===
i1225 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1228 v1284 v1285 v1286 #next: v1227  <|@  <|@
f <@*|@fixed>@ <|@
tid v1227 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?111 
actionAndReason: i1225 
speculation: a1183 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1222 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?111 actionAndReason: i1225 speculation: a1183  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B109" 
    xhandlers
    flags 
    probability 4605238071740001682
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v699 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1318 
=== Usages ===
=== Predecessor ===
v702 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1318  <|@  <|@
f <@~|@floating>@ <|@
tid a668 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 257]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1947 
=== Succesors ===
=== Usages ===
j1318 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1947  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1318 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i64
=== Inputs ===
object: a668 
=== Succesors ===
next: j1320 
=== Usages ===
v1993 
=== Predecessor ===
v699 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a668 #next: j1320  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1320 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i64
=== Inputs ===
object: a438 
=== Succesors ===
next: v1325 
=== Usages ===
v1994 
=== Predecessor ===
j1318 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a438 #next: v1325  <|@  <|@
f <@~|@floating>@ <|@
tid j1942 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1945 
=== Succesors ===
=== Usages ===
v1993 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1945  <|@  <|@
f <@~|@floating>@ <|@
tid v1993 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j1318 
index: j1942 
=== Succesors ===
=== Usages ===
v1325 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1318 index: j1942  <|@  <|@
f <@~|@floating>@ <|@
tid j1321 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i110 
=== Succesors ===
=== Usages ===
v1994 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i110  <|@  <|@
f <@~|@floating>@ <|@
tid v1994 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j1320 
index: j1321 
=== Succesors ===
=== Usages ===
v1325 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1320 index: j1321  <|@  <|@
f <@~|@floating>@ <|@
tid j1938 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1946 
=== Succesors ===
=== Usages ===
v1325 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1946  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1325 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: charArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v1993 v1994 j1938 
=== Succesors ===
next: v220 
=== Usages ===
=== Predecessor ===
j1320 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v1993 v1994 j1938 #next: v220  <|@  <|@
f <@~|@floating>@ <|@
tid i118 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:941) [bci: 278]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i110 
y: i1946 
=== Succesors ===
=== Usages ===
i219 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i110 y: i1946  <|@  <|@
f <@*|@fixed>@ <|@
tid v220 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v217 
=== Predecessor ===
v1325 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B83" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v990 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:935) [bci: 228]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1209 
=== Usages ===
=== Predecessor ===
v991 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1209  <|@  <|@
f <@~|@floating>@ <|@
tid i1210 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -166171
stableDimension: 0
stamp: i32 [-166171] ⇊00000000fffd76e5 ⇈00000000fffd76e5
stampKind: i32
value: int[-166171|0xfffffffffffd76e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1204 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1209 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1201 
=== Predecessor ===
v990 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B83" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v986 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:934) [bci: 220]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1207 
=== Usages ===
=== Predecessor ===
v987 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1207  <|@  <|@
f <@~|@floating>@ <|@
tid i1208 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -164123
stableDimension: 0
stamp: i32 [-164123] ⇊00000000fffd7ee5 ⇈00000000fffd7ee5
stampKind: i32
value: int[-164123|0xfffffffffffd7ee5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1204 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1207 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1201 
=== Predecessor ===
v986 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" "B81" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1204 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-166171 - -162827] ⇊00000000fffd02e5 ⇈00000000fffdfff5
valueDescription: i32
=== Inputs ===
merge: v1201 
values: i1208 i1210 
=== Succesors ===
=== Usages ===
v1206 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1201 values: i1208 i1210  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1201 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1207 v1209 
=== Succesors ===
next: v1206 
=== Usages ===
i1204 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1207 v1209 #next: v1206  <|@  <|@
f <@*|@fixed>@ <|@
tid v1206 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?75 
actionAndReason: i1204 
speculation: a1183 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1201 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?75 actionAndReason: i1204 speculation: a1183  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B85" 
    xhandlers
    flags 
    probability 4560799887891645879
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v84 
=== Usages ===
=== Predecessor ===
v80 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v84  <|@  <|@
f <@*|@fixed>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v85 
=== Predecessor ===
v79 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B46" 
    successors "B86" "B176" 
    xhandlers
    flags 
    probability 4576022210371686731
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v84 v86 
=== Succesors ===
next: i1956 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v84 v86 #next: i1956  <|@  <|@
tid ?119 <|@
d <@d|@=== Debug Properties ===
bci: 283
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 943
stackSize: 0
=== Inputs ===
outerFrameState: ?216 
values: a1 a438 i347 - - 
=== Succesors ===
=== Usages ===
v1235 i1956 i1957 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?216 values: a1 a438 i347 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1956 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 60]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?119 
guard: - 
address: v1974 
=== Succesors ===
next: v1015 
=== Usages ===
i767 v722 
=== Predecessor ===
v85 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?119 guard: - address: v1974 #next: v1015  <|@  <|@
f <@~|@floating>@ <|@
tid v722 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 296]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1945 
y: i1956 
=== Succesors ===
=== Usages ===
v1015 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1945 y: i1956  <|@  <|@
f <@*|@fixed>@ <|@
tid v1015 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 296]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v722 
=== Succesors ===
trueSuccessor: v1012 
falseSuccessor: v1014 
=== Usages ===
=== Predecessor ===
i1956 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v722 #trueSuccessor: v1012 #falseSuccessor: v1014  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B87" "B175" 
    xhandlers
    flags 
    probability 4576022210371686731
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1012 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 296]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1957 
=== Usages ===
i1958 
=== Predecessor ===
v1015 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1957  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1957 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 85]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?119 
guard: - 
address: v1968 
=== Succesors ===
next: v1023 
=== Usages ===
i773 v735 v741 v791 v861 v851 v841 v831 
=== Predecessor ===
v1012 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?119 guard: - address: v1968 #next: v1023  <|@  <|@
f <@~|@floating>@ <|@
tid v735 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 297]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i347 
y: i1957 
=== Succesors ===
=== Usages ===
v1023 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i347 y: i1957  <|@  <|@
f <@*|@fixed>@ <|@
tid v1023 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 297]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v735 
=== Succesors ===
trueSuccessor: v1020 
falseSuccessor: v1022 
=== Usages ===
=== Predecessor ===
i1957 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v735 #trueSuccessor: v1020 #falseSuccessor: v1022  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B88" "B174" 
    xhandlers
    flags 
    probability 4576022210371686731
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1020 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 297]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1027 
=== Usages ===
v739 
=== Predecessor ===
v1023 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1027  <|@  <|@
f <@~|@floating>@ <|@
tid v741 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:944) [bci: 305]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i351 
y: i1957 
=== Succesors ===
=== Usages ===
v1027 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i351 y: i1957  <|@  <|@
f <@*|@fixed>@ <|@
tid v1027 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:944) [bci: 305]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v741 
=== Succesors ===
trueSuccessor: v1024 
falseSuccessor: v1026 
=== Usages ===
=== Predecessor ===
v1020 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v741 #trueSuccessor: v1024 #falseSuccessor: v1026  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B89" "B90" 
    xhandlers
    flags 
    probability 4576022210371686731
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1024 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:944) [bci: 305]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1031 
=== Usages ===
v744 
=== Predecessor ===
v1027 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1031  <|@  <|@
f <@~|@floating>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:945) [bci: 311]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1946 
y: i128 
=== Succesors ===
=== Usages ===
v1031 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1946 y: i128  <|@  <|@
f <@*|@fixed>@ <|@
tid v1031 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:945) [bci: 311]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v129 
=== Succesors ===
trueSuccessor: v1030 
falseSuccessor: v1028 
=== Usages ===
=== Predecessor ===
v1024 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v129 #trueSuccessor: v1030 #falseSuccessor: v1028  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B177" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1030 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:945) [bci: 311]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1240 
=== Usages ===
=== Predecessor ===
v1031 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1240  <|@  <|@
f <@~|@floating>@ <|@
tid i1241 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -190995
stableDimension: 0
stamp: i32 [-190995] ⇊00000000fffd15ed ⇈00000000fffd15ed
stampKind: i32
value: int[-190995|0xfffffffffffd15ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1233 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1240 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1230 
=== Predecessor ===
v1030 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" "B173" 
    xhandlers
    flags 
    probability 4576022210371686731
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1028 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:945) [bci: 311]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1035 
=== Usages ===
=== Predecessor ===
v1031 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1035  <|@  <|@
f <@~|@floating>@ <|@
tid i135 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 331]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i156 i140 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i140 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:947) [bci: 341]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i1946 
y: i135 
=== Succesors ===
=== Usages ===
i141 j1333 i773 i767 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1946 y: i135  <|@  <|@
f <@~|@floating>@ <|@
tid i141 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:947) [bci: 342]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i140 
y: i357 
=== Succesors ===
=== Usages ===
i142 v1980 i212 v791 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i140 y: i357  <|@  <|@
f <@~|@floating>@ <|@
tid v791 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:951) [bci: 362]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i141 
y: i1957 
=== Succesors ===
=== Usages ===
v1035 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i141 y: i1957  <|@  <|@
f <@*|@fixed>@ <|@
tid v1035 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:951) [bci: 362]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v791 
=== Succesors ===
trueSuccessor: v1032 
falseSuccessor: v1034 
=== Usages ===
=== Predecessor ===
v1028 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v791 #trueSuccessor: v1032 #falseSuccessor: v1034  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B92" "B93" 
    xhandlers
    flags 
    probability 4576022210371686731
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1032 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:951) [bci: 362]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1958 
=== Usages ===
v799 
=== Predecessor ===
v1035 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1958  <|@  <|@
f <@~|@floating>@ <|@
tid a1943 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 257]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1947 
=== Succesors ===
=== Usages ===
j1326 v1979 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1947  <|@  <|@
f <@~|@floating>@ <|@
tid v1979 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a1943 
index: i1945 
=== Succesors ===
=== Usages ===
i1958 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1943 index: i1945  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1958 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 296]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v1012 
address: v1979 
=== Succesors ===
next: v739 
=== Usages ===
v739 
=== Predecessor ===
v1032 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1012 address: v1979 #next: v739  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v739 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 297]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1020 
address: v1977 
value: i1958 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v744 
=== Usages ===
=== Predecessor ===
i1958 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1020 address: v1977 value: i1958 stateAfter: - lastLocationAccess: - #next: v744  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v744 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:944) [bci: 305]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1024 
address: v1978 
value: i885 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v772 
=== Usages ===
=== Predecessor ===
v739 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1024 address: v1978 value: i885 stateAfter: - lastLocationAccess: - #next: v772  <|@  <|@
f <@~|@floating>@ <|@
tid i767 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 65]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i1956 
y: i140 
=== Succesors ===
=== Usages ===
v768 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i1956 y: i140  <|@  <|@
f <@~|@floating>@ <|@
tid i133 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 323]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i1945 
y: i14 
=== Succesors ===
=== Usages ===
j1327 v768 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1945 y: i14  <|@  <|@
f <@~|@floating>@ <|@
tid v768 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i767 
y: i133 
=== Succesors ===
=== Usages ===
v772 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i767 y: i133  <|@  <|@
f <@*|@fixed>@ <|@
tid v772 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 77]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v768 
=== Succesors ===
trueSuccessor: v771 
falseSuccessor: v769 
=== Usages ===
=== Predecessor ===
v744 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v768 #trueSuccessor: v771 #falseSuccessor: v769  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B95" 
    xhandlers
    flags 
    probability 4545860217785470586
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v771 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v770 
=== Usages ===
=== Predecessor ===
v772 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v770  <|@  <|@
f <@*|@fixed>@ <|@
tid v770 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v758 
=== Predecessor ===
v771 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B94" "B96" 
    xhandlers
    flags 
    probability 4575973524485780398
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v769 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 80]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v778 
=== Usages ===
=== Predecessor ===
v772 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v778  <|@  <|@
f <@~|@floating>@ <|@
tid i773 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i1957 
y: i140 
=== Succesors ===
=== Usages ===
v774 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i1957 y: i140  <|@  <|@
f <@~|@floating>@ <|@
tid v774 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i773 
y: i357 
=== Succesors ===
=== Usages ===
v778 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i773 y: i357  <|@  <|@
f <@*|@fixed>@ <|@
tid v778 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v774 
=== Succesors ===
trueSuccessor: v777 
falseSuccessor: v775 
=== Usages ===
=== Predecessor ===
v769 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v774 #trueSuccessor: v777 #falseSuccessor: v775  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B95" 
    xhandlers
    flags 
    probability 4545797899851510480
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v777 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v776 
=== Usages ===
=== Predecessor ===
v778 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v776  <|@  <|@
f <@*|@fixed>@ <|@
tid v776 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v758 
=== Predecessor ===
v777 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B92" "B94" 
    successors 
    xhandlers
    flags 
    probability 4550332658445861029
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v758 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v770 v776 
=== Succesors ===
next: v779 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v770 v776 #next: v779  <|@  <|@
tid ?126 <|@
d <@d|@=== Debug Properties ===
bci: 306
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: false
localsSize: 5
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:944) [bci: 305]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 945
stackSize: 0
=== Inputs ===
outerFrameState: ?216 
values: a1 a438 i357 - - 
=== Succesors ===
=== Usages ===
v779 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?216 values: a1 a438 i357 - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v779 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
nodeSourcePosition: at org.graalvm.compiler.nodes.DeoptimizeNode.deopt(DeoptimizationAction, DeoptimizationReason) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:263) [bci: 119]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
reason: RuntimeConstraint
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?126 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v758 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?126  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B97" "B100" 
    xhandlers
    flags 
    probability 4575925325458733128
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v775 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1326 
=== Usages ===
=== Predecessor ===
v778 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1326  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1326 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i64
=== Inputs ===
object: a1943 
=== Succesors ===
next: j1331 
=== Usages ===
v1995 
=== Predecessor ===
v775 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a1943 #next: j1331  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1331 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i64
=== Inputs ===
object: a438 
=== Succesors ===
next: v1334 
=== Usages ===
v1996 
=== Predecessor ===
j1326 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a438 #next: v1334  <|@  <|@
f <@~|@floating>@ <|@
tid j1327 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i133 
=== Succesors ===
=== Usages ===
v1995 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i133  <|@  <|@
f <@~|@floating>@ <|@
tid v1995 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j1326 
index: j1327 
=== Succesors ===
=== Usages ===
v1334 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1326 index: j1327  <|@  <|@
f <@~|@floating>@ <|@
tid v1996 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j1331 
index: i357 
=== Succesors ===
=== Usages ===
v1334 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1331 index: i357  <|@  <|@
f <@~|@floating>@ <|@
tid j1333 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i140 
=== Succesors ===
=== Usages ===
v1334 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i140  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1334 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: charArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v1995 v1996 j1333 
=== Succesors ===
next: v799 
=== Usages ===
=== Predecessor ===
j1331 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v1995 v1996 j1333 #next: v799  <|@  <|@
f <@~|@floating>@ <|@
tid v1980 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a438 
index: i141 
=== Succesors ===
=== Usages ===
v799 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a438 index: i141  <|@  <|@
f <@~|@floating>@ <|@
tid i895 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:951) [bci: 362]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
rawvalue: 69
stableDimension: 0
stamp: i16 [69] ⇊0000000000000045 ⇈0000000000000045
stampKind: i16
value: short[69|0x45]
=== Inputs ===
=== Succesors ===
=== Usages ===
v799 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v799 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:951) [bci: 362]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1032 
address: v1980 
value: i895 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v150 
=== Usages ===
=== Predecessor ===
v1334 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1032 address: v1980 value: i895 stateAfter: - lastLocationAccess: - #next: v150  <|@  <|@
f <@~|@floating>@ <|@
tid i142 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:951) [bci: 357]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i141 
y: i14 
=== Succesors ===
=== Usages ===
?145 v1984 i160 v861 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i141 y: i14  <|@  <|@
f <@*|@fixed>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:953) [bci: 367]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.9016620498614958
=== Inputs ===
condition: v29 
=== Succesors ===
trueSuccessor: v148 
falseSuccessor: v149 
=== Usages ===
=== Predecessor ===
v799 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v29 #trueSuccessor: v148 #falseSuccessor: v149  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B98" "B99" 
    xhandlers
    flags 
    probability 4575254950392379555
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v148 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:954) [bci: 370]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1039 
=== Usages ===
=== Predecessor ===
v150 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1039  <|@  <|@
f <@~|@floating>@ <|@
tid v861 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:954) [bci: 377]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i142 
y: i1957 
=== Succesors ===
=== Usages ===
v1039 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i142 y: i1957  <|@  <|@
f <@*|@fixed>@ <|@
tid v1039 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:954) [bci: 377]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v861 
=== Succesors ===
trueSuccessor: v1036 
falseSuccessor: v1038 
=== Usages ===
=== Predecessor ===
v148 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v861 #trueSuccessor: v1036 #falseSuccessor: v1038  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B101" 
    xhandlers
    flags 
    probability 4575254950392379555
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1036 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:954) [bci: 377]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v868 
=== Usages ===
v868 
=== Predecessor ===
v1039 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v868  <|@  <|@
f <@~|@floating>@ <|@
tid v1984 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a438 
index: i142 
=== Succesors ===
=== Usages ===
v868 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a438 index: i142  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v868 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:954) [bci: 377]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1036 
address: v1984 
value: i881 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v157 
=== Usages ===
=== Predecessor ===
v1036 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1036 address: v1984 value: i881 stateAfter: - lastLocationAccess: - #next: v157  <|@  <|@
f <@~|@floating>@ <|@
tid i212 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:954) [bci: 372]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i141 
y: i128 
=== Succesors ===
=== Usages ===
i160 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i141 y: i128  <|@  <|@
f <@~|@floating>@ <|@
tid i154 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:955) [bci: 384]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i14 
y: i1949 
=== Succesors ===
=== Usages ===
i161 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i14 y: i1949  <|@  <|@
f <@*|@fixed>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 396]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v158 
=== Predecessor ===
v868 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1038 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:954) [bci: 377]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1037 
=== Usages ===
=== Predecessor ===
v1039 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1037  <|@  <|@
tid ?145 <|@
d <@d|@=== Debug Properties ===
bci: 363
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: false
localsSize: 5
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:951) [bci: 362]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 953
stackSize: 0
=== Inputs ===
outerFrameState: ?216 
values: a1 a438 i142 - - 
=== Succesors ===
=== Usages ===
v1037 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?216 values: a1 a438 i142 - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1037 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 862
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:954) [bci: 377]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
reason: BoundsCheckException
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?145 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1038 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?145  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B101" 
    xhandlers
    flags 
    probability 4560647056204873574
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v149 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:957) [bci: 389]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v159 
=== Usages ===
=== Predecessor ===
v150 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v159  <|@  <|@
f <@~|@floating>@ <|@
tid i156 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:957) [bci: 394]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i1949 
y: i135 
=== Succesors ===
=== Usages ===
i161 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1949 y: i135  <|@  <|@
f <@*|@fixed>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 396]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v158 
=== Predecessor ===
v149 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B98" "B100" 
    successors "B102" "B171" 
    xhandlers
    flags 
    probability 4575925325458733128
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i160 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 396]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v158 
values: i212 i142 
=== Succesors ===
=== Usages ===
?162 i168 i215 v831 v1981 i213 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v158 values: i212 i142  <|@  <|@
f <@~|@floating>@ <|@
tid i161 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 396]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v158 
values: i154 i156 
=== Succesors ===
=== Usages ===
?162 v164 i169 i324 v175 i325 i300 i297 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v158 values: i154 i156  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 396]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v157 v159 
=== Succesors ===
next: v1043 
=== Usages ===
i160 i161 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v157 v159 #next: v1043  <|@  <|@
f <@~|@floating>@ <|@
tid v831 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:966) [bci: 466]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i160 
y: i1957 
=== Succesors ===
=== Usages ===
v1043 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i160 y: i1957  <|@  <|@
f <@*|@fixed>@ <|@
tid v1043 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:966) [bci: 466]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v831 
=== Succesors ===
trueSuccessor: v1040 
falseSuccessor: v1042 
=== Usages ===
=== Predecessor ===
v158 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v831 #trueSuccessor: v1040 #falseSuccessor: v1042  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B103" "B104" 
    xhandlers
    flags 
    probability 4575925325458733128
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1040 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:966) [bci: 466]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v167 
=== Usages ===
v819 v809 v839 
=== Predecessor ===
v1043 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v167  <|@  <|@
f <@~|@floating>@ <|@
tid i168 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:961) [bci: 404]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i160 
y: i14 
=== Succesors ===
=== Usages ===
i219 v1982 v841 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i160 y: i14  <|@  <|@
f <@~|@floating>@ <|@
tid v1981 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a438 
index: i160 
=== Succesors ===
=== Usages ===
v839 v819 v809 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a438 index: i160  <|@  <|@
f <@~|@floating>@ <|@
tid i163 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 399]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
rawvalue: 10
stableDimension: 0
stamp: i32 [10] ⇊000000000000000a ⇈000000000000000a
stampKind: i32
value: int[10|0xa]
=== Inputs ===
=== Succesors ===
=== Usages ===
v164 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 399]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i161 
y: i163 
=== Succesors ===
=== Usages ===
v167 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i161 y: i163  <|@  <|@
f <@~|@floating>@ <|@
tid i72 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:930) [bci: 191]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
rawvalue: 48
stableDimension: 0
stamp: i32 [48] ⇊0000000000000030 ⇈0000000000000030
stampKind: i32
value: int[48|0x30]
=== Inputs ===
=== Succesors ===
=== Usages ===
i201 i197 i2039 i169 i2038 i186 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v167 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 399]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.9778393351800554
=== Inputs ===
condition: v164 
=== Succesors ===
trueSuccessor: v165 
falseSuccessor: v166 
=== Usages ===
=== Predecessor ===
v1040 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v164 #trueSuccessor: v165 #falseSuccessor: v166  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B109" 
    xhandlers
    flags 
    probability 4575819581332911971
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:961) [bci: 402]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v809 
=== Usages ===
=== Predecessor ===
v167 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v809  <|@  <|@
f <@~|@floating>@ <|@
tid i169 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:961) [bci: 410]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i161 
y: i72 
=== Succesors ===
=== Usages ===
i170 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i161 y: i72  <|@  <|@
f <@~|@floating>@ <|@
tid i170 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:961) [bci: 411]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
resultBits: 16
stamp: i16
=== Inputs ===
value: i169 
=== Succesors ===
=== Usages ===
v809 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i169  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v809 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:961) [bci: 412]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1040 
address: v1981 
value: i170 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v221 
=== Usages ===
=== Predecessor ===
v165 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1040 address: v1981 value: i170 stateAfter: - lastLocationAccess: - #next: v221  <|@  <|@
f <@*|@fixed>@ <|@
tid v221 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v217 
=== Predecessor ===
v809 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B105" "B170" 
    xhandlers
    flags 
    probability 4550899648069384485
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:962) [bci: 416]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1047 
=== Usages ===
=== Predecessor ===
v167 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1047  <|@  <|@
f <@~|@floating>@ <|@
tid v841 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:968) [bci: 485]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i168 
y: i1957 
=== Succesors ===
=== Usages ===
v1047 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i168 y: i1957  <|@  <|@
f <@*|@fixed>@ <|@
tid v1047 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:968) [bci: 485]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v841 
=== Succesors ===
trueSuccessor: v1044 
falseSuccessor: v1046 
=== Usages ===
=== Predecessor ===
v166 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v841 #trueSuccessor: v1044 #falseSuccessor: v1046  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B106" "B107" 
    xhandlers
    flags 
    probability 4550899648069384485
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1044 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:968) [bci: 485]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v178 
=== Usages ===
v849 v829 
=== Predecessor ===
v1047 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v178  <|@  <|@
f <@~|@floating>@ <|@
tid i213 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:964) [bci: 438]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i160 
y: i128 
=== Succesors ===
=== Usages ===
v851 i219 v1983 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i160 y: i128  <|@  <|@
f <@~|@floating>@ <|@
tid v1982 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a438 
index: i168 
=== Succesors ===
=== Usages ===
v849 v829 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a438 index: i168  <|@  <|@
f <@~|@floating>@ <|@
tid i174 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:962) [bci: 419]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
rawvalue: 100
stableDimension: 0
stamp: i32 [100] ⇊0000000000000064 ⇈0000000000000064
stampKind: i32
value: int[100|0x64]
=== Inputs ===
=== Succesors ===
=== Usages ===
v175 i299 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v175 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:962) [bci: 419]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i161 
y: i174 
=== Succesors ===
=== Usages ===
v178 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i161 y: i174  <|@  <|@
f <@~|@floating>@ <|@
tid i306 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1717986919
stableDimension: 0
stamp: i32 [1717986919] ⇊0000000066666667 ⇈0000000066666667
stampKind: i32
value: int[1717986919|0x66666667]
=== Inputs ===
=== Succesors ===
=== Usages ===
i324 i326 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:962) [bci: 419]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.625
=== Inputs ===
condition: v175 
=== Succesors ===
trueSuccessor: v176 
falseSuccessor: v177 
=== Usages ===
=== Predecessor ===
v1044 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v175 #trueSuccessor: v176 #falseSuccessor: v177  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B109" 
    xhandlers
    flags 
    probability 4548087954455152494
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v176 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:963) [bci: 422]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v819 
=== Usages ===
=== Predecessor ===
v178 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v819  <|@  <|@
f <@~|@floating>@ <|@
tid i324 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.replacements.nodes.arithmetic.IntegerMulHighNode$$Lambda$181/245612612@2147bd06
stamp: i32
=== Inputs ===
x: i161 
y: i306 
=== Succesors ===
=== Usages ===
i308 
=== Predecessor ===
- >@ <|@
instruction <@*H|@org.graalvm.compiler.replacements.nodes.arithmetic.IntegerMulHighNode>@ x: i161 y: i306  <|@  <|@
f <@~|@floating>@ <|@
tid i308 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
stamp: i32 [-536870912 - 536870911]
=== Inputs ===
x: i324 
y: i128 
=== Succesors ===
=== Usages ===
i294 i2038 i295 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i324 y: i128  <|@  <|@
f <@~|@floating>@ <|@
tid i2038 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:963) [bci: 433]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32 [-536870864 - 536870959]
=== Inputs ===
x: i308 
y: i72 
=== Succesors ===
=== Usages ===
i181 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i308 y: i72  <|@  <|@
f <@~|@floating>@ <|@
tid i181 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:963) [bci: 434]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
resultBits: 16
stamp: i16
=== Inputs ===
value: i2038 
=== Succesors ===
=== Usages ===
v819 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i2038  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v819 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:963) [bci: 435]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1040 
address: v1981 
value: i181 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v829 
=== Usages ===
=== Predecessor ===
v176 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1040 address: v1981 value: i181 stateAfter: - lastLocationAccess: - #next: v829  <|@  <|@
f <@~|@floating>@ <|@
tid i294 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i308 
y: i214 
=== Succesors ===
=== Usages ===
i296 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i308 y: i214  <|@  <|@
f <@~|@floating>@ <|@
tid i295 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i308 
y: i14 
=== Succesors ===
=== Usages ===
i296 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i308 y: i14  <|@  <|@
f <@~|@floating>@ <|@
tid i296 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i294 
y: i295 
=== Succesors ===
=== Usages ===
i297 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i294 y: i295  <|@  <|@
f <@~|@floating>@ <|@
tid i297 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i32
=== Inputs ===
x: i161 
y: i296 
=== Succesors ===
=== Usages ===
i186 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i161 y: i296  <|@  <|@
f <@~|@floating>@ <|@
tid i186 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:964) [bci: 447]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i297 
y: i72 
=== Succesors ===
=== Usages ===
i828 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i297 y: i72  <|@  <|@
f <@~|@floating>@ <|@
tid i828 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:964) [bci: 449]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
resultBits: 16
stamp: i16
=== Inputs ===
value: i186 
=== Succesors ===
=== Usages ===
v829 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i186  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v829 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:964) [bci: 449]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1044 
address: v1982 
value: i828 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v222 
=== Usages ===
=== Predecessor ===
v819 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1044 address: v1982 value: i828 stateAfter: - lastLocationAccess: - #next: v222  <|@  <|@
f <@*|@fixed>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v217 
=== Predecessor ===
v829 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" "B169" 
    xhandlers
    flags 
    probability 4544704142428875484
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v177 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:966) [bci: 453]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1051 
=== Usages ===
=== Predecessor ===
v178 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1051  <|@  <|@
f <@~|@floating>@ <|@
tid v851 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:969) [bci: 499]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i213 
y: i1957 
=== Succesors ===
=== Usages ===
v1051 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i213 y: i1957  <|@  <|@
f <@*|@fixed>@ <|@
tid v1051 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:969) [bci: 499]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v851 
=== Succesors ===
trueSuccessor: v1048 
falseSuccessor: v1050 
=== Usages ===
=== Predecessor ===
v177 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v851 #trueSuccessor: v1048 #falseSuccessor: v1050  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B109" 
    xhandlers
    flags 
    probability 4544704142428875484
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1048 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:969) [bci: 499]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v839 
=== Usages ===
v859 
=== Predecessor ===
v1051 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v839  <|@  <|@
f <@~|@floating>@ <|@
tid i312 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1374389535
stableDimension: 0
stamp: i32 [1374389535] ⇊0000000051eb851f ⇈0000000051eb851f
stampKind: i32
value: int[1374389535|0x51eb851f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i325 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i325 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.replacements.nodes.arithmetic.IntegerMulHighNode$$Lambda$181/245612612@2147bd06
stamp: i32
=== Inputs ===
x: i161 
y: i312 
=== Succesors ===
=== Usages ===
i315 
=== Predecessor ===
- >@ <|@
instruction <@*H|@org.graalvm.compiler.replacements.nodes.arithmetic.IntegerMulHighNode>@ x: i161 y: i312  <|@  <|@
f <@~|@floating>@ <|@
tid i314 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 5
stableDimension: 0
stamp: i32 [5] ⇊0000000000000005 ⇈0000000000000005
stampKind: i32
value: int[5|0x5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i315 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i315 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
stamp: i32 [-67108864 - 67108863]
=== Inputs ===
x: i325 
y: i314 
=== Succesors ===
=== Usages ===
i299 i2039 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i325 y: i314  <|@  <|@
f <@~|@floating>@ <|@
tid i2039 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:966) [bci: 464]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32 [-67108816 - 67108911]
=== Inputs ===
x: i315 
y: i72 
=== Succesors ===
=== Usages ===
i191 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i315 y: i72  <|@  <|@
f <@~|@floating>@ <|@
tid i191 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:966) [bci: 465]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
resultBits: 16
stamp: i16
=== Inputs ===
value: i2039 
=== Succesors ===
=== Usages ===
v839 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i2039  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v839 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:966) [bci: 466]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1040 
address: v1981 
value: i191 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v849 
=== Usages ===
=== Predecessor ===
v1048 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1040 address: v1981 value: i191 stateAfter: - lastLocationAccess: - #next: v849  <|@  <|@
f <@~|@floating>@ <|@
tid i299 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$125/271184744@39a592fe
stamp: i32
=== Inputs ===
x: i315 
y: i174 
=== Succesors ===
=== Usages ===
i300 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: i315 y: i174  <|@  <|@
f <@~|@floating>@ <|@
tid i300 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i32
=== Inputs ===
x: i161 
y: i299 
=== Succesors ===
=== Usages ===
i319 i326 i305 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i161 y: i299  <|@  <|@
f <@~|@floating>@ <|@
tid i326 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.replacements.nodes.arithmetic.IntegerMulHighNode$$Lambda$181/245612612@2147bd06
stamp: i32
=== Inputs ===
x: i300 
y: i306 
=== Succesors ===
=== Usages ===
i318 
=== Predecessor ===
- >@ <|@
instruction <@*H|@org.graalvm.compiler.replacements.nodes.arithmetic.IntegerMulHighNode>@ x: i300 y: i306  <|@  <|@
f <@~|@floating>@ <|@
tid i318 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
stamp: i32 [-536870912 - 536870911]
=== Inputs ===
x: i326 
y: i128 
=== Succesors ===
=== Usages ===
i320 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i326 y: i128  <|@  <|@
f <@~|@floating>@ <|@
tid i309 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 31
stableDimension: 0
stamp: i32 [31] ⇊000000000000001f ⇈000000000000001f
stampKind: i32
value: int[31|0x1f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i319 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i319 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
x: i300 
y: i309 
=== Succesors ===
=== Usages ===
i320 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i300 y: i309  <|@  <|@
f <@~|@floating>@ <|@
tid i320 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i32 [-536870912 - 536870912]
=== Inputs ===
x: i318 
y: i319 
=== Succesors ===
=== Usages ===
i197 i302 i303 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i318 y: i319  <|@  <|@
f <@~|@floating>@ <|@
tid i197 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:968) [bci: 483]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32 [-536870864 - 536870960]
=== Inputs ===
x: i320 
y: i72 
=== Succesors ===
=== Usages ===
i848 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i320 y: i72  <|@  <|@
f <@~|@floating>@ <|@
tid i848 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:968) [bci: 485]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
resultBits: 16
stamp: i16
=== Inputs ===
value: i197 
=== Succesors ===
=== Usages ===
v849 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i197  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v849 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:968) [bci: 485]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1044 
address: v1982 
value: i848 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v859 
=== Usages ===
=== Predecessor ===
v839 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1044 address: v1982 value: i848 stateAfter: - lastLocationAccess: - #next: v859  <|@  <|@
f <@~|@floating>@ <|@
tid v1983 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a438 
index: i213 
=== Succesors ===
=== Usages ===
v859 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a438 index: i213  <|@  <|@
f <@~|@floating>@ <|@
tid i302 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i320 
y: i214 
=== Succesors ===
=== Usages ===
i304 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i320 y: i214  <|@  <|@
f <@~|@floating>@ <|@
tid i303 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i320 
y: i14 
=== Succesors ===
=== Usages ===
i304 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i320 y: i14  <|@  <|@
f <@~|@floating>@ <|@
tid i304 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i302 
y: i303 
=== Succesors ===
=== Usages ===
i305 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i302 y: i303  <|@  <|@
f <@~|@floating>@ <|@
tid i305 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i32
=== Inputs ===
x: i300 
y: i304 
=== Succesors ===
=== Usages ===
i201 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i300 y: i304  <|@  <|@
f <@~|@floating>@ <|@
tid i201 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:969) [bci: 497]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i305 
y: i72 
=== Succesors ===
=== Usages ===
i858 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i305 y: i72  <|@  <|@
f <@~|@floating>@ <|@
tid i858 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:969) [bci: 499]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
resultBits: 16
stamp: i16
=== Inputs ===
value: i201 
=== Succesors ===
=== Usages ===
v859 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i201  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v859 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:969) [bci: 499]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1048 
address: v1983 
value: i858 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v223 
=== Usages ===
=== Predecessor ===
v849 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1048 address: v1983 value: i858 stateAfter: - lastLocationAccess: - #next: v223  <|@  <|@
f <@~|@floating>@ <|@
tid i215 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:969) [bci: 488]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i160 
y: i214 
=== Succesors ===
=== Usages ===
i219 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i160 y: i214  <|@  <|@
f <@*|@fixed>@ <|@
tid v223 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v217 
=== Predecessor ===
v859 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B27" "B80" "B103" "B106" "B108" "B39" 
    successors "B110" "B116" 
    xhandlers
    flags 
    probability 4606817271057726943
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i219 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v217 
values: i71 i118 i168 i213 i215 i204 
=== Succesors ===
=== Usages ===
?6 j1567 v225 v229 i238 a1413 v1131 i1153 v1436 i1389 v1398 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v217 values: i71 i118 i168 i213 i215 i204  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v218 v220 v221 v222 v223 v224 
=== Succesors ===
next: v2041 
=== Usages ===
i219 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v218 v220 v221 v222 v223 v224 #next: v2041  <|@  <|@
tid ?6 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString()>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 301
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 - i219 
=== Succesors ===
=== Usages ===
v1194 a1413 a1459 a1350 v2041 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - i219  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2041 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?6 
object: a1948 
=== Succesors ===
next: v228 
=== Usages ===
=== Predecessor ===
v217 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?6 object: a1948 #next: v228  <|@  <|@
f <@~|@floating>@ <|@
tid v225 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.<init>(String.java:194) [bci: 18]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i219 
y: i14 
=== Succesors ===
=== Usages ===
v228 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i219 y: i14  <|@  <|@
f <@~|@floating>@ <|@
tid v1493 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1380 v1483 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1369 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/lang/String;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j1475 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1475 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v1369 
=== Succesors ===
=== Usages ===
v2012 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v1369  <|@  <|@
f <@~|@floating>@ <|@
tid v2012 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j1475 
index: - 
=== Succesors ===
=== Usages ===
j1479 j1375 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1475 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1336 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a1350 a1459 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j439 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:908) [bci: 30]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1497 j1490 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:194) [bci: 18]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
trueSuccessorProbability: 0.09284041465770032
=== Inputs ===
condition: v225 
=== Succesors ===
trueSuccessor: v226 
falseSuccessor: v227 
=== Usages ===
=== Predecessor ===
v2041 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v225 #trueSuccessor: v226 #falseSuccessor: v227  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B111" "B112" 
    xhandlers
    flags 
    probability 4591083073830437833
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 21]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1059 
=== Usages ===
=== Predecessor ===
v228 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1059  <|@  <|@
f <@~|@floating>@ <|@
tid v229 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 22]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i219 
y: i9 
=== Succesors ===
=== Usages ===
v1059 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i219 y: i9  <|@  <|@
f <@*|@fixed>@ <|@
tid v1059 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 22]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v229 
=== Succesors ===
trueSuccessor: v1058 
falseSuccessor: v1056 
=== Usages ===
=== Predecessor ===
v226 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v229 #trueSuccessor: v1058 #falseSuccessor: v1056  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1058 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 22]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1195 
=== Usages ===
=== Predecessor ===
v1059 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1195  <|@  <|@
f <@~|@floating>@ <|@
tid i1196 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -222483
stableDimension: 0
stamp: i32 [-222483] ⇊00000000fffc9aed ⇈00000000fffc9aed
stampKind: i32
value: int[-222483|0xfffffffffffc9aed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1192 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1195 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1189 
=== Predecessor ===
v1058 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B113" "B114" 
    xhandlers
    flags 
    probability 4591083073830437833
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1056 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 22]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1338 
=== Usages ===
=== Predecessor ===
v1059 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1338  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1338 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1357 
=== Usages ===
v1997 v1998 
=== Predecessor ===
v1056 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1357  <|@  <|@
f <@~|@floating>@ <|@
tid v1997 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1338 
index: - 
=== Succesors ===
=== Usages ===
j1357 v1359 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1338 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1357 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1997 
=== Succesors ===
next: j1358 
=== Usages ===
j1490 j1363 v2015 
=== Predecessor ===
j1338 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1997 #next: j1358  <|@  <|@
f <@~|@floating>@ <|@
tid v1998 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1338 
index: - 
=== Succesors ===
=== Usages ===
j1358 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1338 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1358 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1998 
=== Succesors ===
next: v1346 
=== Usages ===
v1343 
=== Predecessor ===
j1357 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1998 #next: v1346  <|@  <|@
f <@~|@floating>@ <|@
tid j1490 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1357 
y: j439 
=== Succesors ===
=== Usages ===
v1343 v1359 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1357 y: j439  <|@  <|@
f <@~|@floating>@ <|@
tid v1343 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1358 
y: j1490 
=== Succesors ===
=== Usages ===
v1346 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1358 y: j1490  <|@  <|@
f <@*|@fixed>@ <|@
tid v1346 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1343 
=== Succesors ===
trueSuccessor: v1344 
falseSuccessor: v1345 
=== Usages ===
=== Predecessor ===
j1358 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1343 #trueSuccessor: v1344 #falseSuccessor: v1345  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B115" 
    xhandlers
    flags 
    probability 4561355099325680782
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1344 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a1350 
=== Usages ===
=== Predecessor ===
v1346 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1350  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1350 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?6 
arguments: v1336 i128 i14 
=== Succesors ===
next: j1351 
=== Usages ===
j1351 
=== Predecessor ===
v1344 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?6 arguments: v1336 i128 i14 #next: j1351  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1351 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1350 
=== Succesors ===
next: v1364 
=== Usages ===
j1363 
=== Predecessor ===
a1350 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1350 #next: v1364  <|@  <|@
f <@*|@fixed>@ <|@
tid v1364 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1361 
=== Predecessor ===
j1351 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B115" 
    xhandlers
    flags 
    probability 4591018887298765104
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1345 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1359 
=== Usages ===
=== Predecessor ===
v1346 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1359  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1359 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1997 
value: j1490 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1355 
=== Usages ===
=== Predecessor ===
v1345 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1997 value: j1490 stateAfter: - lastLocationAccess: - #next: v1355  <|@  <|@
f <@~|@floating>@ <|@
tid v2015 <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j1357 
index: - 
=== Succesors ===
=== Usages ===
v1355 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1357 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1355 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v2015 
=== Succesors ===
next: v1362 
=== Usages ===
=== Predecessor ===
v1359 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2015 #next: v1362  <|@  <|@
f <@*|@fixed>@ <|@
tid v1362 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1361 
=== Predecessor ===
v1355 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" "B113" 
    successors 
    xhandlers
    flags 
    probability 4591083073830437833
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1363 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1361 
values: j1357 j1351 
=== Succesors ===
=== Usages ===
v2000 v1999 a1067 v2016 v2017 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1361 values: j1357 j1351  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1361 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1362 v1364 
=== Succesors ===
next: a1067 
=== Usages ===
j1363 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1362 v1364 #next: a1067  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1067 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j1363 
=== Succesors ===
next: j1375 
=== Usages ===
a1073 
=== Predecessor ===
v1361 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1363 #next: j1375  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1375 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2012 
=== Succesors ===
next: v1376 
=== Usages ===
v1376 
=== Predecessor ===
a1067 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2012 #next: v1376  <|@  <|@
f <@~|@floating>@ <|@
tid v1999 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1363 
index: - 
=== Succesors ===
=== Usages ===
v1376 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1363 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1376 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1999 
value: j1375 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1380 
=== Usages ===
=== Predecessor ===
j1375 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1999 value: j1375 stateAfter: - lastLocationAccess: - #next: v1380  <|@  <|@
f <@~|@floating>@ <|@
tid v2000 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1363 
index: - 
=== Succesors ===
=== Usages ===
v1380 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1363 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1380 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2000 
value: v1493 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1384 
=== Usages ===
=== Predecessor ===
v1376 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2000 value: v1493 stateAfter: - lastLocationAccess: - #next: v1384  <|@  <|@
f <@~|@floating>@ <|@
tid v2016 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1363 
index: - 
=== Succesors ===
=== Usages ===
v1384 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1363 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a1085 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: char[0]{}
stableDimension: 1
stamp: n!# [C
stampKind: n -
value: NarrowOop[char[0]{}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1384 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1384 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2016 
value: a1085 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1386 
=== Usages ===
=== Predecessor ===
v1380 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2016 value: a1085 stateAfter: - lastLocationAccess: - #next: v1386  <|@  <|@
f <@~|@floating>@ <|@
tid v2017 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j1363 
index: - 
=== Succesors ===
=== Usages ===
v1386 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1363 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1386 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2017 
value: i9 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1073 
=== Usages ===
=== Predecessor ===
v1384 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2017 value: i9 stateAfter: - lastLocationAccess: - #next: a1073  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1073 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1067 
=== Succesors ===
next: v1074 
=== Usages ===
v261 
=== Predecessor ===
v1386 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1067 #next: v1074  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1074 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v261 
=== Usages ===
=== Predecessor ===
a1073 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v261  <|@  <|@
f <@*|@fixed>@ <|@
tid v261 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a1073 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1074 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a1073 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B117" "B119" 
    xhandlers
    flags 
    probability 4606014939411817830
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v227 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 50]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1959 
=== Usages ===
=== Predecessor ===
v228 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1959  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1959 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 52]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1968 
=== Succesors ===
next: v1063 
=== Usages ===
i238 i1153 v1131 
=== Predecessor ===
v227 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1968 #next: v1063  <|@  <|@
f <@~|@floating>@ <|@
tid i238 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 54]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: i32
=== Inputs ===
x: i1959 
y: i219 
=== Succesors ===
=== Usages ===
v239 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i1959 y: i219  <|@  <|@
f <@~|@floating>@ <|@
tid v239 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 55]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i238 
y: i9 
=== Succesors ===
=== Usages ===
v1063 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i238 y: i9  <|@  <|@
f <@*|@fixed>@ <|@
tid v1063 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 55]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v239 
=== Succesors ===
trueSuccessor: v1062 
falseSuccessor: v1060 
=== Usages ===
=== Predecessor ===
i1959 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v239 #trueSuccessor: v1062 #falseSuccessor: v1060  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1062 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 55]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1197 
=== Usages ===
=== Predecessor ===
v1063 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1197  <|@  <|@
f <@~|@floating>@ <|@
tid i1198 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -224787
stableDimension: 0
stamp: i32 [-224787] ⇊00000000fffc91ed ⇈00000000fffc91ed
stampKind: i32
value: int[-224787|0xfffffffffffc91ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1192 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1197 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1189 
=== Predecessor ===
v1062 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B111" "B117" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1192 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-236299 - -222483] ⇊00000000fffc00e5 ⇈00000000fffcfffd
valueDescription: i32
=== Inputs ===
merge: v1189 
values: i1196 i1198 
=== Succesors ===
=== Usages ===
v1194 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1189 values: i1196 i1198  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1189 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1195 v1197 
=== Succesors ===
next: v1194 
=== Usages ===
i1192 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1195 v1197 #next: v1194  <|@  <|@
f <@*|@fixed>@ <|@
tid v1194 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?6 
actionAndReason: i1192 
speculation: a1183 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1189 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?6 actionAndReason: i1192 speculation: a1183  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" "B123" 
    xhandlers
    flags 
    probability 4606014939411817830
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1060 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 55]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1392 
=== Usages ===
=== Predecessor ===
v1063 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1392  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1392 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1433 
=== Usages ===
v2001 v2002 
=== Predecessor ===
v1060 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1433  <|@  <|@
f <@~|@floating>@ <|@
tid v2001 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1392 
index: - 
=== Succesors ===
=== Usages ===
j1433 v1435 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1392 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1433 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2001 
=== Succesors ===
next: j1434 
=== Usages ===
j1396 v2003 v2004 a1412 v2009 v2005 v2006 v2007 v2008 
=== Predecessor ===
j1392 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2001 #next: j1434  <|@  <|@
f <@~|@floating>@ <|@
tid v2002 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1392 
index: - 
=== Succesors ===
=== Usages ===
j1434 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1392 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1434 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2002 
=== Succesors ===
next: v1401 
=== Usages ===
v1402 
=== Predecessor ===
j1433 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2002 #next: v1401  <|@  <|@
f <@~|@floating>@ <|@
tid i1397 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1398 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1398 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i219 
y: i1397 
=== Succesors ===
=== Usages ===
v1401 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i219 y: i1397  <|@  <|@
f <@*|@fixed>@ <|@
tid v1401 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v1398 
=== Succesors ===
trueSuccessor: v1400 
falseSuccessor: v1399 
=== Usages ===
=== Predecessor ===
j1434 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1398 #trueSuccessor: v1400 #falseSuccessor: v1399  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B121" "B122" 
    xhandlers
    flags 
    probability 4605230967425163689
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1400 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1408 
=== Usages ===
=== Predecessor ===
v1401 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1408  <|@  <|@
f <@~|@floating>@ <|@
tid i1389 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i219 
y: i14 
=== Succesors ===
=== Usages ===
i1421 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i219 y: i14  <|@  <|@
f <@~|@floating>@ <|@
tid i1420 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1421 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1421 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i1389 
y: i1420 
=== Succesors ===
=== Usages ===
i1391 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1389 y: i1420  <|@  <|@
f <@~|@floating>@ <|@
tid i1390 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1391 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1391 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i1421 
y: i1390 
=== Succesors ===
=== Usages ===
j1395 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i1421 y: i1390  <|@  <|@
f <@~|@floating>@ <|@
tid j1395 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i1391 
=== Succesors ===
=== Usages ===
j1396 v2005 v2006 v2007 v2008 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1391  <|@  <|@
f <@~|@floating>@ <|@
tid j1396 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: i64
=== Inputs ===
x: j1395 
y: j1433 
=== Succesors ===
=== Usages ===
v1402 v1435 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1395 y: j1433  <|@  <|@
f <@~|@floating>@ <|@
tid v1402 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1434 
y: j1396 
=== Succesors ===
=== Usages ===
v1408 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1434 y: j1396  <|@  <|@
f <@*|@fixed>@ <|@
tid v1408 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1402 
=== Succesors ===
trueSuccessor: v1407 
falseSuccessor: v1406 
=== Usages ===
=== Predecessor ===
v1400 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1402 #trueSuccessor: v1407 #falseSuccessor: v1406  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B124" 
    xhandlers
    flags 
    probability 4575669300424181299
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1407 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1405 
=== Usages ===
=== Predecessor ===
v1408 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1405  <|@  <|@
f <@*|@fixed>@ <|@
tid v1405 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1404 
=== Predecessor ===
v1407 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B125" 
    xhandlers
    flags 
    probability 4605160409946364816
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1406 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1435 
=== Usages ===
=== Predecessor ===
v1408 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1435  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1435 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2001 
value: j1396 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1423 
=== Usages ===
=== Predecessor ===
v1406 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2001 value: j1396 stateAfter: - lastLocationAccess: - #next: v1423  <|@  <|@
f <@~|@floating>@ <|@
tid v2005 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j1395 
index: j1433 
=== Succesors ===
=== Usages ===
v1423 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1395 index: j1433  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1423 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
=== Inputs ===
address: v2005 
=== Succesors ===
next: v1425 
=== Usages ===
=== Predecessor ===
v1435 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2005 #next: v1425  <|@  <|@
f <@~|@floating>@ <|@
tid v2006 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j1395 
index: j1433 
=== Succesors ===
=== Usages ===
v1425 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1395 index: j1433  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1425 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
=== Inputs ===
address: v2006 
=== Succesors ===
next: v1428 
=== Usages ===
=== Predecessor ===
v1423 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2006 #next: v1428  <|@  <|@
f <@~|@floating>@ <|@
tid v2007 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j1395 
index: j1433 
=== Succesors ===
=== Usages ===
v1428 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1395 index: j1433  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1428 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
=== Inputs ===
address: v2007 
=== Succesors ===
next: v1431 
=== Usages ===
=== Predecessor ===
v1425 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2007 #next: v1431  <|@  <|@
f <@~|@floating>@ <|@
tid v2008 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j1395 
index: j1433 
=== Succesors ===
=== Usages ===
v1431 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1395 index: j1433  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1431 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
=== Inputs ===
address: v2008 
=== Succesors ===
next: v1436 
=== Usages ===
=== Predecessor ===
v1428 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2008 #next: v1436  <|@  <|@
f <@~|@floating>@ <|@
tid v2003 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1433 
index: - 
=== Succesors ===
=== Usages ===
v1436 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1433 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1436 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2003 
value: i219 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1437 
=== Usages ===
=== Predecessor ===
v1431 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2003 value: i219 stateAfter: - lastLocationAccess: - #next: v1437  <|@  <|@
f <@~|@floating>@ <|@
tid v2004 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1433 
index: - 
=== Succesors ===
=== Usages ===
v1437 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1433 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1437 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2004 
value: j1388 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1440 
=== Usages ===
=== Predecessor ===
v1436 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2004 value: j1388 stateAfter: - lastLocationAccess: - #next: v1440  <|@  <|@
f <@~|@floating>@ <|@
tid v2009 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1433 
index: - 
=== Succesors ===
=== Usages ===
v1440 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1433 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1496 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
rawvalue: meta{HotSpotType<[C, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[C, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1440 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1440 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2009 
value: v1496 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1411 
=== Usages ===
=== Predecessor ===
v1437 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2009 value: v1496 stateAfter: - lastLocationAccess: - #next: v1411  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1411 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1412 
=== Usages ===
=== Predecessor ===
v1440 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a1412  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1412 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j1433 
=== Succesors ===
next: v1414 
=== Usages ===
a1417 
=== Predecessor ===
v1411 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1433 #next: v1414  <|@  <|@
f <@*|@fixed>@ <|@
tid v1414 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1415 
=== Predecessor ===
a1412 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B124" 
    xhandlers
    flags 
    probability 4590936196556398058
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1399 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1403 
=== Usages ===
=== Predecessor ===
v1401 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1403  <|@  <|@
f <@*|@fixed>@ <|@
tid v1403 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1404 
=== Predecessor ===
v1399 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B123" "B121" 
    successors "B125" 
    xhandlers
    flags 
    probability 4591500656386789040
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1404 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1403 v1405 
=== Succesors ===
next: a1413 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1403 v1405 #next: a1413  <|@  <|@
f <@~|@floating>@ <|@
tid v1387 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
rawvalue: meta{HotSpotType<[C, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[C, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a1413 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1413 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?6 
arguments: v1387 i219 i9 
=== Succesors ===
next: v1416 
=== Usages ===
a1417 
=== Predecessor ===
v1404 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?6 arguments: v1387 i219 i9 #next: v1416  <|@  <|@
f <@*|@fixed>@ <|@
tid v1416 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1415 
=== Predecessor ===
a1413 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B122" "B124" 
    successors "B126" "B127" 
    xhandlers
    flags 
    probability 4606014939411817830
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a1417 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v1415 
values: a1412 a1413 
=== Succesors ===
=== Usages ===
v2021 a1165 v1986 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1415 values: a1412 a1413  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1415 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1414 v1416 
=== Succesors ===
next: v1759 
=== Usages ===
a1417 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1414 v1416 #next: v1759  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1759 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v1580 
=== Usages ===
j1760 j1762 
=== Predecessor ===
v1415 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v1580  <|@  <|@
f <@~|@floating>@ <|@
tid v1131 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:102) [bci: 9]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1959 
y: i219 
=== Succesors ===
=== Usages ===
i1153 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1959 y: i219  <|@  <|@
f <@~|@floating>@ <|@
tid i1153 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v1131 
trueValue: i1959 
falseValue: i219 
=== Succesors ===
=== Usages ===
j1568 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v1131 trueValue: i1959 falseValue: i219  <|@  <|@
f <@~|@floating>@ <|@
tid j1568 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1153 
=== Succesors ===
=== Usages ===
j1817 v2021 j1572 v1577 v1702 j1803 j1808 j1811 j1814 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1153  <|@  <|@
f <@~|@floating>@ <|@
tid v1577 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1568 
y: j1388 
=== Succesors ===
=== Usages ===
v1580 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1568 y: j1388  <|@  <|@
f <@~|@floating>@ <|@
tid j1748 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1862 j1811 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1378 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1794 j1847 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1744 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1859 j1808 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1738 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16
stableDimension: 0
stamp: i64 [-16] ⇊fffffffffffffff0 ⇈fffffffffffffff0
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1854 j1803 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1580 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1577 
=== Succesors ===
trueSuccessor: v1578 
falseSuccessor: v1579 
=== Usages ===
=== Predecessor ===
v1759 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1577 #trueSuccessor: v1578 #falseSuccessor: v1579  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B144" 
    xhandlers
    flags 
    probability 4601511339784447334
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1578 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1596 
=== Usages ===
=== Predecessor ===
v1580 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1596  <|@  <|@
f <@*|@fixed>@ <|@
tid v1596 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1597 
=== Predecessor ===
v1578 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B128" "B129" 
    xhandlers
    flags 
    probability 4601511339784447334
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1579 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1583 
=== Usages ===
=== Predecessor ===
v1580 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1583  <|@  <|@
f <@~|@floating>@ <|@
tid v1986 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1417 
index: - 
=== Succesors ===
=== Usages ===
j1762 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1417 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1762 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1759 
address: v1986 
=== Succesors ===
=== Usages ===
v2023 v2025 v2027 v2029 v2031 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1759 address: v1986  <|@  <|@
f <@~|@floating>@ <|@
tid v2044 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1948 
=== Succesors ===
=== Usages ===
j1760 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1948  <|@  <|@
f <@~|@floating>@ <|@
tid j1760 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1759 
address: v2044 
=== Succesors ===
=== Usages ===
v2024 v2026 v2028 v2030 v2032 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1759 address: v2044  <|@  <|@
f <@~|@floating>@ <|@
tid j1803 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483664 - 2147483631]
=== Inputs ===
x: j1568 
y: j1738 
=== Succesors ===
=== Usages ===
v1804 v1806 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1568 y: j1738  <|@  <|@
f <@~|@floating>@ <|@
tid v1804 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1803 
y: j1065 
=== Succesors ===
=== Usages ===
v1583 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1803 y: j1065  <|@  <|@
f <@*|@fixed>@ <|@
tid v1583 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v1804 
=== Succesors ===
trueSuccessor: v1581 
falseSuccessor: v1582 
=== Usages ===
=== Predecessor ===
v1579 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1804 #trueSuccessor: v1581 #falseSuccessor: v1582  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B132" 
    xhandlers
    flags 
    probability 4599551409817811980
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1581 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1592 
=== Usages ===
=== Predecessor ===
v1583 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1592  <|@  <|@
f <@*|@fixed>@ <|@
tid v1592 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1593 
=== Predecessor ===
v1581 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B130" 
    xhandlers
    flags 
    probability 4592504140529706342
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1582 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1584 
=== Usages ===
=== Predecessor ===
v1583 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1584  <|@  <|@
f <@*|@fixed>@ <|@
tid v1584 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1585 
=== Predecessor ===
v1582 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" "B168" 
    successors "B131" "B168" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4601511339784447334
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1795 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1585 
values: j1065 j1802 
=== Succesors ===
=== Usages ===
v2032 j1802 v2031 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1585 values: j1065 j1802  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1585 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v1584 
=== Succesors ===
next: v1960 
=== Usages ===
v1960 v1588 v1589 j1795 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v1584 #next: v1960  <|@  <|@
f <@~|@floating>@ <|@
tid v2032 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1760 
index: j1795 
=== Succesors ===
=== Usages ===
v1960 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1760 index: j1795  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1960 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v1585 
address: v2032 
=== Succesors ===
next: v1899 
=== Usages ===
v1899 
=== Predecessor ===
v1585 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1585 address: v2032 #next: v1899  <|@  <|@
f <@~|@floating>@ <|@
tid v2031 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1762 
index: j1795 
=== Succesors ===
=== Usages ===
v1899 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1762 index: j1795  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1899 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2031 
value: v1960 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1591 
=== Usages ===
=== Predecessor ===
v1960 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2031 value: v1960 stateAfter: - lastLocationAccess: - #next: v1591  <|@  <|@
f <@~|@floating>@ <|@
tid j1802 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1795 
y: j456 
=== Succesors ===
=== Usages ===
j1787 j1795 v1806 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1795 y: j456  <|@  <|@
f <@~|@floating>@ <|@
tid v1806 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1803 
y: j1802 
=== Succesors ===
=== Usages ===
v1591 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1803 y: j1802  <|@  <|@
f <@*|@fixed>@ <|@
tid v1591 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1806 
=== Succesors ===
trueSuccessor: v1588 
falseSuccessor: v1590 
=== Usages ===
=== Predecessor ===
v1899 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1806 #trueSuccessor: v1588 #falseSuccessor: v1590  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B130" 
    successors "B132" 
    xhandlers
    flags 
    probability 4592504140529706342
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1588 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v1585 
=== Succesors ===
next: v1594 
=== Usages ===
=== Predecessor ===
v1591 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v1585 #next: v1594  <|@  <|@
f <@*|@fixed>@ <|@
tid v1594 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1593 
=== Predecessor ===
v1588 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B128" "B131" 
    successors "B133" "B134" 
    xhandlers
    flags 
    probability 4601511339784447334
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1787 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1593 
values: j1065 j1802 
=== Succesors ===
=== Usages ===
v2030 j1794 j1779 v1809 v2029 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1593 values: j1065 j1802  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1593 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1592 v1594 
=== Succesors ===
next: v1615 
=== Usages ===
j1787 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1592 v1594 #next: v1615  <|@  <|@
f <@~|@floating>@ <|@
tid j1808 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j1568 
y: j1744 
=== Succesors ===
=== Usages ===
v1809 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1568 y: j1744  <|@  <|@
f <@~|@floating>@ <|@
tid v1809 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1808 
y: j1787 
=== Succesors ===
=== Usages ===
v1615 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1808 y: j1787  <|@  <|@
f <@*|@fixed>@ <|@
tid v1615 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1809 
=== Succesors ===
trueSuccessor: v1614 
falseSuccessor: v1613 
=== Usages ===
=== Predecessor ===
v1593 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1809 #trueSuccessor: v1614 #falseSuccessor: v1613  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B135" 
    xhandlers
    flags 
    probability 4592504140529706342
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1614 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1618 
=== Usages ===
=== Predecessor ===
v1615 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1618  <|@  <|@
f <@*|@fixed>@ <|@
tid v1618 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1604 
=== Predecessor ===
v1614 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B135" 
    xhandlers
    flags 
    probability 4599551409817811980
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1613 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1961 
=== Usages ===
v1961 
=== Predecessor ===
v1615 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1961  <|@  <|@
f <@~|@floating>@ <|@
tid v2030 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1760 
index: j1787 
=== Succesors ===
=== Usages ===
v1961 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1760 index: j1787  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1961 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v1613 
address: v2030 
=== Succesors ===
next: v1897 
=== Usages ===
v1897 
=== Predecessor ===
v1613 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1613 address: v2030 #next: v1897  <|@  <|@
f <@~|@floating>@ <|@
tid v2029 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1762 
index: j1787 
=== Succesors ===
=== Usages ===
v1897 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1762 index: j1787  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1897 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2029 
value: v1961 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1603 
=== Usages ===
=== Predecessor ===
v1961 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2029 value: v1961 stateAfter: - lastLocationAccess: - #next: v1603  <|@  <|@
f <@~|@floating>@ <|@
tid j1794 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1787 
y: j1378 
=== Succesors ===
=== Usages ===
j1779 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1787 y: j1378  <|@  <|@
f <@*|@fixed>@ <|@
tid v1603 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1604 
=== Predecessor ===
v1897 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" "B133" 
    successors "B136" "B137" 
    xhandlers
    flags 
    probability 4601511339784447334
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1779 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1604 
values: j1794 j1787 
=== Succesors ===
=== Usages ===
v2028 j1786 j1771 v1812 v2027 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1604 values: j1794 j1787  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1604 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1603 v1618 
=== Succesors ===
next: v1621 
=== Usages ===
j1779 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1603 v1618 #next: v1621  <|@  <|@
f <@~|@floating>@ <|@
tid j1811 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j1568 
y: j1748 
=== Succesors ===
=== Usages ===
v1812 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1568 y: j1748  <|@  <|@
f <@~|@floating>@ <|@
tid v1812 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1811 
y: j1779 
=== Succesors ===
=== Usages ===
v1621 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1811 y: j1779  <|@  <|@
f <@*|@fixed>@ <|@
tid v1621 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1812 
=== Succesors ===
trueSuccessor: v1620 
falseSuccessor: v1619 
=== Usages ===
=== Predecessor ===
v1604 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1812 #trueSuccessor: v1620 #falseSuccessor: v1619  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B135" 
    successors "B138" 
    xhandlers
    flags 
    probability 4592504140529706342
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1620 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1624 
=== Usages ===
=== Predecessor ===
v1621 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1624  <|@  <|@
f <@*|@fixed>@ <|@
tid v1624 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1607 
=== Predecessor ===
v1620 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B135" 
    successors "B138" 
    xhandlers
    flags 
    probability 4599551409817811980
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1619 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1962 
=== Usages ===
v1962 
=== Predecessor ===
v1621 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1962  <|@  <|@
f <@~|@floating>@ <|@
tid v2028 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1760 
index: j1779 
=== Succesors ===
=== Usages ===
v1962 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1760 index: j1779  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1962 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v1619 
address: v2028 
=== Succesors ===
next: v1895 
=== Usages ===
v1895 
=== Predecessor ===
v1619 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1619 address: v2028 #next: v1895  <|@  <|@
f <@~|@floating>@ <|@
tid v2027 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1762 
index: j1779 
=== Succesors ===
=== Usages ===
v1895 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1762 index: j1779  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1895 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2027 
value: v1962 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1606 
=== Usages ===
=== Predecessor ===
v1962 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2027 value: v1962 stateAfter: - lastLocationAccess: - #next: v1606  <|@  <|@
f <@~|@floating>@ <|@
tid j1786 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1779 
y: j1110 
=== Succesors ===
=== Usages ===
j1771 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1779 y: j1110  <|@  <|@
f <@*|@fixed>@ <|@
tid v1606 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1607 
=== Predecessor ===
v1895 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B137" "B136" 
    successors "B139" "B140" 
    xhandlers
    flags 
    probability 4601511339784447334
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1771 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1607 
values: j1786 j1779 
=== Succesors ===
=== Usages ===
v2026 j1778 j1763 v1815 v2025 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1607 values: j1786 j1779  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1607 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1606 v1624 
=== Succesors ===
next: v1627 
=== Usages ===
j1771 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1606 v1624 #next: v1627  <|@  <|@
f <@~|@floating>@ <|@
tid j1814 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j1568 
y: j1752 
=== Succesors ===
=== Usages ===
v1815 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1568 y: j1752  <|@  <|@
f <@~|@floating>@ <|@
tid v1815 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1814 
y: j1771 
=== Succesors ===
=== Usages ===
v1627 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1814 y: j1771  <|@  <|@
f <@*|@fixed>@ <|@
tid v1627 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1815 
=== Succesors ===
trueSuccessor: v1626 
falseSuccessor: v1625 
=== Usages ===
=== Predecessor ===
v1607 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1815 #trueSuccessor: v1626 #falseSuccessor: v1625  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B138" 
    successors "B141" 
    xhandlers
    flags 
    probability 4592504140529706342
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1626 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1630 
=== Usages ===
=== Predecessor ===
v1627 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1630  <|@  <|@
f <@*|@fixed>@ <|@
tid v1630 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1610 
=== Predecessor ===
v1626 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B138" 
    successors "B141" 
    xhandlers
    flags 
    probability 4599551409817811980
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1625 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1963 
=== Usages ===
v1963 
=== Predecessor ===
v1627 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1963  <|@  <|@
f <@~|@floating>@ <|@
tid v2026 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1760 
index: j1771 
=== Succesors ===
=== Usages ===
v1963 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1760 index: j1771  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1963 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16>
=== Inputs ===
stateBefore: - 
guard: v1625 
address: v2026 
=== Succesors ===
next: v1893 
=== Usages ===
v1893 
=== Predecessor ===
v1625 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1625 address: v2026 #next: v1893  <|@  <|@
f <@~|@floating>@ <|@
tid v2025 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1762 
index: j1771 
=== Succesors ===
=== Usages ===
v1893 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1762 index: j1771  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1893 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2025 
value: v1963 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1609 
=== Usages ===
=== Predecessor ===
v1963 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2025 value: v1963 stateAfter: - lastLocationAccess: - #next: v1609  <|@  <|@
f <@~|@floating>@ <|@
tid j1778 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1771 
y: j1086 
=== Succesors ===
=== Usages ===
j1763 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1771 y: j1086  <|@  <|@
f <@*|@fixed>@ <|@
tid v1609 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1610 
=== Predecessor ===
v1893 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" "B139" 
    successors "B142" "B143" 
    xhandlers
    flags 
    probability 4601511339784447334
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1763 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1610 
values: j1778 j1771 
=== Succesors ===
=== Usages ===
v2024 v1818 v2023 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1610 values: j1778 j1771  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1610 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1609 v1630 
=== Succesors ===
next: v1633 
=== Usages ===
j1763 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1609 v1630 #next: v1633  <|@  <|@
f <@~|@floating>@ <|@
tid j1817 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j1568 
y: j935 
=== Succesors ===
=== Usages ===
v1818 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1568 y: j935  <|@  <|@
f <@~|@floating>@ <|@
tid v1818 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1817 
y: j1763 
=== Succesors ===
=== Usages ===
v1633 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1817 y: j1763  <|@  <|@
f <@*|@fixed>@ <|@
tid v1633 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1818 
=== Succesors ===
trueSuccessor: v1632 
falseSuccessor: v1631 
=== Usages ===
=== Predecessor ===
v1610 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1818 #trueSuccessor: v1632 #falseSuccessor: v1631  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B144" 
    xhandlers
    flags 
    probability 4592504140529706342
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1632 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1636 
=== Usages ===
=== Predecessor ===
v1633 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1636  <|@  <|@
f <@*|@fixed>@ <|@
tid v1636 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1597 
=== Predecessor ===
v1632 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B144" 
    xhandlers
    flags 
    probability 4599551409817811980
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1631 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i1964 
=== Usages ===
i1964 
=== Predecessor ===
v1633 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1964  <|@  <|@
f <@~|@floating>@ <|@
tid v2024 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1760 
index: j1763 
=== Succesors ===
=== Usages ===
i1964 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1760 index: j1763  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1964 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v1631 
address: v2024 
=== Succesors ===
next: v1891 
=== Usages ===
v1891 
=== Predecessor ===
v1631 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1631 address: v2024 #next: v1891  <|@  <|@
f <@~|@floating>@ <|@
tid v2023 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1762 
index: j1763 
=== Succesors ===
=== Usages ===
v1891 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1762 index: j1763  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1891 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2023 
value: i1964 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1612 
=== Usages ===
=== Predecessor ===
i1964 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2023 value: i1964 stateAfter: - lastLocationAccess: - #next: v1612  <|@  <|@
f <@*|@fixed>@ <|@
tid v1612 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1597 
=== Predecessor ===
v1891 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B126" "B143" "B142" 
    successors "B145" "B163" 
    xhandlers
    flags 
    probability 4606014939411817830
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1597 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1596 v1612 v1636 
=== Succesors ===
next: v1821 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1596 v1612 v1636 #next: v1821  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1821 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v1643 
=== Usages ===
j1823 
=== Predecessor ===
v1597 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v1643  <|@  <|@
f <@~|@floating>@ <|@
tid j1567 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i219 
=== Succesors ===
=== Usages ===
j1572 v1702 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i219  <|@  <|@
f <@~|@floating>@ <|@
tid v1702 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1568 
y: j1567 
=== Succesors ===
=== Usages ===
v1643 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1568 y: j1567  <|@  <|@
f <@*|@fixed>@ <|@
tid v1643 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1702 
=== Succesors ===
trueSuccessor: v1642 
falseSuccessor: v1641 
=== Usages ===
=== Predecessor ===
v1821 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1702 #trueSuccessor: v1642 #falseSuccessor: v1641  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B146" "B147" 
    xhandlers
    flags 
    probability 4601511339784447334
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1642 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1646 
=== Usages ===
=== Predecessor ===
v1643 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1646  <|@  <|@
f <@~|@floating>@ <|@
tid v2021 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a1417 
index: j1568 
=== Succesors ===
=== Usages ===
j1823 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1417 index: j1568  <|@  <|@
f <@~|@floating>@ <|@
tid j1823 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1821 
address: v2021 
=== Succesors ===
=== Usages ===
v2033 v2034 v2035 v2036 v2037 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1821 address: v2021  <|@  <|@
f <@~|@floating>@ <|@
tid j1572 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j1567 
y: j1568 
=== Succesors ===
=== Usages ===
j1868 j1854 j1859 j1862 j1865 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j1567 y: j1568  <|@  <|@
f <@~|@floating>@ <|@
tid j1854 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967311 - 4294967279]
=== Inputs ===
x: j1572 
y: j1738 
=== Succesors ===
=== Usages ===
v1855 v1857 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1572 y: j1738  <|@  <|@
f <@~|@floating>@ <|@
tid v1855 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1854 
y: j1065 
=== Succesors ===
=== Usages ===
v1646 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1854 y: j1065  <|@  <|@
f <@*|@fixed>@ <|@
tid v1646 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v1855 
=== Succesors ===
trueSuccessor: v1644 
falseSuccessor: v1645 
=== Usages ===
=== Predecessor ===
v1642 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1855 #trueSuccessor: v1644 #falseSuccessor: v1645  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B145" 
    successors "B150" 
    xhandlers
    flags 
    probability 4599551409817811980
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1644 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1655 
=== Usages ===
=== Predecessor ===
v1646 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1655  <|@  <|@
f <@*|@fixed>@ <|@
tid v1655 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1656 
=== Predecessor ===
v1644 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B145" 
    successors "B148" 
    xhandlers
    flags 
    probability 4592504140529706342
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1645 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1647 
=== Usages ===
=== Predecessor ===
v1646 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1647  <|@  <|@
f <@~|@floating>@ <|@
tid v1914 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1909 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1647 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1648 
=== Predecessor ===
v1645 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B147" "B162" 
    successors "B149" "B162" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4601511339784447334
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1848 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1648 
values: j1065 j1853 
=== Succesors ===
=== Usages ===
v2037 j1853 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1648 values: j1065 j1853  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1648 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v1647 
=== Succesors ===
next: v1909 
=== Usages ===
j1848 v1651 v1652 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v1647 #next: v1909  <|@  <|@
f <@~|@floating>@ <|@
tid v2037 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1823 
index: j1848 
=== Succesors ===
=== Usages ===
v1909 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1823 index: j1848  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1909 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2037 
value: v1914 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1654 
=== Usages ===
=== Predecessor ===
v1648 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2037 value: v1914 stateAfter: - lastLocationAccess: - #next: v1654  <|@  <|@
f <@~|@floating>@ <|@
tid j1853 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1848 
y: j456 
=== Succesors ===
=== Usages ===
j1842 j1848 v1857 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1848 y: j456  <|@  <|@
f <@~|@floating>@ <|@
tid v1857 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1854 
y: j1853 
=== Succesors ===
=== Usages ===
v1654 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1854 y: j1853  <|@  <|@
f <@*|@fixed>@ <|@
tid v1654 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1857 
=== Succesors ===
trueSuccessor: v1651 
falseSuccessor: v1653 
=== Usages ===
=== Predecessor ===
v1909 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1857 #trueSuccessor: v1651 #falseSuccessor: v1653  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B148" 
    successors "B150" 
    xhandlers
    flags 
    probability 4592504140529706342
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1651 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v1648 
=== Succesors ===
next: v1657 
=== Usages ===
=== Predecessor ===
v1654 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v1648 #next: v1657  <|@  <|@
f <@*|@fixed>@ <|@
tid v1657 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1656 
=== Predecessor ===
v1651 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B146" "B149" 
    successors "B151" "B152" 
    xhandlers
    flags 
    probability 4601511339784447334
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1842 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1656 
values: j1065 j1853 
=== Succesors ===
=== Usages ===
v2036 j1847 j1836 v1860 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1656 values: j1065 j1853  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1656 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1655 v1657 
=== Succesors ===
next: v1678 
=== Usages ===
j1842 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1655 v1657 #next: v1678  <|@  <|@
f <@~|@floating>@ <|@
tid j1859 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j1572 
y: j1744 
=== Succesors ===
=== Usages ===
v1860 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1572 y: j1744  <|@  <|@
f <@~|@floating>@ <|@
tid v1860 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1859 
y: j1842 
=== Succesors ===
=== Usages ===
v1678 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1859 y: j1842  <|@  <|@
f <@*|@fixed>@ <|@
tid v1678 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1860 
=== Succesors ===
trueSuccessor: v1677 
falseSuccessor: v1676 
=== Usages ===
=== Predecessor ===
v1656 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1860 #trueSuccessor: v1677 #falseSuccessor: v1676  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B150" 
    successors "B153" 
    xhandlers
    flags 
    probability 4592504140529706342
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1677 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1681 
=== Usages ===
=== Predecessor ===
v1678 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1681  <|@  <|@
f <@*|@fixed>@ <|@
tid v1681 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1667 
=== Predecessor ===
v1677 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B150" 
    successors "B153" 
    xhandlers
    flags 
    probability 4599551409817811980
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1676 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1908 
=== Usages ===
=== Predecessor ===
v1678 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1908  <|@  <|@
f <@~|@floating>@ <|@
tid v2036 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1823 
index: j1842 
=== Succesors ===
=== Usages ===
v1908 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1823 index: j1842  <|@  <|@
f <@~|@floating>@ <|@
tid v1918 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1908 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1908 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2036 
value: v1918 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1666 
=== Usages ===
=== Predecessor ===
v1676 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2036 value: v1918 stateAfter: - lastLocationAccess: - #next: v1666  <|@  <|@
f <@~|@floating>@ <|@
tid j1847 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1842 
y: j1378 
=== Succesors ===
=== Usages ===
j1836 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1842 y: j1378  <|@  <|@
f <@*|@fixed>@ <|@
tid v1666 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1667 
=== Predecessor ===
v1908 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B152" "B151" 
    successors "B154" "B155" 
    xhandlers
    flags 
    probability 4601511339784447334
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1836 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1667 
values: j1847 j1842 
=== Succesors ===
=== Usages ===
v2035 j1841 j1830 v1863 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1667 values: j1847 j1842  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1667 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1666 v1681 
=== Succesors ===
next: v1684 
=== Usages ===
j1836 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1666 v1681 #next: v1684  <|@  <|@
f <@~|@floating>@ <|@
tid j1862 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j1572 
y: j1748 
=== Succesors ===
=== Usages ===
v1863 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1572 y: j1748  <|@  <|@
f <@~|@floating>@ <|@
tid v1863 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1862 
y: j1836 
=== Succesors ===
=== Usages ===
v1684 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1862 y: j1836  <|@  <|@
f <@*|@fixed>@ <|@
tid v1684 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1863 
=== Succesors ===
trueSuccessor: v1683 
falseSuccessor: v1682 
=== Usages ===
=== Predecessor ===
v1667 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1863 #trueSuccessor: v1683 #falseSuccessor: v1682  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B153" 
    successors "B156" 
    xhandlers
    flags 
    probability 4592504140529706342
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1683 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1687 
=== Usages ===
=== Predecessor ===
v1684 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1687  <|@  <|@
f <@*|@fixed>@ <|@
tid v1687 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1670 
=== Predecessor ===
v1683 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B153" 
    successors "B156" 
    xhandlers
    flags 
    probability 4599551409817811980
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1682 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1906 
=== Usages ===
=== Predecessor ===
v1684 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1906  <|@  <|@
f <@~|@floating>@ <|@
tid v2035 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1823 
index: j1836 
=== Succesors ===
=== Usages ===
v1906 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1823 index: j1836  <|@  <|@
f <@~|@floating>@ <|@
tid v1917 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1906 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1906 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2035 
value: v1917 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1669 
=== Usages ===
=== Predecessor ===
v1682 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2035 value: v1917 stateAfter: - lastLocationAccess: - #next: v1669  <|@  <|@
f <@~|@floating>@ <|@
tid j1841 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1836 
y: j1110 
=== Succesors ===
=== Usages ===
j1830 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1836 y: j1110  <|@  <|@
f <@*|@fixed>@ <|@
tid v1669 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1670 
=== Predecessor ===
v1906 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B156"
    from_bci -1
    to_bci -1
    predecessors "B155" "B154" 
    successors "B157" "B158" 
    xhandlers
    flags 
    probability 4601511339784447334
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1830 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1670 
values: j1841 j1836 
=== Succesors ===
=== Usages ===
v2034 j1835 j1824 v1866 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1670 values: j1841 j1836  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1670 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1669 v1687 
=== Succesors ===
next: v1690 
=== Usages ===
j1830 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1669 v1687 #next: v1690  <|@  <|@
f <@~|@floating>@ <|@
tid j1865 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j1572 
y: j1752 
=== Succesors ===
=== Usages ===
v1866 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1572 y: j1752  <|@  <|@
f <@~|@floating>@ <|@
tid v1866 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1865 
y: j1830 
=== Succesors ===
=== Usages ===
v1690 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1865 y: j1830  <|@  <|@
f <@*|@fixed>@ <|@
tid v1690 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1866 
=== Succesors ===
trueSuccessor: v1689 
falseSuccessor: v1688 
=== Usages ===
=== Predecessor ===
v1670 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1866 #trueSuccessor: v1689 #falseSuccessor: v1688  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B157"
    from_bci -1
    to_bci -1
    predecessors "B156" 
    successors "B159" 
    xhandlers
    flags 
    probability 4592504140529706342
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1689 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1693 
=== Usages ===
=== Predecessor ===
v1690 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1693  <|@  <|@
f <@*|@fixed>@ <|@
tid v1693 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1673 
=== Predecessor ===
v1689 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B158"
    from_bci -1
    to_bci -1
    predecessors "B156" 
    successors "B159" 
    xhandlers
    flags 
    probability 4599551409817811980
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1688 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1904 
=== Usages ===
=== Predecessor ===
v1690 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1904  <|@  <|@
f <@~|@floating>@ <|@
tid v2034 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1823 
index: j1830 
=== Succesors ===
=== Usages ===
v1904 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1823 index: j1830  <|@  <|@
f <@~|@floating>@ <|@
tid v1916 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16>
value: SIMD<0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1904 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1904 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2034 
value: v1916 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1672 
=== Usages ===
=== Predecessor ===
v1688 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2034 value: v1916 stateAfter: - lastLocationAccess: - #next: v1672  <|@  <|@
f <@~|@floating>@ <|@
tid j1835 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1830 
y: j1086 
=== Succesors ===
=== Usages ===
j1824 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1830 y: j1086  <|@  <|@
f <@*|@fixed>@ <|@
tid v1672 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1673 
=== Predecessor ===
v1904 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B159"
    from_bci -1
    to_bci -1
    predecessors "B158" "B157" 
    successors "B160" "B161" 
    xhandlers
    flags 
    probability 4601511339784447334
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1824 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1673 
values: j1835 j1830 
=== Succesors ===
=== Usages ===
v2033 v1869 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1673 values: j1835 j1830  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1673 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1672 v1693 
=== Succesors ===
next: v1696 
=== Usages ===
j1824 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1672 v1693 #next: v1696  <|@  <|@
f <@~|@floating>@ <|@
tid j1868 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j1572 
y: j935 
=== Succesors ===
=== Usages ===
v1869 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1572 y: j935  <|@  <|@
f <@~|@floating>@ <|@
tid v1869 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1868 
y: j1824 
=== Succesors ===
=== Usages ===
v1696 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1868 y: j1824  <|@  <|@
f <@*|@fixed>@ <|@
tid v1696 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1869 
=== Succesors ===
trueSuccessor: v1695 
falseSuccessor: v1694 
=== Usages ===
=== Predecessor ===
v1673 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1869 #trueSuccessor: v1695 #falseSuccessor: v1694  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B160"
    from_bci -1
    to_bci -1
    predecessors "B159" 
    successors "B164" 
    xhandlers
    flags 
    probability 4592504140529706342
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1695 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1699 
=== Usages ===
=== Predecessor ===
v1696 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1699  <|@  <|@
f <@*|@fixed>@ <|@
tid v1699 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1660 
=== Predecessor ===
v1695 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B161"
    from_bci -1
    to_bci -1
    predecessors "B159" 
    successors "B164" 
    xhandlers
    flags 
    probability 4599551409817811980
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1694 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1902 
=== Usages ===
=== Predecessor ===
v1696 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1902  <|@  <|@
f <@~|@floating>@ <|@
tid v2033 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1823 
index: j1824 
=== Succesors ===
=== Usages ===
v1902 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1823 index: j1824  <|@  <|@
f <@~|@floating>@ <|@
tid i1915 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i16 [0] ⇈0000000000000000
stampKind: i16
value: short[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1902 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1902 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2033 
value: i1915 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1675 
=== Usages ===
=== Predecessor ===
v1694 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2033 value: i1915 stateAfter: - lastLocationAccess: - #next: v1675  <|@  <|@
f <@*|@fixed>@ <|@
tid v1675 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1660 
=== Predecessor ===
v1902 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B162"
    from_bci -1
    to_bci -1
    predecessors "B148" 
    successors "B148" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4599551409817811980
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1653 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1652 
=== Usages ===
=== Predecessor ===
v1654 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1652  <|@  <|@
f <@*|@fixed>@ <|@
tid v1652 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v1648 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1653 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v1648  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B163"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B164" 
    xhandlers
    flags 
    probability 4601511339784447334
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1641 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1659 
=== Usages ===
=== Predecessor ===
v1643 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1659  <|@  <|@
f <@*|@fixed>@ <|@
tid v1659 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1660 
=== Predecessor ===
v1641 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B164"
    from_bci -1
    to_bci -1
    predecessors "B163" "B161" "B160" 
    successors "B165" "B166" 
    xhandlers
    flags 
    probability 4606014939411817830
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1660 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1659 v1675 v1699 
=== Succesors ===
next: a1165 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1659 v1675 v1699 #next: a1165  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1165 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a1417 
=== Succesors ===
next: j1448 
=== Usages ===
a1080 
=== Predecessor ===
v1660 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1417 #next: j1448  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1448 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1463 
=== Usages ===
v2010 v2011 
=== Predecessor ===
a1165 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1463  <|@  <|@
f <@~|@floating>@ <|@
tid v2010 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1448 
index: - 
=== Succesors ===
=== Usages ===
j1463 v1465 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1448 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1463 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2010 
=== Succesors ===
next: j1464 
=== Usages ===
j1497 j1469 v2018 
=== Predecessor ===
j1448 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2010 #next: j1464  <|@  <|@
f <@~|@floating>@ <|@
tid v2011 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1448 
index: - 
=== Succesors ===
=== Usages ===
j1464 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1448 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1464 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2011 
=== Succesors ===
next: v1456 
=== Usages ===
v1453 
=== Predecessor ===
j1463 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2011 #next: v1456  <|@  <|@
f <@~|@floating>@ <|@
tid j1497 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1463 
y: j439 
=== Succesors ===
=== Usages ===
v1453 v1465 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1463 y: j439  <|@  <|@
f <@~|@floating>@ <|@
tid v1453 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1464 
y: j1497 
=== Succesors ===
=== Usages ===
v1456 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1464 y: j1497  <|@  <|@
f <@*|@fixed>@ <|@
tid v1456 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1453 
=== Succesors ===
trueSuccessor: v1454 
falseSuccessor: v1455 
=== Usages ===
=== Predecessor ===
j1464 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1453 #trueSuccessor: v1454 #falseSuccessor: v1455  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B165"
    from_bci -1
    to_bci -1
    predecessors "B164" 
    successors "B167" 
    xhandlers
    flags 
    probability 4576171042495639949
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1454 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a1459 
=== Usages ===
=== Predecessor ===
v1456 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1459  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1459 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?6 
arguments: v1336 i128 i14 
=== Succesors ===
next: j1460 
=== Usages ===
j1460 
=== Predecessor ===
v1454 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?6 arguments: v1336 i128 i14 #next: j1460  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1460 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1459 
=== Succesors ===
next: v1470 
=== Usages ===
j1469 
=== Predecessor ===
a1459 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1459 #next: v1470  <|@  <|@
f <@*|@fixed>@ <|@
tid v1470 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1467 
=== Predecessor ===
j1460 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B166"
    from_bci -1
    to_bci -1
    predecessors "B164" 
    successors "B167" 
    xhandlers
    flags 
    probability 4605936542213152416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1455 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1465 
=== Usages ===
=== Predecessor ===
v1456 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1465  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1465 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2010 
value: j1497 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1462 
=== Usages ===
=== Predecessor ===
v1455 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2010 value: j1497 stateAfter: - lastLocationAccess: - #next: v1462  <|@  <|@
f <@~|@floating>@ <|@
tid v2018 <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j1463 
index: - 
=== Succesors ===
=== Usages ===
v1462 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1463 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1462 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v2018 
=== Succesors ===
next: v1468 
=== Usages ===
=== Predecessor ===
v1465 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2018 #next: v1468  <|@  <|@
f <@*|@fixed>@ <|@
tid v1468 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1467 
=== Predecessor ===
v1462 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B167"
    from_bci -1
    to_bci -1
    predecessors "B166" "B165" 
    successors 
    xhandlers
    flags 
    probability 4606014939411817830
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1469 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1467 
values: j1463 j1460 
=== Succesors ===
=== Usages ===
v2014 v2013 a1077 v2019 v2020 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1467 values: j1463 j1460  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1467 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1468 v1470 
=== Succesors ===
next: a1077 
=== Usages ===
j1469 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1468 v1470 #next: a1077  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1077 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j1469 
=== Succesors ===
next: j1479 
=== Usages ===
a1083 
=== Predecessor ===
v1467 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1469 #next: j1479  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1479 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2012 
=== Succesors ===
next: v1480 
=== Usages ===
v1480 
=== Predecessor ===
a1077 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2012 #next: v1480  <|@  <|@
f <@~|@floating>@ <|@
tid v2013 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1469 
index: - 
=== Succesors ===
=== Usages ===
v1480 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1469 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1480 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2013 
value: j1479 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1483 
=== Usages ===
=== Predecessor ===
j1479 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2013 value: j1479 stateAfter: - lastLocationAccess: - #next: v1483  <|@  <|@
f <@~|@floating>@ <|@
tid v2014 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1469 
index: - 
=== Succesors ===
=== Usages ===
v1483 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1469 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1483 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2014 
value: v1493 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1487 
=== Usages ===
=== Predecessor ===
v1480 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2014 value: v1493 stateAfter: - lastLocationAccess: - #next: v1487  <|@  <|@
f <@~|@floating>@ <|@
tid v2019 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1469 
index: - 
=== Succesors ===
=== Usages ===
v1487 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1469 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a1080 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n! -
=== Inputs ===
value: a1165 
=== Succesors ===
=== Usages ===
v1487 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1165  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1487 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2019 
value: a1080 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1489 
=== Usages ===
=== Predecessor ===
v1483 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2019 value: a1080 stateAfter: - lastLocationAccess: - #next: v1489  <|@  <|@
f <@~|@floating>@ <|@
tid v2020 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j1469 
index: - 
=== Succesors ===
=== Usages ===
v1489 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1469 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1489 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2020 
value: i9 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1083 
=== Usages ===
=== Predecessor ===
v1487 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2020 value: i9 stateAfter: - lastLocationAccess: - #next: a1083  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1083 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1077 
=== Succesors ===
next: v1084 
=== Usages ===
v262 
=== Predecessor ===
v1489 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1077 #next: v1084  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1084 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v262 
=== Usages ===
=== Predecessor ===
a1083 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v262  <|@  <|@
f <@*|@fixed>@ <|@
tid v262 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a1083 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1084 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a1083 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B168"
    from_bci -1
    to_bci -1
    predecessors "B130" 
    successors "B130" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599551409817811980
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1590 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1589 
=== Usages ===
=== Predecessor ===
v1591 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1589  <|@  <|@
f <@*|@fixed>@ <|@
tid v1589 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v1585 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1590 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v1585  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B169"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B172" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1050 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:969) [bci: 499]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1256 
=== Usages ===
=== Predecessor ===
v1051 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1256  <|@  <|@
f <@~|@floating>@ <|@
tid i1257 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -218139
stableDimension: 0
stamp: i32 [-218139] ⇊00000000fffcabe5 ⇈00000000fffcabe5
stampKind: i32
value: int[-218139|0xfffffffffffcabe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1251 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1256 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1248 
=== Predecessor ===
v1050 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B170"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B172" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1046 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:968) [bci: 485]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1254 
=== Usages ===
=== Predecessor ===
v1047 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1254  <|@  <|@
f <@~|@floating>@ <|@
tid i1255 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -236059
stableDimension: 0
stamp: i32 [-236059] ⇊00000000fffc65e5 ⇈00000000fffc65e5
stampKind: i32
value: int[-236059|0xfffffffffffc65e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1251 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1254 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1248 
=== Predecessor ===
v1046 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B171"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B172" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1042 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:966) [bci: 466]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1249 
=== Usages ===
=== Predecessor ===
v1043 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1249  <|@  <|@
f <@~|@floating>@ <|@
tid i1250 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -236571
stableDimension: 0
stamp: i32 [-236571] ⇊00000000fffc63e5 ⇈00000000fffc63e5
stampKind: i32
value: int[-236571|0xfffffffffffc63e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1251 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1249 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1248 
=== Predecessor ===
v1042 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B172"
    from_bci -1
    to_bci -1
    predecessors "B171" "B170" "B169" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1251 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-236571 - -218139] ⇊00000000fffc21e5 ⇈00000000fffcefe5
valueDescription: i32
=== Inputs ===
merge: v1248 
values: i1250 i1255 i1257 
=== Succesors ===
=== Usages ===
v1253 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1248 values: i1250 i1255 i1257  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1248 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1249 v1254 v1256 
=== Succesors ===
next: v1253 
=== Usages ===
i1251 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1249 v1254 v1256 #next: v1253  <|@  <|@
tid ?162 <|@
d <@d|@=== Debug Properties ===
bci: 396
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 960
stackSize: 0
=== Inputs ===
outerFrameState: ?216 
values: - a438 i160 i161 - 
=== Succesors ===
=== Usages ===
v1253 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?216 values: - a438 i160 i161 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1253 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?162 
actionAndReason: i1251 
speculation: a1183 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1248 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?162 actionAndReason: i1251 speculation: a1183  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B173"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B177" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1034 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:951) [bci: 362]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1246 
=== Usages ===
=== Predecessor ===
v1035 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1246  <|@  <|@
f <@~|@floating>@ <|@
tid i1247 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -202779
stableDimension: 0
stamp: i32 [-202779] ⇊00000000fffce7e5 ⇈00000000fffce7e5
stampKind: i32
value: int[-202779|0xfffffffffffce7e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1233 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1246 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1230 
=== Predecessor ===
v1034 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B174"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B177" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1026 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:944) [bci: 305]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1244 
=== Usages ===
=== Predecessor ===
v1027 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1244  <|@  <|@
f <@~|@floating>@ <|@
tid i1245 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -189979
stableDimension: 0
stamp: i32 [-189979] ⇊00000000fffd19e5 ⇈00000000fffd19e5
stampKind: i32
value: int[-189979|0xfffffffffffd19e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1233 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1244 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1230 
=== Predecessor ===
v1026 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B175"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B177" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1022 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 297]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1242 
=== Usages ===
=== Predecessor ===
v1023 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1242  <|@  <|@
f <@~|@floating>@ <|@
tid i1243 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -188443
stableDimension: 0
stamp: i32 [-188443] ⇊00000000fffd1fe5 ⇈00000000fffd1fe5
stampKind: i32
value: int[-188443|0xfffffffffffd1fe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1233 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1242 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1230 
=== Predecessor ===
v1022 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B176"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B177" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1014 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 296]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1238 
=== Usages ===
=== Predecessor ===
v1015 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1238  <|@  <|@
f <@~|@floating>@ <|@
tid i1239 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -185115
stableDimension: 0
stamp: i32 [-185115] ⇊00000000fffd2ce5 ⇈00000000fffd2ce5
stampKind: i32
value: int[-185115|0xfffffffffffd2ce5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1233 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1238 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1230 
=== Predecessor ===
v1014 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B177"
    from_bci -1
    to_bci -1
    predecessors "B176" "B89" "B175" "B174" "B173" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1233 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-202779 - -183819] ⇊00000000fffc00e5 ⇈00000000fffdfffd
valueDescription: i32
=== Inputs ===
merge: v1230 
values: i1239 i1241 i1243 i1245 i1247 
=== Succesors ===
=== Usages ===
v1235 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1230 values: i1239 i1241 i1243 i1245 i1247  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1230 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1238 v1240 v1242 v1244 v1246 
=== Succesors ===
next: v1235 
=== Usages ===
i1233 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1238 v1240 v1242 v1244 v1246 #next: v1235  <|@  <|@
f <@*|@fixed>@ <|@
tid v1235 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?119 
actionAndReason: i1233 
speculation: a1183 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1230 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?119 actionAndReason: i1233 speculation: a1183  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i1945 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: i1945  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Lsun/misc/FloatingDecimal$BinaryToASCIIBuffer;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v1965 ?216 ?6 ?334 v1966 ?94 v1967 ?119 ?111 v1970 ?126 ?58 v1971 v1972 ?145 ?75 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1972 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1945 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1945 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.firstDigitIndex
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 76]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1972 
=== Succesors ===
next: i1946 
=== Usages ===
j1289 i68 v675 v591 v492 v692 v1979 i133 v722 j1942 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1972 #next: i1946  <|@  <|@
f <@~|@floating>@ <|@
tid v1970 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1946 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1946 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.nDigits
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:914) [bci: 60]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1970 
=== Succesors ===
next: a1947 
=== Usages ===
v399 v251 v686 i65 j1316 i691 i398 i697 i590 i596 v129 i140 i118 j1938 
=== Predecessor ===
i1945 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1970 #next: a1947  <|@  <|@
f <@~|@floating>@ <|@
tid v1971 <|@
result [v0|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1947 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1947 <|@
result v3|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.digits
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 72]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v1971 
=== Succesors ===
next: a1948 
=== Usages ===
v2042 a668 a1943 a1944 v1974 
=== Predecessor ===
i1946 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1971 #next: a1948  <|@  <|@
f <@~|@floating>@ <|@
tid v1965 <|@
result [v0|QWORD[.] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1948 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1948 <|@
result v4|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.buffer
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 2]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v1965 
=== Succesors ===
next: i1949 
=== Usages ===
a438 v2043 v1968 v1969 v1977 v1978 v2041 v2044 
=== Predecessor ===
a1947 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1965 #next: i1949  <|@  <|@
f <@~|@floating>@ <|@
tid v1967 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1949 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1949 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.decExponent
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 44]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1967 
=== Succesors ===
next: i1950 
=== Usages ===
i427 v96 i491 i428 v29 i497 i154 v35 i65 v251 ?58 i106 v399 i68 j1298 i933 v83 i156 
=== Predecessor ===
a1948 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1967 #next: i1950  <|@  <|@
f <@~|@floating>@ <|@
tid v1966 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1950 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1950 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.isNegative
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:908) [bci: 30]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: false
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
stateBefore: - 
guard: - 
address: v1966 
=== Succesors ===
next: v19 
=== Usages ===
i442 
=== Predecessor ===
i1949 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1966 #next: v19  <|@  <|@
f <@~|@floating>@ <|@
tid i442 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:908) [bci: 30]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i1950 
=== Succesors ===
=== Usages ===
v16 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1950  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 17]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v675 v16 v686 i346 v96 v229 v239 v1489 v1386 i347 v451 a1413 v531 v542 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:908) [bci: 33]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i442 
y: i9 
=== Succesors ===
=== Usages ===
v19 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i442 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid i14 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:906) [bci: 0]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i346 v29 i55 i303 i353 i133 i142 i295 i154 i168 v225 a1459 i401 a1350 i1389 i351 i347 i427 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 47]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1949 
y: i14 
=== Succesors ===
=== Usages ===
v32 v376 v150 v80 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1949 y: i14  <|@  <|@
f <@~|@floating>@ <|@
tid a438 <|@
result v7|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 2]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1948 
=== Succesors ===
=== Usages ===
?162 v1984 v1982 ?334 ?94 v1985 ?111 ?126 ?58 j1293 v1980 ?75 j1320 ?145 ?119 v1981 j1331 v1975 v1976 j1314 j1305 v1973 v1983 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1948  <|@  <|@
f <@~|@floating>@ <|@
tid v1968 <|@
result [v4|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1948 
=== Succesors ===
=== Usages ===
i1951 i1953 i1954 i1957 i1959 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1948  <|@  <|@
f <@~|@floating>@ <|@
tid v1974 <|@
result [v3|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1947 
=== Succesors ===
=== Usages ===
i1952 i1955 i1956 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1947  <|@  <|@
f <@~|@floating>@ <|@
tid v675 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1945 
y: i9 
=== Succesors ===
=== Usages ===
v678 v577 v478 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1945 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid j1752 <|@
result long[-2|0xfffffffffffffffe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1753 j1814 j1865 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1065 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1842 v1804 j1795 v1855 v1754 j1787 j1708 j1848 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1388 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1437 v1506 v1577 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j935 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j936 j1817 j1868 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i214 <|@
result int[3|0x3] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:969) [bci: 488]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
rawvalue: 3
stableDimension: 0
stamp: i32 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
i215 i294 i302 i357 i359 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1110 <|@
result long[4|0x4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1111 j1841 j1786 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1086 <|@
result long[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1094 j1111 j1108 j1708 j1778 j1835 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1100 <|@
result long[18|0x12] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 18
stableDimension: 0
stamp: i64 [18] ⇊0000000000000012 ⇈0000000000000012
stampKind: i64
value: long[18|0x12]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1102 j1104 j1112 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j456 <|@
result long[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:909) [bci: 40]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
rawvalue: 16
stableDimension: 0
stamp: i64 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1103 j1853 j1802 j1112 j1102 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i128 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:945) [bci: 311]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v129 i204 i359 i212 i213 i308 i318 i351 i357 i353 a1350 a1459 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i888 <|@
result short[48|0x30] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:930) [bci: 193]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
rawvalue: 48
stableDimension: 0
stamp: i16 [48] ⇊0000000000000030 ⇈0000000000000030
stampKind: i16
value: short[48|0x30]
=== Inputs ===
=== Succesors ===
=== Usages ===
v635 v646 v1882 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i885 <|@
result short[46|0x2e] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
rawvalue: 46
stableDimension: 0
stamp: i16 [46] ⇊000000000000002e ⇈000000000000002e
stampKind: i16
value: short[46|0x2e]
=== Inputs ===
=== Succesors ===
=== Usages ===
v526 v625 v654 v744 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?216 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString()>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 301
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - 
=== Succesors ===
=== Usages ===
?111 ?334 ?94 ?162 ?58 ?119 ?145 ?75 ?126 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 -  <|@  <|@
f <@~|@floating>@ <|@
tid i881 <|@
result short[45|0x2d] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:909) [bci: 40]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
rawvalue: 45
stableDimension: 0
stamp: i16 [45] ⇊000000000000002d ⇈000000000000002d
stampKind: i16
value: short[45|0x2d]
=== Inputs ===
=== Succesors ===
=== Usages ===
v460 v868 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a1183 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1186 v1227 a1215 a1215 v1253 v1194 v1263 v1235 v1206 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:908) [bci: 33]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.9997660380889991
=== Inputs ===
condition: v16 
=== Succesors ===
trueSuccessor: v17 
falseSuccessor: v18 
=== Usages ===
=== Predecessor ===
i1950 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v16 #trueSuccessor: v17 #falseSuccessor: v18  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@61e4165f slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[.] = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVZXB [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2ae4cec4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TEST (x: v6|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9997660380889991 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607180311458467003
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v376 
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v376  <|@  <|@
f <@*|@fixed>@ <|@
tid v376 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 47]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.8239147472715149
=== Inputs ===
condition: v29 
=== Succesors ===
trueSuccessor: v374 
falseSuccessor: v375 
=== Usages ===
=== Predecessor ===
v17 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v29 #trueSuccessor: v374 #falseSuccessor: v375  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8239147472715149 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B44" 
    xhandlers
    flags 
    probability 4605594647573089601
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v374 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v377 
=== Usages ===
=== Predecessor ===
v376 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v377  <|@  <|@
f <@*|@fixed>@ <|@
tid v377 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v38 
=== Predecessor ===
v374 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[2|0x2], int[0|0x0], int[1|0x1], int[2|0x2], long[16|0x10], long[18|0x12]] destination: B2 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B9" 
    xhandlers
    flags 
    probability 4595510675832045031
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 50]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v335 
=== Usages ===
=== Predecessor ===
v376 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v335  <|@  <|@
f <@*|@fixed>@ <|@
tid v335 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v332 
=== Predecessor ===
v375 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[2|0x2], int[0|0x0], int[1|0x1], int[2|0x2], v5|DWORD, long[16|0x10], long[2|0x2]] destination: B3 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4552763695007289344
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:909) [bci: 36]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1951 
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1951  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString()>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 301
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - 
=== Succesors ===
=== Usages ===
v1186 i1951 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1951 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:909) [bci: 40]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v1968 
=== Succesors ===
next: v955 
=== Usages ===
v451 
=== Predecessor ===
v18 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v1968 #next: v955  <|@  <|@
f <@~|@floating>@ <|@
tid v451 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:909) [bci: 40]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1951 
y: i9 
=== Succesors ===
=== Usages ===
v955 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1951 y: i9  <|@  <|@
f <@*|@fixed>@ <|@
tid v955 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:909) [bci: 40]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v451 
=== Succesors ===
trueSuccessor: v954 
falseSuccessor: v952 
=== Usages ===
=== Predecessor ===
i1951 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v451 #trueSuccessor: v954 #falseSuccessor: v952  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction CMP [v4|DWORD[.] * 8 + 12] y: 0 size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v954 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:909) [bci: 40]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1186 
=== Usages ===
=== Predecessor ===
v955 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1186  <|@  <|@
f <@~|@floating>@ <|@
tid i1188 <|@
result int[-225051|0xfffffffffffc90e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -225051
stableDimension: 0
stamp: i32 [-225051] ⇊00000000fffc90e5 ⇈00000000fffc90e5
stampKind: i32
value: int[-225051|0xfffffffffffc90e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1186 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1186 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2 
actionAndReason: i1188 
speculation: a1183 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v954 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2 actionAndReason: i1188 speculation: a1183  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -225051 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4552763695007289344
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v952 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:909) [bci: 40]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v460 
=== Usages ===
v460 
=== Predecessor ===
v955 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v460  <|@  <|@
f <@~|@floating>@ <|@
tid v1969 <|@
result [v4|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1948 
=== Succesors ===
=== Usages ===
v460 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1948  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v460 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:909) [bci: 40]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v952 
address: v1969 
value: i881 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v32 
=== Usages ===
=== Predecessor ===
v952 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v952 address: v1969 value: i881 stateAfter: - lastLocationAccess: - #next: v32  <|@  <|@
f <@~|@floating>@ <|@
tid j1092 <|@
result long[3|0x3] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 3
stableDimension: 0
stamp: i64 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i64
value: long[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1094 j1108 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 47]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.8239147472715149
=== Inputs ===
condition: v29 
=== Succesors ===
trueSuccessor: v30 
falseSuccessor: v31 
=== Usages ===
=== Predecessor ===
v460 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v29 #trueSuccessor: v30 #falseSuccessor: v31  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v4|DWORD[.] * 8 + 16] y: 45 size: WORD <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8239147472715149 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B44" 
    xhandlers
    flags 
    probability 4551243785039465259
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v37 
=== Usages ===
=== Predecessor ===
v32 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v37  <|@  <|@
f <@~|@floating>@ <|@
tid j462 <|@
result long[20|0x14] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:914) [bci: 60]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
rawvalue: 20
stableDimension: 0
stamp: i64 [20] ⇊0000000000000014 ⇈0000000000000014
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1104 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v38 
=== Predecessor ===
v30 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[3|0x3], int[1|0x1], int[2|0x2], int[3|0x3], long[18|0x12], long[20|0x14]] destination: B7 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4541204464633385812
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 50]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v333 
=== Usages ===
=== Predecessor ===
v32 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v333  <|@  <|@
f <@~|@floating>@ <|@
tid i427 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:916) [bci: 87]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i1949 
y: i14 
=== Succesors ===
=== Usages ===
i428 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1949 y: i14  <|@  <|@
f <@*|@fixed>@ <|@
tid v333 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v332 
=== Predecessor ===
v31 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = INC v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[3|0x3], int[1|0x1], int[2|0x2], int[3|0x3], v8|DWORD, long[18|0x12], long[4|0x4]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B3" 
    successors "B10" "B43" 
    xhandlers
    flags 
    probability 4595512160119122984
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1108 <|@
result v9|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [2 - 3] ⇊0000000000000002 ⇈0000000000000003
valueDescription: i64
=== Inputs ===
merge: v332 
values: j1092 j1086 
=== Succesors ===
=== Usages ===
j1094 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v332 values: j1092 j1086  <|@  <|@
f <@~|@floating>@ <|@
tid i346 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v332 
values: i14 i9 
=== Succesors ===
=== Usages ===
i398 v1992 v498 v597 i347 ?334 v1988 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v332 values: i14 i9  <|@  <|@
f <@~|@floating>@ <|@
tid i353 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [1 - 2] ⇈0000000000000003
valueDescription: i32
=== Inputs ===
merge: v332 
values: i128 i14 
=== Succesors ===
=== Usages ===
i351 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v332 values: i128 i14  <|@  <|@
f <@~|@floating>@ <|@
tid i359 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [2 - 3] ⇊0000000000000002 ⇈0000000000000003
valueDescription: i32
=== Inputs ===
merge: v332 
values: i214 i128 
=== Succesors ===
=== Usages ===
i357 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v332 values: i214 i128  <|@  <|@
f <@~|@floating>@ <|@
tid i428 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v332 
values: i427 i1949 
=== Succesors ===
=== Usages ===
i55 v1973 v518 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v332 values: i427 i1949  <|@  <|@
f <@~|@floating>@ <|@
tid j1112 <|@
result v14|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [16 - 18] ⇊0000000000000010 ⇈0000000000000012
valueDescription: i64
=== Inputs ===
merge: v332 
values: j1100 j456 
=== Succesors ===
=== Usages ===
j1102 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v332 values: j1100 j456  <|@  <|@
f <@~|@floating>@ <|@
tid j1111 <|@
result v15|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [2 - 4] ⇈0000000000000006
valueDescription: i64
=== Inputs ===
merge: v332 
values: j1110 j1086 
=== Succesors ===
=== Usages ===
j1103 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v332 values: j1110 j1086  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v332 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v333 v335 
=== Succesors ===
next: v41 
=== Usages ===
j1108 i346 i353 i359 i428 j1112 j1111 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v333 v335 #next: v41  <|@  <|@
f <@~|@floating>@ <|@
tid i34 <|@
result int[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 54]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
rawvalue: 8
stableDimension: 0
stamp: i32 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
v35 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 56]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1949 
y: i34 
=== Succesors ===
=== Usages ===
v41 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1949 y: i34  <|@  <|@
f <@*|@fixed>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 56]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.9952836455427129
=== Inputs ===
condition: v35 
=== Succesors ===
trueSuccessor: v36 
falseSuccessor: v40 
=== Usages ===
=== Predecessor ===
v332 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v35 #trueSuccessor: v36 #falseSuccessor: v40  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v9|QWORD, v10|DWORD, v11|DWORD, v12|DWORD, v13|DWORD, v14|QWORD, v15|QWORD] = LABEL numbPhis: 7 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9952836455427129 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B29" 
    xhandlers
    flags 
    probability 4595482238906964772
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:914) [bci: 59]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2043 
=== Usages ===
=== Predecessor ===
v41 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2043  <|@  <|@
tid ?334 <|@
d <@d|@=== Debug Properties ===
bci: 43
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 912
stackSize: 0
=== Inputs ===
outerFrameState: ?216 
values: a1 a438 i346 - - 
=== Succesors ===
=== Usages ===
v1263 v2043 i1952 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?216 values: a1 a438 i346 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2043 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?334 
object: a1948 
=== Succesors ===
next: i1952 
=== Usages ===
=== Predecessor ===
v36 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?334 object: a1948 #next: i1952  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1952 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 60]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?334 
guard: - 
address: v1974 
=== Succesors ===
next: i1953 
=== Usages ===
i547 i491 i590 
=== Predecessor ===
v2043 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?334 guard: - address: v1974 #next: i1953  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1953 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 85]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1968 
=== Succesors ===
next: v254 
=== Usages ===
i596 v618 v627 i497 v518 i553 
=== Predecessor ===
i1952 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1968 #next: v254  <|@  <|@
f <@~|@floating>@ <|@
tid v251 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:914) [bci: 67]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1949 
y: i1946 
=== Succesors ===
=== Usages ===
v254 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1949 y: i1946  <|@  <|@
f <@~|@floating>@ <|@
tid a1944 <|@
result v18|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 257]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1947 
=== Succesors ===
=== Usages ===
j1288 j1300 j1312 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1947  <|@  <|@
f <@~|@floating>@ <|@
tid j1289 <|@
result v19|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1945 
=== Succesors ===
=== Usages ===
v1991 v1987 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1945  <|@  <|@
f <@*|@fixed>@ <|@
tid v254 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:914) [bci: 67]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.44783436248413755
=== Inputs ===
condition: v251 
=== Succesors ===
trueSuccessor: v252 
falseSuccessor: v253 
=== Usages ===
=== Predecessor ===
i1953 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v251 #trueSuccessor: v252 #falseSuccessor: v253  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43]
locals: v0|QWORD[.] v7|QWORD[.] v10|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v0|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v4|DWORD[.] * 8] state [bci:43, 5] <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43]
locals: v0|QWORD[.] v7|QWORD[.] v10|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v0|QWORD[.] - 
>@ <|@ instruction v16|DWORD = MOV [v3|DWORD[.] * 8 + 12] size: DWORD state [bci:43, 5] <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOV [v4|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2ae4cec4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOVSXD v1|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.44783436248413755 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B28" 
    xhandlers
    flags 
    probability 4590319868800513148
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v252 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 9]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:914) [bci: 67]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v967 
=== Usages ===
=== Predecessor ===
v254 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v967  <|@  <|@
f <@~|@floating>@ <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i428 
y: i1953 
=== Succesors ===
=== Usages ===
v967 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i428 y: i1953  <|@  <|@
f <@*|@fixed>@ <|@
tid v967 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v518 
=== Succesors ===
trueSuccessor: v964 
falseSuccessor: v966 
=== Usages ===
=== Predecessor ===
v252 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v518 #trueSuccessor: v964 #falseSuccessor: v966  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v17|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4590319868800513148
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v964 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v478 
=== Usages ===
v526 
=== Predecessor ===
v967 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v478  <|@  <|@
f <@~|@floating>@ <|@
tid i1275 <|@
result int[-128865|0xfffffffffffe089f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -128865
stableDimension: 0
stamp: i32 [-128865] ⇊00000000fffe089f ⇈00000000fffe089f
stampKind: i32
value: int[-128865|0xfffffffffffe089f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1261 i1261 i1261 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v478 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v675 
=== Succesors ===
trueSuccessor: v477 
falseSuccessor: v476 
=== Usages ===
=== Predecessor ===
v964 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v675 #trueSuccessor: v477 #falseSuccessor: v476  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B42" 
    xhandlers
    flags 
    probability 4560378196887377184
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v477 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1274 
=== Usages ===
=== Predecessor ===
v478 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1274  <|@  <|@
f <@*|@fixed>@ <|@
tid v1274 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1258 
=== Predecessor ===
v477 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-128865|0xfffffffffffe089f]] destination: B13 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590263314319139666
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v476 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v496 
=== Usages ===
=== Predecessor ===
v478 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v496  <|@  <|@
f <@~|@floating>@ <|@
tid i491 <|@
result v20|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 65]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i1952 
y: i1949 
=== Succesors ===
=== Usages ===
v492 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i1952 y: i1949  <|@  <|@
f <@~|@floating>@ <|@
tid v492 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i491 
y: i1945 
=== Succesors ===
=== Usages ===
v496 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i491 y: i1945  <|@  <|@
f <@*|@fixed>@ <|@
tid v496 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 77]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v492 
=== Succesors ===
trueSuccessor: v495 
falseSuccessor: v493 
=== Usages ===
=== Predecessor ===
v476 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v492 #trueSuccessor: v495 #falseSuccessor: v493  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = SUB (x: v16|DWORD, ~y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v1|DWORD, y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B42" 
    xhandlers
    flags 
    probability 4560305807151219127
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v495 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1279 
=== Usages ===
=== Predecessor ===
v496 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1279  <|@  <|@
f <@*|@fixed>@ <|@
tid v1279 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1258 
=== Predecessor ===
v495 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-128865|0xfffffffffffe089f]] destination: B15 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4590207325382579919
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v493 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 80]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v502 
=== Usages ===
=== Predecessor ===
v496 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v502  <|@  <|@
f <@~|@floating>@ <|@
tid i497 <|@
result v21|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i1953 
y: i1949 
=== Succesors ===
=== Usages ===
v498 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i1953 y: i1949  <|@  <|@
f <@~|@floating>@ <|@
tid v498 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i497 
y: i346 
=== Succesors ===
=== Usages ===
v502 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i497 y: i346  <|@  <|@
f <@*|@fixed>@ <|@
tid v502 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v498 
=== Succesors ===
trueSuccessor: v501 
falseSuccessor: v499 
=== Usages ===
=== Predecessor ===
v493 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v498 #trueSuccessor: v501 #falseSuccessor: v499  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = SUB (x: v17|DWORD, ~y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B42" 
    xhandlers
    flags 
    probability 4560234141312422651
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v501 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1278 
=== Usages ===
=== Predecessor ===
v502 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1278  <|@  <|@
f <@*|@fixed>@ <|@
tid v1278 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1258 
=== Predecessor ===
v501 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-128865|0xfffffffffffe089f]] destination: B17 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4590151896335385769
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v499 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1288 
=== Usages ===
=== Predecessor ===
v502 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1288  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1288 <|@
result v22|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i64
=== Inputs ===
object: a1944 
=== Succesors ===
next: j1293 
=== Usages ===
v1987 
=== Predecessor ===
v499 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a1944 #next: j1293  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1293 <|@
result v23|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i64
=== Inputs ===
object: a438 
=== Succesors ===
next: v1299 
=== Usages ===
v1988 
=== Predecessor ===
j1288 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a438 #next: v1299  <|@  <|@
f <@~|@floating>@ <|@
tid v1987 <|@
result [v22|QWORD[*] + v19|QWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j1288 
index: j1289 
=== Succesors ===
=== Usages ===
v1299 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1288 index: j1289  <|@  <|@
f <@~|@floating>@ <|@
tid v1988 <|@
result [v23|QWORD[*] + v10|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j1293 
index: i346 
=== Succesors ===
=== Usages ===
v1299 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1293 index: i346  <|@  <|@
f <@~|@floating>@ <|@
tid j1298 <|@
result v24|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1949 
=== Succesors ===
=== Usages ===
v1299 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1949  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1299 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: charArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v1987 v1988 j1298 
=== Succesors ===
next: v526 
=== Usages ===
=== Predecessor ===
j1293 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v1987 v1988 j1298 #next: v526  <|@  <|@
f <@~|@floating>@ <|@
tid v1973 <|@
result [v7|QWORD[.] + v13|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a438 
index: i428 
=== Succesors ===
=== Usages ===
v526 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a438 index: i428  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v526 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v964 
address: v1973 
value: i885 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v534 
=== Usages ===
=== Predecessor ===
v1299 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v964 address: v1973 value: i885 stateAfter: - lastLocationAccess: - #next: v534  <|@  <|@
f <@~|@floating>@ <|@
tid i55 <|@
result v25|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 139]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i428 
y: i14 
=== Succesors ===
=== Usages ===
?58 i71 v554 j1306 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i428 y: i14  <|@  <|@
f <@~|@floating>@ <|@
tid i68 <|@
result v26|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 170]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i1945 
y: i1949 
=== Succesors ===
=== Usages ===
j1301 v531 v548 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1945 y: i1949  <|@  <|@
f <@~|@floating>@ <|@
tid v531 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i68 
y: i9 
=== Succesors ===
=== Usages ===
v534 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i68 y: i9  <|@  <|@
f <@*|@fixed>@ <|@
tid v534 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v531 
=== Succesors ===
trueSuccessor: v533 
falseSuccessor: v532 
=== Usages ===
=== Predecessor ===
v526 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v531 #trueSuccessor: v533 #falseSuccessor: v532  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[*] = MOVE v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[*] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOVSXD v5|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v22|QWORD[*] + v19|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v23|QWORD[*] + v10|DWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v24|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v13|DWORD * 2 + 16] y: 46 size: WORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = INC v13|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = ADD (x: v1|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v26|DWORD, y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B26" 
    xhandlers
    flags 
    probability 4560163192132014139
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v533 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v537 
=== Usages ===
=== Predecessor ===
v534 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v537  <|@  <|@
f <@*|@fixed>@ <|@
tid v537 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v538 
=== Predecessor ===
v533 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B19 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4590097021578663561
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v532 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v546 
=== Usages ===
=== Predecessor ===
v534 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v546  <|@  <|@
f <@~|@floating>@ <|@
tid i65 <|@
result v27|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:926) [bci: 158]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i1946 
y: i1949 
=== Succesors ===
=== Usages ===
j1310 i553 i71 v542 i547 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i1946 y: i1949  <|@  <|@
f <@~|@floating>@ <|@
tid v542 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 41]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i65 
y: i9 
=== Succesors ===
=== Usages ===
v546 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i65 y: i9  <|@  <|@
f <@*|@fixed>@ <|@
tid v546 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:259) [bci: 52]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v542 
=== Succesors ===
trueSuccessor: v545 
falseSuccessor: v543 
=== Usages ===
=== Predecessor ===
v532 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v542 #trueSuccessor: v545 #falseSuccessor: v543  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = SUB (x: v2|DWORD, ~y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v27|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B26" 
    xhandlers
    flags 
    probability 4560092952443409712
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v544 
=== Usages ===
=== Predecessor ===
v546 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v544  <|@  <|@
f <@*|@fixed>@ <|@
tid v544 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v538 
=== Predecessor ===
v545 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B21 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4590042695569508575
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v543 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:259) [bci: 55]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v552 
=== Usages ===
=== Predecessor ===
v546 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v552  <|@  <|@
f <@~|@floating>@ <|@
tid i547 <|@
result v28|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 65]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i1952 
y: i65 
=== Succesors ===
=== Usages ===
v548 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i1952 y: i65  <|@  <|@
f <@~|@floating>@ <|@
tid v548 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i547 
y: i68 
=== Succesors ===
=== Usages ===
v552 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i547 y: i68  <|@  <|@
f <@*|@fixed>@ <|@
tid v552 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 77]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v548 
=== Succesors ===
trueSuccessor: v551 
falseSuccessor: v549 
=== Usages ===
=== Predecessor ===
v543 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v548 #trueSuccessor: v551 #falseSuccessor: v549  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = SUB (x: v16|DWORD, ~y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v26|DWORD, y: v28|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    probability 4560023415151691330
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v551 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v550 
=== Usages ===
=== Predecessor ===
v552 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v550  <|@  <|@
f <@*|@fixed>@ <|@
tid v550 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v538 
=== Predecessor ===
v551 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B27" 
    xhandlers
    flags 
    probability 4589988912820445138
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v549 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 80]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v558 
=== Usages ===
=== Predecessor ===
v552 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v558  <|@  <|@
f <@~|@floating>@ <|@
tid i553 <|@
result v29|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i1953 
y: i65 
=== Succesors ===
=== Usages ===
v554 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i1953 y: i65  <|@  <|@
f <@~|@floating>@ <|@
tid v554 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i553 
y: i55 
=== Succesors ===
=== Usages ===
v558 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i553 y: i55  <|@  <|@
f <@*|@fixed>@ <|@
tid v558 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v554 
=== Succesors ===
trueSuccessor: v557 
falseSuccessor: v555 
=== Usages ===
=== Predecessor ===
v549 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v554 #trueSuccessor: v557 #falseSuccessor: v555  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = SUB (x: v17|DWORD, ~y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v25|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 4559954573232890131
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v557 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v556 
=== Usages ===
=== Predecessor ===
v558 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v556  <|@  <|@
f <@*|@fixed>@ <|@
tid v556 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v538 
=== Predecessor ===
v557 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" "B23" "B25" 
    successors 
    xhandlers
    flags 
    probability 4569065732494742321
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v538 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v537 v544 v550 v556 
=== Succesors ===
next: v559 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v537 v544 v550 v556 #next: v559  <|@  <|@
tid ?58 <|@
d <@d|@=== Debug Properties ===
bci: 145
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: false
localsSize: 5
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 925
stackSize: 0
=== Inputs ===
outerFrameState: ?216 
values: a1 a438 i55 i1949 - 
=== Succesors ===
=== Usages ===
v559 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?216 values: a1 a438 i55 i1949 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v559 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
nodeSourcePosition: at org.graalvm.compiler.nodes.DeoptimizeNode.deopt(DeoptimizationAction, DeoptimizationReason) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:263) [bci: 119]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
reason: RuntimeConstraint
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?58 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v538 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?58  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -143201 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:925) [bci: 145]
locals: v0|QWORD[.] v7|QWORD[.] v25|DWORD v5|DWORD - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:145, 5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B109" 
    xhandlers
    flags 
    probability 4589935667898872336
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v555 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1300 
=== Usages ===
=== Predecessor ===
v558 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1300  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1300 <|@
result v30|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i64
=== Inputs ===
object: a1944 
=== Succesors ===
next: j1305 
=== Usages ===
v1989 
=== Predecessor ===
v555 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a1944 #next: j1305  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1305 <|@
result v31|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i64
=== Inputs ===
object: a438 
=== Succesors ===
next: v1311 
=== Usages ===
v1990 
=== Predecessor ===
j1300 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a438 #next: v1311  <|@  <|@
f <@~|@floating>@ <|@
tid j1301 <|@
result v32|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i68 
=== Succesors ===
=== Usages ===
v1989 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i68  <|@  <|@
f <@~|@floating>@ <|@
tid v1989 <|@
result [v30|QWORD[*] + v32|QWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j1300 
index: j1301 
=== Succesors ===
=== Usages ===
v1311 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1300 index: j1301  <|@  <|@
f <@~|@floating>@ <|@
tid j1306 <|@
result v33|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i55 
=== Succesors ===
=== Usages ===
v1990 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i55  <|@  <|@
f <@~|@floating>@ <|@
tid v1990 <|@
result [v31|QWORD[*] + v33|QWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j1305 
index: j1306 
=== Succesors ===
=== Usages ===
v1311 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1305 index: j1306  <|@  <|@
f <@~|@floating>@ <|@
tid j1310 <|@
result v34|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i65 
=== Succesors ===
=== Usages ===
v1311 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i65  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1311 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: charArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v1989 v1990 j1310 
=== Succesors ===
next: v218 
=== Usages ===
=== Predecessor ===
j1305 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v1989 v1990 j1310 #next: v218  <|@  <|@
f <@~|@floating>@ <|@
tid i71 <|@
result v35|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:928) [bci: 181]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i55 
y: i65 
=== Succesors ===
=== Usages ===
i219 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i55 y: i65  <|@  <|@
f <@*|@fixed>@ <|@
tid v218 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v217 
=== Predecessor ===
v1311 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[*] = MOVE v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[*] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = MOVSXD v26|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = MOVSXD v25|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = MOVSXD v27|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v30|QWORD[*] + v32|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v31|QWORD[*] + v33|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v34|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = ADD (x: v25|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v35|DWORD] destination: B27 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v966 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1268 
=== Usages ===
=== Predecessor ===
v967 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1268  <|@  <|@
f <@~|@floating>@ <|@
tid i1269 <|@
result int[-132891|0xfffffffffffdf8e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -132891
stableDimension: 0
stamp: i32 [-132891] ⇊00000000fffdf8e5 ⇈00000000fffdf8e5
stampKind: i32
value: int[-132891|0xfffffffffffdf8e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1261 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1268 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1258 
=== Predecessor ===
v966 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-132891|0xfffffffffffdf8e5]] destination: B28 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4591637409758675404
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v253 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 5]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:914) [bci: 67]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v971 
=== Usages ===
=== Predecessor ===
v254 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v971  <|@  <|@
f <@~|@floating>@ <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:917) [bci: 94]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1946 
y: i1949 
=== Succesors ===
=== Usages ===
v971 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1946 y: i1949  <|@  <|@
f <@*|@fixed>@ <|@
tid v971 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:917) [bci: 94]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v399 
=== Succesors ===
trueSuccessor: v970 
falseSuccessor: v968 
=== Usages ===
=== Predecessor ===
v253 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v399 #trueSuccessor: v970 #falseSuccessor: v968  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v970 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:917) [bci: 94]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1266 
=== Usages ===
=== Predecessor ===
v971 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1266  <|@  <|@
f <@~|@floating>@ <|@
tid i1267 <|@
result int[-156947|0xfffffffffffd9aed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -156947
stableDimension: 0
stamp: i32 [-156947] ⇊00000000fffd9aed ⇈00000000fffd9aed
stampKind: i32
value: int[-156947|0xfffffffffffd9aed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1261 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1266 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1258 
=== Predecessor ===
v970 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-156947|0xfffffffffffd9aed]] destination: B30 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B41" 
    xhandlers
    flags 
    probability 4591637409758675404
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v968 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:917) [bci: 94]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v975 
=== Usages ===
=== Predecessor ===
v971 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v975  <|@  <|@
f <@~|@floating>@ <|@
tid i398 <|@
result v36|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:916) [bci: 87]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i346 
y: i1946 
=== Succesors ===
=== Usages ===
i401 v1975 i204 v618 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i346 y: i1946  <|@  <|@
f <@~|@floating>@ <|@
tid v618 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i398 
y: i1953 
=== Succesors ===
=== Usages ===
v975 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i398 y: i1953  <|@  <|@
f <@*|@fixed>@ <|@
tid v975 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v618 
=== Succesors ===
trueSuccessor: v972 
falseSuccessor: v974 
=== Usages ===
=== Predecessor ===
v968 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v618 #trueSuccessor: v972 #falseSuccessor: v974  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = ADD (x: v10|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v17|DWORD, y: v36|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B40" 
    xhandlers
    flags 
    probability 4591637409758675404
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v972 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v979 
=== Usages ===
v625 
=== Predecessor ===
v975 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v979  <|@  <|@
f <@~|@floating>@ <|@
tid i401 <|@
result v37|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 139]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i398 
y: i14 
=== Succesors ===
=== Usages ===
v627 v1976 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i398 y: i14  <|@  <|@
f <@~|@floating>@ <|@
tid v627 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:930) [bci: 193]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i401 
y: i1953 
=== Succesors ===
=== Usages ===
v979 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i401 y: i1953  <|@  <|@
f <@*|@fixed>@ <|@
tid v979 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:930) [bci: 193]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v627 
=== Succesors ===
trueSuccessor: v976 
falseSuccessor: v978 
=== Usages ===
=== Predecessor ===
v972 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v627 #trueSuccessor: v976 #falseSuccessor: v978  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = INC v36|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v17|DWORD, y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B32 -> B33 falseDestination: B32 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4591637409758675404
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v976 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:930) [bci: 193]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v577 
=== Usages ===
v635 
=== Predecessor ===
v979 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v577  <|@  <|@
f <@~|@floating>@ <|@
tid i1277 <|@
result int[-154209|0xfffffffffffda59f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -154209
stableDimension: 0
stamp: i32 [-154209] ⇊00000000fffda59f ⇈00000000fffda59f
stampKind: i32
value: int[-154209|0xfffffffffffda59f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1261 i1261 i1261 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v577 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v675 
=== Succesors ===
trueSuccessor: v576 
falseSuccessor: v575 
=== Usages ===
=== Predecessor ===
v976 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v675 #trueSuccessor: v576 #falseSuccessor: v575  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B42" 
    xhandlers
    flags 
    probability 4562064649313824873
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v576 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1276 
=== Usages ===
=== Predecessor ===
v577 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1276  <|@  <|@
f <@*|@fixed>@ <|@
tid v1276 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1258 
=== Predecessor ===
v576 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-154209|0xfffffffffffda59f]] destination: B34 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4591567679867720299
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v575 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v595 
=== Usages ===
=== Predecessor ===
v577 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v595  <|@  <|@
f <@~|@floating>@ <|@
tid i590 <|@
result v38|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 65]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i1952 
y: i1946 
=== Succesors ===
=== Usages ===
v591 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i1952 y: i1946  <|@  <|@
f <@~|@floating>@ <|@
tid v591 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i590 
y: i1945 
=== Succesors ===
=== Usages ===
v595 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i590 y: i1945  <|@  <|@
f <@*|@fixed>@ <|@
tid v595 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 77]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v591 
=== Succesors ===
trueSuccessor: v594 
falseSuccessor: v592 
=== Usages ===
=== Predecessor ===
v575 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v591 #trueSuccessor: v594 #falseSuccessor: v592  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = SUB (x: v16|DWORD, ~y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v1|DWORD, y: v38|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B42" 
    xhandlers
    flags 
    probability 4561975395053402339
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v594 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1282 
=== Usages ===
=== Predecessor ===
v595 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1282  <|@  <|@
f <@*|@fixed>@ <|@
tid v1282 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1258 
=== Predecessor ===
v594 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-154209|0xfffffffffffda59f]] destination: B36 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4591498647275674745
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v592 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 80]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v601 
=== Usages ===
=== Predecessor ===
v595 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v601  <|@  <|@
f <@~|@floating>@ <|@
tid i596 <|@
result v39|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i1953 
y: i1946 
=== Succesors ===
=== Usages ===
v597 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i1953 y: i1946  <|@  <|@
f <@~|@floating>@ <|@
tid v597 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i596 
y: i346 
=== Succesors ===
=== Usages ===
v601 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i596 y: i346  <|@  <|@
f <@*|@fixed>@ <|@
tid v601 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v597 
=== Succesors ===
trueSuccessor: v600 
falseSuccessor: v598 
=== Usages ===
=== Predecessor ===
v592 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v597 #trueSuccessor: v600 #falseSuccessor: v598  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = SUB (x: v17|DWORD, ~y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B42" 
    xhandlers
    flags 
    probability 4561887033335584030
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v600 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1281 
=== Usages ===
=== Predecessor ===
v601 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1281  <|@  <|@
f <@*|@fixed>@ <|@
tid v1281 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1258 
=== Predecessor ===
v600 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-154209|0xfffffffffffda59f]] destination: B38 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B109" 
    xhandlers
    flags 
    probability 4591430305009549647
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v598 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1312 
=== Usages ===
=== Predecessor ===
v601 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1312  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1312 <|@
result v40|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i64
=== Inputs ===
object: a1944 
=== Succesors ===
next: j1314 
=== Usages ===
v1991 
=== Predecessor ===
v598 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a1944 #next: j1314  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1314 <|@
result v41|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i64
=== Inputs ===
object: a438 
=== Succesors ===
next: v1317 
=== Usages ===
v1992 
=== Predecessor ===
j1312 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a438 #next: v1317  <|@  <|@
f <@~|@floating>@ <|@
tid v1991 <|@
result [v40|QWORD[*] + v19|QWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j1312 
index: j1289 
=== Succesors ===
=== Usages ===
v1317 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1312 index: j1289  <|@  <|@
f <@~|@floating>@ <|@
tid v1992 <|@
result [v41|QWORD[*] + v10|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j1314 
index: i346 
=== Succesors ===
=== Usages ===
v1317 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1314 index: i346  <|@  <|@
f <@~|@floating>@ <|@
tid j1316 <|@
result v42|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1946 
=== Succesors ===
=== Usages ===
v1317 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1946  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1317 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: charArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v1991 v1992 j1316 
=== Succesors ===
next: v625 
=== Usages ===
=== Predecessor ===
j1314 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v1991 v1992 j1316 #next: v625  <|@  <|@
f <@~|@floating>@ <|@
tid v1975 <|@
result [v7|QWORD[.] + v36|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a438 
index: i398 
=== Succesors ===
=== Usages ===
v625 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a438 index: i398  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v625 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v972 
address: v1975 
value: i885 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v635 
=== Usages ===
=== Predecessor ===
v1317 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v972 address: v1975 value: i885 stateAfter: - lastLocationAccess: - #next: v635  <|@  <|@
f <@~|@floating>@ <|@
tid v1976 <|@
result [v7|QWORD[.] + v37|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a438 
index: i401 
=== Succesors ===
=== Usages ===
v635 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a438 index: i401  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v635 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:930) [bci: 193]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v976 
address: v1976 
value: i888 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v224 
=== Usages ===
=== Predecessor ===
v625 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v976 address: v1976 value: i888 stateAfter: - lastLocationAccess: - #next: v224  <|@  <|@
f <@~|@floating>@ <|@
tid i204 <|@
result v43|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:930) [bci: 188]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i398 
y: i128 
=== Succesors ===
=== Usages ===
i219 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i398 y: i128  <|@  <|@
f <@*|@fixed>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v217 
=== Predecessor ===
v635 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[*] = MOVE v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[*] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = MOVSXD v2|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v40|QWORD[*] + v19|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v41|QWORD[*] + v10|DWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v42|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v36|DWORD * 2 + 16] y: 46 size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v37|DWORD * 2 + 16] y: 48 size: WORD <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = LEA [v36|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v43|DWORD] destination: B39 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v978 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:930) [bci: 193]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1272 
=== Usages ===
=== Predecessor ===
v979 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1272  <|@  <|@
f <@~|@floating>@ <|@
tid i1273 <|@
result int[-160795|0xfffffffffffd8be5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -160795
stableDimension: 0
stamp: i32 [-160795] ⇊00000000fffd8be5 ⇈00000000fffd8be5
stampKind: i32
value: int[-160795|0xfffffffffffd8be5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1261 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1272 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1258 
=== Predecessor ===
v978 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-160795|0xfffffffffffd8be5]] destination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v974 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1270 
=== Usages ===
=== Predecessor ===
v975 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1270  <|@  <|@
f <@~|@floating>@ <|@
tid i1271 <|@
result int[-158491|0xfffffffffffd94e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -158491
stableDimension: 0
stamp: i32 [-158491] ⇊00000000fffd94e5 ⇈00000000fffd94e5
stampKind: i32
value: int[-158491|0xfffffffffffd94e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1261 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1270 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1258 
=== Predecessor ===
v974 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-158491|0xfffffffffffd94e5]] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" "B41" "B40" "B13" "B34" "B17" "B15" "B38" "B36" 
    successors 
    xhandlers
    flags 
    probability 4572651257581733127
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1261 <|@
result v44|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-235531 - -128865] ⇊00000000fffc0085
valueDescription: i32
=== Inputs ===
merge: v1258 
values: i1267 i1269 i1271 i1273 i1275 i1277 i1275 i1275 i1277 i1277 
=== Succesors ===
=== Usages ===
v1263 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1258 values: i1267 i1269 i1271 i1273 i1275 i1277 i1275 i1275 i1277 i1277  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1258 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1266 v1268 v1270 v1272 v1274 v1276 v1278 v1279 v1281 v1282 
=== Succesors ===
next: v1263 
=== Usages ===
i1261 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1266 v1268 v1270 v1272 v1274 v1276 v1278 v1279 v1281 v1282 #next: v1263  <|@  <|@
f <@*|@fixed>@ <|@
tid v1263 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?334 
actionAndReason: i1261 
speculation: a1183 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1258 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?334 actionAndReason: i1261 speculation: a1183  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v44|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v44|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43]
locals: v0|QWORD[.] v7|QWORD[.] v10|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:43, 5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B44" 
    xhandlers
    flags 
    probability 4560799053584073665
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v39 
=== Usages ===
=== Predecessor ===
v41 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v39  <|@  <|@
f <@~|@floating>@ <|@
tid j1103 <|@
result v45|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:935) [bci: 228]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i64 [18 - 20] ⇊0000000000000010 ⇈0000000000000016
=== Inputs ===
x: j1111 
y: j456 
=== Succesors ===
=== Usages ===
j1104 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1111 y: j456  <|@  <|@
f <@*|@fixed>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v38 
=== Predecessor ===
v40 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = LEA [v15|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v9|QWORD, v10|DWORD, v11|DWORD, v12|DWORD, v14|QWORD, v45|QWORD] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B7" "B43" "B2" 
    successors "B45" "B84" 
    xhandlers
    flags 
    probability 4605603864145910071
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1094 <|@
result v46|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [2 - 3] ⇊0000000000000002 ⇈0000000000000003
valueDescription: i64
=== Inputs ===
merge: v38 
values: j1092 j1108 j1086 
=== Succesors ===
=== Usages ===
j937 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v38 values: j1092 j1108 j1086  <|@  <|@
f <@~|@floating>@ <|@
tid i347 <|@
result v47|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v38 
values: i14 i346 i9 
=== Succesors ===
=== Usages ===
?75 v735 v640 ?119 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v38 values: i14 i346 i9  <|@  <|@
f <@~|@floating>@ <|@
tid i351 <|@
result v48|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [1 - 2] ⇈0000000000000003
valueDescription: i32
=== Inputs ===
merge: v38 
values: i128 i353 i14 
=== Succesors ===
=== Usages ===
v648 v741 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v38 values: i128 i353 i14  <|@  <|@
f <@~|@floating>@ <|@
tid i357 <|@
result v49|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [2 - 3] ⇊0000000000000002 ⇈0000000000000003
valueDescription: i32
=== Inputs ===
merge: v38 
values: i214 i359 i128 
=== Succesors ===
=== Usages ===
?94 v288 v1985 v940 i106 i110 ?126 v774 v943 i141 v1996 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v38 values: i214 i359 i128  <|@  <|@
f <@~|@floating>@ <|@
tid j1102 <|@
result v50|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [16 - 18] ⇊0000000000000010 ⇈0000000000000012
valueDescription: i64
=== Inputs ===
merge: v38 
values: j1100 j1112 j456 
=== Succesors ===
=== Usages ===
v1977 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v38 values: j1100 j1112 j456  <|@  <|@
f <@~|@floating>@ <|@
tid j1104 <|@
result v51|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [18 - 20] ⇊0000000000000010 ⇈0000000000000016
valueDescription: i64
=== Inputs ===
merge: v38 
values: j462 j1103 j1100 
=== Succesors ===
=== Usages ===
v1978 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v38 values: j462 j1103 j1100  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v37 v39 v377 
=== Succesors ===
next: v80 
=== Usages ===
j1094 i347 i351 i357 j1102 j1104 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v37 v39 v377 #next: v80  <|@  <|@
f <@~|@floating>@ <|@
tid v1978 <|@
result [v51|QWORD + v4|DWORD[.] * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j1104 
index: a1948 
=== Succesors ===
=== Usages ===
v654 v744 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1104 index: a1948  <|@  <|@
f <@~|@floating>@ <|@
tid v1977 <|@
result [v50|QWORD + v4|DWORD[.] * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j1102 
index: a1948 
=== Succesors ===
=== Usages ===
v646 v739 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1102 index: a1948  <|@  <|@
f <@*|@fixed>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 201]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.9989929363705994
=== Inputs ===
condition: v29 
=== Succesors ===
trueSuccessor: v78 
falseSuccessor: v79 
=== Usages ===
=== Predecessor ===
v38 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v29 #trueSuccessor: v78 #falseSuccessor: v79  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v46|QWORD, v47|DWORD, v48|DWORD, v49|DWORD, v50|QWORD, v51|QWORD] = LABEL numbPhis: 6 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9989929363705994 condition: < trueDestination: B44 -> B45 falseDestination: B44 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4605596383028117030
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 204]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v89 
=== Usages ===
=== Predecessor ===
v80 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v89  <|@  <|@
f <@~|@floating>@ <|@
tid i82 <|@
result int[-2|0xfffffffffffffffe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 210]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
rawvalue: -2
stableDimension: 0
stamp: i32 [-2] ⇊00000000fffffffe ⇈00000000fffffffe
stampKind: i32
value: int[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
v83 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 210]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1949 
y: i82 
=== Succesors ===
=== Usages ===
v89 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1949 y: i82  <|@  <|@
f <@*|@fixed>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 210]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.009242564066160308
=== Inputs ===
condition: v83 
=== Succesors ===
trueSuccessor: v88 
falseSuccessor: v87 
=== Usages ===
=== Predecessor ===
v78 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v83 #trueSuccessor: v88 #falseSuccessor: v87  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: -2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.009242564066160308 condition: < trueDestination: B45 -> B46 falseDestination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B85" 
    xhandlers
    flags 
    probability 4575429616257440223
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v86 
=== Usages ===
=== Predecessor ===
v89 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v86  <|@  <|@
f <@*|@fixed>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v85 
=== Predecessor ===
v88 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B46 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B82" 
    xhandlers
    flags 
    probability 4605527792449181426
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:934) [bci: 213]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1954 
=== Usages ===
=== Predecessor ===
v89 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1954  <|@  <|@
tid ?75 <|@
d <@d|@=== Debug Properties ===
bci: 197
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 933
stackSize: 0
=== Inputs ===
outerFrameState: ?216 
values: a1 a438 i347 - - 
=== Succesors ===
=== Usages ===
v1206 i1954 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?216 values: a1 a438 i347 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1954 <|@
result v52|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:934) [bci: 220]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?75 
guard: - 
address: v1968 
=== Succesors ===
next: v987 
=== Usages ===
v640 v648 v290 v940 i697 j930 
=== Predecessor ===
v87 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?75 guard: - address: v1968 #next: v987  <|@  <|@
f <@~|@floating>@ <|@
tid v640 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:934) [bci: 220]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i347 
y: i1954 
=== Succesors ===
=== Usages ===
v987 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i347 y: i1954  <|@  <|@
f <@*|@fixed>@ <|@
tid v987 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:934) [bci: 220]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v640 
=== Succesors ===
trueSuccessor: v984 
falseSuccessor: v986 
=== Usages ===
=== Predecessor ===
i1954 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v640 #trueSuccessor: v984 #falseSuccessor: v986  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
locals: v0|QWORD[.] v7|QWORD[.] v47|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v0|QWORD[.] - 
>@ <|@ instruction v52|DWORD = MOV [v4|DWORD[.] * 8 + 12] size: DWORD state [bci:197, 5] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v52|DWORD, y: v47|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B47 -> B48 falseDestination: B47 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B81" 
    xhandlers
    flags 
    probability 4605527792449181426
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v984 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:934) [bci: 220]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v991 
=== Usages ===
v646 
=== Predecessor ===
v987 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v991  <|@  <|@
f <@~|@floating>@ <|@
tid v648 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:935) [bci: 228]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i351 
y: i1954 
=== Succesors ===
=== Usages ===
v991 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i351 y: i1954  <|@  <|@
f <@*|@fixed>@ <|@
tid v991 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:935) [bci: 228]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v648 
=== Succesors ===
trueSuccessor: v988 
falseSuccessor: v990 
=== Usages ===
=== Predecessor ===
v984 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v648 #trueSuccessor: v988 #falseSuccessor: v990  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v52|DWORD, y: v48|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B48 -> B49 falseDestination: B48 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605527792449181426
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v988 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:935) [bci: 228]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v646 
=== Usages ===
v654 
=== Predecessor ===
v991 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v646  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v646 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:934) [bci: 220]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v984 
address: v1977 
value: i888 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v654 
=== Usages ===
=== Predecessor ===
v988 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v984 address: v1977 value: i888 stateAfter: - lastLocationAccess: - #next: v654  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v654 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:935) [bci: 228]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v988 
address: v1978 
value: i885 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v99 
=== Usages ===
=== Predecessor ===
v646 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v988 address: v1978 value: i885 stateAfter: - lastLocationAccess: - #next: v99  <|@  <|@
f <@~|@floating>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:936) [bci: 233]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1949 
y: i9 
=== Succesors ===
=== Usages ===
v99 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1949 y: i9  <|@  <|@
f <@*|@fixed>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:936) [bci: 233]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.8193763792164618
=== Inputs ===
condition: v96 
=== Succesors ===
trueSuccessor: v97 
falseSuccessor: v98 
=== Usages ===
=== Predecessor ===
v654 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v96 #trueSuccessor: v97 #falseSuccessor: v98  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v50|QWORD + v4|DWORD[.] * 8] y: 48 size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV [v51|QWORD + v4|DWORD[.] * 8] y: 46 size: WORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8193763792164618 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B71" 
    xhandlers
    flags 
    probability 4604199744109203169
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 256]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v107 
=== Usages ===
=== Predecessor ===
v99 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v107  <|@  <|@
f <@*|@fixed>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 256]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v108 
=== Predecessor ===
v97 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|DWORD] destination: B50 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B57" 
    xhandlers
    flags 
    probability 4594480213650448452
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 236]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1926 
=== Usages ===
=== Predecessor ===
v99 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1926  <|@  <|@
f <@~|@floating>@ <|@
tid i106 <|@
result v53|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:938) [bci: 254]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i357 
y: i1949 
=== Succesors ===
=== Usages ===
i110 v943 v288 v290 i110 i110 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i357 y: i1949  <|@  <|@
f <@~|@floating>@ <|@
tid v943 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i357 
y: i106 
=== Succesors ===
=== Usages ===
v1926 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i357 y: i106  <|@  <|@
f <@~|@floating>@ <|@
tid i933 <|@
result v54|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NegateNode$$Lambda$180/1857180762@4b0ec103
stamp: i32
=== Inputs ===
value: i1949 
=== Succesors ===
=== Usages ===
j934 
=== Predecessor ===
- >@ <|@
instruction <@Negate|@org.graalvm.compiler.nodes.calc.NegateNode>@ value: i1949  <|@  <|@
f <@~|@floating>@ <|@
tid j934 <|@
result v55|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i933 
=== Succesors ===
=== Usages ===
j936 j1753 v1506 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i933  <|@  <|@
f <@~|@floating>@ <|@
tid j936 <|@
result v56|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j934 
y: j935 
=== Succesors ===
=== Usages ===
j937 v1756 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j934 y: j935  <|@  <|@
f <@*|@fixed>@ <|@
tid v1926 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v943 
=== Succesors ===
trueSuccessor: v1925 
falseSuccessor: v1922 
=== Usages ===
=== Predecessor ===
v98 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v943 #trueSuccessor: v1925 #falseSuccessor: v1922  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = SUB (x: v49|DWORD, ~y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = NEG v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = MOVSXD v54|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = DEC v55|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v53|DWORD, y: v49|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B51 -> B52 falseDestination: B51 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B56" 
    xhandlers
    flags 
    probability 4589976614023077956
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1925 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1934 
=== Usages ===
=== Predecessor ===
v1926 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1934  <|@  <|@
f <@~|@floating>@ <|@
tid j937 <|@
result v57|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483647 - 2147483649]
=== Inputs ===
x: j936 
y: j1094 
=== Succesors ===
=== Usages ===
v939 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j936 y: j1094  <|@  <|@
f <@~|@floating>@ <|@
tid j930 <|@
result v58|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i1954 
=== Succesors ===
=== Usages ===
v939 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1954  <|@  <|@
f <@~|@floating>@ <|@
tid v939 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j937 
y: j930 
=== Succesors ===
=== Usages ===
v1934 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j937 y: j930  <|@  <|@
f <@~|@floating>@ <|@
tid a1219 <|@
result v59|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@550168632
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@550168632]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1215 a1215 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1218 <|@
result int[-168987|0xfffffffffffd6be5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -168987
stableDimension: 0
stamp: i32 [-168987] ⇊00000000fffd6be5 ⇈00000000fffd6be5
stampKind: i32
value: int[-168987|0xfffffffffffd6be5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1214 i1214 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1934 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v939 
=== Succesors ===
trueSuccessor: v1933 
falseSuccessor: v1930 
=== Usages ===
=== Predecessor ===
v1925 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v939 #trueSuccessor: v1933 #falseSuccessor: v1930  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = ADD (x: v56|QWORD, y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = MOV v52|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@550168632] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v58|QWORD, y: v57|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B52 -> B53 falseDestination: B52 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4589976614023077956
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1933 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1932 
=== Usages ===
=== Predecessor ===
v1934 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1932  <|@  <|@
f <@~|@floating>@ <|@
tid v940 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i357 
y: i1954 
=== Succesors ===
=== Usages ===
v1932 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i357 y: i1954  <|@  <|@
f <@*|@fixed>@ <|@
tid v1932 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v940 
=== Succesors ===
trueSuccessor: v1923 
falseSuccessor: v1931 
=== Usages ===
=== Predecessor ===
v1933 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v940 #trueSuccessor: v1923 #falseSuccessor: v1931  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v52|DWORD, y: v49|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B53 -> B54 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" 
    xhandlers
    flags 
    probability 4589976614023077956
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1923 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1921 
=== Usages ===
=== Predecessor ===
v1932 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1921  <|@  <|@
f <@*|@fixed>@ <|@
tid v1921 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1919 
=== Predecessor ===
v1923 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B54 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1931 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2040 
=== Usages ===
=== Predecessor ===
v1932 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2040  <|@  <|@
f <@*|@fixed>@ <|@
tid v2040 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1211 
=== Predecessor ===
v1931 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-168987|0xfffffffffffd6be5], v59|QWORD[.]] destination: B55 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1930 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1217 
=== Usages ===
=== Predecessor ===
v1934 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1217  <|@  <|@
f <@*|@fixed>@ <|@
tid v1217 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1211 
=== Predecessor ===
v1930 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-168987|0xfffffffffffd6be5], v59|QWORD[.]] destination: B56 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B58" 
    xhandlers
    flags 
    probability 4589976614023077956
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1922 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1920 
=== Usages ===
=== Predecessor ===
v1926 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1920  <|@  <|@
f <@*|@fixed>@ <|@
tid v1920 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1919 
=== Predecessor ===
v1922 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B54" 
    successors "B59" "B60" 
    xhandlers
    flags 
    probability 4594480213650448452
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1919 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1920 v1921 
=== Succesors ===
next: v999 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1920 v1921 #next: v999  <|@  <|@
f <@~|@floating>@ <|@
tid v288 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.Arrays.rangeCheck(Arrays.java:112) [bci: 2]
at java.util.Arrays.fill(Arrays.java:2973) [bci: 4]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i106 
y: i357 
=== Succesors ===
=== Usages ===
v999 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i106 y: i357  <|@  <|@
f <@*|@fixed>@ <|@
tid v999 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.rangeCheck(Arrays.java:112) [bci: 2]
at java.util.Arrays.fill(Arrays.java:2973) [bci: 4]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v288 
=== Succesors ===
trueSuccessor: v998 
falseSuccessor: v996 
=== Usages ===
=== Predecessor ===
v1919 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v288 #trueSuccessor: v998 #falseSuccessor: v996  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v49|DWORD, y: v53|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B58 -> B59 falseDestination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v998 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.rangeCheck(Arrays.java:112) [bci: 2]
at java.util.Arrays.fill(Arrays.java:2973) [bci: 4]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1212 
=== Usages ===
=== Predecessor ===
v999 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1212  <|@  <|@
f <@~|@floating>@ <|@
tid i1213 <|@
result int[-167955|0xfffffffffffd6fed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -167955
stableDimension: 0
stamp: i32 [-167955] ⇊00000000fffd6fed ⇈00000000fffd6fed
stampKind: i32
value: int[-167955|0xfffffffffffd6fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1214 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1212 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1211 
=== Predecessor ===
v998 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-167955|0xfffffffffffd6fed], Object[null]] destination: B59 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" "B63" 
    xhandlers
    flags 
    probability 4594480213650448452
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v996 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.rangeCheck(Arrays.java:112) [bci: 2]
at java.util.Arrays.fill(Arrays.java:2973) [bci: 4]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1003 
=== Usages ===
=== Predecessor ===
v999 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1003  <|@  <|@
f <@~|@floating>@ <|@
tid v290 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.Arrays.rangeCheck(Arrays.java:119) [bci: 61]
at java.util.Arrays.fill(Arrays.java:2973) [bci: 4]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1954 
y: i106 
=== Succesors ===
=== Usages ===
v1003 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1954 y: i106  <|@  <|@
f <@*|@fixed>@ <|@
tid v1003 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.rangeCheck(Arrays.java:119) [bci: 61]
at java.util.Arrays.fill(Arrays.java:2973) [bci: 4]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v290 
=== Succesors ===
trueSuccessor: v1002 
falseSuccessor: v1000 
=== Usages ===
=== Predecessor ===
v996 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v290 #trueSuccessor: v1002 #falseSuccessor: v1000  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v53|DWORD, y: v52|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B60 -> B61 falseDestination: B60 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1002 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.rangeCheck(Arrays.java:119) [bci: 61]
at java.util.Arrays.fill(Arrays.java:2973) [bci: 4]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1220 
=== Usages ===
=== Predecessor ===
v1003 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1220  <|@  <|@
f <@~|@floating>@ <|@
tid i1221 <|@
result int[-168211|0xfffffffffffd6eed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -168211
stableDimension: 0
stamp: i32 [-168211] ⇊00000000fffd6eed ⇈00000000fffd6eed
stampKind: i32
value: int[-168211|0xfffffffffffd6eed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1214 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1220 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1211 
=== Predecessor ===
v1002 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-168211|0xfffffffffffd6eed], Object[null]] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B59" "B56" "B61" "B55" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1214 <|@
result v60|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-168987 - -167955] ⇊00000000fffd6ae5 ⇈00000000fffd6fed
valueDescription: i32
=== Inputs ===
merge: v1211 
values: i1213 i1218 i1221 i1218 
=== Succesors ===
=== Usages ===
v1216 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1211 values: i1213 i1218 i1221 i1218  <|@  <|@
f <@~|@floating>@ <|@
tid a1215 <|@
result v61|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/k/d$a;
valueDescription: a -
=== Inputs ===
merge: v1211 
values: a1183 a1219 a1183 a1219 
=== Succesors ===
=== Usages ===
v1216 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1211 values: a1183 a1219 a1183 a1219  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1211 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1212 v1217 v1220 v2040 
=== Succesors ===
next: v1216 
=== Usages ===
i1214 a1215 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1212 v1217 v1220 v2040 #next: v1216  <|@  <|@
tid ?94 <|@
d <@d|@=== Debug Properties ===
bci: 229
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: false
localsSize: 5
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:935) [bci: 228]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 936
stackSize: 0
=== Inputs ===
outerFrameState: ?216 
values: a1 a438 i357 - - 
=== Succesors ===
=== Usages ===
v1216 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?216 values: a1 a438 i357 - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1216 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?94 
actionAndReason: i1214 
speculation: a1215 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1211 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?94 actionAndReason: i1214 speculation: a1215  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v60|DWORD, v61|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v61|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:936) [bci: 229]
locals: v0|QWORD[.] v7|QWORD[.] v49|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:229, 5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4594480213650448452
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1000 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.rangeCheck(Arrays.java:119) [bci: 61]
at java.util.Arrays.fill(Arrays.java:2973) [bci: 4]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1705 
=== Usages ===
=== Predecessor ===
v1003 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1705  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1705 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v1509 
=== Usages ===
j1707 
=== Predecessor ===
v1000 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v1509  <|@  <|@
f <@~|@floating>@ <|@
tid v1506 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j934 
y: j1388 
=== Succesors ===
=== Usages ===
v1509 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j934 y: j1388  <|@  <|@
f <@*|@fixed>@ <|@
tid v1509 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1506 
=== Succesors ===
trueSuccessor: v1507 
falseSuccessor: v1508 
=== Usages ===
=== Predecessor ===
v1705 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1506 #trueSuccessor: v1507 #falseSuccessor: v1508  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v55|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B71" 
    xhandlers
    flags 
    probability 4589976614023077956
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1507 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v109 
=== Usages ===
=== Predecessor ===
v1509 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v109  <|@  <|@
f <@*|@fixed>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 256]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v108 
=== Predecessor ===
v1507 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v53|DWORD] destination: B64 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4589976614023077956
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1508 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1557 
=== Usages ===
=== Predecessor ===
v1509 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1557  <|@  <|@
f <@~|@floating>@ <|@
tid v1985 <|@
result [v7|QWORD[.] + v49|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a438 
index: i357 
=== Succesors ===
=== Usages ===
j1707 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a438 index: i357  <|@  <|@
f <@~|@floating>@ <|@
tid j1707 <|@
result v62|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1705 
address: v1985 
=== Succesors ===
=== Usages ===
v2022 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1705 address: v1985  <|@  <|@
f <@~|@floating>@ <|@
tid v2022 <|@
result [v62|QWORD[.]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1707 
index: - 
=== Succesors ===
=== Usages ===
v1882 v1884 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1707 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1753 <|@
result v63|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j934 
y: j1752 
=== Succesors ===
=== Usages ===
v1754 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j934 y: j1752  <|@  <|@
f <@~|@floating>@ <|@
tid v1754 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1753 
y: j1065 
=== Succesors ===
=== Usages ===
v1557 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1753 y: j1065  <|@  <|@
f <@*|@fixed>@ <|@
tid v1557 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1754 
=== Succesors ===
trueSuccessor: v1556 
falseSuccessor: v1555 
=== Usages ===
=== Predecessor ===
v1508 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1754 #trueSuccessor: v1556 #falseSuccessor: v1555  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[.] = LEA [v7|QWORD[.] + v49|DWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = LEA [v55|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v63|QWORD, y: v63|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B65 -> B66 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" 
    xhandlers
    flags 
    probability 4580969414768336964
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1556 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1560 
=== Usages ===
=== Predecessor ===
v1557 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1560  <|@  <|@
f <@*|@fixed>@ <|@
tid v1560 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1540 
=== Predecessor ===
v1556 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" 
    xhandlers
    flags 
    probability 4588129111075663974
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1555 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1884 
=== Usages ===
=== Predecessor ===
v1557 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1884  <|@  <|@
f <@~|@floating>@ <|@
tid v1911 <|@
result v64|V32_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <48,48>
stableDimension: 0
stamp: <i16 [48] ⇊0000000000000030 ⇈0000000000000030,i16 [48] ⇊0000000000000030 ⇈0000000000000030>
stampKind: <i16,i16>
value: SIMD<48,48>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1884 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1884 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2022 
value: v1911 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1539 
=== Usages ===
=== Predecessor ===
v1555 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2022 value: v1911 stateAfter: - lastLocationAccess: - #next: v1539  <|@  <|@
f <@*|@fixed>@ <|@
tid v1539 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1540 
=== Predecessor ===
v1884 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v64|V32_WORD = A od: SIMD<48,48> oe: WORD <|@ <|@
      nr   -1  <|@ instruction J (address: [v62|QWORD[.]], input: v64|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[2|0x2]] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B66" 
    successors "B69" "B70" 
    xhandlers
    flags 
    probability 4589976614023077956
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1708 <|@
result v65|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [0 - 2] ⇈0000000000000002
valueDescription: i64
=== Inputs ===
merge: v1540 
values: j1086 j1065 
=== Succesors ===
=== Usages ===
v1756 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1540 values: j1086 j1065  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1540 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1539 v1560 
=== Succesors ===
next: v1563 
=== Usages ===
j1708 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1539 v1560 #next: v1563  <|@  <|@
f <@~|@floating>@ <|@
tid v1756 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j936 
y: j1708 
=== Succesors ===
=== Usages ===
v1563 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j936 y: j1708  <|@  <|@
f <@*|@fixed>@ <|@
tid v1563 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1756 
=== Succesors ===
trueSuccessor: v1562 
falseSuccessor: v1561 
=== Usages ===
=== Predecessor ===
v1540 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1756 #trueSuccessor: v1562 #falseSuccessor: v1561  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v65|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v65|QWORD, y: v56|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B68 -> B69 falseDestination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" 
    xhandlers
    flags 
    probability 4580969414768336964
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1562 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1871 
=== Usages ===
=== Predecessor ===
v1563 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1871  <|@  <|@
f <@*|@fixed>@ <|@
tid v1871 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v108 
=== Predecessor ===
v1562 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v53|DWORD] destination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" 
    xhandlers
    flags 
    probability 4588129111075663974
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1561 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1882 
=== Usages ===
=== Predecessor ===
v1563 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1882  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1882 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2022 
value: i888 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1872 
=== Usages ===
=== Predecessor ===
v1561 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2022 value: i888 stateAfter: - lastLocationAccess: - #next: v1872  <|@  <|@
f <@*|@fixed>@ <|@
tid v1872 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v108 
=== Predecessor ===
v1882 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v62|QWORD[.]] y: 48 size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v53|DWORD] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B50" "B64" "B69" "B70" 
    successors "B72" "B73" 
    xhandlers
    flags 
    probability 4605527792449181426
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i110 <|@
result v66|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 256]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v108 
values: i357 i106 i106 i106 
=== Succesors ===
=== Usages ===
?111 j1321 v698 i118 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v108 values: i357 i106 i106 i106  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 256]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v107 v109 v1871 v1872 
=== Succesors ===
next: v2042 
=== Usages ===
i110 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v107 v109 v1871 v1872 #next: v2042  <|@  <|@
tid ?111 <|@
d <@d|@=== Debug Properties ===
bci: 256
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 940
stackSize: 0
=== Inputs ===
outerFrameState: ?216 
values: a1 a438 i110 - - 
=== Succesors ===
=== Usages ===
v1227 v2042 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?216 values: a1 a438 i110 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2042 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?111 
object: a1947 
=== Succesors ===
next: v678 
=== Usages ===
=== Predecessor ===
v108 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?111 object: a1947 #next: v678  <|@  <|@
f <@~|@floating>@ <|@
tid i1229 <|@
result int[-180065|0xfffffffffffd409f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -180065
stableDimension: 0
stamp: i32 [-180065] ⇊00000000fffd409f ⇈00000000fffd409f
stampKind: i32
value: int[-180065|0xfffffffffffd409f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1225 i1225 i1225 i1225 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v678 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v675 
=== Succesors ===
trueSuccessor: v677 
falseSuccessor: v676 
=== Usages ===
=== Predecessor ===
v2042 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v675 #trueSuccessor: v677 #falseSuccessor: v676  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v66|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 256]
locals: v0|QWORD[.] v7|QWORD[.] v66|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v0|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v3|DWORD[.] * 8] state [bci:256, 5] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B71 -> B72 falseDestination: B71 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B79" 
    xhandlers
    flags 
    probability 4575859268439552651
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v677 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1228 
=== Usages ===
=== Predecessor ===
v678 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1228  <|@  <|@
f <@*|@fixed>@ <|@
tid v1228 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1222 
=== Predecessor ===
v677 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-180065|0xfffffffffffd409f]] destination: B72 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    probability 4605454266720142376
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v676 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v690 
=== Usages ===
=== Predecessor ===
v678 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v690  <|@  <|@
f <@~|@floating>@ <|@
tid v686 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 41]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1946 
y: i9 
=== Succesors ===
=== Usages ===
v690 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1946 y: i9  <|@  <|@
f <@*|@fixed>@ <|@
tid v690 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:259) [bci: 52]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v686 
=== Succesors ===
trueSuccessor: v689 
falseSuccessor: v687 
=== Usages ===
=== Predecessor ===
v676 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v686 #trueSuccessor: v689 #falseSuccessor: v687  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B73 -> B74 falseDestination: B73 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B79" 
    xhandlers
    flags 
    probability 4575812211972967659
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v689 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1286 
=== Usages ===
=== Predecessor ===
v690 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1286  <|@  <|@
f <@*|@fixed>@ <|@
tid v1286 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1222 
=== Predecessor ===
v689 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-180065|0xfffffffffffd409f]] destination: B74 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" "B77" 
    xhandlers
    flags 
    probability 4605381476248393716
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v687 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:259) [bci: 55]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1955 
=== Usages ===
=== Predecessor ===
v690 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1955  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1955 <|@
result v67|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 60]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1974 
=== Succesors ===
next: v696 
=== Usages ===
i691 
=== Predecessor ===
v687 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1974 #next: v696  <|@  <|@
f <@~|@floating>@ <|@
tid i691 <|@
result v68|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 65]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i1955 
y: i1946 
=== Succesors ===
=== Usages ===
v692 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i1955 y: i1946  <|@  <|@
f <@~|@floating>@ <|@
tid v692 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i691 
y: i1945 
=== Succesors ===
=== Usages ===
v696 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i691 y: i1945  <|@  <|@
f <@*|@fixed>@ <|@
tid v696 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 77]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v692 
=== Succesors ===
trueSuccessor: v695 
falseSuccessor: v693 
=== Usages ===
=== Predecessor ===
i1955 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v692 #trueSuccessor: v695 #falseSuccessor: v693  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v67|DWORD = MOV [v3|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = SUB (x: v67|DWORD, ~y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v1|DWORD, y: v68|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B75 -> B76 falseDestination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B79" 
    xhandlers
    flags 
    probability 4575765626071048516
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v695 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1285 
=== Usages ===
=== Predecessor ===
v696 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1285  <|@  <|@
f <@*|@fixed>@ <|@
tid v1285 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1222 
=== Predecessor ===
v695 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-180065|0xfffffffffffd409f]] destination: B76 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B78" "B80" 
    xhandlers
    flags 
    probability 4605309413681362543
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v693 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 80]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v702 
=== Usages ===
=== Predecessor ===
v696 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v702  <|@  <|@
f <@~|@floating>@ <|@
tid i697 <|@
result v69|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i1954 
y: i1946 
=== Succesors ===
=== Usages ===
v698 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i1954 y: i1946  <|@  <|@
f <@~|@floating>@ <|@
tid v698 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i697 
y: i110 
=== Succesors ===
=== Usages ===
v702 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i697 y: i110  <|@  <|@
f <@*|@fixed>@ <|@
tid v702 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v698 
=== Succesors ===
trueSuccessor: v701 
falseSuccessor: v699 
=== Usages ===
=== Predecessor ===
v693 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v698 #trueSuccessor: v701 #falseSuccessor: v699  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = SUB (x: v52|DWORD, ~y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v66|DWORD, y: v69|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B77 -> B78 falseDestination: B77 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B79" 
    xhandlers
    flags 
    probability 4575719506028148565
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v701 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1284 
=== Usages ===
=== Predecessor ===
v702 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1284  <|@  <|@
f <@*|@fixed>@ <|@
tid v1284 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1222 
=== Predecessor ===
v701 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-180065|0xfffffffffffd409f]] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B72" "B78" "B76" "B74" 
    successors 
    xhandlers
    flags 
    probability 4584796352382670340
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1225 <|@
result v70|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-180747 - -180065] ⇊00000000fffd0095 ⇈00000000fffd7dff
valueDescription: i32
=== Inputs ===
merge: v1222 
values: i1229 i1229 i1229 i1229 
=== Succesors ===
=== Usages ===
v1227 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1222 values: i1229 i1229 i1229 i1229  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1222 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1228 v1284 v1285 v1286 
=== Succesors ===
next: v1227 
=== Usages ===
i1225 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1228 v1284 v1285 v1286 #next: v1227  <|@  <|@
f <@*|@fixed>@ <|@
tid v1227 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?111 
actionAndReason: i1225 
speculation: a1183 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1222 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?111 actionAndReason: i1225 speculation: a1183  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v70|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v70|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 256]
locals: v0|QWORD[.] v7|QWORD[.] v66|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:256, 5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B109" 
    xhandlers
    flags 
    probability 4605238071740001682
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v699 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1318 
=== Usages ===
=== Predecessor ===
v702 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1318  <|@  <|@
f <@~|@floating>@ <|@
tid a668 <|@
result v71|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 257]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1947 
=== Succesors ===
=== Usages ===
j1318 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1947  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1318 <|@
result v72|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i64
=== Inputs ===
object: a668 
=== Succesors ===
next: j1320 
=== Usages ===
v1993 
=== Predecessor ===
v699 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a668 #next: j1320  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1320 <|@
result v73|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i64
=== Inputs ===
object: a438 
=== Succesors ===
next: v1325 
=== Usages ===
v1994 
=== Predecessor ===
j1318 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a438 #next: v1325  <|@  <|@
f <@~|@floating>@ <|@
tid j1942 <|@
result v74|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1945 
=== Succesors ===
=== Usages ===
v1993 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1945  <|@  <|@
f <@~|@floating>@ <|@
tid v1993 <|@
result [v72|QWORD[*] + v74|QWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j1318 
index: j1942 
=== Succesors ===
=== Usages ===
v1325 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1318 index: j1942  <|@  <|@
f <@~|@floating>@ <|@
tid j1321 <|@
result v75|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i110 
=== Succesors ===
=== Usages ===
v1994 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i110  <|@  <|@
f <@~|@floating>@ <|@
tid v1994 <|@
result [v73|QWORD[*] + v75|QWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j1320 
index: j1321 
=== Succesors ===
=== Usages ===
v1325 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1320 index: j1321  <|@  <|@
f <@~|@floating>@ <|@
tid j1938 <|@
result v76|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1946 
=== Succesors ===
=== Usages ===
v1325 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1946  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1325 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: charArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v1993 v1994 j1938 
=== Succesors ===
next: v220 
=== Usages ===
=== Predecessor ===
j1320 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v1993 v1994 j1938 #next: v220  <|@  <|@
f <@~|@floating>@ <|@
tid i118 <|@
result v77|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:941) [bci: 278]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i110 
y: i1946 
=== Succesors ===
=== Usages ===
i219 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i110 y: i1946  <|@  <|@
f <@*|@fixed>@ <|@
tid v220 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v217 
=== Predecessor ===
v1325 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2ae4cec4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[*] = MOVE v71|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[*] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = MOVSXD v1|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v75|QWORD = MOVSXD v66|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD = MOVSXD v2|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v72|QWORD[*] + v74|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v73|QWORD[*] + v75|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v76|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v77|DWORD = ADD (x: v66|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v77|DWORD] destination: B80 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B83" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v990 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:935) [bci: 228]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1209 
=== Usages ===
=== Predecessor ===
v991 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1209  <|@  <|@
f <@~|@floating>@ <|@
tid i1210 <|@
result int[-166171|0xfffffffffffd76e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -166171
stableDimension: 0
stamp: i32 [-166171] ⇊00000000fffd76e5 ⇈00000000fffd76e5
stampKind: i32
value: int[-166171|0xfffffffffffd76e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1204 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1209 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1201 
=== Predecessor ===
v990 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-166171|0xfffffffffffd76e5]] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B83" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v986 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:934) [bci: 220]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1207 
=== Usages ===
=== Predecessor ===
v987 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1207  <|@  <|@
f <@~|@floating>@ <|@
tid i1208 <|@
result int[-164123|0xfffffffffffd7ee5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -164123
stableDimension: 0
stamp: i32 [-164123] ⇊00000000fffd7ee5 ⇈00000000fffd7ee5
stampKind: i32
value: int[-164123|0xfffffffffffd7ee5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1204 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1207 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1201 
=== Predecessor ===
v986 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-164123|0xfffffffffffd7ee5]] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" "B81" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1204 <|@
result v78|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-166171 - -162827] ⇊00000000fffd02e5 ⇈00000000fffdfff5
valueDescription: i32
=== Inputs ===
merge: v1201 
values: i1208 i1210 
=== Succesors ===
=== Usages ===
v1206 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1201 values: i1208 i1210  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1201 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1207 v1209 
=== Succesors ===
next: v1206 
=== Usages ===
i1204 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1207 v1209 #next: v1206  <|@  <|@
f <@*|@fixed>@ <|@
tid v1206 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?75 
actionAndReason: i1204 
speculation: a1183 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1201 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?75 actionAndReason: i1204 speculation: a1183  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v78|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v78|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
locals: v0|QWORD[.] v7|QWORD[.] v47|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:197, 5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B85" 
    xhandlers
    flags 
    probability 4560799887891645879
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v84 
=== Usages ===
=== Predecessor ===
v80 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v84  <|@  <|@
f <@*|@fixed>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v85 
=== Predecessor ===
v79 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B46" 
    successors "B86" "B176" 
    xhandlers
    flags 
    probability 4576022210371686731
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v84 v86 
=== Succesors ===
next: i1956 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v84 v86 #next: i1956  <|@  <|@
tid ?119 <|@
d <@d|@=== Debug Properties ===
bci: 283
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 943
stackSize: 0
=== Inputs ===
outerFrameState: ?216 
values: a1 a438 i347 - - 
=== Succesors ===
=== Usages ===
v1235 i1956 i1957 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?216 values: a1 a438 i347 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1956 <|@
result v79|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 60]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?119 
guard: - 
address: v1974 
=== Succesors ===
next: v1015 
=== Usages ===
i767 v722 
=== Predecessor ===
v85 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?119 guard: - address: v1974 #next: v1015  <|@  <|@
f <@~|@floating>@ <|@
tid v722 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 296]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1945 
y: i1956 
=== Succesors ===
=== Usages ===
v1015 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1945 y: i1956  <|@  <|@
f <@*|@fixed>@ <|@
tid v1015 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 296]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v722 
=== Succesors ===
trueSuccessor: v1012 
falseSuccessor: v1014 
=== Usages ===
=== Predecessor ===
i1956 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v722 #trueSuccessor: v1012 #falseSuccessor: v1014  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
locals: v0|QWORD[.] v7|QWORD[.] v47|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v0|QWORD[.] - 
>@ <|@ instruction v79|DWORD = MOV [v3|DWORD[.] * 8 + 12] size: DWORD state [bci:283, 5] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v79|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B85 -> B86 falseDestination: B85 -> B176 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B87" "B175" 
    xhandlers
    flags 
    probability 4576022210371686731
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1012 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 296]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1957 
=== Usages ===
i1958 
=== Predecessor ===
v1015 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1957  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1957 <|@
result v80|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 85]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?119 
guard: - 
address: v1968 
=== Succesors ===
next: v1023 
=== Usages ===
i773 v735 v741 v791 v861 v851 v841 v831 
=== Predecessor ===
v1012 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?119 guard: - address: v1968 #next: v1023  <|@  <|@
f <@~|@floating>@ <|@
tid v735 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 297]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i347 
y: i1957 
=== Succesors ===
=== Usages ===
v1023 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i347 y: i1957  <|@  <|@
f <@*|@fixed>@ <|@
tid v1023 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 297]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v735 
=== Succesors ===
trueSuccessor: v1020 
falseSuccessor: v1022 
=== Usages ===
=== Predecessor ===
i1957 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v735 #trueSuccessor: v1020 #falseSuccessor: v1022  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
locals: v0|QWORD[.] v7|QWORD[.] v47|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v0|QWORD[.] - 
>@ <|@ instruction v80|DWORD = MOV [v4|DWORD[.] * 8 + 12] size: DWORD state [bci:283, 5] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v80|DWORD, y: v47|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B86 -> B87 falseDestination: B86 -> B175 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B88" "B174" 
    xhandlers
    flags 
    probability 4576022210371686731
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1020 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 297]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1027 
=== Usages ===
v739 
=== Predecessor ===
v1023 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1027  <|@  <|@
f <@~|@floating>@ <|@
tid v741 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:944) [bci: 305]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i351 
y: i1957 
=== Succesors ===
=== Usages ===
v1027 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i351 y: i1957  <|@  <|@
f <@*|@fixed>@ <|@
tid v1027 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:944) [bci: 305]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v741 
=== Succesors ===
trueSuccessor: v1024 
falseSuccessor: v1026 
=== Usages ===
=== Predecessor ===
v1020 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v741 #trueSuccessor: v1024 #falseSuccessor: v1026  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v80|DWORD, y: v48|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B87 -> B88 falseDestination: B87 -> B174 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B89" "B90" 
    xhandlers
    flags 
    probability 4576022210371686731
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1024 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:944) [bci: 305]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1031 
=== Usages ===
v744 
=== Predecessor ===
v1027 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1031  <|@  <|@
f <@~|@floating>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:945) [bci: 311]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1946 
y: i128 
=== Succesors ===
=== Usages ===
v1031 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1946 y: i128  <|@  <|@
f <@*|@fixed>@ <|@
tid v1031 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:945) [bci: 311]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v129 
=== Succesors ===
trueSuccessor: v1030 
falseSuccessor: v1028 
=== Usages ===
=== Predecessor ===
v1024 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v129 #trueSuccessor: v1030 #falseSuccessor: v1028  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B88 -> B89 falseDestination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B177" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1030 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:945) [bci: 311]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1240 
=== Usages ===
=== Predecessor ===
v1031 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1240  <|@  <|@
f <@~|@floating>@ <|@
tid i1241 <|@
result int[-190995|0xfffffffffffd15ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -190995
stableDimension: 0
stamp: i32 [-190995] ⇊00000000fffd15ed ⇈00000000fffd15ed
stampKind: i32
value: int[-190995|0xfffffffffffd15ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1233 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1240 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1230 
=== Predecessor ===
v1030 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-190995|0xfffffffffffd15ed]] destination: B89 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" "B173" 
    xhandlers
    flags 
    probability 4576022210371686731
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1028 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:945) [bci: 311]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1035 
=== Usages ===
=== Predecessor ===
v1031 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1035  <|@  <|@
f <@~|@floating>@ <|@
tid i135 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 331]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i156 i140 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i140 <|@
result v81|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:947) [bci: 341]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i1946 
y: i135 
=== Succesors ===
=== Usages ===
i141 j1333 i773 i767 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1946 y: i135  <|@  <|@
f <@~|@floating>@ <|@
tid i141 <|@
result v82|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:947) [bci: 342]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i140 
y: i357 
=== Succesors ===
=== Usages ===
i142 v1980 i212 v791 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i140 y: i357  <|@  <|@
f <@~|@floating>@ <|@
tid v791 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:951) [bci: 362]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i141 
y: i1957 
=== Succesors ===
=== Usages ===
v1035 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i141 y: i1957  <|@  <|@
f <@*|@fixed>@ <|@
tid v1035 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:951) [bci: 362]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v791 
=== Succesors ===
trueSuccessor: v1032 
falseSuccessor: v1034 
=== Usages ===
=== Predecessor ===
v1028 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v791 #trueSuccessor: v1032 #falseSuccessor: v1034  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v81|DWORD = DEC v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v82|DWORD = ADD (x: v81|DWORD, y: v49|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v80|DWORD, y: v82|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B90 -> B91 falseDestination: B90 -> B173 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B92" "B93" 
    xhandlers
    flags 
    probability 4576022210371686731
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1032 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:951) [bci: 362]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1958 
=== Usages ===
v799 
=== Predecessor ===
v1035 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1958  <|@  <|@
f <@~|@floating>@ <|@
tid a1943 <|@
result v83|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 257]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1947 
=== Succesors ===
=== Usages ===
j1326 v1979 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1947  <|@  <|@
f <@~|@floating>@ <|@
tid v1979 <|@
result [v83|QWORD[.] + v1|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a1943 
index: i1945 
=== Succesors ===
=== Usages ===
i1958 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1943 index: i1945  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1958 <|@
result v84|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 296]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v1012 
address: v1979 
=== Succesors ===
next: v739 
=== Usages ===
v739 
=== Predecessor ===
v1032 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1012 address: v1979 #next: v739  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v739 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 297]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1020 
address: v1977 
value: i1958 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v744 
=== Usages ===
=== Predecessor ===
i1958 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1020 address: v1977 value: i1958 stateAfter: - lastLocationAccess: - #next: v744  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v744 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:944) [bci: 305]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1024 
address: v1978 
value: i885 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v772 
=== Usages ===
=== Predecessor ===
v739 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1024 address: v1978 value: i885 stateAfter: - lastLocationAccess: - #next: v772  <|@  <|@
f <@~|@floating>@ <|@
tid i767 <|@
result v85|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 65]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i1956 
y: i140 
=== Succesors ===
=== Usages ===
v768 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i1956 y: i140  <|@  <|@
f <@~|@floating>@ <|@
tid i133 <|@
result v86|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 323]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i1945 
y: i14 
=== Succesors ===
=== Usages ===
j1327 v768 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1945 y: i14  <|@  <|@
f <@~|@floating>@ <|@
tid v768 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i767 
y: i133 
=== Succesors ===
=== Usages ===
v772 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i767 y: i133  <|@  <|@
f <@*|@fixed>@ <|@
tid v772 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 77]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v768 
=== Succesors ===
trueSuccessor: v771 
falseSuccessor: v769 
=== Usages ===
=== Predecessor ===
v744 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v768 #trueSuccessor: v771 #falseSuccessor: v769  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2ae4cec4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v84|DWORD = MOVSX [v83|QWORD[.] + v1|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v50|QWORD + v4|DWORD[.] * 8], y: v84|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV [v51|QWORD + v4|DWORD[.] * 8] y: 46 size: WORD <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = SUB (x: v79|DWORD, ~y: v81|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = INC v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v86|DWORD, y: v85|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B91 -> B92 falseDestination: B91 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B95" 
    xhandlers
    flags 
    probability 4545860217785470586
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v771 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v770 
=== Usages ===
=== Predecessor ===
v772 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v770  <|@  <|@
f <@*|@fixed>@ <|@
tid v770 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v758 
=== Predecessor ===
v771 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B92 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B94" "B96" 
    xhandlers
    flags 
    probability 4575973524485780398
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v769 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 80]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v778 
=== Usages ===
=== Predecessor ===
v772 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v778  <|@  <|@
f <@~|@floating>@ <|@
tid i773 <|@
result v87|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i1957 
y: i140 
=== Succesors ===
=== Usages ===
v774 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i1957 y: i140  <|@  <|@
f <@~|@floating>@ <|@
tid v774 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i773 
y: i357 
=== Succesors ===
=== Usages ===
v778 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i773 y: i357  <|@  <|@
f <@*|@fixed>@ <|@
tid v778 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v774 
=== Succesors ===
trueSuccessor: v777 
falseSuccessor: v775 
=== Usages ===
=== Predecessor ===
v769 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v774 #trueSuccessor: v777 #falseSuccessor: v775  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = SUB (x: v80|DWORD, ~y: v81|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v49|DWORD, y: v87|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B93 -> B94 falseDestination: B93 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B95" 
    xhandlers
    flags 
    probability 4545797899851510480
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v777 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v776 
=== Usages ===
=== Predecessor ===
v778 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v776  <|@  <|@
f <@*|@fixed>@ <|@
tid v776 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v758 
=== Predecessor ===
v777 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B94 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B92" "B94" 
    successors 
    xhandlers
    flags 
    probability 4550332658445861029
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v758 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v770 v776 
=== Succesors ===
next: v779 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v770 v776 #next: v779  <|@  <|@
tid ?126 <|@
d <@d|@=== Debug Properties ===
bci: 306
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: false
localsSize: 5
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:944) [bci: 305]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 945
stackSize: 0
=== Inputs ===
outerFrameState: ?216 
values: a1 a438 i357 - - 
=== Succesors ===
=== Usages ===
v779 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?216 values: a1 a438 i357 - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v779 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
nodeSourcePosition: at org.graalvm.compiler.nodes.DeoptimizeNode.deopt(DeoptimizationAction, DeoptimizationReason) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:263) [bci: 119]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
reason: RuntimeConstraint
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?126 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v758 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?126  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -199521 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:945) [bci: 306]
locals: v0|QWORD[.] v7|QWORD[.] v49|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:306, 5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B97" "B100" 
    xhandlers
    flags 
    probability 4575925325458733128
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v775 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1326 
=== Usages ===
=== Predecessor ===
v778 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1326  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1326 <|@
result v88|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i64
=== Inputs ===
object: a1943 
=== Succesors ===
next: j1331 
=== Usages ===
v1995 
=== Predecessor ===
v775 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a1943 #next: j1331  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1331 <|@
result v89|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i64
=== Inputs ===
object: a438 
=== Succesors ===
next: v1334 
=== Usages ===
v1996 
=== Predecessor ===
j1326 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a438 #next: v1334  <|@  <|@
f <@~|@floating>@ <|@
tid j1327 <|@
result v90|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i133 
=== Succesors ===
=== Usages ===
v1995 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i133  <|@  <|@
f <@~|@floating>@ <|@
tid v1995 <|@
result [v88|QWORD[*] + v90|QWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j1326 
index: j1327 
=== Succesors ===
=== Usages ===
v1334 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1326 index: j1327  <|@  <|@
f <@~|@floating>@ <|@
tid v1996 <|@
result [v89|QWORD[*] + v49|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j1331 
index: i357 
=== Succesors ===
=== Usages ===
v1334 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1331 index: i357  <|@  <|@
f <@~|@floating>@ <|@
tid j1333 <|@
result v91|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i140 
=== Succesors ===
=== Usages ===
v1334 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i140  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1334 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: charArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v1995 v1996 j1333 
=== Succesors ===
next: v799 
=== Usages ===
=== Predecessor ===
j1331 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v1995 v1996 j1333 #next: v799  <|@  <|@
f <@~|@floating>@ <|@
tid v1980 <|@
result [v7|QWORD[.] + v82|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a438 
index: i141 
=== Succesors ===
=== Usages ===
v799 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a438 index: i141  <|@  <|@
f <@~|@floating>@ <|@
tid i895 <|@
result short[69|0x45] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:951) [bci: 362]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
rawvalue: 69
stableDimension: 0
stamp: i16 [69] ⇊0000000000000045 ⇈0000000000000045
stampKind: i16
value: short[69|0x45]
=== Inputs ===
=== Succesors ===
=== Usages ===
v799 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v799 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:951) [bci: 362]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1032 
address: v1980 
value: i895 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v150 
=== Usages ===
=== Predecessor ===
v1334 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1032 address: v1980 value: i895 stateAfter: - lastLocationAccess: - #next: v150  <|@  <|@
f <@~|@floating>@ <|@
tid i142 <|@
result v92|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:951) [bci: 357]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i141 
y: i14 
=== Succesors ===
=== Usages ===
?145 v1984 i160 v861 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i141 y: i14  <|@  <|@
f <@*|@fixed>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:953) [bci: 367]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.9016620498614958
=== Inputs ===
condition: v29 
=== Succesors ===
trueSuccessor: v148 
falseSuccessor: v149 
=== Usages ===
=== Predecessor ===
v799 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v29 #trueSuccessor: v148 #falseSuccessor: v149  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v88|QWORD[*] = MOVE v83|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v89|QWORD[*] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v90|QWORD = MOVSXD v86|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v91|QWORD = MOVSXD v81|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v88|QWORD[*] + v90|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v89|QWORD[*] + v49|DWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v91|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v82|DWORD * 2 + 16] y: 69 size: WORD <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = INC v82|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9016620498614958 condition: < trueDestination: B96 -> B97 falseDestination: B96 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B98" "B99" 
    xhandlers
    flags 
    probability 4575254950392379555
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v148 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:954) [bci: 370]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1039 
=== Usages ===
=== Predecessor ===
v150 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1039  <|@  <|@
f <@~|@floating>@ <|@
tid v861 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:954) [bci: 377]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i142 
y: i1957 
=== Succesors ===
=== Usages ===
v1039 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i142 y: i1957  <|@  <|@
f <@*|@fixed>@ <|@
tid v1039 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:954) [bci: 377]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v861 
=== Succesors ===
trueSuccessor: v1036 
falseSuccessor: v1038 
=== Usages ===
=== Predecessor ===
v148 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v861 #trueSuccessor: v1036 #falseSuccessor: v1038  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v80|DWORD, y: v92|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B97 -> B98 falseDestination: B97 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B101" 
    xhandlers
    flags 
    probability 4575254950392379555
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1036 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:954) [bci: 377]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v868 
=== Usages ===
v868 
=== Predecessor ===
v1039 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v868  <|@  <|@
f <@~|@floating>@ <|@
tid v1984 <|@
result [v7|QWORD[.] + v92|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a438 
index: i142 
=== Succesors ===
=== Usages ===
v868 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a438 index: i142  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v868 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:954) [bci: 377]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1036 
address: v1984 
value: i881 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v157 
=== Usages ===
=== Predecessor ===
v1036 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1036 address: v1984 value: i881 stateAfter: - lastLocationAccess: - #next: v157  <|@  <|@
f <@~|@floating>@ <|@
tid i212 <|@
result v93|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:954) [bci: 372]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i141 
y: i128 
=== Succesors ===
=== Usages ===
i160 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i141 y: i128  <|@  <|@
f <@~|@floating>@ <|@
tid i154 <|@
result v95|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:955) [bci: 384]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i14 
y: i1949 
=== Succesors ===
=== Usages ===
i161 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i14 y: i1949  <|@  <|@
f <@*|@fixed>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 396]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v158 
=== Predecessor ===
v868 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v92|DWORD * 2 + 16] y: 45 size: WORD <|@ <|@
      nr   -1  <|@ instruction v93|DWORD = LEA [v82|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v95|DWORD = SUB (x: v94|DWORD, ~y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v93|DWORD, v95|DWORD] destination: B98 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1038 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:954) [bci: 377]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1037 
=== Usages ===
=== Predecessor ===
v1039 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1037  <|@  <|@
tid ?145 <|@
d <@d|@=== Debug Properties ===
bci: 363
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: false
localsSize: 5
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:951) [bci: 362]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 953
stackSize: 0
=== Inputs ===
outerFrameState: ?216 
values: a1 a438 i142 - - 
=== Succesors ===
=== Usages ===
v1037 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?216 values: a1 a438 i142 - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1037 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 862
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:954) [bci: 377]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
reason: BoundsCheckException
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?145 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1038 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?145  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -220699 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:953) [bci: 363]
locals: v0|QWORD[.] v7|QWORD[.] v92|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:363, 5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B101" 
    xhandlers
    flags 
    probability 4560647056204873574
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v149 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:957) [bci: 389]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v159 
=== Usages ===
=== Predecessor ===
v150 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v159  <|@  <|@
f <@~|@floating>@ <|@
tid i156 <|@
result v96|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:957) [bci: 394]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i1949 
y: i135 
=== Succesors ===
=== Usages ===
i161 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1949 y: i135  <|@  <|@
f <@*|@fixed>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 396]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v158 
=== Predecessor ===
v149 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = DEC v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v92|DWORD, v96|DWORD] destination: B100 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B98" "B100" 
    successors "B102" "B171" 
    xhandlers
    flags 
    probability 4575925325458733128
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i160 <|@
result v97|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 396]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v158 
values: i212 i142 
=== Succesors ===
=== Usages ===
?162 i168 i215 v831 v1981 i213 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v158 values: i212 i142  <|@  <|@
f <@~|@floating>@ <|@
tid i161 <|@
result v98|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 396]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v158 
values: i154 i156 
=== Succesors ===
=== Usages ===
?162 v164 i169 i324 v175 i325 i300 i297 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v158 values: i154 i156  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 396]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v157 v159 
=== Succesors ===
next: v1043 
=== Usages ===
i160 i161 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v157 v159 #next: v1043  <|@  <|@
f <@~|@floating>@ <|@
tid v831 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:966) [bci: 466]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i160 
y: i1957 
=== Succesors ===
=== Usages ===
v1043 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i160 y: i1957  <|@  <|@
f <@*|@fixed>@ <|@
tid v1043 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:966) [bci: 466]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v831 
=== Succesors ===
trueSuccessor: v1040 
falseSuccessor: v1042 
=== Usages ===
=== Predecessor ===
v158 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v831 #trueSuccessor: v1040 #falseSuccessor: v1042  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v97|DWORD, v98|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v80|DWORD, y: v97|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B101 -> B102 falseDestination: B101 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B103" "B104" 
    xhandlers
    flags 
    probability 4575925325458733128
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1040 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:966) [bci: 466]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v167 
=== Usages ===
v819 v809 v839 
=== Predecessor ===
v1043 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v167  <|@  <|@
f <@~|@floating>@ <|@
tid i168 <|@
result v99|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:961) [bci: 404]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i160 
y: i14 
=== Succesors ===
=== Usages ===
i219 v1982 v841 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i160 y: i14  <|@  <|@
f <@~|@floating>@ <|@
tid v1981 <|@
result [v7|QWORD[.] + v97|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a438 
index: i160 
=== Succesors ===
=== Usages ===
v839 v819 v809 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a438 index: i160  <|@  <|@
f <@~|@floating>@ <|@
tid i163 <|@
result int[10|0xa] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 399]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
rawvalue: 10
stableDimension: 0
stamp: i32 [10] ⇊000000000000000a ⇈000000000000000a
stampKind: i32
value: int[10|0xa]
=== Inputs ===
=== Succesors ===
=== Usages ===
v164 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 399]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i161 
y: i163 
=== Succesors ===
=== Usages ===
v167 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i161 y: i163  <|@  <|@
f <@~|@floating>@ <|@
tid i72 <|@
result int[48|0x30] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:930) [bci: 191]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
rawvalue: 48
stableDimension: 0
stamp: i32 [48] ⇊0000000000000030 ⇈0000000000000030
stampKind: i32
value: int[48|0x30]
=== Inputs ===
=== Succesors ===
=== Usages ===
i201 i197 i2039 i169 i2038 i186 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v167 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 399]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.9778393351800554
=== Inputs ===
condition: v164 
=== Succesors ===
trueSuccessor: v165 
falseSuccessor: v166 
=== Usages ===
=== Predecessor ===
v1040 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v164 #trueSuccessor: v165 #falseSuccessor: v166  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = INC v97|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v98|DWORD y: 10 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9778393351800554 condition: < trueDestination: B102 -> B103 falseDestination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B109" 
    xhandlers
    flags 
    probability 4575819581332911971
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:961) [bci: 402]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v809 
=== Usages ===
=== Predecessor ===
v167 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v809  <|@  <|@
f <@~|@floating>@ <|@
tid i169 <|@
result v100|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:961) [bci: 410]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i161 
y: i72 
=== Succesors ===
=== Usages ===
i170 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i161 y: i72  <|@  <|@
f <@~|@floating>@ <|@
tid i170 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:961) [bci: 411]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
resultBits: 16
stamp: i16
=== Inputs ===
value: i169 
=== Succesors ===
=== Usages ===
v809 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i169  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v809 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:961) [bci: 412]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1040 
address: v1981 
value: i170 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v221 
=== Usages ===
=== Predecessor ===
v165 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1040 address: v1981 value: i170 stateAfter: - lastLocationAccess: - #next: v221  <|@  <|@
f <@*|@fixed>@ <|@
tid v221 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v217 
=== Predecessor ===
v809 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v100|DWORD = LEA [v98|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + v97|DWORD * 2 + 16], y: v100|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v99|DWORD] destination: B103 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B105" "B170" 
    xhandlers
    flags 
    probability 4550899648069384485
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:962) [bci: 416]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1047 
=== Usages ===
=== Predecessor ===
v167 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1047  <|@  <|@
f <@~|@floating>@ <|@
tid v841 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:968) [bci: 485]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i168 
y: i1957 
=== Succesors ===
=== Usages ===
v1047 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i168 y: i1957  <|@  <|@
f <@*|@fixed>@ <|@
tid v1047 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:968) [bci: 485]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v841 
=== Succesors ===
trueSuccessor: v1044 
falseSuccessor: v1046 
=== Usages ===
=== Predecessor ===
v166 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v841 #trueSuccessor: v1044 #falseSuccessor: v1046  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v80|DWORD, y: v99|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B104 -> B105 falseDestination: B104 -> B170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B106" "B107" 
    xhandlers
    flags 
    probability 4550899648069384485
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1044 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:968) [bci: 485]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v178 
=== Usages ===
v849 v829 
=== Predecessor ===
v1047 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v178  <|@  <|@
f <@~|@floating>@ <|@
tid i213 <|@
result v101|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:964) [bci: 438]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i160 
y: i128 
=== Succesors ===
=== Usages ===
v851 i219 v1983 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i160 y: i128  <|@  <|@
f <@~|@floating>@ <|@
tid v1982 <|@
result [v7|QWORD[.] + v99|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a438 
index: i168 
=== Succesors ===
=== Usages ===
v849 v829 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a438 index: i168  <|@  <|@
f <@~|@floating>@ <|@
tid i174 <|@
result int[100|0x64] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:962) [bci: 419]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
rawvalue: 100
stableDimension: 0
stamp: i32 [100] ⇊0000000000000064 ⇈0000000000000064
stampKind: i32
value: int[100|0x64]
=== Inputs ===
=== Succesors ===
=== Usages ===
v175 i299 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v175 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:962) [bci: 419]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i161 
y: i174 
=== Succesors ===
=== Usages ===
v178 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i161 y: i174  <|@  <|@
f <@~|@floating>@ <|@
tid i306 <|@
result int[1717986919|0x66666667] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1717986919
stableDimension: 0
stamp: i32 [1717986919] ⇊0000000066666667 ⇈0000000066666667
stampKind: i32
value: int[1717986919|0x66666667]
=== Inputs ===
=== Succesors ===
=== Usages ===
i324 i326 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:962) [bci: 419]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.625
=== Inputs ===
condition: v175 
=== Succesors ===
trueSuccessor: v176 
falseSuccessor: v177 
=== Usages ===
=== Predecessor ===
v1044 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v175 #trueSuccessor: v176 #falseSuccessor: v177  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v101|DWORD = LEA [v97|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v98|DWORD y: 100 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.625 condition: < trueDestination: B105 -> B106 falseDestination: B105 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B109" 
    xhandlers
    flags 
    probability 4548087954455152494
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v176 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:963) [bci: 422]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v819 
=== Usages ===
=== Predecessor ===
v178 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v819  <|@  <|@
f <@~|@floating>@ <|@
tid i324 <|@
result v103|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.replacements.nodes.arithmetic.IntegerMulHighNode$$Lambda$181/245612612@2147bd06
stamp: i32
=== Inputs ===
x: i161 
y: i306 
=== Succesors ===
=== Usages ===
i308 
=== Predecessor ===
- >@ <|@
instruction <@*H|@org.graalvm.compiler.replacements.nodes.arithmetic.IntegerMulHighNode>@ x: i161 y: i306  <|@  <|@
f <@~|@floating>@ <|@
tid i308 <|@
result v104|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
stamp: i32 [-536870912 - 536870911]
=== Inputs ===
x: i324 
y: i128 
=== Succesors ===
=== Usages ===
i294 i2038 i295 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i324 y: i128  <|@  <|@
f <@~|@floating>@ <|@
tid i2038 <|@
result v105|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:963) [bci: 433]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32 [-536870864 - 536870959]
=== Inputs ===
x: i308 
y: i72 
=== Succesors ===
=== Usages ===
i181 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i308 y: i72  <|@  <|@
f <@~|@floating>@ <|@
tid i181 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:963) [bci: 434]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
resultBits: 16
stamp: i16
=== Inputs ===
value: i2038 
=== Succesors ===
=== Usages ===
v819 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i2038  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v819 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:963) [bci: 435]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1040 
address: v1981 
value: i181 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v829 
=== Usages ===
=== Predecessor ===
v176 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1040 address: v1981 value: i181 stateAfter: - lastLocationAccess: - #next: v829  <|@  <|@
f <@~|@floating>@ <|@
tid i294 <|@
result v106|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i308 
y: i214 
=== Succesors ===
=== Usages ===
i296 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i308 y: i214  <|@  <|@
f <@~|@floating>@ <|@
tid i295 <|@
result v107|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i308 
y: i14 
=== Succesors ===
=== Usages ===
i296 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i308 y: i14  <|@  <|@
f <@~|@floating>@ <|@
tid i296 <|@
result v108|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i294 
y: i295 
=== Succesors ===
=== Usages ===
i297 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i294 y: i295  <|@  <|@
f <@~|@floating>@ <|@
tid i297 <|@
result v109|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i32
=== Inputs ===
x: i161 
y: i296 
=== Succesors ===
=== Usages ===
i186 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i161 y: i296  <|@  <|@
f <@~|@floating>@ <|@
tid i186 <|@
result v110|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:964) [bci: 447]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i297 
y: i72 
=== Succesors ===
=== Usages ===
i828 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i297 y: i72  <|@  <|@
f <@~|@floating>@ <|@
tid i828 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:964) [bci: 449]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
resultBits: 16
stamp: i16
=== Inputs ===
value: i186 
=== Succesors ===
=== Usages ===
v829 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i186  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v829 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:964) [bci: 449]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1044 
address: v1982 
value: i828 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v222 
=== Usages ===
=== Predecessor ===
v819 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1044 address: v1982 value: i828 stateAfter: - lastLocationAccess: - #next: v222  <|@  <|@
f <@*|@fixed>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v217 
=== Predecessor ===
v829 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v98|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v102|DWORD = MOVE input: int[1717986919|0x66666667] <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: v102|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v103|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v104|DWORD = SAR v103|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = LEA [v104|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + v97|DWORD * 2 + 16], y: v105|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = SHL v104|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v107|DWORD = SHL v104|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v108|DWORD = ADD (x: v106|DWORD, y: v107|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v109|DWORD = SUB (x: v98|DWORD, ~y: v108|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v110|DWORD = LEA [v109|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + v99|DWORD * 2 + 16], y: v110|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v101|DWORD] destination: B106 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" "B169" 
    xhandlers
    flags 
    probability 4544704142428875484
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v177 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:966) [bci: 453]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1051 
=== Usages ===
=== Predecessor ===
v178 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1051  <|@  <|@
f <@~|@floating>@ <|@
tid v851 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:969) [bci: 499]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i213 
y: i1957 
=== Succesors ===
=== Usages ===
v1051 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i213 y: i1957  <|@  <|@
f <@*|@fixed>@ <|@
tid v1051 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:969) [bci: 499]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v851 
=== Succesors ===
trueSuccessor: v1048 
falseSuccessor: v1050 
=== Usages ===
=== Predecessor ===
v177 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v851 #trueSuccessor: v1048 #falseSuccessor: v1050  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v80|DWORD, y: v101|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B107 -> B108 falseDestination: B107 -> B169 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B109" 
    xhandlers
    flags 
    probability 4544704142428875484
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1048 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:969) [bci: 499]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v839 
=== Usages ===
v859 
=== Predecessor ===
v1051 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v839  <|@  <|@
f <@~|@floating>@ <|@
tid i312 <|@
result int[1374389535|0x51eb851f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1374389535
stableDimension: 0
stamp: i32 [1374389535] ⇊0000000051eb851f ⇈0000000051eb851f
stampKind: i32
value: int[1374389535|0x51eb851f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i325 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i325 <|@
result v112|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.replacements.nodes.arithmetic.IntegerMulHighNode$$Lambda$181/245612612@2147bd06
stamp: i32
=== Inputs ===
x: i161 
y: i312 
=== Succesors ===
=== Usages ===
i315 
=== Predecessor ===
- >@ <|@
instruction <@*H|@org.graalvm.compiler.replacements.nodes.arithmetic.IntegerMulHighNode>@ x: i161 y: i312  <|@  <|@
f <@~|@floating>@ <|@
tid i314 <|@
result int[5|0x5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 5
stableDimension: 0
stamp: i32 [5] ⇊0000000000000005 ⇈0000000000000005
stampKind: i32
value: int[5|0x5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i315 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i315 <|@
result v113|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
stamp: i32 [-67108864 - 67108863]
=== Inputs ===
x: i325 
y: i314 
=== Succesors ===
=== Usages ===
i299 i2039 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i325 y: i314  <|@  <|@
f <@~|@floating>@ <|@
tid i2039 <|@
result v114|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:966) [bci: 464]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32 [-67108816 - 67108911]
=== Inputs ===
x: i315 
y: i72 
=== Succesors ===
=== Usages ===
i191 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i315 y: i72  <|@  <|@
f <@~|@floating>@ <|@
tid i191 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:966) [bci: 465]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
resultBits: 16
stamp: i16
=== Inputs ===
value: i2039 
=== Succesors ===
=== Usages ===
v839 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i2039  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v839 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:966) [bci: 466]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1040 
address: v1981 
value: i191 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v849 
=== Usages ===
=== Predecessor ===
v1048 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1040 address: v1981 value: i191 stateAfter: - lastLocationAccess: - #next: v849  <|@  <|@
f <@~|@floating>@ <|@
tid i299 <|@
result v115|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$125/271184744@39a592fe
stamp: i32
=== Inputs ===
x: i315 
y: i174 
=== Succesors ===
=== Usages ===
i300 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: i315 y: i174  <|@  <|@
f <@~|@floating>@ <|@
tid i300 <|@
result v116|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i32
=== Inputs ===
x: i161 
y: i299 
=== Succesors ===
=== Usages ===
i319 i326 i305 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i161 y: i299  <|@  <|@
f <@~|@floating>@ <|@
tid i326 <|@
result v118|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.replacements.nodes.arithmetic.IntegerMulHighNode$$Lambda$181/245612612@2147bd06
stamp: i32
=== Inputs ===
x: i300 
y: i306 
=== Succesors ===
=== Usages ===
i318 
=== Predecessor ===
- >@ <|@
instruction <@*H|@org.graalvm.compiler.replacements.nodes.arithmetic.IntegerMulHighNode>@ x: i300 y: i306  <|@  <|@
f <@~|@floating>@ <|@
tid i318 <|@
result v119|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
stamp: i32 [-536870912 - 536870911]
=== Inputs ===
x: i326 
y: i128 
=== Succesors ===
=== Usages ===
i320 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i326 y: i128  <|@  <|@
f <@~|@floating>@ <|@
tid i309 <|@
result int[31|0x1f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 31
stableDimension: 0
stamp: i32 [31] ⇊000000000000001f ⇈000000000000001f
stampKind: i32
value: int[31|0x1f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i319 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i319 <|@
result v120|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
x: i300 
y: i309 
=== Succesors ===
=== Usages ===
i320 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i300 y: i309  <|@  <|@
f <@~|@floating>@ <|@
tid i320 <|@
result v121|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i32 [-536870912 - 536870912]
=== Inputs ===
x: i318 
y: i319 
=== Succesors ===
=== Usages ===
i197 i302 i303 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i318 y: i319  <|@  <|@
f <@~|@floating>@ <|@
tid i197 <|@
result v122|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:968) [bci: 483]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32 [-536870864 - 536870960]
=== Inputs ===
x: i320 
y: i72 
=== Succesors ===
=== Usages ===
i848 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i320 y: i72  <|@  <|@
f <@~|@floating>@ <|@
tid i848 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:968) [bci: 485]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
resultBits: 16
stamp: i16
=== Inputs ===
value: i197 
=== Succesors ===
=== Usages ===
v849 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i197  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v849 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:968) [bci: 485]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1044 
address: v1982 
value: i848 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v859 
=== Usages ===
=== Predecessor ===
v839 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1044 address: v1982 value: i848 stateAfter: - lastLocationAccess: - #next: v859  <|@  <|@
f <@~|@floating>@ <|@
tid v1983 <|@
result [v7|QWORD[.] + v101|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a438 
index: i213 
=== Succesors ===
=== Usages ===
v859 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a438 index: i213  <|@  <|@
f <@~|@floating>@ <|@
tid i302 <|@
result v123|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i320 
y: i214 
=== Succesors ===
=== Usages ===
i304 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i320 y: i214  <|@  <|@
f <@~|@floating>@ <|@
tid i303 <|@
result v124|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i320 
y: i14 
=== Succesors ===
=== Usages ===
i304 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i320 y: i14  <|@  <|@
f <@~|@floating>@ <|@
tid i304 <|@
result v125|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i302 
y: i303 
=== Succesors ===
=== Usages ===
i305 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i302 y: i303  <|@  <|@
f <@~|@floating>@ <|@
tid i305 <|@
result v126|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i32
=== Inputs ===
x: i300 
y: i304 
=== Succesors ===
=== Usages ===
i201 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i300 y: i304  <|@  <|@
f <@~|@floating>@ <|@
tid i201 <|@
result v127|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:969) [bci: 497]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i305 
y: i72 
=== Succesors ===
=== Usages ===
i858 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i305 y: i72  <|@  <|@
f <@~|@floating>@ <|@
tid i858 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:969) [bci: 499]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
resultBits: 16
stamp: i16
=== Inputs ===
value: i201 
=== Succesors ===
=== Usages ===
v859 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i201  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v859 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:969) [bci: 499]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1048 
address: v1983 
value: i858 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v223 
=== Usages ===
=== Predecessor ===
v849 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1048 address: v1983 value: i858 stateAfter: - lastLocationAccess: - #next: v223  <|@  <|@
f <@~|@floating>@ <|@
tid i215 <|@
result v128|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:969) [bci: 488]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i160 
y: i214 
=== Succesors ===
=== Usages ===
i219 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i160 y: i214  <|@  <|@
f <@*|@fixed>@ <|@
tid v223 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v217 
=== Predecessor ===
v859 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v98|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v111|DWORD = MOVE input: int[1374389535|0x51eb851f] <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: v111|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v113|DWORD = SAR v112|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v114|DWORD = LEA [v113|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + v97|DWORD * 2 + 16], y: v114|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v115|DWORD = IMUL v113|DWORD y: 100 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v116|DWORD = SUB (x: v98|DWORD, ~y: v115|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v116|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v117|DWORD = MOVE input: int[1717986919|0x66666667] <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: v117|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v118|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v119|DWORD = SAR v118|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v120|DWORD = SHR v116|DWORD y: 31 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v121|DWORD = ADD (x: v119|DWORD, y: v120|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v122|DWORD = LEA [v121|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + v99|DWORD * 2 + 16], y: v122|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = SHL v121|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v124|DWORD = SHL v121|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v125|DWORD = ADD (x: v123|DWORD, y: v124|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v126|DWORD = SUB (x: v116|DWORD, ~y: v125|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v127|DWORD = LEA [v126|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + v101|DWORD * 2 + 16], y: v127|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v128|DWORD = LEA [v97|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v128|DWORD] destination: B108 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B27" "B80" "B103" "B106" "B108" "B39" 
    successors "B110" "B116" 
    xhandlers
    flags 
    probability 4606817271057726943
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i219 <|@
result v129|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v217 
values: i71 i118 i168 i213 i215 i204 
=== Succesors ===
=== Usages ===
?6 j1567 v225 v229 i238 a1413 v1131 i1153 v1436 i1389 v1398 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v217 values: i71 i118 i168 i213 i215 i204  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v218 v220 v221 v222 v223 v224 
=== Succesors ===
next: v2041 
=== Usages ===
i219 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v218 v220 v221 v222 v223 v224 #next: v2041  <|@  <|@
tid ?6 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString()>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 301
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 - i219 
=== Succesors ===
=== Usages ===
v1194 a1413 a1459 a1350 v2041 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - i219  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2041 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?6 
object: a1948 
=== Succesors ===
next: v228 
=== Usages ===
=== Predecessor ===
v217 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?6 object: a1948 #next: v228  <|@  <|@
f <@~|@floating>@ <|@
tid v225 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.<init>(String.java:194) [bci: 18]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i219 
y: i14 
=== Succesors ===
=== Usages ===
v228 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i219 y: i14  <|@  <|@
f <@~|@floating>@ <|@
tid v1493 <|@
result meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1380 v1483 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1369 <|@
result v130|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/lang/String;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j1475 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1475 <|@
result v130|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v1369 
=== Succesors ===
=== Usages ===
v2012 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v1369  <|@  <|@
f <@~|@floating>@ <|@
tid v2012 <|@
result [v130|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j1475 
index: - 
=== Succesors ===
=== Usages ===
j1479 j1375 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1475 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1336 <|@
result v131|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a1350 a1459 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j439 <|@
result long[24|0x18] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:908) [bci: 30]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1497 j1490 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:194) [bci: 18]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
trueSuccessorProbability: 0.09284041465770032
=== Inputs ===
condition: v225 
=== Succesors ===
trueSuccessor: v226 
falseSuccessor: v227 
=== Usages ===
=== Predecessor ===
v2041 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v225 #trueSuccessor: v226 #falseSuccessor: v227  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v129|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8]
stack: v129|DWORD 
locals: v0|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v4|DWORD[.] * 8] state [bci:8] <|@ <|@
      nr   -1  <|@ instruction v130|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v131|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP v129|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09284041465770032 condition: < trueDestination: B109 -> B110 falseDestination: B109 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B111" "B112" 
    xhandlers
    flags 
    probability 4591083073830437833
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 21]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1059 
=== Usages ===
=== Predecessor ===
v228 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1059  <|@  <|@
f <@~|@floating>@ <|@
tid v229 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 22]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i219 
y: i9 
=== Succesors ===
=== Usages ===
v1059 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i219 y: i9  <|@  <|@
f <@*|@fixed>@ <|@
tid v1059 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 22]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v229 
=== Succesors ===
trueSuccessor: v1058 
falseSuccessor: v1056 
=== Usages ===
=== Predecessor ===
v226 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v229 #trueSuccessor: v1058 #falseSuccessor: v1056  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v129|DWORD, y: v129|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B110 -> B111 falseDestination: B110 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1058 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 22]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1195 
=== Usages ===
=== Predecessor ===
v1059 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1195  <|@  <|@
f <@~|@floating>@ <|@
tid i1196 <|@
result int[-222483|0xfffffffffffc9aed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -222483
stableDimension: 0
stamp: i32 [-222483] ⇊00000000fffc9aed ⇈00000000fffc9aed
stampKind: i32
value: int[-222483|0xfffffffffffc9aed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1192 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1195 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1189 
=== Predecessor ===
v1058 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-222483|0xfffffffffffc9aed]] destination: B111 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B113" "B114" 
    xhandlers
    flags 
    probability 4591083073830437833
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1056 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 22]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1338 
=== Usages ===
=== Predecessor ===
v1059 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1338  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1338 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1357 
=== Usages ===
v1997 v1998 
=== Predecessor ===
v1056 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1357  <|@  <|@
f <@~|@floating>@ <|@
tid v1997 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1338 
index: - 
=== Succesors ===
=== Usages ===
j1357 v1359 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1338 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1357 <|@
result v132|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1997 
=== Succesors ===
next: j1358 
=== Usages ===
j1490 j1363 v2015 
=== Predecessor ===
j1338 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1997 #next: j1358  <|@  <|@
f <@~|@floating>@ <|@
tid v1998 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1338 
index: - 
=== Succesors ===
=== Usages ===
j1358 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1338 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1358 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1998 
=== Succesors ===
next: v1346 
=== Usages ===
v1343 
=== Predecessor ===
j1357 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1998 #next: v1346  <|@  <|@
f <@~|@floating>@ <|@
tid j1490 <|@
result v133|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1357 
y: j439 
=== Succesors ===
=== Usages ===
v1343 v1359 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1357 y: j439  <|@  <|@
f <@~|@floating>@ <|@
tid v1343 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1358 
y: j1490 
=== Succesors ===
=== Usages ===
v1346 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1358 y: j1490  <|@  <|@
f <@*|@fixed>@ <|@
tid v1346 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1343 
=== Succesors ===
trueSuccessor: v1344 
falseSuccessor: v1345 
=== Usages ===
=== Predecessor ===
j1358 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1343 #trueSuccessor: v1344 #falseSuccessor: v1345  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v132|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v133|QWORD = LEA [v132|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v133|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B112 -> B113 falseDestination: B112 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B115" 
    xhandlers
    flags 
    probability 4561355099325680782
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1344 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a1350 
=== Usages ===
=== Predecessor ===
v1346 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1350  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1350 <|@
result v134|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?6 
arguments: v1336 i128 i14 
=== Succesors ===
next: j1351 
=== Usages ===
j1351 
=== Predecessor ===
v1344 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?6 arguments: v1336 i128 i14 #next: j1351  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1351 <|@
result v134|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1350 
=== Succesors ===
next: v1364 
=== Usages ===
j1363 
=== Predecessor ===
a1350 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1350 #next: v1364  <|@  <|@
f <@*|@fixed>@ <|@
tid v1364 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1361 
=== Predecessor ===
j1351 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v131|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8]
stack: v129|DWORD 
locals: v0|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:8] <|@ <|@
      nr   -1  <|@ instruction v134|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v134|QWORD[.]] destination: B113 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B115" 
    xhandlers
    flags 
    probability 4591018887298765104
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1345 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1359 
=== Usages ===
=== Predecessor ===
v1346 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1359  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1359 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1997 
value: j1490 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1355 
=== Usages ===
=== Predecessor ===
v1345 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1997 value: j1490 stateAfter: - lastLocationAccess: - #next: v1355  <|@  <|@
f <@~|@floating>@ <|@
tid v2015 <|@
result [v132|QWORD + 216] <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j1357 
index: - 
=== Succesors ===
=== Usages ===
v1355 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1357 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1355 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v2015 
=== Succesors ===
next: v1362 
=== Usages ===
=== Predecessor ===
v1359 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2015 #next: v1362  <|@  <|@
f <@*|@fixed>@ <|@
tid v1362 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1361 
=== Predecessor ===
v1355 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v133|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v132|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v132|QWORD] destination: B114 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" "B113" 
    successors 
    xhandlers
    flags 
    probability 4591083073830437833
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1363 <|@
result v135|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1361 
values: j1357 j1351 
=== Succesors ===
=== Usages ===
v2000 v1999 a1067 v2016 v2017 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1361 values: j1357 j1351  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1361 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1362 v1364 
=== Succesors ===
next: a1067 
=== Usages ===
j1363 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1362 v1364 #next: a1067  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1067 <|@
result v136|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j1363 
=== Succesors ===
next: j1375 
=== Usages ===
a1073 
=== Predecessor ===
v1361 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1363 #next: j1375  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1375 <|@
result v137|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2012 
=== Succesors ===
next: v1376 
=== Usages ===
v1376 
=== Predecessor ===
a1067 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2012 #next: v1376  <|@  <|@
f <@~|@floating>@ <|@
tid v1999 <|@
result [v135|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1363 
index: - 
=== Succesors ===
=== Usages ===
v1376 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1363 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1376 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1999 
value: j1375 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1380 
=== Usages ===
=== Predecessor ===
j1375 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1999 value: j1375 stateAfter: - lastLocationAccess: - #next: v1380  <|@  <|@
f <@~|@floating>@ <|@
tid v2000 <|@
result [v135|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1363 
index: - 
=== Succesors ===
=== Usages ===
v1380 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1363 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1380 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2000 
value: v1493 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1384 
=== Usages ===
=== Predecessor ===
v1376 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2000 value: v1493 stateAfter: - lastLocationAccess: - #next: v1384  <|@  <|@
f <@~|@floating>@ <|@
tid v2016 <|@
result [v135|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1363 
index: - 
=== Succesors ===
=== Usages ===
v1384 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1363 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a1085 <|@
result NarrowOop[char[0]{}] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: char[0]{}
stableDimension: 1
stamp: n!# [C
stampKind: n -
value: NarrowOop[char[0]{}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1384 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1384 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2016 
value: a1085 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1386 
=== Usages ===
=== Predecessor ===
v1380 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2016 value: a1085 stateAfter: - lastLocationAccess: - #next: v1386  <|@  <|@
f <@~|@floating>@ <|@
tid v2017 <|@
result [v135|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j1363 
index: - 
=== Succesors ===
=== Usages ===
v1386 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1363 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1386 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2017 
value: i9 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1073 
=== Usages ===
=== Predecessor ===
v1384 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2017 value: i9 stateAfter: - lastLocationAccess: - #next: a1073  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1073 <|@
result v136|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1067 
=== Succesors ===
next: v1074 
=== Usages ===
v261 
=== Predecessor ===
v1386 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1067 #next: v1074  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1074 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v261 
=== Usages ===
=== Predecessor ===
a1073 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v261  <|@  <|@
f <@*|@fixed>@ <|@
tid v261 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a1073 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1074 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a1073 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v135|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v136|QWORD[.] = MOVE v135|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v137|QWORD = MOV [v130|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v135|QWORD[*]], y: v137|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v135|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v135|QWORD[*] + 12] y: -559030611 size: DWORD c: NarrowOop[char[0]{}] <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v135|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v136|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B117" "B119" 
    xhandlers
    flags 
    probability 4606014939411817830
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v227 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 50]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1959 
=== Usages ===
=== Predecessor ===
v228 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1959  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1959 <|@
result v138|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 52]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1968 
=== Succesors ===
next: v1063 
=== Usages ===
i238 i1153 v1131 
=== Predecessor ===
v227 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1968 #next: v1063  <|@  <|@
f <@~|@floating>@ <|@
tid i238 <|@
result v139|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 54]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: i32
=== Inputs ===
x: i1959 
y: i219 
=== Succesors ===
=== Usages ===
v239 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i1959 y: i219  <|@  <|@
f <@~|@floating>@ <|@
tid v239 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 55]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i238 
y: i9 
=== Succesors ===
=== Usages ===
v1063 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i238 y: i9  <|@  <|@
f <@*|@fixed>@ <|@
tid v1063 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 55]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v239 
=== Succesors ===
trueSuccessor: v1062 
falseSuccessor: v1060 
=== Usages ===
=== Predecessor ===
i1959 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v239 #trueSuccessor: v1062 #falseSuccessor: v1060  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOV [v4|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v139|DWORD = SUB (x: v138|DWORD, ~y: v129|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v139|DWORD, y: v139|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B116 -> B117 falseDestination: B116 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1062 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 55]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1197 
=== Usages ===
=== Predecessor ===
v1063 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1197  <|@  <|@
f <@~|@floating>@ <|@
tid i1198 <|@
result int[-224787|0xfffffffffffc91ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -224787
stableDimension: 0
stamp: i32 [-224787] ⇊00000000fffc91ed ⇈00000000fffc91ed
stampKind: i32
value: int[-224787|0xfffffffffffc91ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1192 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1197 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1189 
=== Predecessor ===
v1062 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-224787|0xfffffffffffc91ed]] destination: B117 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B111" "B117" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1192 <|@
result v140|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-236299 - -222483] ⇊00000000fffc00e5 ⇈00000000fffcfffd
valueDescription: i32
=== Inputs ===
merge: v1189 
values: i1196 i1198 
=== Succesors ===
=== Usages ===
v1194 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1189 values: i1196 i1198  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1189 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1195 v1197 
=== Succesors ===
next: v1194 
=== Usages ===
i1192 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1195 v1197 #next: v1194  <|@  <|@
f <@*|@fixed>@ <|@
tid v1194 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?6 
actionAndReason: i1192 
speculation: a1183 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1189 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?6 actionAndReason: i1192 speculation: a1183  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v140|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v140|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8]
stack: v129|DWORD 
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:8] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" "B123" 
    xhandlers
    flags 
    probability 4606014939411817830
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1060 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 55]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1392 
=== Usages ===
=== Predecessor ===
v1063 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1392  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1392 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1433 
=== Usages ===
v2001 v2002 
=== Predecessor ===
v1060 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1433  <|@  <|@
f <@~|@floating>@ <|@
tid v2001 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1392 
index: - 
=== Succesors ===
=== Usages ===
j1433 v1435 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1392 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1433 <|@
result v141|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2001 
=== Succesors ===
next: j1434 
=== Usages ===
j1396 v2003 v2004 a1412 v2009 v2005 v2006 v2007 v2008 
=== Predecessor ===
j1392 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2001 #next: j1434  <|@  <|@
f <@~|@floating>@ <|@
tid v2002 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1392 
index: - 
=== Succesors ===
=== Usages ===
j1434 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1392 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1434 <|@
result v142|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2002 
=== Succesors ===
next: v1401 
=== Usages ===
v1402 
=== Predecessor ===
j1433 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2002 #next: v1401  <|@  <|@
f <@~|@floating>@ <|@
tid i1397 <|@
result int[16777215|0xffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1398 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1398 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i219 
y: i1397 
=== Succesors ===
=== Usages ===
v1401 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i219 y: i1397  <|@  <|@
f <@*|@fixed>@ <|@
tid v1401 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v1398 
=== Succesors ===
trueSuccessor: v1400 
falseSuccessor: v1399 
=== Usages ===
=== Predecessor ===
j1434 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1398 #trueSuccessor: v1400 #falseSuccessor: v1399  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v141|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v142|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v129|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B119 -> B120 falseDestination: B119 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B121" "B122" 
    xhandlers
    flags 
    probability 4605230967425163689
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1400 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1408 
=== Usages ===
=== Predecessor ===
v1401 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1408  <|@  <|@
f <@~|@floating>@ <|@
tid i1389 <|@
result v143|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i219 
y: i14 
=== Succesors ===
=== Usages ===
i1421 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i219 y: i14  <|@  <|@
f <@~|@floating>@ <|@
tid i1420 <|@
result int[23|0x17] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1421 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1421 <|@
result v144|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i1389 
y: i1420 
=== Succesors ===
=== Usages ===
i1391 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1389 y: i1420  <|@  <|@
f <@~|@floating>@ <|@
tid i1390 <|@
result int[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1391 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1391 <|@
result v145|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i1421 
y: i1390 
=== Succesors ===
=== Usages ===
j1395 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i1421 y: i1390  <|@  <|@
f <@~|@floating>@ <|@
tid j1395 <|@
result v146|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i1391 
=== Succesors ===
=== Usages ===
j1396 v2005 v2006 v2007 v2008 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1391  <|@  <|@
f <@~|@floating>@ <|@
tid j1396 <|@
result v147|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: i64
=== Inputs ===
x: j1395 
y: j1433 
=== Succesors ===
=== Usages ===
v1402 v1435 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1395 y: j1433  <|@  <|@
f <@~|@floating>@ <|@
tid v1402 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1434 
y: j1396 
=== Succesors ===
=== Usages ===
v1408 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1434 y: j1396  <|@  <|@
f <@*|@fixed>@ <|@
tid v1408 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1402 
=== Succesors ===
trueSuccessor: v1407 
falseSuccessor: v1406 
=== Usages ===
=== Predecessor ===
v1400 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1402 #trueSuccessor: v1407 #falseSuccessor: v1406  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v143|DWORD = SHL v129|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v144|DWORD = LEA [v143|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v145|DWORD = AND v144|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v146|QWORD = MOVSXD v145|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v147|QWORD = ADD (x: v146|QWORD, y: v141|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v147|QWORD, y: v142|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B120 -> B121 falseDestination: B120 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B124" 
    xhandlers
    flags 
    probability 4575669300424181299
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1407 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1405 
=== Usages ===
=== Predecessor ===
v1408 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1405  <|@  <|@
f <@*|@fixed>@ <|@
tid v1405 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1404 
=== Predecessor ===
v1407 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B121 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B125" 
    xhandlers
    flags 
    probability 4605160409946364816
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1406 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1435 
=== Usages ===
=== Predecessor ===
v1408 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1435  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1435 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2001 
value: j1396 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1423 
=== Usages ===
=== Predecessor ===
v1406 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2001 value: j1396 stateAfter: - lastLocationAccess: - #next: v1423  <|@  <|@
f <@~|@floating>@ <|@
tid v2005 <|@
result [v146|QWORD + v141|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j1395 
index: j1433 
=== Succesors ===
=== Usages ===
v1423 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1395 index: j1433  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1423 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
=== Inputs ===
address: v2005 
=== Succesors ===
next: v1425 
=== Usages ===
=== Predecessor ===
v1435 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2005 #next: v1425  <|@  <|@
f <@~|@floating>@ <|@
tid v2006 <|@
result [v146|QWORD + v141|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j1395 
index: j1433 
=== Succesors ===
=== Usages ===
v1425 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1395 index: j1433  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1425 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
=== Inputs ===
address: v2006 
=== Succesors ===
next: v1428 
=== Usages ===
=== Predecessor ===
v1423 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2006 #next: v1428  <|@  <|@
f <@~|@floating>@ <|@
tid v2007 <|@
result [v146|QWORD + v141|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j1395 
index: j1433 
=== Succesors ===
=== Usages ===
v1428 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1395 index: j1433  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1428 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
=== Inputs ===
address: v2007 
=== Succesors ===
next: v1431 
=== Usages ===
=== Predecessor ===
v1425 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2007 #next: v1431  <|@  <|@
f <@~|@floating>@ <|@
tid v2008 <|@
result [v146|QWORD + v141|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j1395 
index: j1433 
=== Succesors ===
=== Usages ===
v1431 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1395 index: j1433  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1431 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
=== Inputs ===
address: v2008 
=== Succesors ===
next: v1436 
=== Usages ===
=== Predecessor ===
v1428 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2008 #next: v1436  <|@  <|@
f <@~|@floating>@ <|@
tid v2003 <|@
result [v141|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1433 
index: - 
=== Succesors ===
=== Usages ===
v1436 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1433 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1436 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2003 
value: i219 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1437 
=== Usages ===
=== Predecessor ===
v1431 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2003 value: i219 stateAfter: - lastLocationAccess: - #next: v1437  <|@  <|@
f <@~|@floating>@ <|@
tid v2004 <|@
result [v141|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1433 
index: - 
=== Succesors ===
=== Usages ===
v1437 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1433 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1437 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2004 
value: j1388 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1440 
=== Usages ===
=== Predecessor ===
v1436 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2004 value: j1388 stateAfter: - lastLocationAccess: - #next: v1440  <|@  <|@
f <@~|@floating>@ <|@
tid v2009 <|@
result [v141|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1433 
index: - 
=== Succesors ===
=== Usages ===
v1440 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1433 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1496 <|@
result meta{HotSpotType<[C, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
rawvalue: meta{HotSpotType<[C, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[C, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1440 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1440 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2009 
value: v1496 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1411 
=== Usages ===
=== Predecessor ===
v1437 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2009 value: v1496 stateAfter: - lastLocationAccess: - #next: v1411  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1411 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1412 
=== Usages ===
=== Predecessor ===
v1440 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a1412  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1412 <|@
result v148|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j1433 
=== Succesors ===
next: v1414 
=== Usages ===
a1417 
=== Predecessor ===
v1411 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1433 #next: v1414  <|@  <|@
f <@*|@fixed>@ <|@
tid v1414 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1415 
=== Predecessor ===
a1412 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v147|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v146|QWORD + v141|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v146|QWORD + v141|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v146|QWORD + v141|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v146|QWORD + v141|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v141|QWORD + 12], y: v129|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v141|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v141|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v148|QWORD[.] = MOVE v141|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v148|QWORD[.]] destination: B122 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B124" 
    xhandlers
    flags 
    probability 4590936196556398058
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1399 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1403 
=== Usages ===
=== Predecessor ===
v1401 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1403  <|@  <|@
f <@*|@fixed>@ <|@
tid v1403 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1404 
=== Predecessor ===
v1399 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B123 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B123" "B121" 
    successors "B125" 
    xhandlers
    flags 
    probability 4591500656386789040
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1404 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1403 v1405 
=== Succesors ===
next: a1413 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1403 v1405 #next: a1413  <|@  <|@
f <@~|@floating>@ <|@
tid v1387 <|@
result v149|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
rawvalue: meta{HotSpotType<[C, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[C, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a1413 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1413 <|@
result v150|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?6 
arguments: v1387 i219 i9 
=== Succesors ===
next: v1416 
=== Usages ===
a1417 
=== Predecessor ===
v1404 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?6 arguments: v1387 i219 i9 #next: v1416  <|@  <|@
f <@*|@fixed>@ <|@
tid v1416 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1415 
=== Predecessor ===
a1413 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v149|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v149|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v129|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8]
stack: v129|DWORD 
locals: v0|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:8] <|@ <|@
      nr   -1  <|@ instruction v150|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v150|QWORD[.]] destination: B124 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B122" "B124" 
    successors "B126" "B127" 
    xhandlers
    flags 
    probability 4606014939411817830
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a1417 <|@
result v151|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v1415 
values: a1412 a1413 
=== Succesors ===
=== Usages ===
v2021 a1165 v1986 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1415 values: a1412 a1413  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1415 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1414 v1416 
=== Succesors ===
next: v1759 
=== Usages ===
a1417 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1414 v1416 #next: v1759  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1759 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v1580 
=== Usages ===
j1760 j1762 
=== Predecessor ===
v1415 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v1580  <|@  <|@
f <@~|@floating>@ <|@
tid v1131 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:102) [bci: 9]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1959 
y: i219 
=== Succesors ===
=== Usages ===
i1153 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1959 y: i219  <|@  <|@
f <@~|@floating>@ <|@
tid i1153 <|@
result v152|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v1131 
trueValue: i1959 
falseValue: i219 
=== Succesors ===
=== Usages ===
j1568 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v1131 trueValue: i1959 falseValue: i219  <|@  <|@
f <@~|@floating>@ <|@
tid j1568 <|@
result v153|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1153 
=== Succesors ===
=== Usages ===
j1817 v2021 j1572 v1577 v1702 j1803 j1808 j1811 j1814 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1153  <|@  <|@
f <@~|@floating>@ <|@
tid v1577 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1568 
y: j1388 
=== Succesors ===
=== Usages ===
v1580 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1568 y: j1388  <|@  <|@
f <@~|@floating>@ <|@
tid j1748 <|@
result long[-4|0xfffffffffffffffc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1862 j1811 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1378 <|@
result long[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1794 j1847 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1744 <|@
result long[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1859 j1808 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1738 <|@
result long[-16|0xfffffffffffffff0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16
stableDimension: 0
stamp: i64 [-16] ⇊fffffffffffffff0 ⇈fffffffffffffff0
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1854 j1803 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1580 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1577 
=== Succesors ===
trueSuccessor: v1578 
falseSuccessor: v1579 
=== Usages ===
=== Predecessor ===
v1759 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1577 #trueSuccessor: v1578 #falseSuccessor: v1579  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v151|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v129|DWORD, y: v138|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v152|DWORD = CMOVE (falseValue: v129|DWORD, ~trueValue: v138|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v153|QWORD = MOVSXD v152|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v153|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B125 -> B126 falseDestination: B125 -> B127 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B144" 
    xhandlers
    flags 
    probability 4601511339784447334
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1578 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1596 
=== Usages ===
=== Predecessor ===
v1580 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1596  <|@  <|@
f <@*|@fixed>@ <|@
tid v1596 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1597 
=== Predecessor ===
v1578 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B126 -> B144 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B128" "B129" 
    xhandlers
    flags 
    probability 4601511339784447334
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1579 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1583 
=== Usages ===
=== Predecessor ===
v1580 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1583  <|@  <|@
f <@~|@floating>@ <|@
tid v1986 <|@
result [v151|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1417 
index: - 
=== Succesors ===
=== Usages ===
j1762 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1417 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1762 <|@
result v154|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1759 
address: v1986 
=== Succesors ===
=== Usages ===
v2023 v2025 v2027 v2029 v2031 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1759 address: v1986  <|@  <|@
f <@~|@floating>@ <|@
tid v2044 <|@
result [v4|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1948 
=== Succesors ===
=== Usages ===
j1760 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1948  <|@  <|@
f <@~|@floating>@ <|@
tid j1760 <|@
result v155|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1759 
address: v2044 
=== Succesors ===
=== Usages ===
v2024 v2026 v2028 v2030 v2032 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1759 address: v2044  <|@  <|@
f <@~|@floating>@ <|@
tid j1803 <|@
result v156|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483664 - 2147483631]
=== Inputs ===
x: j1568 
y: j1738 
=== Succesors ===
=== Usages ===
v1804 v1806 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1568 y: j1738  <|@  <|@
f <@~|@floating>@ <|@
tid v1804 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1803 
y: j1065 
=== Succesors ===
=== Usages ===
v1583 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1803 y: j1065  <|@  <|@
f <@*|@fixed>@ <|@
tid v1583 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v1804 
=== Succesors ===
trueSuccessor: v1581 
falseSuccessor: v1582 
=== Usages ===
=== Predecessor ===
v1579 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1804 #trueSuccessor: v1581 #falseSuccessor: v1582  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v154|QWORD[.] = LEA [v151|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v155|QWORD[*] = LEA [v4|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v156|QWORD = LEA [v153|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v156|QWORD, y: v156|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B127 -> B128 falseDestination: B127 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B132" 
    xhandlers
    flags 
    probability 4599551409817811980
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1581 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1592 
=== Usages ===
=== Predecessor ===
v1583 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1592  <|@  <|@
f <@*|@fixed>@ <|@
tid v1592 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1593 
=== Predecessor ===
v1581 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B128 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B130" 
    xhandlers
    flags 
    probability 4592504140529706342
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1582 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1584 
=== Usages ===
=== Predecessor ===
v1583 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1584  <|@  <|@
f <@*|@fixed>@ <|@
tid v1584 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1585 
=== Predecessor ===
v1582 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B129 -> B130 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" "B168" 
    successors "B131" "B168" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4601511339784447334
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1795 <|@
result v157|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1585 
values: j1065 j1802 
=== Succesors ===
=== Usages ===
v2032 j1802 v2031 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1585 values: j1065 j1802  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1585 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v1584 
=== Succesors ===
next: v1960 
=== Usages ===
v1960 v1588 v1589 j1795 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v1584 #next: v1960  <|@  <|@
f <@~|@floating>@ <|@
tid v2032 <|@
result [v155|QWORD[*] + v157|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1760 
index: j1795 
=== Succesors ===
=== Usages ===
v1960 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1760 index: j1795  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1960 <|@
result v158|V256_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v1585 
address: v2032 
=== Succesors ===
next: v1899 
=== Usages ===
v1899 
=== Predecessor ===
v1585 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1585 address: v2032 #next: v1899  <|@  <|@
f <@~|@floating>@ <|@
tid v2031 <|@
result [v154|QWORD[.] + v157|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1762 
index: j1795 
=== Succesors ===
=== Usages ===
v1899 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1762 index: j1795  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1899 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2031 
value: v1960 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1591 
=== Usages ===
=== Predecessor ===
v1960 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2031 value: v1960 stateAfter: - lastLocationAccess: - #next: v1591  <|@  <|@
f <@~|@floating>@ <|@
tid j1802 <|@
result v159|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1795 
y: j456 
=== Succesors ===
=== Usages ===
j1787 j1795 v1806 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1795 y: j456  <|@  <|@
f <@~|@floating>@ <|@
tid v1806 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1803 
y: j1802 
=== Succesors ===
=== Usages ===
v1591 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1803 y: j1802  <|@  <|@
f <@*|@fixed>@ <|@
tid v1591 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1806 
=== Succesors ===
trueSuccessor: v1588 
falseSuccessor: v1590 
=== Usages ===
=== Predecessor ===
v1899 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1806 #trueSuccessor: v1588 #falseSuccessor: v1590  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v157|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v158|V256_WORD = H [v155|QWORD[*] + v157|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v154|QWORD[.] + v157|QWORD * 2], input: v158|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v159|QWORD = LEA [v157|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v159|QWORD, y: v156|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B130 -> B131 falseDestination: B130 -> B168 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B130" 
    successors "B132" 
    xhandlers
    flags 
    probability 4592504140529706342
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1588 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v1585 
=== Succesors ===
next: v1594 
=== Usages ===
=== Predecessor ===
v1591 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v1585 #next: v1594  <|@  <|@
f <@*|@fixed>@ <|@
tid v1594 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1593 
=== Predecessor ===
v1588 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v159|QWORD] destination: B131 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B128" "B131" 
    successors "B133" "B134" 
    xhandlers
    flags 
    probability 4601511339784447334
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1787 <|@
result v160|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1593 
values: j1065 j1802 
=== Succesors ===
=== Usages ===
v2030 j1794 j1779 v1809 v2029 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1593 values: j1065 j1802  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1593 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1592 v1594 
=== Succesors ===
next: v1615 
=== Usages ===
j1787 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1592 v1594 #next: v1615  <|@  <|@
f <@~|@floating>@ <|@
tid j1808 <|@
result v161|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j1568 
y: j1744 
=== Succesors ===
=== Usages ===
v1809 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1568 y: j1744  <|@  <|@
f <@~|@floating>@ <|@
tid v1809 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1808 
y: j1787 
=== Succesors ===
=== Usages ===
v1615 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1808 y: j1787  <|@  <|@
f <@*|@fixed>@ <|@
tid v1615 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1809 
=== Succesors ===
trueSuccessor: v1614 
falseSuccessor: v1613 
=== Usages ===
=== Predecessor ===
v1593 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1809 #trueSuccessor: v1614 #falseSuccessor: v1613  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v160|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v161|QWORD = LEA [v153|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v160|QWORD, y: v161|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B132 -> B133 falseDestination: B132 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B135" 
    xhandlers
    flags 
    probability 4592504140529706342
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1614 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1618 
=== Usages ===
=== Predecessor ===
v1615 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1618  <|@  <|@
f <@*|@fixed>@ <|@
tid v1618 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1604 
=== Predecessor ===
v1614 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v160|QWORD] destination: B133 -> B135 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B135" 
    xhandlers
    flags 
    probability 4599551409817811980
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1613 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1961 
=== Usages ===
v1961 
=== Predecessor ===
v1615 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1961  <|@  <|@
f <@~|@floating>@ <|@
tid v2030 <|@
result [v155|QWORD[*] + v160|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1760 
index: j1787 
=== Succesors ===
=== Usages ===
v1961 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1760 index: j1787  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1961 <|@
result v162|V128_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v1613 
address: v2030 
=== Succesors ===
next: v1897 
=== Usages ===
v1897 
=== Predecessor ===
v1613 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1613 address: v2030 #next: v1897  <|@  <|@
f <@~|@floating>@ <|@
tid v2029 <|@
result [v154|QWORD[.] + v160|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1762 
index: j1787 
=== Succesors ===
=== Usages ===
v1897 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1762 index: j1787  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1897 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2029 
value: v1961 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1603 
=== Usages ===
=== Predecessor ===
v1961 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2029 value: v1961 stateAfter: - lastLocationAccess: - #next: v1603  <|@  <|@
f <@~|@floating>@ <|@
tid j1794 <|@
result v163|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1787 
y: j1378 
=== Succesors ===
=== Usages ===
j1779 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1787 y: j1378  <|@  <|@
f <@*|@fixed>@ <|@
tid v1603 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1604 
=== Predecessor ===
v1897 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v162|V128_WORD = H [v155|QWORD[*] + v160|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v154|QWORD[.] + v160|QWORD * 2], input: v162|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v163|QWORD = LEA [v160|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v163|QWORD] destination: B134 -> B135 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" "B133" 
    successors "B136" "B137" 
    xhandlers
    flags 
    probability 4601511339784447334
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1779 <|@
result v164|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1604 
values: j1794 j1787 
=== Succesors ===
=== Usages ===
v2028 j1786 j1771 v1812 v2027 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1604 values: j1794 j1787  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1604 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1603 v1618 
=== Succesors ===
next: v1621 
=== Usages ===
j1779 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1603 v1618 #next: v1621  <|@  <|@
f <@~|@floating>@ <|@
tid j1811 <|@
result v165|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j1568 
y: j1748 
=== Succesors ===
=== Usages ===
v1812 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1568 y: j1748  <|@  <|@
f <@~|@floating>@ <|@
tid v1812 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1811 
y: j1779 
=== Succesors ===
=== Usages ===
v1621 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1811 y: j1779  <|@  <|@
f <@*|@fixed>@ <|@
tid v1621 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1812 
=== Succesors ===
trueSuccessor: v1620 
falseSuccessor: v1619 
=== Usages ===
=== Predecessor ===
v1604 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1812 #trueSuccessor: v1620 #falseSuccessor: v1619  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v164|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v165|QWORD = LEA [v153|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v164|QWORD, y: v165|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B135 -> B136 falseDestination: B135 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B135" 
    successors "B138" 
    xhandlers
    flags 
    probability 4592504140529706342
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1620 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1624 
=== Usages ===
=== Predecessor ===
v1621 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1624  <|@  <|@
f <@*|@fixed>@ <|@
tid v1624 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1607 
=== Predecessor ===
v1620 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v164|QWORD] destination: B136 -> B138 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B135" 
    successors "B138" 
    xhandlers
    flags 
    probability 4599551409817811980
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1619 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1962 
=== Usages ===
v1962 
=== Predecessor ===
v1621 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1962  <|@  <|@
f <@~|@floating>@ <|@
tid v2028 <|@
result [v155|QWORD[*] + v164|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1760 
index: j1779 
=== Succesors ===
=== Usages ===
v1962 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1760 index: j1779  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1962 <|@
result v166|V64_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v1619 
address: v2028 
=== Succesors ===
next: v1895 
=== Usages ===
v1895 
=== Predecessor ===
v1619 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1619 address: v2028 #next: v1895  <|@  <|@
f <@~|@floating>@ <|@
tid v2027 <|@
result [v154|QWORD[.] + v164|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1762 
index: j1779 
=== Succesors ===
=== Usages ===
v1895 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1762 index: j1779  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1895 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2027 
value: v1962 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1606 
=== Usages ===
=== Predecessor ===
v1962 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2027 value: v1962 stateAfter: - lastLocationAccess: - #next: v1606  <|@  <|@
f <@~|@floating>@ <|@
tid j1786 <|@
result v167|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1779 
y: j1110 
=== Succesors ===
=== Usages ===
j1771 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1779 y: j1110  <|@  <|@
f <@*|@fixed>@ <|@
tid v1606 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1607 
=== Predecessor ===
v1895 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v166|V64_WORD = H [v155|QWORD[*] + v164|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v154|QWORD[.] + v164|QWORD * 2], input: v166|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v167|QWORD = LEA [v164|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v167|QWORD] destination: B137 -> B138 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B137" "B136" 
    successors "B139" "B140" 
    xhandlers
    flags 
    probability 4601511339784447334
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1771 <|@
result v168|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1607 
values: j1786 j1779 
=== Succesors ===
=== Usages ===
v2026 j1778 j1763 v1815 v2025 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1607 values: j1786 j1779  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1607 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1606 v1624 
=== Succesors ===
next: v1627 
=== Usages ===
j1771 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1606 v1624 #next: v1627  <|@  <|@
f <@~|@floating>@ <|@
tid j1814 <|@
result v169|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j1568 
y: j1752 
=== Succesors ===
=== Usages ===
v1815 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1568 y: j1752  <|@  <|@
f <@~|@floating>@ <|@
tid v1815 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1814 
y: j1771 
=== Succesors ===
=== Usages ===
v1627 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1814 y: j1771  <|@  <|@
f <@*|@fixed>@ <|@
tid v1627 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1815 
=== Succesors ===
trueSuccessor: v1626 
falseSuccessor: v1625 
=== Usages ===
=== Predecessor ===
v1607 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1815 #trueSuccessor: v1626 #falseSuccessor: v1625  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v168|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v169|QWORD = LEA [v153|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v168|QWORD, y: v169|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B138 -> B139 falseDestination: B138 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B138" 
    successors "B141" 
    xhandlers
    flags 
    probability 4592504140529706342
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1626 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1630 
=== Usages ===
=== Predecessor ===
v1627 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1630  <|@  <|@
f <@*|@fixed>@ <|@
tid v1630 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1610 
=== Predecessor ===
v1626 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v168|QWORD] destination: B139 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B138" 
    successors "B141" 
    xhandlers
    flags 
    probability 4599551409817811980
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1625 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1963 
=== Usages ===
v1963 
=== Predecessor ===
v1627 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1963  <|@  <|@
f <@~|@floating>@ <|@
tid v2026 <|@
result [v155|QWORD[*] + v168|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1760 
index: j1771 
=== Succesors ===
=== Usages ===
v1963 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1760 index: j1771  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1963 <|@
result v170|V32_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16>
=== Inputs ===
stateBefore: - 
guard: v1625 
address: v2026 
=== Succesors ===
next: v1893 
=== Usages ===
v1893 
=== Predecessor ===
v1625 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1625 address: v2026 #next: v1893  <|@  <|@
f <@~|@floating>@ <|@
tid v2025 <|@
result [v154|QWORD[.] + v168|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1762 
index: j1771 
=== Succesors ===
=== Usages ===
v1893 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1762 index: j1771  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1893 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2025 
value: v1963 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1609 
=== Usages ===
=== Predecessor ===
v1963 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2025 value: v1963 stateAfter: - lastLocationAccess: - #next: v1609  <|@  <|@
f <@~|@floating>@ <|@
tid j1778 <|@
result v171|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1771 
y: j1086 
=== Succesors ===
=== Usages ===
j1763 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1771 y: j1086  <|@  <|@
f <@*|@fixed>@ <|@
tid v1609 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1610 
=== Predecessor ===
v1893 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v170|V32_WORD = H [v155|QWORD[*] + v168|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction J (address: [v154|QWORD[.] + v168|QWORD * 2], input: v170|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v171|QWORD = LEA [v168|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v171|QWORD] destination: B140 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" "B139" 
    successors "B142" "B143" 
    xhandlers
    flags 
    probability 4601511339784447334
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1763 <|@
result v172|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1610 
values: j1778 j1771 
=== Succesors ===
=== Usages ===
v2024 v1818 v2023 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1610 values: j1778 j1771  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1610 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1609 v1630 
=== Succesors ===
next: v1633 
=== Usages ===
j1763 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1609 v1630 #next: v1633  <|@  <|@
f <@~|@floating>@ <|@
tid j1817 <|@
result v173|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j1568 
y: j935 
=== Succesors ===
=== Usages ===
v1818 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1568 y: j935  <|@  <|@
f <@~|@floating>@ <|@
tid v1818 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1817 
y: j1763 
=== Succesors ===
=== Usages ===
v1633 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1817 y: j1763  <|@  <|@
f <@*|@fixed>@ <|@
tid v1633 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1818 
=== Succesors ===
trueSuccessor: v1632 
falseSuccessor: v1631 
=== Usages ===
=== Predecessor ===
v1610 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1818 #trueSuccessor: v1632 #falseSuccessor: v1631  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v172|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v173|QWORD = DEC v153|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v172|QWORD, y: v173|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B141 -> B142 falseDestination: B141 -> B143 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B144" 
    xhandlers
    flags 
    probability 4592504140529706342
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1632 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1636 
=== Usages ===
=== Predecessor ===
v1633 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1636  <|@  <|@
f <@*|@fixed>@ <|@
tid v1636 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1597 
=== Predecessor ===
v1632 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B142 -> B144 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B144" 
    xhandlers
    flags 
    probability 4599551409817811980
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1631 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i1964 
=== Usages ===
i1964 
=== Predecessor ===
v1633 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1964  <|@  <|@
f <@~|@floating>@ <|@
tid v2024 <|@
result [v155|QWORD[*] + v172|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1760 
index: j1763 
=== Succesors ===
=== Usages ===
i1964 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1760 index: j1763  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1964 <|@
result v174|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v1631 
address: v2024 
=== Succesors ===
next: v1891 
=== Usages ===
v1891 
=== Predecessor ===
v1631 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1631 address: v2024 #next: v1891  <|@  <|@
f <@~|@floating>@ <|@
tid v2023 <|@
result [v154|QWORD[.] + v172|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1762 
index: j1763 
=== Succesors ===
=== Usages ===
v1891 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1762 index: j1763  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1891 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2023 
value: i1964 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1612 
=== Usages ===
=== Predecessor ===
i1964 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2023 value: i1964 stateAfter: - lastLocationAccess: - #next: v1612  <|@  <|@
f <@*|@fixed>@ <|@
tid v1612 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1597 
=== Predecessor ===
v1891 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v174|DWORD = MOVSX [v155|QWORD[*] + v172|QWORD * 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v154|QWORD[.] + v172|QWORD * 2], y: v174|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B143 -> B144 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B126" "B143" "B142" 
    successors "B145" "B163" 
    xhandlers
    flags 
    probability 4606014939411817830
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1597 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1596 v1612 v1636 
=== Succesors ===
next: v1821 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1596 v1612 v1636 #next: v1821  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1821 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v1643 
=== Usages ===
j1823 
=== Predecessor ===
v1597 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v1643  <|@  <|@
f <@~|@floating>@ <|@
tid j1567 <|@
result v175|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i219 
=== Succesors ===
=== Usages ===
j1572 v1702 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i219  <|@  <|@
f <@~|@floating>@ <|@
tid v1702 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1568 
y: j1567 
=== Succesors ===
=== Usages ===
v1643 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1568 y: j1567  <|@  <|@
f <@*|@fixed>@ <|@
tid v1643 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1702 
=== Succesors ===
trueSuccessor: v1642 
falseSuccessor: v1641 
=== Usages ===
=== Predecessor ===
v1821 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1702 #trueSuccessor: v1642 #falseSuccessor: v1641  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v175|QWORD = MOVSXD v129|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v175|QWORD, y: v153|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B144 -> B145 falseDestination: B144 -> B163 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B146" "B147" 
    xhandlers
    flags 
    probability 4601511339784447334
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1642 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1646 
=== Usages ===
=== Predecessor ===
v1643 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1646  <|@  <|@
f <@~|@floating>@ <|@
tid v2021 <|@
result [v151|QWORD[.] + v153|QWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a1417 
index: j1568 
=== Succesors ===
=== Usages ===
j1823 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1417 index: j1568  <|@  <|@
f <@~|@floating>@ <|@
tid j1823 <|@
result v176|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1821 
address: v2021 
=== Succesors ===
=== Usages ===
v2033 v2034 v2035 v2036 v2037 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1821 address: v2021  <|@  <|@
f <@~|@floating>@ <|@
tid j1572 <|@
result v177|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j1567 
y: j1568 
=== Succesors ===
=== Usages ===
j1868 j1854 j1859 j1862 j1865 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j1567 y: j1568  <|@  <|@
f <@~|@floating>@ <|@
tid j1854 <|@
result v178|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967311 - 4294967279]
=== Inputs ===
x: j1572 
y: j1738 
=== Succesors ===
=== Usages ===
v1855 v1857 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1572 y: j1738  <|@  <|@
f <@~|@floating>@ <|@
tid v1855 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1854 
y: j1065 
=== Succesors ===
=== Usages ===
v1646 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1854 y: j1065  <|@  <|@
f <@*|@fixed>@ <|@
tid v1646 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v1855 
=== Succesors ===
trueSuccessor: v1644 
falseSuccessor: v1645 
=== Usages ===
=== Predecessor ===
v1642 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1855 #trueSuccessor: v1644 #falseSuccessor: v1645  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v176|QWORD[.] = LEA [v151|QWORD[.] + v153|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v177|QWORD = SUB (x: v175|QWORD, ~y: v153|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v178|QWORD = LEA [v177|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v178|QWORD, y: v178|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B145 -> B146 falseDestination: B145 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B145" 
    successors "B150" 
    xhandlers
    flags 
    probability 4599551409817811980
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1644 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1655 
=== Usages ===
=== Predecessor ===
v1646 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1655  <|@  <|@
f <@*|@fixed>@ <|@
tid v1655 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1656 
=== Predecessor ===
v1644 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B146 -> B150 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B145" 
    successors "B148" 
    xhandlers
    flags 
    probability 4592504140529706342
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1645 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1647 
=== Usages ===
=== Predecessor ===
v1646 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1647  <|@  <|@
f <@~|@floating>@ <|@
tid v1914 <|@
result v179|V256_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1909 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1647 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1648 
=== Predecessor ===
v1645 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v179|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B147 -> B148 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B147" "B162" 
    successors "B149" "B162" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4601511339784447334
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1848 <|@
result v180|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1648 
values: j1065 j1853 
=== Succesors ===
=== Usages ===
v2037 j1853 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1648 values: j1065 j1853  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1648 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v1647 
=== Succesors ===
next: v1909 
=== Usages ===
j1848 v1651 v1652 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v1647 #next: v1909  <|@  <|@
f <@~|@floating>@ <|@
tid v2037 <|@
result [v176|QWORD[.] + v180|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1823 
index: j1848 
=== Succesors ===
=== Usages ===
v1909 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1823 index: j1848  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1909 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2037 
value: v1914 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1654 
=== Usages ===
=== Predecessor ===
v1648 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2037 value: v1914 stateAfter: - lastLocationAccess: - #next: v1654  <|@  <|@
f <@~|@floating>@ <|@
tid j1853 <|@
result v181|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1848 
y: j456 
=== Succesors ===
=== Usages ===
j1842 j1848 v1857 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1848 y: j456  <|@  <|@
f <@~|@floating>@ <|@
tid v1857 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1854 
y: j1853 
=== Succesors ===
=== Usages ===
v1654 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1854 y: j1853  <|@  <|@
f <@*|@fixed>@ <|@
tid v1654 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1857 
=== Succesors ===
trueSuccessor: v1651 
falseSuccessor: v1653 
=== Usages ===
=== Predecessor ===
v1909 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1857 #trueSuccessor: v1651 #falseSuccessor: v1653  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v180|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v176|QWORD[.] + v180|QWORD * 2], input: v179|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v181|QWORD = LEA [v180|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v181|QWORD, y: v178|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B148 -> B149 falseDestination: B148 -> B162 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B148" 
    successors "B150" 
    xhandlers
    flags 
    probability 4592504140529706342
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1651 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v1648 
=== Succesors ===
next: v1657 
=== Usages ===
=== Predecessor ===
v1654 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v1648 #next: v1657  <|@  <|@
f <@*|@fixed>@ <|@
tid v1657 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1656 
=== Predecessor ===
v1651 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v181|QWORD] destination: B149 -> B150 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B146" "B149" 
    successors "B151" "B152" 
    xhandlers
    flags 
    probability 4601511339784447334
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1842 <|@
result v182|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1656 
values: j1065 j1853 
=== Succesors ===
=== Usages ===
v2036 j1847 j1836 v1860 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1656 values: j1065 j1853  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1656 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1655 v1657 
=== Succesors ===
next: v1678 
=== Usages ===
j1842 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1655 v1657 #next: v1678  <|@  <|@
f <@~|@floating>@ <|@
tid j1859 <|@
result v183|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j1572 
y: j1744 
=== Succesors ===
=== Usages ===
v1860 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1572 y: j1744  <|@  <|@
f <@~|@floating>@ <|@
tid v1860 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1859 
y: j1842 
=== Succesors ===
=== Usages ===
v1678 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1859 y: j1842  <|@  <|@
f <@*|@fixed>@ <|@
tid v1678 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1860 
=== Succesors ===
trueSuccessor: v1677 
falseSuccessor: v1676 
=== Usages ===
=== Predecessor ===
v1656 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1860 #trueSuccessor: v1677 #falseSuccessor: v1676  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v182|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v183|QWORD = LEA [v177|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v182|QWORD, y: v183|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B150 -> B151 falseDestination: B150 -> B152 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B150" 
    successors "B153" 
    xhandlers
    flags 
    probability 4592504140529706342
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1677 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1681 
=== Usages ===
=== Predecessor ===
v1678 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1681  <|@  <|@
f <@*|@fixed>@ <|@
tid v1681 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1667 
=== Predecessor ===
v1677 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v182|QWORD] destination: B151 -> B153 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B150" 
    successors "B153" 
    xhandlers
    flags 
    probability 4599551409817811980
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1676 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1908 
=== Usages ===
=== Predecessor ===
v1678 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1908  <|@  <|@
f <@~|@floating>@ <|@
tid v2036 <|@
result [v176|QWORD[.] + v182|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1823 
index: j1842 
=== Succesors ===
=== Usages ===
v1908 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1823 index: j1842  <|@  <|@
f <@~|@floating>@ <|@
tid v1918 <|@
result v184|V128_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1908 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1908 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2036 
value: v1918 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1666 
=== Usages ===
=== Predecessor ===
v1676 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2036 value: v1918 stateAfter: - lastLocationAccess: - #next: v1666  <|@  <|@
f <@~|@floating>@ <|@
tid j1847 <|@
result v185|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1842 
y: j1378 
=== Succesors ===
=== Usages ===
j1836 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1842 y: j1378  <|@  <|@
f <@*|@fixed>@ <|@
tid v1666 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1667 
=== Predecessor ===
v1908 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v184|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v176|QWORD[.] + v182|QWORD * 2], input: v184|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v185|QWORD = LEA [v182|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v185|QWORD] destination: B152 -> B153 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B152" "B151" 
    successors "B154" "B155" 
    xhandlers
    flags 
    probability 4601511339784447334
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1836 <|@
result v186|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1667 
values: j1847 j1842 
=== Succesors ===
=== Usages ===
v2035 j1841 j1830 v1863 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1667 values: j1847 j1842  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1667 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1666 v1681 
=== Succesors ===
next: v1684 
=== Usages ===
j1836 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1666 v1681 #next: v1684  <|@  <|@
f <@~|@floating>@ <|@
tid j1862 <|@
result v187|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j1572 
y: j1748 
=== Succesors ===
=== Usages ===
v1863 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1572 y: j1748  <|@  <|@
f <@~|@floating>@ <|@
tid v1863 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1862 
y: j1836 
=== Succesors ===
=== Usages ===
v1684 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1862 y: j1836  <|@  <|@
f <@*|@fixed>@ <|@
tid v1684 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1863 
=== Succesors ===
trueSuccessor: v1683 
falseSuccessor: v1682 
=== Usages ===
=== Predecessor ===
v1667 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1863 #trueSuccessor: v1683 #falseSuccessor: v1682  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v186|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v187|QWORD = LEA [v177|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v186|QWORD, y: v187|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B153 -> B154 falseDestination: B153 -> B155 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B153" 
    successors "B156" 
    xhandlers
    flags 
    probability 4592504140529706342
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1683 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1687 
=== Usages ===
=== Predecessor ===
v1684 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1687  <|@  <|@
f <@*|@fixed>@ <|@
tid v1687 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1670 
=== Predecessor ===
v1683 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v186|QWORD] destination: B154 -> B156 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B153" 
    successors "B156" 
    xhandlers
    flags 
    probability 4599551409817811980
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1682 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1906 
=== Usages ===
=== Predecessor ===
v1684 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1906  <|@  <|@
f <@~|@floating>@ <|@
tid v2035 <|@
result [v176|QWORD[.] + v186|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1823 
index: j1836 
=== Succesors ===
=== Usages ===
v1906 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1823 index: j1836  <|@  <|@
f <@~|@floating>@ <|@
tid v1917 <|@
result v188|V64_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1906 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1906 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2035 
value: v1917 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1669 
=== Usages ===
=== Predecessor ===
v1682 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2035 value: v1917 stateAfter: - lastLocationAccess: - #next: v1669  <|@  <|@
f <@~|@floating>@ <|@
tid j1841 <|@
result v189|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1836 
y: j1110 
=== Succesors ===
=== Usages ===
j1830 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1836 y: j1110  <|@  <|@
f <@*|@fixed>@ <|@
tid v1669 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1670 
=== Predecessor ===
v1906 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v188|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v176|QWORD[.] + v186|QWORD * 2], input: v188|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v189|QWORD = LEA [v186|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v189|QWORD] destination: B155 -> B156 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B156"
    from_bci -1
    to_bci -1
    predecessors "B155" "B154" 
    successors "B157" "B158" 
    xhandlers
    flags 
    probability 4601511339784447334
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1830 <|@
result v190|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1670 
values: j1841 j1836 
=== Succesors ===
=== Usages ===
v2034 j1835 j1824 v1866 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1670 values: j1841 j1836  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1670 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1669 v1687 
=== Succesors ===
next: v1690 
=== Usages ===
j1830 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1669 v1687 #next: v1690  <|@  <|@
f <@~|@floating>@ <|@
tid j1865 <|@
result v191|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j1572 
y: j1752 
=== Succesors ===
=== Usages ===
v1866 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1572 y: j1752  <|@  <|@
f <@~|@floating>@ <|@
tid v1866 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1865 
y: j1830 
=== Succesors ===
=== Usages ===
v1690 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1865 y: j1830  <|@  <|@
f <@*|@fixed>@ <|@
tid v1690 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1866 
=== Succesors ===
trueSuccessor: v1689 
falseSuccessor: v1688 
=== Usages ===
=== Predecessor ===
v1670 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1866 #trueSuccessor: v1689 #falseSuccessor: v1688  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v190|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v191|QWORD = LEA [v177|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v190|QWORD, y: v191|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B156 -> B157 falseDestination: B156 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B157"
    from_bci -1
    to_bci -1
    predecessors "B156" 
    successors "B159" 
    xhandlers
    flags 
    probability 4592504140529706342
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1689 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1693 
=== Usages ===
=== Predecessor ===
v1690 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1693  <|@  <|@
f <@*|@fixed>@ <|@
tid v1693 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1673 
=== Predecessor ===
v1689 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v190|QWORD] destination: B157 -> B159 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B158"
    from_bci -1
    to_bci -1
    predecessors "B156" 
    successors "B159" 
    xhandlers
    flags 
    probability 4599551409817811980
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1688 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1904 
=== Usages ===
=== Predecessor ===
v1690 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1904  <|@  <|@
f <@~|@floating>@ <|@
tid v2034 <|@
result [v176|QWORD[.] + v190|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1823 
index: j1830 
=== Succesors ===
=== Usages ===
v1904 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1823 index: j1830  <|@  <|@
f <@~|@floating>@ <|@
tid v1916 <|@
result v192|V32_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16>
value: SIMD<0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1904 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1904 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2034 
value: v1916 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1672 
=== Usages ===
=== Predecessor ===
v1688 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2034 value: v1916 stateAfter: - lastLocationAccess: - #next: v1672  <|@  <|@
f <@~|@floating>@ <|@
tid j1835 <|@
result v193|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1830 
y: j1086 
=== Succesors ===
=== Usages ===
j1824 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1830 y: j1086  <|@  <|@
f <@*|@fixed>@ <|@
tid v1672 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1673 
=== Predecessor ===
v1904 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v192|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v176|QWORD[.] + v190|QWORD * 2], input: v192|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v193|QWORD = LEA [v190|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v193|QWORD] destination: B158 -> B159 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B159"
    from_bci -1
    to_bci -1
    predecessors "B158" "B157" 
    successors "B160" "B161" 
    xhandlers
    flags 
    probability 4601511339784447334
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1824 <|@
result v194|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1673 
values: j1835 j1830 
=== Succesors ===
=== Usages ===
v2033 v1869 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1673 values: j1835 j1830  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1673 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1672 v1693 
=== Succesors ===
next: v1696 
=== Usages ===
j1824 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1672 v1693 #next: v1696  <|@  <|@
f <@~|@floating>@ <|@
tid j1868 <|@
result v195|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j1572 
y: j935 
=== Succesors ===
=== Usages ===
v1869 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1572 y: j935  <|@  <|@
f <@~|@floating>@ <|@
tid v1869 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1868 
y: j1824 
=== Succesors ===
=== Usages ===
v1696 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1868 y: j1824  <|@  <|@
f <@*|@fixed>@ <|@
tid v1696 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1869 
=== Succesors ===
trueSuccessor: v1695 
falseSuccessor: v1694 
=== Usages ===
=== Predecessor ===
v1673 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1869 #trueSuccessor: v1695 #falseSuccessor: v1694  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v194|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v195|QWORD = DEC v177|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v194|QWORD, y: v195|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B159 -> B160 falseDestination: B159 -> B161 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B160"
    from_bci -1
    to_bci -1
    predecessors "B159" 
    successors "B164" 
    xhandlers
    flags 
    probability 4592504140529706342
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1695 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1699 
=== Usages ===
=== Predecessor ===
v1696 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1699  <|@  <|@
f <@*|@fixed>@ <|@
tid v1699 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1660 
=== Predecessor ===
v1695 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B160 -> B164 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B161"
    from_bci -1
    to_bci -1
    predecessors "B159" 
    successors "B164" 
    xhandlers
    flags 
    probability 4599551409817811980
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1694 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1902 
=== Usages ===
=== Predecessor ===
v1696 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1902  <|@  <|@
f <@~|@floating>@ <|@
tid v2033 <|@
result [v176|QWORD[.] + v194|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1823 
index: j1824 
=== Succesors ===
=== Usages ===
v1902 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1823 index: j1824  <|@  <|@
f <@~|@floating>@ <|@
tid i1915 <|@
result short[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i16 [0] ⇈0000000000000000
stampKind: i16
value: short[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1902 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1902 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2033 
value: i1915 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1675 
=== Usages ===
=== Predecessor ===
v1694 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2033 value: i1915 stateAfter: - lastLocationAccess: - #next: v1675  <|@  <|@
f <@*|@fixed>@ <|@
tid v1675 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1660 
=== Predecessor ===
v1902 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v176|QWORD[.] + v194|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B161 -> B164 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B162"
    from_bci -1
    to_bci -1
    predecessors "B148" 
    successors "B148" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4599551409817811980
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1653 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1652 
=== Usages ===
=== Predecessor ===
v1654 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1652  <|@  <|@
f <@*|@fixed>@ <|@
tid v1652 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v1648 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1653 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v1648  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v181|QWORD] destination: B162 -> B148 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B163"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B164" 
    xhandlers
    flags 
    probability 4601511339784447334
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1641 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1659 
=== Usages ===
=== Predecessor ===
v1643 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1659  <|@  <|@
f <@*|@fixed>@ <|@
tid v1659 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1660 
=== Predecessor ===
v1641 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B163 -> B164 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B164"
    from_bci -1
    to_bci -1
    predecessors "B163" "B161" "B160" 
    successors "B165" "B166" 
    xhandlers
    flags 
    probability 4606014939411817830
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1660 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1659 v1675 v1699 
=== Succesors ===
next: a1165 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1659 v1675 v1699 #next: a1165  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1165 <|@
result v151|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a1417 
=== Succesors ===
next: j1448 
=== Usages ===
a1080 
=== Predecessor ===
v1660 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1417 #next: j1448  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1448 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1463 
=== Usages ===
v2010 v2011 
=== Predecessor ===
a1165 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1463  <|@  <|@
f <@~|@floating>@ <|@
tid v2010 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1448 
index: - 
=== Succesors ===
=== Usages ===
j1463 v1465 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1448 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1463 <|@
result v196|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2010 
=== Succesors ===
next: j1464 
=== Usages ===
j1497 j1469 v2018 
=== Predecessor ===
j1448 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2010 #next: j1464  <|@  <|@
f <@~|@floating>@ <|@
tid v2011 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1448 
index: - 
=== Succesors ===
=== Usages ===
j1464 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1448 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1464 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2011 
=== Succesors ===
next: v1456 
=== Usages ===
v1453 
=== Predecessor ===
j1463 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2011 #next: v1456  <|@  <|@
f <@~|@floating>@ <|@
tid j1497 <|@
result v197|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1463 
y: j439 
=== Succesors ===
=== Usages ===
v1453 v1465 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1463 y: j439  <|@  <|@
f <@~|@floating>@ <|@
tid v1453 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1464 
y: j1497 
=== Succesors ===
=== Usages ===
v1456 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1464 y: j1497  <|@  <|@
f <@*|@fixed>@ <|@
tid v1456 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1453 
=== Succesors ===
trueSuccessor: v1454 
falseSuccessor: v1455 
=== Usages ===
=== Predecessor ===
j1464 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1453 #trueSuccessor: v1454 #falseSuccessor: v1455  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v196|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v197|QWORD = LEA [v196|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v197|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B164 -> B165 falseDestination: B164 -> B166 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B165"
    from_bci -1
    to_bci -1
    predecessors "B164" 
    successors "B167" 
    xhandlers
    flags 
    probability 4576171042495639949
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1454 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a1459 
=== Usages ===
=== Predecessor ===
v1456 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1459  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1459 <|@
result v198|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?6 
arguments: v1336 i128 i14 
=== Succesors ===
next: j1460 
=== Usages ===
j1460 
=== Predecessor ===
v1454 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?6 arguments: v1336 i128 i14 #next: j1460  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1460 <|@
result v198|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1459 
=== Succesors ===
next: v1470 
=== Usages ===
j1469 
=== Predecessor ===
a1459 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1459 #next: v1470  <|@  <|@
f <@*|@fixed>@ <|@
tid v1470 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1467 
=== Predecessor ===
j1460 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v131|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8]
stack: v129|DWORD 
locals: v0|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:8] <|@ <|@
      nr   -1  <|@ instruction v198|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v198|QWORD[.]] destination: B165 -> B167 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B166"
    from_bci -1
    to_bci -1
    predecessors "B164" 
    successors "B167" 
    xhandlers
    flags 
    probability 4605936542213152416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1455 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1465 
=== Usages ===
=== Predecessor ===
v1456 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1465  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1465 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2010 
value: j1497 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1462 
=== Usages ===
=== Predecessor ===
v1455 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2010 value: j1497 stateAfter: - lastLocationAccess: - #next: v1462  <|@  <|@
f <@~|@floating>@ <|@
tid v2018 <|@
result [v196|QWORD + 216] <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j1463 
index: - 
=== Succesors ===
=== Usages ===
v1462 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1463 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1462 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v2018 
=== Succesors ===
next: v1468 
=== Usages ===
=== Predecessor ===
v1465 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2018 #next: v1468  <|@  <|@
f <@*|@fixed>@ <|@
tid v1468 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1467 
=== Predecessor ===
v1462 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v197|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v196|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v196|QWORD] destination: B166 -> B167 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B167"
    from_bci -1
    to_bci -1
    predecessors "B166" "B165" 
    successors 
    xhandlers
    flags 
    probability 4606014939411817830
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1469 <|@
result v199|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1467 
values: j1463 j1460 
=== Succesors ===
=== Usages ===
v2014 v2013 a1077 v2019 v2020 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1467 values: j1463 j1460  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1467 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1468 v1470 
=== Succesors ===
next: a1077 
=== Usages ===
j1469 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1468 v1470 #next: a1077  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1077 <|@
result v200|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j1469 
=== Succesors ===
next: j1479 
=== Usages ===
a1083 
=== Predecessor ===
v1467 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1469 #next: j1479  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1479 <|@
result v201|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2012 
=== Succesors ===
next: v1480 
=== Usages ===
v1480 
=== Predecessor ===
a1077 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2012 #next: v1480  <|@  <|@
f <@~|@floating>@ <|@
tid v2013 <|@
result [v199|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1469 
index: - 
=== Succesors ===
=== Usages ===
v1480 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1469 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1480 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2013 
value: j1479 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1483 
=== Usages ===
=== Predecessor ===
j1479 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2013 value: j1479 stateAfter: - lastLocationAccess: - #next: v1483  <|@  <|@
f <@~|@floating>@ <|@
tid v2014 <|@
result [v199|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1469 
index: - 
=== Succesors ===
=== Usages ===
v1483 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1469 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1483 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2014 
value: v1493 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1487 
=== Usages ===
=== Predecessor ===
v1480 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2014 value: v1493 stateAfter: - lastLocationAccess: - #next: v1487  <|@  <|@
f <@~|@floating>@ <|@
tid v2019 <|@
result [v199|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1469 
index: - 
=== Succesors ===
=== Usages ===
v1487 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1469 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a1080 <|@
result v202|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n! -
=== Inputs ===
value: a1165 
=== Succesors ===
=== Usages ===
v1487 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1165  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1487 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2019 
value: a1080 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1489 
=== Usages ===
=== Predecessor ===
v1483 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2019 value: a1080 stateAfter: - lastLocationAccess: - #next: v1489  <|@  <|@
f <@~|@floating>@ <|@
tid v2020 <|@
result [v199|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j1469 
index: - 
=== Succesors ===
=== Usages ===
v1489 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1469 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1489 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2020 
value: i9 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1083 
=== Usages ===
=== Predecessor ===
v1487 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2020 value: i9 stateAfter: - lastLocationAccess: - #next: a1083  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1083 <|@
result v200|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1077 
=== Succesors ===
next: v1084 
=== Usages ===
v262 
=== Predecessor ===
v1489 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1077 #next: v1084  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1084 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v262 
=== Usages ===
=== Predecessor ===
a1083 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v262  <|@  <|@
f <@*|@fixed>@ <|@
tid v262 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a1083 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1084 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a1083 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v199|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v200|QWORD[.] = MOVE v199|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v201|QWORD = MOV [v130|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v199|QWORD[*]], y: v201|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v199|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v202|DWORD[.] = COMPRESSPOINTER (input: v151|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@2ae4cec4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v199|QWORD[*] + 12], y: v202|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v199|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v200|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B168"
    from_bci -1
    to_bci -1
    predecessors "B130" 
    successors "B130" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599551409817811980
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1590 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1589 
=== Usages ===
=== Predecessor ===
v1591 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1589  <|@  <|@
f <@*|@fixed>@ <|@
tid v1589 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v1585 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1590 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v1585  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v159|QWORD] destination: B168 -> B130 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B169"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B172" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1050 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:969) [bci: 499]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1256 
=== Usages ===
=== Predecessor ===
v1051 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1256  <|@  <|@
f <@~|@floating>@ <|@
tid i1257 <|@
result int[-218139|0xfffffffffffcabe5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -218139
stableDimension: 0
stamp: i32 [-218139] ⇊00000000fffcabe5 ⇈00000000fffcabe5
stampKind: i32
value: int[-218139|0xfffffffffffcabe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1251 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1256 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1248 
=== Predecessor ===
v1050 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-218139|0xfffffffffffcabe5]] destination: B169 -> B172 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B170"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B172" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1046 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:968) [bci: 485]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1254 
=== Usages ===
=== Predecessor ===
v1047 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1254  <|@  <|@
f <@~|@floating>@ <|@
tid i1255 <|@
result int[-236059|0xfffffffffffc65e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -236059
stableDimension: 0
stamp: i32 [-236059] ⇊00000000fffc65e5 ⇈00000000fffc65e5
stampKind: i32
value: int[-236059|0xfffffffffffc65e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1251 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1254 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1248 
=== Predecessor ===
v1046 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-236059|0xfffffffffffc65e5]] destination: B170 -> B172 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B171"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B172" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1042 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:966) [bci: 466]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1249 
=== Usages ===
=== Predecessor ===
v1043 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1249  <|@  <|@
f <@~|@floating>@ <|@
tid i1250 <|@
result int[-236571|0xfffffffffffc63e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -236571
stableDimension: 0
stamp: i32 [-236571] ⇊00000000fffc63e5 ⇈00000000fffc63e5
stampKind: i32
value: int[-236571|0xfffffffffffc63e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1251 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1249 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1248 
=== Predecessor ===
v1042 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-236571|0xfffffffffffc63e5]] destination: B171 -> B172 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B172"
    from_bci -1
    to_bci -1
    predecessors "B171" "B170" "B169" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1251 <|@
result v203|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-236571 - -218139] ⇊00000000fffc21e5 ⇈00000000fffcefe5
valueDescription: i32
=== Inputs ===
merge: v1248 
values: i1250 i1255 i1257 
=== Succesors ===
=== Usages ===
v1253 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1248 values: i1250 i1255 i1257  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1248 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1249 v1254 v1256 
=== Succesors ===
next: v1253 
=== Usages ===
i1251 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1249 v1254 v1256 #next: v1253  <|@  <|@
tid ?162 <|@
d <@d|@=== Debug Properties ===
bci: 396
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 960
stackSize: 0
=== Inputs ===
outerFrameState: ?216 
values: - a438 i160 i161 - 
=== Succesors ===
=== Usages ===
v1253 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?216 values: - a438 i160 i161 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1253 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?162 
actionAndReason: i1251 
speculation: a1183 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1248 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?162 actionAndReason: i1251 speculation: a1183  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v203|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v203|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 396]
locals: - v7|QWORD[.] v97|DWORD v98|DWORD - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:396, 5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B173"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B177" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1034 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:951) [bci: 362]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1246 
=== Usages ===
=== Predecessor ===
v1035 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1246  <|@  <|@
f <@~|@floating>@ <|@
tid i1247 <|@
result int[-202779|0xfffffffffffce7e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -202779
stableDimension: 0
stamp: i32 [-202779] ⇊00000000fffce7e5 ⇈00000000fffce7e5
stampKind: i32
value: int[-202779|0xfffffffffffce7e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1233 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1246 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1230 
=== Predecessor ===
v1034 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-202779|0xfffffffffffce7e5]] destination: B173 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B174"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B177" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1026 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:944) [bci: 305]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1244 
=== Usages ===
=== Predecessor ===
v1027 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1244  <|@  <|@
f <@~|@floating>@ <|@
tid i1245 <|@
result int[-189979|0xfffffffffffd19e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -189979
stableDimension: 0
stamp: i32 [-189979] ⇊00000000fffd19e5 ⇈00000000fffd19e5
stampKind: i32
value: int[-189979|0xfffffffffffd19e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1233 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1244 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1230 
=== Predecessor ===
v1026 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-189979|0xfffffffffffd19e5]] destination: B174 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B175"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B177" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1022 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 297]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1242 
=== Usages ===
=== Predecessor ===
v1023 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1242  <|@  <|@
f <@~|@floating>@ <|@
tid i1243 <|@
result int[-188443|0xfffffffffffd1fe5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -188443
stableDimension: 0
stamp: i32 [-188443] ⇊00000000fffd1fe5 ⇈00000000fffd1fe5
stampKind: i32
value: int[-188443|0xfffffffffffd1fe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1233 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1242 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1230 
=== Predecessor ===
v1022 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-188443|0xfffffffffffd1fe5]] destination: B175 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B176"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B177" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1014 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 296]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1238 
=== Usages ===
=== Predecessor ===
v1015 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1238  <|@  <|@
f <@~|@floating>@ <|@
tid i1239 <|@
result int[-185115|0xfffffffffffd2ce5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -185115
stableDimension: 0
stamp: i32 [-185115] ⇊00000000fffd2ce5 ⇈00000000fffd2ce5
stampKind: i32
value: int[-185115|0xfffffffffffd2ce5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1233 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1238 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1230 
=== Predecessor ===
v1014 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-185115|0xfffffffffffd2ce5]] destination: B176 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B177"
    from_bci -1
    to_bci -1
    predecessors "B176" "B89" "B175" "B174" "B173" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1233 <|@
result v204|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-202779 - -183819] ⇊00000000fffc00e5 ⇈00000000fffdfffd
valueDescription: i32
=== Inputs ===
merge: v1230 
values: i1239 i1241 i1243 i1245 i1247 
=== Succesors ===
=== Usages ===
v1235 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1230 values: i1239 i1241 i1243 i1245 i1247  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1230 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1238 v1240 v1242 v1244 v1246 
=== Succesors ===
next: v1235 
=== Usages ===
i1233 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1238 v1240 v1242 v1244 v1246 #next: v1235  <|@  <|@
f <@*|@fixed>@ <|@
tid v1235 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?119 
actionAndReason: i1233 
speculation: a1183 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1230 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?119 actionAndReason: i1233 speculation: a1183  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v204|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v204|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
locals: v0|QWORD[.] v7|QWORD[.] v47|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:283, 5] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@61e4165f slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[.] = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVZXB [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2ae4cec4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TEST (x: v6|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9997660380889991 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607180311458467003
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8239147472715149 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B44" 
    xhandlers
    flags 
    probability 4605594647573089601
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[2|0x2], int[0|0x0], int[1|0x1], int[2|0x2], long[16|0x10], long[18|0x12]] destination: B2 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B7" "B43" "B2" 
    successors "B45" "B84" 
    xhandlers
    flags 
    probability 4605603864145910071
    begin_IR
      LIR
      nr   -1  <|@ instruction [v46|QWORD, v47|DWORD, v48|DWORD, v49|DWORD, v50|QWORD, v51|QWORD] = LABEL numbPhis: 6 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9989929363705994 condition: < trueDestination: B44 -> B45 falseDestination: B44 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4605596383028117030
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: -2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.009242564066160308 condition: < trueDestination: B45 -> B46 falseDestination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B82" 
    xhandlers
    flags 
    probability 4605527792449181426
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
locals: v0|QWORD[.] v7|QWORD[.] v47|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v0|QWORD[.] - 
>@ <|@ instruction v52|DWORD = MOV [v4|DWORD[.] * 8 + 12] size: DWORD state [bci:197, 5] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v52|DWORD, y: v47|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B47 -> B48 falseDestination: B47 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B81" 
    xhandlers
    flags 
    probability 4605527792449181426
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v52|DWORD, y: v48|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B48 -> B49 falseDestination: B48 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605527792449181426
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v50|QWORD + v4|DWORD[.] * 8] y: 48 size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV [v51|QWORD + v4|DWORD[.] * 8] y: 46 size: WORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8193763792164618 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B71" 
    xhandlers
    flags 
    probability 4604199744109203169
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|DWORD] destination: B50 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B50" "B64" "B69" "B70" 
    successors "B72" "B73" 
    xhandlers
    flags 
    probability 4605527792449181426
    begin_IR
      LIR
      nr   -1  <|@ instruction [v66|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 256]
locals: v0|QWORD[.] v7|QWORD[.] v66|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v0|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v3|DWORD[.] * 8] state [bci:256, 5] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B71 -> B72 falseDestination: B71 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    probability 4605454266720142376
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B73 -> B74 falseDestination: B73 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" "B77" 
    xhandlers
    flags 
    probability 4605381476248393716
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v67|DWORD = MOV [v3|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = SUB (x: v67|DWORD, ~y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v1|DWORD, y: v68|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B75 -> B76 falseDestination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B78" "B80" 
    xhandlers
    flags 
    probability 4605309413681362543
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = SUB (x: v52|DWORD, ~y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v66|DWORD, y: v69|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B77 -> B78 falseDestination: B77 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B109" 
    xhandlers
    flags 
    probability 4605238071740001682
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2ae4cec4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[*] = MOVE v71|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[*] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = MOVSXD v1|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v75|QWORD = MOVSXD v66|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD = MOVSXD v2|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v72|QWORD[*] + v74|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v73|QWORD[*] + v75|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v76|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v77|DWORD = ADD (x: v66|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v77|DWORD] destination: B80 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B27" "B80" "B103" "B106" "B108" "B39" 
    successors "B110" "B116" 
    xhandlers
    flags 
    probability 4606817271057726943
    begin_IR
      LIR
      nr   -1  <|@ instruction [v129|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8]
stack: v129|DWORD 
locals: v0|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v4|DWORD[.] * 8] state [bci:8] <|@ <|@
      nr   -1  <|@ instruction v130|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP v129|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09284041465770032 condition: < trueDestination: B109 -> B110 falseDestination: B109 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B117" "B119" 
    xhandlers
    flags 
    probability 4606014939411817830
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOV [v4|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v139|DWORD = SUB (x: v138|DWORD, ~y: v129|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v139|DWORD, y: v139|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B116 -> B117 falseDestination: B116 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" "B123" 
    xhandlers
    flags 
    probability 4606014939411817830
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v141|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v142|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v129|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B119 -> B120 falseDestination: B119 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B121" "B122" 
    xhandlers
    flags 
    probability 4605230967425163689
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v143|DWORD = SHL v129|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v144|DWORD = LEA [v143|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v145|DWORD = AND v144|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v146|QWORD = MOVSXD v145|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v147|QWORD = ADD (x: v146|QWORD, y: v141|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v147|QWORD, y: v142|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B120 -> B121 falseDestination: B120 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B125" 
    xhandlers
    flags 
    probability 4605160409946364816
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v147|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v146|QWORD + v141|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v146|QWORD + v141|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v146|QWORD + v141|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v146|QWORD + v141|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v141|QWORD + 12], y: v129|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v141|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v141|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v148|QWORD[.] = MOVE v141|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v148|QWORD[.]] destination: B122 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B122" "B124" 
    successors "B126" "B127" 
    xhandlers
    flags 
    probability 4606014939411817830
    begin_IR
      LIR
      nr   -1  <|@ instruction [v151|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v129|DWORD, y: v138|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v152|DWORD = CMOVE (falseValue: v129|DWORD, ~trueValue: v138|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v153|QWORD = MOVSXD v152|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v153|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B125 -> B126 falseDestination: B125 -> B127 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B128" "B129" 
    xhandlers
    flags 
    probability 4601511339784447334
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v154|QWORD[.] = LEA [v151|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v155|QWORD[*] = LEA [v4|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v156|QWORD = LEA [v153|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v156|QWORD, y: v156|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B127 -> B128 falseDestination: B127 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B132" 
    xhandlers
    flags 
    probability 4599551409817811980
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B128 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B128" "B131" 
    successors "B133" "B134" 
    xhandlers
    flags 
    probability 4601511339784447334
    begin_IR
      LIR
      nr   -1  <|@ instruction [v160|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v161|QWORD = LEA [v153|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v160|QWORD, y: v161|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B132 -> B133 falseDestination: B132 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B135" 
    xhandlers
    flags 
    probability 4599551409817811980
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v162|V128_WORD = H [v155|QWORD[*] + v160|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v154|QWORD[.] + v160|QWORD * 2], input: v162|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v163|QWORD = LEA [v160|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v163|QWORD] destination: B134 -> B135 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" "B133" 
    successors "B136" "B137" 
    xhandlers
    flags 
    probability 4601511339784447334
    begin_IR
      LIR
      nr   -1  <|@ instruction [v164|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v165|QWORD = LEA [v153|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v164|QWORD, y: v165|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B135 -> B136 falseDestination: B135 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B135" 
    successors "B138" 
    xhandlers
    flags 
    probability 4599551409817811980
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v166|V64_WORD = H [v155|QWORD[*] + v164|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v154|QWORD[.] + v164|QWORD * 2], input: v166|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v167|QWORD = LEA [v164|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v167|QWORD] destination: B137 -> B138 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B137" "B136" 
    successors "B139" "B140" 
    xhandlers
    flags 
    probability 4601511339784447334
    begin_IR
      LIR
      nr   -1  <|@ instruction [v168|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v169|QWORD = LEA [v153|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v168|QWORD, y: v169|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B138 -> B139 falseDestination: B138 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B138" 
    successors "B141" 
    xhandlers
    flags 
    probability 4599551409817811980
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v170|V32_WORD = H [v155|QWORD[*] + v168|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction J (address: [v154|QWORD[.] + v168|QWORD * 2], input: v170|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v171|QWORD = LEA [v168|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v171|QWORD] destination: B140 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" "B139" 
    successors "B142" "B143" 
    xhandlers
    flags 
    probability 4601511339784447334
    begin_IR
      LIR
      nr   -1  <|@ instruction [v172|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v173|QWORD = DEC v153|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v172|QWORD, y: v173|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B141 -> B142 falseDestination: B141 -> B143 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B144" 
    xhandlers
    flags 
    probability 4599551409817811980
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v174|DWORD = MOVSX [v155|QWORD[*] + v172|QWORD * 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v154|QWORD[.] + v172|QWORD * 2], y: v174|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B143 -> B144 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B126" "B143" "B142" 
    successors "B145" "B163" 
    xhandlers
    flags 
    probability 4606014939411817830
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v175|QWORD = MOVSXD v129|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v175|QWORD, y: v153|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B144 -> B145 falseDestination: B144 -> B163 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B163"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B164" 
    xhandlers
    flags 
    probability 4601511339784447334
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B163 -> B164 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B164"
    from_bci -1
    to_bci -1
    predecessors "B163" "B161" "B160" 
    successors "B165" "B166" 
    xhandlers
    flags 
    probability 4606014939411817830
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v196|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v197|QWORD = LEA [v196|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v197|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B164 -> B165 falseDestination: B164 -> B166 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B166"
    from_bci -1
    to_bci -1
    predecessors "B164" 
    successors "B167" 
    xhandlers
    flags 
    probability 4605936542213152416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v197|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v196|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v196|QWORD] destination: B166 -> B167 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B167"
    from_bci -1
    to_bci -1
    predecessors "B166" "B165" 
    successors 
    xhandlers
    flags 
    probability 4606014939411817830
    begin_IR
      LIR
      nr   -1  <|@ instruction [v199|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v200|QWORD[.] = MOVE v199|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v201|QWORD = MOV [v130|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v199|QWORD[*]], y: v201|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v199|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v202|DWORD[.] = COMPRESSPOINTER (input: v151|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@2ae4cec4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v199|QWORD[*] + 12], y: v202|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v199|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v200|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B144" 
    xhandlers
    flags 
    probability 4601511339784447334
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B126 -> B144 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B146" "B147" 
    xhandlers
    flags 
    probability 4601511339784447334
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v176|QWORD[.] = LEA [v151|QWORD[.] + v153|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v177|QWORD = SUB (x: v175|QWORD, ~y: v153|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v178|QWORD = LEA [v177|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v178|QWORD, y: v178|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B145 -> B146 falseDestination: B145 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B145" 
    successors "B150" 
    xhandlers
    flags 
    probability 4599551409817811980
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B146 -> B150 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B146" "B149" 
    successors "B151" "B152" 
    xhandlers
    flags 
    probability 4601511339784447334
    begin_IR
      LIR
      nr   -1  <|@ instruction [v182|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v183|QWORD = LEA [v177|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v182|QWORD, y: v183|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B150 -> B151 falseDestination: B150 -> B152 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B150" 
    successors "B153" 
    xhandlers
    flags 
    probability 4599551409817811980
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v184|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v176|QWORD[.] + v182|QWORD * 2], input: v184|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v185|QWORD = LEA [v182|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v185|QWORD] destination: B152 -> B153 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B152" "B151" 
    successors "B154" "B155" 
    xhandlers
    flags 
    probability 4601511339784447334
    begin_IR
      LIR
      nr   -1  <|@ instruction [v186|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v187|QWORD = LEA [v177|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v186|QWORD, y: v187|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B153 -> B154 falseDestination: B153 -> B155 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B153" 
    successors "B156" 
    xhandlers
    flags 
    probability 4599551409817811980
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v188|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v176|QWORD[.] + v186|QWORD * 2], input: v188|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v189|QWORD = LEA [v186|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v189|QWORD] destination: B155 -> B156 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B156"
    from_bci -1
    to_bci -1
    predecessors "B155" "B154" 
    successors "B157" "B158" 
    xhandlers
    flags 
    probability 4601511339784447334
    begin_IR
      LIR
      nr   -1  <|@ instruction [v190|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v191|QWORD = LEA [v177|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v190|QWORD, y: v191|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B156 -> B157 falseDestination: B156 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B158"
    from_bci -1
    to_bci -1
    predecessors "B156" 
    successors "B159" 
    xhandlers
    flags 
    probability 4599551409817811980
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v192|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v176|QWORD[.] + v190|QWORD * 2], input: v192|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v193|QWORD = LEA [v190|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v193|QWORD] destination: B158 -> B159 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B159"
    from_bci -1
    to_bci -1
    predecessors "B158" "B157" 
    successors "B160" "B161" 
    xhandlers
    flags 
    probability 4601511339784447334
    begin_IR
      LIR
      nr   -1  <|@ instruction [v194|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v195|QWORD = DEC v177|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v194|QWORD, y: v195|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B159 -> B160 falseDestination: B159 -> B161 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B161"
    from_bci -1
    to_bci -1
    predecessors "B159" 
    successors "B164" 
    xhandlers
    flags 
    probability 4599551409817811980
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v176|QWORD[.] + v194|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B161 -> B164 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B9" 
    xhandlers
    flags 
    probability 4595510675832045031
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[2|0x2], int[0|0x0], int[1|0x1], int[2|0x2], v5|DWORD, long[16|0x10], long[2|0x2]] destination: B3 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B3" 
    successors "B10" "B43" 
    xhandlers
    flags 
    probability 4595512160119122984
    begin_IR
      LIR
      nr   -1  <|@ instruction [v9|QWORD, v10|DWORD, v11|DWORD, v12|DWORD, v13|DWORD, v14|QWORD, v15|QWORD] = LABEL numbPhis: 7 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9952836455427129 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B29" 
    xhandlers
    flags 
    probability 4595482238906964772
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43]
locals: v0|QWORD[.] v7|QWORD[.] v10|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v0|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v4|DWORD[.] * 8] state [bci:43, 5] <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43]
locals: v0|QWORD[.] v7|QWORD[.] v10|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v0|QWORD[.] - 
>@ <|@ instruction v16|DWORD = MOV [v3|DWORD[.] * 8 + 12] size: DWORD state [bci:43, 5] <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOV [v4|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2ae4cec4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOVSXD v1|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.44783436248413755 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4591637409758675404
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B41" 
    xhandlers
    flags 
    probability 4591637409758675404
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = ADD (x: v10|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v17|DWORD, y: v36|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B40" 
    xhandlers
    flags 
    probability 4591637409758675404
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = INC v36|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v17|DWORD, y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B32 -> B33 falseDestination: B32 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4591637409758675404
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4591567679867720299
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = SUB (x: v16|DWORD, ~y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v1|DWORD, y: v38|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4591498647275674745
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = SUB (x: v17|DWORD, ~y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B109" 
    xhandlers
    flags 
    probability 4591430305009549647
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[*] = MOVE v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[*] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = MOVSXD v2|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v40|QWORD[*] + v19|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v41|QWORD[*] + v10|DWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v42|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v36|DWORD * 2 + 16] y: 46 size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v37|DWORD * 2 + 16] y: 48 size: WORD <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = LEA [v36|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v43|DWORD] destination: B39 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B57" 
    xhandlers
    flags 
    probability 4594480213650448452
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = SUB (x: v49|DWORD, ~y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = NEG v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = MOVSXD v54|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = DEC v55|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v53|DWORD, y: v49|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B51 -> B52 falseDestination: B51 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B58" 
    xhandlers
    flags 
    probability 4589976614023077956
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B54" 
    successors "B59" "B60" 
    xhandlers
    flags 
    probability 4594480213650448452
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v49|DWORD, y: v53|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B58 -> B59 falseDestination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" "B63" 
    xhandlers
    flags 
    probability 4594480213650448452
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v53|DWORD, y: v52|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B60 -> B61 falseDestination: B60 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4594480213650448452
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v55|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4589976614023077956
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[.] = LEA [v7|QWORD[.] + v49|DWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = LEA [v55|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v63|QWORD, y: v63|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B65 -> B66 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" 
    xhandlers
    flags 
    probability 4588129111075663974
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v64|V32_WORD = A od: SIMD<48,48> oe: WORD <|@ <|@
      nr   -1  <|@ instruction J (address: [v62|QWORD[.]], input: v64|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[2|0x2]] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B66" 
    successors "B69" "B70" 
    xhandlers
    flags 
    probability 4589976614023077956
    begin_IR
      LIR
      nr   -1  <|@ instruction [v65|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v65|QWORD, y: v56|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B68 -> B69 falseDestination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" 
    xhandlers
    flags 
    probability 4588129111075663974
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v62|QWORD[.]] y: 48 size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v53|DWORD] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B153" 
    successors "B156" 
    xhandlers
    flags 
    probability 4592504140529706342
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v186|QWORD] destination: B154 -> B156 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B160"
    from_bci -1
    to_bci -1
    predecessors "B159" 
    successors "B164" 
    xhandlers
    flags 
    probability 4592504140529706342
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B160 -> B164 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B157"
    from_bci -1
    to_bci -1
    predecessors "B156" 
    successors "B159" 
    xhandlers
    flags 
    probability 4592504140529706342
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v190|QWORD] destination: B157 -> B159 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B138" 
    successors "B141" 
    xhandlers
    flags 
    probability 4592504140529706342
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v168|QWORD] destination: B139 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B144" 
    xhandlers
    flags 
    probability 4592504140529706342
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B142 -> B144 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B145" 
    successors "B148" 
    xhandlers
    flags 
    probability 4592504140529706342
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v179|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B147 -> B148 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B162"
    from_bci -1
    to_bci -1
    predecessors "B148" 
    successors "B148" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4599551409817811980
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v181|QWORD] destination: B162 -> B148 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B147" "B162" 
    successors "B149" "B162" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4601511339784447334
    begin_IR
      LIR
      nr   -1  <|@ instruction [v180|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v176|QWORD[.] + v180|QWORD * 2], input: v179|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v181|QWORD = LEA [v180|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v181|QWORD, y: v178|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B148 -> B149 falseDestination: B148 -> B162 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B150" 
    successors "B153" 
    xhandlers
    flags 
    probability 4592504140529706342
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v182|QWORD] destination: B151 -> B153 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B130" 
    xhandlers
    flags 
    probability 4592504140529706342
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B129 -> B130 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B168"
    from_bci -1
    to_bci -1
    predecessors "B130" 
    successors "B130" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599551409817811980
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v159|QWORD] destination: B168 -> B130 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" "B168" 
    successors "B131" "B168" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4601511339784447334
    begin_IR
      LIR
      nr   -1  <|@ instruction [v157|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v158|V256_WORD = H [v155|QWORD[*] + v157|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v154|QWORD[.] + v157|QWORD * 2], input: v158|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v159|QWORD = LEA [v157|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v159|QWORD, y: v156|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B130 -> B131 falseDestination: B130 -> B168 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B135" 
    xhandlers
    flags 
    probability 4592504140529706342
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v160|QWORD] destination: B133 -> B135 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B135" 
    successors "B138" 
    xhandlers
    flags 
    probability 4592504140529706342
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v164|QWORD] destination: B136 -> B138 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B148" 
    successors "B150" 
    xhandlers
    flags 
    probability 4592504140529706342
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v181|QWORD] destination: B149 -> B150 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B130" 
    successors "B132" 
    xhandlers
    flags 
    probability 4592504140529706342
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v159|QWORD] destination: B131 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B111" "B112" 
    xhandlers
    flags 
    probability 4591083073830437833
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v129|DWORD, y: v129|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B110 -> B111 falseDestination: B110 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B113" "B114" 
    xhandlers
    flags 
    probability 4591083073830437833
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v132|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v133|QWORD = LEA [v132|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v133|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B112 -> B113 falseDestination: B112 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B115" 
    xhandlers
    flags 
    probability 4591018887298765104
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v133|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v132|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v132|QWORD] destination: B114 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" "B113" 
    successors 
    xhandlers
    flags 
    probability 4591083073830437833
    begin_IR
      LIR
      nr   -1  <|@ instruction [v135|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v136|QWORD[.] = MOVE v135|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v137|QWORD = MOV [v130|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v135|QWORD[*]], y: v137|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v135|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v135|QWORD[*] + 12] y: -559030611 size: DWORD c: NarrowOop[char[0]{}] <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v135|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v136|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B124" 
    xhandlers
    flags 
    probability 4590936196556398058
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B123 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B123" "B121" 
    successors "B125" 
    xhandlers
    flags 
    probability 4591500656386789040
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v149|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v149|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v129|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8]
stack: v129|DWORD 
locals: v0|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:8] <|@ <|@
      nr   -1  <|@ instruction v150|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v150|QWORD[.]] destination: B124 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B28" 
    xhandlers
    flags 
    probability 4590319868800513148
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v17|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4590319868800513148
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590263314319139666
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = SUB (x: v16|DWORD, ~y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v1|DWORD, y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4590207325382579919
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = SUB (x: v17|DWORD, ~y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4590151896335385769
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[*] = MOVE v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[*] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOVSXD v5|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v22|QWORD[*] + v19|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v23|QWORD[*] + v10|DWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v24|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v13|DWORD * 2 + 16] y: 46 size: WORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = INC v13|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = ADD (x: v1|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v26|DWORD, y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4590097021578663561
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = SUB (x: v2|DWORD, ~y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v27|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4590042695569508575
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = SUB (x: v16|DWORD, ~y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v26|DWORD, y: v28|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B27" 
    xhandlers
    flags 
    probability 4589988912820445138
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = SUB (x: v17|DWORD, ~y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v25|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B109" 
    xhandlers
    flags 
    probability 4589935667898872336
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[*] = MOVE v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[*] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = MOVSXD v26|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = MOVSXD v25|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = MOVSXD v27|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v30|QWORD[*] + v32|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v31|QWORD[*] + v33|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v34|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = ADD (x: v25|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v35|DWORD] destination: B27 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B71" 
    xhandlers
    flags 
    probability 4589976614023077956
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v53|DWORD] destination: B64 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B56" 
    xhandlers
    flags 
    probability 4589976614023077956
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = ADD (x: v56|QWORD, y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = MOV v52|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v58|QWORD, y: v57|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B52 -> B53 falseDestination: B52 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4589976614023077956
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v52|DWORD, y: v49|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B53 -> B54 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" 
    xhandlers
    flags 
    probability 4589976614023077956
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B54 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" 
    xhandlers
    flags 
    probability 4580969414768336964
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" 
    xhandlers
    flags 
    probability 4580969414768336964
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v53|DWORD] destination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B165"
    from_bci -1
    to_bci -1
    predecessors "B164" 
    successors "B167" 
    xhandlers
    flags 
    probability 4576171042495639949
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v207|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v207|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8]
stack: v129|DWORD 
locals: v0|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:8] <|@ <|@
      nr   -1  <|@ instruction v198|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v198|QWORD[.]] destination: B165 -> B167 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B79" 
    xhandlers
    flags 
    probability 4575859268439552651
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-180065|0xfffffffffffd409f]] destination: B72 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B72" "B78" "B76" "B74" 
    successors 
    xhandlers
    flags 
    probability 4584796352382670340
    begin_IR
      LIR
      nr   -1  <|@ instruction [v70|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v70|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 256]
locals: v0|QWORD[.] v7|QWORD[.] v66|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:256, 5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B79" 
    xhandlers
    flags 
    probability 4575812211972967659
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-180065|0xfffffffffffd409f]] destination: B74 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B79" 
    xhandlers
    flags 
    probability 4575765626071048516
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-180065|0xfffffffffffd409f]] destination: B76 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B79" 
    xhandlers
    flags 
    probability 4575719506028148565
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-180065|0xfffffffffffd409f]] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B124" 
    xhandlers
    flags 
    probability 4575669300424181299
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B121 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B85" 
    xhandlers
    flags 
    probability 4575429616257440223
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B46 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B46" 
    successors "B86" "B176" 
    xhandlers
    flags 
    probability 4576022210371686731
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
locals: v0|QWORD[.] v7|QWORD[.] v47|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v0|QWORD[.] - 
>@ <|@ instruction v79|DWORD = MOV [v3|DWORD[.] * 8 + 12] size: DWORD state [bci:283, 5] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v79|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B85 -> B86 falseDestination: B85 -> B176 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B87" "B175" 
    xhandlers
    flags 
    probability 4576022210371686731
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
locals: v0|QWORD[.] v7|QWORD[.] v47|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v0|QWORD[.] - 
>@ <|@ instruction v80|DWORD = MOV [v4|DWORD[.] * 8 + 12] size: DWORD state [bci:283, 5] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v80|DWORD, y: v47|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B86 -> B87 falseDestination: B86 -> B175 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B88" "B174" 
    xhandlers
    flags 
    probability 4576022210371686731
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v80|DWORD, y: v48|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B87 -> B88 falseDestination: B87 -> B174 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B89" "B90" 
    xhandlers
    flags 
    probability 4576022210371686731
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B88 -> B89 falseDestination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" "B173" 
    xhandlers
    flags 
    probability 4576022210371686731
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v81|DWORD = DEC v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v82|DWORD = ADD (x: v81|DWORD, y: v49|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v80|DWORD, y: v82|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B90 -> B91 falseDestination: B90 -> B173 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B92" "B93" 
    xhandlers
    flags 
    probability 4576022210371686731
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2ae4cec4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v84|DWORD = MOVSX [v83|QWORD[.] + v1|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v50|QWORD + v4|DWORD[.] * 8], y: v84|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV [v51|QWORD + v4|DWORD[.] * 8] y: 46 size: WORD <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = SUB (x: v79|DWORD, ~y: v81|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = INC v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v86|DWORD, y: v85|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B91 -> B92 falseDestination: B91 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B94" "B96" 
    xhandlers
    flags 
    probability 4575973524485780398
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = SUB (x: v80|DWORD, ~y: v81|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v49|DWORD, y: v87|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B93 -> B94 falseDestination: B93 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B97" "B100" 
    xhandlers
    flags 
    probability 4575925325458733128
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v88|QWORD[*] = MOVE v83|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v89|QWORD[*] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v90|QWORD = MOVSXD v86|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v91|QWORD = MOVSXD v81|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v88|QWORD[*] + v90|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v89|QWORD[*] + v49|DWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v91|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v82|DWORD * 2 + 16] y: 69 size: WORD <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = INC v82|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9016620498614958 condition: < trueDestination: B96 -> B97 falseDestination: B96 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B98" "B99" 
    xhandlers
    flags 
    probability 4575254950392379555
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v80|DWORD, y: v92|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B97 -> B98 falseDestination: B97 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B101" 
    xhandlers
    flags 
    probability 4575254950392379555
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v92|DWORD * 2 + 16] y: 45 size: WORD <|@ <|@
      nr   -1  <|@ instruction v93|DWORD = LEA [v82|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v95|DWORD = SUB (x: v94|DWORD, ~y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v93|DWORD, v95|DWORD] destination: B98 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B98" "B100" 
    successors "B102" "B171" 
    xhandlers
    flags 
    probability 4575925325458733128
    begin_IR
      LIR
      nr   -1  <|@ instruction [v97|DWORD, v98|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v80|DWORD, y: v97|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B101 -> B102 falseDestination: B101 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B103" "B104" 
    xhandlers
    flags 
    probability 4575925325458733128
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = INC v97|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v98|DWORD y: 10 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9778393351800554 condition: < trueDestination: B102 -> B103 falseDestination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B109" 
    xhandlers
    flags 
    probability 4575819581332911971
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v100|DWORD = LEA [v98|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + v97|DWORD * 2 + 16], y: v100|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v99|DWORD] destination: B103 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B42" 
    xhandlers
    flags 
    probability 4562064649313824873
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-154209|0xfffffffffffda59f]] destination: B34 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" "B41" "B40" "B13" "B34" "B17" "B15" "B38" "B36" 
    successors 
    xhandlers
    flags 
    probability 4572651257581733127
    begin_IR
      LIR
      nr   -1  <|@ instruction [v44|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v44|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43]
locals: v0|QWORD[.] v7|QWORD[.] v10|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:43, 5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B42" 
    xhandlers
    flags 
    probability 4561975395053402339
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-154209|0xfffffffffffda59f]] destination: B36 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B42" 
    xhandlers
    flags 
    probability 4561887033335584030
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-154209|0xfffffffffffda59f]] destination: B38 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B115" 
    xhandlers
    flags 
    probability 4561355099325680782
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v208|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v208|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8]
stack: v129|DWORD 
locals: v0|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:8] <|@ <|@
      nr   -1  <|@ instruction v134|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v134|QWORD[.]] destination: B113 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B85" 
    xhandlers
    flags 
    probability 4560799887891645879
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B44" 
    xhandlers
    flags 
    probability 4560799053584073665
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = LEA [v15|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v9|QWORD, v10|DWORD, v11|DWORD, v12|DWORD, v14|QWORD, v45|QWORD] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B101" 
    xhandlers
    flags 
    probability 4560647056204873574
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = DEC v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v92|DWORD, v96|DWORD] destination: B100 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B42" 
    xhandlers
    flags 
    probability 4560378196887377184
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-128865|0xfffffffffffe089f]] destination: B13 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B42" 
    xhandlers
    flags 
    probability 4560305807151219127
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-128865|0xfffffffffffe089f]] destination: B15 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B42" 
    xhandlers
    flags 
    probability 4560234141312422651
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-128865|0xfffffffffffe089f]] destination: B17 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B26" 
    xhandlers
    flags 
    probability 4560163192132014139
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B19 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" "B23" "B25" 
    successors 
    xhandlers
    flags 
    probability 4569065732494742321
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -143201 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:925) [bci: 145]
locals: v0|QWORD[.] v7|QWORD[.] v25|DWORD v5|DWORD - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:145, 5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B26" 
    xhandlers
    flags 
    probability 4560092952443409712
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B21 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    probability 4560023415151691330
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 4559954573232890131
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4552763695007289344
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction CMP [v4|DWORD[.] * 8 + 12] y: 0 size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4552763695007289344
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v4|DWORD[.] * 8 + 16] y: 45 size: WORD <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8239147472715149 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B44" 
    xhandlers
    flags 
    probability 4551243785039465259
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[3|0x3], int[1|0x1], int[2|0x2], int[3|0x3], long[18|0x12], long[20|0x14]] destination: B7 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B105" "B170" 
    xhandlers
    flags 
    probability 4550899648069384485
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v80|DWORD, y: v99|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B104 -> B105 falseDestination: B104 -> B170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B106" "B107" 
    xhandlers
    flags 
    probability 4550899648069384485
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v101|DWORD = LEA [v97|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v98|DWORD y: 100 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.625 condition: < trueDestination: B105 -> B106 falseDestination: B105 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B109" 
    xhandlers
    flags 
    probability 4548087954455152494
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v98|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v102|DWORD = MOVE input: int[1717986919|0x66666667] <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: v102|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v103|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v104|DWORD = SAR v103|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = LEA [v104|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + v97|DWORD * 2 + 16], y: v105|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = SHL v104|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v107|DWORD = SHL v104|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v108|DWORD = ADD (x: v106|DWORD, y: v107|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v109|DWORD = SUB (x: v98|DWORD, ~y: v108|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v110|DWORD = LEA [v109|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + v99|DWORD * 2 + 16], y: v110|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v101|DWORD] destination: B106 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B95" 
    xhandlers
    flags 
    probability 4545860217785470586
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B92 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B92" "B94" 
    successors 
    xhandlers
    flags 
    probability 4550332658445861029
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -199521 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:945) [bci: 306]
locals: v0|QWORD[.] v7|QWORD[.] v49|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:306, 5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B95" 
    xhandlers
    flags 
    probability 4545797899851510480
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B94 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" "B169" 
    xhandlers
    flags 
    probability 4544704142428875484
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v80|DWORD, y: v101|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B107 -> B108 falseDestination: B107 -> B169 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B109" 
    xhandlers
    flags 
    probability 4544704142428875484
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v98|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v111|DWORD = MOVE input: int[1374389535|0x51eb851f] <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: v111|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v113|DWORD = SAR v112|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v114|DWORD = LEA [v113|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + v97|DWORD * 2 + 16], y: v114|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v115|DWORD = IMUL v113|DWORD y: 100 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v116|DWORD = SUB (x: v98|DWORD, ~y: v115|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v116|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v117|DWORD = MOVE input: int[1717986919|0x66666667] <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: v117|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v118|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v119|DWORD = SAR v118|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v120|DWORD = SHR v116|DWORD y: 31 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v121|DWORD = ADD (x: v119|DWORD, y: v120|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v122|DWORD = LEA [v121|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + v99|DWORD * 2 + 16], y: v122|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = SHL v121|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v124|DWORD = SHL v121|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v125|DWORD = ADD (x: v123|DWORD, y: v124|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v126|DWORD = SUB (x: v116|DWORD, ~y: v125|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v127|DWORD = LEA [v126|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + v101|DWORD * 2 + 16], y: v127|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v128|DWORD = LEA [v97|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v128|DWORD] destination: B108 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4541204464633385812
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = INC v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[3|0x3], int[1|0x1], int[2|0x2], int[3|0x3], v8|DWORD, long[18|0x12], long[4|0x4]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B177" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-190995|0xfffffffffffd15ed]] destination: B89 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B177"
    from_bci -1
    to_bci -1
    predecessors "B176" "B89" "B175" "B174" "B173" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v204|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v204|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
locals: v0|QWORD[.] v7|QWORD[.] v47|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:283, 5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B173"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B177" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-202779|0xfffffffffffce7e5]] destination: B173 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-160795|0xfffffffffffd8be5]] destination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B169"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B172" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-218139|0xfffffffffffcabe5]] destination: B169 -> B172 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B172"
    from_bci -1
    to_bci -1
    predecessors "B171" "B170" "B169" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v203|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v203|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 396]
locals: - v7|QWORD[.] v97|DWORD v98|DWORD - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:396, 5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-168211|0xfffffffffffd6eed], Object[null]] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B59" "B56" "B61" "B55" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v60|DWORD, v61|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v61|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:936) [bci: 229]
locals: v0|QWORD[.] v7|QWORD[.] v49|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:229, 5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-224787|0xfffffffffffc91ed]] destination: B117 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B111" "B117" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v140|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v140|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8]
stack: v129|DWORD 
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:8] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B83" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-164123|0xfffffffffffd7ee5]] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" "B81" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v78|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v78|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
locals: v0|QWORD[.] v7|QWORD[.] v47|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:197, 5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v206|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@550168632] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-168987|0xfffffffffffd6be5], v206|QWORD[.]] destination: B55 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v205|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@550168632] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-168987|0xfffffffffffd6be5], v205|QWORD[.]] destination: B56 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B83" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-166171|0xfffffffffffd76e5]] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B174"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B177" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-189979|0xfffffffffffd19e5]] destination: B174 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B175"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B177" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-188443|0xfffffffffffd1fe5]] destination: B175 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B176"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B177" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-185115|0xfffffffffffd2ce5]] destination: B176 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B170"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B172" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-236059|0xfffffffffffc65e5]] destination: B170 -> B172 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -225051 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-156947|0xfffffffffffd9aed]] destination: B30 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-222483|0xfffffffffffc9aed]] destination: B111 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -220699 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:953) [bci: 363]
locals: v0|QWORD[.] v7|QWORD[.] v92|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:363, 5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B171"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B172" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-236571|0xfffffffffffc63e5]] destination: B171 -> B172 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-158491|0xfffffffffffd94e5]] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-167955|0xfffffffffffd6fed], Object[null]] destination: B59 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-132891|0xfffffffffffdf8e5]] destination: B28 -> B42 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_0       
     2: getfield      #3          // buffer:char[]
     5: invokespecial #11         // getChars:(char[])int
     8: istore_1      
     9: new           #14         // java.lang.String
    12: dup           
    13: aload_0       
    14: getfield      #3          // buffer:char[]
    17: iconst_0      
    18: iload_1       
    19: invokespecial #12         // java.lang.String.<init>:(char[], int, int)void
    22: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@61e4165f slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr    8  <|@ instruction r11|DWORD = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   10  <|@ instruction stack:28|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction r8|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   14  <|@ instruction r9|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   16  <|@ instruction stack:32|DWORD[.] = MOVE r9|DWORD[.] moveKind: DWORD <|@ <|@
      nr   18  <|@ instruction rcx|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   20  <|@ instruction rdi|DWORD = MOVZXB [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   22  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2ae4cec4 encoding: base: 0 shift: 3 <|@ <|@
      nr   24  <|@ instruction stack:40|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 0.9997660380889991 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607180311458467003
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction CMP rcx|DWORD y: 1 size: DWORD <|@ <|@
      nr   34  <|@ instruction BRANCH trueDestinationProbability: 0.8239147472715149 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B44" 
    xhandlers
    flags 
    probability 4605594647573089601
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ instruction r14|QWORD = MOVE input: long[18|0x12] <|@ <|@
      nr   40  <|@ instruction r13|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   42  <|@ instruction rbp|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   44  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   46  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   48  <|@ instruction stack:48|QWORD = MOVE input: long[2|0x2] <|@ <|@
      nr   50  <|@ instruction JUMP ~[] destination: B2 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B7" "B43" "B2" 
    successors "B45" "B84" 
    xhandlers
    flags 
    probability 4605603864145910071
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL numbPhis: 6 align: false label: ? <|@ <|@
      nr  514  <|@ instruction CMP rcx|DWORD y: 1 size: DWORD <|@ <|@
      nr  516  <|@ instruction BRANCH trueDestinationProbability: 0.9989929363705994 condition: < trueDestination: B44 -> B45 falseDestination: B44 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4605596383028117030
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  520  <|@ instruction CMP rcx|DWORD y: -2 size: DWORD <|@ <|@
      nr  522  <|@ instruction BRANCH trueDestinationProbability: 0.009242564066160308 condition: < trueDestination: B45 -> B46 falseDestination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B82" 
    xhandlers
    flags 
    probability 4605527792449181426
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  534  <|@ st <@st|@reference-map: [rbx:0, rsi:0, r8:0, r9:0, stack:64]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
locals: rsi|QWORD[.] rbx|QWORD[.] rdx|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rdi|DWORD = MOV [r9|DWORD[.] * 8 + 12] size: DWORD state [bci:197, 5] <|@ <|@
      nr  536  <|@ instruction CMP (x: rdi|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  538  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B47 -> B48 falseDestination: B47 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B81" 
    xhandlers
    flags 
    probability 4605527792449181426
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  542  <|@ instruction CMP (x: rdi|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  544  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B48 -> B49 falseDestination: B48 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605527792449181426
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  548  <|@ instruction MOV [r13|QWORD + r9|DWORD[.] * 8] y: 48 size: WORD <|@ <|@
      nr  550  <|@ instruction MOV [r14|QWORD + r9|DWORD[.] * 8] y: 46 size: WORD <|@ <|@
      nr  552  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  554  <|@ instruction BRANCH trueDestinationProbability: 0.8193763792164618 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B71" 
    xhandlers
    flags 
    probability 4604199744109203169
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  558  <|@ instruction stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  560  <|@ instruction r9|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  562  <|@ instruction JUMP ~[] destination: B50 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B50" "B64" "B69" "B70" 
    successors "B72" "B73" 
    xhandlers
    flags 
    probability 4605527792449181426
    begin_IR
      LIR
      nr  732  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  734  <|@ st <@st|@reference-map: [rbx:0, r8:0, stack:24, stack:64]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 256]
locals: stack:72|QWORD[.] rbx|QWORD[.] r9|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: stack:72|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r8|DWORD[.] * 8] state [bci:256, 5] <|@ <|@
      nr  736  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  738  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B71 -> B72 falseDestination: B71 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    probability 4605454266720142376
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  748  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  750  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B73 -> B74 falseDestination: B73 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" "B77" 
    xhandlers
    flags 
    probability 4605381476248393716
    begin_IR
      LIR
      nr  758  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  760  <|@ instruction rsi|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  762  <|@ instruction rsi|DWORD = SUB (x: rsi|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  764  <|@ instruction CMP (x: r10|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  766  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B75 -> B76 falseDestination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B78" "B80" 
    xhandlers
    flags 
    probability 4605309413681362543
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  776  <|@ instruction rdi|DWORD = SUB (x: rdi|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  778  <|@ instruction CMP (x: r9|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  780  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B77 -> B78 falseDestination: B77 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B109" 
    xhandlers
    flags 
    probability 4605238071740001682
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  798  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2ae4cec4 encoding: base: 0 shift: 3 <|@ <|@
      nr  800  <|@ instruction r8|QWORD[*] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  802  <|@ instruction rbx|QWORD[*] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  804  <|@ instruction rdi|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  806  <|@ instruction rsi|QWORD = MOVSXD r9|DWORD size: QWORD <|@ <|@
      nr  808  <|@ instruction rdx|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  810  <|@ instruction rdi|QWORD = LEA [r8|QWORD[*] + rdi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  812  <|@ instruction rsi|QWORD = LEA [rbx|QWORD[*] + rsi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  814  <|@ instruction stack:88|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  816  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  818  <|@ instruction r9|DWORD = ADD (x: stack:88|DWORD, y: stack:28|DWORD) size: DWORD <|@ <|@
      nr  820  <|@ instruction r13|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  822  <|@ instruction r9|DWORD[.] = MOVE stack:32|DWORD[.] moveKind: DWORD <|@ <|@
      nr  824  <|@ instruction JUMP ~[] destination: B80 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B27" "B80" "B103" "B106" "B108" "B39" 
    successors "B110" "B116" 
    xhandlers
    flags 
    probability 4606817271057726943
    begin_IR
      LIR
      nr 1144  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1146  <|@ st <@st|@reference-map: [r9:0, stack:24, stack:64]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8]
stack: r13|DWORD 
locals: stack:72|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r9|DWORD[.] * 8] state [bci:8] <|@ <|@
      nr 1148  <|@ instruction r14|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr 1150  <|@ instruction CMP r13|DWORD y: 1 size: DWORD <|@ <|@
      nr 1152  <|@ instruction BRANCH trueDestinationProbability: 0.09284041465770032 condition: < trueDestination: B109 -> B110 falseDestination: B109 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B117" "B119" 
    xhandlers
    flags 
    probability 4606014939411817830
    begin_IR
      LIR
      nr 1218  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1220  <|@ instruction r10|DWORD = MOV [r9|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr 1222  <|@ instruction rax|DWORD = SUB (x: r10|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr 1224  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 1226  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B116 -> B117 falseDestination: B116 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" "B123" 
    xhandlers
    flags 
    probability 4606014939411817830
    begin_IR
      LIR
      nr 1242  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1244  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr 1246  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr 1248  <|@ instruction CMP r13|DWORD y: 16777215 size: DWORD <|@ <|@
      nr 1250  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B119 -> B120 falseDestination: B119 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B121" "B122" 
    xhandlers
    flags 
    probability 4605230967425163689
    begin_IR
      LIR
      nr 1252  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1254  <|@ instruction rdx|DWORD = SHL r13|DWORD size: DWORD <|@ <|@
      nr 1256  <|@ instruction rdx|DWORD = LEA [rdx|DWORD + 23] size: DWORD <|@ <|@
      nr 1258  <|@ instruction rdx|DWORD = AND rdx|DWORD y: -8 size: DWORD <|@ <|@
      nr 1260  <|@ instruction rdx|QWORD = MOVSXD rdx|DWORD size: QWORD <|@ <|@
      nr 1262  <|@ instruction rcx|QWORD = ADD (x: rdx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr 1264  <|@ instruction CMP (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1266  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B120 -> B121 falseDestination: B120 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B125" 
    xhandlers
    flags 
    probability 4605160409946364816
    begin_IR
      LIR
      nr 1272  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1274  <|@ instruction MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD <|@ <|@
      nr 1276  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr 1278  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr 1280  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr 1282  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr 1284  <|@ instruction MOV (x: [rax|QWORD + 12], y: r13|DWORD) size: DWORD <|@ <|@
      nr 1286  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1288  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr 1290  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr 1292  <|@ instruction r14|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1294  <|@ instruction JUMP ~[] destination: B122 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B122" "B124" 
    successors "B126" "B127" 
    xhandlers
    flags 
    probability 4606014939411817830
    begin_IR
      LIR
      nr 1314  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1316  <|@ instruction CMP (x: r13|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr 1318  <|@ instruction rsi|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: r14|DWORD) condition: > <|@ <|@
      nr 1320  <|@ instruction rsi|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr 1322  <|@ instruction CMP rsi|QWORD y: 1 size: QWORD <|@ <|@
      nr 1324  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B125 -> B126 falseDestination: B125 -> B127 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B128" "B129" 
    xhandlers
    flags 
    probability 4601511339784447334
    begin_IR
      LIR
      nr 1330  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1332  <|@ instruction r9|DWORD[.] = MOVE stack:32|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1334  <|@ instruction rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr 1336  <|@ instruction rcx|QWORD[*] = LEA [r9|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr 1338  <|@ instruction r10|QWORD = LEA [rsi|QWORD - 16] size: QWORD <|@ <|@
      nr 1340  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1342  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B127 -> B128 falseDestination: B127 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B132" 
    xhandlers
    flags 
    probability 4599551409817811980
    begin_IR
      LIR
      nr 1344  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1346  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1348  <|@ instruction JUMP ~[] destination: B128 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B128" "B131" 
    successors "B133" "B134" 
    xhandlers
    flags 
    probability 4601511339784447334
    begin_IR
      LIR
      nr 1372  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1374  <|@ instruction r10|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr 1376  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1378  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B132 -> B133 falseDestination: B132 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B135" 
    xhandlers
    flags 
    probability 4599551409817811980
    begin_IR
      LIR
      nr 1384  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1386  <|@ instruction xmm0|V128_WORD = H [rcx|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr 1388  <|@ instruction J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr 1390  <|@ instruction r10|QWORD = LEA [r11|QWORD + 8] size: QWORD <|@ <|@
      nr 1392  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 1394  <|@ instruction JUMP ~[] destination: B134 -> B135 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" "B133" 
    successors "B136" "B137" 
    xhandlers
    flags 
    probability 4601511339784447334
    begin_IR
      LIR
      nr 1396  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1398  <|@ instruction r10|QWORD = LEA [rsi|QWORD - 4] size: QWORD <|@ <|@
      nr 1400  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1402  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B135 -> B136 falseDestination: B135 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B135" 
    successors "B138" 
    xhandlers
    flags 
    probability 4599551409817811980
    begin_IR
      LIR
      nr 1408  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1410  <|@ instruction xmm0|V64_WORD = H [rcx|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr 1412  <|@ instruction J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr 1414  <|@ instruction r10|QWORD = LEA [r11|QWORD + 4] size: QWORD <|@ <|@
      nr 1416  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 1418  <|@ instruction JUMP ~[] destination: B137 -> B138 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B137" "B136" 
    successors "B139" "B140" 
    xhandlers
    flags 
    probability 4601511339784447334
    begin_IR
      LIR
      nr 1420  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1422  <|@ instruction r10|QWORD = LEA [rsi|QWORD - 2] size: QWORD <|@ <|@
      nr 1424  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1426  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B138 -> B139 falseDestination: B138 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B138" 
    successors "B141" 
    xhandlers
    flags 
    probability 4599551409817811980
    begin_IR
      LIR
      nr 1432  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1434  <|@ instruction xmm0|V32_WORD = H [rcx|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr 1436  <|@ instruction J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr 1438  <|@ instruction r10|QWORD = LEA [r11|QWORD + 2] size: QWORD <|@ <|@
      nr 1440  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 1442  <|@ instruction JUMP ~[] destination: B140 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" "B139" 
    successors "B142" "B143" 
    xhandlers
    flags 
    probability 4601511339784447334
    begin_IR
      LIR
      nr 1444  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1446  <|@ instruction r10|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr 1448  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1450  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B141 -> B142 falseDestination: B141 -> B143 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B144" 
    xhandlers
    flags 
    probability 4599551409817811980
    begin_IR
      LIR
      nr 1456  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1458  <|@ instruction rcx|DWORD = MOVSX [rcx|QWORD[*] + r11|QWORD * 2] size: DWORD <|@ <|@
      nr 1460  <|@ instruction MOV (x: [rdx|QWORD[.] + r11|QWORD * 2], y: rcx|DWORD) size: WORD <|@ <|@
      nr 1462  <|@ instruction JUMP ~[] destination: B143 -> B144 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B126" "B143" "B142" 
    successors "B145" "B163" 
    xhandlers
    flags 
    probability 4606014939411817830
    begin_IR
      LIR
      nr 1464  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1466  <|@ instruction rdx|QWORD = MOVSXD r13|DWORD size: QWORD <|@ <|@
      nr 1468  <|@ instruction CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1470  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B144 -> B145 falseDestination: B144 -> B163 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B163"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B164" 
    xhandlers
    flags 
    probability 4601511339784447334
    begin_IR
      LIR
      nr 1606  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1608  <|@ instruction JUMP ~[] destination: B163 -> B164 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B164"
    from_bci -1
    to_bci -1
    predecessors "B163" "B161" "B160" 
    successors "B165" "B166" 
    xhandlers
    flags 
    probability 4606014939411817830
    begin_IR
      LIR
      nr 1610  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1612  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr 1614  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr 1616  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr 1618  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B164 -> B165 falseDestination: B164 -> B166 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B166"
    from_bci -1
    to_bci -1
    predecessors "B164" 
    successors "B167" 
    xhandlers
    flags 
    probability 4605936542213152416
    begin_IR
      LIR
      nr 1640  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1642  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1644  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0 <|@ <|@
      nr 1646  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 1648  <|@ instruction r14|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr 1650  <|@ instruction JUMP ~[] destination: B166 -> B167 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B167"
    from_bci -1
    to_bci -1
    predecessors "B166" "B165" 
    successors 
    xhandlers
    flags 
    probability 4606014939411817830
    begin_IR
      LIR
      nr 1652  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1654  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1656  <|@ instruction rcx|QWORD = MOV [r14|QWORD + 168] size: QWORD <|@ <|@
      nr 1658  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD <|@ <|@
      nr 1660  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr 1662  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@2ae4cec4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1664  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr 1666  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr 1668  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1670  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B144" 
    xhandlers
    flags 
    probability 4601511339784447334
    begin_IR
      LIR
      nr 1326  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1328  <|@ instruction JUMP ~[] destination: B126 -> B144 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B146" "B147" 
    xhandlers
    flags 
    probability 4601511339784447334
    begin_IR
      LIR
      nr 1472  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1474  <|@ instruction rcx|QWORD[.] = LEA [rax|QWORD[.] + rsi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr 1476  <|@ instruction rdx|QWORD = SUB (x: rdx|QWORD, ~y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1478  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 16] size: QWORD <|@ <|@
      nr 1480  <|@ instruction TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1482  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B145 -> B146 falseDestination: B145 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B145" 
    successors "B150" 
    xhandlers
    flags 
    probability 4599551409817811980
    begin_IR
      LIR
      nr 1484  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1486  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1488  <|@ instruction JUMP ~[] destination: B146 -> B150 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B146" "B149" 
    successors "B151" "B152" 
    xhandlers
    flags 
    probability 4601511339784447334
    begin_IR
      LIR
      nr 1512  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1514  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr 1516  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1518  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B150 -> B151 falseDestination: B150 -> B152 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B150" 
    successors "B153" 
    xhandlers
    flags 
    probability 4599551409817811980
    begin_IR
      LIR
      nr 1524  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1526  <|@ instruction xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr 1528  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr 1530  <|@ instruction rsi|QWORD = LEA [r10|QWORD + 8] size: QWORD <|@ <|@
      nr 1532  <|@ instruction r10|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 1534  <|@ instruction JUMP ~[] destination: B152 -> B153 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B152" "B151" 
    successors "B154" "B155" 
    xhandlers
    flags 
    probability 4601511339784447334
    begin_IR
      LIR
      nr 1536  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1538  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 4] size: QWORD <|@ <|@
      nr 1540  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1542  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B153 -> B154 falseDestination: B153 -> B155 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B153" 
    successors "B156" 
    xhandlers
    flags 
    probability 4599551409817811980
    begin_IR
      LIR
      nr 1548  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1550  <|@ instruction xmm0|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr 1552  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr 1554  <|@ instruction rsi|QWORD = LEA [r10|QWORD + 4] size: QWORD <|@ <|@
      nr 1556  <|@ instruction r10|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 1558  <|@ instruction JUMP ~[] destination: B155 -> B156 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B156"
    from_bci -1
    to_bci -1
    predecessors "B155" "B154" 
    successors "B157" "B158" 
    xhandlers
    flags 
    probability 4601511339784447334
    begin_IR
      LIR
      nr 1560  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1562  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 2] size: QWORD <|@ <|@
      nr 1564  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1566  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B156 -> B157 falseDestination: B156 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B158"
    from_bci -1
    to_bci -1
    predecessors "B156" 
    successors "B159" 
    xhandlers
    flags 
    probability 4599551409817811980
    begin_IR
      LIR
      nr 1572  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1574  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr 1576  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr 1578  <|@ instruction rsi|QWORD = LEA [r10|QWORD + 2] size: QWORD <|@ <|@
      nr 1580  <|@ instruction r10|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 1582  <|@ instruction JUMP ~[] destination: B158 -> B159 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B159"
    from_bci -1
    to_bci -1
    predecessors "B158" "B157" 
    successors "B160" "B161" 
    xhandlers
    flags 
    probability 4601511339784447334
    begin_IR
      LIR
      nr 1584  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1586  <|@ instruction rdx|QWORD = DEC rdx|QWORD size: QWORD <|@ <|@
      nr 1588  <|@ instruction CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1590  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B159 -> B160 falseDestination: B159 -> B161 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B161"
    from_bci -1
    to_bci -1
    predecessors "B159" 
    successors "B164" 
    xhandlers
    flags 
    probability 4599551409817811980
    begin_IR
      LIR
      nr 1596  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1598  <|@ instruction MOV (x: [rcx|QWORD[.] + r10|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr 1600  <|@ instruction JUMP ~[] destination: B161 -> B164 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B9" 
    xhandlers
    flags 
    probability 4595510675832045031
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ instruction rdi|QWORD = MOVE input: long[2|0x2] <|@ <|@
      nr   56  <|@ instruction r14|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   58  <|@ instruction r13|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ instruction rbp|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   62  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   64  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   66  <|@ instruction stack:56|QWORD = MOVE input: long[2|0x2] <|@ <|@
      nr   68  <|@ instruction JUMP ~[] destination: B3 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B3" 
    successors "B10" "B43" 
    xhandlers
    flags 
    probability 4595512160119122984
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL numbPhis: 7 align: false label: ? <|@ <|@
      nr  146  <|@ instruction CMP rcx|DWORD y: 8 size: DWORD <|@ <|@
      nr  148  <|@ instruction BRANCH trueDestinationProbability: 0.9952836455427129 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B29" 
    xhandlers
    flags 
    probability 4595482238906964772
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  152  <|@ st <@st|@reference-map: [rbx:0, rsi:0, r8:0, r9:0, stack:56, stack:64]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43]
locals: rsi|QWORD[.] rbx|QWORD[.] rdx|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: rsi|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r9|DWORD[.] * 8] state [bci:43, 5] <|@ <|@
      nr  154  <|@ st <@st|@reference-map: [rbx:0, rsi:0, r8:0, r9:0, stack:56, stack:64]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43]
locals: rsi|QWORD[.] rbx|QWORD[.] rdx|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:43, 5] <|@ <|@
      nr  156  <|@ instruction rbp|DWORD = MOV [r9|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  158  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2ae4cec4 encoding: base: 0 shift: 3 <|@ <|@
      nr  160  <|@ instruction rdi|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  162  <|@ instruction CMP (x: r11|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  164  <|@ instruction BRANCH trueDestinationProbability: 0.44783436248413755 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4591637409758675404
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  348  <|@ instruction CMP (x: rcx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  350  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B41" 
    xhandlers
    flags 
    probability 4591637409758675404
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  362  <|@ instruction rcx|DWORD = ADD (x: rdx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  364  <|@ instruction CMP (x: rbp|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  366  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B40" 
    xhandlers
    flags 
    probability 4591637409758675404
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  370  <|@ instruction r13|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  372  <|@ instruction CMP (x: rbp|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  374  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B32 -> B33 falseDestination: B32 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4591637409758675404
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  378  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  380  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4591567679867720299
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  392  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  394  <|@ instruction CMP (x: r10|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  396  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4591498647275674745
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  408  <|@ instruction rbp|DWORD = SUB (x: rbp|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  410  <|@ instruction CMP (x: rdx|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  412  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B109" 
    xhandlers
    flags 
    probability 4591430305009549647
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  424  <|@ instruction stack:80|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  426  <|@ instruction stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  428  <|@ instruction stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  430  <|@ instruction r8|QWORD[*] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  432  <|@ instruction r10|QWORD[*] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ instruction r11|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  436  <|@ instruction rdi|QWORD = LEA [r8|QWORD[*] + rdi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  438  <|@ instruction rsi|QWORD = LEA [r10|QWORD[*] + rdx|DWORD * 2 + 16] size: QWORD <|@ <|@
      nr  440  <|@ instruction rdx|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  442  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  444  <|@ instruction rcx|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  446  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction MOV [rbx|QWORD[.] + rcx|DWORD * 2 + 16] y: 46 size: WORD <|@ <|@
      nr  450  <|@ instruction r13|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr  452  <|@ instruction MOV [rbx|QWORD[.] + r13|DWORD * 2 + 16] y: 48 size: WORD <|@ <|@
      nr  454  <|@ instruction rdi|DWORD = LEA [rcx|DWORD + 2] size: DWORD <|@ <|@
      nr  456  <|@ instruction r13|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  458  <|@ instruction r9|DWORD[.] = MOVE stack:32|DWORD[.] moveKind: DWORD <|@ <|@
      nr  460  <|@ instruction JUMP ~[] destination: B39 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B57" 
    xhandlers
    flags 
    probability 4594480213650448452
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  566  <|@ instruction stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  568  <|@ instruction r9|DWORD = SUB (x: rbp|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  570  <|@ instruction rcx|DWORD = NEG rcx|DWORD size: DWORD <|@ <|@
      nr  572  <|@ instruction rcx|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr  574  <|@ instruction rdx|QWORD = DEC rcx|QWORD size: QWORD <|@ <|@
      nr  576  <|@ instruction CMP (x: r9|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  578  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B51 -> B52 falseDestination: B51 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B58" 
    xhandlers
    flags 
    probability 4589976614023077956
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  630  <|@ instruction stack:88|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  632  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B54" 
    successors "B59" "B60" 
    xhandlers
    flags 
    probability 4594480213650448452
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  636  <|@ instruction CMP (x: rbp|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  638  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B58 -> B59 falseDestination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" "B63" 
    xhandlers
    flags 
    probability 4594480213650448452
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  652  <|@ instruction CMP (x: r9|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  654  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B60 -> B61 falseDestination: B60 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4594480213650448452
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  676  <|@ instruction CMP rcx|QWORD y: 1 size: QWORD <|@ <|@
      nr  678  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4589976614023077956
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  688  <|@ instruction rsi|QWORD[.] = LEA [rbx|QWORD[.] + rbp|DWORD * 2 + 16] size: QWORD <|@ <|@
      nr  690  <|@ instruction r10|QWORD = LEA [rcx|QWORD - 2] size: QWORD <|@ <|@
      nr  692  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  694  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B65 -> B66 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" 
    xhandlers
    flags 
    probability 4588129111075663974
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  704  <|@ instruction xmm0|V32_WORD = A od: SIMD<48,48> oe: WORD <|@ <|@
      nr  706  <|@ instruction J (address: [rsi|QWORD[.]], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  708  <|@ instruction r10|QWORD = MOVE input: long[2|0x2] <|@ <|@
      nr  710  <|@ instruction JUMP ~[] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B66" 
    successors "B69" "B70" 
    xhandlers
    flags 
    probability 4589976614023077956
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  714  <|@ instruction CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  716  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B68 -> B69 falseDestination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" 
    xhandlers
    flags 
    probability 4588129111075663974
    begin_IR
      LIR
      nr  724  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  726  <|@ instruction MOV [rsi|QWORD[.]] y: 48 size: WORD <|@ <|@
      nr  728  <|@ instruction r10|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr  730  <|@ instruction JUMP ~[] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B153" 
    successors "B156" 
    xhandlers
    flags 
    probability 4592504140529706342
    begin_IR
      LIR
      nr 1544  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1546  <|@ instruction JUMP ~[] destination: B154 -> B156 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B160"
    from_bci -1
    to_bci -1
    predecessors "B159" 
    successors "B164" 
    xhandlers
    flags 
    probability 4592504140529706342
    begin_IR
      LIR
      nr 1592  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1594  <|@ instruction JUMP ~[] destination: B160 -> B164 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B157"
    from_bci -1
    to_bci -1
    predecessors "B156" 
    successors "B159" 
    xhandlers
    flags 
    probability 4592504140529706342
    begin_IR
      LIR
      nr 1568  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1570  <|@ instruction JUMP ~[] destination: B157 -> B159 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B138" 
    successors "B141" 
    xhandlers
    flags 
    probability 4592504140529706342
    begin_IR
      LIR
      nr 1428  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1430  <|@ instruction JUMP ~[] destination: B139 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B144" 
    xhandlers
    flags 
    probability 4592504140529706342
    begin_IR
      LIR
      nr 1452  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1454  <|@ instruction JUMP ~[] destination: B142 -> B144 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B145" 
    successors "B148" 
    xhandlers
    flags 
    probability 4592504140529706342
    begin_IR
      LIR
      nr 1490  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1492  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr 1494  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1496  <|@ instruction JUMP ~[] destination: B147 -> B148 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B162"
    from_bci -1
    to_bci -1
    predecessors "B148" 
    successors "B148" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4599551409817811980
    begin_IR
      LIR
      nr 1602  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1604  <|@ instruction JUMP ~[] destination: B162 -> B148 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B147" "B162" 
    successors "B149" "B162" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4601511339784447334
    begin_IR
      LIR
      nr 1498  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1500  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr 1502  <|@ instruction r10|QWORD = LEA [r10|QWORD + 16] size: QWORD <|@ <|@
      nr 1504  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1506  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B148 -> B149 falseDestination: B148 -> B162 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B150" 
    successors "B153" 
    xhandlers
    flags 
    probability 4592504140529706342
    begin_IR
      LIR
      nr 1520  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1522  <|@ instruction JUMP ~[] destination: B151 -> B153 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B130" 
    xhandlers
    flags 
    probability 4592504140529706342
    begin_IR
      LIR
      nr 1350  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1352  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1354  <|@ instruction JUMP ~[] destination: B129 -> B130 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B168"
    from_bci -1
    to_bci -1
    predecessors "B130" 
    successors "B130" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599551409817811980
    begin_IR
      LIR
      nr 1672  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1674  <|@ instruction JUMP ~[] destination: B168 -> B130 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" "B168" 
    successors "B131" "B168" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4601511339784447334
    begin_IR
      LIR
      nr 1356  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1358  <|@ instruction xmm0|V256_WORD = H [rcx|QWORD[*] + r11|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr 1360  <|@ instruction J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr 1362  <|@ instruction r11|QWORD = LEA [r11|QWORD + 16] size: QWORD <|@ <|@
      nr 1364  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1366  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B130 -> B131 falseDestination: B130 -> B168 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B135" 
    xhandlers
    flags 
    probability 4592504140529706342
    begin_IR
      LIR
      nr 1380  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1382  <|@ instruction JUMP ~[] destination: B133 -> B135 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B135" 
    successors "B138" 
    xhandlers
    flags 
    probability 4592504140529706342
    begin_IR
      LIR
      nr 1404  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1406  <|@ instruction JUMP ~[] destination: B136 -> B138 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B148" 
    successors "B150" 
    xhandlers
    flags 
    probability 4592504140529706342
    begin_IR
      LIR
      nr 1508  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1510  <|@ instruction JUMP ~[] destination: B149 -> B150 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B130" 
    successors "B132" 
    xhandlers
    flags 
    probability 4592504140529706342
    begin_IR
      LIR
      nr 1368  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1370  <|@ instruction JUMP ~[] destination: B131 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B111" "B112" 
    xhandlers
    flags 
    probability 4591083073830437833
    begin_IR
      LIR
      nr 1154  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1156  <|@ instruction TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr 1158  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B110 -> B111 falseDestination: B110 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B113" "B114" 
    xhandlers
    flags 
    probability 4591083073830437833
    begin_IR
      LIR
      nr 1166  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1168  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr 1170  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr 1172  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr 1174  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B112 -> B113 falseDestination: B112 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B115" 
    xhandlers
    flags 
    probability 4591018887298765104
    begin_IR
      LIR
      nr 1190  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1192  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1194  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 0 <|@ <|@
      nr 1196  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr 1198  <|@ instruction JUMP ~[] destination: B114 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" "B113" 
    successors 
    xhandlers
    flags 
    probability 4591083073830437833
    begin_IR
      LIR
      nr 1200  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1202  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1204  <|@ instruction rdx|QWORD = MOV [r14|QWORD + 168] size: QWORD <|@ <|@
      nr 1206  <|@ instruction MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1208  <|@ instruction MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr 1210  <|@ instruction MOV [rax|QWORD[*] + 12] y: -559030611 size: DWORD c: NarrowOop[char[0]{}] <|@ <|@
      nr 1212  <|@ instruction MOV (x: [rax|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr 1214  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1216  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B124" 
    xhandlers
    flags 
    probability 4590936196556398058
    begin_IR
      LIR
      nr 1296  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1298  <|@ instruction JUMP ~[] destination: B123 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B123" "B121" 
    successors "B125" 
    xhandlers
    flags 
    probability 4591500656386789040
    begin_IR
      LIR
      nr 1300  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1302  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr 1304  <|@ instruction rdx|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1306  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1308  <|@ instruction r14|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1310  <|@ st <@st|@reference-map: [stack:24, stack:64]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8]
stack: r13|DWORD 
locals: stack:72|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:8] <|@ <|@
      nr 1312  <|@ instruction JUMP ~[] destination: B124 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B28" 
    xhandlers
    flags 
    probability 4590319868800513148
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  168  <|@ instruction stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  170  <|@ instruction CMP (x: rbp|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  172  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4590319868800513148
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  176  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  178  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590263314319139666
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  188  <|@ instruction rsi|DWORD = SUB (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  190  <|@ instruction CMP (x: r10|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  192  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4590207325382579919
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  202  <|@ instruction rsi|DWORD = SUB (x: rbp|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  204  <|@ instruction CMP (x: rdx|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  206  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4590151896335385769
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  216  <|@ instruction stack:76|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  218  <|@ instruction stack:80|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction stack:84|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  222  <|@ instruction stack:88|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  224  <|@ instruction rsi|QWORD[*] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  226  <|@ instruction r9|QWORD[*] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction r14|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr  230  <|@ instruction rdi|QWORD = LEA [rsi|QWORD[*] + rdi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  232  <|@ instruction rsi|QWORD = LEA [r9|QWORD[*] + rdx|DWORD * 2 + 16] size: QWORD <|@ <|@
      nr  234  <|@ instruction rdx|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  236  <|@ instruction stack:96|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction stack:60|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  240  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  242  <|@ instruction r13|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  244  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  246  <|@ instruction MOV [rbx|QWORD[.] + r13|DWORD * 2 + 16] y: 46 size: WORD <|@ <|@
      nr  248  <|@ instruction r13|DWORD = INC r13|DWORD size: DWORD <|@ <|@
      nr  250  <|@ instruction r10|DWORD = ADD (x: stack:88|DWORD, y: stack:60|DWORD) size: DWORD <|@ <|@
      nr  252  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  254  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4590097021578663561
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  262  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  264  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: stack:60|DWORD) size: DWORD <|@ <|@
      nr  266  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  268  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4590042695569508575
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  276  <|@ instruction rax|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr  278  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  280  <|@ instruction CMP (x: r10|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  282  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B27" 
    xhandlers
    flags 
    probability 4589988912820445138
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  290  <|@ instruction rbp|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  292  <|@ instruction rbp|DWORD = SUB (x: rbp|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  294  <|@ instruction CMP (x: r13|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  296  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B109" 
    xhandlers
    flags 
    probability 4589935667898872336
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  312  <|@ instruction r8|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  314  <|@ instruction r8|QWORD[*] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  316  <|@ instruction rbx|QWORD[*] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction rdi|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  320  <|@ instruction rsi|QWORD = MOVSXD r13|DWORD size: QWORD <|@ <|@
      nr  322  <|@ instruction rdx|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  324  <|@ instruction rdi|QWORD = LEA [r8|QWORD[*] + rdi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  326  <|@ instruction rsi|QWORD = LEA [rbx|QWORD[*] + rsi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  328  <|@ instruction stack:76|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  330  <|@ instruction stack:80|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  332  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  334  <|@ instruction r13|DWORD = ADD (x: stack:76|DWORD, y: stack:80|DWORD) size: DWORD <|@ <|@
      nr  336  <|@ instruction r9|DWORD[.] = MOVE stack:32|DWORD[.] moveKind: DWORD <|@ <|@
      nr  338  <|@ instruction JUMP ~[] destination: B27 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B71" 
    xhandlers
    flags 
    probability 4589976614023077956
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  682  <|@ instruction r10|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr  684  <|@ instruction JUMP ~[] destination: B64 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B56" 
    xhandlers
    flags 
    probability 4589976614023077956
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  582  <|@ instruction rsi|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr  584  <|@ instruction stack:88|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  586  <|@ instruction rsi|QWORD = ADD (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  588  <|@ instruction r10|QWORD = MOV rdi|DWORD size: DWORD <|@ <|@
      nr  590  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  592  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B52 -> B53 falseDestination: B52 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4589976614023077956
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  596  <|@ instruction CMP (x: rdi|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  598  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B53 -> B54 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" 
    xhandlers
    flags 
    probability 4589976614023077956
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  602  <|@ instruction JUMP ~[] destination: B54 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" 
    xhandlers
    flags 
    probability 4580969414768336964
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  698  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  700  <|@ instruction JUMP ~[] destination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" 
    xhandlers
    flags 
    probability 4580969414768336964
    begin_IR
      LIR
      nr  718  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  720  <|@ instruction r10|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr  722  <|@ instruction JUMP ~[] destination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B165"
    from_bci -1
    to_bci -1
    predecessors "B164" 
    successors "B167" 
    xhandlers
    flags 
    probability 4576171042495639949
    begin_IR
      LIR
      nr 1620  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1622  <|@ instruction stack:40|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1624  <|@ instruction r14|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr 1626  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1628  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr 1630  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1632  <|@ st <@st|@reference-map: [stack:24, stack:56]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8]
stack: r13|DWORD 
locals: stack:72|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:8] <|@ <|@
      nr 1634  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1636  <|@ instruction rax|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1638  <|@ instruction JUMP ~[] destination: B165 -> B167 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B79" 
    xhandlers
    flags 
    probability 4575859268439552651
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  742  <|@ instruction rsi|DWORD = MOVE input: int[-180065|0xfffffffffffd409f] <|@ <|@
      nr  744  <|@ instruction JUMP ~[] destination: B72 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B72" "B78" "B76" "B74" 
    successors 
    xhandlers
    flags 
    probability 4584796352382670340
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  790  <|@ instruction MOV (x: [r15|QWORD + 668], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  792  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  794  <|@ st <@st|@reference-map: [rbx:0, stack:24]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 256]
locals: stack:72|QWORD[.] rbx|QWORD[.] r9|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: stack:72|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:256, 5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B79" 
    xhandlers
    flags 
    probability 4575812211972967659
    begin_IR
      LIR
      nr  752  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  754  <|@ instruction rsi|DWORD = MOVE input: int[-180065|0xfffffffffffd409f] <|@ <|@
      nr  756  <|@ instruction JUMP ~[] destination: B74 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B79" 
    xhandlers
    flags 
    probability 4575765626071048516
    begin_IR
      LIR
      nr  768  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  770  <|@ instruction rsi|DWORD = MOVE input: int[-180065|0xfffffffffffd409f] <|@ <|@
      nr  772  <|@ instruction JUMP ~[] destination: B76 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B79" 
    xhandlers
    flags 
    probability 4575719506028148565
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  784  <|@ instruction rsi|DWORD = MOVE input: int[-180065|0xfffffffffffd409f] <|@ <|@
      nr  786  <|@ instruction JUMP ~[] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B124" 
    xhandlers
    flags 
    probability 4575669300424181299
    begin_IR
      LIR
      nr 1268  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1270  <|@ instruction JUMP ~[] destination: B121 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B85" 
    xhandlers
    flags 
    probability 4575429616257440223
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  526  <|@ instruction stack:60|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  528  <|@ instruction stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  530  <|@ instruction JUMP ~[] destination: B46 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B46" 
    successors "B86" "B176" 
    xhandlers
    flags 
    probability 4576022210371686731
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  860  <|@ st <@st|@reference-map: [rbx:0, r8:0, r9:0, stack:24, stack:56, stack:64]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
locals: stack:72|QWORD[.] rbx|QWORD[.] rdx|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: stack:72|QWORD[.] - 
>@ <|@ instruction rdi|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:283, 5] <|@ <|@
      nr  862  <|@ instruction CMP (x: rdi|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  864  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B85 -> B86 falseDestination: B85 -> B176 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B87" "B175" 
    xhandlers
    flags 
    probability 4576022210371686731
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  868  <|@ st <@st|@reference-map: [rbx:0, r8:0, r9:0, stack:24, stack:56, stack:64]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
locals: stack:72|QWORD[.] rbx|QWORD[.] rdx|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: stack:72|QWORD[.] - 
>@ <|@ instruction r11|DWORD = MOV [r9|DWORD[.] * 8 + 12] size: DWORD state [bci:283, 5] <|@ <|@
      nr  870  <|@ instruction CMP (x: r11|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  872  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B86 -> B87 falseDestination: B86 -> B175 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B88" "B174" 
    xhandlers
    flags 
    probability 4576022210371686731
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  876  <|@ instruction CMP (x: r11|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  878  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B87 -> B88 falseDestination: B87 -> B174 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B89" "B90" 
    xhandlers
    flags 
    probability 4576022210371686731
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  882  <|@ instruction CMP stack:28|DWORD y: 2 size: DWORD <|@ <|@
      nr  884  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B88 -> B89 falseDestination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" "B173" 
    xhandlers
    flags 
    probability 4576022210371686731
    begin_IR
      LIR
      nr  892  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  894  <|@ instruction rsi|DWORD = DEC stack:28|DWORD size: DWORD <|@ <|@
      nr  896  <|@ instruction rcx|DWORD = ADD (x: rsi|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  898  <|@ instruction CMP (x: r11|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  900  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B90 -> B91 falseDestination: B90 -> B173 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B92" "B93" 
    xhandlers
    flags 
    probability 4576022210371686731
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  904  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2ae4cec4 encoding: base: 0 shift: 3 <|@ <|@
      nr  906  <|@ instruction rdx|DWORD = MOVSX [r8|QWORD[.] + r10|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  908  <|@ instruction MOV (x: [r13|QWORD + r9|DWORD[.] * 8], y: rdx|DWORD) size: WORD <|@ <|@
      nr  910  <|@ instruction MOV [r14|QWORD + r9|DWORD[.] * 8] y: 46 size: WORD <|@ <|@
      nr  912  <|@ instruction rdi|DWORD = SUB (x: rdi|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr  914  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  916  <|@ instruction CMP (x: r10|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  918  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B91 -> B92 falseDestination: B91 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B94" "B96" 
    xhandlers
    flags 
    probability 4575973524485780398
    begin_IR
      LIR
      nr  924  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  926  <|@ instruction rdi|DWORD = SUB (x: r11|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr  928  <|@ instruction CMP (x: rbp|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  930  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B93 -> B94 falseDestination: B93 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B97" "B100" 
    xhandlers
    flags 
    probability 4575925325458733128
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  946  <|@ instruction stack:28|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  948  <|@ instruction stack:88|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  950  <|@ instruction r8|QWORD[*] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  952  <|@ instruction rdx|QWORD[*] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  954  <|@ instruction rdi|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  956  <|@ instruction r10|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr  958  <|@ instruction rdi|QWORD = LEA [r8|QWORD[*] + rdi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  960  <|@ instruction rsi|QWORD = LEA [rdx|QWORD[*] + rbp|DWORD * 2 + 16] size: QWORD <|@ <|@
      nr  962  <|@ instruction rdx|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  964  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  966  <|@ instruction rcx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  968  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  970  <|@ instruction MOV [rbx|QWORD[.] + rcx|DWORD * 2 + 16] y: 69 size: WORD <|@ <|@
      nr  972  <|@ instruction r10|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  974  <|@ instruction CMP stack:60|DWORD y: 1 size: DWORD <|@ <|@
      nr  976  <|@ instruction BRANCH trueDestinationProbability: 0.9016620498614958 condition: < trueDestination: B96 -> B97 falseDestination: B96 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B98" "B99" 
    xhandlers
    flags 
    probability 4575254950392379555
    begin_IR
      LIR
      nr  978  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  980  <|@ instruction r11|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr  982  <|@ instruction CMP (x: r11|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  984  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B97 -> B98 falseDestination: B97 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B101" 
    xhandlers
    flags 
    probability 4575254950392379555
    begin_IR
      LIR
      nr  986  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  988  <|@ instruction MOV [rbx|QWORD[.] + r10|DWORD * 2 + 16] y: 45 size: WORD <|@ <|@
      nr  990  <|@ instruction rax|DWORD = LEA [rcx|DWORD + 2] size: DWORD <|@ <|@
      nr  992  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  994  <|@ instruction rdx|DWORD = SUB (x: rdx|DWORD, ~y: stack:60|DWORD) size: DWORD <|@ <|@
      nr  996  <|@ instruction rcx|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  998  <|@ instruction r10|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1000  <|@ instruction JUMP ~[] destination: B98 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B98" "B100" 
    successors "B102" "B171" 
    xhandlers
    flags 
    probability 4575925325458733128
    begin_IR
      LIR
      nr 1018  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1020  <|@ instruction CMP (x: r11|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 1022  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B101 -> B102 falseDestination: B101 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B103" "B104" 
    xhandlers
    flags 
    probability 4575925325458733128
    begin_IR
      LIR
      nr 1024  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1026  <|@ instruction r8|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr 1028  <|@ instruction CMP rcx|DWORD y: 10 size: DWORD <|@ <|@
      nr 1030  <|@ instruction BRANCH trueDestinationProbability: 0.9778393351800554 condition: < trueDestination: B102 -> B103 falseDestination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B109" 
    xhandlers
    flags 
    probability 4575819581332911971
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1034  <|@ instruction rax|DWORD = LEA [rcx|DWORD + 48] size: DWORD <|@ <|@
      nr 1036  <|@ instruction MOV (x: [rbx|QWORD[.] + r10|DWORD * 2 + 16], y: rax|DWORD) size: WORD <|@ <|@
      nr 1038  <|@ instruction r13|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1040  <|@ instruction r9|DWORD[.] = MOVE stack:32|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1042  <|@ instruction JUMP ~[] destination: B103 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B42" 
    xhandlers
    flags 
    probability 4562064649313824873
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  384  <|@ instruction rax|DWORD = MOVE input: int[-154209|0xfffffffffffda59f] <|@ <|@
      nr  386  <|@ instruction stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  388  <|@ instruction JUMP ~[] destination: B34 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" "B41" "B40" "B13" "B34" "B17" "B15" "B38" "B36" 
    successors 
    xhandlers
    flags 
    probability 4572651257581733127
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  480  <|@ instruction MOV (x: [r15|QWORD + 668], y: rax|DWORD) size: DWORD <|@ <|@
      nr  482  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  484  <|@ st <@st|@reference-map: [rbx:0, stack:24]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43]
locals: stack:72|QWORD[.] rbx|QWORD[.] rdx|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: stack:72|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:43, 5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B42" 
    xhandlers
    flags 
    probability 4561975395053402339
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  400  <|@ instruction rax|DWORD = MOVE input: int[-154209|0xfffffffffffda59f] <|@ <|@
      nr  402  <|@ instruction stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  404  <|@ instruction JUMP ~[] destination: B36 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B42" 
    xhandlers
    flags 
    probability 4561887033335584030
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  416  <|@ instruction rax|DWORD = MOVE input: int[-154209|0xfffffffffffda59f] <|@ <|@
      nr  418  <|@ instruction stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  420  <|@ instruction JUMP ~[] destination: B38 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B115" 
    xhandlers
    flags 
    probability 4561355099325680782
    begin_IR
      LIR
      nr 1176  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1178  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1180  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr 1182  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1184  <|@ st <@st|@reference-map: [stack:24]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8]
stack: r13|DWORD 
locals: stack:72|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:8] <|@ <|@
      nr 1186  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1188  <|@ instruction JUMP ~[] destination: B113 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B85" 
    xhandlers
    flags 
    probability 4560799887891645879
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  852  <|@ instruction stack:60|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  854  <|@ instruction stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  856  <|@ instruction JUMP ~[] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B44" 
    xhandlers
    flags 
    probability 4560799053584073665
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  488  <|@ instruction stack:60|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  490  <|@ instruction stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  492  <|@ instruction r11|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  494  <|@ instruction r9|QWORD = LEA [rdi|QWORD + 16] size: QWORD <|@ <|@
      nr  496  <|@ instruction r13|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  498  <|@ instruction stack:48|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  500  <|@ instruction rcx|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  502  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  504  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  506  <|@ instruction r14|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  508  <|@ instruction r9|DWORD[.] = MOVE stack:32|DWORD[.] moveKind: DWORD <|@ <|@
      nr  510  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B101" 
    xhandlers
    flags 
    probability 4560647056204873574
    begin_IR
      LIR
      nr 1010  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1012  <|@ instruction r11|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr 1014  <|@ instruction rcx|DWORD = DEC stack:60|DWORD size: DWORD <|@ <|@
      nr 1016  <|@ instruction JUMP ~[] destination: B100 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B42" 
    xhandlers
    flags 
    probability 4560378196887377184
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  182  <|@ instruction rax|DWORD = MOVE input: int[-128865|0xfffffffffffe089f] <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B13 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B42" 
    xhandlers
    flags 
    probability 4560305807151219127
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  196  <|@ instruction rax|DWORD = MOVE input: int[-128865|0xfffffffffffe089f] <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B15 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B42" 
    xhandlers
    flags 
    probability 4560234141312422651
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  210  <|@ instruction rax|DWORD = MOVE input: int[-128865|0xfffffffffffe089f] <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B17 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B26" 
    xhandlers
    flags 
    probability 4560163192132014139
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  258  <|@ instruction JUMP ~[] destination: B19 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" "B23" "B25" 
    successors 
    xhandlers
    flags 
    probability 4569065732494742321
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  304  <|@ instruction MOV [r15|QWORD + 668] y: -143201 size: DWORD <|@ <|@
      nr  306  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  308  <|@ st <@st|@reference-map: [rbx:0, stack:24]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:925) [bci: 145]
locals: stack:72|QWORD[.] rbx|QWORD[.] r13|DWORD stack:60|DWORD - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: stack:72|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:145, 5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B26" 
    xhandlers
    flags 
    probability 4560092952443409712
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  272  <|@ instruction JUMP ~[] destination: B21 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    probability 4560023415151691330
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  286  <|@ instruction JUMP ~[] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 4559954573232890131
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  300  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4552763695007289344
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   72  <|@ instruction stack:60|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   74  <|@ instruction stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   76  <|@ st <@st|@reference-map: [rbx:0, r8:0, r9:0, stack:24, stack:56, stack:64]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 0]
locals: stack:72|QWORD[.] - 
>@ <|@ instruction CMP [r9|DWORD[.] * 8 + 12] y: 0 size: DWORD state [bci:0] <|@ <|@
      nr   78  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4552763695007289344
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   90  <|@ instruction MOV [r9|DWORD[.] * 8 + 16] y: 45 size: WORD <|@ <|@
      nr   92  <|@ instruction CMP stack:60|DWORD y: 1 size: DWORD <|@ <|@
      nr   94  <|@ instruction BRANCH trueDestinationProbability: 0.8239147472715149 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B44" 
    xhandlers
    flags 
    probability 4551243785039465259
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   98  <|@ instruction r14|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  100  <|@ instruction r13|QWORD = MOVE input: long[18|0x12] <|@ <|@
      nr  102  <|@ instruction rbp|DWORD = MOVE input: int[3|0x3] <|@ <|@
      nr  104  <|@ instruction rax|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  106  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  108  <|@ instruction stack:48|QWORD = MOVE input: long[3|0x3] <|@ <|@
      nr  110  <|@ instruction rcx|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  114  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  116  <|@ instruction JUMP ~[] destination: B7 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B105" "B170" 
    xhandlers
    flags 
    probability 4550899648069384485
    begin_IR
      LIR
      nr 1044  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1046  <|@ instruction r9|DWORD[.] = MOVE stack:32|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1048  <|@ instruction CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr 1050  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B104 -> B105 falseDestination: B104 -> B170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B106" "B107" 
    xhandlers
    flags 
    probability 4550899648069384485
    begin_IR
      LIR
      nr 1052  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1054  <|@ instruction r13|DWORD = LEA [r10|DWORD + 2] size: DWORD <|@ <|@
      nr 1056  <|@ instruction CMP rcx|DWORD y: 100 size: DWORD <|@ <|@
      nr 1058  <|@ instruction BRANCH trueDestinationProbability: 0.625 condition: < trueDestination: B105 -> B106 falseDestination: B105 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B109" 
    xhandlers
    flags 
    probability 4548087954455152494
    begin_IR
      LIR
      nr 1060  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1062  <|@ instruction rax|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1064  <|@ instruction rdx|DWORD = MOVE input: int[1717986919|0x66666667] <|@ <|@
      nr 1066  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1068  <|@ instruction rdx|DWORD = SAR rdx|DWORD y: 2 size: DWORD <|@ <|@
      nr 1070  <|@ instruction rax|DWORD = LEA [rdx|DWORD + 48] size: DWORD <|@ <|@
      nr 1072  <|@ instruction MOV (x: [rbx|QWORD[.] + r10|DWORD * 2 + 16], y: rax|DWORD) size: WORD <|@ <|@
      nr 1074  <|@ instruction rax|DWORD = SHL rdx|DWORD y: 3 size: DWORD <|@ <|@
      nr 1076  <|@ instruction rdx|DWORD = SHL rdx|DWORD size: DWORD <|@ <|@
      nr 1078  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1080  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr 1082  <|@ instruction rax|DWORD = LEA [rcx|DWORD + 48] size: DWORD <|@ <|@
      nr 1084  <|@ instruction MOV (x: [rbx|QWORD[.] + r8|DWORD * 2 + 16], y: rax|DWORD) size: WORD <|@ <|@
      nr 1086  <|@ instruction JUMP ~[] destination: B106 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B95" 
    xhandlers
    flags 
    probability 4545860217785470586
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  922  <|@ instruction JUMP ~[] destination: B92 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B92" "B94" 
    successors 
    xhandlers
    flags 
    probability 4550332658445861029
    begin_IR
      LIR
      nr  936  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  938  <|@ instruction MOV [r15|QWORD + 668] y: -199521 size: DWORD <|@ <|@
      nr  940  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  942  <|@ st <@st|@reference-map: [rbx:0, stack:24]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:945) [bci: 306]
locals: stack:72|QWORD[.] rbx|QWORD[.] rbp|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: stack:72|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:306, 5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B95" 
    xhandlers
    flags 
    probability 4545797899851510480
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  934  <|@ instruction JUMP ~[] destination: B94 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" "B169" 
    xhandlers
    flags 
    probability 4544704142428875484
    begin_IR
      LIR
      nr 1088  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1090  <|@ instruction CMP (x: r11|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr 1092  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B107 -> B108 falseDestination: B107 -> B169 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B109" 
    xhandlers
    flags 
    probability 4544704142428875484
    begin_IR
      LIR
      nr 1094  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1096  <|@ instruction rax|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1098  <|@ instruction rdx|DWORD = MOVE input: int[1374389535|0x51eb851f] <|@ <|@
      nr 1100  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1102  <|@ instruction rdx|DWORD = SAR rdx|DWORD y: 5 size: DWORD <|@ <|@
      nr 1104  <|@ instruction rax|DWORD = LEA [rdx|DWORD + 48] size: DWORD <|@ <|@
      nr 1106  <|@ instruction MOV (x: [rbx|QWORD[.] + r10|DWORD * 2 + 16], y: rax|DWORD) size: WORD <|@ <|@
      nr 1108  <|@ instruction rax|DWORD = IMUL rdx|DWORD y: 100 size: DWORD <|@ <|@
      nr 1110  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr 1112  <|@ instruction rax|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1114  <|@ instruction rdx|DWORD = MOVE input: int[1717986919|0x66666667] <|@ <|@
      nr 1116  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1118  <|@ instruction rdx|DWORD = SAR rdx|DWORD y: 2 size: DWORD <|@ <|@
      nr 1120  <|@ instruction r11|DWORD = SHR rcx|DWORD y: 31 size: DWORD <|@ <|@
      nr 1122  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr 1124  <|@ instruction r11|DWORD = LEA [rdx|DWORD + 48] size: DWORD <|@ <|@
      nr 1126  <|@ instruction MOV (x: [rbx|QWORD[.] + r8|DWORD * 2 + 16], y: r11|DWORD) size: WORD <|@ <|@
      nr 1128  <|@ instruction r11|DWORD = SHL rdx|DWORD y: 3 size: DWORD <|@ <|@
      nr 1130  <|@ instruction rdx|DWORD = SHL rdx|DWORD size: DWORD <|@ <|@
      nr 1132  <|@ instruction r11|DWORD = ADD (x: r11|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1134  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr 1136  <|@ instruction r11|DWORD = LEA [rcx|DWORD + 48] size: DWORD <|@ <|@
      nr 1138  <|@ instruction MOV (x: [rbx|QWORD[.] + r13|DWORD * 2 + 16], y: r11|DWORD) size: WORD <|@ <|@
      nr 1140  <|@ instruction r13|DWORD = LEA [r10|DWORD + 3] size: DWORD <|@ <|@
      nr 1142  <|@ instruction JUMP ~[] destination: B108 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4541204464633385812
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  120  <|@ instruction rcx|DWORD = INC stack:60|DWORD size: DWORD <|@ <|@
      nr  122  <|@ instruction rdi|QWORD = MOVE input: long[4|0x4] <|@ <|@
      nr  124  <|@ instruction r14|QWORD = MOVE input: long[18|0x12] <|@ <|@
      nr  126  <|@ instruction r13|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  128  <|@ instruction rbp|DWORD = MOVE input: int[3|0x3] <|@ <|@
      nr  130  <|@ instruction rax|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  132  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  134  <|@ instruction stack:56|QWORD = MOVE input: long[3|0x3] <|@ <|@
      nr  136  <|@ instruction rcx|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  138  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  140  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B177" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  888  <|@ instruction r10|DWORD = MOVE input: int[-190995|0xfffffffffffd15ed] <|@ <|@
      nr  890  <|@ instruction JUMP ~[] destination: B89 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B177"
    from_bci -1
    to_bci -1
    predecessors "B176" "B89" "B175" "B174" "B173" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1726  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1728  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1730  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1732  <|@ st <@st|@reference-map: [rbx:0, stack:24]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
locals: stack:72|QWORD[.] rbx|QWORD[.] rdx|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: stack:72|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:283, 5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B173"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B177" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1702  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1704  <|@ instruction r10|DWORD = MOVE input: int[-202779|0xfffffffffffce7e5] <|@ <|@
      nr 1706  <|@ instruction JUMP ~[] destination: B173 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  464  <|@ instruction rax|DWORD = MOVE input: int[-160795|0xfffffffffffd8be5] <|@ <|@
      nr  466  <|@ instruction stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction JUMP ~[] destination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B169"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B172" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1676  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1678  <|@ instruction r11|DWORD = MOVE input: int[-218139|0xfffffffffffcabe5] <|@ <|@
      nr 1680  <|@ instruction JUMP ~[] destination: B169 -> B172 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B172"
    from_bci -1
    to_bci -1
    predecessors "B171" "B170" "B169" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1694  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1696  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1698  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1700  <|@ st <@st|@reference-map: [rbx:0, stack:24]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 396]
locals: - rbx|QWORD[.] r10|DWORD rcx|DWORD - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: stack:72|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:396, 5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  658  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  660  <|@ instruction r10|DWORD = MOVE input: int[-168211|0xfffffffffffd6eed] <|@ <|@
      nr  662  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  664  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B59" "B56" "B61" "B55" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  668  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  670  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr  672  <|@ st <@st|@reference-map: [rbx:0, rsi:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:936) [bci: 229]
locals: rsi|QWORD[.] rbx|QWORD[.] rbp|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:229, 5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1228  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1230  <|@ instruction r10|DWORD = MOVE input: int[-224787|0xfffffffffffc91ed] <|@ <|@
      nr 1232  <|@ instruction JUMP ~[] destination: B117 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B111" "B117" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1234  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1236  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1238  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1240  <|@ st <@st|@reference-map: [stack:24]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8]
stack: r13|DWORD 
locals: stack:72|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:8] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B83" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  836  <|@ instruction r10|DWORD = MOVE input: int[-164123|0xfffffffffffd7ee5] <|@ <|@
      nr  838  <|@ instruction stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  840  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" "B81" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  842  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  844  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  846  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  848  <|@ st <@st|@reference-map: [rbx:0, stack:24]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
locals: stack:72|QWORD[.] rbx|QWORD[.] rdx|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: stack:72|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:197, 5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  606  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@550168632] <|@ <|@
      nr  608  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  610  <|@ instruction r10|DWORD = MOVE input: int[-168987|0xfffffffffffd6be5] <|@ <|@
      nr  612  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  614  <|@ instruction JUMP ~[] destination: B55 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  618  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@550168632] <|@ <|@
      nr  620  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction r10|DWORD = MOVE input: int[-168987|0xfffffffffffd6be5] <|@ <|@
      nr  624  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction JUMP ~[] destination: B56 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B83" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  828  <|@ instruction r10|DWORD = MOVE input: int[-166171|0xfffffffffffd76e5] <|@ <|@
      nr  830  <|@ instruction stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  832  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B174"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B177" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1708  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1710  <|@ instruction r10|DWORD = MOVE input: int[-189979|0xfffffffffffd19e5] <|@ <|@
      nr 1712  <|@ instruction JUMP ~[] destination: B174 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B175"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B177" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1714  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1716  <|@ instruction r10|DWORD = MOVE input: int[-188443|0xfffffffffffd1fe5] <|@ <|@
      nr 1718  <|@ instruction JUMP ~[] destination: B175 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B176"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B177" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1720  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1722  <|@ instruction r10|DWORD = MOVE input: int[-185115|0xfffffffffffd2ce5] <|@ <|@
      nr 1724  <|@ instruction JUMP ~[] destination: B176 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B170"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B172" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1682  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1684  <|@ instruction r11|DWORD = MOVE input: int[-236059|0xfffffffffffc65e5] <|@ <|@
      nr 1686  <|@ instruction JUMP ~[] destination: B170 -> B172 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   82  <|@ instruction MOV [r15|QWORD + 668] y: -225051 size: DWORD <|@ <|@
      nr   84  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   86  <|@ st <@st|@reference-map: [stack:24]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 0]
locals: stack:72|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  354  <|@ instruction rax|DWORD = MOVE input: int[-156947|0xfffffffffffd9aed] <|@ <|@
      nr  356  <|@ instruction stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ instruction JUMP ~[] destination: B30 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1162  <|@ instruction r10|DWORD = MOVE input: int[-222483|0xfffffffffffc9aed] <|@ <|@
      nr 1164  <|@ instruction JUMP ~[] destination: B111 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1004  <|@ instruction MOV [r15|QWORD + 668] y: -220699 size: DWORD <|@ <|@
      nr 1006  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1008  <|@ st <@st|@reference-map: [rbx:0, stack:24]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:953) [bci: 363]
locals: stack:72|QWORD[.] rbx|QWORD[.] r10|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: stack:72|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:363, 5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B171"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B172" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1688  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1690  <|@ instruction r11|DWORD = MOVE input: int[-236571|0xfffffffffffc63e5] <|@ <|@
      nr 1692  <|@ instruction JUMP ~[] destination: B171 -> B172 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  472  <|@ instruction rax|DWORD = MOVE input: int[-158491|0xfffffffffffd94e5] <|@ <|@
      nr  474  <|@ instruction stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  476  <|@ instruction JUMP ~[] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  642  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  644  <|@ instruction r10|DWORD = MOVE input: int[-167955|0xfffffffffffd6fed] <|@ <|@
      nr  646  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  648  <|@ instruction JUMP ~[] destination: B59 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  342  <|@ instruction rax|DWORD = MOVE input: int[-132891|0xfffffffffffdf8e5] <|@ <|@
      nr  344  <|@ instruction JUMP ~[] destination: B28 -> B42 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_0       
     2: getfield      #3          // buffer:char[]
     5: invokespecial #11         // getChars:(char[])int
     8: istore_1      
     9: new           #14         // java.lang.String
    12: dup           
    13: aload_0       
    14: getfield      #3          // buffer:char[]
    17: iconst_0      
    18: iload_1       
    19: invokespecial #12         // java.lang.String.<init>:(char[], int, int)void
    22: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@61e4165f slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr    8  <|@ instruction r11|DWORD = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   10  <|@ instruction stack:28|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction r8|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   14  <|@ instruction r9|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   16  <|@ instruction stack:32|DWORD[.] = MOVE r9|DWORD[.] moveKind: DWORD <|@ <|@
      nr   18  <|@ instruction rcx|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   20  <|@ instruction rdi|DWORD = MOVZXB [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   22  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2ae4cec4 encoding: base: 0 shift: 3 <|@ <|@
      nr   24  <|@ instruction stack:40|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 0.9997660380889991 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607180311458467003
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction CMP rcx|DWORD y: 1 size: DWORD <|@ <|@
      nr   34  <|@ instruction BRANCH trueDestinationProbability: 0.8239147472715149 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B44" 
    xhandlers
    flags 
    probability 4605594647573089601
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ instruction r14|QWORD = MOVE input: long[18|0x12] <|@ <|@
      nr   40  <|@ instruction r13|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   42  <|@ instruction rbp|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   44  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   46  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   48  <|@ instruction stack:48|QWORD = MOVE input: long[2|0x2] <|@ <|@
      nr   50  <|@ instruction JUMP ~[] destination: B2 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B7" "B43" "B2" 
    successors "B45" "B85" 
    xhandlers
    flags 
    probability 4605603864145910071
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL numbPhis: 6 align: false label: ? <|@ <|@
      nr  514  <|@ instruction CMP rcx|DWORD y: 1 size: DWORD <|@ <|@
      nr  516  <|@ instruction BRANCH trueDestinationProbability: 0.9989929363705994 condition: < trueDestination: B44 -> B45 falseDestination: B44 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B85" "B47" 
    xhandlers
    flags 
    probability 4605596383028117030
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  520  <|@ instruction CMP rcx|DWORD y: -2 size: DWORD <|@ <|@
      nr  522  <|@ instruction BRANCH trueDestinationProbability: 0.009242564066160308 condition: < trueDestination: B45 -> B85 falseDestination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B82" 
    xhandlers
    flags 
    probability 4605527792449181426
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  534  <|@ st <@st|@reference-map: [rbx:0, rsi:0, r8:0, r9:0, stack:64]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
locals: rsi|QWORD[.] rbx|QWORD[.] rdx|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rdi|DWORD = MOV [r9|DWORD[.] * 8 + 12] size: DWORD state [bci:197, 5] <|@ <|@
      nr  536  <|@ instruction CMP (x: rdi|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  538  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B47 -> B48 falseDestination: B47 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B81" 
    xhandlers
    flags 
    probability 4605527792449181426
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  542  <|@ instruction CMP (x: rdi|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  544  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B48 -> B49 falseDestination: B48 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605527792449181426
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  548  <|@ instruction MOV [r13|QWORD + r9|DWORD[.] * 8] y: 48 size: WORD <|@ <|@
      nr  550  <|@ instruction MOV [r14|QWORD + r9|DWORD[.] * 8] y: 46 size: WORD <|@ <|@
      nr  552  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  558  <|@ instruction stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  554  <|@ instruction BRANCH trueDestinationProbability: 0.8193763792164618 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B71" 
    xhandlers
    flags 
    probability 4604199744109203169
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  560  <|@ instruction r9|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  562  <|@ instruction JUMP ~[] destination: B50 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B50" "B64" "B69" "B70" 
    successors "B79" "B73" 
    xhandlers
    flags 
    probability 4605527792449181426
    begin_IR
      LIR
      nr  732  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  734  <|@ st <@st|@reference-map: [rbx:0, r8:0, stack:24, stack:64]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 256]
locals: stack:72|QWORD[.] rbx|QWORD[.] r9|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: stack:72|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r8|DWORD[.] * 8] state [bci:256, 5] <|@ <|@
      nr  736  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  738  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B71 -> B79 falseDestination: B71 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B79" "B75" 
    xhandlers
    flags 
    probability 4605454266720142376
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  748  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  750  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B73 -> B79 falseDestination: B73 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B79" "B77" 
    xhandlers
    flags 
    probability 4605381476248393716
    begin_IR
      LIR
      nr  758  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  760  <|@ instruction rsi|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  762  <|@ instruction rsi|DWORD = SUB (x: rsi|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  764  <|@ instruction CMP (x: r10|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  766  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B75 -> B79 falseDestination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4605309413681362543
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  776  <|@ instruction rdi|DWORD = SUB (x: rdi|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  778  <|@ instruction CMP (x: r9|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  780  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B77 -> B79 falseDestination: B77 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B109" 
    xhandlers
    flags 
    probability 4605238071740001682
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  798  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2ae4cec4 encoding: base: 0 shift: 3 <|@ <|@
      nr  800  <|@ instruction r8|QWORD[*] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  802  <|@ instruction rbx|QWORD[*] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  804  <|@ instruction rdi|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  806  <|@ instruction rsi|QWORD = MOVSXD r9|DWORD size: QWORD <|@ <|@
      nr  808  <|@ instruction rdx|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  810  <|@ instruction rdi|QWORD = LEA [r8|QWORD[*] + rdi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  812  <|@ instruction rsi|QWORD = LEA [rbx|QWORD[*] + rsi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  814  <|@ instruction stack:88|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  816  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  818  <|@ instruction r9|DWORD = ADD (x: stack:88|DWORD, y: stack:28|DWORD) size: DWORD <|@ <|@
      nr  820  <|@ instruction r13|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  822  <|@ instruction r9|DWORD[.] = MOVE stack:32|DWORD[.] moveKind: DWORD <|@ <|@
      nr  824  <|@ instruction JUMP ~[] destination: B80 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B27" "B80" "B103" "B106" "B108" "B39" 
    successors "B110" "B116" 
    xhandlers
    flags 
    probability 4606817271057726943
    begin_IR
      LIR
      nr 1144  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1146  <|@ st <@st|@reference-map: [r9:0, stack:24, stack:64]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8]
stack: r13|DWORD 
locals: stack:72|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r9|DWORD[.] * 8] state [bci:8] <|@ <|@
      nr 1148  <|@ instruction r14|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr 1150  <|@ instruction CMP r13|DWORD y: 1 size: DWORD <|@ <|@
      nr 1152  <|@ instruction BRANCH trueDestinationProbability: 0.09284041465770032 condition: < trueDestination: B109 -> B110 falseDestination: B109 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B117" "B119" 
    xhandlers
    flags 
    probability 4606014939411817830
    begin_IR
      LIR
      nr 1218  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1220  <|@ instruction r10|DWORD = MOV [r9|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr 1222  <|@ instruction rax|DWORD = SUB (x: r10|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr 1224  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 1226  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B116 -> B117 falseDestination: B116 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" "B124" 
    xhandlers
    flags 
    probability 4606014939411817830
    begin_IR
      LIR
      nr 1242  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1244  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr 1246  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr 1248  <|@ instruction CMP r13|DWORD y: 16777215 size: DWORD <|@ <|@
      nr 1250  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B119 -> B120 falseDestination: B119 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B124" "B122" 
    xhandlers
    flags 
    probability 4605230967425163689
    begin_IR
      LIR
      nr 1252  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1254  <|@ instruction rdx|DWORD = SHL r13|DWORD size: DWORD <|@ <|@
      nr 1256  <|@ instruction rdx|DWORD = LEA [rdx|DWORD + 23] size: DWORD <|@ <|@
      nr 1258  <|@ instruction rdx|DWORD = AND rdx|DWORD y: -8 size: DWORD <|@ <|@
      nr 1260  <|@ instruction rdx|QWORD = MOVSXD rdx|DWORD size: QWORD <|@ <|@
      nr 1262  <|@ instruction rcx|QWORD = ADD (x: rdx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr 1264  <|@ instruction CMP (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1266  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B120 -> B124 falseDestination: B120 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B125" 
    xhandlers
    flags 
    probability 4605160409946364816
    begin_IR
      LIR
      nr 1272  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1274  <|@ instruction MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD <|@ <|@
      nr 1276  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr 1278  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr 1280  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr 1282  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr 1284  <|@ instruction MOV (x: [rax|QWORD + 12], y: r13|DWORD) size: DWORD <|@ <|@
      nr 1286  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1288  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr 1290  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr 1292  <|@ instruction r14|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1294  <|@ instruction JUMP ~[] destination: B122 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B122" "B124" 
    successors "B144" "B127" 
    xhandlers
    flags 
    probability 4606014939411817830
    begin_IR
      LIR
      nr 1314  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1316  <|@ instruction CMP (x: r13|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr 1318  <|@ instruction rsi|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: r14|DWORD) condition: > <|@ <|@
      nr 1320  <|@ instruction rsi|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr 1322  <|@ instruction CMP rsi|QWORD y: 1 size: QWORD <|@ <|@
      nr 1324  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B125 -> B144 falseDestination: B125 -> B127 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B132" "B130" 
    xhandlers
    flags 
    probability 4601511339784447334
    begin_IR
      LIR
      nr 1330  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1332  <|@ instruction r9|DWORD[.] = MOVE stack:32|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1334  <|@ instruction rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr 1336  <|@ instruction rcx|QWORD[*] = LEA [r9|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr 1338  <|@ instruction r10|QWORD = LEA [rsi|QWORD - 16] size: QWORD <|@ <|@
      nr 1340  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1346  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1342  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B127 -> B132 falseDestination: B127 -> B130 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B127" "B130" 
    successors "B135" "B134" 
    xhandlers
    flags 
    probability 4601511339784447334
    begin_IR
      LIR
      nr 1372  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1374  <|@ instruction r10|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr 1376  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1378  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B132 -> B135 falseDestination: B132 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B135" 
    xhandlers
    flags 
    probability 4599551409817811980
    begin_IR
      LIR
      nr 1384  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1386  <|@ instruction xmm0|V128_WORD = H [rcx|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr 1388  <|@ instruction J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr 1390  <|@ instruction r10|QWORD = LEA [r11|QWORD + 8] size: QWORD <|@ <|@
      nr 1392  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 1394  <|@ instruction JUMP ~[] destination: B134 -> B135 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" "B132" 
    successors "B138" "B137" 
    xhandlers
    flags 
    probability 4601511339784447334
    begin_IR
      LIR
      nr 1396  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1398  <|@ instruction r10|QWORD = LEA [rsi|QWORD - 4] size: QWORD <|@ <|@
      nr 1400  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1402  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B135 -> B138 falseDestination: B135 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B135" 
    successors "B138" 
    xhandlers
    flags 
    probability 4599551409817811980
    begin_IR
      LIR
      nr 1408  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1410  <|@ instruction xmm0|V64_WORD = H [rcx|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr 1412  <|@ instruction J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr 1414  <|@ instruction r10|QWORD = LEA [r11|QWORD + 4] size: QWORD <|@ <|@
      nr 1416  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 1418  <|@ instruction JUMP ~[] destination: B137 -> B138 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B137" "B135" 
    successors "B141" "B140" 
    xhandlers
    flags 
    probability 4601511339784447334
    begin_IR
      LIR
      nr 1420  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1422  <|@ instruction r10|QWORD = LEA [rsi|QWORD - 2] size: QWORD <|@ <|@
      nr 1424  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1426  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B138 -> B141 falseDestination: B138 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B138" 
    successors "B141" 
    xhandlers
    flags 
    probability 4599551409817811980
    begin_IR
      LIR
      nr 1432  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1434  <|@ instruction xmm0|V32_WORD = H [rcx|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr 1436  <|@ instruction J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr 1438  <|@ instruction r10|QWORD = LEA [r11|QWORD + 2] size: QWORD <|@ <|@
      nr 1440  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 1442  <|@ instruction JUMP ~[] destination: B140 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" "B138" 
    successors "B144" "B143" 
    xhandlers
    flags 
    probability 4601511339784447334
    begin_IR
      LIR
      nr 1444  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1446  <|@ instruction r10|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr 1448  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1450  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B141 -> B144 falseDestination: B141 -> B143 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B144" 
    xhandlers
    flags 
    probability 4599551409817811980
    begin_IR
      LIR
      nr 1456  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1458  <|@ instruction rcx|DWORD = MOVSX [rcx|QWORD[*] + r11|QWORD * 2] size: DWORD <|@ <|@
      nr 1460  <|@ instruction MOV (x: [rdx|QWORD[.] + r11|QWORD * 2], y: rcx|DWORD) size: WORD <|@ <|@
      nr 1462  <|@ instruction JUMP ~[] destination: B143 -> B144 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B125" "B143" "B141" 
    successors "B145" "B164" 
    xhandlers
    flags 
    probability 4606014939411817830
    begin_IR
      LIR
      nr 1464  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1466  <|@ instruction rdx|QWORD = MOVSXD r13|DWORD size: QWORD <|@ <|@
      nr 1468  <|@ instruction CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1470  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B144 -> B145 falseDestination: B144 -> B164 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B164"
    from_bci -1
    to_bci -1
    predecessors "B144" "B161" "B159" 
    successors "B165" "B166" 
    xhandlers
    flags 
    probability 4606014939411817830
    begin_IR
      LIR
      nr 1610  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1612  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr 1614  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr 1616  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr 1618  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B164 -> B165 falseDestination: B164 -> B166 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B166"
    from_bci -1
    to_bci -1
    predecessors "B164" 
    successors "B167" 
    xhandlers
    flags 
    probability 4605936542213152416
    begin_IR
      LIR
      nr 1640  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1642  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1644  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0 <|@ <|@
      nr 1646  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 1648  <|@ instruction r14|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr 1650  <|@ instruction JUMP ~[] destination: B166 -> B167 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B167"
    from_bci -1
    to_bci -1
    predecessors "B166" "B165" 
    successors 
    xhandlers
    flags 
    probability 4606014939411817830
    begin_IR
      LIR
      nr 1652  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1654  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1656  <|@ instruction rcx|QWORD = MOV [r14|QWORD + 168] size: QWORD <|@ <|@
      nr 1658  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD <|@ <|@
      nr 1660  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr 1662  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@2ae4cec4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1664  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr 1666  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr 1668  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1670  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B146" "B147" 
    xhandlers
    flags 
    probability 4601511339784447334
    begin_IR
      LIR
      nr 1472  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1474  <|@ instruction rcx|QWORD[.] = LEA [rax|QWORD[.] + rsi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr 1476  <|@ instruction rdx|QWORD = SUB (x: rdx|QWORD, ~y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1478  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 16] size: QWORD <|@ <|@
      nr 1480  <|@ instruction TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1482  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B145 -> B146 falseDestination: B145 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B145" 
    successors "B150" 
    xhandlers
    flags 
    probability 4599551409817811980
    begin_IR
      LIR
      nr 1484  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1486  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1488  <|@ instruction JUMP ~[] destination: B146 -> B150 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B146" "B148" 
    successors "B153" "B152" 
    xhandlers
    flags 
    probability 4601511339784447334
    begin_IR
      LIR
      nr 1512  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1514  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr 1516  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1518  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B150 -> B153 falseDestination: B150 -> B152 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B150" 
    successors "B153" 
    xhandlers
    flags 
    probability 4599551409817811980
    begin_IR
      LIR
      nr 1524  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1526  <|@ instruction xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr 1528  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr 1530  <|@ instruction rsi|QWORD = LEA [r10|QWORD + 8] size: QWORD <|@ <|@
      nr 1532  <|@ instruction r10|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 1534  <|@ instruction JUMP ~[] destination: B152 -> B153 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B152" "B150" 
    successors "B156" "B155" 
    xhandlers
    flags 
    probability 4601511339784447334
    begin_IR
      LIR
      nr 1536  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1538  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 4] size: QWORD <|@ <|@
      nr 1540  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1542  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B153 -> B156 falseDestination: B153 -> B155 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B153" 
    successors "B156" 
    xhandlers
    flags 
    probability 4599551409817811980
    begin_IR
      LIR
      nr 1548  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1550  <|@ instruction xmm0|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr 1552  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr 1554  <|@ instruction rsi|QWORD = LEA [r10|QWORD + 4] size: QWORD <|@ <|@
      nr 1556  <|@ instruction r10|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 1558  <|@ instruction JUMP ~[] destination: B155 -> B156 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B156"
    from_bci -1
    to_bci -1
    predecessors "B155" "B153" 
    successors "B159" "B158" 
    xhandlers
    flags 
    probability 4601511339784447334
    begin_IR
      LIR
      nr 1560  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1562  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 2] size: QWORD <|@ <|@
      nr 1564  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1566  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B156 -> B159 falseDestination: B156 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B158"
    from_bci -1
    to_bci -1
    predecessors "B156" 
    successors "B159" 
    xhandlers
    flags 
    probability 4599551409817811980
    begin_IR
      LIR
      nr 1572  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1574  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr 1576  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr 1578  <|@ instruction rsi|QWORD = LEA [r10|QWORD + 2] size: QWORD <|@ <|@
      nr 1580  <|@ instruction r10|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 1582  <|@ instruction JUMP ~[] destination: B158 -> B159 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B159"
    from_bci -1
    to_bci -1
    predecessors "B158" "B156" 
    successors "B164" "B161" 
    xhandlers
    flags 
    probability 4601511339784447334
    begin_IR
      LIR
      nr 1584  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1586  <|@ instruction rdx|QWORD = DEC rdx|QWORD size: QWORD <|@ <|@
      nr 1588  <|@ instruction CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1590  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B159 -> B164 falseDestination: B159 -> B161 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B161"
    from_bci -1
    to_bci -1
    predecessors "B159" 
    successors "B164" 
    xhandlers
    flags 
    probability 4599551409817811980
    begin_IR
      LIR
      nr 1596  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1598  <|@ instruction MOV (x: [rcx|QWORD[.] + r10|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr 1600  <|@ instruction JUMP ~[] destination: B161 -> B164 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B9" 
    xhandlers
    flags 
    probability 4595510675832045031
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ instruction rdi|QWORD = MOVE input: long[2|0x2] <|@ <|@
      nr   56  <|@ instruction r14|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   58  <|@ instruction r13|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ instruction rbp|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   62  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   64  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   66  <|@ instruction stack:56|QWORD = MOVE input: long[2|0x2] <|@ <|@
      nr   68  <|@ instruction JUMP ~[] destination: B3 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B3" 
    successors "B10" "B43" 
    xhandlers
    flags 
    probability 4595512160119122984
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL numbPhis: 7 align: false label: ? <|@ <|@
      nr  146  <|@ instruction CMP rcx|DWORD y: 8 size: DWORD <|@ <|@
      nr  148  <|@ instruction BRANCH trueDestinationProbability: 0.9952836455427129 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B29" 
    xhandlers
    flags 
    probability 4595482238906964772
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  152  <|@ st <@st|@reference-map: [rbx:0, rsi:0, r8:0, r9:0, stack:56, stack:64]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43]
locals: rsi|QWORD[.] rbx|QWORD[.] rdx|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: rsi|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r9|DWORD[.] * 8] state [bci:43, 5] <|@ <|@
      nr  154  <|@ st <@st|@reference-map: [rbx:0, rsi:0, r8:0, r9:0, stack:56, stack:64]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43]
locals: rsi|QWORD[.] rbx|QWORD[.] rdx|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:43, 5] <|@ <|@
      nr  156  <|@ instruction rbp|DWORD = MOV [r9|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  158  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2ae4cec4 encoding: base: 0 shift: 3 <|@ <|@
      nr  160  <|@ instruction rdi|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  162  <|@ instruction CMP (x: r11|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  164  <|@ instruction BRANCH trueDestinationProbability: 0.44783436248413755 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4591637409758675404
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  348  <|@ instruction CMP (x: rcx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  350  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B41" 
    xhandlers
    flags 
    probability 4591637409758675404
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  362  <|@ instruction rcx|DWORD = ADD (x: rdx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  364  <|@ instruction CMP (x: rbp|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  366  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B40" 
    xhandlers
    flags 
    probability 4591637409758675404
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  370  <|@ instruction r13|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  372  <|@ instruction CMP (x: rbp|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  374  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B32 -> B33 falseDestination: B32 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4591637409758675404
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  378  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  380  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4591567679867720299
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  392  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  394  <|@ instruction CMP (x: r10|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  396  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4591498647275674745
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  408  <|@ instruction rbp|DWORD = SUB (x: rbp|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  410  <|@ instruction CMP (x: rdx|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  412  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B109" 
    xhandlers
    flags 
    probability 4591430305009549647
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  424  <|@ instruction stack:80|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  426  <|@ instruction stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  428  <|@ instruction stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  430  <|@ instruction r8|QWORD[*] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  432  <|@ instruction r10|QWORD[*] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ instruction r11|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  436  <|@ instruction rdi|QWORD = LEA [r8|QWORD[*] + rdi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  438  <|@ instruction rsi|QWORD = LEA [r10|QWORD[*] + rdx|DWORD * 2 + 16] size: QWORD <|@ <|@
      nr  440  <|@ instruction rdx|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  442  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  444  <|@ instruction rcx|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  446  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction MOV [rbx|QWORD[.] + rcx|DWORD * 2 + 16] y: 46 size: WORD <|@ <|@
      nr  450  <|@ instruction r13|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr  452  <|@ instruction MOV [rbx|QWORD[.] + r13|DWORD * 2 + 16] y: 48 size: WORD <|@ <|@
      nr  454  <|@ instruction rdi|DWORD = LEA [rcx|DWORD + 2] size: DWORD <|@ <|@
      nr  456  <|@ instruction r13|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  458  <|@ instruction r9|DWORD[.] = MOVE stack:32|DWORD[.] moveKind: DWORD <|@ <|@
      nr  460  <|@ instruction JUMP ~[] destination: B39 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B57" 
    xhandlers
    flags 
    probability 4594480213650448452
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  568  <|@ instruction r9|DWORD = SUB (x: rbp|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  570  <|@ instruction rcx|DWORD = NEG rcx|DWORD size: DWORD <|@ <|@
      nr  572  <|@ instruction rcx|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr  574  <|@ instruction rdx|QWORD = DEC rcx|QWORD size: QWORD <|@ <|@
      nr  576  <|@ instruction CMP (x: r9|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  578  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B51 -> B52 falseDestination: B51 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B58" 
    xhandlers
    flags 
    probability 4589976614023077956
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  630  <|@ instruction stack:88|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  632  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B53" 
    successors "B59" "B60" 
    xhandlers
    flags 
    probability 4594480213650448452
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  636  <|@ instruction CMP (x: rbp|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  638  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B58 -> B59 falseDestination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" "B63" 
    xhandlers
    flags 
    probability 4594480213650448452
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  652  <|@ instruction CMP (x: r9|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  654  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B60 -> B61 falseDestination: B60 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4594480213650448452
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  676  <|@ instruction CMP rcx|QWORD y: 1 size: QWORD <|@ <|@
      nr  678  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4589976614023077956
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  688  <|@ instruction rsi|QWORD[.] = LEA [rbx|QWORD[.] + rbp|DWORD * 2 + 16] size: QWORD <|@ <|@
      nr  690  <|@ instruction r10|QWORD = LEA [rcx|QWORD - 2] size: QWORD <|@ <|@
      nr  692  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  694  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B65 -> B66 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" 
    xhandlers
    flags 
    probability 4588129111075663974
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  704  <|@ instruction xmm0|V32_WORD = A od: SIMD<48,48> oe: WORD <|@ <|@
      nr  706  <|@ instruction J (address: [rsi|QWORD[.]], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  708  <|@ instruction r10|QWORD = MOVE input: long[2|0x2] <|@ <|@
      nr  710  <|@ instruction JUMP ~[] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B66" 
    successors "B69" "B70" 
    xhandlers
    flags 
    probability 4589976614023077956
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  714  <|@ instruction CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  716  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B68 -> B69 falseDestination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" 
    xhandlers
    flags 
    probability 4588129111075663974
    begin_IR
      LIR
      nr  724  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  726  <|@ instruction MOV [rsi|QWORD[.]] y: 48 size: WORD <|@ <|@
      nr  728  <|@ instruction r10|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr  730  <|@ instruction JUMP ~[] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B145" 
    successors "B148" 
    xhandlers
    flags 
    probability 4592504140529706342
    begin_IR
      LIR
      nr 1490  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1492  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr 1494  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1496  <|@ instruction JUMP ~[] destination: B147 -> B148 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B147" "B148" 
    successors "B150" "B148" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4601511339784447334
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1500  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr 1502  <|@ instruction r10|QWORD = LEA [r10|QWORD + 16] size: QWORD <|@ <|@
      nr 1504  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1506  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B148 -> B150 falseDestination: B148 -> B148 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B127" "B130" 
    successors "B132" "B130" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4601511339784447334
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1358  <|@ instruction xmm0|V256_WORD = H [rcx|QWORD[*] + r11|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr 1360  <|@ instruction J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr 1362  <|@ instruction r11|QWORD = LEA [r11|QWORD + 16] size: QWORD <|@ <|@
      nr 1364  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1366  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B130 -> B132 falseDestination: B130 -> B130 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B111" "B112" 
    xhandlers
    flags 
    probability 4591083073830437833
    begin_IR
      LIR
      nr 1154  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1156  <|@ instruction TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr 1158  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B110 -> B111 falseDestination: B110 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B113" "B114" 
    xhandlers
    flags 
    probability 4591083073830437833
    begin_IR
      LIR
      nr 1166  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1168  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr 1170  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr 1172  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr 1174  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B112 -> B113 falseDestination: B112 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B115" 
    xhandlers
    flags 
    probability 4591018887298765104
    begin_IR
      LIR
      nr 1190  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1192  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1194  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 0 <|@ <|@
      nr 1196  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr 1198  <|@ instruction JUMP ~[] destination: B114 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" "B113" 
    successors 
    xhandlers
    flags 
    probability 4591083073830437833
    begin_IR
      LIR
      nr 1200  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1202  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1204  <|@ instruction rdx|QWORD = MOV [r14|QWORD + 168] size: QWORD <|@ <|@
      nr 1206  <|@ instruction MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1208  <|@ instruction MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr 1210  <|@ instruction MOV [rax|QWORD[*] + 12] y: -559030611 size: DWORD c: NarrowOop[char[0]{}] <|@ <|@
      nr 1212  <|@ instruction MOV (x: [rax|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr 1214  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1216  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B119" "B120" 
    successors "B125" 
    xhandlers
    flags 
    probability 4591500656386789040
    begin_IR
      LIR
      nr 1300  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1302  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr 1304  <|@ instruction rdx|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1306  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1308  <|@ instruction r14|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1310  <|@ st <@st|@reference-map: [stack:24, stack:64]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8]
stack: r13|DWORD 
locals: stack:72|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:8] <|@ <|@
      nr 1312  <|@ instruction JUMP ~[] destination: B124 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B28" 
    xhandlers
    flags 
    probability 4590319868800513148
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  168  <|@ instruction stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  170  <|@ instruction CMP (x: rbp|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  172  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4590319868800513148
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  176  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  178  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590263314319139666
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  188  <|@ instruction rsi|DWORD = SUB (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  190  <|@ instruction CMP (x: r10|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  192  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4590207325382579919
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  202  <|@ instruction rsi|DWORD = SUB (x: rbp|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  204  <|@ instruction CMP (x: rdx|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  206  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B26" "B20" 
    xhandlers
    flags 
    probability 4590151896335385769
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  216  <|@ instruction stack:76|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  218  <|@ instruction stack:80|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction stack:84|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  222  <|@ instruction stack:88|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  224  <|@ instruction rsi|QWORD[*] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  226  <|@ instruction r9|QWORD[*] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction r14|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr  230  <|@ instruction rdi|QWORD = LEA [rsi|QWORD[*] + rdi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  232  <|@ instruction rsi|QWORD = LEA [r9|QWORD[*] + rdx|DWORD * 2 + 16] size: QWORD <|@ <|@
      nr  234  <|@ instruction rdx|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  236  <|@ instruction stack:96|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction stack:60|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  240  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  242  <|@ instruction r13|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  244  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  246  <|@ instruction MOV [rbx|QWORD[.] + r13|DWORD * 2 + 16] y: 46 size: WORD <|@ <|@
      nr  248  <|@ instruction r13|DWORD = INC r13|DWORD size: DWORD <|@ <|@
      nr  250  <|@ instruction r10|DWORD = ADD (x: stack:88|DWORD, y: stack:60|DWORD) size: DWORD <|@ <|@
      nr  252  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  254  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B18 -> B26 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B26" "B22" 
    xhandlers
    flags 
    probability 4590097021578663561
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  262  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  264  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: stack:60|DWORD) size: DWORD <|@ <|@
      nr  266  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  268  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B20 -> B26 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B26" "B24" 
    xhandlers
    flags 
    probability 4590042695569508575
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  276  <|@ instruction rax|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr  278  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  280  <|@ instruction CMP (x: r10|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  282  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B22 -> B26 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4589988912820445138
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  290  <|@ instruction rbp|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  292  <|@ instruction rbp|DWORD = SUB (x: rbp|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  294  <|@ instruction CMP (x: r13|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  296  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B24 -> B26 falseDestination: B24 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B109" 
    xhandlers
    flags 
    probability 4589935667898872336
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  312  <|@ instruction r8|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  314  <|@ instruction r8|QWORD[*] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  316  <|@ instruction rbx|QWORD[*] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction rdi|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  320  <|@ instruction rsi|QWORD = MOVSXD r13|DWORD size: QWORD <|@ <|@
      nr  322  <|@ instruction rdx|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  324  <|@ instruction rdi|QWORD = LEA [r8|QWORD[*] + rdi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  326  <|@ instruction rsi|QWORD = LEA [rbx|QWORD[*] + rsi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  328  <|@ instruction stack:76|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  330  <|@ instruction stack:80|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  332  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  334  <|@ instruction r13|DWORD = ADD (x: stack:76|DWORD, y: stack:80|DWORD) size: DWORD <|@ <|@
      nr  336  <|@ instruction r9|DWORD[.] = MOVE stack:32|DWORD[.] moveKind: DWORD <|@ <|@
      nr  338  <|@ instruction JUMP ~[] destination: B27 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B71" 
    xhandlers
    flags 
    probability 4589976614023077956
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  682  <|@ instruction r10|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr  684  <|@ instruction JUMP ~[] destination: B64 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B56" 
    xhandlers
    flags 
    probability 4589976614023077956
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  582  <|@ instruction rsi|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr  584  <|@ instruction stack:88|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  586  <|@ instruction rsi|QWORD = ADD (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  588  <|@ instruction r10|QWORD = MOV rdi|DWORD size: DWORD <|@ <|@
      nr  590  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  592  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B52 -> B53 falseDestination: B52 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B58" "B55" 
    xhandlers
    flags 
    probability 4589976614023077956
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  596  <|@ instruction CMP (x: rdi|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  598  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B53 -> B58 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" 
    xhandlers
    flags 
    probability 4580969414768336964
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  698  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  700  <|@ instruction JUMP ~[] destination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" 
    xhandlers
    flags 
    probability 4580969414768336964
    begin_IR
      LIR
      nr  718  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  720  <|@ instruction r10|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr  722  <|@ instruction JUMP ~[] destination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B165"
    from_bci -1
    to_bci -1
    predecessors "B164" 
    successors "B167" 
    xhandlers
    flags 
    probability 4576171042495639949
    begin_IR
      LIR
      nr 1620  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1622  <|@ instruction stack:40|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1624  <|@ instruction r14|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr 1626  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1628  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr 1630  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1632  <|@ st <@st|@reference-map: [stack:24, stack:56]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8]
stack: r13|DWORD 
locals: stack:72|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:8] <|@ <|@
      nr 1634  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1636  <|@ instruction rax|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1638  <|@ instruction JUMP ~[] destination: B165 -> B167 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B71" "B77" "B75" "B73" 
    successors 
    xhandlers
    flags 
    probability 4584796352382670340
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  742  <|@ instruction rsi|DWORD = MOVE input: int[-180065|0xfffffffffffd409f] <|@ <|@
      nr  790  <|@ instruction MOV (x: [r15|QWORD + 668], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  792  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  794  <|@ st <@st|@reference-map: [rbx:0, stack:24]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 256]
locals: stack:72|QWORD[.] rbx|QWORD[.] r9|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: stack:72|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:256, 5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B44" "B45" 
    successors "B86" "B176" 
    xhandlers
    flags 
    probability 4576022210371686731
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  852  <|@ instruction stack:60|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  854  <|@ instruction stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  860  <|@ st <@st|@reference-map: [rbx:0, r8:0, r9:0, stack:24, stack:56, stack:64]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
locals: stack:72|QWORD[.] rbx|QWORD[.] rdx|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: stack:72|QWORD[.] - 
>@ <|@ instruction rdi|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:283, 5] <|@ <|@
      nr  862  <|@ instruction CMP (x: rdi|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  864  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B85 -> B86 falseDestination: B85 -> B176 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B87" "B175" 
    xhandlers
    flags 
    probability 4576022210371686731
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  868  <|@ st <@st|@reference-map: [rbx:0, r8:0, r9:0, stack:24, stack:56, stack:64]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
locals: stack:72|QWORD[.] rbx|QWORD[.] rdx|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: stack:72|QWORD[.] - 
>@ <|@ instruction r11|DWORD = MOV [r9|DWORD[.] * 8 + 12] size: DWORD state [bci:283, 5] <|@ <|@
      nr  870  <|@ instruction CMP (x: r11|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  872  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B86 -> B87 falseDestination: B86 -> B175 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B88" "B174" 
    xhandlers
    flags 
    probability 4576022210371686731
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  876  <|@ instruction CMP (x: r11|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  878  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B87 -> B88 falseDestination: B87 -> B174 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B89" "B90" 
    xhandlers
    flags 
    probability 4576022210371686731
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  882  <|@ instruction CMP stack:28|DWORD y: 2 size: DWORD <|@ <|@
      nr  884  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B88 -> B89 falseDestination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" "B173" 
    xhandlers
    flags 
    probability 4576022210371686731
    begin_IR
      LIR
      nr  892  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  894  <|@ instruction rsi|DWORD = DEC stack:28|DWORD size: DWORD <|@ <|@
      nr  896  <|@ instruction rcx|DWORD = ADD (x: rsi|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  898  <|@ instruction CMP (x: r11|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  900  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B90 -> B91 falseDestination: B90 -> B173 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B95" "B93" 
    xhandlers
    flags 
    probability 4576022210371686731
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  904  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2ae4cec4 encoding: base: 0 shift: 3 <|@ <|@
      nr  906  <|@ instruction rdx|DWORD = MOVSX [r8|QWORD[.] + r10|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  908  <|@ instruction MOV (x: [r13|QWORD + r9|DWORD[.] * 8], y: rdx|DWORD) size: WORD <|@ <|@
      nr  910  <|@ instruction MOV [r14|QWORD + r9|DWORD[.] * 8] y: 46 size: WORD <|@ <|@
      nr  912  <|@ instruction rdi|DWORD = SUB (x: rdi|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr  914  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  916  <|@ instruction CMP (x: r10|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  918  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B91 -> B95 falseDestination: B91 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B95" "B96" 
    xhandlers
    flags 
    probability 4575973524485780398
    begin_IR
      LIR
      nr  924  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  926  <|@ instruction rdi|DWORD = SUB (x: r11|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr  928  <|@ instruction CMP (x: rbp|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  930  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B93 -> B95 falseDestination: B93 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B97" "B100" 
    xhandlers
    flags 
    probability 4575925325458733128
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  946  <|@ instruction stack:28|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  948  <|@ instruction stack:88|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  950  <|@ instruction r8|QWORD[*] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  952  <|@ instruction rdx|QWORD[*] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  954  <|@ instruction rdi|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  956  <|@ instruction r10|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr  958  <|@ instruction rdi|QWORD = LEA [r8|QWORD[*] + rdi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  960  <|@ instruction rsi|QWORD = LEA [rdx|QWORD[*] + rbp|DWORD * 2 + 16] size: QWORD <|@ <|@
      nr  962  <|@ instruction rdx|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  964  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  966  <|@ instruction rcx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  968  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  970  <|@ instruction MOV [rbx|QWORD[.] + rcx|DWORD * 2 + 16] y: 69 size: WORD <|@ <|@
      nr  972  <|@ instruction r10|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  974  <|@ instruction CMP stack:60|DWORD y: 1 size: DWORD <|@ <|@
      nr  980  <|@ instruction r11|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr  976  <|@ instruction BRANCH trueDestinationProbability: 0.9016620498614958 condition: < trueDestination: B96 -> B97 falseDestination: B96 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B98" "B99" 
    xhandlers
    flags 
    probability 4575254950392379555
    begin_IR
      LIR
      nr  978  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  982  <|@ instruction CMP (x: r11|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  984  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B97 -> B98 falseDestination: B97 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B101" 
    xhandlers
    flags 
    probability 4575254950392379555
    begin_IR
      LIR
      nr  986  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  988  <|@ instruction MOV [rbx|QWORD[.] + r10|DWORD * 2 + 16] y: 45 size: WORD <|@ <|@
      nr  990  <|@ instruction rax|DWORD = LEA [rcx|DWORD + 2] size: DWORD <|@ <|@
      nr  992  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  994  <|@ instruction rdx|DWORD = SUB (x: rdx|DWORD, ~y: stack:60|DWORD) size: DWORD <|@ <|@
      nr  996  <|@ instruction rcx|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  998  <|@ instruction r10|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1000  <|@ instruction JUMP ~[] destination: B98 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B98" "B100" 
    successors "B102" "B171" 
    xhandlers
    flags 
    probability 4575925325458733128
    begin_IR
      LIR
      nr 1018  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1020  <|@ instruction CMP (x: r11|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 1022  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B101 -> B102 falseDestination: B101 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B103" "B104" 
    xhandlers
    flags 
    probability 4575925325458733128
    begin_IR
      LIR
      nr 1024  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1026  <|@ instruction r8|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr 1028  <|@ instruction CMP rcx|DWORD y: 10 size: DWORD <|@ <|@
      nr 1030  <|@ instruction BRANCH trueDestinationProbability: 0.9778393351800554 condition: < trueDestination: B102 -> B103 falseDestination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B109" 
    xhandlers
    flags 
    probability 4575819581332911971
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1034  <|@ instruction rax|DWORD = LEA [rcx|DWORD + 48] size: DWORD <|@ <|@
      nr 1036  <|@ instruction MOV (x: [rbx|QWORD[.] + r10|DWORD * 2 + 16], y: rax|DWORD) size: WORD <|@ <|@
      nr 1038  <|@ instruction r13|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1040  <|@ instruction r9|DWORD[.] = MOVE stack:32|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1042  <|@ instruction JUMP ~[] destination: B103 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B42" 
    xhandlers
    flags 
    probability 4562064649313824873
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  384  <|@ instruction rax|DWORD = MOVE input: int[-154209|0xfffffffffffda59f] <|@ <|@
      nr  386  <|@ instruction stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  388  <|@ instruction JUMP ~[] destination: B34 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" "B41" "B40" "B13" "B34" "B17" "B15" "B38" "B36" 
    successors 
    xhandlers
    flags 
    probability 4572651257581733127
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  480  <|@ instruction MOV (x: [r15|QWORD + 668], y: rax|DWORD) size: DWORD <|@ <|@
      nr  482  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  484  <|@ st <@st|@reference-map: [rbx:0, stack:24]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43]
locals: stack:72|QWORD[.] rbx|QWORD[.] rdx|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: stack:72|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:43, 5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B42" 
    xhandlers
    flags 
    probability 4561975395053402339
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  400  <|@ instruction rax|DWORD = MOVE input: int[-154209|0xfffffffffffda59f] <|@ <|@
      nr  402  <|@ instruction stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  404  <|@ instruction JUMP ~[] destination: B36 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B42" 
    xhandlers
    flags 
    probability 4561887033335584030
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  416  <|@ instruction rax|DWORD = MOVE input: int[-154209|0xfffffffffffda59f] <|@ <|@
      nr  418  <|@ instruction stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  420  <|@ instruction JUMP ~[] destination: B38 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B115" 
    xhandlers
    flags 
    probability 4561355099325680782
    begin_IR
      LIR
      nr 1176  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1178  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1180  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr 1182  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1184  <|@ st <@st|@reference-map: [stack:24]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8]
stack: r13|DWORD 
locals: stack:72|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:8] <|@ <|@
      nr 1186  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1188  <|@ instruction JUMP ~[] destination: B113 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B44" 
    xhandlers
    flags 
    probability 4560799053584073665
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  488  <|@ instruction stack:60|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  490  <|@ instruction stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  492  <|@ instruction r11|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  494  <|@ instruction r9|QWORD = LEA [rdi|QWORD + 16] size: QWORD <|@ <|@
      nr  496  <|@ instruction r13|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  498  <|@ instruction stack:48|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  502  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  506  <|@ instruction r14|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  508  <|@ instruction r9|DWORD[.] = MOVE stack:32|DWORD[.] moveKind: DWORD <|@ <|@
      nr  510  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B101" 
    xhandlers
    flags 
    probability 4560647056204873574
    begin_IR
      LIR
      nr 1010  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1014  <|@ instruction rcx|DWORD = DEC stack:60|DWORD size: DWORD <|@ <|@
      nr 1016  <|@ instruction JUMP ~[] destination: B100 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B42" 
    xhandlers
    flags 
    probability 4560378196887377184
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  182  <|@ instruction rax|DWORD = MOVE input: int[-128865|0xfffffffffffe089f] <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B13 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B42" 
    xhandlers
    flags 
    probability 4560305807151219127
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  196  <|@ instruction rax|DWORD = MOVE input: int[-128865|0xfffffffffffe089f] <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B15 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B42" 
    xhandlers
    flags 
    probability 4560234141312422651
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  210  <|@ instruction rax|DWORD = MOVE input: int[-128865|0xfffffffffffe089f] <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B17 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" "B22" "B24" 
    successors 
    xhandlers
    flags 
    probability 4569065732494742321
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  304  <|@ instruction MOV [r15|QWORD + 668] y: -143201 size: DWORD <|@ <|@
      nr  306  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  308  <|@ st <@st|@reference-map: [rbx:0, stack:24]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:925) [bci: 145]
locals: stack:72|QWORD[.] rbx|QWORD[.] r13|DWORD stack:60|DWORD - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: stack:72|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:145, 5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4552763695007289344
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   72  <|@ instruction stack:60|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   74  <|@ instruction stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   76  <|@ st <@st|@reference-map: [rbx:0, r8:0, r9:0, stack:24, stack:56, stack:64]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 0]
locals: stack:72|QWORD[.] - 
>@ <|@ instruction CMP [r9|DWORD[.] * 8 + 12] y: 0 size: DWORD state [bci:0] <|@ <|@
      nr   78  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4552763695007289344
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   90  <|@ instruction MOV [r9|DWORD[.] * 8 + 16] y: 45 size: WORD <|@ <|@
      nr   92  <|@ instruction CMP stack:60|DWORD y: 1 size: DWORD <|@ <|@
      nr   94  <|@ instruction BRANCH trueDestinationProbability: 0.8239147472715149 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B44" 
    xhandlers
    flags 
    probability 4551243785039465259
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   98  <|@ instruction r14|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  100  <|@ instruction r13|QWORD = MOVE input: long[18|0x12] <|@ <|@
      nr  102  <|@ instruction rbp|DWORD = MOVE input: int[3|0x3] <|@ <|@
      nr  104  <|@ instruction rax|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  106  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  108  <|@ instruction stack:48|QWORD = MOVE input: long[3|0x3] <|@ <|@
      nr  114  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  116  <|@ instruction JUMP ~[] destination: B7 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B105" "B170" 
    xhandlers
    flags 
    probability 4550899648069384485
    begin_IR
      LIR
      nr 1044  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1046  <|@ instruction r9|DWORD[.] = MOVE stack:32|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1048  <|@ instruction CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr 1050  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B104 -> B105 falseDestination: B104 -> B170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B106" "B107" 
    xhandlers
    flags 
    probability 4550899648069384485
    begin_IR
      LIR
      nr 1052  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1054  <|@ instruction r13|DWORD = LEA [r10|DWORD + 2] size: DWORD <|@ <|@
      nr 1056  <|@ instruction CMP rcx|DWORD y: 100 size: DWORD <|@ <|@
      nr 1058  <|@ instruction BRANCH trueDestinationProbability: 0.625 condition: < trueDestination: B105 -> B106 falseDestination: B105 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B109" 
    xhandlers
    flags 
    probability 4548087954455152494
    begin_IR
      LIR
      nr 1060  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1062  <|@ instruction rax|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1064  <|@ instruction rdx|DWORD = MOVE input: int[1717986919|0x66666667] <|@ <|@
      nr 1066  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1068  <|@ instruction rdx|DWORD = SAR rdx|DWORD y: 2 size: DWORD <|@ <|@
      nr 1070  <|@ instruction rax|DWORD = LEA [rdx|DWORD + 48] size: DWORD <|@ <|@
      nr 1072  <|@ instruction MOV (x: [rbx|QWORD[.] + r10|DWORD * 2 + 16], y: rax|DWORD) size: WORD <|@ <|@
      nr 1074  <|@ instruction rax|DWORD = SHL rdx|DWORD y: 3 size: DWORD <|@ <|@
      nr 1076  <|@ instruction rdx|DWORD = SHL rdx|DWORD size: DWORD <|@ <|@
      nr 1078  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1080  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr 1082  <|@ instruction rax|DWORD = LEA [rcx|DWORD + 48] size: DWORD <|@ <|@
      nr 1084  <|@ instruction MOV (x: [rbx|QWORD[.] + r8|DWORD * 2 + 16], y: rax|DWORD) size: WORD <|@ <|@
      nr 1086  <|@ instruction JUMP ~[] destination: B106 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B91" "B93" 
    successors 
    xhandlers
    flags 
    probability 4550332658445861029
    begin_IR
      LIR
      nr  936  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  938  <|@ instruction MOV [r15|QWORD + 668] y: -199521 size: DWORD <|@ <|@
      nr  940  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  942  <|@ st <@st|@reference-map: [rbx:0, stack:24]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:945) [bci: 306]
locals: stack:72|QWORD[.] rbx|QWORD[.] rbp|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: stack:72|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:306, 5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" "B169" 
    xhandlers
    flags 
    probability 4544704142428875484
    begin_IR
      LIR
      nr 1088  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1090  <|@ instruction CMP (x: r11|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr 1092  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B107 -> B108 falseDestination: B107 -> B169 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B109" 
    xhandlers
    flags 
    probability 4544704142428875484
    begin_IR
      LIR
      nr 1094  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1096  <|@ instruction rax|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1098  <|@ instruction rdx|DWORD = MOVE input: int[1374389535|0x51eb851f] <|@ <|@
      nr 1100  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1102  <|@ instruction rdx|DWORD = SAR rdx|DWORD y: 5 size: DWORD <|@ <|@
      nr 1104  <|@ instruction rax|DWORD = LEA [rdx|DWORD + 48] size: DWORD <|@ <|@
      nr 1106  <|@ instruction MOV (x: [rbx|QWORD[.] + r10|DWORD * 2 + 16], y: rax|DWORD) size: WORD <|@ <|@
      nr 1108  <|@ instruction rax|DWORD = IMUL rdx|DWORD y: 100 size: DWORD <|@ <|@
      nr 1110  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr 1112  <|@ instruction rax|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1114  <|@ instruction rdx|DWORD = MOVE input: int[1717986919|0x66666667] <|@ <|@
      nr 1116  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1118  <|@ instruction rdx|DWORD = SAR rdx|DWORD y: 2 size: DWORD <|@ <|@
      nr 1120  <|@ instruction r11|DWORD = SHR rcx|DWORD y: 31 size: DWORD <|@ <|@
      nr 1122  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr 1124  <|@ instruction r11|DWORD = LEA [rdx|DWORD + 48] size: DWORD <|@ <|@
      nr 1126  <|@ instruction MOV (x: [rbx|QWORD[.] + r8|DWORD * 2 + 16], y: r11|DWORD) size: WORD <|@ <|@
      nr 1128  <|@ instruction r11|DWORD = SHL rdx|DWORD y: 3 size: DWORD <|@ <|@
      nr 1130  <|@ instruction rdx|DWORD = SHL rdx|DWORD size: DWORD <|@ <|@
      nr 1132  <|@ instruction r11|DWORD = ADD (x: r11|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1134  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr 1136  <|@ instruction r11|DWORD = LEA [rcx|DWORD + 48] size: DWORD <|@ <|@
      nr 1138  <|@ instruction MOV (x: [rbx|QWORD[.] + r13|DWORD * 2 + 16], y: r11|DWORD) size: WORD <|@ <|@
      nr 1140  <|@ instruction r13|DWORD = LEA [r10|DWORD + 3] size: DWORD <|@ <|@
      nr 1142  <|@ instruction JUMP ~[] destination: B108 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4541204464633385812
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  120  <|@ instruction rcx|DWORD = INC stack:60|DWORD size: DWORD <|@ <|@
      nr  122  <|@ instruction rdi|QWORD = MOVE input: long[4|0x4] <|@ <|@
      nr  124  <|@ instruction r14|QWORD = MOVE input: long[18|0x12] <|@ <|@
      nr  126  <|@ instruction r13|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  128  <|@ instruction rbp|DWORD = MOVE input: int[3|0x3] <|@ <|@
      nr  130  <|@ instruction rax|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  132  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  134  <|@ instruction stack:56|QWORD = MOVE input: long[3|0x3] <|@ <|@
      nr  136  <|@ instruction rcx|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  140  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B177" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  888  <|@ instruction r10|DWORD = MOVE input: int[-190995|0xfffffffffffd15ed] <|@ <|@
      nr  890  <|@ instruction JUMP ~[] destination: B89 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B177"
    from_bci -1
    to_bci -1
    predecessors "B176" "B89" "B175" "B174" "B173" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1726  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1728  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1730  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1732  <|@ st <@st|@reference-map: [rbx:0, stack:24]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
locals: stack:72|QWORD[.] rbx|QWORD[.] rdx|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: stack:72|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:283, 5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B173"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B177" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1702  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1704  <|@ instruction r10|DWORD = MOVE input: int[-202779|0xfffffffffffce7e5] <|@ <|@
      nr 1706  <|@ instruction JUMP ~[] destination: B173 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  464  <|@ instruction rax|DWORD = MOVE input: int[-160795|0xfffffffffffd8be5] <|@ <|@
      nr  466  <|@ instruction stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction JUMP ~[] destination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B169"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B172" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1676  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1678  <|@ instruction r11|DWORD = MOVE input: int[-218139|0xfffffffffffcabe5] <|@ <|@
      nr 1680  <|@ instruction JUMP ~[] destination: B169 -> B172 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B172"
    from_bci -1
    to_bci -1
    predecessors "B171" "B170" "B169" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1694  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1696  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1698  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1700  <|@ st <@st|@reference-map: [rbx:0, stack:24]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 396]
locals: - rbx|QWORD[.] r10|DWORD rcx|DWORD - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: stack:72|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:396, 5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  658  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  660  <|@ instruction r10|DWORD = MOVE input: int[-168211|0xfffffffffffd6eed] <|@ <|@
      nr  664  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B59" "B56" "B61" "B55" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  646  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  668  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  670  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr  672  <|@ st <@st|@reference-map: [rbx:0, rsi:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:936) [bci: 229]
locals: rsi|QWORD[.] rbx|QWORD[.] rbp|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:229, 5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1228  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1230  <|@ instruction r10|DWORD = MOVE input: int[-224787|0xfffffffffffc91ed] <|@ <|@
      nr 1232  <|@ instruction JUMP ~[] destination: B117 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B111" "B117" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1234  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1236  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1238  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1240  <|@ st <@st|@reference-map: [stack:24]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8]
stack: r13|DWORD 
locals: stack:72|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:8] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B83" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  836  <|@ instruction r10|DWORD = MOVE input: int[-164123|0xfffffffffffd7ee5] <|@ <|@
      nr  840  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" "B81" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  842  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  838  <|@ instruction stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  844  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  846  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  848  <|@ st <@st|@reference-map: [rbx:0, stack:24]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
locals: stack:72|QWORD[.] rbx|QWORD[.] rdx|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: stack:72|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:197, 5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  606  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@550168632] <|@ <|@
      nr  608  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  610  <|@ instruction r10|DWORD = MOVE input: int[-168987|0xfffffffffffd6be5] <|@ <|@
      nr  614  <|@ instruction JUMP ~[] destination: B55 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  618  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@550168632] <|@ <|@
      nr  620  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction r10|DWORD = MOVE input: int[-168987|0xfffffffffffd6be5] <|@ <|@
      nr  626  <|@ instruction JUMP ~[] destination: B56 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B83" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  828  <|@ instruction r10|DWORD = MOVE input: int[-166171|0xfffffffffffd76e5] <|@ <|@
      nr  832  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B174"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B177" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1708  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1710  <|@ instruction r10|DWORD = MOVE input: int[-189979|0xfffffffffffd19e5] <|@ <|@
      nr 1712  <|@ instruction JUMP ~[] destination: B174 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B175"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B177" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1714  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1716  <|@ instruction r10|DWORD = MOVE input: int[-188443|0xfffffffffffd1fe5] <|@ <|@
      nr 1718  <|@ instruction JUMP ~[] destination: B175 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B176"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B177" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1720  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1722  <|@ instruction r10|DWORD = MOVE input: int[-185115|0xfffffffffffd2ce5] <|@ <|@
      nr 1724  <|@ instruction JUMP ~[] destination: B176 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B170"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B172" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1682  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1684  <|@ instruction r11|DWORD = MOVE input: int[-236059|0xfffffffffffc65e5] <|@ <|@
      nr 1686  <|@ instruction JUMP ~[] destination: B170 -> B172 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   82  <|@ instruction MOV [r15|QWORD + 668] y: -225051 size: DWORD <|@ <|@
      nr   84  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   86  <|@ st <@st|@reference-map: [stack:24]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 0]
locals: stack:72|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  354  <|@ instruction rax|DWORD = MOVE input: int[-156947|0xfffffffffffd9aed] <|@ <|@
      nr  356  <|@ instruction stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ instruction JUMP ~[] destination: B30 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1162  <|@ instruction r10|DWORD = MOVE input: int[-222483|0xfffffffffffc9aed] <|@ <|@
      nr 1164  <|@ instruction JUMP ~[] destination: B111 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1004  <|@ instruction MOV [r15|QWORD + 668] y: -220699 size: DWORD <|@ <|@
      nr 1006  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1008  <|@ st <@st|@reference-map: [rbx:0, stack:24]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:953) [bci: 363]
locals: stack:72|QWORD[.] rbx|QWORD[.] r10|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: stack:72|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:363, 5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B171"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B172" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1688  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1690  <|@ instruction r11|DWORD = MOVE input: int[-236571|0xfffffffffffc63e5] <|@ <|@
      nr 1692  <|@ instruction JUMP ~[] destination: B171 -> B172 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  472  <|@ instruction rax|DWORD = MOVE input: int[-158491|0xfffffffffffd94e5] <|@ <|@
      nr  474  <|@ instruction stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  476  <|@ instruction JUMP ~[] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  642  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  644  <|@ instruction r10|DWORD = MOVE input: int[-167955|0xfffffffffffd6fed] <|@ <|@
      nr  648  <|@ instruction JUMP ~[] destination: B59 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  342  <|@ instruction rax|DWORD = MOVE input: int[-132891|0xfffffffffffdf8e5] <|@ <|@
      nr  344  <|@ instruction JUMP ~[] destination: B28 -> B42 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_0       
     2: getfield      #3          // buffer:char[]
     5: invokespecial #11         // getChars:(char[])int
     8: istore_1      
     9: new           #14         // java.lang.String
    12: dup           
    13: aload_0       
    14: getfield      #3          // buffer:char[]
    17: iconst_0      
    18: iload_1       
    19: invokespecial #12         // java.lang.String.<init>:(char[], int, int)void
    22: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec5848896c2450448b5610448b5e1444895c2444448b461c448b4e2044894c24408b4e0c0fb67e18418bd948c1e30348895c243885ff0f85c208000083f9010f8d1b03000049c7c61200000049c7c510000000bd02000000b801000000ba0000000048c74424300200000083f9010f8da906000083f9fe0f8ca0060000428b3ccd0c0000003bfa0f86600a00003bf80f86a10a00006643c744cd0030006643c704ce2e0085c948897424180f859e030000448bcd438504c44585d20f8c430600004585db0f8c3a060000428b34c50c000000412bf3443bd60f8f26060000412bfb443bcf0f8f1a06000049c1e0034963fa4963f14963d3498d7c7810488d74731044894c2408e80000000090448b4c240844034c2444458be9448b4c2440438504cc49beaddeaddeaddeadde4183fd010f8cdb030000468b14cd0c000000418bc2412bc585c00f8c87090000498b4760498b77704181fdffffff000f830b040000418bd5d1e28d521783e2f84863d2488bca4803c8483bce0f87ee03000049894f600f188402c00000000f188402000100000f188402400100000f188402800100004489680c48c70001000000c74008addeadde458bf2453bee418bf5410f4ff64863f64883fe010f8c9e000000448b4c2440488d50104a8d0ccd100000004c8d56f04d85d249c7c3000000000f8d040300004c8d56f84d3bda0f8f13000000c4a17a6f0459c4a17a7f045a4d8d53084d8bda4c8d56fc4d3bda0f8f13000000c4a1f96e0459c4a1f97e045a4d8d53044d8bda4c8d56fe4d3bda0f8f13000000c4a1796e0459c4a1797e045a4d8d53024d8bda4c8bd649ffca4d3bda0f8f0a000000420fbf0c596642890c5a4963d5483bd60f8f5c000000498b7760488d5618493b57700f8744040000498957600f1886d800000049beaddeaddeaddeadde488bd6498b8ea800000048890ec74608addeadde48c1e80389460c44896610488bc2488b6c24504883c458850500000000c5f877c3488d4c7010482bd6488d72f04885f60f8ddf01000049c7c200000000488d72f84c3bd60f8f11000000c5f9efc0c4a17a7f0451498d72084c8bd6488d72fc4c3bd60f8f11000000c5f9efc0c4a1f97e0451498d72044c8bd6488d72fe4c3bd60f8f11000000c5f9efc0c4a1797e0451498d72024c8bd648ffca4c3bd20f8f22ffffff6646892451e918ffffff48c7c70200000049c7c610000000448be9bd02000000b801000000ba0000000048c74424280200000083f9080f8dff040000438504cc428b04c50c000000428b2ccd0c00000049c1e0034963fa443bd90f8fd6010000413bcb0f8fc30700008bca4103cb3be90f86f3070000448be941ffc5413bed0f86a60600004585d20f8c58040000412bc3443bd00f8f6a040000412beb3bd50f8f6b04000044896c2410894c241448897424184c8bd34d63db498d7c7810498d745210498bd3e800000000908b4c2414488b5c243866c7444b102e00448b6c24106642c7446b1030008d7902448bef448b4c2440e9cffcffff448bcd442bc9f7d94863c9488bd148ffca443bcd0f8f290200004489542408413be90f8f57070000443bcf0f8f2a0600004883f9010f8cfe010000488d746b104c8d51fe4d85d20f8c1c020000c4c1796e0500000000c5f97e0649c7c2020000004c3bd20f8f0b02000066c7063000448b542408e9ecfbffffc5f9efc049c7c2000000000f1f4000c4a17e7f04514d8d52104c3bd67ef1e905feffff660f1f440000660f1f440000c4a17e6f0459c4a17e7f045a4d8d5b104d3bda7eebe9e2fcffff4585ed0f8c77060000498b4760488d7018493b77700f8746030000498977600f1880d8000000488bf0498b96a8000000488910c74008addeaddec7400caddeadde44896010488bc6488b6c24504883c458850500000000c5f877c348beaddeaddeaddeadde418bd5b900000000458bf2e80000000090e92bfcffff4889742418413bed0f86490600004585d20f8c250300008bf02bf1443bd60f8f220300008bf52bf13bd60f8f20030000896c24148944241044896c240c4489542408498bf04c8bcb4c63f1488d7c7e10498d745110498bd64c890424894c2424e80000000090448b6c240c488b5c24386642c7446b102e0041ffc5448b54240844035424244585d20f8ccc020000448b5c2444442b5c24244585db0f8cb90200008b442410412bc3443bd00f8fa90200008b6c2414412beb443bed0f8f990200004c8b04244963fa4963f54963d3498d7c7810488d74731044896c241444895c2410e80000000090448b6c241444036c2410448b4c2440e996faffff448b542408e922faffff488b74243044895424084803f2448bd74c3bd60f86760400003bfd0f87bbfdffffe95404000049c7c200000000e9ecfdffff448b542408e9e6f9ffff488944243849beaddeaddeaddeadde48beaddeaddeaddeaddeba02000000b901000000e80000000090488bf0488b442438e99bfbffffbe9f40fdff4189b79c0200004d89a7a8020000e80000000090894c24244889742418428b3cc50c000000413bfa0f861d040000468b1ccd0c000000443bda0f8601040000443bd80f86ed030000837c2444020f8c030300008b742444ffce8bce03cd443bd90f860a03000049c1e003430fbf54501066438954cd006643c704ce2e002bfe41ffc2443bd70f8f11020000418bfb2bfe3bef0f8f04020000894c244444895c2408488bd34963fa4c63d6498d7c7810488d746a10498bd2e800000000908b4c2444488b5c243866c7444b104500448bd141ffc2837c242401448b5c24080f8dd1000000453bda0f86a70300006642c74453102d008d4102ba010000002b5424248bca448bd0453bda0f869d030000458bc241ffc083f90a0f8d360100008d4130664289445310458be8448b4c2440e9e2f8ffffb89fa5fdff48897424184189879c0200004d89a7a8020000e80000000090b89fa5fdff4889742418ebe0b89fa5fdff4889742418ebd448beaddeaddeaddeaddeba02000000b901000000e80000000090e9a6fcffff894c242448897424184c8b5c24284c8d4f104d8bee4c895c2430448b5c24444d8bf1448b4c2440e9aef7ffff8b4c2424ffc9e946ffffffb89f08feffe974ffffffb89f08feffe96affffffb89f08feffe960ffffff41c7879c0200009fd0fdff4d89a7a8020000e80000000090894c2424488974241842833ccd0c000000000f84540200006642c704cd100000002d00837c2424010f8df600000049c7c61400000049c7c512000000bd03000000b802000000ba0100000048c744243003000000488b742418e90ff7ffff448b4c2440453bd80f86f5010000458d6a0283f9640f8d460000008bc1ba67666666f7eac1fa028d42306642894453108bc2c1e003d1e203c22bc88d4130664289444310e979f7ffff41c7879c0200009ff4fcff4d89a7a8020000e80000000090453bdd0f86ca0000008bc1ba1f85eb51f7eac1fa058d42306642894453106bc2642bc88bc1ba67666666f7eac1fa02448bd941c1eb1f4103d3448d5a306646895c4310448bda41c1e303d1e24403da412bcb448d59306646895c6b10458d6a03e9fcf6ffff8b4c2424ffc148c7c70400000049c7c612000000448be9bd03000000b802000000ba0100000048c7442428030000008b4c2424488b742418e92af9ffff41baed15fdff4589979c0200004d89a7a8020000e8000000009041bae5e7fcffebe4b8e58bfdff4889742418e9b6fdffff41bbe5abfcff45899f9c0200004d89a7a8020000e8000000009049bb000000000000000041baed6efdff488b7424184589979c0200004d899fa8020000e8000000009041baed91fcff4589979c0200004d89a7a8020000e8000000009041bae57efdff48897424184589979c0200004d89a7a8020000e8000000009049baaddeaddeaddeadde4d8bda41bae56bfdffeb9949baaddeaddeaddeadde4d8bda41bae56bfdffeb8441bae576fdffebb541bae519fdffe91cffffff41bae51ffdffe911ffffff41bae52cfdffe906ffffff41bbe565fcffe92cffffff41c7879c020000e590fcff4d89a7a8020000e80000000090b8ed9afdff4889742418e9b5fcffff41baed9afcffe93dffffff41c7879c020000e5a1fcff4d89a7a8020000e8000000009041bbe563fcffe9d7feffffb8e594fdff4889742418e978fcffff49bb000000000000000041baed6ffdffe9d7feffffb8e5f8fdffe959fcffffe80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@61e4165f slotKind: QWORD  <||@
  Comment 48 6 r10|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 52 8 r11|DWORD = MOV [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 56 10 stack:28|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 61 12 r8|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 65 14 r9|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD  <||@
  Comment 69 16 stack:32|DWORD[.] = MOVE r9|DWORD[.] moveKind: DWORD  <||@
  Comment 74 18 rcx|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 77 20 rdi|DWORD = MOVZXB [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 81 22 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2ae4cec4 encoding: base: 0 shift: 3  <||@
  Comment 88 24 stack:40|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 93 26 TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 95 28 BRANCH trueDestinationProbability: 0.9997660380889991 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4  <||@
  Comment 101 block B1 null  <||@
  Comment 101 30 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 101 32 CMP rcx|DWORD y: 1 size: DWORD  <||@
  Comment 104 34 BRANCH trueDestinationProbability: 0.8239147472715149 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3  <||@
  Comment 110 block B2 null  <||@
  Comment 110 36 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 110 38 r14|QWORD = MOVE input: long[18|0x12]  <||@
  Comment 117 40 r13|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 124 42 rbp|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 129 44 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 134 46 rdx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 139 48 stack:48|QWORD = MOVE input: long[2|0x2]  <||@
  Comment 148 50 JUMP ~[] destination: B2 -> B44  <||@
  Comment 148 block B44 null  <||@
  Comment 148 512 [] = LABEL numbPhis: 6 align: false label: ?  <||@
  Comment 148 514 CMP rcx|DWORD y: 1 size: DWORD  <||@
  Comment 151 516 BRANCH trueDestinationProbability: 0.9989929363705994 condition: < trueDestination: B44 -> B45 falseDestination: B44 -> B85  <||@
  Comment 157 block B45 null  <||@
  Comment 157 518 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 157 520 CMP rcx|DWORD y: -2 size: DWORD  <||@
  Comment 160 522 BRANCH trueDestinationProbability: 0.009242564066160308 condition: < trueDestination: B45 -> B85 falseDestination: B45 -> B47  <||@
  Comment 166 block B47 null  <||@
  Comment 166 532 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 166 534 rdi|DWORD = MOV [r9|DWORD[.] * 8 + 12] size: DWORD state [bci:197, 5]  <||@
  Comment 166 [rbx:0, rsi:0, r8:0, r9:0, stack:64]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197, duringCall: false, rethrow: false]
              |0             |1             |2          |3  |4 
     locals:  |rsi|QWORD[.]  |rbx|QWORD[.]  |rdx|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 166 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 174 536 CMP (x: rdi|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 176 538 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B47 -> B48 falseDestination: B47 -> B82  <||@
  Comment 182 block B48 null  <||@
  Comment 182 540 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 182 542 CMP (x: rdi|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 184 544 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B48 -> B49 falseDestination: B48 -> B81  <||@
  Comment 190 block B49 null  <||@
  Comment 190 546 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 190 548 MOV [r13|QWORD + r9|DWORD[.] * 8] y: 48 size: WORD  <||@
  Comment 198 550 MOV [r14|QWORD + r9|DWORD[.] * 8] y: 46 size: WORD  <||@
  Comment 205 552 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 207 558 stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 212 554 BRANCH trueDestinationProbability: 0.8193763792164618 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51  <||@
  Comment 218 block B50 null  <||@
  Comment 218 556 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 218 560 r9|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 221 562 JUMP ~[] destination: B50 -> B71  <||@
  Comment 221 block B71 null  <||@
  Comment 221 732 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 221 734 NULLCHECK [r12|QWORD[*] + r8|DWORD[.] * 8] state [bci:256, 5]  <||@
  Comment 221 [rbx:0, r8:0, stack:24, stack:64]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 256, duringCall: false, rethrow: false]
              |0                  |1             |2         |3  |4 
     locals:  |stack:72|QWORD[.]  |rbx|QWORD[.]  |r9|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:72|QWORD[.]  |-   <||@
  Comment 221 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 225 736 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 228 738 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B71 -> B79 falseDestination: B71 -> B73  <||@
  Comment 234 block B73 null  <||@
  Comment 234 746 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 234 748 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 237 750 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B73 -> B79 falseDestination: B73 -> B75  <||@
  Comment 243 block B75 null  <||@
  Comment 243 758 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 243 760 rsi|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 251 762 rsi|DWORD = SUB (x: rsi|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 254 764 CMP (x: r10|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 257 766 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B75 -> B79 falseDestination: B75 -> B77  <||@
  Comment 263 block B77 null  <||@
  Comment 263 774 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 263 776 rdi|DWORD = SUB (x: rdi|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 266 778 CMP (x: r9|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 269 780 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B77 -> B79 falseDestination: B77 -> B80  <||@
  Comment 275 block B80 null  <||@
  Comment 275 796 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 275 798 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2ae4cec4 encoding: base: 0 shift: 3  <||@
  Comment 279 800 r8|QWORD[*] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 279 802 rbx|QWORD[*] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 279 804 rdi|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 282 806 rsi|QWORD = MOVSXD r9|DWORD size: QWORD  <||@
  Comment 285 808 rdx|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 288 810 rdi|QWORD = LEA [r8|QWORD[*] + rdi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 293 812 rsi|QWORD = LEA [rbx|QWORD[*] + rsi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 298 814 stack:88|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 303 816 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 303 {Field[name=StubRoutines::_jshort_arraycopy, type=address, offset=0, address=0x105a7dc78, value=0x106812d40]:0x106812d40}  <||@
  Comment 309 818 r9|DWORD = ADD (x: stack:88|DWORD, y: stack:28|DWORD) size: DWORD  <||@
  Comment 319 820 r13|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 322 822 r9|DWORD[.] = MOVE stack:32|DWORD[.] moveKind: DWORD  <||@
  Comment 327 824 JUMP ~[] destination: B80 -> B109  <||@
  Comment 327 block B109 null  <||@
  Comment 327 1144 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 327 1146 NULLCHECK [r12|QWORD[*] + r9|DWORD[.] * 8] state [bci:8]  <||@
  Comment 327 [r9:0, stack:24, stack:64]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1 
     locals:  |stack:72|QWORD[.]  |- 
     stack:   |r13|DWORD          |    <||@
  Comment 327 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 331 1148 r14|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 331 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 341 1150 CMP r13|DWORD y: 1 size: DWORD  <||@
  Comment 345 1152 BRANCH trueDestinationProbability: 0.09284041465770032 condition: < trueDestination: B109 -> B110 falseDestination: B109 -> B116  <||@
  Comment 351 block B116 null  <||@
  Comment 351 1218 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 351 1220 r10|DWORD = MOV [r9|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 359 1222 rax|DWORD = SUB (x: r10|DWORD, ~y: r13|DWORD) size: DWORD  <||@
  Comment 365 1224 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 367 1226 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B116 -> B117 falseDestination: B116 -> B119  <||@
  Comment 373 block B119 null  <||@
  Comment 373 1242 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 373 1244 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 377 1246 rsi|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 381 1248 CMP r13|DWORD y: 16777215 size: DWORD  <||@
  Comment 388 1250 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B119 -> B120 falseDestination: B119 -> B124  <||@
  Comment 394 block B120 null  <||@
  Comment 394 1252 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 394 1254 rdx|DWORD = SHL r13|DWORD size: DWORD  <||@
  Comment 399 1256 rdx|DWORD = LEA [rdx|DWORD + 23] size: DWORD  <||@
  Comment 402 1258 rdx|DWORD = AND rdx|DWORD y: -8 size: DWORD  <||@
  Comment 405 1260 rdx|QWORD = MOVSXD rdx|DWORD size: QWORD  <||@
  Comment 408 1262 rcx|QWORD = ADD (x: rdx|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 414 1264 CMP (x: rcx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 417 1266 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B120 -> B124 falseDestination: B120 -> B122  <||@
  Comment 423 block B122 null  <||@
  Comment 423 1272 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 423 1274 MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD  <||@
  Comment 427 1276 AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 192] instr: 0  <||@
  Comment 435 1278 AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 256] instr: 0  <||@
  Comment 443 1280 AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 320] instr: 0  <||@
  Comment 451 1282 AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 384] instr: 0  <||@
  Comment 459 1284 MOV (x: [rax|QWORD + 12], y: r13|DWORD) size: DWORD  <||@
  Comment 463 1286 MOV [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 470 1288 MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 470 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 477 1290 rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 477 1292 r14|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 480 1294 JUMP ~[] destination: B122 -> B125  <||@
  Comment 480 block B125 null  <||@
  Comment 480 1314 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 480 1316 CMP (x: r13|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 483 1318 rsi|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: r14|DWORD) condition: >  <||@
  Comment 490 1320 rsi|QWORD = MOVSXD rsi|DWORD size: QWORD  <||@
  Comment 493 1322 CMP rsi|QWORD y: 1 size: QWORD  <||@
  Comment 497 1324 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B125 -> B144 falseDestination: B125 -> B127  <||@
  Comment 503 block B127 null  <||@
  Comment 503 1330 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 503 1332 r9|DWORD[.] = MOVE stack:32|DWORD[.] moveKind: DWORD  <||@
  Comment 508 1334 rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 512 1336 rcx|QWORD[*] = LEA [r9|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 520 1338 r10|QWORD = LEA [rsi|QWORD - 16] size: QWORD  <||@
  Comment 524 1340 TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 527 1346 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 534 1342 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B127 -> B132 falseDestination: B127 -> B130  <||@
  Comment 540 block B132 null  <||@
  Comment 540 1372 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 540 1374 r10|QWORD = LEA [rsi|QWORD - 8] size: QWORD  <||@
  Comment 544 1376 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 547 1378 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B132 -> B135 falseDestination: B132 -> B134  <||@
  Comment 553 block B134 null  <||@
  Comment 553 1384 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 553 1386 xmm0|V128_WORD = H [rcx|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVDQU  <||@
  Comment 559 1388 J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 565 1390 r10|QWORD = LEA [r11|QWORD + 8] size: QWORD  <||@
  Comment 569 1392 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 572 1394 JUMP ~[] destination: B134 -> B135  <||@
  Comment 572 block B135 null  <||@
  Comment 572 1396 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 572 1398 r10|QWORD = LEA [rsi|QWORD - 4] size: QWORD  <||@
  Comment 576 1400 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 579 1402 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B135 -> B138 falseDestination: B135 -> B137  <||@
  Comment 585 block B137 null  <||@
  Comment 585 1408 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 585 1410 xmm0|V64_WORD = H [rcx|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVQ  <||@
  Comment 591 1412 J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 597 1414 r10|QWORD = LEA [r11|QWORD + 4] size: QWORD  <||@
  Comment 601 1416 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 604 1418 JUMP ~[] destination: B137 -> B138  <||@
  Comment 604 block B138 null  <||@
  Comment 604 1420 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 604 1422 r10|QWORD = LEA [rsi|QWORD - 2] size: QWORD  <||@
  Comment 608 1424 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 611 1426 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B138 -> B141 falseDestination: B138 -> B140  <||@
  Comment 617 block B140 null  <||@
  Comment 617 1432 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 617 1434 xmm0|V32_WORD = H [rcx|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVD  <||@
  Comment 623 1436 J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 629 1438 r10|QWORD = LEA [r11|QWORD + 2] size: QWORD  <||@
  Comment 633 1440 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 636 1442 JUMP ~[] destination: B140 -> B141  <||@
  Comment 636 block B141 null  <||@
  Comment 636 1444 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 636 1446 r10|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 642 1448 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 645 1450 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B141 -> B144 falseDestination: B141 -> B143  <||@
  Comment 651 block B143 null  <||@
  Comment 651 1456 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 651 1458 rcx|DWORD = MOVSX [rcx|QWORD[*] + r11|QWORD * 2] size: DWORD  <||@
  Comment 656 1460 MOV (x: [rdx|QWORD[.] + r11|QWORD * 2], y: rcx|DWORD) size: WORD  <||@
  Comment 661 1462 JUMP ~[] destination: B143 -> B144  <||@
  Comment 661 block B144 null  <||@
  Comment 661 1464 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 661 1466 rdx|QWORD = MOVSXD r13|DWORD size: QWORD  <||@
  Comment 664 1468 CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 667 1470 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B144 -> B145 falseDestination: B144 -> B164  <||@
  Comment 673 block B164 null  <||@
  Comment 673 1610 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 673 1612 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 677 1614 rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD  <||@
  Comment 681 1616 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 685 1618 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B164 -> B165 falseDestination: B164 -> B166  <||@
  Comment 691 block B166 null  <||@
  Comment 691 1640 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 691 1642 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 695 1644 AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0  <||@
  Comment 702 1646 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 702 1648 r14|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 702 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 712 1650 JUMP ~[] destination: B166 -> B167  <||@
  Comment 712 block B167 null  <||@
  Comment 712 1652 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 712 1654 rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 715 1656 rcx|QWORD = MOV [r14|QWORD + 168] size: QWORD  <||@
  Comment 722 1658 MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD  <||@
  Comment 725 1660 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 725 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 732 1662 rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@2ae4cec4 encoding: base: 0 shift: 3  <||@
  Comment 736 1664 MOV (x: [rsi|QWORD[*] + 12], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 739 1666 MOV (x: [rsi|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 743 1668 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 746 1670 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 755 12  <||@
  Comment 765 block B145 null  <||@
  Comment 765 1472 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 765 1474 rcx|QWORD[.] = LEA [rax|QWORD[.] + rsi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 770 1476 rdx|QWORD = SUB (x: rdx|QWORD, ~y: rsi|QWORD) size: QWORD  <||@
  Comment 773 1478 rsi|QWORD = LEA [rdx|QWORD - 16] size: QWORD  <||@
  Comment 777 1480 TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 780 1482 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B145 -> B146 falseDestination: B145 -> B147  <||@
  Comment 786 block B146 null  <||@
  Comment 786 1484 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 786 1486 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 793 1488 JUMP ~[] destination: B146 -> B150  <||@
  Comment 793 block B150 null  <||@
  Comment 793 1512 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 793 1514 rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD  <||@
  Comment 797 1516 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 800 1518 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B150 -> B153 falseDestination: B150 -> B152  <||@
  Comment 806 block B152 null  <||@
  Comment 806 1524 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 806 1526 xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 810 1528 J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 816 1530 rsi|QWORD = LEA [r10|QWORD + 8] size: QWORD  <||@
  Comment 820 1532 r10|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 823 1534 JUMP ~[] destination: B152 -> B153  <||@
  Comment 823 block B153 null  <||@
  Comment 823 1536 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 823 1538 rsi|QWORD = LEA [rdx|QWORD - 4] size: QWORD  <||@
  Comment 827 1540 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 830 1542 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B153 -> B156 falseDestination: B153 -> B155  <||@
  Comment 836 block B155 null  <||@
  Comment 836 1548 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 836 1550 xmm0|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 840 1552 J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 846 1554 rsi|QWORD = LEA [r10|QWORD + 4] size: QWORD  <||@
  Comment 850 1556 r10|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 853 1558 JUMP ~[] destination: B155 -> B156  <||@
  Comment 853 block B156 null  <||@
  Comment 853 1560 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 853 1562 rsi|QWORD = LEA [rdx|QWORD - 2] size: QWORD  <||@
  Comment 857 1564 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 860 1566 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B156 -> B159 falseDestination: B156 -> B158  <||@
  Comment 866 block B158 null  <||@
  Comment 866 1572 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 866 1574 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 870 1576 J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 876 1578 rsi|QWORD = LEA [r10|QWORD + 2] size: QWORD  <||@
  Comment 880 1580 r10|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 883 1582 JUMP ~[] destination: B158 -> B159  <||@
  Comment 883 block B159 null  <||@
  Comment 883 1584 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 883 1586 rdx|QWORD = DEC rdx|QWORD size: QWORD  <||@
  Comment 886 1588 CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 889 1590 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B159 -> B164 falseDestination: B159 -> B161  <||@
  Comment 895 block B161 null  <||@
  Comment 895 1596 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 895 1598 MOV (x: [rcx|QWORD[.] + r10|QWORD * 2], y: r12|ILLEGAL) size: WORD  <||@
  Comment 900 1600 JUMP ~[] destination: B161 -> B164  <||@
  Comment 905 block B3 null  <||@
  Comment 905 52 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 905 54 rdi|QWORD = MOVE input: long[2|0x2]  <||@
  Comment 912 56 r14|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 919 58 r13|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 922 60 rbp|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 927 62 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 932 64 rdx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 937 66 stack:56|QWORD = MOVE input: long[2|0x2]  <||@
  Comment 946 68 JUMP ~[] destination: B3 -> B9  <||@
  Comment 946 block B9 null  <||@
  Comment 946 144 [] = LABEL numbPhis: 7 align: false label: ?  <||@
  Comment 946 146 CMP rcx|DWORD y: 8 size: DWORD  <||@
  Comment 949 148 BRANCH trueDestinationProbability: 0.9952836455427129 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B43  <||@
  Comment 955 block B10 null  <||@
  Comment 955 150 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 955 152 NULLCHECK [r12|QWORD[*] + r9|DWORD[.] * 8] state [bci:43, 5]  <||@
  Comment 955 [rbx:0, rsi:0, r8:0, r9:0, stack:56, stack:64]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43, duringCall: false, rethrow: false]
              |0             |1             |2          |3  |4 
     locals:  |rsi|QWORD[.]  |rbx|QWORD[.]  |rdx|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 955 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 959 154 rax|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:43, 5]  <||@
  Comment 959 [rbx:0, rsi:0, r8:0, r9:0, stack:56, stack:64]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43, duringCall: false, rethrow: false]
              |0             |1             |2          |3  |4 
     locals:  |rsi|QWORD[.]  |rbx|QWORD[.]  |rdx|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 959 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 967 156 rbp|DWORD = MOV [r9|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 975 158 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2ae4cec4 encoding: base: 0 shift: 3  <||@
  Comment 979 160 rdi|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 982 162 CMP (x: r11|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 985 164 BRANCH trueDestinationProbability: 0.44783436248413755 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B29  <||@
  Comment 991 block B29 null  <||@
  Comment 991 346 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 991 348 CMP (x: rcx|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 994 350 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31  <||@
  Comment 1000 block B31 null  <||@
  Comment 1000 360 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1000 362 rcx|DWORD = ADD (x: rdx|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 1005 364 CMP (x: rbp|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 1007 366 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B41  <||@
  Comment 1013 block B32 null  <||@
  Comment 1013 368 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1013 370 r13|DWORD = INC rcx|DWORD size: DWORD  <||@
  Comment 1019 372 CMP (x: rbp|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 1022 374 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B32 -> B33 falseDestination: B32 -> B40  <||@
  Comment 1028 block B33 null  <||@
  Comment 1028 376 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1028 378 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 1031 380 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35  <||@
  Comment 1037 block B35 null  <||@
  Comment 1037 390 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1037 392 rax|DWORD = SUB (x: rax|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 1040 394 CMP (x: r10|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1043 396 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B37  <||@
  Comment 1049 block B37 null  <||@
  Comment 1049 406 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1049 408 rbp|DWORD = SUB (x: rbp|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 1052 410 CMP (x: rdx|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 1054 412 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B37 -> B38 falseDestination: B37 -> B39  <||@
  Comment 1060 block B39 null  <||@
  Comment 1060 422 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1060 424 stack:80|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 1065 426 stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1069 428 stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1074 430 r8|QWORD[*] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1074 432 r10|QWORD[*] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 1077 434 r11|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 1080 436 rdi|QWORD = LEA [r8|QWORD[*] + rdi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 1085 438 rsi|QWORD = LEA [r10|QWORD[*] + rdx|DWORD * 2 + 16] size: QWORD  <||@
  Comment 1090 440 rdx|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 1093 442 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 1093 {Field[name=StubRoutines::_jshort_arraycopy, type=address, offset=0, address=0x105a7dc78, value=0x106812d40]:0x106812d40}  <||@
  Comment 1099 444 rcx|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 1103 446 rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1108 448 MOV [rbx|QWORD[.] + rcx|DWORD * 2 + 16] y: 46 size: WORD  <||@
  Comment 1115 450 r13|DWORD = MOVE stack:80|DWORD moveKind: DWORD  <||@
  Comment 1120 452 MOV [rbx|QWORD[.] + r13|DWORD * 2 + 16] y: 48 size: WORD  <||@
  Comment 1128 454 rdi|DWORD = LEA [rcx|DWORD + 2] size: DWORD  <||@
  Comment 1131 456 r13|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 1134 458 r9|DWORD[.] = MOVE stack:32|DWORD[.] moveKind: DWORD  <||@
  Comment 1139 460 JUMP ~[] destination: B39 -> B109  <||@
  Comment 1144 block B51 null  <||@
  Comment 1144 564 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1144 568 r9|DWORD = SUB (x: rbp|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 1150 570 rcx|DWORD = NEG rcx|DWORD size: DWORD  <||@
  Comment 1152 572 rcx|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 1155 574 rdx|QWORD = DEC rcx|QWORD size: QWORD  <||@
  Comment 1161 576 CMP (x: r9|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 1164 578 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B51 -> B52 falseDestination: B51 -> B57  <||@
  Comment 1170 block B57 null  <||@
  Comment 1170 628 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1170 630 stack:88|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1175 632 JUMP ~[] destination: B57 -> B58  <||@
  Comment 1175 block B58 null  <||@
  Comment 1175 634 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1175 636 CMP (x: rbp|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 1178 638 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B58 -> B59 falseDestination: B58 -> B60  <||@
  Comment 1184 block B60 null  <||@
  Comment 1184 650 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1184 652 CMP (x: r9|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 1187 654 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B60 -> B61 falseDestination: B60 -> B63  <||@
  Comment 1193 block B63 null  <||@
  Comment 1193 674 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1193 676 CMP rcx|QWORD y: 1 size: QWORD  <||@
  Comment 1197 678 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65  <||@
  Comment 1203 block B65 null  <||@
  Comment 1203 686 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1203 688 rsi|QWORD[.] = LEA [rbx|QWORD[.] + rbp|DWORD * 2 + 16] size: QWORD  <||@
  Comment 1208 690 r10|QWORD = LEA [rcx|QWORD - 2] size: QWORD  <||@
  Comment 1212 692 TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1215 694 BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B65 -> B66 falseDestination: B65 -> B67  <||@
  Comment 1221 block B67 null  <||@
  Comment 1221 702 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1221 704 xmm0|V32_WORD = A od: SIMD<48,48> oe: WORD  <||@
  Comment 1221 {DataSection[0x0]}  <||@
  Comment 1230 706 J (address: [rsi|QWORD[.]], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 1234 708 r10|QWORD = MOVE input: long[2|0x2]  <||@
  Comment 1241 710 JUMP ~[] destination: B67 -> B68  <||@
  Comment 1241 block B68 null  <||@
  Comment 1241 712 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1241 714 CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1244 716 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B68 -> B69 falseDestination: B68 -> B70  <||@
  Comment 1250 block B70 null  <||@
  Comment 1250 724 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1250 726 MOV [rsi|QWORD[.]] y: 48 size: WORD  <||@
  Comment 1255 728 r10|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 1260 730 JUMP ~[] destination: B70 -> B71  <||@
  Comment 1265 block B147 null  <||@
  Comment 1265 1490 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1265 1492 xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 1269 1494 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1276 1496 JUMP ~[] destination: B147 -> B148  <||@
  Comment 1276 block B148 loop 1 depth 1 header:1648|LoopBegin  <||@
  Comment 1276 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1280 1500 J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1286 1502 r10|QWORD = LEA [r10|QWORD + 16] size: QWORD  <||@
  Comment 1290 1504 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1293 1506 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B148 -> B150 falseDestination: B148 -> B148  <||@
  Comment 1300 block B130 loop 0 depth 1 header:1585|LoopBegin  <||@
  Comment 1300 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1312 1358 xmm0|V256_WORD = H [rcx|QWORD[*] + r11|QWORD * 2] nZ: YMM oh: VMOVDQU  <||@
  Comment 1318 1360 J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1324 1362 r11|QWORD = LEA [r11|QWORD + 16] size: QWORD  <||@
  Comment 1328 1364 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1331 1366 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B130 -> B132 falseDestination: B130 -> B130  <||@
  Comment 1338 block B110 null  <||@
  Comment 1338 1154 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1338 1156 TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 1341 1158 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B110 -> B111 falseDestination: B110 -> B112  <||@
  Comment 1347 block B112 null  <||@
  Comment 1347 1166 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1347 1168 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1351 1170 rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD  <||@
  Comment 1355 1172 CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 1359 1174 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B112 -> B113 falseDestination: B112 -> B114  <||@
  Comment 1365 block B114 null  <||@
  Comment 1365 1190 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1365 1192 MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD  <||@
  Comment 1369 1194 AMD64PREFETCH ~[rax|QWORD + 216] instr: 0  <||@
  Comment 1376 1196 rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 1376 1198 JUMP ~[] destination: B114 -> B115  <||@
  Comment 1376 block B115 null  <||@
  Comment 1376 1200 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1376 1202 rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 1379 1204 rdx|QWORD = MOV [r14|QWORD + 168] size: QWORD  <||@
  Comment 1386 1206 MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD  <||@
  Comment 1389 1208 MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 1389 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 1396 1210 MOV [rax|QWORD[*] + 12] y: -559030611 size: DWORD c: NarrowOop[char[0]{}]  <||@
  Comment 1396 {NarrowOop[char[0]{}]}  <||@
  Comment 1403 1212 MOV (x: [rax|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 1407 1214 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1410 1216 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1419 12  <||@
  Comment 1429 block B124 null  <||@
  Comment 1429 1300 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1429 1302 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 1429 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 1439 1304 rdx|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 1442 1306 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1447 1308 r14|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1450 1310 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:8]  <||@
  Comment 1450 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1455 [stack:24, stack:64]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1 
     locals:  |stack:72|QWORD[.]  |- 
     stack:   |r13|DWORD          |    <||@
  Comment 1456 1312 JUMP ~[] destination: B124 -> B125  <||@
  Comment 1461 block B11 null  <||@
  Comment 1461 166 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1461 168 stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1466 170 CMP (x: rbp|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 1469 172 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B28  <||@
  Comment 1475 block B12 null  <||@
  Comment 1475 174 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1475 176 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 1478 178 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14  <||@
  Comment 1484 block B14 null  <||@
  Comment 1484 186 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1484 188 rsi|DWORD = SUB (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 1488 190 CMP (x: r10|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 1491 192 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B16  <||@
  Comment 1497 block B16 null  <||@
  Comment 1497 200 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1497 202 rsi|DWORD = SUB (x: rbp|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 1501 204 CMP (x: rdx|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 1503 206 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18  <||@
  Comment 1509 block B18 null  <||@
  Comment 1509 214 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1509 216 stack:76|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 1513 218 stack:80|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1517 220 stack:84|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 1522 222 stack:88|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1527 224 rsi|QWORD[*] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1530 226 r9|QWORD[*] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 1533 228 r14|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 1536 230 rdi|QWORD = LEA [rsi|QWORD[*] + rdi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 1541 232 rsi|QWORD = LEA [r9|QWORD[*] + rdx|DWORD * 2 + 16] size: QWORD  <||@
  Comment 1546 234 rdx|QWORD = MOVE r14|QWORD moveKind: QWORD  <||@
  Comment 1549 236 stack:96|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1553 238 stack:60|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1557 240 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 1557 {Field[name=StubRoutines::_jshort_arraycopy, type=address, offset=0, address=0x105a7dc78, value=0x106812d40]:0x106812d40}  <||@
  Comment 1563 242 r13|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 1568 244 rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1573 246 MOV [rbx|QWORD[.] + r13|DWORD * 2 + 16] y: 46 size: WORD  <||@
  Comment 1581 248 r13|DWORD = INC r13|DWORD size: DWORD  <||@
  Comment 1584 250 r10|DWORD = ADD (x: stack:88|DWORD, y: stack:60|DWORD) size: DWORD  <||@
  Comment 1594 252 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 1597 254 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B18 -> B26 falseDestination: B18 -> B20  <||@
  Comment 1603 block B20 null  <||@
  Comment 1603 260 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1603 262 r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 1608 264 r11|DWORD = SUB (x: r11|DWORD, ~y: stack:60|DWORD) size: DWORD  <||@
  Comment 1613 266 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 1616 268 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B20 -> B26 falseDestination: B20 -> B22  <||@
  Comment 1622 block B22 null  <||@
  Comment 1622 274 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1622 276 rax|DWORD = MOVE stack:80|DWORD moveKind: DWORD  <||@
  Comment 1626 278 rax|DWORD = SUB (x: rax|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 1629 280 CMP (x: r10|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1632 282 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B22 -> B26 falseDestination: B22 -> B24  <||@
  Comment 1638 block B24 null  <||@
  Comment 1638 288 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1638 290 rbp|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 1642 292 rbp|DWORD = SUB (x: rbp|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 1645 294 CMP (x: r13|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 1648 296 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B24 -> B26 falseDestination: B24 -> B27  <||@
  Comment 1654 block B27 null  <||@
  Comment 1654 310 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1654 312 r8|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD  <||@
  Comment 1658 314 r8|QWORD[*] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1658 316 rbx|QWORD[*] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 1658 318 rdi|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 1661 320 rsi|QWORD = MOVSXD r13|DWORD size: QWORD  <||@
  Comment 1664 322 rdx|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 1667 324 rdi|QWORD = LEA [r8|QWORD[*] + rdi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 1672 326 rsi|QWORD = LEA [rbx|QWORD[*] + rsi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 1677 328 stack:76|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 1682 330 stack:80|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1687 332 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 1687 {Field[name=StubRoutines::_jshort_arraycopy, type=address, offset=0, address=0x105a7dc78, value=0x106812d40]:0x106812d40}  <||@
  Comment 1693 334 r13|DWORD = ADD (x: stack:76|DWORD, y: stack:80|DWORD) size: DWORD  <||@
  Comment 1703 336 r9|DWORD[.] = MOVE stack:32|DWORD[.] moveKind: DWORD  <||@
  Comment 1708 338 JUMP ~[] destination: B27 -> B109  <||@
  Comment 1713 block B64 null  <||@
  Comment 1713 680 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1713 682 r10|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 1718 684 JUMP ~[] destination: B64 -> B71  <||@
  Comment 1723 block B52 null  <||@
  Comment 1723 580 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1723 582 rsi|QWORD = MOVE stack:48|QWORD moveKind: QWORD  <||@
  Comment 1728 584 stack:88|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1733 586 rsi|QWORD = ADD (x: rdx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1736 588 r10|QWORD = MOV rdi|DWORD size: DWORD  <||@
  Comment 1739 590 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1742 592 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B52 -> B53 falseDestination: B52 -> B56  <||@
  Comment 1748 block B53 null  <||@
  Comment 1748 594 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1748 596 CMP (x: rdi|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 1750 598 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B53 -> B58 falseDestination: B53 -> B55  <||@
  Comment 1761 block B66 null  <||@
  Comment 1761 696 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1761 698 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1768 700 JUMP ~[] destination: B66 -> B68  <||@
  Comment 1773 block B69 null  <||@
  Comment 1773 718 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1773 720 r10|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 1778 722 JUMP ~[] destination: B69 -> B71  <||@
  Comment 1783 block B165 null  <||@
  Comment 1783 1620 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1783 1622 stack:40|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1788 1624 r14|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 1788 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 1798 1626 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1798 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1808 1628 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 1813 1630 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1818 1632 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:8]  <||@
  Comment 1818 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1823 [stack:24, stack:56]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1 
     locals:  |stack:72|QWORD[.]  |- 
     stack:   |r13|DWORD          |    <||@
  Comment 1824 1634 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1827 1636 rax|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1832 1638 JUMP ~[] destination: B165 -> B167  <||@
  Comment 1837 block B79 null  <||@
  Comment 1837 788 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1837 742 rsi|DWORD = MOVE input: int[-180065|0xfffffffffffd409f]  <||@
  Comment 1842 790 MOV (x: [r15|QWORD + 668], y: rsi|DWORD) size: DWORD  <||@
  Comment 1849 792 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1856 794 DEOPT info [bci:256, 5]  <||@
  Comment 1856 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1861 [rbx:0, stack:24]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 256, duringCall: false, rethrow: false]
              |0                  |1             |2         |3  |4 
     locals:  |stack:72|QWORD[.]  |rbx|QWORD[.]  |r9|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:72|QWORD[.]  |-   <||@
  Comment 1862 block B85 null  <||@
  Comment 1862 858 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1862 852 stack:60|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1866 854 stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1871 860 rdi|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:283, 5]  <||@
  Comment 1871 [rbx:0, r8:0, r9:0, stack:24, stack:56, stack:64]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283, duringCall: false, rethrow: false]
              |0                  |1             |2          |3  |4 
     locals:  |stack:72|QWORD[.]  |rbx|QWORD[.]  |rdx|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:72|QWORD[.]  |-   <||@
  Comment 1871 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1879 862 CMP (x: rdi|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 1882 864 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B85 -> B86 falseDestination: B85 -> B176  <||@
  Comment 1888 block B86 null  <||@
  Comment 1888 866 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1888 868 r11|DWORD = MOV [r9|DWORD[.] * 8 + 12] size: DWORD state [bci:283, 5]  <||@
  Comment 1888 [rbx:0, r8:0, r9:0, stack:24, stack:56, stack:64]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283, duringCall: false, rethrow: false]
              |0                  |1             |2          |3  |4 
     locals:  |stack:72|QWORD[.]  |rbx|QWORD[.]  |rdx|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:72|QWORD[.]  |-   <||@
  Comment 1888 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1896 870 CMP (x: r11|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 1899 872 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B86 -> B87 falseDestination: B86 -> B175  <||@
  Comment 1905 block B87 null  <||@
  Comment 1905 874 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1905 876 CMP (x: r11|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1908 878 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B87 -> B88 falseDestination: B87 -> B174  <||@
  Comment 1914 block B88 null  <||@
  Comment 1914 880 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1914 882 CMP stack:28|DWORD y: 2 size: DWORD  <||@
  Comment 1919 884 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B88 -> B89 falseDestination: B88 -> B90  <||@
  Comment 1925 block B90 null  <||@
  Comment 1925 892 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1925 894 rsi|DWORD = DEC stack:28|DWORD size: DWORD  <||@
  Comment 1931 896 rcx|DWORD = ADD (x: rsi|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 1935 898 CMP (x: r11|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 1938 900 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B90 -> B91 falseDestination: B90 -> B173  <||@
  Comment 1944 block B91 null  <||@
  Comment 1944 902 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1944 904 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2ae4cec4 encoding: base: 0 shift: 3  <||@
  Comment 1948 906 rdx|DWORD = MOVSX [r8|QWORD[.] + r10|DWORD * 2 + 16] size: DWORD  <||@
  Comment 1954 908 MOV (x: [r13|QWORD + r9|DWORD[.] * 8], y: rdx|DWORD) size: WORD  <||@
  Comment 1960 910 MOV [r14|QWORD + r9|DWORD[.] * 8] y: 46 size: WORD  <||@
  Comment 1967 912 rdi|DWORD = SUB (x: rdi|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 1969 914 r10|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 1972 916 CMP (x: r10|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 1975 918 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B91 -> B95 falseDestination: B91 -> B93  <||@
  Comment 1981 block B93 null  <||@
  Comment 1981 924 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1981 926 rdi|DWORD = SUB (x: r11|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 1986 928 CMP (x: rbp|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 1988 930 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B93 -> B95 falseDestination: B93 -> B96  <||@
  Comment 1994 block B96 null  <||@
  Comment 1994 944 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1994 946 stack:28|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1998 948 stack:88|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2003 950 r8|QWORD[*] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2003 952 rdx|QWORD[*] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 2006 954 rdi|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 2009 956 r10|QWORD = MOVSXD rsi|DWORD size: QWORD  <||@
  Comment 2012 958 rdi|QWORD = LEA [r8|QWORD[*] + rdi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 2017 960 rsi|QWORD = LEA [rdx|QWORD[*] + rbp|DWORD * 2 + 16] size: QWORD  <||@
  Comment 2022 962 rdx|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 2025 964 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 2025 {Field[name=StubRoutines::_jshort_arraycopy, type=address, offset=0, address=0x105a7dc78, value=0x106812d40]:0x106812d40}  <||@
  Comment 2031 966 rcx|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 2035 968 rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2040 970 MOV [rbx|QWORD[.] + rcx|DWORD * 2 + 16] y: 69 size: WORD  <||@
  Comment 2047 972 r10|DWORD = INC rcx|DWORD size: DWORD  <||@
  Comment 2053 974 CMP stack:60|DWORD y: 1 size: DWORD  <||@
  Comment 2058 980 r11|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 2063 976 BRANCH trueDestinationProbability: 0.9016620498614958 condition: < trueDestination: B96 -> B97 falseDestination: B96 -> B100  <||@
  Comment 2069 block B97 null  <||@
  Comment 2069 978 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2069 982 CMP (x: r11|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 2072 984 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B97 -> B98 falseDestination: B97 -> B99  <||@
  Comment 2078 block B98 null  <||@
  Comment 2078 986 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2078 988 MOV [rbx|QWORD[.] + r10|DWORD * 2 + 16] y: 45 size: WORD  <||@
  Comment 2086 990 rax|DWORD = LEA [rcx|DWORD + 2] size: DWORD  <||@
  Comment 2089 992 rdx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2094 994 rdx|DWORD = SUB (x: rdx|DWORD, ~y: stack:60|DWORD) size: DWORD  <||@
  Comment 2098 996 rcx|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 2100 998 r10|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 2103 1000 JUMP ~[] destination: B98 -> B101  <||@
  Comment 2103 block B101 null  <||@
  Comment 2103 1018 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 2103 1020 CMP (x: r11|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 2106 1022 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B101 -> B102 falseDestination: B101 -> B171  <||@
  Comment 2112 block B102 null  <||@
  Comment 2112 1024 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2112 1026 r8|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 2118 1028 CMP rcx|DWORD y: 10 size: DWORD  <||@
  Comment 2121 1030 BRANCH trueDestinationProbability: 0.9778393351800554 condition: < trueDestination: B102 -> B103 falseDestination: B102 -> B104  <||@
  Comment 2127 block B103 null  <||@
  Comment 2127 1032 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2127 1034 rax|DWORD = LEA [rcx|DWORD + 48] size: DWORD  <||@
  Comment 2130 1036 MOV (x: [rbx|QWORD[.] + r10|DWORD * 2 + 16], y: rax|DWORD) size: WORD  <||@
  Comment 2136 1038 r13|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 2139 1040 r9|DWORD[.] = MOVE stack:32|DWORD[.] moveKind: DWORD  <||@
  Comment 2144 1042 JUMP ~[] destination: B103 -> B109  <||@
  Comment 2149 block B34 null  <||@
  Comment 2149 382 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2149 384 rax|DWORD = MOVE input: int[-154209|0xfffffffffffda59f]  <||@
  Comment 2154 386 stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2159 388 JUMP ~[] destination: B34 -> B42  <||@
  Comment 2159 block B42 null  <||@
  Comment 2159 478 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2159 480 MOV (x: [r15|QWORD + 668], y: rax|DWORD) size: DWORD  <||@
  Comment 2166 482 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2173 484 DEOPT info [bci:43, 5]  <||@
  Comment 2173 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2178 [rbx:0, stack:24]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43, duringCall: false, rethrow: false]
              |0                  |1             |2          |3  |4 
     locals:  |stack:72|QWORD[.]  |rbx|QWORD[.]  |rdx|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:72|QWORD[.]  |-   <||@
  Comment 2179 block B36 null  <||@
  Comment 2179 398 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2179 400 rax|DWORD = MOVE input: int[-154209|0xfffffffffffda59f]  <||@
  Comment 2184 402 stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2189 404 JUMP ~[] destination: B36 -> B42  <||@
  Comment 2191 block B38 null  <||@
  Comment 2191 414 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2191 416 rax|DWORD = MOVE input: int[-154209|0xfffffffffffda59f]  <||@
  Comment 2196 418 stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2201 420 JUMP ~[] destination: B38 -> B42  <||@
  Comment 2203 block B113 null  <||@
  Comment 2203 1176 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2203 1178 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 2203 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 2213 1180 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 2218 1182 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2223 1184 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:8]  <||@
  Comment 2223 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 2228 [stack:24]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1 
     locals:  |stack:72|QWORD[.]  |- 
     stack:   |r13|DWORD          |    <||@
  Comment 2229 1186 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2229 1188 JUMP ~[] destination: B113 -> B115  <||@
  Comment 2234 block B43 null  <||@
  Comment 2234 486 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2234 488 stack:60|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 2238 490 stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2243 492 r11|QWORD = MOVE stack:56|QWORD moveKind: QWORD  <||@
  Comment 2248 494 r9|QWORD = LEA [rdi|QWORD + 16] size: QWORD  <||@
  Comment 2252 496 r13|QWORD = MOVE r14|QWORD moveKind: QWORD  <||@
  Comment 2255 498 stack:48|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 2260 502 r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 2265 506 r14|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 2268 508 r9|DWORD[.] = MOVE stack:32|DWORD[.] moveKind: DWORD  <||@
  Comment 2273 510 JUMP ~[] destination: B43 -> B44  <||@
  Comment 2278 block B100 null  <||@
  Comment 2278 1010 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2278 1014 rcx|DWORD = DEC stack:60|DWORD size: DWORD  <||@
  Comment 2284 1016 JUMP ~[] destination: B100 -> B101  <||@
  Comment 2289 block B13 null  <||@
  Comment 2289 180 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2289 182 rax|DWORD = MOVE input: int[-128865|0xfffffffffffe089f]  <||@
  Comment 2294 184 JUMP ~[] destination: B13 -> B42  <||@
  Comment 2299 block B15 null  <||@
  Comment 2299 194 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2299 196 rax|DWORD = MOVE input: int[-128865|0xfffffffffffe089f]  <||@
  Comment 2304 198 JUMP ~[] destination: B15 -> B42  <||@
  Comment 2309 block B17 null  <||@
  Comment 2309 208 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2309 210 rax|DWORD = MOVE input: int[-128865|0xfffffffffffe089f]  <||@
  Comment 2314 212 JUMP ~[] destination: B17 -> B42  <||@
  Comment 2319 block B26 null  <||@
  Comment 2319 302 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2319 304 MOV [r15|QWORD + 668] y: -143201 size: DWORD  <||@
  Comment 2330 306 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2337 308 DEOPT info [bci:145, 5]  <||@
  Comment 2337 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2342 [rbx:0, stack:24]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:925) [bci: 145, duringCall: false, rethrow: false]
              |0                  |1             |2          |3               |4 
     locals:  |stack:72|QWORD[.]  |rbx|QWORD[.]  |r13|DWORD  |stack:60|DWORD  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:72|QWORD[.]  |-   <||@
  Comment 2343 block B4 null  <||@
  Comment 2343 70 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2343 72 stack:60|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 2347 74 stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2352 76 CMP [r9|DWORD[.] * 8 + 12] y: 0 size: DWORD state [bci:0]  <||@
  Comment 2352 [rbx:0, r8:0, r9:0, stack:24, stack:56, stack:64]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1 
     locals:  |stack:72|QWORD[.]  |-   <||@
  Comment 2352 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2361 78 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6  <||@
  Comment 2367 block B6 null  <||@
  Comment 2367 88 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2367 90 MOV [r9|DWORD[.] * 8 + 16] y: 45 size: WORD  <||@
  Comment 2378 92 CMP stack:60|DWORD y: 1 size: DWORD  <||@
  Comment 2383 94 BRANCH trueDestinationProbability: 0.8239147472715149 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8  <||@
  Comment 2389 block B7 null  <||@
  Comment 2389 96 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2389 98 r14|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 2396 100 r13|QWORD = MOVE input: long[18|0x12]  <||@
  Comment 2403 102 rbp|DWORD = MOVE input: int[3|0x3]  <||@
  Comment 2408 104 rax|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 2413 106 rdx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2418 108 stack:48|QWORD = MOVE input: long[3|0x3]  <||@
  Comment 2427 114 rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 2432 116 JUMP ~[] destination: B7 -> B44  <||@
  Comment 2437 block B104 null  <||@
  Comment 2437 1044 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2437 1046 r9|DWORD[.] = MOVE stack:32|DWORD[.] moveKind: DWORD  <||@
  Comment 2442 1048 CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 2445 1050 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B104 -> B105 falseDestination: B104 -> B170  <||@
  Comment 2451 block B105 null  <||@
  Comment 2451 1052 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2451 1054 r13|DWORD = LEA [r10|DWORD + 2] size: DWORD  <||@
  Comment 2455 1056 CMP rcx|DWORD y: 100 size: DWORD  <||@
  Comment 2458 1058 BRANCH trueDestinationProbability: 0.625 condition: < trueDestination: B105 -> B106 falseDestination: B105 -> B107  <||@
  Comment 2464 block B106 null  <||@
  Comment 2464 1060 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2464 1062 rax|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 2466 1064 rdx|DWORD = MOVE input: int[1717986919|0x66666667]  <||@
  Comment 2471 1066 (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 2473 1068 rdx|DWORD = SAR rdx|DWORD y: 2 size: DWORD  <||@
  Comment 2476 1070 rax|DWORD = LEA [rdx|DWORD + 48] size: DWORD  <||@
  Comment 2479 1072 MOV (x: [rbx|QWORD[.] + r10|DWORD * 2 + 16], y: rax|DWORD) size: WORD  <||@
  Comment 2485 1074 rax|DWORD = SHL rdx|DWORD y: 3 size: DWORD  <||@
  Comment 2490 1076 rdx|DWORD = SHL rdx|DWORD size: DWORD  <||@
  Comment 2492 1078 rax|DWORD = ADD (x: rax|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 2494 1080 rcx|DWORD = SUB (x: rcx|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 2496 1082 rax|DWORD = LEA [rcx|DWORD + 48] size: DWORD  <||@
  Comment 2499 1084 MOV (x: [rbx|QWORD[.] + r8|DWORD * 2 + 16], y: rax|DWORD) size: WORD  <||@
  Comment 2505 1086 JUMP ~[] destination: B106 -> B109  <||@
  Comment 2510 block B95 null  <||@
  Comment 2510 936 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2510 938 MOV [r15|QWORD + 668] y: -199521 size: DWORD  <||@
  Comment 2521 940 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2528 942 DEOPT info [bci:306, 5]  <||@
  Comment 2528 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2533 [rbx:0, stack:24]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:945) [bci: 306, duringCall: false, rethrow: false]
              |0                  |1             |2          |3  |4 
     locals:  |stack:72|QWORD[.]  |rbx|QWORD[.]  |rbp|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:72|QWORD[.]  |-   <||@
  Comment 2534 block B107 null  <||@
  Comment 2534 1088 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2534 1090 CMP (x: r11|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 2537 1092 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B107 -> B108 falseDestination: B107 -> B169  <||@
  Comment 2543 block B108 null  <||@
  Comment 2543 1094 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2543 1096 rax|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 2545 1098 rdx|DWORD = MOVE input: int[1374389535|0x51eb851f]  <||@
  Comment 2550 1100 (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 2552 1102 rdx|DWORD = SAR rdx|DWORD y: 5 size: DWORD  <||@
  Comment 2555 1104 rax|DWORD = LEA [rdx|DWORD + 48] size: DWORD  <||@
  Comment 2558 1106 MOV (x: [rbx|QWORD[.] + r10|DWORD * 2 + 16], y: rax|DWORD) size: WORD  <||@
  Comment 2564 1108 rax|DWORD = IMUL rdx|DWORD y: 100 size: DWORD  <||@
  Comment 2567 1110 rcx|DWORD = SUB (x: rcx|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 2569 1112 rax|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 2571 1114 rdx|DWORD = MOVE input: int[1717986919|0x66666667]  <||@
  Comment 2576 1116 (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 2578 1118 rdx|DWORD = SAR rdx|DWORD y: 2 size: DWORD  <||@
  Comment 2581 1120 r11|DWORD = SHR rcx|DWORD y: 31 size: DWORD  <||@
  Comment 2588 1122 rdx|DWORD = ADD (x: rdx|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 2591 1124 r11|DWORD = LEA [rdx|DWORD + 48] size: DWORD  <||@
  Comment 2595 1126 MOV (x: [rbx|QWORD[.] + r8|DWORD * 2 + 16], y: r11|DWORD) size: WORD  <||@
  Comment 2601 1128 r11|DWORD = SHL rdx|DWORD y: 3 size: DWORD  <||@
  Comment 2608 1130 rdx|DWORD = SHL rdx|DWORD size: DWORD  <||@
  Comment 2610 1132 r11|DWORD = ADD (x: r11|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 2613 1134 rcx|DWORD = SUB (x: rcx|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 2616 1136 r11|DWORD = LEA [rcx|DWORD + 48] size: DWORD  <||@
  Comment 2620 1138 MOV (x: [rbx|QWORD[.] + r13|DWORD * 2 + 16], y: r11|DWORD) size: WORD  <||@
  Comment 2626 1140 r13|DWORD = LEA [r10|DWORD + 3] size: DWORD  <||@
  Comment 2630 1142 JUMP ~[] destination: B108 -> B109  <||@
  Comment 2635 block B8 null  <||@
  Comment 2635 118 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2635 120 rcx|DWORD = INC stack:60|DWORD size: DWORD  <||@
  Comment 2641 122 rdi|QWORD = MOVE input: long[4|0x4]  <||@
  Comment 2648 124 r14|QWORD = MOVE input: long[18|0x12]  <||@
  Comment 2655 126 r13|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 2658 128 rbp|DWORD = MOVE input: int[3|0x3]  <||@
  Comment 2663 130 rax|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 2668 132 rdx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2673 134 stack:56|QWORD = MOVE input: long[3|0x3]  <||@
  Comment 2682 136 rcx|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2686 140 rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 2691 142 JUMP ~[] destination: B8 -> B9  <||@
  Comment 2696 block B89 null  <||@
  Comment 2696 886 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2696 888 r10|DWORD = MOVE input: int[-190995|0xfffffffffffd15ed]  <||@
  Comment 2702 890 JUMP ~[] destination: B89 -> B177  <||@
  Comment 2702 block B177 null  <||@
  Comment 2702 1726 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2702 1728 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2709 1730 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2716 1732 DEOPT info [bci:283, 5]  <||@
  Comment 2716 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2721 [rbx:0, stack:24]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283, duringCall: false, rethrow: false]
              |0                  |1             |2          |3  |4 
     locals:  |stack:72|QWORD[.]  |rbx|QWORD[.]  |rdx|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:72|QWORD[.]  |-   <||@
  Comment 2722 block B173 null  <||@
  Comment 2722 1702 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2722 1704 r10|DWORD = MOVE input: int[-202779|0xfffffffffffce7e5]  <||@
  Comment 2728 1706 JUMP ~[] destination: B173 -> B177  <||@
  Comment 2730 block B40 null  <||@
  Comment 2730 462 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2730 464 rax|DWORD = MOVE input: int[-160795|0xfffffffffffd8be5]  <||@
  Comment 2735 466 stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2740 468 JUMP ~[] destination: B40 -> B42  <||@
  Comment 2745 block B169 null  <||@
  Comment 2745 1676 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2745 1678 r11|DWORD = MOVE input: int[-218139|0xfffffffffffcabe5]  <||@
  Comment 2751 1680 JUMP ~[] destination: B169 -> B172  <||@
  Comment 2751 block B172 null  <||@
  Comment 2751 1694 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2751 1696 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 2758 1698 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2765 1700 DEOPT info [bci:396, 5]  <||@
  Comment 2765 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2770 [rbx:0, stack:24]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 396, duringCall: false, rethrow: false]
              |0  |1             |2          |3          |4 
     locals:  |-  |rbx|QWORD[.]  |r10|DWORD  |rcx|DWORD  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:72|QWORD[.]  |-   <||@
  Comment 2771 block B61 null  <||@
  Comment 2771 656 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2771 658 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 2781 660 r10|DWORD = MOVE input: int[-168211|0xfffffffffffd6eed]  <||@
  Comment 2787 664 JUMP ~[] destination: B61 -> B62  <||@
  Comment 2787 block B62 null  <||@
  Comment 2787 666 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 2787 646 rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 2792 668 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2799 670 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 2806 672 DEOPT info [bci:229, 5]  <||@
  Comment 2806 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2811 [rbx:0, rsi:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:936) [bci: 229, duringCall: false, rethrow: false]
              |0             |1             |2          |3  |4 
     locals:  |rsi|QWORD[.]  |rbx|QWORD[.]  |rbp|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 2812 block B117 null  <||@
  Comment 2812 1228 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2812 1230 r10|DWORD = MOVE input: int[-224787|0xfffffffffffc91ed]  <||@
  Comment 2818 1232 JUMP ~[] destination: B117 -> B118  <||@
  Comment 2818 block B118 null  <||@
  Comment 2818 1234 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2818 1236 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2825 1238 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2832 1240 DEOPT info [bci:8]  <||@
  Comment 2832 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2837 [stack:24]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1 
     locals:  |stack:72|QWORD[.]  |- 
     stack:   |r13|DWORD          |    <||@
  Comment 2838 block B82 null  <||@
  Comment 2838 834 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2838 836 r10|DWORD = MOVE input: int[-164123|0xfffffffffffd7ee5]  <||@
  Comment 2844 840 JUMP ~[] destination: B82 -> B83  <||@
  Comment 2844 block B83 null  <||@
  Comment 2844 842 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2844 838 stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2849 844 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2856 846 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2863 848 DEOPT info [bci:197, 5]  <||@
  Comment 2863 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2868 [rbx:0, stack:24]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197, duringCall: false, rethrow: false]
              |0                  |1             |2          |3  |4 
     locals:  |stack:72|QWORD[.]  |rbx|QWORD[.]  |rdx|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:72|QWORD[.]  |-   <||@
  Comment 2869 block B55 null  <||@
  Comment 2869 604 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2869 606 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@550168632]  <||@
  Comment 2869 {Object[d.a@550168632]}  <||@
  Comment 2879 608 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2882 610 r10|DWORD = MOVE input: int[-168987|0xfffffffffffd6be5]  <||@
  Comment 2888 614 JUMP ~[] destination: B55 -> B62  <||@
  Comment 2890 block B56 null  <||@
  Comment 2890 616 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2890 618 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@550168632]  <||@
  Comment 2890 {Object[d.a@550168632]}  <||@
  Comment 2900 620 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2903 622 r10|DWORD = MOVE input: int[-168987|0xfffffffffffd6be5]  <||@
  Comment 2909 626 JUMP ~[] destination: B56 -> B62  <||@
  Comment 2911 block B81 null  <||@
  Comment 2911 826 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2911 828 r10|DWORD = MOVE input: int[-166171|0xfffffffffffd76e5]  <||@
  Comment 2917 832 JUMP ~[] destination: B81 -> B83  <||@
  Comment 2919 block B174 null  <||@
  Comment 2919 1708 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2919 1710 r10|DWORD = MOVE input: int[-189979|0xfffffffffffd19e5]  <||@
  Comment 2925 1712 JUMP ~[] destination: B174 -> B177  <||@
  Comment 2930 block B175 null  <||@
  Comment 2930 1714 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2930 1716 r10|DWORD = MOVE input: int[-188443|0xfffffffffffd1fe5]  <||@
  Comment 2936 1718 JUMP ~[] destination: B175 -> B177  <||@
  Comment 2941 block B176 null  <||@
  Comment 2941 1720 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2941 1722 r10|DWORD = MOVE input: int[-185115|0xfffffffffffd2ce5]  <||@
  Comment 2947 1724 JUMP ~[] destination: B176 -> B177  <||@
  Comment 2952 block B170 null  <||@
  Comment 2952 1682 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2952 1684 r11|DWORD = MOVE input: int[-236059|0xfffffffffffc65e5]  <||@
  Comment 2958 1686 JUMP ~[] destination: B170 -> B172  <||@
  Comment 2963 block B5 null  <||@
  Comment 2963 80 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2963 82 MOV [r15|QWORD + 668] y: -225051 size: DWORD  <||@
  Comment 2974 84 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2981 86 DEOPT info [bci:0]  <||@
  Comment 2981 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2986 [stack:24]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1 
     locals:  |stack:72|QWORD[.]  |-   <||@
  Comment 2987 block B30 null  <||@
  Comment 2987 352 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2987 354 rax|DWORD = MOVE input: int[-156947|0xfffffffffffd9aed]  <||@
  Comment 2992 356 stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2997 358 JUMP ~[] destination: B30 -> B42  <||@
  Comment 3002 block B111 null  <||@
  Comment 3002 1160 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3002 1162 r10|DWORD = MOVE input: int[-222483|0xfffffffffffc9aed]  <||@
  Comment 3008 1164 JUMP ~[] destination: B111 -> B118  <||@
  Comment 3013 block B99 null  <||@
  Comment 3013 1002 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3013 1004 MOV [r15|QWORD + 668] y: -220699 size: DWORD  <||@
  Comment 3024 1006 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3031 1008 DEOPT info [bci:363, 5]  <||@
  Comment 3031 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3036 [rbx:0, stack:24]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:953) [bci: 363, duringCall: false, rethrow: false]
              |0                  |1             |2          |3  |4 
     locals:  |stack:72|QWORD[.]  |rbx|QWORD[.]  |r10|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:72|QWORD[.]  |-   <||@
  Comment 3037 block B171 null  <||@
  Comment 3037 1688 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3037 1690 r11|DWORD = MOVE input: int[-236571|0xfffffffffffc63e5]  <||@
  Comment 3043 1692 JUMP ~[] destination: B171 -> B172  <||@
  Comment 3048 block B41 null  <||@
  Comment 3048 470 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3048 472 rax|DWORD = MOVE input: int[-158491|0xfffffffffffd94e5]  <||@
  Comment 3053 474 stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 3058 476 JUMP ~[] destination: B41 -> B42  <||@
  Comment 3063 block B59 null  <||@
  Comment 3063 640 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3063 642 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 3073 644 r10|DWORD = MOVE input: int[-167955|0xfffffffffffd6fed]  <||@
  Comment 3079 648 JUMP ~[] destination: B59 -> B62  <||@
  Comment 3084 block B28 null  <||@
  Comment 3084 340 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3084 342 rax|DWORD = MOVE input: int[-132891|0xfffffffffffdf8e5]  <||@
  Comment 3089 344 JUMP ~[] destination: B28 -> B42  <||@
  Comment 3094 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 3094 4  <||@
  Comment 3100 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 3100 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-9242[sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString()]"
  method "HotSpotCompilation-9242[sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString()]"
  date 1527005202229
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 1069adfa0 448b560849c1e203493bc20f85af7ee5ff900f1f80000000000f1f800000000089842400c0feff4883ec5848896c2450448b5610448b5e1444895c2444448b461c448b4e2044894c24408b4e0c0fb67e18418bd948c1e30348895c243885ff0f85c208000083f9010f8d1b03000049c7c61200000049c7c510000000bd02000000b801000000ba0000000048c74424300200000083f9010f8da906000083f9fe0f8ca0060000428b3ccd0c0000003bfa0f86600a00003bf80f86a10a00006643c744cd0030006643c704ce2e0085c948897424180f859e030000448bcd438504c44585d20f8c430600004585db0f8c3a060000428b34c50c000000412bf3443bd60f8f26060000412bfb443bcf0f8f1a06000049c1e0034963fa4963f14963d3498d7c7810488d74731044894c2408e86c4ce6ff90448b4c240844034c2444458be9448b4c2440438504cc49bed01600c0070000004183fd010f8cdb030000468b14cd0c000000418bc2412bc585c00f8c87090000498b4760498b77704181fdffffff000f830b040000418bd5d1e28d521783e2f84863d2488bca4803c8483bce0f87ee03000049894f600f188402c00000000f188402000100000f188402400100000f188402800100004489680c48c70001000000c74008410000f8458bf2453bee418bf5410f4ff64863f64883fe010f8c9e000000448b4c2440488d50104a8d0ccd100000004c8d56f04d85d249c7c3000000000f8d040300004c8d56f84d3bda0f8f13000000c4a17a6f0459c4a17a7f045a4d8d53084d8bda4c8d56fc4d3bda0f8f13000000c4a1f96e0459c4a1f97e045a4d8d53044d8bda4c8d56fe4d3bda0f8f13000000c4a1796e0459c4a1797e045a4d8d53024d8bda4c8bd649ffca4d3bda0f8f0a000000420fbf0c596642890c5a4963d5483bd60f8f5c000000498b7760488d5618493b57700f8744040000498957600f1886d800000049bed01600c007000000488bd6498b8ea800000048890ec74608da0200f848c1e80389460c44896610488bc2488b6c24504883c45885056d0deefdc5f877c3488d4c7010482bd6488d72f04885f60f8ddf01000049c7c200000000488d72f84c3bd60f8f11000000c5f9efc0c4a17a7f0451498d72084c8bd6488d72fc4c3bd60f8f11000000c5f9efc0c4a1f97e0451498d72044c8bd6488d72fe4c3bd60f8f11000000c5f9efc0c4a1797e0451498d72024c8bd648ffca4c3bd20f8f22ffffff6646892451e918ffffff48c7c70200000049c7c610000000448be9bd02000000b801000000ba0000000048c74424280200000083f9080f8dff040000438504cc428b04c50c000000428b2ccd0c00000049c1e0034963fa443bd90f8fd6010000413bcb0f8fc30700008bca4103cb3be90f86f3070000448be941ffc5413bed0f86a60600004585d20f8c58040000412bc3443bd00f8f6a040000412beb3bd50f8f6b04000044896c2410894c241448897424184c8bd34d63db498d7c7810498d745210498bd3e85649e6ff908b4c2414488b5c243866c7444b102e00448b6c24106642c7446b1030008d7902448bef448b4c2440e9cffcffff448bcd442bc9f7d94863c9488bd148ffca443bcd0f8f290200004489542408413be90f8f57070000443bcf0f8f2a0600004883f9010f8cfe010000488d746b104c8d51fe4d85d20f8c1c020000c4c1796e0512fbffffc5f97e0649c7c2020000004c3bd20f8f0b02000066c7063000448b542408e9ecfbffffc5f9efc049c7c2000000000f1f4000c4a17e7f04514d8d52104c3bd67ef1e905feffff660f1f440000660f1f440000c4a17e6f0459c4a17e7f045a4d8d5b104d3bda7eebe9e2fcffff4585ed0f8c77060000498b4760488d7018493b77700f8746030000498977600f1880d8000000488bf0498b96a8000000488910c74008da0200f8c7400c6e7100d844896010488bc6488b6c24504883c4588505d50aeefdc5f877c348be080200c007000000418bd5b900000000458bf2e891885e0090e92bfcffff4889742418413bed0f86490600004585d20f8c250300008bf02bf1443bd60f8f220300008bf52bf13bd60f8f20030000896c24148944241044896c240c4489542408498bf04c8bcb4c63f1488d7c7e10498d745110498bd64c890424894c2424e88647e6ff90448b6c240c488b5c24386642c7446b102e0041ffc5448b54240844035424244585d20f8ccc020000448b5c2444442b5c24244585db0f8cb90200008b442410412bc3443bd00f8fa90200008b6c2414412beb443bed0f8f990200004c8b04244963fa4963f54963d3498d7c7810488d74731044896c241444895c2410e80447e6ff90448b6c241444036c2410448b4c2440e996faffff448b542408e922faffff488b74243044895424084803f2448bd74c3bd60f86760400003bfd0f87bbfdffffe95404000049c7c200000000e9ecfdffff448b542408e9e6f9ffff488944243849bed01600c00700000048be680b00c007000000ba02000000b901000000e821875e0090488bf0488b442438e99bfbffffbe9f40fdff4189b79c0200004d89a7a8020000e8198fe5ff90894c24244889742418428b3cc50c000000413bfa0f861d040000468b1ccd0c000000443bda0f8601040000443bd80f86ed030000837c2444020f8c030300008b742444ffce8bce03cd443bd90f860a03000049c1e003430fbf54501066438954cd006643c704ce2e002bfe41ffc2443bd70f8f11020000418bfb2bfe3bef0f8f04020000894c244444895c2408488bd34963fa4c63d6498d7c7810488d746a10498bd2e8b245e6ff908b4c2444488b5c243866c7444b104500448bd141ffc2837c242401448b5c24080f8dd1000000453bda0f86a70300006642c74453102d008d4102ba010000002b5424248bca448bd0453bda0f869d030000458bc241ffc083f90a0f8d360100008d4130664289445310458be8448b4c2440e9e2f8ffffb89fa5fdff48897424184189879c0200004d89a7a8020000e8dc8de5ff90b89fa5fdff4889742418ebe0b89fa5fdff4889742418ebd448be680b00c007000000ba02000000b901000000e88c855e0090e9a6fcffff894c242448897424184c8b5c24284c8d4f104d8bee4c895c2430448b5c24444d8bf1448b4c2440e9aef7ffff8b4c2424ffc9e946ffffffb89f08feffe974ffffffb89f08feffe96affffffb89f08feffe960ffffff41c7879c0200009fd0fdff4d89a7a8020000e8388de5ff90894c2424488974241842833ccd0c000000000f84540200006642c704cd100000002d00837c2424010f8df600000049c7c61400000049c7c512000000bd03000000b802000000ba0100000048c744243003000000488b742418e90ff7ffff448b4c2440453bd80f86f5010000458d6a0283f9640f8d460000008bc1ba67666666f7eac1fa028d42306642894453108bc2c1e003d1e203c22bc88d4130664289444310e979f7ffff41c7879c0200009ff4fcff4d89a7a8020000e8798ce5ff90453bdd0f86ca0000008bc1ba1f85eb51f7eac1fa058d42306642894453106bc2642bc88bc1ba67666666f7eac1fa02448bd941c1eb1f4103d3448d5a306646895c4310448bda41c1e303d1e24403da412bcb448d59306646895c6b10458d6a03e9fcf6ffff8b4c2424ffc148c7c70400000049c7c612000000448be9bd03000000b802000000ba0100000048c7442428030000008b4c2424488b742418e92af9ffff41baed15fdff4589979c0200004d89a7a8020000e8bd8be5ff9041bae5e7fcffebe4b8e58bfdff4889742418e9b6fdffff41bbe5abfcff45899f9c0200004d89a7a8020000e88c8be5ff9049bb000000000000000041baed6efdff488b7424184589979c0200004d899fa8020000e8638be5ff9041baed91fcff4589979c0200004d89a7a8020000e8498be5ff9041bae57efdff48897424184589979c0200004d89a7a8020000e82a8be5ff9049ba486802bb070000004d8bda41bae56bfdffeb9949ba486802bb070000004d8bda41bae56bfdffeb8441bae576fdffebb541bae519fdffe91cffffff41bae51ffdffe911ffffff41bae52cfdffe906ffffff41bbe565fcffe92cffffff41c7879c020000e590fcff4d89a7a8020000e8b48ae5ff90b8ed9afdff4889742418e9b5fcffff41baed9afcffe93dffffff41c7879c020000e5a1fcff4d89a7a8020000e8828ae5ff9041bbe563fcffe9d7feffffb8e594fdff4889742418e978fcffff49bb000000000000000041baed6ffdffe9d7feffffb8e5f8fdffe959fcffffe865ba290090e83f89e5ff90f4f4f4f4f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@61e4165f slotKind: QWORD  <||@
  Comment 48 6 r10|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 52 8 r11|DWORD = MOV [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 56 10 stack:28|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 61 12 r8|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 65 14 r9|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD  <||@
  Comment 69 16 stack:32|DWORD[.] = MOVE r9|DWORD[.] moveKind: DWORD  <||@
  Comment 74 18 rcx|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 77 20 rdi|DWORD = MOVZXB [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 81 22 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2ae4cec4 encoding: base: 0 shift: 3  <||@
  Comment 88 24 stack:40|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 93 26 TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 95 28 BRANCH trueDestinationProbability: 0.9997660380889991 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4  <||@
  Comment 101 block B1 null  <||@
  Comment 101 30 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 101 32 CMP rcx|DWORD y: 1 size: DWORD  <||@
  Comment 104 34 BRANCH trueDestinationProbability: 0.8239147472715149 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3  <||@
  Comment 110 block B2 null  <||@
  Comment 110 36 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 110 38 r14|QWORD = MOVE input: long[18|0x12]  <||@
  Comment 117 40 r13|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 124 42 rbp|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 129 44 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 134 46 rdx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 139 48 stack:48|QWORD = MOVE input: long[2|0x2]  <||@
  Comment 148 50 JUMP ~[] destination: B2 -> B44  <||@
  Comment 148 block B44 null  <||@
  Comment 148 512 [] = LABEL numbPhis: 6 align: false label: ?  <||@
  Comment 148 514 CMP rcx|DWORD y: 1 size: DWORD  <||@
  Comment 151 516 BRANCH trueDestinationProbability: 0.9989929363705994 condition: < trueDestination: B44 -> B45 falseDestination: B44 -> B85  <||@
  Comment 157 block B45 null  <||@
  Comment 157 518 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 157 520 CMP rcx|DWORD y: -2 size: DWORD  <||@
  Comment 160 522 BRANCH trueDestinationProbability: 0.009242564066160308 condition: < trueDestination: B45 -> B85 falseDestination: B45 -> B47  <||@
  Comment 166 block B47 null  <||@
  Comment 166 532 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 166 534 rdi|DWORD = MOV [r9|DWORD[.] * 8 + 12] size: DWORD state [bci:197, 5]  <||@
  Comment 166 [rbx:0, rsi:0, r8:0, r9:0, stack:64]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197, duringCall: false, rethrow: false]
              |0             |1             |2          |3  |4 
     locals:  |rsi|QWORD[.]  |rbx|QWORD[.]  |rdx|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 166 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 174 536 CMP (x: rdi|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 176 538 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B47 -> B48 falseDestination: B47 -> B82  <||@
  Comment 182 block B48 null  <||@
  Comment 182 540 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 182 542 CMP (x: rdi|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 184 544 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B48 -> B49 falseDestination: B48 -> B81  <||@
  Comment 190 block B49 null  <||@
  Comment 190 546 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 190 548 MOV [r13|QWORD + r9|DWORD[.] * 8] y: 48 size: WORD  <||@
  Comment 198 550 MOV [r14|QWORD + r9|DWORD[.] * 8] y: 46 size: WORD  <||@
  Comment 205 552 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 207 558 stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 212 554 BRANCH trueDestinationProbability: 0.8193763792164618 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51  <||@
  Comment 218 block B50 null  <||@
  Comment 218 556 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 218 560 r9|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 221 562 JUMP ~[] destination: B50 -> B71  <||@
  Comment 221 block B71 null  <||@
  Comment 221 732 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 221 734 NULLCHECK [r12|QWORD[*] + r8|DWORD[.] * 8] state [bci:256, 5]  <||@
  Comment 221 [rbx:0, r8:0, stack:24, stack:64]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 256, duringCall: false, rethrow: false]
              |0                  |1             |2         |3  |4 
     locals:  |stack:72|QWORD[.]  |rbx|QWORD[.]  |r9|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:72|QWORD[.]  |-   <||@
  Comment 221 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 225 736 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 228 738 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B71 -> B79 falseDestination: B71 -> B73  <||@
  Comment 234 block B73 null  <||@
  Comment 234 746 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 234 748 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 237 750 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B73 -> B79 falseDestination: B73 -> B75  <||@
  Comment 243 block B75 null  <||@
  Comment 243 758 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 243 760 rsi|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 251 762 rsi|DWORD = SUB (x: rsi|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 254 764 CMP (x: r10|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 257 766 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B75 -> B79 falseDestination: B75 -> B77  <||@
  Comment 263 block B77 null  <||@
  Comment 263 774 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 263 776 rdi|DWORD = SUB (x: rdi|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 266 778 CMP (x: r9|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 269 780 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B77 -> B79 falseDestination: B77 -> B80  <||@
  Comment 275 block B80 null  <||@
  Comment 275 796 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 275 798 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2ae4cec4 encoding: base: 0 shift: 3  <||@
  Comment 279 800 r8|QWORD[*] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 279 802 rbx|QWORD[*] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 279 804 rdi|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 282 806 rsi|QWORD = MOVSXD r9|DWORD size: QWORD  <||@
  Comment 285 808 rdx|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 288 810 rdi|QWORD = LEA [r8|QWORD[*] + rdi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 293 812 rsi|QWORD = LEA [rbx|QWORD[*] + rsi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 298 814 stack:88|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 303 816 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 303 {Field[name=StubRoutines::_jshort_arraycopy, type=address, offset=0, address=0x105a7dc78, value=0x106812d40]:0x106812d40}  <||@
  Comment 309 818 r9|DWORD = ADD (x: stack:88|DWORD, y: stack:28|DWORD) size: DWORD  <||@
  Comment 319 820 r13|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 322 822 r9|DWORD[.] = MOVE stack:32|DWORD[.] moveKind: DWORD  <||@
  Comment 327 824 JUMP ~[] destination: B80 -> B109  <||@
  Comment 327 block B109 null  <||@
  Comment 327 1144 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 327 1146 NULLCHECK [r12|QWORD[*] + r9|DWORD[.] * 8] state [bci:8]  <||@
  Comment 327 [r9:0, stack:24, stack:64]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1 
     locals:  |stack:72|QWORD[.]  |- 
     stack:   |r13|DWORD          |    <||@
  Comment 327 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 331 1148 r14|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 331 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 341 1150 CMP r13|DWORD y: 1 size: DWORD  <||@
  Comment 345 1152 BRANCH trueDestinationProbability: 0.09284041465770032 condition: < trueDestination: B109 -> B110 falseDestination: B109 -> B116  <||@
  Comment 351 block B116 null  <||@
  Comment 351 1218 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 351 1220 r10|DWORD = MOV [r9|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 359 1222 rax|DWORD = SUB (x: r10|DWORD, ~y: r13|DWORD) size: DWORD  <||@
  Comment 365 1224 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 367 1226 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B116 -> B117 falseDestination: B116 -> B119  <||@
  Comment 373 block B119 null  <||@
  Comment 373 1242 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 373 1244 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 377 1246 rsi|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 381 1248 CMP r13|DWORD y: 16777215 size: DWORD  <||@
  Comment 388 1250 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B119 -> B120 falseDestination: B119 -> B124  <||@
  Comment 394 block B120 null  <||@
  Comment 394 1252 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 394 1254 rdx|DWORD = SHL r13|DWORD size: DWORD  <||@
  Comment 399 1256 rdx|DWORD = LEA [rdx|DWORD + 23] size: DWORD  <||@
  Comment 402 1258 rdx|DWORD = AND rdx|DWORD y: -8 size: DWORD  <||@
  Comment 405 1260 rdx|QWORD = MOVSXD rdx|DWORD size: QWORD  <||@
  Comment 408 1262 rcx|QWORD = ADD (x: rdx|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 414 1264 CMP (x: rcx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 417 1266 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B120 -> B124 falseDestination: B120 -> B122  <||@
  Comment 423 block B122 null  <||@
  Comment 423 1272 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 423 1274 MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD  <||@
  Comment 427 1276 AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 192] instr: 0  <||@
  Comment 435 1278 AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 256] instr: 0  <||@
  Comment 443 1280 AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 320] instr: 0  <||@
  Comment 451 1282 AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 384] instr: 0  <||@
  Comment 459 1284 MOV (x: [rax|QWORD + 12], y: r13|DWORD) size: DWORD  <||@
  Comment 463 1286 MOV [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 470 1288 MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 470 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 477 1290 rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 477 1292 r14|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 480 1294 JUMP ~[] destination: B122 -> B125  <||@
  Comment 480 block B125 null  <||@
  Comment 480 1314 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 480 1316 CMP (x: r13|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 483 1318 rsi|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: r14|DWORD) condition: >  <||@
  Comment 490 1320 rsi|QWORD = MOVSXD rsi|DWORD size: QWORD  <||@
  Comment 493 1322 CMP rsi|QWORD y: 1 size: QWORD  <||@
  Comment 497 1324 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B125 -> B144 falseDestination: B125 -> B127  <||@
  Comment 503 block B127 null  <||@
  Comment 503 1330 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 503 1332 r9|DWORD[.] = MOVE stack:32|DWORD[.] moveKind: DWORD  <||@
  Comment 508 1334 rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 512 1336 rcx|QWORD[*] = LEA [r9|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 520 1338 r10|QWORD = LEA [rsi|QWORD - 16] size: QWORD  <||@
  Comment 524 1340 TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 527 1346 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 534 1342 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B127 -> B132 falseDestination: B127 -> B130  <||@
  Comment 540 block B132 null  <||@
  Comment 540 1372 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 540 1374 r10|QWORD = LEA [rsi|QWORD - 8] size: QWORD  <||@
  Comment 544 1376 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 547 1378 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B132 -> B135 falseDestination: B132 -> B134  <||@
  Comment 553 block B134 null  <||@
  Comment 553 1384 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 553 1386 xmm0|V128_WORD = H [rcx|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVDQU  <||@
  Comment 559 1388 J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 565 1390 r10|QWORD = LEA [r11|QWORD + 8] size: QWORD  <||@
  Comment 569 1392 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 572 1394 JUMP ~[] destination: B134 -> B135  <||@
  Comment 572 block B135 null  <||@
  Comment 572 1396 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 572 1398 r10|QWORD = LEA [rsi|QWORD - 4] size: QWORD  <||@
  Comment 576 1400 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 579 1402 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B135 -> B138 falseDestination: B135 -> B137  <||@
  Comment 585 block B137 null  <||@
  Comment 585 1408 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 585 1410 xmm0|V64_WORD = H [rcx|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVQ  <||@
  Comment 591 1412 J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 597 1414 r10|QWORD = LEA [r11|QWORD + 4] size: QWORD  <||@
  Comment 601 1416 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 604 1418 JUMP ~[] destination: B137 -> B138  <||@
  Comment 604 block B138 null  <||@
  Comment 604 1420 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 604 1422 r10|QWORD = LEA [rsi|QWORD - 2] size: QWORD  <||@
  Comment 608 1424 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 611 1426 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B138 -> B141 falseDestination: B138 -> B140  <||@
  Comment 617 block B140 null  <||@
  Comment 617 1432 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 617 1434 xmm0|V32_WORD = H [rcx|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVD  <||@
  Comment 623 1436 J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 629 1438 r10|QWORD = LEA [r11|QWORD + 2] size: QWORD  <||@
  Comment 633 1440 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 636 1442 JUMP ~[] destination: B140 -> B141  <||@
  Comment 636 block B141 null  <||@
  Comment 636 1444 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 636 1446 r10|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 642 1448 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 645 1450 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B141 -> B144 falseDestination: B141 -> B143  <||@
  Comment 651 block B143 null  <||@
  Comment 651 1456 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 651 1458 rcx|DWORD = MOVSX [rcx|QWORD[*] + r11|QWORD * 2] size: DWORD  <||@
  Comment 656 1460 MOV (x: [rdx|QWORD[.] + r11|QWORD * 2], y: rcx|DWORD) size: WORD  <||@
  Comment 661 1462 JUMP ~[] destination: B143 -> B144  <||@
  Comment 661 block B144 null  <||@
  Comment 661 1464 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 661 1466 rdx|QWORD = MOVSXD r13|DWORD size: QWORD  <||@
  Comment 664 1468 CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 667 1470 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B144 -> B145 falseDestination: B144 -> B164  <||@
  Comment 673 block B164 null  <||@
  Comment 673 1610 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 673 1612 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 677 1614 rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD  <||@
  Comment 681 1616 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 685 1618 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B164 -> B165 falseDestination: B164 -> B166  <||@
  Comment 691 block B166 null  <||@
  Comment 691 1640 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 691 1642 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 695 1644 AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0  <||@
  Comment 702 1646 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 702 1648 r14|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 702 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 712 1650 JUMP ~[] destination: B166 -> B167  <||@
  Comment 712 block B167 null  <||@
  Comment 712 1652 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 712 1654 rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 715 1656 rcx|QWORD = MOV [r14|QWORD + 168] size: QWORD  <||@
  Comment 722 1658 MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD  <||@
  Comment 725 1660 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 725 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 732 1662 rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@2ae4cec4 encoding: base: 0 shift: 3  <||@
  Comment 736 1664 MOV (x: [rsi|QWORD[*] + 12], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 739 1666 MOV (x: [rsi|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 743 1668 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 746 1670 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 755 12  <||@
  Comment 765 block B145 null  <||@
  Comment 765 1472 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 765 1474 rcx|QWORD[.] = LEA [rax|QWORD[.] + rsi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 770 1476 rdx|QWORD = SUB (x: rdx|QWORD, ~y: rsi|QWORD) size: QWORD  <||@
  Comment 773 1478 rsi|QWORD = LEA [rdx|QWORD - 16] size: QWORD  <||@
  Comment 777 1480 TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 780 1482 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B145 -> B146 falseDestination: B145 -> B147  <||@
  Comment 786 block B146 null  <||@
  Comment 786 1484 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 786 1486 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 793 1488 JUMP ~[] destination: B146 -> B150  <||@
  Comment 793 block B150 null  <||@
  Comment 793 1512 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 793 1514 rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD  <||@
  Comment 797 1516 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 800 1518 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B150 -> B153 falseDestination: B150 -> B152  <||@
  Comment 806 block B152 null  <||@
  Comment 806 1524 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 806 1526 xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 810 1528 J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 816 1530 rsi|QWORD = LEA [r10|QWORD + 8] size: QWORD  <||@
  Comment 820 1532 r10|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 823 1534 JUMP ~[] destination: B152 -> B153  <||@
  Comment 823 block B153 null  <||@
  Comment 823 1536 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 823 1538 rsi|QWORD = LEA [rdx|QWORD - 4] size: QWORD  <||@
  Comment 827 1540 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 830 1542 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B153 -> B156 falseDestination: B153 -> B155  <||@
  Comment 836 block B155 null  <||@
  Comment 836 1548 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 836 1550 xmm0|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 840 1552 J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 846 1554 rsi|QWORD = LEA [r10|QWORD + 4] size: QWORD  <||@
  Comment 850 1556 r10|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 853 1558 JUMP ~[] destination: B155 -> B156  <||@
  Comment 853 block B156 null  <||@
  Comment 853 1560 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 853 1562 rsi|QWORD = LEA [rdx|QWORD - 2] size: QWORD  <||@
  Comment 857 1564 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 860 1566 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B156 -> B159 falseDestination: B156 -> B158  <||@
  Comment 866 block B158 null  <||@
  Comment 866 1572 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 866 1574 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 870 1576 J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 876 1578 rsi|QWORD = LEA [r10|QWORD + 2] size: QWORD  <||@
  Comment 880 1580 r10|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 883 1582 JUMP ~[] destination: B158 -> B159  <||@
  Comment 883 block B159 null  <||@
  Comment 883 1584 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 883 1586 rdx|QWORD = DEC rdx|QWORD size: QWORD  <||@
  Comment 886 1588 CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 889 1590 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B159 -> B164 falseDestination: B159 -> B161  <||@
  Comment 895 block B161 null  <||@
  Comment 895 1596 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 895 1598 MOV (x: [rcx|QWORD[.] + r10|QWORD * 2], y: r12|ILLEGAL) size: WORD  <||@
  Comment 900 1600 JUMP ~[] destination: B161 -> B164  <||@
  Comment 905 block B3 null  <||@
  Comment 905 52 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 905 54 rdi|QWORD = MOVE input: long[2|0x2]  <||@
  Comment 912 56 r14|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 919 58 r13|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 922 60 rbp|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 927 62 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 932 64 rdx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 937 66 stack:56|QWORD = MOVE input: long[2|0x2]  <||@
  Comment 946 68 JUMP ~[] destination: B3 -> B9  <||@
  Comment 946 block B9 null  <||@
  Comment 946 144 [] = LABEL numbPhis: 7 align: false label: ?  <||@
  Comment 946 146 CMP rcx|DWORD y: 8 size: DWORD  <||@
  Comment 949 148 BRANCH trueDestinationProbability: 0.9952836455427129 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B43  <||@
  Comment 955 block B10 null  <||@
  Comment 955 150 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 955 152 NULLCHECK [r12|QWORD[*] + r9|DWORD[.] * 8] state [bci:43, 5]  <||@
  Comment 955 [rbx:0, rsi:0, r8:0, r9:0, stack:56, stack:64]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43, duringCall: false, rethrow: false]
              |0             |1             |2          |3  |4 
     locals:  |rsi|QWORD[.]  |rbx|QWORD[.]  |rdx|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 955 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 959 154 rax|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:43, 5]  <||@
  Comment 959 [rbx:0, rsi:0, r8:0, r9:0, stack:56, stack:64]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43, duringCall: false, rethrow: false]
              |0             |1             |2          |3  |4 
     locals:  |rsi|QWORD[.]  |rbx|QWORD[.]  |rdx|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 959 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 967 156 rbp|DWORD = MOV [r9|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 975 158 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2ae4cec4 encoding: base: 0 shift: 3  <||@
  Comment 979 160 rdi|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 982 162 CMP (x: r11|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 985 164 BRANCH trueDestinationProbability: 0.44783436248413755 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B29  <||@
  Comment 991 block B29 null  <||@
  Comment 991 346 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 991 348 CMP (x: rcx|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 994 350 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31  <||@
  Comment 1000 block B31 null  <||@
  Comment 1000 360 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1000 362 rcx|DWORD = ADD (x: rdx|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 1005 364 CMP (x: rbp|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 1007 366 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B41  <||@
  Comment 1013 block B32 null  <||@
  Comment 1013 368 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1013 370 r13|DWORD = INC rcx|DWORD size: DWORD  <||@
  Comment 1019 372 CMP (x: rbp|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 1022 374 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B32 -> B33 falseDestination: B32 -> B40  <||@
  Comment 1028 block B33 null  <||@
  Comment 1028 376 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1028 378 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 1031 380 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35  <||@
  Comment 1037 block B35 null  <||@
  Comment 1037 390 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1037 392 rax|DWORD = SUB (x: rax|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 1040 394 CMP (x: r10|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1043 396 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B37  <||@
  Comment 1049 block B37 null  <||@
  Comment 1049 406 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1049 408 rbp|DWORD = SUB (x: rbp|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 1052 410 CMP (x: rdx|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 1054 412 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B37 -> B38 falseDestination: B37 -> B39  <||@
  Comment 1060 block B39 null  <||@
  Comment 1060 422 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1060 424 stack:80|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 1065 426 stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1069 428 stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1074 430 r8|QWORD[*] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1074 432 r10|QWORD[*] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 1077 434 r11|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 1080 436 rdi|QWORD = LEA [r8|QWORD[*] + rdi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 1085 438 rsi|QWORD = LEA [r10|QWORD[*] + rdx|DWORD * 2 + 16] size: QWORD  <||@
  Comment 1090 440 rdx|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 1093 442 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 1093 {Field[name=StubRoutines::_jshort_arraycopy, type=address, offset=0, address=0x105a7dc78, value=0x106812d40]:0x106812d40}  <||@
  Comment 1099 444 rcx|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 1103 446 rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1108 448 MOV [rbx|QWORD[.] + rcx|DWORD * 2 + 16] y: 46 size: WORD  <||@
  Comment 1115 450 r13|DWORD = MOVE stack:80|DWORD moveKind: DWORD  <||@
  Comment 1120 452 MOV [rbx|QWORD[.] + r13|DWORD * 2 + 16] y: 48 size: WORD  <||@
  Comment 1128 454 rdi|DWORD = LEA [rcx|DWORD + 2] size: DWORD  <||@
  Comment 1131 456 r13|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 1134 458 r9|DWORD[.] = MOVE stack:32|DWORD[.] moveKind: DWORD  <||@
  Comment 1139 460 JUMP ~[] destination: B39 -> B109  <||@
  Comment 1144 block B51 null  <||@
  Comment 1144 564 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1144 568 r9|DWORD = SUB (x: rbp|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 1150 570 rcx|DWORD = NEG rcx|DWORD size: DWORD  <||@
  Comment 1152 572 rcx|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 1155 574 rdx|QWORD = DEC rcx|QWORD size: QWORD  <||@
  Comment 1161 576 CMP (x: r9|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 1164 578 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B51 -> B52 falseDestination: B51 -> B57  <||@
  Comment 1170 block B57 null  <||@
  Comment 1170 628 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1170 630 stack:88|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1175 632 JUMP ~[] destination: B57 -> B58  <||@
  Comment 1175 block B58 null  <||@
  Comment 1175 634 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1175 636 CMP (x: rbp|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 1178 638 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B58 -> B59 falseDestination: B58 -> B60  <||@
  Comment 1184 block B60 null  <||@
  Comment 1184 650 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1184 652 CMP (x: r9|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 1187 654 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B60 -> B61 falseDestination: B60 -> B63  <||@
  Comment 1193 block B63 null  <||@
  Comment 1193 674 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1193 676 CMP rcx|QWORD y: 1 size: QWORD  <||@
  Comment 1197 678 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65  <||@
  Comment 1203 block B65 null  <||@
  Comment 1203 686 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1203 688 rsi|QWORD[.] = LEA [rbx|QWORD[.] + rbp|DWORD * 2 + 16] size: QWORD  <||@
  Comment 1208 690 r10|QWORD = LEA [rcx|QWORD - 2] size: QWORD  <||@
  Comment 1212 692 TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1215 694 BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B65 -> B66 falseDestination: B65 -> B67  <||@
  Comment 1221 block B67 null  <||@
  Comment 1221 702 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1221 704 xmm0|V32_WORD = A od: SIMD<48,48> oe: WORD  <||@
  Comment 1221 {DataSection[0x0]}  <||@
  Comment 1230 706 J (address: [rsi|QWORD[.]], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 1234 708 r10|QWORD = MOVE input: long[2|0x2]  <||@
  Comment 1241 710 JUMP ~[] destination: B67 -> B68  <||@
  Comment 1241 block B68 null  <||@
  Comment 1241 712 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1241 714 CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1244 716 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B68 -> B69 falseDestination: B68 -> B70  <||@
  Comment 1250 block B70 null  <||@
  Comment 1250 724 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1250 726 MOV [rsi|QWORD[.]] y: 48 size: WORD  <||@
  Comment 1255 728 r10|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 1260 730 JUMP ~[] destination: B70 -> B71  <||@
  Comment 1265 block B147 null  <||@
  Comment 1265 1490 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1265 1492 xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 1269 1494 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1276 1496 JUMP ~[] destination: B147 -> B148  <||@
  Comment 1276 block B148 loop 1 depth 1 header:1648|LoopBegin  <||@
  Comment 1276 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1280 1500 J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1286 1502 r10|QWORD = LEA [r10|QWORD + 16] size: QWORD  <||@
  Comment 1290 1504 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1293 1506 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B148 -> B150 falseDestination: B148 -> B148  <||@
  Comment 1300 block B130 loop 0 depth 1 header:1585|LoopBegin  <||@
  Comment 1300 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1312 1358 xmm0|V256_WORD = H [rcx|QWORD[*] + r11|QWORD * 2] nZ: YMM oh: VMOVDQU  <||@
  Comment 1318 1360 J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1324 1362 r11|QWORD = LEA [r11|QWORD + 16] size: QWORD  <||@
  Comment 1328 1364 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1331 1366 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B130 -> B132 falseDestination: B130 -> B130  <||@
  Comment 1338 block B110 null  <||@
  Comment 1338 1154 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1338 1156 TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 1341 1158 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B110 -> B111 falseDestination: B110 -> B112  <||@
  Comment 1347 block B112 null  <||@
  Comment 1347 1166 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1347 1168 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1351 1170 rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD  <||@
  Comment 1355 1172 CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 1359 1174 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B112 -> B113 falseDestination: B112 -> B114  <||@
  Comment 1365 block B114 null  <||@
  Comment 1365 1190 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1365 1192 MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD  <||@
  Comment 1369 1194 AMD64PREFETCH ~[rax|QWORD + 216] instr: 0  <||@
  Comment 1376 1196 rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 1376 1198 JUMP ~[] destination: B114 -> B115  <||@
  Comment 1376 block B115 null  <||@
  Comment 1376 1200 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1376 1202 rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 1379 1204 rdx|QWORD = MOV [r14|QWORD + 168] size: QWORD  <||@
  Comment 1386 1206 MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD  <||@
  Comment 1389 1208 MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 1389 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 1396 1210 MOV [rax|QWORD[*] + 12] y: -559030611 size: DWORD c: NarrowOop[char[0]{}]  <||@
  Comment 1396 {NarrowOop[char[0]{}]}  <||@
  Comment 1403 1212 MOV (x: [rax|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 1407 1214 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1410 1216 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1419 12  <||@
  Comment 1429 block B124 null  <||@
  Comment 1429 1300 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1429 1302 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 1429 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 1439 1304 rdx|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 1442 1306 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1447 1308 r14|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1450 1310 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:8]  <||@
  Comment 1450 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1455 [stack:24, stack:64]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1 
     locals:  |stack:72|QWORD[.]  |- 
     stack:   |r13|DWORD          |    <||@
  Comment 1456 1312 JUMP ~[] destination: B124 -> B125  <||@
  Comment 1461 block B11 null  <||@
  Comment 1461 166 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1461 168 stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1466 170 CMP (x: rbp|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 1469 172 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B28  <||@
  Comment 1475 block B12 null  <||@
  Comment 1475 174 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1475 176 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 1478 178 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14  <||@
  Comment 1484 block B14 null  <||@
  Comment 1484 186 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1484 188 rsi|DWORD = SUB (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 1488 190 CMP (x: r10|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 1491 192 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B16  <||@
  Comment 1497 block B16 null  <||@
  Comment 1497 200 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1497 202 rsi|DWORD = SUB (x: rbp|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 1501 204 CMP (x: rdx|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 1503 206 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18  <||@
  Comment 1509 block B18 null  <||@
  Comment 1509 214 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1509 216 stack:76|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 1513 218 stack:80|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1517 220 stack:84|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 1522 222 stack:88|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1527 224 rsi|QWORD[*] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1530 226 r9|QWORD[*] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 1533 228 r14|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 1536 230 rdi|QWORD = LEA [rsi|QWORD[*] + rdi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 1541 232 rsi|QWORD = LEA [r9|QWORD[*] + rdx|DWORD * 2 + 16] size: QWORD  <||@
  Comment 1546 234 rdx|QWORD = MOVE r14|QWORD moveKind: QWORD  <||@
  Comment 1549 236 stack:96|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1553 238 stack:60|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1557 240 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 1557 {Field[name=StubRoutines::_jshort_arraycopy, type=address, offset=0, address=0x105a7dc78, value=0x106812d40]:0x106812d40}  <||@
  Comment 1563 242 r13|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 1568 244 rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1573 246 MOV [rbx|QWORD[.] + r13|DWORD * 2 + 16] y: 46 size: WORD  <||@
  Comment 1581 248 r13|DWORD = INC r13|DWORD size: DWORD  <||@
  Comment 1584 250 r10|DWORD = ADD (x: stack:88|DWORD, y: stack:60|DWORD) size: DWORD  <||@
  Comment 1594 252 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 1597 254 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B18 -> B26 falseDestination: B18 -> B20  <||@
  Comment 1603 block B20 null  <||@
  Comment 1603 260 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1603 262 r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 1608 264 r11|DWORD = SUB (x: r11|DWORD, ~y: stack:60|DWORD) size: DWORD  <||@
  Comment 1613 266 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 1616 268 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B20 -> B26 falseDestination: B20 -> B22  <||@
  Comment 1622 block B22 null  <||@
  Comment 1622 274 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1622 276 rax|DWORD = MOVE stack:80|DWORD moveKind: DWORD  <||@
  Comment 1626 278 rax|DWORD = SUB (x: rax|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 1629 280 CMP (x: r10|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1632 282 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B22 -> B26 falseDestination: B22 -> B24  <||@
  Comment 1638 block B24 null  <||@
  Comment 1638 288 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1638 290 rbp|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 1642 292 rbp|DWORD = SUB (x: rbp|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 1645 294 CMP (x: r13|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 1648 296 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B24 -> B26 falseDestination: B24 -> B27  <||@
  Comment 1654 block B27 null  <||@
  Comment 1654 310 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1654 312 r8|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD  <||@
  Comment 1658 314 r8|QWORD[*] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1658 316 rbx|QWORD[*] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 1658 318 rdi|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 1661 320 rsi|QWORD = MOVSXD r13|DWORD size: QWORD  <||@
  Comment 1664 322 rdx|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 1667 324 rdi|QWORD = LEA [r8|QWORD[*] + rdi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 1672 326 rsi|QWORD = LEA [rbx|QWORD[*] + rsi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 1677 328 stack:76|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 1682 330 stack:80|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1687 332 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 1687 {Field[name=StubRoutines::_jshort_arraycopy, type=address, offset=0, address=0x105a7dc78, value=0x106812d40]:0x106812d40}  <||@
  Comment 1693 334 r13|DWORD = ADD (x: stack:76|DWORD, y: stack:80|DWORD) size: DWORD  <||@
  Comment 1703 336 r9|DWORD[.] = MOVE stack:32|DWORD[.] moveKind: DWORD  <||@
  Comment 1708 338 JUMP ~[] destination: B27 -> B109  <||@
  Comment 1713 block B64 null  <||@
  Comment 1713 680 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1713 682 r10|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 1718 684 JUMP ~[] destination: B64 -> B71  <||@
  Comment 1723 block B52 null  <||@
  Comment 1723 580 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1723 582 rsi|QWORD = MOVE stack:48|QWORD moveKind: QWORD  <||@
  Comment 1728 584 stack:88|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1733 586 rsi|QWORD = ADD (x: rdx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1736 588 r10|QWORD = MOV rdi|DWORD size: DWORD  <||@
  Comment 1739 590 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1742 592 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B52 -> B53 falseDestination: B52 -> B56  <||@
  Comment 1748 block B53 null  <||@
  Comment 1748 594 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1748 596 CMP (x: rdi|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 1750 598 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B53 -> B58 falseDestination: B53 -> B55  <||@
  Comment 1761 block B66 null  <||@
  Comment 1761 696 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1761 698 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1768 700 JUMP ~[] destination: B66 -> B68  <||@
  Comment 1773 block B69 null  <||@
  Comment 1773 718 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1773 720 r10|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 1778 722 JUMP ~[] destination: B69 -> B71  <||@
  Comment 1783 block B165 null  <||@
  Comment 1783 1620 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1783 1622 stack:40|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1788 1624 r14|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 1788 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 1798 1626 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1798 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1808 1628 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 1813 1630 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1818 1632 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:8]  <||@
  Comment 1818 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1823 [stack:24, stack:56]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1 
     locals:  |stack:72|QWORD[.]  |- 
     stack:   |r13|DWORD          |    <||@
  Comment 1824 1634 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1827 1636 rax|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1832 1638 JUMP ~[] destination: B165 -> B167  <||@
  Comment 1837 block B79 null  <||@
  Comment 1837 788 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1837 742 rsi|DWORD = MOVE input: int[-180065|0xfffffffffffd409f]  <||@
  Comment 1842 790 MOV (x: [r15|QWORD + 668], y: rsi|DWORD) size: DWORD  <||@
  Comment 1849 792 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1856 794 DEOPT info [bci:256, 5]  <||@
  Comment 1856 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1861 [rbx:0, stack:24]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 256, duringCall: false, rethrow: false]
              |0                  |1             |2         |3  |4 
     locals:  |stack:72|QWORD[.]  |rbx|QWORD[.]  |r9|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:72|QWORD[.]  |-   <||@
  Comment 1862 block B85 null  <||@
  Comment 1862 858 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1862 852 stack:60|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1866 854 stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1871 860 rdi|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:283, 5]  <||@
  Comment 1871 [rbx:0, r8:0, r9:0, stack:24, stack:56, stack:64]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283, duringCall: false, rethrow: false]
              |0                  |1             |2          |3  |4 
     locals:  |stack:72|QWORD[.]  |rbx|QWORD[.]  |rdx|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:72|QWORD[.]  |-   <||@
  Comment 1871 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1879 862 CMP (x: rdi|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 1882 864 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B85 -> B86 falseDestination: B85 -> B176  <||@
  Comment 1888 block B86 null  <||@
  Comment 1888 866 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1888 868 r11|DWORD = MOV [r9|DWORD[.] * 8 + 12] size: DWORD state [bci:283, 5]  <||@
  Comment 1888 [rbx:0, r8:0, r9:0, stack:24, stack:56, stack:64]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283, duringCall: false, rethrow: false]
              |0                  |1             |2          |3  |4 
     locals:  |stack:72|QWORD[.]  |rbx|QWORD[.]  |rdx|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:72|QWORD[.]  |-   <||@
  Comment 1888 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1896 870 CMP (x: r11|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 1899 872 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B86 -> B87 falseDestination: B86 -> B175  <||@
  Comment 1905 block B87 null  <||@
  Comment 1905 874 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1905 876 CMP (x: r11|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1908 878 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B87 -> B88 falseDestination: B87 -> B174  <||@
  Comment 1914 block B88 null  <||@
  Comment 1914 880 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1914 882 CMP stack:28|DWORD y: 2 size: DWORD  <||@
  Comment 1919 884 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B88 -> B89 falseDestination: B88 -> B90  <||@
  Comment 1925 block B90 null  <||@
  Comment 1925 892 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1925 894 rsi|DWORD = DEC stack:28|DWORD size: DWORD  <||@
  Comment 1931 896 rcx|DWORD = ADD (x: rsi|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 1935 898 CMP (x: r11|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 1938 900 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B90 -> B91 falseDestination: B90 -> B173  <||@
  Comment 1944 block B91 null  <||@
  Comment 1944 902 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1944 904 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2ae4cec4 encoding: base: 0 shift: 3  <||@
  Comment 1948 906 rdx|DWORD = MOVSX [r8|QWORD[.] + r10|DWORD * 2 + 16] size: DWORD  <||@
  Comment 1954 908 MOV (x: [r13|QWORD + r9|DWORD[.] * 8], y: rdx|DWORD) size: WORD  <||@
  Comment 1960 910 MOV [r14|QWORD + r9|DWORD[.] * 8] y: 46 size: WORD  <||@
  Comment 1967 912 rdi|DWORD = SUB (x: rdi|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 1969 914 r10|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 1972 916 CMP (x: r10|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 1975 918 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B91 -> B95 falseDestination: B91 -> B93  <||@
  Comment 1981 block B93 null  <||@
  Comment 1981 924 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1981 926 rdi|DWORD = SUB (x: r11|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 1986 928 CMP (x: rbp|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 1988 930 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B93 -> B95 falseDestination: B93 -> B96  <||@
  Comment 1994 block B96 null  <||@
  Comment 1994 944 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1994 946 stack:28|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1998 948 stack:88|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2003 950 r8|QWORD[*] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2003 952 rdx|QWORD[*] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 2006 954 rdi|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 2009 956 r10|QWORD = MOVSXD rsi|DWORD size: QWORD  <||@
  Comment 2012 958 rdi|QWORD = LEA [r8|QWORD[*] + rdi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 2017 960 rsi|QWORD = LEA [rdx|QWORD[*] + rbp|DWORD * 2 + 16] size: QWORD  <||@
  Comment 2022 962 rdx|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 2025 964 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 2025 {Field[name=StubRoutines::_jshort_arraycopy, type=address, offset=0, address=0x105a7dc78, value=0x106812d40]:0x106812d40}  <||@
  Comment 2031 966 rcx|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 2035 968 rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2040 970 MOV [rbx|QWORD[.] + rcx|DWORD * 2 + 16] y: 69 size: WORD  <||@
  Comment 2047 972 r10|DWORD = INC rcx|DWORD size: DWORD  <||@
  Comment 2053 974 CMP stack:60|DWORD y: 1 size: DWORD  <||@
  Comment 2058 980 r11|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 2063 976 BRANCH trueDestinationProbability: 0.9016620498614958 condition: < trueDestination: B96 -> B97 falseDestination: B96 -> B100  <||@
  Comment 2069 block B97 null  <||@
  Comment 2069 978 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2069 982 CMP (x: r11|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 2072 984 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B97 -> B98 falseDestination: B97 -> B99  <||@
  Comment 2078 block B98 null  <||@
  Comment 2078 986 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2078 988 MOV [rbx|QWORD[.] + r10|DWORD * 2 + 16] y: 45 size: WORD  <||@
  Comment 2086 990 rax|DWORD = LEA [rcx|DWORD + 2] size: DWORD  <||@
  Comment 2089 992 rdx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2094 994 rdx|DWORD = SUB (x: rdx|DWORD, ~y: stack:60|DWORD) size: DWORD  <||@
  Comment 2098 996 rcx|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 2100 998 r10|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 2103 1000 JUMP ~[] destination: B98 -> B101  <||@
  Comment 2103 block B101 null  <||@
  Comment 2103 1018 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 2103 1020 CMP (x: r11|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 2106 1022 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B101 -> B102 falseDestination: B101 -> B171  <||@
  Comment 2112 block B102 null  <||@
  Comment 2112 1024 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2112 1026 r8|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 2118 1028 CMP rcx|DWORD y: 10 size: DWORD  <||@
  Comment 2121 1030 BRANCH trueDestinationProbability: 0.9778393351800554 condition: < trueDestination: B102 -> B103 falseDestination: B102 -> B104  <||@
  Comment 2127 block B103 null  <||@
  Comment 2127 1032 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2127 1034 rax|DWORD = LEA [rcx|DWORD + 48] size: DWORD  <||@
  Comment 2130 1036 MOV (x: [rbx|QWORD[.] + r10|DWORD * 2 + 16], y: rax|DWORD) size: WORD  <||@
  Comment 2136 1038 r13|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 2139 1040 r9|DWORD[.] = MOVE stack:32|DWORD[.] moveKind: DWORD  <||@
  Comment 2144 1042 JUMP ~[] destination: B103 -> B109  <||@
  Comment 2149 block B34 null  <||@
  Comment 2149 382 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2149 384 rax|DWORD = MOVE input: int[-154209|0xfffffffffffda59f]  <||@
  Comment 2154 386 stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2159 388 JUMP ~[] destination: B34 -> B42  <||@
  Comment 2159 block B42 null  <||@
  Comment 2159 478 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2159 480 MOV (x: [r15|QWORD + 668], y: rax|DWORD) size: DWORD  <||@
  Comment 2166 482 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2173 484 DEOPT info [bci:43, 5]  <||@
  Comment 2173 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2178 [rbx:0, stack:24]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43, duringCall: false, rethrow: false]
              |0                  |1             |2          |3  |4 
     locals:  |stack:72|QWORD[.]  |rbx|QWORD[.]  |rdx|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:72|QWORD[.]  |-   <||@
  Comment 2179 block B36 null  <||@
  Comment 2179 398 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2179 400 rax|DWORD = MOVE input: int[-154209|0xfffffffffffda59f]  <||@
  Comment 2184 402 stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2189 404 JUMP ~[] destination: B36 -> B42  <||@
  Comment 2191 block B38 null  <||@
  Comment 2191 414 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2191 416 rax|DWORD = MOVE input: int[-154209|0xfffffffffffda59f]  <||@
  Comment 2196 418 stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2201 420 JUMP ~[] destination: B38 -> B42  <||@
  Comment 2203 block B113 null  <||@
  Comment 2203 1176 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2203 1178 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 2203 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 2213 1180 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 2218 1182 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2223 1184 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:8]  <||@
  Comment 2223 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 2228 [stack:24]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1 
     locals:  |stack:72|QWORD[.]  |- 
     stack:   |r13|DWORD          |    <||@
  Comment 2229 1186 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2229 1188 JUMP ~[] destination: B113 -> B115  <||@
  Comment 2234 block B43 null  <||@
  Comment 2234 486 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2234 488 stack:60|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 2238 490 stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2243 492 r11|QWORD = MOVE stack:56|QWORD moveKind: QWORD  <||@
  Comment 2248 494 r9|QWORD = LEA [rdi|QWORD + 16] size: QWORD  <||@
  Comment 2252 496 r13|QWORD = MOVE r14|QWORD moveKind: QWORD  <||@
  Comment 2255 498 stack:48|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 2260 502 r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 2265 506 r14|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 2268 508 r9|DWORD[.] = MOVE stack:32|DWORD[.] moveKind: DWORD  <||@
  Comment 2273 510 JUMP ~[] destination: B43 -> B44  <||@
  Comment 2278 block B100 null  <||@
  Comment 2278 1010 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2278 1014 rcx|DWORD = DEC stack:60|DWORD size: DWORD  <||@
  Comment 2284 1016 JUMP ~[] destination: B100 -> B101  <||@
  Comment 2289 block B13 null  <||@
  Comment 2289 180 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2289 182 rax|DWORD = MOVE input: int[-128865|0xfffffffffffe089f]  <||@
  Comment 2294 184 JUMP ~[] destination: B13 -> B42  <||@
  Comment 2299 block B15 null  <||@
  Comment 2299 194 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2299 196 rax|DWORD = MOVE input: int[-128865|0xfffffffffffe089f]  <||@
  Comment 2304 198 JUMP ~[] destination: B15 -> B42  <||@
  Comment 2309 block B17 null  <||@
  Comment 2309 208 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2309 210 rax|DWORD = MOVE input: int[-128865|0xfffffffffffe089f]  <||@
  Comment 2314 212 JUMP ~[] destination: B17 -> B42  <||@
  Comment 2319 block B26 null  <||@
  Comment 2319 302 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2319 304 MOV [r15|QWORD + 668] y: -143201 size: DWORD  <||@
  Comment 2330 306 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2337 308 DEOPT info [bci:145, 5]  <||@
  Comment 2337 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2342 [rbx:0, stack:24]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:925) [bci: 145, duringCall: false, rethrow: false]
              |0                  |1             |2          |3               |4 
     locals:  |stack:72|QWORD[.]  |rbx|QWORD[.]  |r13|DWORD  |stack:60|DWORD  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:72|QWORD[.]  |-   <||@
  Comment 2343 block B4 null  <||@
  Comment 2343 70 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2343 72 stack:60|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 2347 74 stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2352 76 CMP [r9|DWORD[.] * 8 + 12] y: 0 size: DWORD state [bci:0]  <||@
  Comment 2352 [rbx:0, r8:0, r9:0, stack:24, stack:56, stack:64]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1 
     locals:  |stack:72|QWORD[.]  |-   <||@
  Comment 2352 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2361 78 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6  <||@
  Comment 2367 block B6 null  <||@
  Comment 2367 88 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2367 90 MOV [r9|DWORD[.] * 8 + 16] y: 45 size: WORD  <||@
  Comment 2378 92 CMP stack:60|DWORD y: 1 size: DWORD  <||@
  Comment 2383 94 BRANCH trueDestinationProbability: 0.8239147472715149 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8  <||@
  Comment 2389 block B7 null  <||@
  Comment 2389 96 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2389 98 r14|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 2396 100 r13|QWORD = MOVE input: long[18|0x12]  <||@
  Comment 2403 102 rbp|DWORD = MOVE input: int[3|0x3]  <||@
  Comment 2408 104 rax|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 2413 106 rdx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2418 108 stack:48|QWORD = MOVE input: long[3|0x3]  <||@
  Comment 2427 114 rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 2432 116 JUMP ~[] destination: B7 -> B44  <||@
  Comment 2437 block B104 null  <||@
  Comment 2437 1044 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2437 1046 r9|DWORD[.] = MOVE stack:32|DWORD[.] moveKind: DWORD  <||@
  Comment 2442 1048 CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 2445 1050 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B104 -> B105 falseDestination: B104 -> B170  <||@
  Comment 2451 block B105 null  <||@
  Comment 2451 1052 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2451 1054 r13|DWORD = LEA [r10|DWORD + 2] size: DWORD  <||@
  Comment 2455 1056 CMP rcx|DWORD y: 100 size: DWORD  <||@
  Comment 2458 1058 BRANCH trueDestinationProbability: 0.625 condition: < trueDestination: B105 -> B106 falseDestination: B105 -> B107  <||@
  Comment 2464 block B106 null  <||@
  Comment 2464 1060 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2464 1062 rax|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 2466 1064 rdx|DWORD = MOVE input: int[1717986919|0x66666667]  <||@
  Comment 2471 1066 (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 2473 1068 rdx|DWORD = SAR rdx|DWORD y: 2 size: DWORD  <||@
  Comment 2476 1070 rax|DWORD = LEA [rdx|DWORD + 48] size: DWORD  <||@
  Comment 2479 1072 MOV (x: [rbx|QWORD[.] + r10|DWORD * 2 + 16], y: rax|DWORD) size: WORD  <||@
  Comment 2485 1074 rax|DWORD = SHL rdx|DWORD y: 3 size: DWORD  <||@
  Comment 2490 1076 rdx|DWORD = SHL rdx|DWORD size: DWORD  <||@
  Comment 2492 1078 rax|DWORD = ADD (x: rax|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 2494 1080 rcx|DWORD = SUB (x: rcx|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 2496 1082 rax|DWORD = LEA [rcx|DWORD + 48] size: DWORD  <||@
  Comment 2499 1084 MOV (x: [rbx|QWORD[.] + r8|DWORD * 2 + 16], y: rax|DWORD) size: WORD  <||@
  Comment 2505 1086 JUMP ~[] destination: B106 -> B109  <||@
  Comment 2510 block B95 null  <||@
  Comment 2510 936 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2510 938 MOV [r15|QWORD + 668] y: -199521 size: DWORD  <||@
  Comment 2521 940 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2528 942 DEOPT info [bci:306, 5]  <||@
  Comment 2528 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2533 [rbx:0, stack:24]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:945) [bci: 306, duringCall: false, rethrow: false]
              |0                  |1             |2          |3  |4 
     locals:  |stack:72|QWORD[.]  |rbx|QWORD[.]  |rbp|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:72|QWORD[.]  |-   <||@
  Comment 2534 block B107 null  <||@
  Comment 2534 1088 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2534 1090 CMP (x: r11|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 2537 1092 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B107 -> B108 falseDestination: B107 -> B169  <||@
  Comment 2543 block B108 null  <||@
  Comment 2543 1094 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2543 1096 rax|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 2545 1098 rdx|DWORD = MOVE input: int[1374389535|0x51eb851f]  <||@
  Comment 2550 1100 (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 2552 1102 rdx|DWORD = SAR rdx|DWORD y: 5 size: DWORD  <||@
  Comment 2555 1104 rax|DWORD = LEA [rdx|DWORD + 48] size: DWORD  <||@
  Comment 2558 1106 MOV (x: [rbx|QWORD[.] + r10|DWORD * 2 + 16], y: rax|DWORD) size: WORD  <||@
  Comment 2564 1108 rax|DWORD = IMUL rdx|DWORD y: 100 size: DWORD  <||@
  Comment 2567 1110 rcx|DWORD = SUB (x: rcx|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 2569 1112 rax|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 2571 1114 rdx|DWORD = MOVE input: int[1717986919|0x66666667]  <||@
  Comment 2576 1116 (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 2578 1118 rdx|DWORD = SAR rdx|DWORD y: 2 size: DWORD  <||@
  Comment 2581 1120 r11|DWORD = SHR rcx|DWORD y: 31 size: DWORD  <||@
  Comment 2588 1122 rdx|DWORD = ADD (x: rdx|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 2591 1124 r11|DWORD = LEA [rdx|DWORD + 48] size: DWORD  <||@
  Comment 2595 1126 MOV (x: [rbx|QWORD[.] + r8|DWORD * 2 + 16], y: r11|DWORD) size: WORD  <||@
  Comment 2601 1128 r11|DWORD = SHL rdx|DWORD y: 3 size: DWORD  <||@
  Comment 2608 1130 rdx|DWORD = SHL rdx|DWORD size: DWORD  <||@
  Comment 2610 1132 r11|DWORD = ADD (x: r11|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 2613 1134 rcx|DWORD = SUB (x: rcx|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 2616 1136 r11|DWORD = LEA [rcx|DWORD + 48] size: DWORD  <||@
  Comment 2620 1138 MOV (x: [rbx|QWORD[.] + r13|DWORD * 2 + 16], y: r11|DWORD) size: WORD  <||@
  Comment 2626 1140 r13|DWORD = LEA [r10|DWORD + 3] size: DWORD  <||@
  Comment 2630 1142 JUMP ~[] destination: B108 -> B109  <||@
  Comment 2635 block B8 null  <||@
  Comment 2635 118 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2635 120 rcx|DWORD = INC stack:60|DWORD size: DWORD  <||@
  Comment 2641 122 rdi|QWORD = MOVE input: long[4|0x4]  <||@
  Comment 2648 124 r14|QWORD = MOVE input: long[18|0x12]  <||@
  Comment 2655 126 r13|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 2658 128 rbp|DWORD = MOVE input: int[3|0x3]  <||@
  Comment 2663 130 rax|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 2668 132 rdx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2673 134 stack:56|QWORD = MOVE input: long[3|0x3]  <||@
  Comment 2682 136 rcx|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2686 140 rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 2691 142 JUMP ~[] destination: B8 -> B9  <||@
  Comment 2696 block B89 null  <||@
  Comment 2696 886 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2696 888 r10|DWORD = MOVE input: int[-190995|0xfffffffffffd15ed]  <||@
  Comment 2702 890 JUMP ~[] destination: B89 -> B177  <||@
  Comment 2702 block B177 null  <||@
  Comment 2702 1726 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2702 1728 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2709 1730 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2716 1732 DEOPT info [bci:283, 5]  <||@
  Comment 2716 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2721 [rbx:0, stack:24]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283, duringCall: false, rethrow: false]
              |0                  |1             |2          |3  |4 
     locals:  |stack:72|QWORD[.]  |rbx|QWORD[.]  |rdx|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:72|QWORD[.]  |-   <||@
  Comment 2722 block B173 null  <||@
  Comment 2722 1702 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2722 1704 r10|DWORD = MOVE input: int[-202779|0xfffffffffffce7e5]  <||@
  Comment 2728 1706 JUMP ~[] destination: B173 -> B177  <||@
  Comment 2730 block B40 null  <||@
  Comment 2730 462 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2730 464 rax|DWORD = MOVE input: int[-160795|0xfffffffffffd8be5]  <||@
  Comment 2735 466 stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2740 468 JUMP ~[] destination: B40 -> B42  <||@
  Comment 2745 block B169 null  <||@
  Comment 2745 1676 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2745 1678 r11|DWORD = MOVE input: int[-218139|0xfffffffffffcabe5]  <||@
  Comment 2751 1680 JUMP ~[] destination: B169 -> B172  <||@
  Comment 2751 block B172 null  <||@
  Comment 2751 1694 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2751 1696 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 2758 1698 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2765 1700 DEOPT info [bci:396, 5]  <||@
  Comment 2765 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2770 [rbx:0, stack:24]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 396, duringCall: false, rethrow: false]
              |0  |1             |2          |3          |4 
     locals:  |-  |rbx|QWORD[.]  |r10|DWORD  |rcx|DWORD  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:72|QWORD[.]  |-   <||@
  Comment 2771 block B61 null  <||@
  Comment 2771 656 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2771 658 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 2781 660 r10|DWORD = MOVE input: int[-168211|0xfffffffffffd6eed]  <||@
  Comment 2787 664 JUMP ~[] destination: B61 -> B62  <||@
  Comment 2787 block B62 null  <||@
  Comment 2787 666 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 2787 646 rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 2792 668 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2799 670 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 2806 672 DEOPT info [bci:229, 5]  <||@
  Comment 2806 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2811 [rbx:0, rsi:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:936) [bci: 229, duringCall: false, rethrow: false]
              |0             |1             |2          |3  |4 
     locals:  |rsi|QWORD[.]  |rbx|QWORD[.]  |rbp|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 2812 block B117 null  <||@
  Comment 2812 1228 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2812 1230 r10|DWORD = MOVE input: int[-224787|0xfffffffffffc91ed]  <||@
  Comment 2818 1232 JUMP ~[] destination: B117 -> B118  <||@
  Comment 2818 block B118 null  <||@
  Comment 2818 1234 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2818 1236 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2825 1238 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2832 1240 DEOPT info [bci:8]  <||@
  Comment 2832 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2837 [stack:24]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1 
     locals:  |stack:72|QWORD[.]  |- 
     stack:   |r13|DWORD          |    <||@
  Comment 2838 block B82 null  <||@
  Comment 2838 834 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2838 836 r10|DWORD = MOVE input: int[-164123|0xfffffffffffd7ee5]  <||@
  Comment 2844 840 JUMP ~[] destination: B82 -> B83  <||@
  Comment 2844 block B83 null  <||@
  Comment 2844 842 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2844 838 stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2849 844 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2856 846 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2863 848 DEOPT info [bci:197, 5]  <||@
  Comment 2863 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2868 [rbx:0, stack:24]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197, duringCall: false, rethrow: false]
              |0                  |1             |2          |3  |4 
     locals:  |stack:72|QWORD[.]  |rbx|QWORD[.]  |rdx|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:72|QWORD[.]  |-   <||@
  Comment 2869 block B55 null  <||@
  Comment 2869 604 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2869 606 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@550168632]  <||@
  Comment 2869 {Object[d.a@550168632]}  <||@
  Comment 2879 608 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2882 610 r10|DWORD = MOVE input: int[-168987|0xfffffffffffd6be5]  <||@
  Comment 2888 614 JUMP ~[] destination: B55 -> B62  <||@
  Comment 2890 block B56 null  <||@
  Comment 2890 616 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2890 618 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@550168632]  <||@
  Comment 2890 {Object[d.a@550168632]}  <||@
  Comment 2900 620 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2903 622 r10|DWORD = MOVE input: int[-168987|0xfffffffffffd6be5]  <||@
  Comment 2909 626 JUMP ~[] destination: B56 -> B62  <||@
  Comment 2911 block B81 null  <||@
  Comment 2911 826 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2911 828 r10|DWORD = MOVE input: int[-166171|0xfffffffffffd76e5]  <||@
  Comment 2917 832 JUMP ~[] destination: B81 -> B83  <||@
  Comment 2919 block B174 null  <||@
  Comment 2919 1708 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2919 1710 r10|DWORD = MOVE input: int[-189979|0xfffffffffffd19e5]  <||@
  Comment 2925 1712 JUMP ~[] destination: B174 -> B177  <||@
  Comment 2930 block B175 null  <||@
  Comment 2930 1714 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2930 1716 r10|DWORD = MOVE input: int[-188443|0xfffffffffffd1fe5]  <||@
  Comment 2936 1718 JUMP ~[] destination: B175 -> B177  <||@
  Comment 2941 block B176 null  <||@
  Comment 2941 1720 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2941 1722 r10|DWORD = MOVE input: int[-185115|0xfffffffffffd2ce5]  <||@
  Comment 2947 1724 JUMP ~[] destination: B176 -> B177  <||@
  Comment 2952 block B170 null  <||@
  Comment 2952 1682 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2952 1684 r11|DWORD = MOVE input: int[-236059|0xfffffffffffc65e5]  <||@
  Comment 2958 1686 JUMP ~[] destination: B170 -> B172  <||@
  Comment 2963 block B5 null  <||@
  Comment 2963 80 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2963 82 MOV [r15|QWORD + 668] y: -225051 size: DWORD  <||@
  Comment 2974 84 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2981 86 DEOPT info [bci:0]  <||@
  Comment 2981 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2986 [stack:24]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1 
     locals:  |stack:72|QWORD[.]  |-   <||@
  Comment 2987 block B30 null  <||@
  Comment 2987 352 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2987 354 rax|DWORD = MOVE input: int[-156947|0xfffffffffffd9aed]  <||@
  Comment 2992 356 stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2997 358 JUMP ~[] destination: B30 -> B42  <||@
  Comment 3002 block B111 null  <||@
  Comment 3002 1160 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3002 1162 r10|DWORD = MOVE input: int[-222483|0xfffffffffffc9aed]  <||@
  Comment 3008 1164 JUMP ~[] destination: B111 -> B118  <||@
  Comment 3013 block B99 null  <||@
  Comment 3013 1002 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3013 1004 MOV [r15|QWORD + 668] y: -220699 size: DWORD  <||@
  Comment 3024 1006 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3031 1008 DEOPT info [bci:363, 5]  <||@
  Comment 3031 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3036 [rbx:0, stack:24]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:953) [bci: 363, duringCall: false, rethrow: false]
              |0                  |1             |2          |3  |4 
     locals:  |stack:72|QWORD[.]  |rbx|QWORD[.]  |r10|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:72|QWORD[.]  |-   <||@
  Comment 3037 block B171 null  <||@
  Comment 3037 1688 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3037 1690 r11|DWORD = MOVE input: int[-236571|0xfffffffffffc63e5]  <||@
  Comment 3043 1692 JUMP ~[] destination: B171 -> B172  <||@
  Comment 3048 block B41 null  <||@
  Comment 3048 470 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3048 472 rax|DWORD = MOVE input: int[-158491|0xfffffffffffd94e5]  <||@
  Comment 3053 474 stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 3058 476 JUMP ~[] destination: B41 -> B42  <||@
  Comment 3063 block B59 null  <||@
  Comment 3063 640 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3063 642 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 3073 644 r10|DWORD = MOVE input: int[-167955|0xfffffffffffd6fed]  <||@
  Comment 3079 648 JUMP ~[] destination: B59 -> B62  <||@
  Comment 3084 block B28 null  <||@
  Comment 3084 340 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3084 342 rax|DWORD = MOVE input: int[-132891|0xfffffffffffdf8e5]  <||@
  Comment 3089 344 JUMP ~[] destination: B28 -> B42  <||@
  Comment 3094 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 3094 4  <||@
  Comment 3100 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 3100 5  <||@
  HexCodeFile>>> <|@
end_nmethod
