begin_compilation
  name " HotSpotCompilation-9896[sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(ByteBuffer, CharBuffer)]"
  method "HotSpotCompilation-9896[sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(ByteBuffer, CharBuffer)]"
  date 1527005229172
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a520 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a520  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a Ljava/nio/ByteBuffer;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v536 v537 ?52 v540 v539 v538 v550 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: a# Ljava/nio/HeapCharBuffer;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v541 ?52 v542 v545 v544 v543 v551 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?4 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<UTF_8$Decoder.decodeArrayLoop(ByteBuffer, CharBuffer)>
duringCall: false
localsSize: 16
locksSize: 0
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 223
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a2 a3 - - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
v452 a520 v554 i521 v555 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 a3 - - - - - - - - - - - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v536 <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a520 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a520 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ByteBuffer.hb
nodeSourcePosition: at java.nio.ByteBuffer.array(ByteBuffer.java:993) [bci: 1]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:223) [bci: 1]
nullCheck: true
stamp: n# [B
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v536 
=== Succesors ===
next: v554 
=== Usages ===
?52 v554 v546 v547 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v536 #next: v554  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v554 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?4 
object: a520 
=== Succesors ===
next: i521 
=== Usages ===
=== Predecessor ===
a520 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?4 object: a520 #next: i521  <|@  <|@
f <@~|@floating>@ <|@
tid v544 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i521 v319 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i521 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.position
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:226) [bci: 1]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:228) [bci: 38]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v544 
=== Succesors ===
next: i522 
=== Usages ===
i33 
=== Predecessor ===
v554 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v544 #next: i522  <|@  <|@
f <@~|@floating>@ <|@
tid v543 <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i522 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i522 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CharBuffer.offset
nodeSourcePosition: at java.nio.CharBuffer.arrayOffset(CharBuffer.java:1025) [bci: 31]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:228) [bci: 34]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v543 
=== Succesors ===
next: i523 
=== Usages ===
i33 i40 i178 
=== Predecessor ===
i521 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v543 #next: i523  <|@  <|@
f <@~|@floating>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i523 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i523 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.limit
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:256) [bci: 1]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:229) [bci: 49]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v545 
=== Succesors ===
next: i524 
=== Usages ===
i40 v222 
=== Predecessor ===
i522 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v545 #next: i524  <|@  <|@
f <@~|@floating>@ <|@
tid v538 <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i524 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i524 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ByteBuffer.offset
nodeSourcePosition: at java.nio.ByteBuffer.arrayOffset(ByteBuffer.java:1025) [bci: 31]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:224) [bci: 6]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v538 
=== Succesors ===
next: i525 
=== Usages ===
i15 i22 i171 
=== Predecessor ===
i523 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v538 #next: i525  <|@  <|@
f <@~|@floating>@ <|@
tid v540 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i525 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i525 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.limit
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:256) [bci: 1]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:225) [bci: 21]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v540 
=== Succesors ===
next: i526 
=== Usages ===
i22 v197 
=== Predecessor ===
i524 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v540 #next: i526  <|@  <|@
f <@~|@floating>@ <|@
tid v539 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i526 v313 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i526 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.position
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:226) [bci: 1]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:224) [bci: 10]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v539 
=== Succesors ===
next: v495 
=== Usages ===
i15 
=== Predecessor ===
i525 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v539 #next: v495  <|@  <|@
f <@~|@floating>@ <|@
tid i40 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:229) [bci: 52]
stamp: i32
=== Inputs ===
x: i522 
y: i523 
=== Succesors ===
=== Usages ===
i42 ?52 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i522 y: i523  <|@  <|@
f <@~|@floating>@ <|@
tid i33 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:228) [bci: 41]
stamp: i32
=== Inputs ===
x: i521 
y: i522 
=== Succesors ===
=== Usages ===
i51 i42 i46 v362 j366 v370 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i521 y: i522  <|@  <|@
f <@~|@floating>@ <|@
tid i42 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:230) [bci: 66]
stamp: i32
=== Inputs ===
x: i40 
y: i33 
=== Succesors ===
=== Usages ===
i327 v151 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i40 y: i33  <|@  <|@
f <@~|@floating>@ <|@
tid i22 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:225) [bci: 24]
stamp: i32
=== Inputs ===
x: i524 
y: i525 
=== Succesors ===
=== Usages ===
v79 i41 ?52 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i524 y: i525  <|@  <|@
f <@~|@floating>@ <|@
tid i15 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:224) [bci: 13]
stamp: i32
=== Inputs ===
x: i524 
y: i526 
=== Succesors ===
=== Usages ===
i50 i41 j352 v359 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i524 y: i526  <|@  <|@
f <@~|@floating>@ <|@
tid i41 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:230) [bci: 61]
stamp: i32
=== Inputs ===
x: i22 
y: i15 
=== Succesors ===
=== Usages ===
i327 v151 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i22 y: i15  <|@  <|@
f <@~|@floating>@ <|@
tid v151 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:230) [bci: 67]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i42 
y: i41 
=== Succesors ===
=== Usages ===
i327 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i42 y: i41  <|@  <|@
f <@~|@floating>@ <|@
tid i327 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v151 
trueValue: i42 
falseValue: i41 
=== Succesors ===
=== Usages ===
i46 j353 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v151 trueValue: i42 falseValue: i41  <|@  <|@
f <@~|@floating>@ <|@
tid j353 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i327 
=== Succesors ===
=== Usages ===
j355 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i327  <|@  <|@
f <@~|@floating>@ <|@
tid j354 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j355 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j355 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j353 
y: j354 
=== Succesors ===
=== Usages ===
j356 j367 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j353 y: j354  <|@  <|@
f <@~|@floating>@ <|@
tid i46 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:230) [bci: 70]
stamp: i32
=== Inputs ===
x: i33 
y: i327 
=== Succesors ===
=== Usages ===
?52 v53 v362 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i33 y: i327  <|@  <|@
f <@~|@floating>@ <|@
tid v362 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i33 
y: i46 
=== Succesors ===
=== Usages ===
v495 v511 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i33 y: i46  <|@  <|@
f <@~|@floating>@ <|@
tid a461 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@1967428027
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@1967428027]
=== Inputs ===
=== Succesors ===
=== Usages ===
a451 a451 a451 a451 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v495 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:234) [bci: 100]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v362 
=== Succesors ===
trueSuccessor: v494 
falseSuccessor: v491 
=== Usages ===
=== Predecessor ===
i526 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v362 #trueSuccessor: v494 #falseSuccessor: v491  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v494 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:234) [bci: 100]
stamp: void
=== Inputs ===
=== Succesors ===
next: i527 
=== Usages ===
=== Predecessor ===
v495 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i527  <|@  <|@
f <@~|@floating>@ <|@
tid v546 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a520 
=== Succesors ===
=== Usages ===
i527 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a520  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i527 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:233) [bci: 83]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v546 
=== Succesors ===
next: v503 
=== Usages ===
v359 j350 
=== Predecessor ===
v494 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v546 #next: v503  <|@  <|@
f <@~|@floating>@ <|@
tid j352 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i15 
=== Succesors ===
=== Usages ===
j356 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i15  <|@  <|@
f <@~|@floating>@ <|@
tid j356 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j352 
y: j355 
=== Succesors ===
=== Usages ===
v358 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j352 y: j355  <|@  <|@
f <@~|@floating>@ <|@
tid j350 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i527 
=== Succesors ===
=== Usages ===
v358 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i527  <|@  <|@
f <@~|@floating>@ <|@
tid v358 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j356 
y: j350 
=== Succesors ===
=== Usages ===
v503 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j356 y: j350  <|@  <|@
f <@~|@floating>@ <|@
tid i460 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -73755
stableDimension: 0
stamp: i32 [-73755] ⇊00000000fffedfe5 ⇈00000000fffedfe5
stampKind: i32
value: int[-73755|0xfffffffffffedfe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i450 i450 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v503 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:234) [bci: 100]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v358 
=== Succesors ===
trueSuccessor: v502 
falseSuccessor: v499 
=== Usages ===
=== Predecessor ===
i527 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v358 #trueSuccessor: v502 #falseSuccessor: v499  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v502 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:234) [bci: 100]
stamp: void
=== Inputs ===
=== Succesors ===
next: v501 
=== Usages ===
=== Predecessor ===
v503 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v501  <|@  <|@
f <@~|@floating>@ <|@
tid v359 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i15 
y: i527 
=== Succesors ===
=== Usages ===
v501 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i15 y: i527  <|@  <|@
f <@*|@fixed>@ <|@
tid v501 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:234) [bci: 100]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v359 
=== Succesors ===
trueSuccessor: v492 
falseSuccessor: v500 
=== Usages ===
=== Predecessor ===
v502 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v359 #trueSuccessor: v492 #falseSuccessor: v500  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v492 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:234) [bci: 100]
stamp: void
=== Inputs ===
=== Succesors ===
next: v490 
=== Usages ===
=== Predecessor ===
v501 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v490  <|@  <|@
f <@*|@fixed>@ <|@
tid v490 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:234) [bci: 100]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v488 
=== Predecessor ===
v492 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v500 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:234) [bci: 100]
stamp: void
=== Inputs ===
=== Succesors ===
next: v552 
=== Usages ===
=== Predecessor ===
v501 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v552  <|@  <|@
f <@*|@fixed>@ <|@
tid v552 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:234) [bci: 100]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v446 
=== Predecessor ===
v500 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v499 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:234) [bci: 100]
stamp: void
=== Inputs ===
=== Succesors ===
next: v459 
=== Usages ===
=== Predecessor ===
v503 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v459  <|@  <|@
f <@*|@fixed>@ <|@
tid v459 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v446 
=== Predecessor ===
v499 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v491 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:234) [bci: 100]
stamp: void
=== Inputs ===
=== Succesors ===
next: v489 
=== Usages ===
=== Predecessor ===
v495 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v489  <|@  <|@
f <@*|@fixed>@ <|@
tid v489 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:234) [bci: 100]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v488 
=== Predecessor ===
v491 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B3" 
    successors "B8" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v488 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:234) [bci: 100]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v489 v490 
=== Succesors ===
next: a528 
=== Usages ===
v364 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v489 v490 #next: a528  <|@  <|@
f <@~|@floating>@ <|@
tid v541 <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
a528 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a528 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CharBuffer.hb
nodeSourcePosition: at java.nio.CharBuffer.array(CharBuffer.java:993) [bci: 1]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:227) [bci: 28]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v541 
=== Succesors ===
next: v555 
=== Usages ===
a257 v555 v548 
=== Predecessor ===
v488 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v541 #next: v555  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v555 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?4 
object: a528 
=== Succesors ===
next: v511 
=== Usages ===
=== Predecessor ===
a528 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?4 object: a528 #next: v511  <|@  <|@
f <@~|@floating>@ <|@
tid a257 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.nio.CharBuffer.array(CharBuffer.java:993) [bci: 1]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:227) [bci: 28]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a528 
=== Succesors ===
=== Usages ===
?52 v549 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a528  <|@  <|@
f <@*|@fixed>@ <|@
tid v511 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:234) [bci: 102]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v362 
=== Succesors ===
trueSuccessor: v510 
falseSuccessor: v507 
=== Usages ===
=== Predecessor ===
v555 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v362 #trueSuccessor: v510 #falseSuccessor: v507  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B12" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v510 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:234) [bci: 102]
stamp: void
=== Inputs ===
=== Succesors ===
next: i529 
=== Usages ===
=== Predecessor ===
v511 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i529  <|@  <|@
f <@~|@floating>@ <|@
tid v548 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a528 
=== Succesors ===
=== Usages ===
i529 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a528  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i529 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:234) [bci: 102]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v548 
=== Succesors ===
next: v519 
=== Usages ===
v370 j365 
=== Predecessor ===
v510 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v548 #next: v519  <|@  <|@
f <@~|@floating>@ <|@
tid j366 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i33 
=== Succesors ===
=== Usages ===
j367 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i33  <|@  <|@
f <@~|@floating>@ <|@
tid j367 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j355 
y: j366 
=== Succesors ===
=== Usages ===
v369 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j355 y: j366  <|@  <|@
f <@~|@floating>@ <|@
tid j365 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i529 
=== Succesors ===
=== Usages ===
v369 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i529  <|@  <|@
f <@~|@floating>@ <|@
tid v369 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j367 
y: j365 
=== Succesors ===
=== Usages ===
v519 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j367 y: j365  <|@  <|@
f <@~|@floating>@ <|@
tid i463 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -77339
stableDimension: 0
stamp: i32 [-77339] ⇊00000000fffed1e5 ⇈00000000fffed1e5
stampKind: i32
value: int[-77339|0xfffffffffffed1e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i450 i450 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v519 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:234) [bci: 102]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v369 
=== Succesors ===
trueSuccessor: v518 
falseSuccessor: v515 
=== Usages ===
=== Predecessor ===
i529 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v369 #trueSuccessor: v518 #falseSuccessor: v515  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:234) [bci: 102]
stamp: void
=== Inputs ===
=== Succesors ===
next: v517 
=== Usages ===
=== Predecessor ===
v519 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v517  <|@  <|@
f <@~|@floating>@ <|@
tid v370 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i33 
y: i529 
=== Succesors ===
=== Usages ===
v517 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i33 y: i529  <|@  <|@
f <@*|@fixed>@ <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:234) [bci: 102]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v370 
=== Succesors ===
trueSuccessor: v508 
falseSuccessor: v516 
=== Usages ===
=== Predecessor ===
v518 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v370 #trueSuccessor: v508 #falseSuccessor: v516  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v508 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:234) [bci: 102]
stamp: void
=== Inputs ===
=== Succesors ===
next: v506 
=== Usages ===
=== Predecessor ===
v517 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v506  <|@  <|@
f <@*|@fixed>@ <|@
tid v506 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:234) [bci: 102]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v504 
=== Predecessor ===
v508 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v516 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:234) [bci: 102]
stamp: void
=== Inputs ===
=== Succesors ===
next: v553 
=== Usages ===
=== Predecessor ===
v517 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v553  <|@  <|@
f <@*|@fixed>@ <|@
tid v553 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:234) [bci: 102]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v446 
=== Predecessor ===
v516 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v515 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:234) [bci: 102]
stamp: void
=== Inputs ===
=== Succesors ===
next: v462 
=== Usages ===
=== Predecessor ===
v519 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v462  <|@  <|@
f <@*|@fixed>@ <|@
tid v462 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v446 
=== Predecessor ===
v515 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B14" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v507 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:234) [bci: 102]
stamp: void
=== Inputs ===
=== Succesors ===
next: v505 
=== Usages ===
=== Predecessor ===
v511 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v505  <|@  <|@
f <@*|@fixed>@ <|@
tid v505 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:234) [bci: 102]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v504 
=== Predecessor ===
v507 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B10" 
    successors "B15" "B38" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v504 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:234) [bci: 102]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v505 v506 
=== Succesors ===
next: i530 
=== Usages ===
v374 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v505 v506 #next: i530  <|@  <|@
f <@~|@floating>@ <|@
tid v537 <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i530 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i530 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ByteBuffer.isReadOnly
nodeSourcePosition: at java.nio.ByteBuffer.array(ByteBuffer.java:995) [bci: 16]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:223) [bci: 1]
nullCheck: false
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
stateBefore: - 
guard: - 
address: v537 
=== Succesors ===
next: v405 
=== Usages ===
i243 
=== Predecessor ===
v504 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v537 #next: v405  <|@  <|@
f <@~|@floating>@ <|@
tid i243 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.nio.ByteBuffer.array(ByteBuffer.java:995) [bci: 16]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:223) [bci: 1]
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i530 
=== Succesors ===
=== Usages ===
v97 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i530  <|@  <|@
f <@~|@floating>@ <|@
tid i62 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:233) [bci: 84]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v63 v127 v97 v224 v199 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.ByteBuffer.array(ByteBuffer.java:995) [bci: 19]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:223) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i243 
y: i62 
=== Succesors ===
=== Usages ===
v405 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i243 y: i62  <|@  <|@
f <@~|@floating>@ <|@
tid a449 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v473 a451 a451 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.ByteBuffer.array(ByteBuffer.java:995) [bci: 19]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:223) [bci: 1]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v97 
=== Succesors ===
trueSuccessor: v402 
falseSuccessor: v404 
=== Usages ===
=== Predecessor ===
i530 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v97 #trueSuccessor: v402 #falseSuccessor: v404  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v402 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.ByteBuffer.array(ByteBuffer.java:995) [bci: 19]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:223) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: i531 
=== Usages ===
=== Predecessor ===
v405 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i531  <|@  <|@
f <@~|@floating>@ <|@
tid v542 <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i531 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i531 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CharBuffer.isReadOnly
nodeSourcePosition: at java.nio.CharBuffer.array(CharBuffer.java:995) [bci: 16]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:227) [bci: 28]
nullCheck: false
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
stateBefore: - 
guard: - 
address: v542 
=== Succesors ===
next: v409 
=== Usages ===
i261 
=== Predecessor ===
v402 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v542 #next: v409  <|@  <|@
f <@~|@floating>@ <|@
tid i261 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.nio.CharBuffer.array(CharBuffer.java:995) [bci: 16]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:227) [bci: 28]
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i531 
=== Succesors ===
=== Usages ===
v127 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i531  <|@  <|@
f <@~|@floating>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.CharBuffer.array(CharBuffer.java:995) [bci: 19]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:227) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i261 
y: i62 
=== Succesors ===
=== Usages ===
v409 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i261 y: i62  <|@  <|@
f <@*|@fixed>@ <|@
tid v409 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.CharBuffer.array(CharBuffer.java:995) [bci: 19]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:227) [bci: 28]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v127 
=== Succesors ===
trueSuccessor: v406 
falseSuccessor: v408 
=== Usages ===
=== Predecessor ===
i531 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v127 #trueSuccessor: v406 #falseSuccessor: v408  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v406 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.CharBuffer.array(CharBuffer.java:995) [bci: 19]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:227) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v48 
=== Usages ===
=== Predecessor ===
v409 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v48  <|@  <|@
f <@~|@floating>@ <|@
tid i65 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:234) [bci: 91]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i66 i67 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:233) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v49 
=== Predecessor ===
v406 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B20" 
    successors "B18" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4631999129246673565
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i50 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v49 
values: i15 i67 
=== Succesors ===
=== Usages ===
?52 i171 v79 i67 v547 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v49 values: i15 i67  <|@  <|@
f <@~|@floating>@ <|@
tid i51 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v49 
values: i33 i66 
=== Succesors ===
=== Usages ===
?52 v53 i178 i66 v549 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v49 values: i33 i66  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 48.333333333333236
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:233) [bci: 73]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v48 
=== Succesors ===
next: v60 
=== Usages ===
i50 i51 v56 v73 v413 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v48 #next: v60  <|@  <|@
f <@~|@floating>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:233) [bci: 77]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i51 
y: i46 
=== Succesors ===
=== Usages ===
v60 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i51 y: i46  <|@  <|@
f <@*|@fixed>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:233) [bci: 77]
stamp: void
trueSuccessorProbability: 0.9793103448275862
=== Inputs ===
condition: v53 
=== Succesors ===
trueSuccessor: v54 
falseSuccessor: v56 
=== Usages ===
=== Predecessor ===
v49 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v53 #trueSuccessor: v54 #falseSuccessor: v56  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4631858391758318237
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:233) [bci: 80]
stamp: void
=== Inputs ===
=== Succesors ===
next: i532 
=== Usages ===
v364 v374 
=== Predecessor ===
v60 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i532  <|@  <|@
f <@~|@floating>@ <|@
tid v364 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v488 v54 
=== Succesors ===
=== Usages ===
i532 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v488 v54  <|@  <|@
f <@~|@floating>@ <|@
tid v547 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i50 
index: a520 
=== Succesors ===
=== Usages ===
i532 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i50 index: a520  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i532 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:234) [bci: 100]
nullCheck: false
stamp: i8
=== Inputs ===
stateBefore: - 
guard: v364 
address: v547 
=== Succesors ===
next: v414 
=== Usages ===
i325 i284 
=== Predecessor ===
v54 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v364 address: v547 #next: v414  <|@  <|@
f <@~|@floating>@ <|@
tid i284 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 8
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:233) [bci: 83]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i532 
=== Succesors ===
=== Usages ===
v63 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i532  <|@  <|@
f <@~|@floating>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:233) [bci: 84]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i284 
y: i62 
=== Succesors ===
=== Usages ===
v414 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i284 y: i62  <|@  <|@
f <@*|@fixed>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:233) [bci: 84]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v63 
=== Succesors ===
trueSuccessor: v413 
falseSuccessor: v410 
=== Usages ===
=== Predecessor ===
i532 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v63 #trueSuccessor: v413 #falseSuccessor: v410  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v413 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:233) [bci: 84]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v49 
=== Succesors ===
next: v474 
=== Usages ===
=== Predecessor ===
v414 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v49 #next: v474  <|@  <|@
f <@~|@floating>@ <|@
tid i475 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -72979
stableDimension: 0
stamp: i32 [-72979] ⇊00000000fffee2ed ⇈00000000fffee2ed
stampKind: i32
value: int[-72979|0xfffffffffffee2ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i471 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v474 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v468 
=== Predecessor ===
v413 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B17" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4631858391758318237
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v410 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:233) [bci: 84]
stamp: void
=== Inputs ===
=== Succesors ===
next: v309 
=== Usages ===
=== Predecessor ===
v414 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v309  <|@  <|@
f <@~|@floating>@ <|@
tid v374 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v504 v54 
=== Succesors ===
=== Usages ===
v309 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v504 v54  <|@  <|@
f <@~|@floating>@ <|@
tid v549 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a257 
index: i51 
=== Succesors ===
=== Usages ===
v309 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a257 index: i51  <|@  <|@
f <@~|@floating>@ <|@
tid i325 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 8
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:234) [bci: 101]
resultBits: 16
stamp: i16 [-128 - 127]
=== Inputs ===
value: i532 
=== Succesors ===
=== Usages ===
v309 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i532  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v309 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:234) [bci: 102]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v374 
address: v549 
value: i325 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v73 
=== Usages ===
=== Predecessor ===
v410 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v374 address: v549 value: i325 stateAfter: - lastLocationAccess: - #next: v73  <|@  <|@
f <@~|@floating>@ <|@
tid i66 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:234) [bci: 91]
stamp: i32
=== Inputs ===
x: i51 
y: i65 
=== Succesors ===
=== Usages ===
i51 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i51 y: i65  <|@  <|@
f <@~|@floating>@ <|@
tid i67 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:234) [bci: 97]
stamp: i32
=== Inputs ===
x: i50 
y: i65 
=== Succesors ===
=== Usages ===
i50 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i50 y: i65  <|@  <|@
f <@*|@fixed>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:233) [bci: 73]
stamp: void
=== Inputs ===
loopBegin: v49 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v309 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v49  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:235) [bci: 106]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v49 
=== Succesors ===
next: v418 
=== Usages ===
=== Predecessor ===
v60 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v49 #next: v418  <|@  <|@
f <@~|@floating>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:235) [bci: 110]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i50 
y: i22 
=== Succesors ===
=== Usages ===
v418 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i50 y: i22  <|@  <|@
f <@*|@fixed>@ <|@
tid v418 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:235) [bci: 110]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v79 
=== Succesors ===
trueSuccessor: v417 
falseSuccessor: v415 
=== Usages ===
=== Predecessor ===
v56 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v79 #trueSuccessor: v417 #falseSuccessor: v415  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v417 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:235) [bci: 110]
stamp: void
=== Inputs ===
=== Succesors ===
next: v469 
=== Usages ===
=== Predecessor ===
v418 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v469  <|@  <|@
f <@~|@floating>@ <|@
tid i470 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -79379
stableDimension: 0
stamp: i32 [-79379] ⇊00000000fffec9ed ⇈00000000fffec9ed
stampKind: i32
value: int[-79379|0xfffffffffffec9ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i471 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v469 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v468 
=== Predecessor ===
v417 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:235) [bci: 110]
stamp: void
=== Inputs ===
=== Succesors ===
next: v422 
=== Usages ===
=== Predecessor ===
v418 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v422  <|@  <|@
f <@~|@floating>@ <|@
tid i171 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 6]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Decoder.xflow(UTF_8.java:208) [bci: 5]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:319) [bci: 687]
stamp: i32
=== Inputs ===
x: i50 
y: i524 
=== Succesors ===
=== Usages ===
v205 v197 v199 v313 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i50 y: i524  <|@  <|@
f <@~|@floating>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Decoder.xflow(UTF_8.java:208) [bci: 5]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:319) [bci: 687]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i525 
y: i171 
=== Succesors ===
=== Usages ===
v422 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i525 y: i171  <|@  <|@
f <@*|@fixed>@ <|@
tid v422 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Decoder.xflow(UTF_8.java:208) [bci: 5]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:319) [bci: 687]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v197 
=== Succesors ===
trueSuccessor: v421 
falseSuccessor: v419 
=== Usages ===
=== Predecessor ===
v415 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v197 #trueSuccessor: v421 #falseSuccessor: v419  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v421 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Decoder.xflow(UTF_8.java:208) [bci: 5]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:319) [bci: 687]
stamp: void
=== Inputs ===
=== Succesors ===
next: v476 
=== Usages ===
=== Predecessor ===
v422 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v476  <|@  <|@
f <@~|@floating>@ <|@
tid i477 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -79635
stableDimension: 0
stamp: i32 [-79635] ⇊00000000fffec8ed ⇈00000000fffec8ed
stampKind: i32
value: int[-79635|0xfffffffffffec8ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i471 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v476 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v468 
=== Predecessor ===
v421 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Decoder.xflow(UTF_8.java:208) [bci: 5]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:319) [bci: 687]
stamp: void
=== Inputs ===
=== Succesors ===
next: v426 
=== Usages ===
=== Predecessor ===
v422 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v426  <|@  <|@
f <@~|@floating>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Decoder.xflow(UTF_8.java:208) [bci: 5]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:319) [bci: 687]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i171 
y: i62 
=== Succesors ===
=== Usages ===
v426 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i171 y: i62  <|@  <|@
f <@*|@fixed>@ <|@
tid v426 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Decoder.xflow(UTF_8.java:208) [bci: 5]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:319) [bci: 687]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v199 
=== Succesors ===
trueSuccessor: v425 
falseSuccessor: v423 
=== Usages ===
=== Predecessor ===
v419 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v199 #trueSuccessor: v425 #falseSuccessor: v423  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v425 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Decoder.xflow(UTF_8.java:208) [bci: 5]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:319) [bci: 687]
stamp: void
=== Inputs ===
=== Succesors ===
next: v478 
=== Usages ===
=== Predecessor ===
v426 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v478  <|@  <|@
f <@~|@floating>@ <|@
tid i479 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -79891
stableDimension: 0
stamp: i32 [-79891] ⇊00000000fffec7ed ⇈00000000fffec7ed
stampKind: i32
value: int[-79891|0xfffffffffffec7ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i471 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v478 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v468 
=== Predecessor ===
v425 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Decoder.xflow(UTF_8.java:208) [bci: 5]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:319) [bci: 687]
stamp: void
=== Inputs ===
=== Succesors ===
next: i533 
=== Usages ===
=== Predecessor ===
v426 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i533  <|@  <|@
f <@~|@floating>@ <|@
tid v550 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i533 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i533 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.mark
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 26]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Decoder.xflow(UTF_8.java:208) [bci: 5]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:319) [bci: 687]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v550 
=== Succesors ===
next: v430 
=== Usages ===
v205 
=== Predecessor ===
v423 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v550 #next: v430  <|@  <|@
f <@~|@floating>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Decoder.xflow(UTF_8.java:208) [bci: 5]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:319) [bci: 687]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i171 
y: i533 
=== Succesors ===
=== Usages ===
v430 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i171 y: i533  <|@  <|@
f <@*|@fixed>@ <|@
tid v430 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Decoder.xflow(UTF_8.java:208) [bci: 5]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:319) [bci: 687]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v205 
=== Succesors ===
trueSuccessor: v429 
falseSuccessor: v427 
=== Usages ===
=== Predecessor ===
i533 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v205 #trueSuccessor: v429 #falseSuccessor: v427  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v429 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Decoder.xflow(UTF_8.java:208) [bci: 5]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:319) [bci: 687]
stamp: void
=== Inputs ===
=== Succesors ===
next: v480 
=== Usages ===
=== Predecessor ===
v430 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v480  <|@  <|@
f <@~|@floating>@ <|@
tid i481 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -80915
stableDimension: 0
stamp: i32 [-80915] ⇊00000000fffec3ed ⇈00000000fffec3ed
stampKind: i32
value: int[-80915|0xfffffffffffec3ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i471 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v480 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v468 
=== Predecessor ===
v429 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Decoder.xflow(UTF_8.java:208) [bci: 5]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:319) [bci: 687]
stamp: void
=== Inputs ===
=== Succesors ===
next: v434 
=== Usages ===
=== Predecessor ===
v430 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v434  <|@  <|@
f <@~|@floating>@ <|@
tid i178 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 17]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Decoder.xflow(UTF_8.java:208) [bci: 5]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:319) [bci: 687]
stamp: i32
=== Inputs ===
x: i51 
y: i522 
=== Succesors ===
=== Usages ===
v230 v222 v224 v319 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i51 y: i522  <|@  <|@
f <@~|@floating>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Decoder.xflow(UTF_8.java:208) [bci: 5]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:319) [bci: 687]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i523 
y: i178 
=== Succesors ===
=== Usages ===
v434 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i523 y: i178  <|@  <|@
f <@*|@fixed>@ <|@
tid v434 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Decoder.xflow(UTF_8.java:208) [bci: 5]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:319) [bci: 687]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v222 
=== Succesors ===
trueSuccessor: v433 
falseSuccessor: v431 
=== Usages ===
=== Predecessor ===
v427 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v222 #trueSuccessor: v433 #falseSuccessor: v431  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v433 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Decoder.xflow(UTF_8.java:208) [bci: 5]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:319) [bci: 687]
stamp: void
=== Inputs ===
=== Succesors ===
next: v482 
=== Usages ===
=== Predecessor ===
v434 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v482  <|@  <|@
f <@~|@floating>@ <|@
tid i483 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -81171
stableDimension: 0
stamp: i32 [-81171] ⇊00000000fffec2ed ⇈00000000fffec2ed
stampKind: i32
value: int[-81171|0xfffffffffffec2ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i471 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v482 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v468 
=== Predecessor ===
v433 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v431 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Decoder.xflow(UTF_8.java:208) [bci: 5]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:319) [bci: 687]
stamp: void
=== Inputs ===
=== Succesors ===
next: v438 
=== Usages ===
=== Predecessor ===
v434 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v438  <|@  <|@
f <@~|@floating>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Decoder.xflow(UTF_8.java:208) [bci: 5]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:319) [bci: 687]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i178 
y: i62 
=== Succesors ===
=== Usages ===
v438 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i178 y: i62  <|@  <|@
f <@*|@fixed>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Decoder.xflow(UTF_8.java:208) [bci: 5]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:319) [bci: 687]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v224 
=== Succesors ===
trueSuccessor: v437 
falseSuccessor: v435 
=== Usages ===
=== Predecessor ===
v431 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v224 #trueSuccessor: v437 #falseSuccessor: v435  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v437 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Decoder.xflow(UTF_8.java:208) [bci: 5]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:319) [bci: 687]
stamp: void
=== Inputs ===
=== Succesors ===
next: v484 
=== Usages ===
=== Predecessor ===
v438 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v484  <|@  <|@
f <@~|@floating>@ <|@
tid i485 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -81427
stableDimension: 0
stamp: i32 [-81427] ⇊00000000fffec1ed ⇈00000000fffec1ed
stampKind: i32
value: int[-81427|0xfffffffffffec1ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i471 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v484 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v468 
=== Predecessor ===
v437 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B36" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Decoder.xflow(UTF_8.java:208) [bci: 5]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:319) [bci: 687]
stamp: void
=== Inputs ===
=== Succesors ===
next: i534 
=== Usages ===
=== Predecessor ===
v438 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i534  <|@  <|@
f <@~|@floating>@ <|@
tid v551 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i534 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i534 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.mark
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 26]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Decoder.xflow(UTF_8.java:208) [bci: 5]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:319) [bci: 687]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v551 
=== Succesors ===
next: v442 
=== Usages ===
v230 
=== Predecessor ===
v435 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v551 #next: v442  <|@  <|@
f <@~|@floating>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Decoder.xflow(UTF_8.java:208) [bci: 5]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:319) [bci: 687]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i178 
y: i534 
=== Succesors ===
=== Usages ===
v442 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i178 y: i534  <|@  <|@
f <@*|@fixed>@ <|@
tid v442 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Decoder.xflow(UTF_8.java:208) [bci: 5]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:319) [bci: 687]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v230 
=== Succesors ===
trueSuccessor: v441 
falseSuccessor: v439 
=== Usages ===
=== Predecessor ===
i534 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v230 #trueSuccessor: v441 #falseSuccessor: v439  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v441 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Decoder.xflow(UTF_8.java:208) [bci: 5]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:319) [bci: 687]
stamp: void
=== Inputs ===
=== Succesors ===
next: v486 
=== Usages ===
=== Predecessor ===
v442 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v486  <|@  <|@
f <@~|@floating>@ <|@
tid i487 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -82451
stableDimension: 0
stamp: i32 [-82451] ⇊00000000fffebded ⇈00000000fffebded
stampKind: i32
value: int[-82451|0xfffffffffffebded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i471 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v486 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v468 
=== Predecessor ===
v441 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B22" "B19" "B24" "B26" "B28" "B30" "B32" "B34" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i471 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-82451 - -72979] ⇊00000000fffe80ed ⇈00000000fffeffed
valueDescription: i32
=== Inputs ===
merge: v468 
values: i470 i475 i477 i479 i481 i483 i485 i487 
=== Succesors ===
=== Usages ===
v473 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v468 values: i470 i475 i477 i479 i481 i483 i485 i487  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v468 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v469 v474 v476 v478 v480 v482 v484 v486 
=== Succesors ===
next: v473 
=== Usages ===
i471 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v469 v474 v476 v478 v480 v482 v484 v486 #next: v473  <|@  <|@
tid ?52 <|@
d <@d|@=== Debug Properties ===
bci: 73
code: ResolvedJavaMethodBytecode<UTF_8$Decoder.decodeArrayLoop(ByteBuffer, CharBuffer)>
duringCall: false
localsSize: 16
locksSize: 0
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 233
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a2 a3 a520 i50 i22 a257 i51 i40 i46 - - - - - - 
=== Succesors ===
=== Usages ===
v473 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 a3 a520 i50 i22 a257 i51 i40 i46 - - - - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v473 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?52 
actionAndReason: i471 
speculation: a449 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v468 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?52 actionAndReason: i471 speculation: a449  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v439 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Decoder.xflow(UTF_8.java:208) [bci: 5]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:319) [bci: 687]
stamp: void
=== Inputs ===
=== Succesors ===
next: v313 
=== Usages ===
=== Predecessor ===
v442 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v313  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v313 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Buffer.position
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:245) [bci: 22]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Decoder.xflow(UTF_8.java:208) [bci: 5]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:319) [bci: 687]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v539 
value: i171 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v319 
=== Usages ===
=== Predecessor ===
v439 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v539 value: i171 stateAfter: - lastLocationAccess: - #next: v319  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v319 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Buffer.position
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:245) [bci: 22]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Decoder.xflow(UTF_8.java:208) [bci: 5]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:319) [bci: 687]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v544 
value: i178 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v89 
=== Usages ===
=== Predecessor ===
v313 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v544 value: i178 stateAfter: - lastLocationAccess: - #next: v89  <|@  <|@
f <@~|@floating>@ <|@
tid a165 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.xflow(UTF_8.java:209) [bci: 21]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:319) [bci: 687]
rawvalue: CoderResult@1617107905
stableDimension: 0
stamp: a!# Ljava/nio/charset/CoderResult;
stampKind: a -
value: Object[CoderResult@1617107905]
=== Inputs ===
=== Succesors ===
=== Usages ===
v89 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:319) [bci: 690]
stamp: void
=== Inputs ===
result: a165 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v319 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a165 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v408 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.CharBuffer.array(CharBuffer.java:995) [bci: 19]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:227) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v466 
=== Usages ===
=== Predecessor ===
v409 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v466  <|@  <|@
f <@~|@floating>@ <|@
tid i467 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -67091
stableDimension: 0
stamp: i32 [-67091] ⇊00000000fffef9ed ⇈00000000fffef9ed
stampKind: i32
value: int[-67091|0xfffffffffffef9ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i450 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v466 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v446 
=== Predecessor ===
v408 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v404 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.ByteBuffer.array(ByteBuffer.java:995) [bci: 19]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:223) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v464 
=== Usages ===
=== Predecessor ===
v405 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v464  <|@  <|@
f <@~|@floating>@ <|@
tid i465 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -62483
stableDimension: 0
stamp: i32 [-62483] ⇊00000000ffff0bed ⇈00000000ffff0bed
stampKind: i32
value: int[-62483|0xffffffffffff0bed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i450 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v464 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v446 
=== Predecessor ===
v404 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B5" "B12" "B38" "B37" "B4" "B11" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i450 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-77339 - -59915] ⇊00000000fffe00e5 ⇈00000000fffffffd
valueDescription: i32
=== Inputs ===
merge: v446 
values: i460 i463 i465 i467 i460 i463 
=== Succesors ===
=== Usages ===
v452 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v446 values: i460 i463 i465 i467 i460 i463  <|@  <|@
f <@~|@floating>@ <|@
tid a451 <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/k/d$a;
valueDescription: a -
=== Inputs ===
merge: v446 
values: a461 a461 a449 a449 a461 a461 
=== Succesors ===
=== Usages ===
v452 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v446 values: a461 a461 a449 a449 a461 a461  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v446 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v459 v462 v464 v466 v552 v553 
=== Succesors ===
next: v452 
=== Usages ===
i450 a451 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v459 v462 v464 v466 v552 v553 #next: v452  <|@  <|@
f <@*|@fixed>@ <|@
tid v452 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?4 
actionAndReason: i450 
speculation: a451 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v446 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?4 actionAndReason: i450 speculation: a451  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a520 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a520  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a Ljava/nio/ByteBuffer;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v536 v537 ?52 v540 v539 v538 v550 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a3 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: a# Ljava/nio/HeapCharBuffer;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v541 ?52 v542 v545 v544 v543 v551 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?4 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<UTF_8$Decoder.decodeArrayLoop(ByteBuffer, CharBuffer)>
duringCall: false
localsSize: 16
locksSize: 0
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 223
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a2 a3 - - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
v452 a520 v554 i521 v555 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 a3 - - - - - - - - - - - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v536 <|@
result [v0|QWORD[.] + 44] <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a520 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a520 <|@
result v2|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ByteBuffer.hb
nodeSourcePosition: at java.nio.ByteBuffer.array(ByteBuffer.java:993) [bci: 1]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:223) [bci: 1]
nullCheck: true
stamp: n# [B
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v536 
=== Succesors ===
next: v554 
=== Usages ===
?52 v554 v546 v547 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v536 #next: v554  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v554 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?4 
object: a520 
=== Succesors ===
next: i521 
=== Usages ===
=== Predecessor ===
a520 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?4 object: a520 #next: i521  <|@  <|@
f <@~|@floating>@ <|@
tid v544 <|@
result [v1|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i521 v319 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i521 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.position
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:226) [bci: 1]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:228) [bci: 38]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v544 
=== Succesors ===
next: i522 
=== Usages ===
i33 
=== Predecessor ===
v554 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v544 #next: i522  <|@  <|@
f <@~|@floating>@ <|@
tid v543 <|@
result [v1|QWORD[.] + 36] <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i522 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i522 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CharBuffer.offset
nodeSourcePosition: at java.nio.CharBuffer.arrayOffset(CharBuffer.java:1025) [bci: 31]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:228) [bci: 34]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v543 
=== Succesors ===
next: i523 
=== Usages ===
i33 i40 i178 
=== Predecessor ===
i521 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v543 #next: i523  <|@  <|@
f <@~|@floating>@ <|@
tid v545 <|@
result [v1|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i523 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i523 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.limit
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:256) [bci: 1]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:229) [bci: 49]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v545 
=== Succesors ===
next: i524 
=== Usages ===
i40 v222 
=== Predecessor ===
i522 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v545 #next: i524  <|@  <|@
f <@~|@floating>@ <|@
tid v538 <|@
result [v0|QWORD[.] + 36] <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i524 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i524 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ByteBuffer.offset
nodeSourcePosition: at java.nio.ByteBuffer.arrayOffset(ByteBuffer.java:1025) [bci: 31]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:224) [bci: 6]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v538 
=== Succesors ===
next: i525 
=== Usages ===
i15 i22 i171 
=== Predecessor ===
i523 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v538 #next: i525  <|@  <|@
f <@~|@floating>@ <|@
tid v540 <|@
result [v0|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i525 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i525 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.limit
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:256) [bci: 1]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:225) [bci: 21]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v540 
=== Succesors ===
next: i526 
=== Usages ===
i22 v197 
=== Predecessor ===
i524 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v540 #next: i526  <|@  <|@
f <@~|@floating>@ <|@
tid v539 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i526 v313 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i526 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.position
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:226) [bci: 1]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:224) [bci: 10]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v539 
=== Succesors ===
next: v495 
=== Usages ===
i15 
=== Predecessor ===
i525 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v539 #next: v495  <|@  <|@
f <@~|@floating>@ <|@
tid i40 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:229) [bci: 52]
stamp: i32
=== Inputs ===
x: i522 
y: i523 
=== Succesors ===
=== Usages ===
i42 ?52 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i522 y: i523  <|@  <|@
f <@~|@floating>@ <|@
tid i33 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:228) [bci: 41]
stamp: i32
=== Inputs ===
x: i521 
y: i522 
=== Succesors ===
=== Usages ===
i51 i42 i46 v362 j366 v370 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i521 y: i522  <|@  <|@
f <@~|@floating>@ <|@
tid i42 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:230) [bci: 66]
stamp: i32
=== Inputs ===
x: i40 
y: i33 
=== Succesors ===
=== Usages ===
i327 v151 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i40 y: i33  <|@  <|@
f <@~|@floating>@ <|@
tid i22 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:225) [bci: 24]
stamp: i32
=== Inputs ===
x: i524 
y: i525 
=== Succesors ===
=== Usages ===
v79 i41 ?52 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i524 y: i525  <|@  <|@
f <@~|@floating>@ <|@
tid i15 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:224) [bci: 13]
stamp: i32
=== Inputs ===
x: i524 
y: i526 
=== Succesors ===
=== Usages ===
i50 i41 j352 v359 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i524 y: i526  <|@  <|@
f <@~|@floating>@ <|@
tid i41 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:230) [bci: 61]
stamp: i32
=== Inputs ===
x: i22 
y: i15 
=== Succesors ===
=== Usages ===
i327 v151 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i22 y: i15  <|@  <|@
f <@~|@floating>@ <|@
tid v151 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:230) [bci: 67]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i42 
y: i41 
=== Succesors ===
=== Usages ===
i327 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i42 y: i41  <|@  <|@
f <@~|@floating>@ <|@
tid i327 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v151 
trueValue: i42 
falseValue: i41 
=== Succesors ===
=== Usages ===
i46 j353 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v151 trueValue: i42 falseValue: i41  <|@  <|@
f <@~|@floating>@ <|@
tid j353 <|@
result v15|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i327 
=== Succesors ===
=== Usages ===
j355 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i327  <|@  <|@
f <@~|@floating>@ <|@
tid j354 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j355 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j355 <|@
result v16|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j353 
y: j354 
=== Succesors ===
=== Usages ===
j356 j367 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j353 y: j354  <|@  <|@
f <@~|@floating>@ <|@
tid i46 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:230) [bci: 70]
stamp: i32
=== Inputs ===
x: i33 
y: i327 
=== Succesors ===
=== Usages ===
?52 v53 v362 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i33 y: i327  <|@  <|@
f <@~|@floating>@ <|@
tid v362 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i33 
y: i46 
=== Succesors ===
=== Usages ===
v495 v511 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i33 y: i46  <|@  <|@
f <@~|@floating>@ <|@
tid a461 <|@
result v18|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@1967428027
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@1967428027]
=== Inputs ===
=== Succesors ===
=== Usages ===
a451 a451 a451 a451 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v495 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:234) [bci: 100]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v362 
=== Succesors ===
trueSuccessor: v494 
falseSuccessor: v491 
=== Usages ===
=== Predecessor ===
i526 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v362 #trueSuccessor: v494 #falseSuccessor: v491  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6ec9c1f9 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:223) [bci: 0]
locals: - v0|QWORD[.] v1|QWORD[.] - - - - - - - - - - - - - 
>@ <|@ instruction v2|DWORD[.] = MOV [v0|QWORD[.] + 44] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:223) [bci: 0]
locals: - v0|QWORD[.] v1|QWORD[.] - - - - - - - - - - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v2|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:223) [bci: 0]
locals: - v0|QWORD[.] v1|QWORD[.] - - - - - - - - - - - - - 
>@ <|@ instruction v3|DWORD = MOV [v1|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV [v1|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV [v1|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOV [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = ADD (x: v4|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = ADD (x: v3|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = SUB (x: v8|DWORD, ~y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = ADD (x: v7|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = ADD (x: v6|DWORD, ~y: [v0|QWORD[.] + 24]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = SUB (x: v11|DWORD, ~y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v13|DWORD, y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = CMOVE (falseValue: v13|DWORD, ~trueValue: v10|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOVSXD v14|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = DEC v15|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = ADD (x: v9|DWORD, y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1967428027] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v17|DWORD, y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v494 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:234) [bci: 100]
stamp: void
=== Inputs ===
=== Succesors ===
next: i527 
=== Usages ===
=== Predecessor ===
v495 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i527  <|@  <|@
f <@~|@floating>@ <|@
tid v546 <|@
result [v2|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a520 
=== Succesors ===
=== Usages ===
i527 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a520  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i527 <|@
result v19|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:233) [bci: 83]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v546 
=== Succesors ===
next: v503 
=== Usages ===
v359 j350 
=== Predecessor ===
v494 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v546 #next: v503  <|@  <|@
f <@~|@floating>@ <|@
tid j352 <|@
result v20|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i15 
=== Succesors ===
=== Usages ===
j356 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i15  <|@  <|@
f <@~|@floating>@ <|@
tid j356 <|@
result v21|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j352 
y: j355 
=== Succesors ===
=== Usages ===
v358 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j352 y: j355  <|@  <|@
f <@~|@floating>@ <|@
tid j350 <|@
result v22|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i527 
=== Succesors ===
=== Usages ===
v358 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i527  <|@  <|@
f <@~|@floating>@ <|@
tid v358 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j356 
y: j350 
=== Succesors ===
=== Usages ===
v503 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j356 y: j350  <|@  <|@
f <@~|@floating>@ <|@
tid i460 <|@
result int[-73755|0xfffffffffffedfe5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -73755
stableDimension: 0
stamp: i32 [-73755] ⇊00000000fffedfe5 ⇈00000000fffedfe5
stampKind: i32
value: int[-73755|0xfffffffffffedfe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i450 i450 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v503 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:234) [bci: 100]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v358 
=== Succesors ===
trueSuccessor: v502 
falseSuccessor: v499 
=== Usages ===
=== Predecessor ===
i527 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v358 #trueSuccessor: v502 #falseSuccessor: v499  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = MOV [v2|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOVSXD v12|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = ADD (x: v20|QWORD, y: v16|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOV v19|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v22|QWORD, y: v21|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v502 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:234) [bci: 100]
stamp: void
=== Inputs ===
=== Succesors ===
next: v501 
=== Usages ===
=== Predecessor ===
v503 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v501  <|@  <|@
f <@~|@floating>@ <|@
tid v359 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i15 
y: i527 
=== Succesors ===
=== Usages ===
v501 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i15 y: i527  <|@  <|@
f <@*|@fixed>@ <|@
tid v501 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:234) [bci: 100]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v359 
=== Succesors ===
trueSuccessor: v492 
falseSuccessor: v500 
=== Usages ===
=== Predecessor ===
v502 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v359 #trueSuccessor: v492 #falseSuccessor: v500  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v19|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v492 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:234) [bci: 100]
stamp: void
=== Inputs ===
=== Succesors ===
next: v490 
=== Usages ===
=== Predecessor ===
v501 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v490  <|@  <|@
f <@*|@fixed>@ <|@
tid v490 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:234) [bci: 100]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v488 
=== Predecessor ===
v492 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v500 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:234) [bci: 100]
stamp: void
=== Inputs ===
=== Succesors ===
next: v552 
=== Usages ===
=== Predecessor ===
v501 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v552  <|@  <|@
f <@*|@fixed>@ <|@
tid v552 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:234) [bci: 100]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v446 
=== Predecessor ===
v500 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-73755|0xfffffffffffedfe5], v18|QWORD[.]] destination: B4 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v499 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:234) [bci: 100]
stamp: void
=== Inputs ===
=== Succesors ===
next: v459 
=== Usages ===
=== Predecessor ===
v503 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v459  <|@  <|@
f <@*|@fixed>@ <|@
tid v459 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v446 
=== Predecessor ===
v499 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-73755|0xfffffffffffedfe5], v18|QWORD[.]] destination: B5 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v491 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:234) [bci: 100]
stamp: void
=== Inputs ===
=== Succesors ===
next: v489 
=== Usages ===
=== Predecessor ===
v495 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v489  <|@  <|@
f <@*|@fixed>@ <|@
tid v489 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:234) [bci: 100]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v488 
=== Predecessor ===
v491 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B3" 
    successors "B8" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v488 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:234) [bci: 100]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v489 v490 
=== Succesors ===
next: a528 
=== Usages ===
v364 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v489 v490 #next: a528  <|@  <|@
f <@~|@floating>@ <|@
tid v541 <|@
result [v1|QWORD[.] + 44] <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
a528 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a528 <|@
result v23|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CharBuffer.hb
nodeSourcePosition: at java.nio.CharBuffer.array(CharBuffer.java:993) [bci: 1]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:227) [bci: 28]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v541 
=== Succesors ===
next: v555 
=== Usages ===
a257 v555 v548 
=== Predecessor ===
v488 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v541 #next: v555  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v555 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?4 
object: a528 
=== Succesors ===
next: v511 
=== Usages ===
=== Predecessor ===
a528 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?4 object: a528 #next: v511  <|@  <|@
f <@~|@floating>@ <|@
tid a257 <|@
result v24|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.nio.CharBuffer.array(CharBuffer.java:993) [bci: 1]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:227) [bci: 28]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a528 
=== Succesors ===
=== Usages ===
?52 v549 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a528  <|@  <|@
f <@*|@fixed>@ <|@
tid v511 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:234) [bci: 102]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v362 
=== Succesors ===
trueSuccessor: v510 
falseSuccessor: v507 
=== Usages ===
=== Predecessor ===
v555 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v362 #trueSuccessor: v510 #falseSuccessor: v507  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v23|DWORD[.] = MOV [v1|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:223) [bci: 0]
locals: - v0|QWORD[.] v1|QWORD[.] - - - - - - - - - - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v23|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.] = UNCOMPRESSPOINTER (input: v23|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@310d469b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v17|DWORD, y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B12" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v510 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:234) [bci: 102]
stamp: void
=== Inputs ===
=== Succesors ===
next: i529 
=== Usages ===
=== Predecessor ===
v511 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i529  <|@  <|@
f <@~|@floating>@ <|@
tid v548 <|@
result [v23|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a528 
=== Succesors ===
=== Usages ===
i529 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a528  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i529 <|@
result v25|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:234) [bci: 102]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v548 
=== Succesors ===
next: v519 
=== Usages ===
v370 j365 
=== Predecessor ===
v510 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v548 #next: v519  <|@  <|@
f <@~|@floating>@ <|@
tid j366 <|@
result v26|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i33 
=== Succesors ===
=== Usages ===
j367 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i33  <|@  <|@
f <@~|@floating>@ <|@
tid j367 <|@
result v27|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j355 
y: j366 
=== Succesors ===
=== Usages ===
v369 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j355 y: j366  <|@  <|@
f <@~|@floating>@ <|@
tid j365 <|@
result v28|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i529 
=== Succesors ===
=== Usages ===
v369 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i529  <|@  <|@
f <@~|@floating>@ <|@
tid v369 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j367 
y: j365 
=== Succesors ===
=== Usages ===
v519 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j367 y: j365  <|@  <|@
f <@~|@floating>@ <|@
tid i463 <|@
result int[-77339|0xfffffffffffed1e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -77339
stableDimension: 0
stamp: i32 [-77339] ⇊00000000fffed1e5 ⇈00000000fffed1e5
stampKind: i32
value: int[-77339|0xfffffffffffed1e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i450 i450 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v519 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:234) [bci: 102]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v369 
=== Succesors ===
trueSuccessor: v518 
falseSuccessor: v515 
=== Usages ===
=== Predecessor ===
i529 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v369 #trueSuccessor: v518 #falseSuccessor: v515  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = MOV [v23|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOVSXD v9|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = ADD (x: v26|QWORD, y: v16|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOV v25|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v28|QWORD, y: v27|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:234) [bci: 102]
stamp: void
=== Inputs ===
=== Succesors ===
next: v517 
=== Usages ===
=== Predecessor ===
v519 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v517  <|@  <|@
f <@~|@floating>@ <|@
tid v370 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i33 
y: i529 
=== Succesors ===
=== Usages ===
v517 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i33 y: i529  <|@  <|@
f <@*|@fixed>@ <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:234) [bci: 102]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v370 
=== Succesors ===
trueSuccessor: v508 
falseSuccessor: v516 
=== Usages ===
=== Predecessor ===
v518 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v370 #trueSuccessor: v508 #falseSuccessor: v516  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v25|DWORD, y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v508 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:234) [bci: 102]
stamp: void
=== Inputs ===
=== Succesors ===
next: v506 
=== Usages ===
=== Predecessor ===
v517 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v506  <|@  <|@
f <@*|@fixed>@ <|@
tid v506 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:234) [bci: 102]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v504 
=== Predecessor ===
v508 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B10 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v516 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:234) [bci: 102]
stamp: void
=== Inputs ===
=== Succesors ===
next: v553 
=== Usages ===
=== Predecessor ===
v517 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v553  <|@  <|@
f <@*|@fixed>@ <|@
tid v553 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:234) [bci: 102]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v446 
=== Predecessor ===
v516 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-77339|0xfffffffffffed1e5], v18|QWORD[.]] destination: B11 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v515 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:234) [bci: 102]
stamp: void
=== Inputs ===
=== Succesors ===
next: v462 
=== Usages ===
=== Predecessor ===
v519 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v462  <|@  <|@
f <@*|@fixed>@ <|@
tid v462 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v446 
=== Predecessor ===
v515 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-77339|0xfffffffffffed1e5], v18|QWORD[.]] destination: B12 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B14" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v507 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:234) [bci: 102]
stamp: void
=== Inputs ===
=== Succesors ===
next: v505 
=== Usages ===
=== Predecessor ===
v511 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v505  <|@  <|@
f <@*|@fixed>@ <|@
tid v505 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:234) [bci: 102]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v504 
=== Predecessor ===
v507 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B10" 
    successors "B15" "B38" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v504 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:234) [bci: 102]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v505 v506 
=== Succesors ===
next: i530 
=== Usages ===
v374 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v505 v506 #next: i530  <|@  <|@
f <@~|@floating>@ <|@
tid v537 <|@
result [v0|QWORD[.] + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i530 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i530 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ByteBuffer.isReadOnly
nodeSourcePosition: at java.nio.ByteBuffer.array(ByteBuffer.java:995) [bci: 16]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:223) [bci: 1]
nullCheck: false
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
stateBefore: - 
guard: - 
address: v537 
=== Succesors ===
next: v405 
=== Usages ===
i243 
=== Predecessor ===
v504 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v537 #next: v405  <|@  <|@
f <@~|@floating>@ <|@
tid i243 <|@
result v29|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.nio.ByteBuffer.array(ByteBuffer.java:995) [bci: 16]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:223) [bci: 1]
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i530 
=== Succesors ===
=== Usages ===
v97 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i530  <|@  <|@
f <@~|@floating>@ <|@
tid i62 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:233) [bci: 84]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v63 v127 v97 v224 v199 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.ByteBuffer.array(ByteBuffer.java:995) [bci: 19]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:223) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i243 
y: i62 
=== Succesors ===
=== Usages ===
v405 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i243 y: i62  <|@  <|@
f <@~|@floating>@ <|@
tid a449 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v473 a451 a451 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.ByteBuffer.array(ByteBuffer.java:995) [bci: 19]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:223) [bci: 1]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v97 
=== Succesors ===
trueSuccessor: v402 
falseSuccessor: v404 
=== Usages ===
=== Predecessor ===
i530 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v97 #trueSuccessor: v402 #falseSuccessor: v404  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOVZXB [v0|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v29|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v402 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.ByteBuffer.array(ByteBuffer.java:995) [bci: 19]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:223) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: i531 
=== Usages ===
=== Predecessor ===
v405 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i531  <|@  <|@
f <@~|@floating>@ <|@
tid v542 <|@
result [v1|QWORD[.] + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i531 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i531 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CharBuffer.isReadOnly
nodeSourcePosition: at java.nio.CharBuffer.array(CharBuffer.java:995) [bci: 16]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:227) [bci: 28]
nullCheck: false
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
stateBefore: - 
guard: - 
address: v542 
=== Succesors ===
next: v409 
=== Usages ===
i261 
=== Predecessor ===
v402 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v542 #next: v409  <|@  <|@
f <@~|@floating>@ <|@
tid i261 <|@
result v30|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.nio.CharBuffer.array(CharBuffer.java:995) [bci: 16]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:227) [bci: 28]
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i531 
=== Succesors ===
=== Usages ===
v127 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i531  <|@  <|@
f <@~|@floating>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.CharBuffer.array(CharBuffer.java:995) [bci: 19]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:227) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i261 
y: i62 
=== Succesors ===
=== Usages ===
v409 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i261 y: i62  <|@  <|@
f <@*|@fixed>@ <|@
tid v409 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.CharBuffer.array(CharBuffer.java:995) [bci: 19]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:227) [bci: 28]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v127 
=== Succesors ===
trueSuccessor: v406 
falseSuccessor: v408 
=== Usages ===
=== Predecessor ===
i531 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v127 #trueSuccessor: v406 #falseSuccessor: v408  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOVZXB [v1|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v30|DWORD, y: v30|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v406 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.CharBuffer.array(CharBuffer.java:995) [bci: 19]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:227) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v48 
=== Usages ===
=== Predecessor ===
v409 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v48  <|@  <|@
f <@~|@floating>@ <|@
tid i65 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:234) [bci: 91]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i66 i67 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:233) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v49 
=== Predecessor ===
v406 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v12|DWORD, v9|DWORD] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B20" 
    successors "B18" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4631999129246673565
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i50 <|@
result v31|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v49 
values: i15 i67 
=== Succesors ===
=== Usages ===
?52 i171 v79 i67 v547 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v49 values: i15 i67  <|@  <|@
f <@~|@floating>@ <|@
tid i51 <|@
result v32|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v49 
values: i33 i66 
=== Succesors ===
=== Usages ===
?52 v53 i178 i66 v549 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v49 values: i33 i66  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 48.333333333333236
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:233) [bci: 73]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v48 
=== Succesors ===
next: v60 
=== Usages ===
i50 i51 v56 v73 v413 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v48 #next: v60  <|@  <|@
f <@~|@floating>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:233) [bci: 77]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i51 
y: i46 
=== Succesors ===
=== Usages ===
v60 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i51 y: i46  <|@  <|@
f <@*|@fixed>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:233) [bci: 77]
stamp: void
trueSuccessorProbability: 0.9793103448275862
=== Inputs ===
condition: v53 
=== Succesors ===
trueSuccessor: v54 
falseSuccessor: v56 
=== Usages ===
=== Predecessor ===
v49 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v53 #trueSuccessor: v54 #falseSuccessor: v56  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v31|DWORD, v32|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v17|DWORD, y: v32|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9793103448275862 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4631858391758318237
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:233) [bci: 80]
stamp: void
=== Inputs ===
=== Succesors ===
next: i532 
=== Usages ===
v364 v374 
=== Predecessor ===
v60 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i532  <|@  <|@
f <@~|@floating>@ <|@
tid v364 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v488 v54 
=== Succesors ===
=== Usages ===
i532 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v488 v54  <|@  <|@
f <@~|@floating>@ <|@
tid v547 <|@
result [v31|DWORD + v2|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i50 
index: a520 
=== Succesors ===
=== Usages ===
i532 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i50 index: a520  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i532 <|@
result v33|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:234) [bci: 100]
nullCheck: false
stamp: i8
=== Inputs ===
stateBefore: - 
guard: v364 
address: v547 
=== Succesors ===
next: v414 
=== Usages ===
i325 i284 
=== Predecessor ===
v54 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v364 address: v547 #next: v414  <|@  <|@
f <@~|@floating>@ <|@
tid i284 <|@
result v34|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 8
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:233) [bci: 83]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i532 
=== Succesors ===
=== Usages ===
v63 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i532  <|@  <|@
f <@~|@floating>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:233) [bci: 84]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i284 
y: i62 
=== Succesors ===
=== Usages ===
v414 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i284 y: i62  <|@  <|@
f <@*|@fixed>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:233) [bci: 84]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v63 
=== Succesors ===
trueSuccessor: v413 
falseSuccessor: v410 
=== Usages ===
=== Predecessor ===
i532 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v63 #trueSuccessor: v413 #falseSuccessor: v410  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOVSXB [v31|DWORD + v2|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = MOVSXB v33|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v34|DWORD, y: v34|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v413 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:233) [bci: 84]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v49 
=== Succesors ===
next: v474 
=== Usages ===
=== Predecessor ===
v414 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v49 #next: v474  <|@  <|@
f <@~|@floating>@ <|@
tid i475 <|@
result int[-72979|0xfffffffffffee2ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -72979
stableDimension: 0
stamp: i32 [-72979] ⇊00000000fffee2ed ⇈00000000fffee2ed
stampKind: i32
value: int[-72979|0xfffffffffffee2ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i471 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v474 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v468 
=== Predecessor ===
v413 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-72979|0xfffffffffffee2ed]] destination: B19 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B17" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4631858391758318237
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v410 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:233) [bci: 84]
stamp: void
=== Inputs ===
=== Succesors ===
next: v309 
=== Usages ===
=== Predecessor ===
v414 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v309  <|@  <|@
f <@~|@floating>@ <|@
tid v374 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v504 v54 
=== Succesors ===
=== Usages ===
v309 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v504 v54  <|@  <|@
f <@~|@floating>@ <|@
tid v549 <|@
result [v24|QWORD[.] + v32|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a257 
index: i51 
=== Succesors ===
=== Usages ===
v309 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a257 index: i51  <|@  <|@
f <@~|@floating>@ <|@
tid i325 <|@
result v35|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 8
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:234) [bci: 101]
resultBits: 16
stamp: i16 [-128 - 127]
=== Inputs ===
value: i532 
=== Succesors ===
=== Usages ===
v309 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i532  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v309 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:234) [bci: 102]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v374 
address: v549 
value: i325 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v73 
=== Usages ===
=== Predecessor ===
v410 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v374 address: v549 value: i325 stateAfter: - lastLocationAccess: - #next: v73  <|@  <|@
f <@~|@floating>@ <|@
tid i66 <|@
result v36|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:234) [bci: 91]
stamp: i32
=== Inputs ===
x: i51 
y: i65 
=== Succesors ===
=== Usages ===
i51 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i51 y: i65  <|@  <|@
f <@~|@floating>@ <|@
tid i67 <|@
result v37|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:234) [bci: 97]
stamp: i32
=== Inputs ===
x: i50 
y: i65 
=== Succesors ===
=== Usages ===
i50 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i50 y: i65  <|@  <|@
f <@*|@fixed>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:233) [bci: 73]
stamp: void
=== Inputs ===
loopBegin: v49 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v309 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v49  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = MOVSXB v33|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD[.] + v32|DWORD * 2 + 16], y: v35|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = INC v32|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = INC v31|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v37|DWORD, v36|DWORD] destination: B20 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:235) [bci: 106]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v49 
=== Succesors ===
next: v418 
=== Usages ===
=== Predecessor ===
v60 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v49 #next: v418  <|@  <|@
f <@~|@floating>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:235) [bci: 110]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i50 
y: i22 
=== Succesors ===
=== Usages ===
v418 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i50 y: i22  <|@  <|@
f <@*|@fixed>@ <|@
tid v418 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:235) [bci: 110]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v79 
=== Succesors ===
trueSuccessor: v417 
falseSuccessor: v415 
=== Usages ===
=== Predecessor ===
v56 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v79 #trueSuccessor: v417 #falseSuccessor: v415  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v11|DWORD, y: v31|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v417 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:235) [bci: 110]
stamp: void
=== Inputs ===
=== Succesors ===
next: v469 
=== Usages ===
=== Predecessor ===
v418 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v469  <|@  <|@
f <@~|@floating>@ <|@
tid i470 <|@
result int[-79379|0xfffffffffffec9ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -79379
stableDimension: 0
stamp: i32 [-79379] ⇊00000000fffec9ed ⇈00000000fffec9ed
stampKind: i32
value: int[-79379|0xfffffffffffec9ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i471 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v469 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v468 
=== Predecessor ===
v417 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-79379|0xfffffffffffec9ed]] destination: B22 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:235) [bci: 110]
stamp: void
=== Inputs ===
=== Succesors ===
next: v422 
=== Usages ===
=== Predecessor ===
v418 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v422  <|@  <|@
f <@~|@floating>@ <|@
tid i171 <|@
result v38|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 6]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Decoder.xflow(UTF_8.java:208) [bci: 5]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:319) [bci: 687]
stamp: i32
=== Inputs ===
x: i50 
y: i524 
=== Succesors ===
=== Usages ===
v205 v197 v199 v313 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i50 y: i524  <|@  <|@
f <@~|@floating>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Decoder.xflow(UTF_8.java:208) [bci: 5]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:319) [bci: 687]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i525 
y: i171 
=== Succesors ===
=== Usages ===
v422 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i525 y: i171  <|@  <|@
f <@*|@fixed>@ <|@
tid v422 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Decoder.xflow(UTF_8.java:208) [bci: 5]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:319) [bci: 687]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v197 
=== Succesors ===
trueSuccessor: v421 
falseSuccessor: v419 
=== Usages ===
=== Predecessor ===
v415 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v197 #trueSuccessor: v421 #falseSuccessor: v419  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = SUB (x: v31|DWORD, ~y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v38|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v421 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Decoder.xflow(UTF_8.java:208) [bci: 5]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:319) [bci: 687]
stamp: void
=== Inputs ===
=== Succesors ===
next: v476 
=== Usages ===
=== Predecessor ===
v422 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v476  <|@  <|@
f <@~|@floating>@ <|@
tid i477 <|@
result int[-79635|0xfffffffffffec8ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -79635
stableDimension: 0
stamp: i32 [-79635] ⇊00000000fffec8ed ⇈00000000fffec8ed
stampKind: i32
value: int[-79635|0xfffffffffffec8ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i471 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v476 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v468 
=== Predecessor ===
v421 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-79635|0xfffffffffffec8ed]] destination: B24 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Decoder.xflow(UTF_8.java:208) [bci: 5]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:319) [bci: 687]
stamp: void
=== Inputs ===
=== Succesors ===
next: v426 
=== Usages ===
=== Predecessor ===
v422 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v426  <|@  <|@
f <@~|@floating>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Decoder.xflow(UTF_8.java:208) [bci: 5]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:319) [bci: 687]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i171 
y: i62 
=== Succesors ===
=== Usages ===
v426 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i171 y: i62  <|@  <|@
f <@*|@fixed>@ <|@
tid v426 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Decoder.xflow(UTF_8.java:208) [bci: 5]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:319) [bci: 687]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v199 
=== Succesors ===
trueSuccessor: v425 
falseSuccessor: v423 
=== Usages ===
=== Predecessor ===
v419 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v199 #trueSuccessor: v425 #falseSuccessor: v423  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v38|DWORD, y: v38|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v425 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Decoder.xflow(UTF_8.java:208) [bci: 5]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:319) [bci: 687]
stamp: void
=== Inputs ===
=== Succesors ===
next: v478 
=== Usages ===
=== Predecessor ===
v426 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v478  <|@  <|@
f <@~|@floating>@ <|@
tid i479 <|@
result int[-79891|0xfffffffffffec7ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -79891
stableDimension: 0
stamp: i32 [-79891] ⇊00000000fffec7ed ⇈00000000fffec7ed
stampKind: i32
value: int[-79891|0xfffffffffffec7ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i471 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v478 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v468 
=== Predecessor ===
v425 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-79891|0xfffffffffffec7ed]] destination: B26 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Decoder.xflow(UTF_8.java:208) [bci: 5]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:319) [bci: 687]
stamp: void
=== Inputs ===
=== Succesors ===
next: i533 
=== Usages ===
=== Predecessor ===
v426 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i533  <|@  <|@
f <@~|@floating>@ <|@
tid v550 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i533 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i533 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.mark
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 26]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Decoder.xflow(UTF_8.java:208) [bci: 5]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:319) [bci: 687]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v550 
=== Succesors ===
next: v430 
=== Usages ===
v205 
=== Predecessor ===
v423 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v550 #next: v430  <|@  <|@
f <@~|@floating>@ <|@
tid v205 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Decoder.xflow(UTF_8.java:208) [bci: 5]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:319) [bci: 687]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i171 
y: i533 
=== Succesors ===
=== Usages ===
v430 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i171 y: i533  <|@  <|@
f <@*|@fixed>@ <|@
tid v430 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Decoder.xflow(UTF_8.java:208) [bci: 5]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:319) [bci: 687]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v205 
=== Succesors ===
trueSuccessor: v429 
falseSuccessor: v427 
=== Usages ===
=== Predecessor ===
i533 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v205 #trueSuccessor: v429 #falseSuccessor: v427  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v38|DWORD, y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v429 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Decoder.xflow(UTF_8.java:208) [bci: 5]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:319) [bci: 687]
stamp: void
=== Inputs ===
=== Succesors ===
next: v480 
=== Usages ===
=== Predecessor ===
v430 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v480  <|@  <|@
f <@~|@floating>@ <|@
tid i481 <|@
result int[-80915|0xfffffffffffec3ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -80915
stableDimension: 0
stamp: i32 [-80915] ⇊00000000fffec3ed ⇈00000000fffec3ed
stampKind: i32
value: int[-80915|0xfffffffffffec3ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i471 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v480 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v468 
=== Predecessor ===
v429 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-80915|0xfffffffffffec3ed]] destination: B28 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Decoder.xflow(UTF_8.java:208) [bci: 5]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:319) [bci: 687]
stamp: void
=== Inputs ===
=== Succesors ===
next: v434 
=== Usages ===
=== Predecessor ===
v430 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v434  <|@  <|@
f <@~|@floating>@ <|@
tid i178 <|@
result v39|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 17]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Decoder.xflow(UTF_8.java:208) [bci: 5]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:319) [bci: 687]
stamp: i32
=== Inputs ===
x: i51 
y: i522 
=== Succesors ===
=== Usages ===
v230 v222 v224 v319 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i51 y: i522  <|@  <|@
f <@~|@floating>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Decoder.xflow(UTF_8.java:208) [bci: 5]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:319) [bci: 687]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i523 
y: i178 
=== Succesors ===
=== Usages ===
v434 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i523 y: i178  <|@  <|@
f <@*|@fixed>@ <|@
tid v434 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Decoder.xflow(UTF_8.java:208) [bci: 5]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:319) [bci: 687]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v222 
=== Succesors ===
trueSuccessor: v433 
falseSuccessor: v431 
=== Usages ===
=== Predecessor ===
v427 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v222 #trueSuccessor: v433 #falseSuccessor: v431  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = SUB (x: v32|DWORD, ~y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v39|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v433 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Decoder.xflow(UTF_8.java:208) [bci: 5]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:319) [bci: 687]
stamp: void
=== Inputs ===
=== Succesors ===
next: v482 
=== Usages ===
=== Predecessor ===
v434 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v482  <|@  <|@
f <@~|@floating>@ <|@
tid i483 <|@
result int[-81171|0xfffffffffffec2ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -81171
stableDimension: 0
stamp: i32 [-81171] ⇊00000000fffec2ed ⇈00000000fffec2ed
stampKind: i32
value: int[-81171|0xfffffffffffec2ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i471 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v482 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v468 
=== Predecessor ===
v433 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-81171|0xfffffffffffec2ed]] destination: B30 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v431 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Decoder.xflow(UTF_8.java:208) [bci: 5]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:319) [bci: 687]
stamp: void
=== Inputs ===
=== Succesors ===
next: v438 
=== Usages ===
=== Predecessor ===
v434 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v438  <|@  <|@
f <@~|@floating>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Decoder.xflow(UTF_8.java:208) [bci: 5]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:319) [bci: 687]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i178 
y: i62 
=== Succesors ===
=== Usages ===
v438 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i178 y: i62  <|@  <|@
f <@*|@fixed>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Decoder.xflow(UTF_8.java:208) [bci: 5]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:319) [bci: 687]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v224 
=== Succesors ===
trueSuccessor: v437 
falseSuccessor: v435 
=== Usages ===
=== Predecessor ===
v431 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v224 #trueSuccessor: v437 #falseSuccessor: v435  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v39|DWORD, y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v437 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Decoder.xflow(UTF_8.java:208) [bci: 5]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:319) [bci: 687]
stamp: void
=== Inputs ===
=== Succesors ===
next: v484 
=== Usages ===
=== Predecessor ===
v438 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v484  <|@  <|@
f <@~|@floating>@ <|@
tid i485 <|@
result int[-81427|0xfffffffffffec1ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -81427
stableDimension: 0
stamp: i32 [-81427] ⇊00000000fffec1ed ⇈00000000fffec1ed
stampKind: i32
value: int[-81427|0xfffffffffffec1ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i471 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v484 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v468 
=== Predecessor ===
v437 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-81427|0xfffffffffffec1ed]] destination: B32 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B36" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Decoder.xflow(UTF_8.java:208) [bci: 5]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:319) [bci: 687]
stamp: void
=== Inputs ===
=== Succesors ===
next: i534 
=== Usages ===
=== Predecessor ===
v438 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i534  <|@  <|@
f <@~|@floating>@ <|@
tid v551 <|@
result [v1|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i534 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i534 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.mark
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 26]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Decoder.xflow(UTF_8.java:208) [bci: 5]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:319) [bci: 687]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v551 
=== Succesors ===
next: v442 
=== Usages ===
v230 
=== Predecessor ===
v435 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v551 #next: v442  <|@  <|@
f <@~|@floating>@ <|@
tid v230 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Decoder.xflow(UTF_8.java:208) [bci: 5]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:319) [bci: 687]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i178 
y: i534 
=== Succesors ===
=== Usages ===
v442 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i178 y: i534  <|@  <|@
f <@*|@fixed>@ <|@
tid v442 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Decoder.xflow(UTF_8.java:208) [bci: 5]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:319) [bci: 687]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v230 
=== Succesors ===
trueSuccessor: v441 
falseSuccessor: v439 
=== Usages ===
=== Predecessor ===
i534 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v230 #trueSuccessor: v441 #falseSuccessor: v439  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v39|DWORD, y: [v1|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v441 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Decoder.xflow(UTF_8.java:208) [bci: 5]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:319) [bci: 687]
stamp: void
=== Inputs ===
=== Succesors ===
next: v486 
=== Usages ===
=== Predecessor ===
v442 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v486  <|@  <|@
f <@~|@floating>@ <|@
tid i487 <|@
result int[-82451|0xfffffffffffebded] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -82451
stableDimension: 0
stamp: i32 [-82451] ⇊00000000fffebded ⇈00000000fffebded
stampKind: i32
value: int[-82451|0xfffffffffffebded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i471 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v486 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v468 
=== Predecessor ===
v441 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-82451|0xfffffffffffebded]] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B22" "B19" "B24" "B26" "B28" "B30" "B32" "B34" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i471 <|@
result v40|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-82451 - -72979] ⇊00000000fffe80ed ⇈00000000fffeffed
valueDescription: i32
=== Inputs ===
merge: v468 
values: i470 i475 i477 i479 i481 i483 i485 i487 
=== Succesors ===
=== Usages ===
v473 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v468 values: i470 i475 i477 i479 i481 i483 i485 i487  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v468 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v469 v474 v476 v478 v480 v482 v484 v486 
=== Succesors ===
next: v473 
=== Usages ===
i471 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v469 v474 v476 v478 v480 v482 v484 v486 #next: v473  <|@  <|@
tid ?52 <|@
d <@d|@=== Debug Properties ===
bci: 73
code: ResolvedJavaMethodBytecode<UTF_8$Decoder.decodeArrayLoop(ByteBuffer, CharBuffer)>
duringCall: false
localsSize: 16
locksSize: 0
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 233
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a2 a3 a520 i50 i22 a257 i51 i40 i46 - - - - - - 
=== Succesors ===
=== Usages ===
v473 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 a3 a520 i50 i22 a257 i51 i40 i46 - - - - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v473 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?52 
actionAndReason: i471 
speculation: a449 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v468 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?52 actionAndReason: i471 speculation: a449  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v40|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v40|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:233) [bci: 73]
locals: - v0|QWORD[.] v1|QWORD[.] v2|DWORD[.] v31|DWORD v11|DWORD v24|QWORD[.] v32|DWORD v8|DWORD v17|DWORD - - - - - - 
>@ <|@ instruction DEOPT info [bci:73] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v439 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Decoder.xflow(UTF_8.java:208) [bci: 5]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:319) [bci: 687]
stamp: void
=== Inputs ===
=== Succesors ===
next: v313 
=== Usages ===
=== Predecessor ===
v442 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v313  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v313 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Buffer.position
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:245) [bci: 22]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Decoder.xflow(UTF_8.java:208) [bci: 5]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:319) [bci: 687]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v539 
value: i171 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v319 
=== Usages ===
=== Predecessor ===
v439 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v539 value: i171 stateAfter: - lastLocationAccess: - #next: v319  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v319 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Buffer.position
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:245) [bci: 22]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Decoder.xflow(UTF_8.java:208) [bci: 5]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:319) [bci: 687]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v544 
value: i178 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v89 
=== Usages ===
=== Predecessor ===
v313 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v544 value: i178 stateAfter: - lastLocationAccess: - #next: v89  <|@  <|@
f <@~|@floating>@ <|@
tid a165 <|@
result v41|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.xflow(UTF_8.java:209) [bci: 21]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:319) [bci: 687]
rawvalue: CoderResult@1617107905
stableDimension: 0
stamp: a!# Ljava/nio/charset/CoderResult;
stampKind: a -
value: Object[CoderResult@1617107905]
=== Inputs ===
=== Succesors ===
=== Usages ===
v89 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:319) [bci: 690]
stamp: void
=== Inputs ===
result: a165 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v319 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a165 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v38|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + 24], y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@1617107905] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v41|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v408 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.CharBuffer.array(CharBuffer.java:995) [bci: 19]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:227) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v466 
=== Usages ===
=== Predecessor ===
v409 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v466  <|@  <|@
f <@~|@floating>@ <|@
tid i467 <|@
result int[-67091|0xfffffffffffef9ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -67091
stableDimension: 0
stamp: i32 [-67091] ⇊00000000fffef9ed ⇈00000000fffef9ed
stampKind: i32
value: int[-67091|0xfffffffffffef9ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i450 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v466 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v446 
=== Predecessor ===
v408 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-67091|0xfffffffffffef9ed], Object[null]] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v404 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.ByteBuffer.array(ByteBuffer.java:995) [bci: 19]
at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:223) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v464 
=== Usages ===
=== Predecessor ===
v405 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v464  <|@  <|@
f <@~|@floating>@ <|@
tid i465 <|@
result int[-62483|0xffffffffffff0bed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -62483
stableDimension: 0
stamp: i32 [-62483] ⇊00000000ffff0bed ⇈00000000ffff0bed
stampKind: i32
value: int[-62483|0xffffffffffff0bed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i450 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v464 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v446 
=== Predecessor ===
v404 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-62483|0xffffffffffff0bed], Object[null]] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B5" "B12" "B38" "B37" "B4" "B11" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i450 <|@
result v42|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-77339 - -59915] ⇊00000000fffe00e5 ⇈00000000fffffffd
valueDescription: i32
=== Inputs ===
merge: v446 
values: i460 i463 i465 i467 i460 i463 
=== Succesors ===
=== Usages ===
v452 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v446 values: i460 i463 i465 i467 i460 i463  <|@  <|@
f <@~|@floating>@ <|@
tid a451 <|@
result v43|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/k/d$a;
valueDescription: a -
=== Inputs ===
merge: v446 
values: a461 a461 a449 a449 a461 a461 
=== Succesors ===
=== Usages ===
v452 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v446 values: a461 a461 a449 a449 a461 a461  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v446 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v459 v462 v464 v466 v552 v553 
=== Succesors ===
next: v452 
=== Usages ===
i450 a451 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v459 v462 v464 v466 v552 v553 #next: v452  <|@  <|@
f <@*|@fixed>@ <|@
tid v452 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?4 
actionAndReason: i450 
speculation: a451 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v446 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?4 actionAndReason: i450 speculation: a451  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v42|DWORD, v43|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v42|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v43|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:223) [bci: 0]
locals: - v0|QWORD[.] v1|QWORD[.] - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6ec9c1f9 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:223) [bci: 0]
locals: - v0|QWORD[.] v1|QWORD[.] - - - - - - - - - - - - - 
>@ <|@ instruction v2|DWORD[.] = MOV [v0|QWORD[.] + 44] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:223) [bci: 0]
locals: - v0|QWORD[.] v1|QWORD[.] - - - - - - - - - - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v2|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:223) [bci: 0]
locals: - v0|QWORD[.] v1|QWORD[.] - - - - - - - - - - - - - 
>@ <|@ instruction v3|DWORD = MOV [v1|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV [v1|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV [v1|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOV [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = ADD (x: v4|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = ADD (x: v3|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = SUB (x: v8|DWORD, ~y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = ADD (x: v7|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = ADD (x: v6|DWORD, ~y: [v0|QWORD[.] + 24]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = SUB (x: v11|DWORD, ~y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v13|DWORD, y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = CMOVE (falseValue: v13|DWORD, ~trueValue: v10|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOVSXD v14|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = DEC v15|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = ADD (x: v9|DWORD, y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v17|DWORD, y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B3" 
    successors "B8" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v23|DWORD[.] = MOV [v1|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:223) [bci: 0]
locals: - v0|QWORD[.] v1|QWORD[.] - - - - - - - - - - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v23|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.] = UNCOMPRESSPOINTER (input: v23|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@310d469b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v17|DWORD, y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B14" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B10" 
    successors "B15" "B38" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOVZXB [v0|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v29|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOVZXB [v1|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v30|DWORD, y: v30|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v12|DWORD, v9|DWORD] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4631858391758318237
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOVSXB [v31|DWORD + v2|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = MOVSXB v33|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v34|DWORD, y: v34|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B17" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4631858391758318237
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = MOVSXB v33|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD[.] + v32|DWORD * 2 + 16], y: v35|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = INC v32|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = INC v31|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v37|DWORD, v36|DWORD] destination: B20 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B20" 
    successors "B18" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4631999129246673565
    begin_IR
      LIR
      nr   -1  <|@ instruction [v31|DWORD, v32|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v17|DWORD, y: v32|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9793103448275862 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v11|DWORD, y: v31|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = SUB (x: v31|DWORD, ~y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v38|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v38|DWORD, y: v38|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v38|DWORD, y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = SUB (x: v32|DWORD, ~y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v39|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v39|DWORD, y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B36" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v39|DWORD, y: [v1|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v38|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + 24], y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@1617107905] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v41|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = MOV [v2|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOVSXD v12|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = ADD (x: v20|QWORD, y: v16|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOV v19|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v22|QWORD, y: v21|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v19|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B12" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = MOV [v23|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOVSXD v9|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = ADD (x: v26|QWORD, y: v16|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOV v25|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v28|QWORD, y: v27|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v25|DWORD, y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B10 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-62483|0xffffffffffff0bed], Object[null]] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B5" "B12" "B38" "B37" "B4" "B11" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr   -1  <|@ instruction [v42|DWORD, v43|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v42|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v43|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:223) [bci: 0]
locals: - v0|QWORD[.] v1|QWORD[.] - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-79635|0xfffffffffffec8ed]] destination: B24 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B22" "B19" "B24" "B26" "B28" "B30" "B32" "B34" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      LIR
      nr   -1  <|@ instruction [v40|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v40|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:233) [bci: 73]
locals: - v0|QWORD[.] v1|QWORD[.] v2|DWORD[.] v31|DWORD v11|DWORD v24|QWORD[.] v32|DWORD v8|DWORD v17|DWORD - - - - - - 
>@ <|@ instruction DEOPT info [bci:73] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1967428027] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-73755|0xfffffffffffedfe5], v47|QWORD[.]] destination: B4 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1967428027] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-77339|0xfffffffffffed1e5], v45|QWORD[.]] destination: B11 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1967428027] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-77339|0xfffffffffffed1e5], v44|QWORD[.]] destination: B12 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1967428027] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-73755|0xfffffffffffedfe5], v46|QWORD[.]] destination: B5 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-82451|0xfffffffffffebded]] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-81171|0xfffffffffffec2ed]] destination: B30 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-80915|0xfffffffffffec3ed]] destination: B28 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-79379|0xfffffffffffec9ed]] destination: B22 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-79891|0xfffffffffffec7ed]] destination: B26 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-81427|0xfffffffffffec1ed]] destination: B32 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-72979|0xfffffffffffee2ed]] destination: B19 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-67091|0xfffffffffffef9ed], Object[null]] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokevirtual #15         // java.nio.ByteBuffer.array:()byte[]
     4: astore_3      
     5: aload_1       
     6: invokevirtual #7          // java.nio.ByteBuffer.arrayOffset:()int
     9: aload_1       
    10: invokevirtual #16         // java.nio.Buffer.position:()int
    13: iadd          
    14: istore        4
    16: aload_1       
    17: invokevirtual #7          // java.nio.ByteBuffer.arrayOffset:()int
    20: aload_1       
    21: invokevirtual #17         // java.nio.Buffer.limit:()int
    24: iadd          
    25: istore        5
    27: aload_2       
    28: invokevirtual #18         // java.nio.CharBuffer.array:()char[]
    31: astore        6
    33: aload_2       
    34: invokevirtual #19         // java.nio.CharBuffer.arrayOffset:()int
    37: aload_2       
    38: invokevirtual #20         // java.nio.Buffer.position:()int
    41: iadd          
    42: istore        7
    44: aload_2       
    45: invokevirtual #19         // java.nio.CharBuffer.arrayOffset:()int
    48: aload_2       
    49: invokevirtual #21         // java.nio.Buffer.limit:()int
    52: iadd          
    53: istore        8
    55: iload         7
    57: iload         5
    59: iload         4
    61: isub          
    62: iload         8
    64: iload         7
    66: isub          
    67: invokestatic  #22         // java.lang.Math.min:(int, int)int
    70: iadd          
    71: istore        9
    73: iload         7
    75: iload         9
    77: if_icmpge     106
    80: aload_3       
    81: iload         4
    83: baload        
    84: iflt          106
    87: aload         6
    89: iload         7
    91: iinc          
    94: aload_3       
    95: iload         4
    97: iinc          
   100: baload        
   101: i2c           
   102: castore       
   103: goto          73
   106: iload         4
   108: iload         5
   110: if_icmpge     678
   113: aload_3       
   114: iload         4
   116: baload        
   117: istore        10
   119: iload         10
   121: iflt          161
   124: iload         7
   126: iload         8
   128: if_icmplt     144
   131: aload_1       
   132: iload         4
   134: iload         5
   136: aload_2       
   137: iload         7
   139: iconst_1      
   140: invokestatic  #23         // xflow:(java.nio.Buffer, int, int, java.nio.Buffer, int, int)java.nio.charset.CoderResult
   143: areturn       
   144: aload         6
   146: iload         7
   148: iinc          
   151: iload         10
   153: i2c           
   154: castore       
   155: iinc          
   158: goto          675
   161: iload         10
   163: iconst_5      
   164: ishr          
   165: bipush        -2
   167: if_icmpne     261
   170: iload         10
   172: bipush        30
   174: iand          
   175: ifeq          261
   178: iload         5
   180: iload         4
   182: isub          
   183: iconst_2      
   184: if_icmplt     194
   187: iload         7
   189: iload         8
   191: if_icmplt     207
   194: aload_1       
   195: iload         4
   197: iload         5
   199: aload_2       
   200: iload         7
   202: iconst_2      
   203: invokestatic  #23         // xflow:(java.nio.Buffer, int, int, java.nio.Buffer, int, int)java.nio.charset.CoderResult
   206: areturn       
   207: aload_3       
   208: iload         4
   210: iconst_1      
   211: iadd          
   212: baload        
   213: istore        11
   215: iload         11
   217: invokestatic  #3          // isNotContinuation:(int)boolean
   220: ifeq          234
   223: aload_1       
   224: iload         4
   226: aload_2       
   227: iload         7
   229: iconst_1      
   230: invokestatic  #24         // malformedForLength:(java.nio.ByteBuffer, int, java.nio.CharBuffer, int, int)java.nio.charset.CoderResult
   233: areturn       
   234: aload         6
   236: iload         7
   238: iinc          
   241: iload         10
   243: bipush        6
   245: ishl          
   246: iload         11
   248: ixor          
   249: sipush        3968
   252: ixor          
   253: i2c           
   254: castore       
   255: iinc          
   258: goto          675
   261: iload         10
   263: iconst_4      
   264: ishr          
   265: bipush        -2
   267: if_icmpne     428
   270: iload         5
   272: iload         4
   274: isub          
   275: istore        11
   277: iload         11
   279: iconst_3      
   280: if_icmplt     290
   283: iload         7
   285: iload         8
   287: if_icmplt     334
   290: iload         11
   292: iconst_1      
   293: if_icmple     321
   296: iload         10
   298: aload_3       
   299: iload         4
   301: iconst_1      
   302: iadd          
   303: baload        
   304: invokestatic  #25         // isMalformed3_2:(int, int)boolean
   307: ifeq          321
   310: aload_1       
   311: iload         4
   313: aload_2       
   314: iload         7
   316: iconst_1      
   317: invokestatic  #24         // malformedForLength:(java.nio.ByteBuffer, int, java.nio.CharBuffer, int, int)java.nio.charset.CoderResult
   320: areturn       
   321: aload_1       
   322: iload         4
   324: iload         5
   326: aload_2       
   327: iload         7
   329: iconst_3      
   330: invokestatic  #23         // xflow:(java.nio.Buffer, int, int, java.nio.Buffer, int, int)java.nio.charset.CoderResult
   333: areturn       
   334: aload_3       
   335: iload         4
   337: iconst_1      
   338: iadd          
   339: baload        
   340: istore        12
   342: aload_3       
   343: iload         4
   345: iconst_2      
   346: iadd          
   347: baload        
   348: istore        13
   350: iload         10
   352: iload         12
   354: iload         13
   356: invokestatic  #26         // isMalformed3:(int, int, int)boolean
   359: ifeq          373
   362: aload_1       
   363: iload         4
   365: aload_2       
   366: iload         7
   368: iconst_3      
   369: invokestatic  #27         // malformed:(java.nio.ByteBuffer, int, java.nio.CharBuffer, int, int)java.nio.charset.CoderResult
   372: areturn       
   373: iload         10
   375: bipush        12
   377: ishl          
   378: iload         12
   380: bipush        6
   382: ishl          
   383: ixor          
   384: iload         13
   386: ldc           #30         // -123008
   388: ixor          
   389: ixor          
   390: i2c           
   391: istore        14
   393: iload         14
   395: invokestatic  #28         // java.lang.Character.isSurrogate:(char)boolean
   398: ifeq          412
   401: aload_1       
   402: iload         4
   404: aload_2       
   405: iload         7
   407: iconst_3      
   408: invokestatic  #24         // malformedForLength:(java.nio.ByteBuffer, int, java.nio.CharBuffer, int, int)java.nio.charset.CoderResult
   411: areturn       
   412: aload         6
   414: iload         7
   416: iinc          
   419: iload         14
   421: castore       
   422: iinc          
   425: goto          675
   428: iload         10
   430: iconst_3      
   431: ishr          
   432: bipush        -2
   434: if_icmpne     664
   437: iload         5
   439: iload         4
   441: isub          
   442: istore        11
   444: iload         11
   446: iconst_4      
   447: if_icmplt     459
   450: iload         8
   452: iload         7
   454: isub          
   455: iconst_2      
   456: if_icmpge     552
   459: iload         10
   461: sipush        255
   464: iand          
   465: istore        10
   467: iload         10
   469: sipush        244
   472: if_icmpgt     499
   475: iload         11
   477: iconst_1      
   478: if_icmple     510
   481: iload         10
   483: aload_3       
   484: iload         4
   486: iconst_1      
   487: iadd          
   488: baload        
   489: sipush        255
   492: iand          
   493: invokestatic  #29         // isMalformed4_2:(int, int)boolean
   496: ifeq          510
   499: aload_1       
   500: iload         4
   502: aload_2       
   503: iload         7
   505: iconst_1      
   506: invokestatic  #24         // malformedForLength:(java.nio.ByteBuffer, int, java.nio.CharBuffer, int, int)java.nio.charset.CoderResult
   509: areturn       
   510: iload         11
   512: iconst_2      
   513: if_icmple     539
   516: aload_3       
   517: iload         4
   519: iconst_2      
   520: iadd          
   521: baload        
   522: invokestatic  #30         // isMalformed4_3:(int)boolean
   525: ifeq          539
   528: aload_1       
   529: iload         4
   531: aload_2       
   532: iload         7
   534: iconst_2      
   535: invokestatic  #24         // malformedForLength:(java.nio.ByteBuffer, int, java.nio.CharBuffer, int, int)java.nio.charset.CoderResult
   538: areturn       
   539: aload_1       
   540: iload         4
   542: iload         5
   544: aload_2       
   545: iload         7
   547: iconst_4      
   548: invokestatic  #23         // xflow:(java.nio.Buffer, int, int, java.nio.Buffer, int, int)java.nio.charset.CoderResult
   551: areturn       
   552: aload_3       
   553: iload         4
   555: iconst_1      
   556: iadd          
   557: baload        
   558: istore        12
   560: aload_3       
   561: iload         4
   563: iconst_2      
   564: iadd          
   565: baload        
   566: istore        13
   568: aload_3       
   569: iload         4
   571: iconst_3      
   572: iadd          
   573: baload        
   574: istore        14
   576: iload         10
   578: bipush        18
   580: ishl          
   581: iload         12
   583: bipush        12
   585: ishl          
   586: ixor          
   587: iload         13
   589: bipush        6
   591: ishl          
   592: ixor          
   593: iload         14
   595: ldc           #34         // 3678080
   597: ixor          
   598: ixor          
   599: istore        15
   601: iload         12
   603: iload         13
   605: iload         14
   607: invokestatic  #31         // isMalformed4:(int, int, int)boolean
   610: ifne          621
   613: iload         15
   615: invokestatic  #32         // java.lang.Character.isSupplementaryCodePoint:(int)boolean
   618: ifne          632
   621: aload_1       
   622: iload         4
   624: aload_2       
   625: iload         7
   627: iconst_4      
   628: invokestatic  #27         // malformed:(java.nio.ByteBuffer, int, java.nio.CharBuffer, int, int)java.nio.charset.CoderResult
   631: areturn       
   632: aload         6
   634: iload         7
   636: iinc          
   639: iload         15
   641: invokestatic  #33         // java.lang.Character.highSurrogate:(int)char
   644: castore       
   645: aload         6
   647: iload         7
   649: iinc          
   652: iload         15
   654: invokestatic  #34         // java.lang.Character.lowSurrogate:(int)char
   657: castore       
   658: iinc          
   661: goto          675
   664: aload_1       
   665: iload         4
   667: aload_2       
   668: iload         7
   670: iconst_1      
   671: invokestatic  #27         // malformed:(java.nio.ByteBuffer, int, java.nio.CharBuffer, int, int)java.nio.charset.CoderResult
   674: areturn       
   675: goto          106
   678: aload_1       
   679: iload         4
   681: iload         5
   683: aload_2       
   684: iload         7
   686: iconst_0      
   687: invokestatic  #23         // xflow:(java.nio.Buffer, int, int, java.nio.Buffer, int, int)java.nio.charset.CoderResult
   690: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6ec9c1f9 slotKind: QWORD <|@ <|@
      nr    6  <|@ st <@st|@reference-map: [rcx:0, rdx:0]
live-base-pointers: []
sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:223) [bci: 0]
locals: - rdx|QWORD[.] rcx|QWORD[.] - - - - - - - - - - - - - 
>@ <|@ instruction r10|DWORD[.] = MOV [rdx|QWORD[.] + 44] size: DWORD state [bci:0] <|@ <|@
      nr    8  <|@ st <@st|@reference-map: [rcx:0, rdx:0, r10:0]
live-base-pointers: []
sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:223) [bci: 0]
locals: - rdx|QWORD[.] rcx|QWORD[.] - - - - - - - - - - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rcx:0, rdx:0, r10:0]
live-base-pointers: []
sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:223) [bci: 0]
locals: - rdx|QWORD[.] rcx|QWORD[.] - - - - - - - - - - - - - 
>@ <|@ instruction rax|DWORD = MOV [rcx|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction r11|DWORD = MOV [rcx|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   14  <|@ instruction r8|DWORD = MOV [rcx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   16  <|@ instruction r9|DWORD = MOV [rdx|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   18  <|@ instruction rbx|DWORD = MOV [rdx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   20  <|@ instruction rdi|DWORD = ADD (x: r11|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   22  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   24  <|@ instruction rsi|DWORD = SUB (x: rdi|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr   26  <|@ instruction rbp|DWORD = ADD (x: rbx|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr   28  <|@ instruction r13|DWORD = ADD (x: r9|DWORD, ~y: [rdx|QWORD[.] + 24]) size: DWORD <|@ <|@
      nr   30  <|@ instruction r14|DWORD = SUB (x: rbp|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr   32  <|@ instruction CMP (x: r14|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr   34  <|@ instruction r14|DWORD = CMOVE (falseValue: r14|DWORD, ~trueValue: rsi|DWORD) condition: > <|@ <|@
      nr   36  <|@ instruction rsi|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr   38  <|@ instruction rsi|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr   40  <|@ instruction r14|DWORD = ADD (x: rax|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction CMP (x: r14|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   98  <|@ instruction stack:28|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction stack:32|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  102  <|@ instruction stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  104  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B3" 
    successors "B8" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  108  <|@ instruction r11|DWORD[.] = MOV [rcx|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  110  <|@ st <@st|@reference-map: [rcx:0, rdx:0, r10:0, r11:0]
live-base-pointers: []
sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:223) [bci: 0]
locals: - rdx|QWORD[.] rcx|QWORD[.] - - - - - - - - - - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r11|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr  112  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@310d469b encoding: base: 0 shift: 3 <|@ <|@
      nr  114  <|@ instruction CMP (x: r14|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  116  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B14" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  164  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B10" 
    successors "B15" "B38" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  168  <|@ instruction r11|DWORD = MOVZXB [rdx|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  170  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  172  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  176  <|@ instruction r11|DWORD = MOVZXB [rcx|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  178  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  180  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  184  <|@ instruction rdi|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  186  <|@ instruction r11|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  188  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4631858391758318237
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  198  <|@ instruction rax|DWORD = MOVSXB [r11|DWORD + r10|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  200  <|@ instruction rsi|DWORD = MOVSXB rax|DWORD size: DWORD <|@ <|@
      nr  202  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  204  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B17" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4631858391758318237
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  216  <|@ instruction rax|DWORD = MOVSXB rax|DWORD size: DWORD <|@ <|@
      nr  218  <|@ instruction MOV (x: [r8|QWORD[.] + rdi|DWORD * 2 + 16], y: rax|DWORD) size: WORD <|@ <|@
      nr  220  <|@ instruction rdi|DWORD = INC rdi|DWORD size: DWORD <|@ <|@
      nr  222  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  224  <|@ instruction JUMP ~[] destination: B20 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B20" 
    successors "B18" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4631999129246673565
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  192  <|@ instruction CMP (x: r14|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  194  <|@ instruction BRANCH trueDestinationProbability: 0.9793103448275862 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  228  <|@ instruction CMP (x: rbp|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  230  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  242  <|@ instruction rax|DWORD = SUB (x: r11|DWORD, ~y: r9|DWORD) size: DWORD <|@ <|@
      nr  244  <|@ instruction CMP (x: rax|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  246  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  258  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  260  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  272  <|@ instruction CMP (x: rax|DWORD, y: [rdx|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  274  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  286  <|@ instruction rbx|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  288  <|@ instruction r9|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  290  <|@ instruction rsi|DWORD = SUB (x: rdi|DWORD, ~y: r9|DWORD) size: DWORD <|@ <|@
      nr  292  <|@ instruction CMP (x: rsi|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  294  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  306  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  308  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B36" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  320  <|@ instruction CMP (x: rsi|DWORD, y: [rcx|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  322  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  342  <|@ instruction MOV (x: [rdx|QWORD[.] + 24], y: rax|DWORD) size: DWORD <|@ <|@
      nr  344  <|@ instruction MOV (x: [rcx|QWORD[.] + 24], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  346  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@1617107905] <|@ <|@
      nr  348  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   48  <|@ instruction stack:28|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   50  <|@ instruction stack:32|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   52  <|@ instruction stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   54  <|@ instruction rdi|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   56  <|@ instruction r8|QWORD = MOVSXD r13|DWORD size: QWORD <|@ <|@
      nr   58  <|@ instruction r8|QWORD = ADD (x: r8|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr   60  <|@ instruction r11|QWORD = MOV rdi|DWORD size: DWORD <|@ <|@
      nr   62  <|@ instruction CMP (x: r11|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr   64  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   68  <|@ instruction CMP (x: rdi|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr   70  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B12" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  120  <|@ instruction r11|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  122  <|@ instruction rdi|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr  124  <|@ instruction rdi|QWORD = ADD (x: rdi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  126  <|@ instruction rsi|QWORD = MOV r11|DWORD size: DWORD <|@ <|@
      nr  128  <|@ instruction CMP (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  130  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  134  <|@ instruction CMP (x: r11|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  136  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  140  <|@ instruction JUMP ~[] destination: B10 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  360  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  362  <|@ instruction r10|DWORD = MOVE input: int[-62483|0xffffffffffff0bed] <|@ <|@
      nr  364  <|@ instruction JUMP ~[] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B5" "B12" "B38" "B37" "B4" "B11" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  368  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  370  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr  372  <|@ st <@st|@reference-map: [rcx:0, rdx:0]
live-base-pointers: []
sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:223) [bci: 0]
locals: - rdx|QWORD[.] rcx|QWORD[.] - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  250  <|@ instruction r9|DWORD = MOVE input: int[-79635|0xfffffffffffec8ed] <|@ <|@
      nr  252  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  254  <|@ instruction JUMP ~[] destination: B24 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B22" "B19" "B24" "B26" "B28" "B30" "B32" "B34" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  334  <|@ instruction MOV (x: [r15|QWORD + 668], y: r9|DWORD) size: DWORD <|@ <|@
      nr  336  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  338  <|@ st <@st|@reference-map: [rcx:0, rdx:0, r8:0, r10:0]
live-base-pointers: []
sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:233) [bci: 73]
locals: - rdx|QWORD[.] rcx|QWORD[.] r10|DWORD[.] r11|DWORD rbp|DWORD r8|QWORD[.] rdi|DWORD rbx|DWORD r14|DWORD - - - - - - 
>@ <|@ instruction DEOPT info [bci:73] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   78  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1967428027] <|@ <|@
      nr   80  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction r10|DWORD = MOVE input: int[-73755|0xfffffffffffedfe5] <|@ <|@
      nr   84  <|@ instruction JUMP ~[] destination: B4 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  144  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1967428027] <|@ <|@
      nr  146  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  148  <|@ instruction r10|DWORD = MOVE input: int[-77339|0xfffffffffffed1e5] <|@ <|@
      nr  150  <|@ instruction JUMP ~[] destination: B11 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  154  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1967428027] <|@ <|@
      nr  156  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction r10|DWORD = MOVE input: int[-77339|0xfffffffffffed1e5] <|@ <|@
      nr  160  <|@ instruction JUMP ~[] destination: B12 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   88  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1967428027] <|@ <|@
      nr   90  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   92  <|@ instruction r10|DWORD = MOVE input: int[-73755|0xfffffffffffedfe5] <|@ <|@
      nr   94  <|@ instruction JUMP ~[] destination: B5 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  326  <|@ instruction r9|DWORD = MOVE input: int[-82451|0xfffffffffffebded] <|@ <|@
      nr  328  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  330  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  298  <|@ instruction r9|DWORD = MOVE input: int[-81171|0xfffffffffffec2ed] <|@ <|@
      nr  300  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B30 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  278  <|@ instruction r9|DWORD = MOVE input: int[-80915|0xfffffffffffec3ed] <|@ <|@
      nr  280  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  282  <|@ instruction JUMP ~[] destination: B28 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  234  <|@ instruction r9|DWORD = MOVE input: int[-79379|0xfffffffffffec9ed] <|@ <|@
      nr  236  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B22 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  264  <|@ instruction r9|DWORD = MOVE input: int[-79891|0xfffffffffffec7ed] <|@ <|@
      nr  266  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  268  <|@ instruction JUMP ~[] destination: B26 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  312  <|@ instruction r9|DWORD = MOVE input: int[-81427|0xfffffffffffec1ed] <|@ <|@
      nr  314  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  316  <|@ instruction JUMP ~[] destination: B32 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  208  <|@ instruction r9|DWORD = MOVE input: int[-72979|0xfffffffffffee2ed] <|@ <|@
      nr  210  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B19 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  352  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  354  <|@ instruction r10|DWORD = MOVE input: int[-67091|0xfffffffffffef9ed] <|@ <|@
      nr  356  <|@ instruction JUMP ~[] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokevirtual #15         // java.nio.ByteBuffer.array:()byte[]
     4: astore_3      
     5: aload_1       
     6: invokevirtual #7          // java.nio.ByteBuffer.arrayOffset:()int
     9: aload_1       
    10: invokevirtual #16         // java.nio.Buffer.position:()int
    13: iadd          
    14: istore        4
    16: aload_1       
    17: invokevirtual #7          // java.nio.ByteBuffer.arrayOffset:()int
    20: aload_1       
    21: invokevirtual #17         // java.nio.Buffer.limit:()int
    24: iadd          
    25: istore        5
    27: aload_2       
    28: invokevirtual #18         // java.nio.CharBuffer.array:()char[]
    31: astore        6
    33: aload_2       
    34: invokevirtual #19         // java.nio.CharBuffer.arrayOffset:()int
    37: aload_2       
    38: invokevirtual #20         // java.nio.Buffer.position:()int
    41: iadd          
    42: istore        7
    44: aload_2       
    45: invokevirtual #19         // java.nio.CharBuffer.arrayOffset:()int
    48: aload_2       
    49: invokevirtual #21         // java.nio.Buffer.limit:()int
    52: iadd          
    53: istore        8
    55: iload         7
    57: iload         5
    59: iload         4
    61: isub          
    62: iload         8
    64: iload         7
    66: isub          
    67: invokestatic  #22         // java.lang.Math.min:(int, int)int
    70: iadd          
    71: istore        9
    73: iload         7
    75: iload         9
    77: if_icmpge     106
    80: aload_3       
    81: iload         4
    83: baload        
    84: iflt          106
    87: aload         6
    89: iload         7
    91: iinc          
    94: aload_3       
    95: iload         4
    97: iinc          
   100: baload        
   101: i2c           
   102: castore       
   103: goto          73
   106: iload         4
   108: iload         5
   110: if_icmpge     678
   113: aload_3       
   114: iload         4
   116: baload        
   117: istore        10
   119: iload         10
   121: iflt          161
   124: iload         7
   126: iload         8
   128: if_icmplt     144
   131: aload_1       
   132: iload         4
   134: iload         5
   136: aload_2       
   137: iload         7
   139: iconst_1      
   140: invokestatic  #23         // xflow:(java.nio.Buffer, int, int, java.nio.Buffer, int, int)java.nio.charset.CoderResult
   143: areturn       
   144: aload         6
   146: iload         7
   148: iinc          
   151: iload         10
   153: i2c           
   154: castore       
   155: iinc          
   158: goto          675
   161: iload         10
   163: iconst_5      
   164: ishr          
   165: bipush        -2
   167: if_icmpne     261
   170: iload         10
   172: bipush        30
   174: iand          
   175: ifeq          261
   178: iload         5
   180: iload         4
   182: isub          
   183: iconst_2      
   184: if_icmplt     194
   187: iload         7
   189: iload         8
   191: if_icmplt     207
   194: aload_1       
   195: iload         4
   197: iload         5
   199: aload_2       
   200: iload         7
   202: iconst_2      
   203: invokestatic  #23         // xflow:(java.nio.Buffer, int, int, java.nio.Buffer, int, int)java.nio.charset.CoderResult
   206: areturn       
   207: aload_3       
   208: iload         4
   210: iconst_1      
   211: iadd          
   212: baload        
   213: istore        11
   215: iload         11
   217: invokestatic  #3          // isNotContinuation:(int)boolean
   220: ifeq          234
   223: aload_1       
   224: iload         4
   226: aload_2       
   227: iload         7
   229: iconst_1      
   230: invokestatic  #24         // malformedForLength:(java.nio.ByteBuffer, int, java.nio.CharBuffer, int, int)java.nio.charset.CoderResult
   233: areturn       
   234: aload         6
   236: iload         7
   238: iinc          
   241: iload         10
   243: bipush        6
   245: ishl          
   246: iload         11
   248: ixor          
   249: sipush        3968
   252: ixor          
   253: i2c           
   254: castore       
   255: iinc          
   258: goto          675
   261: iload         10
   263: iconst_4      
   264: ishr          
   265: bipush        -2
   267: if_icmpne     428
   270: iload         5
   272: iload         4
   274: isub          
   275: istore        11
   277: iload         11
   279: iconst_3      
   280: if_icmplt     290
   283: iload         7
   285: iload         8
   287: if_icmplt     334
   290: iload         11
   292: iconst_1      
   293: if_icmple     321
   296: iload         10
   298: aload_3       
   299: iload         4
   301: iconst_1      
   302: iadd          
   303: baload        
   304: invokestatic  #25         // isMalformed3_2:(int, int)boolean
   307: ifeq          321
   310: aload_1       
   311: iload         4
   313: aload_2       
   314: iload         7
   316: iconst_1      
   317: invokestatic  #24         // malformedForLength:(java.nio.ByteBuffer, int, java.nio.CharBuffer, int, int)java.nio.charset.CoderResult
   320: areturn       
   321: aload_1       
   322: iload         4
   324: iload         5
   326: aload_2       
   327: iload         7
   329: iconst_3      
   330: invokestatic  #23         // xflow:(java.nio.Buffer, int, int, java.nio.Buffer, int, int)java.nio.charset.CoderResult
   333: areturn       
   334: aload_3       
   335: iload         4
   337: iconst_1      
   338: iadd          
   339: baload        
   340: istore        12
   342: aload_3       
   343: iload         4
   345: iconst_2      
   346: iadd          
   347: baload        
   348: istore        13
   350: iload         10
   352: iload         12
   354: iload         13
   356: invokestatic  #26         // isMalformed3:(int, int, int)boolean
   359: ifeq          373
   362: aload_1       
   363: iload         4
   365: aload_2       
   366: iload         7
   368: iconst_3      
   369: invokestatic  #27         // malformed:(java.nio.ByteBuffer, int, java.nio.CharBuffer, int, int)java.nio.charset.CoderResult
   372: areturn       
   373: iload         10
   375: bipush        12
   377: ishl          
   378: iload         12
   380: bipush        6
   382: ishl          
   383: ixor          
   384: iload         13
   386: ldc           #30         // -123008
   388: ixor          
   389: ixor          
   390: i2c           
   391: istore        14
   393: iload         14
   395: invokestatic  #28         // java.lang.Character.isSurrogate:(char)boolean
   398: ifeq          412
   401: aload_1       
   402: iload         4
   404: aload_2       
   405: iload         7
   407: iconst_3      
   408: invokestatic  #24         // malformedForLength:(java.nio.ByteBuffer, int, java.nio.CharBuffer, int, int)java.nio.charset.CoderResult
   411: areturn       
   412: aload         6
   414: iload         7
   416: iinc          
   419: iload         14
   421: castore       
   422: iinc          
   425: goto          675
   428: iload         10
   430: iconst_3      
   431: ishr          
   432: bipush        -2
   434: if_icmpne     664
   437: iload         5
   439: iload         4
   441: isub          
   442: istore        11
   444: iload         11
   446: iconst_4      
   447: if_icmplt     459
   450: iload         8
   452: iload         7
   454: isub          
   455: iconst_2      
   456: if_icmpge     552
   459: iload         10
   461: sipush        255
   464: iand          
   465: istore        10
   467: iload         10
   469: sipush        244
   472: if_icmpgt     499
   475: iload         11
   477: iconst_1      
   478: if_icmple     510
   481: iload         10
   483: aload_3       
   484: iload         4
   486: iconst_1      
   487: iadd          
   488: baload        
   489: sipush        255
   492: iand          
   493: invokestatic  #29         // isMalformed4_2:(int, int)boolean
   496: ifeq          510
   499: aload_1       
   500: iload         4
   502: aload_2       
   503: iload         7
   505: iconst_1      
   506: invokestatic  #24         // malformedForLength:(java.nio.ByteBuffer, int, java.nio.CharBuffer, int, int)java.nio.charset.CoderResult
   509: areturn       
   510: iload         11
   512: iconst_2      
   513: if_icmple     539
   516: aload_3       
   517: iload         4
   519: iconst_2      
   520: iadd          
   521: baload        
   522: invokestatic  #30         // isMalformed4_3:(int)boolean
   525: ifeq          539
   528: aload_1       
   529: iload         4
   531: aload_2       
   532: iload         7
   534: iconst_2      
   535: invokestatic  #24         // malformedForLength:(java.nio.ByteBuffer, int, java.nio.CharBuffer, int, int)java.nio.charset.CoderResult
   538: areturn       
   539: aload_1       
   540: iload         4
   542: iload         5
   544: aload_2       
   545: iload         7
   547: iconst_4      
   548: invokestatic  #23         // xflow:(java.nio.Buffer, int, int, java.nio.Buffer, int, int)java.nio.charset.CoderResult
   551: areturn       
   552: aload_3       
   553: iload         4
   555: iconst_1      
   556: iadd          
   557: baload        
   558: istore        12
   560: aload_3       
   561: iload         4
   563: iconst_2      
   564: iadd          
   565: baload        
   566: istore        13
   568: aload_3       
   569: iload         4
   571: iconst_3      
   572: iadd          
   573: baload        
   574: istore        14
   576: iload         10
   578: bipush        18
   580: ishl          
   581: iload         12
   583: bipush        12
   585: ishl          
   586: ixor          
   587: iload         13
   589: bipush        6
   591: ishl          
   592: ixor          
   593: iload         14
   595: ldc           #34         // 3678080
   597: ixor          
   598: ixor          
   599: istore        15
   601: iload         12
   603: iload         13
   605: iload         14
   607: invokestatic  #31         // isMalformed4:(int, int, int)boolean
   610: ifne          621
   613: iload         15
   615: invokestatic  #32         // java.lang.Character.isSupplementaryCodePoint:(int)boolean
   618: ifne          632
   621: aload_1       
   622: iload         4
   624: aload_2       
   625: iload         7
   627: iconst_4      
   628: invokestatic  #27         // malformed:(java.nio.ByteBuffer, int, java.nio.CharBuffer, int, int)java.nio.charset.CoderResult
   631: areturn       
   632: aload         6
   634: iload         7
   636: iinc          
   639: iload         15
   641: invokestatic  #33         // java.lang.Character.highSurrogate:(int)char
   644: castore       
   645: aload         6
   647: iload         7
   649: iinc          
   652: iload         15
   654: invokestatic  #34         // java.lang.Character.lowSurrogate:(int)char
   657: castore       
   658: iinc          
   661: goto          675
   664: aload_1       
   665: iload         4
   667: aload_2       
   668: iload         7
   670: iconst_1      
   671: invokestatic  #27         // malformed:(java.nio.ByteBuffer, int, java.nio.CharBuffer, int, int)java.nio.charset.CoderResult
   674: areturn       
   675: goto          106
   678: aload_1       
   679: iload         4
   681: iload         5
   683: aload_2       
   684: iload         7
   686: iconst_0      
   687: invokestatic  #23         // xflow:(java.nio.Buffer, int, int, java.nio.Buffer, int, int)java.nio.charset.CoderResult
   690: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6ec9c1f9 slotKind: QWORD <|@ <|@
      nr    6  <|@ st <@st|@reference-map: [rcx:0, rdx:0]
live-base-pointers: []
sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:223) [bci: 0]
locals: - rdx|QWORD[.] rcx|QWORD[.] - - - - - - - - - - - - - 
>@ <|@ instruction r10|DWORD[.] = MOV [rdx|QWORD[.] + 44] size: DWORD state [bci:0] <|@ <|@
      nr    8  <|@ st <@st|@reference-map: [rcx:0, rdx:0, r10:0]
live-base-pointers: []
sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:223) [bci: 0]
locals: - rdx|QWORD[.] rcx|QWORD[.] - - - - - - - - - - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rcx:0, rdx:0, r10:0]
live-base-pointers: []
sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:223) [bci: 0]
locals: - rdx|QWORD[.] rcx|QWORD[.] - - - - - - - - - - - - - 
>@ <|@ instruction rax|DWORD = MOV [rcx|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction r11|DWORD = MOV [rcx|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   14  <|@ instruction r8|DWORD = MOV [rcx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   16  <|@ instruction r9|DWORD = MOV [rdx|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   18  <|@ instruction rbx|DWORD = MOV [rdx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   20  <|@ instruction rdi|DWORD = ADD (x: r11|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   22  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   24  <|@ instruction rsi|DWORD = SUB (x: rdi|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr   26  <|@ instruction rbp|DWORD = ADD (x: rbx|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr   28  <|@ instruction r13|DWORD = ADD (x: r9|DWORD, ~y: [rdx|QWORD[.] + 24]) size: DWORD <|@ <|@
      nr   30  <|@ instruction r14|DWORD = SUB (x: rbp|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr   32  <|@ instruction CMP (x: r14|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr   34  <|@ instruction r14|DWORD = CMOVE (falseValue: r14|DWORD, ~trueValue: rsi|DWORD) condition: > <|@ <|@
      nr   36  <|@ instruction rsi|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr   38  <|@ instruction rsi|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr   40  <|@ instruction r14|DWORD = ADD (x: rax|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction CMP (x: r14|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   98  <|@ instruction stack:28|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction stack:32|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  102  <|@ instruction stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  104  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B2" 
    successors "B8" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  108  <|@ instruction r11|DWORD[.] = MOV [rcx|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  110  <|@ st <@st|@reference-map: [rcx:0, rdx:0, r10:0, r11:0]
live-base-pointers: []
sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:223) [bci: 0]
locals: - rdx|QWORD[.] rcx|QWORD[.] - - - - - - - - - - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r11|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr  112  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@310d469b encoding: base: 0 shift: 3 <|@ <|@
      nr  114  <|@ instruction CMP (x: r14|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  116  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors "B15" "B38" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  168  <|@ instruction r11|DWORD = MOVZXB [rdx|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  170  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  172  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  176  <|@ instruction r11|DWORD = MOVZXB [rcx|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  178  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  180  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  184  <|@ instruction rdi|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  186  <|@ instruction r11|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  188  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4631858391758318237
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  198  <|@ instruction rax|DWORD = MOVSXB [r11|DWORD + r10|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  200  <|@ instruction rsi|DWORD = MOVSXB rax|DWORD size: DWORD <|@ <|@
      nr  202  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  204  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B17" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4631858391758318237
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  216  <|@ instruction rax|DWORD = MOVSXB rax|DWORD size: DWORD <|@ <|@
      nr  218  <|@ instruction MOV (x: [r8|QWORD[.] + rdi|DWORD * 2 + 16], y: rax|DWORD) size: WORD <|@ <|@
      nr  220  <|@ instruction rdi|DWORD = INC rdi|DWORD size: DWORD <|@ <|@
      nr  222  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  224  <|@ instruction JUMP ~[] destination: B20 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B20" 
    successors "B18" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4631999129246673565
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  192  <|@ instruction CMP (x: r14|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  194  <|@ instruction BRANCH trueDestinationProbability: 0.9793103448275862 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  228  <|@ instruction CMP (x: rbp|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  230  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  242  <|@ instruction rax|DWORD = SUB (x: r11|DWORD, ~y: r9|DWORD) size: DWORD <|@ <|@
      nr  244  <|@ instruction CMP (x: rax|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  246  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  258  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  260  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  272  <|@ instruction CMP (x: rax|DWORD, y: [rdx|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  274  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  286  <|@ instruction rbx|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  288  <|@ instruction r9|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  290  <|@ instruction rsi|DWORD = SUB (x: rdi|DWORD, ~y: r9|DWORD) size: DWORD <|@ <|@
      nr  292  <|@ instruction CMP (x: rsi|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  294  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  306  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  308  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B36" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  320  <|@ instruction CMP (x: rsi|DWORD, y: [rcx|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  322  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  342  <|@ instruction MOV (x: [rdx|QWORD[.] + 24], y: rax|DWORD) size: DWORD <|@ <|@
      nr  344  <|@ instruction MOV (x: [rcx|QWORD[.] + 24], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  346  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@1617107905] <|@ <|@
      nr  348  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   48  <|@ instruction stack:28|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   50  <|@ instruction stack:32|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   52  <|@ instruction stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   54  <|@ instruction rdi|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   56  <|@ instruction r8|QWORD = MOVSXD r13|DWORD size: QWORD <|@ <|@
      nr   58  <|@ instruction r8|QWORD = ADD (x: r8|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr   60  <|@ instruction r11|QWORD = MOV rdi|DWORD size: DWORD <|@ <|@
      nr   62  <|@ instruction CMP (x: r11|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr   64  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B7" "B4" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   68  <|@ instruction CMP (x: rdi|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr   70  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B7 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B12" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  120  <|@ instruction r11|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  122  <|@ instruction rdi|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr  124  <|@ instruction rdi|QWORD = ADD (x: rdi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  126  <|@ instruction rsi|QWORD = MOV r11|DWORD size: DWORD <|@ <|@
      nr  128  <|@ instruction CMP (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  130  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B14" "B11" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  134  <|@ instruction CMP (x: r11|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  136  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B14 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  360  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  362  <|@ instruction r10|DWORD = MOVE input: int[-62483|0xffffffffffff0bed] <|@ <|@
      nr  364  <|@ instruction JUMP ~[] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B5" "B12" "B38" "B37" "B4" "B11" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  368  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  370  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr  372  <|@ st <@st|@reference-map: [rcx:0, rdx:0]
live-base-pointers: []
sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:223) [bci: 0]
locals: - rdx|QWORD[.] rcx|QWORD[.] - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  250  <|@ instruction r9|DWORD = MOVE input: int[-79635|0xfffffffffffec8ed] <|@ <|@
      nr  254  <|@ instruction JUMP ~[] destination: B24 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B22" "B19" "B24" "B26" "B28" "B30" "B32" "B34" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  236  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  334  <|@ instruction MOV (x: [r15|QWORD + 668], y: r9|DWORD) size: DWORD <|@ <|@
      nr  336  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  338  <|@ st <@st|@reference-map: [rcx:0, rdx:0, r8:0, r10:0]
live-base-pointers: []
sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:233) [bci: 73]
locals: - rdx|QWORD[.] rcx|QWORD[.] r10|DWORD[.] r11|DWORD rbp|DWORD r8|QWORD[.] rdi|DWORD rbx|DWORD r14|DWORD - - - - - - 
>@ <|@ instruction DEOPT info [bci:73] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   78  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1967428027] <|@ <|@
      nr   80  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction r10|DWORD = MOVE input: int[-73755|0xfffffffffffedfe5] <|@ <|@
      nr   84  <|@ instruction JUMP ~[] destination: B4 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  144  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1967428027] <|@ <|@
      nr  146  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  148  <|@ instruction r10|DWORD = MOVE input: int[-77339|0xfffffffffffed1e5] <|@ <|@
      nr  150  <|@ instruction JUMP ~[] destination: B11 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  154  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1967428027] <|@ <|@
      nr  156  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction r10|DWORD = MOVE input: int[-77339|0xfffffffffffed1e5] <|@ <|@
      nr  160  <|@ instruction JUMP ~[] destination: B12 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   88  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1967428027] <|@ <|@
      nr   90  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   92  <|@ instruction r10|DWORD = MOVE input: int[-73755|0xfffffffffffedfe5] <|@ <|@
      nr   94  <|@ instruction JUMP ~[] destination: B5 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  326  <|@ instruction r9|DWORD = MOVE input: int[-82451|0xfffffffffffebded] <|@ <|@
      nr  330  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  298  <|@ instruction r9|DWORD = MOVE input: int[-81171|0xfffffffffffec2ed] <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B30 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  278  <|@ instruction r9|DWORD = MOVE input: int[-80915|0xfffffffffffec3ed] <|@ <|@
      nr  282  <|@ instruction JUMP ~[] destination: B28 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  234  <|@ instruction r9|DWORD = MOVE input: int[-79379|0xfffffffffffec9ed] <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B22 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  264  <|@ instruction r9|DWORD = MOVE input: int[-79891|0xfffffffffffec7ed] <|@ <|@
      nr  268  <|@ instruction JUMP ~[] destination: B26 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  312  <|@ instruction r9|DWORD = MOVE input: int[-81427|0xfffffffffffec1ed] <|@ <|@
      nr  316  <|@ instruction JUMP ~[] destination: B32 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  208  <|@ instruction r9|DWORD = MOVE input: int[-72979|0xfffffffffffee2ed] <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B19 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  352  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  354  <|@ instruction r10|DWORD = MOVE input: int[-67091|0xfffffffffffef9ed] <|@ <|@
      nr  356  <|@ instruction JUMP ~[] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokevirtual #15         // java.nio.ByteBuffer.array:()byte[]
     4: astore_3      
     5: aload_1       
     6: invokevirtual #7          // java.nio.ByteBuffer.arrayOffset:()int
     9: aload_1       
    10: invokevirtual #16         // java.nio.Buffer.position:()int
    13: iadd          
    14: istore        4
    16: aload_1       
    17: invokevirtual #7          // java.nio.ByteBuffer.arrayOffset:()int
    20: aload_1       
    21: invokevirtual #17         // java.nio.Buffer.limit:()int
    24: iadd          
    25: istore        5
    27: aload_2       
    28: invokevirtual #18         // java.nio.CharBuffer.array:()char[]
    31: astore        6
    33: aload_2       
    34: invokevirtual #19         // java.nio.CharBuffer.arrayOffset:()int
    37: aload_2       
    38: invokevirtual #20         // java.nio.Buffer.position:()int
    41: iadd          
    42: istore        7
    44: aload_2       
    45: invokevirtual #19         // java.nio.CharBuffer.arrayOffset:()int
    48: aload_2       
    49: invokevirtual #21         // java.nio.Buffer.limit:()int
    52: iadd          
    53: istore        8
    55: iload         7
    57: iload         5
    59: iload         4
    61: isub          
    62: iload         8
    64: iload         7
    66: isub          
    67: invokestatic  #22         // java.lang.Math.min:(int, int)int
    70: iadd          
    71: istore        9
    73: iload         7
    75: iload         9
    77: if_icmpge     106
    80: aload_3       
    81: iload         4
    83: baload        
    84: iflt          106
    87: aload         6
    89: iload         7
    91: iinc          
    94: aload_3       
    95: iload         4
    97: iinc          
   100: baload        
   101: i2c           
   102: castore       
   103: goto          73
   106: iload         4
   108: iload         5
   110: if_icmpge     678
   113: aload_3       
   114: iload         4
   116: baload        
   117: istore        10
   119: iload         10
   121: iflt          161
   124: iload         7
   126: iload         8
   128: if_icmplt     144
   131: aload_1       
   132: iload         4
   134: iload         5
   136: aload_2       
   137: iload         7
   139: iconst_1      
   140: invokestatic  #23         // xflow:(java.nio.Buffer, int, int, java.nio.Buffer, int, int)java.nio.charset.CoderResult
   143: areturn       
   144: aload         6
   146: iload         7
   148: iinc          
   151: iload         10
   153: i2c           
   154: castore       
   155: iinc          
   158: goto          675
   161: iload         10
   163: iconst_5      
   164: ishr          
   165: bipush        -2
   167: if_icmpne     261
   170: iload         10
   172: bipush        30
   174: iand          
   175: ifeq          261
   178: iload         5
   180: iload         4
   182: isub          
   183: iconst_2      
   184: if_icmplt     194
   187: iload         7
   189: iload         8
   191: if_icmplt     207
   194: aload_1       
   195: iload         4
   197: iload         5
   199: aload_2       
   200: iload         7
   202: iconst_2      
   203: invokestatic  #23         // xflow:(java.nio.Buffer, int, int, java.nio.Buffer, int, int)java.nio.charset.CoderResult
   206: areturn       
   207: aload_3       
   208: iload         4
   210: iconst_1      
   211: iadd          
   212: baload        
   213: istore        11
   215: iload         11
   217: invokestatic  #3          // isNotContinuation:(int)boolean
   220: ifeq          234
   223: aload_1       
   224: iload         4
   226: aload_2       
   227: iload         7
   229: iconst_1      
   230: invokestatic  #24         // malformedForLength:(java.nio.ByteBuffer, int, java.nio.CharBuffer, int, int)java.nio.charset.CoderResult
   233: areturn       
   234: aload         6
   236: iload         7
   238: iinc          
   241: iload         10
   243: bipush        6
   245: ishl          
   246: iload         11
   248: ixor          
   249: sipush        3968
   252: ixor          
   253: i2c           
   254: castore       
   255: iinc          
   258: goto          675
   261: iload         10
   263: iconst_4      
   264: ishr          
   265: bipush        -2
   267: if_icmpne     428
   270: iload         5
   272: iload         4
   274: isub          
   275: istore        11
   277: iload         11
   279: iconst_3      
   280: if_icmplt     290
   283: iload         7
   285: iload         8
   287: if_icmplt     334
   290: iload         11
   292: iconst_1      
   293: if_icmple     321
   296: iload         10
   298: aload_3       
   299: iload         4
   301: iconst_1      
   302: iadd          
   303: baload        
   304: invokestatic  #25         // isMalformed3_2:(int, int)boolean
   307: ifeq          321
   310: aload_1       
   311: iload         4
   313: aload_2       
   314: iload         7
   316: iconst_1      
   317: invokestatic  #24         // malformedForLength:(java.nio.ByteBuffer, int, java.nio.CharBuffer, int, int)java.nio.charset.CoderResult
   320: areturn       
   321: aload_1       
   322: iload         4
   324: iload         5
   326: aload_2       
   327: iload         7
   329: iconst_3      
   330: invokestatic  #23         // xflow:(java.nio.Buffer, int, int, java.nio.Buffer, int, int)java.nio.charset.CoderResult
   333: areturn       
   334: aload_3       
   335: iload         4
   337: iconst_1      
   338: iadd          
   339: baload        
   340: istore        12
   342: aload_3       
   343: iload         4
   345: iconst_2      
   346: iadd          
   347: baload        
   348: istore        13
   350: iload         10
   352: iload         12
   354: iload         13
   356: invokestatic  #26         // isMalformed3:(int, int, int)boolean
   359: ifeq          373
   362: aload_1       
   363: iload         4
   365: aload_2       
   366: iload         7
   368: iconst_3      
   369: invokestatic  #27         // malformed:(java.nio.ByteBuffer, int, java.nio.CharBuffer, int, int)java.nio.charset.CoderResult
   372: areturn       
   373: iload         10
   375: bipush        12
   377: ishl          
   378: iload         12
   380: bipush        6
   382: ishl          
   383: ixor          
   384: iload         13
   386: ldc           #30         // -123008
   388: ixor          
   389: ixor          
   390: i2c           
   391: istore        14
   393: iload         14
   395: invokestatic  #28         // java.lang.Character.isSurrogate:(char)boolean
   398: ifeq          412
   401: aload_1       
   402: iload         4
   404: aload_2       
   405: iload         7
   407: iconst_3      
   408: invokestatic  #24         // malformedForLength:(java.nio.ByteBuffer, int, java.nio.CharBuffer, int, int)java.nio.charset.CoderResult
   411: areturn       
   412: aload         6
   414: iload         7
   416: iinc          
   419: iload         14
   421: castore       
   422: iinc          
   425: goto          675
   428: iload         10
   430: iconst_3      
   431: ishr          
   432: bipush        -2
   434: if_icmpne     664
   437: iload         5
   439: iload         4
   441: isub          
   442: istore        11
   444: iload         11
   446: iconst_4      
   447: if_icmplt     459
   450: iload         8
   452: iload         7
   454: isub          
   455: iconst_2      
   456: if_icmpge     552
   459: iload         10
   461: sipush        255
   464: iand          
   465: istore        10
   467: iload         10
   469: sipush        244
   472: if_icmpgt     499
   475: iload         11
   477: iconst_1      
   478: if_icmple     510
   481: iload         10
   483: aload_3       
   484: iload         4
   486: iconst_1      
   487: iadd          
   488: baload        
   489: sipush        255
   492: iand          
   493: invokestatic  #29         // isMalformed4_2:(int, int)boolean
   496: ifeq          510
   499: aload_1       
   500: iload         4
   502: aload_2       
   503: iload         7
   505: iconst_1      
   506: invokestatic  #24         // malformedForLength:(java.nio.ByteBuffer, int, java.nio.CharBuffer, int, int)java.nio.charset.CoderResult
   509: areturn       
   510: iload         11
   512: iconst_2      
   513: if_icmple     539
   516: aload_3       
   517: iload         4
   519: iconst_2      
   520: iadd          
   521: baload        
   522: invokestatic  #30         // isMalformed4_3:(int)boolean
   525: ifeq          539
   528: aload_1       
   529: iload         4
   531: aload_2       
   532: iload         7
   534: iconst_2      
   535: invokestatic  #24         // malformedForLength:(java.nio.ByteBuffer, int, java.nio.CharBuffer, int, int)java.nio.charset.CoderResult
   538: areturn       
   539: aload_1       
   540: iload         4
   542: iload         5
   544: aload_2       
   545: iload         7
   547: iconst_4      
   548: invokestatic  #23         // xflow:(java.nio.Buffer, int, int, java.nio.Buffer, int, int)java.nio.charset.CoderResult
   551: areturn       
   552: aload_3       
   553: iload         4
   555: iconst_1      
   556: iadd          
   557: baload        
   558: istore        12
   560: aload_3       
   561: iload         4
   563: iconst_2      
   564: iadd          
   565: baload        
   566: istore        13
   568: aload_3       
   569: iload         4
   571: iconst_3      
   572: iadd          
   573: baload        
   574: istore        14
   576: iload         10
   578: bipush        18
   580: ishl          
   581: iload         12
   583: bipush        12
   585: ishl          
   586: ixor          
   587: iload         13
   589: bipush        6
   591: ishl          
   592: ixor          
   593: iload         14
   595: ldc           #34         // 3678080
   597: ixor          
   598: ixor          
   599: istore        15
   601: iload         12
   603: iload         13
   605: iload         14
   607: invokestatic  #31         // isMalformed4:(int, int, int)boolean
   610: ifne          621
   613: iload         15
   615: invokestatic  #32         // java.lang.Character.isSupplementaryCodePoint:(int)boolean
   618: ifne          632
   621: aload_1       
   622: iload         4
   624: aload_2       
   625: iload         7
   627: iconst_4      
   628: invokestatic  #27         // malformed:(java.nio.ByteBuffer, int, java.nio.CharBuffer, int, int)java.nio.charset.CoderResult
   631: areturn       
   632: aload         6
   634: iload         7
   636: iinc          
   639: iload         15
   641: invokestatic  #33         // java.lang.Character.highSurrogate:(int)char
   644: castore       
   645: aload         6
   647: iload         7
   649: iinc          
   652: iload         15
   654: invokestatic  #34         // java.lang.Character.lowSurrogate:(int)char
   657: castore       
   658: iinc          
   661: goto          675
   664: aload_1       
   665: iload         4
   667: aload_2       
   668: iload         7
   670: iconst_1      
   671: invokestatic  #27         // malformed:(java.nio.ByteBuffer, int, java.nio.CharBuffer, int, int)java.nio.charset.CoderResult
   674: areturn       
   675: goto          106
   678: aload_1       
   679: iload         4
   681: iload         5
   683: aload_2       
   684: iload         7
   686: iconst_0      
   687: invokestatic  #23         // xflow:(java.nio.Buffer, int, int, java.nio.Buffer, int, int)java.nio.charset.CoderResult
   690: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec2848896c2420448b522c438504d48b4118448b5924448b411c448b4a248b5a1c418bfb4103f84103c38bf72bf08beb4103e9458be944036a18448bf5452bf5443bf6440f4ff64963f648ffce4403f0443bf00f8fe4000000897c2414448944241044895c240c448b592c438504dc458bc349c1e003443bf00f8ff4000000440fb65a284585db0f850e010000440fb659284585db0f85e00100008bf8458bdde9210000006690430fbe44d3100fbef085f60f8cb80100000fbec0664189447810ffc741ffc3443bf77fdc413beb0f8f7b010000418bc3412bc13bc30f8fdd00000085c00f8c700100003b420c0f8c510100008b5c2410448b4c240c8bf7412bf13bf30f8f3301000085f60f8c540100003b710c0f8c1a01000089421889711848b8addeaddeaddeadde488b6c24204883c428850500000000c5f877c3897c2414448944241044895c240c428b3cd50c0000004d63c54c03c6448bdf4d3bd80f86b7000000413bfd0f87f9feffffe96a000000468b1cdd0c0000004863f84803fe418bf3483bf70f867a000000443bd80f87e9feffffe95700000049bb000000000000000041baed0bffff4589979c0200004d899fa8020000e8000000009041b9edc8feff8b5c241445898f9c0200004d89a7a8020000e8000000009049baaddeaddeaddeadde4d8bda41bae5dffeffebb949baaddeaddeaddeadde4d8bda41bae5d1feffeba449baaddeaddeaddeadde4d8bda41bae5d1feffeb8f49baaddeaddeaddeadde4d8bda41bae5dffeffe977ffffff41b9edbdfeffeb8941b9edc2feffeb8141b9edc3feffe976ffffff41b9edc9feffe96bffffff41b9edc7feffe960ffffff41b9edc1feffe955ffffff41b9ede2feffe94affffff49bb000000000000000041baedf9feffe91bffffffe80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6ec9c1f9 slotKind: QWORD  <||@
  Comment 48 6 r10|DWORD[.] = MOV [rdx|QWORD[.] + 44] size: DWORD state [bci:0]  <||@
  Comment 48 [rcx:0, rdx:0]at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:223) [bci: 0, duringCall: false, rethrow: false]
              |0  |1             |2             |3  |4  |5  |6  |7  |8  |9  |10  |11  |12  |13  |14  |15 
     locals:  |-  |rdx|QWORD[.]  |rcx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-   |-   |-   |-    <||@
  Comment 48 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 52 8 NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:0]  <||@
  Comment 52 [rcx:0, rdx:0, r10:0]at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:223) [bci: 0, duringCall: false, rethrow: false]
              |0  |1             |2             |3  |4  |5  |6  |7  |8  |9  |10  |11  |12  |13  |14  |15 
     locals:  |-  |rdx|QWORD[.]  |rcx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-   |-   |-   |-    <||@
  Comment 52 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 56 10 rax|DWORD = MOV [rcx|QWORD[.] + 24] size: DWORD state [bci:0]  <||@
  Comment 56 [rcx:0, rdx:0, r10:0]at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:223) [bci: 0, duringCall: false, rethrow: false]
              |0  |1             |2             |3  |4  |5  |6  |7  |8  |9  |10  |11  |12  |13  |14  |15 
     locals:  |-  |rdx|QWORD[.]  |rcx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-   |-   |-   |-    <||@
  Comment 56 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 59 12 r11|DWORD = MOV [rcx|QWORD[.] + 36] size: DWORD  <||@
  Comment 63 14 r8|DWORD = MOV [rcx|QWORD[.] + 28] size: DWORD  <||@
  Comment 67 16 r9|DWORD = MOV [rdx|QWORD[.] + 36] size: DWORD  <||@
  Comment 71 18 rbx|DWORD = MOV [rdx|QWORD[.] + 28] size: DWORD  <||@
  Comment 74 20 rdi|DWORD = ADD (x: r11|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 80 22 rax|DWORD = ADD (x: rax|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 83 24 rsi|DWORD = SUB (x: rdi|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 87 26 rbp|DWORD = ADD (x: rbx|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 92 28 r13|DWORD = ADD (x: r9|DWORD, ~y: [rdx|QWORD[.] + 24]) size: DWORD  <||@
  Comment 99 30 r14|DWORD = SUB (x: rbp|DWORD, ~y: r13|DWORD) size: DWORD  <||@
  Comment 105 32 CMP (x: r14|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 108 34 r14|DWORD = CMOVE (falseValue: r14|DWORD, ~trueValue: rsi|DWORD) condition: >  <||@
  Comment 112 36 rsi|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 115 38 rsi|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 118 40 r14|DWORD = ADD (x: rax|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 121 42 CMP (x: r14|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 124 44 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B6  <||@
  Comment 130 block B6 null  <||@
  Comment 130 96 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 130 98 stack:28|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 134 100 stack:32|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 139 102 stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 144 104 JUMP ~[] destination: B6 -> B7  <||@
  Comment 144 block B7 null  <||@
  Comment 144 106 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 144 108 r11|DWORD[.] = MOV [rcx|QWORD[.] + 44] size: DWORD  <||@
  Comment 148 110 NULLCHECK [r12|QWORD[*] + r11|DWORD[.] * 8] state [bci:0]  <||@
  Comment 148 [rcx:0, rdx:0, r10:0, r11:0]at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:223) [bci: 0, duringCall: false, rethrow: false]
              |0  |1             |2             |3  |4  |5  |6  |7  |8  |9  |10  |11  |12  |13  |14  |15 
     locals:  |-  |rdx|QWORD[.]  |rcx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-   |-   |-   |-    <||@
  Comment 148 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 152 112 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@310d469b encoding: base: 0 shift: 3  <||@
  Comment 159 114 CMP (x: r14|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 162 116 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B14  <||@
  Comment 168 block B14 null  <||@
  Comment 168 166 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 168 168 r11|DWORD = MOVZXB [rdx|QWORD[.] + 40] size: DWORD  <||@
  Comment 173 170 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 176 172 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B38  <||@
  Comment 182 block B15 null  <||@
  Comment 182 174 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 182 176 r11|DWORD = MOVZXB [rcx|QWORD[.] + 40] size: DWORD  <||@
  Comment 187 178 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 190 180 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B37  <||@
  Comment 196 block B16 null  <||@
  Comment 196 182 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 196 184 rdi|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 198 186 r11|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 201 188 JUMP ~[] destination: B16 -> B17  <||@
  Comment 206 block B18 loop 0 depth 1 header:49|LoopBegin  <||@
  Comment 206 196 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 208 198 rax|DWORD = MOVSXB [r11|DWORD + r10|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 214 200 rsi|DWORD = MOVSXB rax|DWORD size: DWORD  <||@
  Comment 217 202 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 219 204 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20  <||@
  Comment 225 block B20 loop 0 depth 1 header:49|LoopBegin  <||@
  Comment 225 214 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 225 216 rax|DWORD = MOVSXB rax|DWORD size: DWORD  <||@
  Comment 228 218 MOV (x: [r8|QWORD[.] + rdi|DWORD * 2 + 16], y: rax|DWORD) size: WORD  <||@
  Comment 234 220 rdi|DWORD = INC rdi|DWORD size: DWORD  <||@
  Comment 236 222 r11|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 239 224 JUMP ~[] destination: B20 -> B17  <||@
  Comment 239 block B17 loop 0 depth 1 header:49|LoopBegin  <||@
  Comment 239 190 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 239 192 CMP (x: r14|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 242 194 BRANCH trueDestinationProbability: 0.9793103448275862 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B21  <||@
  Comment 244 block B21 null  <||@
  Comment 244 226 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 244 228 CMP (x: rbp|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 247 230 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23  <||@
  Comment 253 block B23 null  <||@
  Comment 253 240 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 253 242 rax|DWORD = SUB (x: r11|DWORD, ~y: r9|DWORD) size: DWORD  <||@
  Comment 259 244 CMP (x: rax|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 261 246 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25  <||@
  Comment 267 block B25 null  <||@
  Comment 267 256 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 267 258 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 269 260 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27  <||@
  Comment 275 block B27 null  <||@
  Comment 275 270 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 275 272 CMP (x: rax|DWORD, y: [rdx|QWORD[.] + 12]) size: DWORD  <||@
  Comment 278 274 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29  <||@
  Comment 284 block B29 null  <||@
  Comment 284 284 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 284 286 rbx|DWORD = MOVE stack:32|DWORD moveKind: DWORD  <||@
  Comment 288 288 r9|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 293 290 rsi|DWORD = SUB (x: rdi|DWORD, ~y: r9|DWORD) size: DWORD  <||@
  Comment 298 292 CMP (x: rsi|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 300 294 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31  <||@
  Comment 306 block B31 null  <||@
  Comment 306 304 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 306 306 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 308 308 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33  <||@
  Comment 314 block B33 null  <||@
  Comment 314 318 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 314 320 CMP (x: rsi|DWORD, y: [rcx|QWORD[.] + 12]) size: DWORD  <||@
  Comment 317 322 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B36  <||@
  Comment 323 block B36 null  <||@
  Comment 323 340 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 323 342 MOV (x: [rdx|QWORD[.] + 24], y: rax|DWORD) size: DWORD  <||@
  Comment 326 344 MOV (x: [rcx|QWORD[.] + 24], y: rsi|DWORD) size: DWORD  <||@
  Comment 329 346 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@1617107905]  <||@
  Comment 329 {Object[CoderResult@1617107905]}  <||@
  Comment 339 348 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 348 12  <||@
  Comment 358 block B1 null  <||@
  Comment 358 46 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 358 48 stack:28|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 362 50 stack:32|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 367 52 stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 372 54 rdi|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 380 56 r8|QWORD = MOVSXD r13|DWORD size: QWORD  <||@
  Comment 383 58 r8|QWORD = ADD (x: r8|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 386 60 r11|QWORD = MOV rdi|DWORD size: DWORD  <||@
  Comment 389 62 CMP (x: r11|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 392 64 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B5  <||@
  Comment 398 block B2 null  <||@
  Comment 398 66 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 398 68 CMP (x: rdi|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 401 70 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B7 falseDestination: B2 -> B4  <||@
  Comment 412 block B8 null  <||@
  Comment 412 118 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 412 120 r11|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 420 122 rdi|QWORD = MOVSXD rax|DWORD size: QWORD  <||@
  Comment 423 124 rdi|QWORD = ADD (x: rdi|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 426 126 rsi|QWORD = MOV r11|DWORD size: DWORD  <||@
  Comment 429 128 CMP (x: rsi|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 432 130 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B12  <||@
  Comment 438 block B9 null  <||@
  Comment 438 132 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 438 134 CMP (x: r11|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 441 136 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B14 falseDestination: B9 -> B11  <||@
  Comment 452 block B38 null  <||@
  Comment 452 358 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 452 360 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 462 362 r10|DWORD = MOVE input: int[-62483|0xffffffffffff0bed]  <||@
  Comment 468 364 JUMP ~[] destination: B38 -> B39  <||@
  Comment 468 block B39 null  <||@
  Comment 468 366 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 468 368 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 475 370 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 482 372 DEOPT info [bci:0]  <||@
  Comment 482 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 487 [rcx:0, rdx:0]at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:223) [bci: 0, duringCall: false, rethrow: false]
              |0  |1             |2             |3  |4  |5  |6  |7  |8  |9  |10  |11  |12  |13  |14  |15 
     locals:  |-  |rdx|QWORD[.]  |rcx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-   |-   |-   |-    <||@
  Comment 488 block B24 null  <||@
  Comment 488 248 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 488 250 r9|DWORD = MOVE input: int[-79635|0xfffffffffffec8ed]  <||@
  Comment 494 254 JUMP ~[] destination: B24 -> B35  <||@
  Comment 494 block B35 null  <||@
  Comment 494 332 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 494 236 rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 498 334 MOV (x: [r15|QWORD + 668], y: r9|DWORD) size: DWORD  <||@
  Comment 505 336 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 512 338 DEOPT info [bci:73]  <||@
  Comment 512 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 517 [rcx:0, rdx:0, r8:0, r10:0]at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:233) [bci: 73, duringCall: false, rethrow: false]
              |0  |1             |2             |3             |4          |5          |6            |7          |8          |9          |10  |11  |12  |13  |14  |15 
     locals:  |-  |rdx|QWORD[.]  |rcx|QWORD[.]  |r10|DWORD[.]  |r11|DWORD  |rbp|DWORD  |r8|QWORD[.]  |rdi|DWORD  |rbx|DWORD  |r14|DWORD  |-   |-   |-   |-   |-   |-    <||@
  Comment 518 block B4 null  <||@
  Comment 518 76 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 518 78 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1967428027]  <||@
  Comment 518 {Object[d.a@1967428027]}  <||@
  Comment 528 80 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 531 82 r10|DWORD = MOVE input: int[-73755|0xfffffffffffedfe5]  <||@
  Comment 537 84 JUMP ~[] destination: B4 -> B39  <||@
  Comment 539 block B11 null  <||@
  Comment 539 142 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 539 144 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1967428027]  <||@
  Comment 539 {Object[d.a@1967428027]}  <||@
  Comment 549 146 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 552 148 r10|DWORD = MOVE input: int[-77339|0xfffffffffffed1e5]  <||@
  Comment 558 150 JUMP ~[] destination: B11 -> B39  <||@
  Comment 560 block B12 null  <||@
  Comment 560 152 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 560 154 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1967428027]  <||@
  Comment 560 {Object[d.a@1967428027]}  <||@
  Comment 570 156 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 573 158 r10|DWORD = MOVE input: int[-77339|0xfffffffffffed1e5]  <||@
  Comment 579 160 JUMP ~[] destination: B12 -> B39  <||@
  Comment 581 block B5 null  <||@
  Comment 581 86 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 581 88 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1967428027]  <||@
  Comment 581 {Object[d.a@1967428027]}  <||@
  Comment 591 90 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 594 92 r10|DWORD = MOVE input: int[-73755|0xfffffffffffedfe5]  <||@
  Comment 600 94 JUMP ~[] destination: B5 -> B39  <||@
  Comment 605 block B34 null  <||@
  Comment 605 324 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 605 326 r9|DWORD = MOVE input: int[-82451|0xfffffffffffebded]  <||@
  Comment 611 330 JUMP ~[] destination: B34 -> B35  <||@
  Comment 613 block B30 null  <||@
  Comment 613 296 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 613 298 r9|DWORD = MOVE input: int[-81171|0xfffffffffffec2ed]  <||@
  Comment 619 302 JUMP ~[] destination: B30 -> B35  <||@
  Comment 621 block B28 null  <||@
  Comment 621 276 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 621 278 r9|DWORD = MOVE input: int[-80915|0xfffffffffffec3ed]  <||@
  Comment 627 282 JUMP ~[] destination: B28 -> B35  <||@
  Comment 632 block B22 null  <||@
  Comment 632 232 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 632 234 r9|DWORD = MOVE input: int[-79379|0xfffffffffffec9ed]  <||@
  Comment 638 238 JUMP ~[] destination: B22 -> B35  <||@
  Comment 643 block B26 null  <||@
  Comment 643 262 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 643 264 r9|DWORD = MOVE input: int[-79891|0xfffffffffffec7ed]  <||@
  Comment 649 268 JUMP ~[] destination: B26 -> B35  <||@
  Comment 654 block B32 null  <||@
  Comment 654 310 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 654 312 r9|DWORD = MOVE input: int[-81427|0xfffffffffffec1ed]  <||@
  Comment 660 316 JUMP ~[] destination: B32 -> B35  <||@
  Comment 665 block B19 null  <||@
  Comment 665 206 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 665 208 r9|DWORD = MOVE input: int[-72979|0xfffffffffffee2ed]  <||@
  Comment 671 212 JUMP ~[] destination: B19 -> B35  <||@
  Comment 676 block B37 null  <||@
  Comment 676 350 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 676 352 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 686 354 r10|DWORD = MOVE input: int[-67091|0xfffffffffffef9ed]  <||@
  Comment 692 356 JUMP ~[] destination: B37 -> B39  <||@
  Comment 697 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 697 4  <||@
  Comment 703 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 703 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-9896[sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(ByteBuffer, CharBuffer)]"
  method "HotSpotCompilation-9896[sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(ByteBuffer, CharBuffer)]"
  date 1527005229349
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 106d116a0 448b560849c1e203493bc20f85af47afff900f1f80000000000f1f800000000089842400c0feff4883ec2848896c2420448b522c438504d48b4118448b5924448b411c448b4a248b5a1c418bfb4103f84103c38bf72bf08beb4103e9458be944036a18448bf5452bf5443bf6440f4ff64963f648ffce4403f0443bf00f8fe4000000897c2414448944241044895c240c448b592c438504dc458bc349c1e003443bf00f8ff4000000440fb65a284585db0f850e010000440fb659284585db0f85e00100008bf8458bdde9210000006690430fbe44d3100fbef085f60f8cb80100000fbec0664189447810ffc741ffc3443bf77fdc413beb0f8f7b010000418bc3412bc13bc30f8fdd00000085c00f8c700100003b420c0f8c510100008b5c2410448b4c240c8bf7412bf13bf30f8f3301000085f60f8c540100003b710c0f8c1a01000089421889711848b8b8b91ac006000000488b6c24204883c428850504d8b7fdc5f877c3897c2414448944241044895c240c428b3cd50c0000004d63c54c03c6448bdf4d3bd80f86b7000000413bfd0f87f9feffffe96a000000468b1cdd0c0000004863f84803fe418bf3483bf70f867a000000443bd80f87e9feffffe95700000049bb000000000000000041baed0bffff4589979c0200004d899fa8020000e8775dafff9041b9edc8feff8b5c241445898f9c0200004d89a7a8020000e8595dafff9049ba201fa1bc070000004d8bda41bae5dffeffebb949ba201fa1bc070000004d8bda41bae5d1feffeba449ba201fa1bc070000004d8bda41bae5d1feffeb8f49ba201fa1bc070000004d8bda41bae5dffeffe977ffffff41b9edbdfeffeb8941b9edc2feffeb8141b9edc3feffe976ffffff41b9edc9feffe96bffffff41b9edc7feffe960ffffff41b9edc1feffe955ffffff41b9ede2feffe94affffff49bb000000000000000041baedf9feffe91bffffffe8c28cf3ff90e89c5bafff90f4f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6ec9c1f9 slotKind: QWORD  <||@
  Comment 48 6 r10|DWORD[.] = MOV [rdx|QWORD[.] + 44] size: DWORD state [bci:0]  <||@
  Comment 48 [rcx:0, rdx:0]at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:223) [bci: 0, duringCall: false, rethrow: false]
              |0  |1             |2             |3  |4  |5  |6  |7  |8  |9  |10  |11  |12  |13  |14  |15 
     locals:  |-  |rdx|QWORD[.]  |rcx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-   |-   |-   |-    <||@
  Comment 48 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 52 8 NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:0]  <||@
  Comment 52 [rcx:0, rdx:0, r10:0]at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:223) [bci: 0, duringCall: false, rethrow: false]
              |0  |1             |2             |3  |4  |5  |6  |7  |8  |9  |10  |11  |12  |13  |14  |15 
     locals:  |-  |rdx|QWORD[.]  |rcx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-   |-   |-   |-    <||@
  Comment 52 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 56 10 rax|DWORD = MOV [rcx|QWORD[.] + 24] size: DWORD state [bci:0]  <||@
  Comment 56 [rcx:0, rdx:0, r10:0]at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:223) [bci: 0, duringCall: false, rethrow: false]
              |0  |1             |2             |3  |4  |5  |6  |7  |8  |9  |10  |11  |12  |13  |14  |15 
     locals:  |-  |rdx|QWORD[.]  |rcx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-   |-   |-   |-    <||@
  Comment 56 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 59 12 r11|DWORD = MOV [rcx|QWORD[.] + 36] size: DWORD  <||@
  Comment 63 14 r8|DWORD = MOV [rcx|QWORD[.] + 28] size: DWORD  <||@
  Comment 67 16 r9|DWORD = MOV [rdx|QWORD[.] + 36] size: DWORD  <||@
  Comment 71 18 rbx|DWORD = MOV [rdx|QWORD[.] + 28] size: DWORD  <||@
  Comment 74 20 rdi|DWORD = ADD (x: r11|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 80 22 rax|DWORD = ADD (x: rax|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 83 24 rsi|DWORD = SUB (x: rdi|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 87 26 rbp|DWORD = ADD (x: rbx|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 92 28 r13|DWORD = ADD (x: r9|DWORD, ~y: [rdx|QWORD[.] + 24]) size: DWORD  <||@
  Comment 99 30 r14|DWORD = SUB (x: rbp|DWORD, ~y: r13|DWORD) size: DWORD  <||@
  Comment 105 32 CMP (x: r14|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 108 34 r14|DWORD = CMOVE (falseValue: r14|DWORD, ~trueValue: rsi|DWORD) condition: >  <||@
  Comment 112 36 rsi|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 115 38 rsi|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 118 40 r14|DWORD = ADD (x: rax|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 121 42 CMP (x: r14|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 124 44 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B6  <||@
  Comment 130 block B6 null  <||@
  Comment 130 96 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 130 98 stack:28|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 134 100 stack:32|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 139 102 stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 144 104 JUMP ~[] destination: B6 -> B7  <||@
  Comment 144 block B7 null  <||@
  Comment 144 106 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 144 108 r11|DWORD[.] = MOV [rcx|QWORD[.] + 44] size: DWORD  <||@
  Comment 148 110 NULLCHECK [r12|QWORD[*] + r11|DWORD[.] * 8] state [bci:0]  <||@
  Comment 148 [rcx:0, rdx:0, r10:0, r11:0]at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:223) [bci: 0, duringCall: false, rethrow: false]
              |0  |1             |2             |3  |4  |5  |6  |7  |8  |9  |10  |11  |12  |13  |14  |15 
     locals:  |-  |rdx|QWORD[.]  |rcx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-   |-   |-   |-    <||@
  Comment 148 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 152 112 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@310d469b encoding: base: 0 shift: 3  <||@
  Comment 159 114 CMP (x: r14|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 162 116 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B14  <||@
  Comment 168 block B14 null  <||@
  Comment 168 166 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 168 168 r11|DWORD = MOVZXB [rdx|QWORD[.] + 40] size: DWORD  <||@
  Comment 173 170 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 176 172 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B38  <||@
  Comment 182 block B15 null  <||@
  Comment 182 174 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 182 176 r11|DWORD = MOVZXB [rcx|QWORD[.] + 40] size: DWORD  <||@
  Comment 187 178 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 190 180 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B37  <||@
  Comment 196 block B16 null  <||@
  Comment 196 182 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 196 184 rdi|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 198 186 r11|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 201 188 JUMP ~[] destination: B16 -> B17  <||@
  Comment 206 block B18 loop 0 depth 1 header:49|LoopBegin  <||@
  Comment 206 196 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 208 198 rax|DWORD = MOVSXB [r11|DWORD + r10|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 214 200 rsi|DWORD = MOVSXB rax|DWORD size: DWORD  <||@
  Comment 217 202 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 219 204 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20  <||@
  Comment 225 block B20 loop 0 depth 1 header:49|LoopBegin  <||@
  Comment 225 214 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 225 216 rax|DWORD = MOVSXB rax|DWORD size: DWORD  <||@
  Comment 228 218 MOV (x: [r8|QWORD[.] + rdi|DWORD * 2 + 16], y: rax|DWORD) size: WORD  <||@
  Comment 234 220 rdi|DWORD = INC rdi|DWORD size: DWORD  <||@
  Comment 236 222 r11|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 239 224 JUMP ~[] destination: B20 -> B17  <||@
  Comment 239 block B17 loop 0 depth 1 header:49|LoopBegin  <||@
  Comment 239 190 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 239 192 CMP (x: r14|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 242 194 BRANCH trueDestinationProbability: 0.9793103448275862 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B21  <||@
  Comment 244 block B21 null  <||@
  Comment 244 226 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 244 228 CMP (x: rbp|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 247 230 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23  <||@
  Comment 253 block B23 null  <||@
  Comment 253 240 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 253 242 rax|DWORD = SUB (x: r11|DWORD, ~y: r9|DWORD) size: DWORD  <||@
  Comment 259 244 CMP (x: rax|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 261 246 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25  <||@
  Comment 267 block B25 null  <||@
  Comment 267 256 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 267 258 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 269 260 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27  <||@
  Comment 275 block B27 null  <||@
  Comment 275 270 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 275 272 CMP (x: rax|DWORD, y: [rdx|QWORD[.] + 12]) size: DWORD  <||@
  Comment 278 274 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29  <||@
  Comment 284 block B29 null  <||@
  Comment 284 284 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 284 286 rbx|DWORD = MOVE stack:32|DWORD moveKind: DWORD  <||@
  Comment 288 288 r9|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 293 290 rsi|DWORD = SUB (x: rdi|DWORD, ~y: r9|DWORD) size: DWORD  <||@
  Comment 298 292 CMP (x: rsi|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 300 294 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31  <||@
  Comment 306 block B31 null  <||@
  Comment 306 304 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 306 306 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 308 308 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33  <||@
  Comment 314 block B33 null  <||@
  Comment 314 318 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 314 320 CMP (x: rsi|DWORD, y: [rcx|QWORD[.] + 12]) size: DWORD  <||@
  Comment 317 322 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B36  <||@
  Comment 323 block B36 null  <||@
  Comment 323 340 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 323 342 MOV (x: [rdx|QWORD[.] + 24], y: rax|DWORD) size: DWORD  <||@
  Comment 326 344 MOV (x: [rcx|QWORD[.] + 24], y: rsi|DWORD) size: DWORD  <||@
  Comment 329 346 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@1617107905]  <||@
  Comment 329 {Object[CoderResult@1617107905]}  <||@
  Comment 339 348 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 348 12  <||@
  Comment 358 block B1 null  <||@
  Comment 358 46 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 358 48 stack:28|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 362 50 stack:32|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 367 52 stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 372 54 rdi|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 380 56 r8|QWORD = MOVSXD r13|DWORD size: QWORD  <||@
  Comment 383 58 r8|QWORD = ADD (x: r8|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 386 60 r11|QWORD = MOV rdi|DWORD size: DWORD  <||@
  Comment 389 62 CMP (x: r11|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 392 64 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B5  <||@
  Comment 398 block B2 null  <||@
  Comment 398 66 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 398 68 CMP (x: rdi|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 401 70 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B7 falseDestination: B2 -> B4  <||@
  Comment 412 block B8 null  <||@
  Comment 412 118 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 412 120 r11|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 420 122 rdi|QWORD = MOVSXD rax|DWORD size: QWORD  <||@
  Comment 423 124 rdi|QWORD = ADD (x: rdi|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 426 126 rsi|QWORD = MOV r11|DWORD size: DWORD  <||@
  Comment 429 128 CMP (x: rsi|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 432 130 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B12  <||@
  Comment 438 block B9 null  <||@
  Comment 438 132 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 438 134 CMP (x: r11|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 441 136 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B14 falseDestination: B9 -> B11  <||@
  Comment 452 block B38 null  <||@
  Comment 452 358 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 452 360 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 462 362 r10|DWORD = MOVE input: int[-62483|0xffffffffffff0bed]  <||@
  Comment 468 364 JUMP ~[] destination: B38 -> B39  <||@
  Comment 468 block B39 null  <||@
  Comment 468 366 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 468 368 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 475 370 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 482 372 DEOPT info [bci:0]  <||@
  Comment 482 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 487 [rcx:0, rdx:0]at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:223) [bci: 0, duringCall: false, rethrow: false]
              |0  |1             |2             |3  |4  |5  |6  |7  |8  |9  |10  |11  |12  |13  |14  |15 
     locals:  |-  |rdx|QWORD[.]  |rcx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-   |-   |-   |-    <||@
  Comment 488 block B24 null  <||@
  Comment 488 248 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 488 250 r9|DWORD = MOVE input: int[-79635|0xfffffffffffec8ed]  <||@
  Comment 494 254 JUMP ~[] destination: B24 -> B35  <||@
  Comment 494 block B35 null  <||@
  Comment 494 332 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 494 236 rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 498 334 MOV (x: [r15|QWORD + 668], y: r9|DWORD) size: DWORD  <||@
  Comment 505 336 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 512 338 DEOPT info [bci:73]  <||@
  Comment 512 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 517 [rcx:0, rdx:0, r8:0, r10:0]at sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:233) [bci: 73, duringCall: false, rethrow: false]
              |0  |1             |2             |3             |4          |5          |6            |7          |8          |9          |10  |11  |12  |13  |14  |15 
     locals:  |-  |rdx|QWORD[.]  |rcx|QWORD[.]  |r10|DWORD[.]  |r11|DWORD  |rbp|DWORD  |r8|QWORD[.]  |rdi|DWORD  |rbx|DWORD  |r14|DWORD  |-   |-   |-   |-   |-   |-    <||@
  Comment 518 block B4 null  <||@
  Comment 518 76 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 518 78 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1967428027]  <||@
  Comment 518 {Object[d.a@1967428027]}  <||@
  Comment 528 80 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 531 82 r10|DWORD = MOVE input: int[-73755|0xfffffffffffedfe5]  <||@
  Comment 537 84 JUMP ~[] destination: B4 -> B39  <||@
  Comment 539 block B11 null  <||@
  Comment 539 142 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 539 144 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1967428027]  <||@
  Comment 539 {Object[d.a@1967428027]}  <||@
  Comment 549 146 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 552 148 r10|DWORD = MOVE input: int[-77339|0xfffffffffffed1e5]  <||@
  Comment 558 150 JUMP ~[] destination: B11 -> B39  <||@
  Comment 560 block B12 null  <||@
  Comment 560 152 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 560 154 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1967428027]  <||@
  Comment 560 {Object[d.a@1967428027]}  <||@
  Comment 570 156 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 573 158 r10|DWORD = MOVE input: int[-77339|0xfffffffffffed1e5]  <||@
  Comment 579 160 JUMP ~[] destination: B12 -> B39  <||@
  Comment 581 block B5 null  <||@
  Comment 581 86 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 581 88 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1967428027]  <||@
  Comment 581 {Object[d.a@1967428027]}  <||@
  Comment 591 90 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 594 92 r10|DWORD = MOVE input: int[-73755|0xfffffffffffedfe5]  <||@
  Comment 600 94 JUMP ~[] destination: B5 -> B39  <||@
  Comment 605 block B34 null  <||@
  Comment 605 324 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 605 326 r9|DWORD = MOVE input: int[-82451|0xfffffffffffebded]  <||@
  Comment 611 330 JUMP ~[] destination: B34 -> B35  <||@
  Comment 613 block B30 null  <||@
  Comment 613 296 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 613 298 r9|DWORD = MOVE input: int[-81171|0xfffffffffffec2ed]  <||@
  Comment 619 302 JUMP ~[] destination: B30 -> B35  <||@
  Comment 621 block B28 null  <||@
  Comment 621 276 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 621 278 r9|DWORD = MOVE input: int[-80915|0xfffffffffffec3ed]  <||@
  Comment 627 282 JUMP ~[] destination: B28 -> B35  <||@
  Comment 632 block B22 null  <||@
  Comment 632 232 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 632 234 r9|DWORD = MOVE input: int[-79379|0xfffffffffffec9ed]  <||@
  Comment 638 238 JUMP ~[] destination: B22 -> B35  <||@
  Comment 643 block B26 null  <||@
  Comment 643 262 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 643 264 r9|DWORD = MOVE input: int[-79891|0xfffffffffffec7ed]  <||@
  Comment 649 268 JUMP ~[] destination: B26 -> B35  <||@
  Comment 654 block B32 null  <||@
  Comment 654 310 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 654 312 r9|DWORD = MOVE input: int[-81427|0xfffffffffffec1ed]  <||@
  Comment 660 316 JUMP ~[] destination: B32 -> B35  <||@
  Comment 665 block B19 null  <||@
  Comment 665 206 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 665 208 r9|DWORD = MOVE input: int[-72979|0xfffffffffffee2ed]  <||@
  Comment 671 212 JUMP ~[] destination: B19 -> B35  <||@
  Comment 676 block B37 null  <||@
  Comment 676 350 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 676 352 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 686 354 r10|DWORD = MOVE input: int[-67091|0xfffffffffffef9ed]  <||@
  Comment 692 356 JUMP ~[] destination: B37 -> B39  <||@
  Comment 697 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 697 4  <||@
  Comment 703 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 703 5  <||@
  HexCodeFile>>> <|@
end_nmethod
