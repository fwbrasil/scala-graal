begin_compilation
  name " HotSpotCompilation-8757[java.util.ArrayList.remove(int)]"
  method "HotSpotCompilation-8757[java.util.ArrayList.remove(int)]"
  date 1527005197561
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i204 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: i204  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/ArrayList;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v211 v209 v210 ?11 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i204 v88 v143 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i204 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList.size
nodeSourcePosition: at java.util.ArrayList.rangeCheck(ArrayList.java:656) [bci: 2]
at java.util.ArrayList.remove(ArrayList.java:496) [bci: 2]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v209 
=== Succesors ===
next: v166 
=== Usages ===
v42 i15 i34 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v209 #next: v166  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 j198 v42 ?11 v213 i15 i24 v78 v127 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList.rangeCheck(ArrayList.java:656) [bci: 5]
at java.util.ArrayList.remove(ArrayList.java:496) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i204 
=== Succesors ===
=== Usages ===
v166 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i204  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<ArrayList.remove(int)>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: ArrayList.java
sourceLine: 496
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 - - 
=== Succesors ===
=== Usages ===
v185 i206 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.rangeCheck(ArrayList.java:656) [bci: 5]
at java.util.ArrayList.remove(ArrayList.java:496) [bci: 2]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v42 
=== Succesors ===
trueSuccessor: v163 
falseSuccessor: v165 
=== Usages ===
=== Predecessor ===
i204 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v42 #trueSuccessor: v163 #falseSuccessor: v165  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v163 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.rangeCheck(ArrayList.java:656) [bci: 5]
at java.util.ArrayList.remove(ArrayList.java:496) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: a205 
=== Usages ===
=== Predecessor ===
v166 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a205  <|@  <|@
f <@~|@floating>@ <|@
tid v211 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a205 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a205 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList.elementData
nodeSourcePosition: at java.util.ArrayList.elementData(ArrayList.java:422) [bci: 1]
at java.util.ArrayList.remove(ArrayList.java:499) [bci: 17]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v211 
=== Succesors ===
next: i206 
=== Usages ===
a72 v212 
=== Predecessor ===
v163 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v211 #next: i206  <|@  <|@
f <@~|@floating>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a205 
=== Succesors ===
=== Usages ===
i206 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a205  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i206 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.ArrayList.elementData(ArrayList.java:422) [bci: 5]
at java.util.ArrayList.remove(ArrayList.java:499) [bci: 17]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v212 
=== Succesors ===
next: v174 
=== Usages ===
v78 v145 i126 
=== Predecessor ===
a205 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v212 #next: v174  <|@  <|@
f <@~|@floating>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.ArrayList.elementData(ArrayList.java:422) [bci: 5]
at java.util.ArrayList.remove(ArrayList.java:499) [bci: 17]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i206 
=== Succesors ===
=== Usages ===
v174 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2 y: i206  <|@  <|@
f <@*|@fixed>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.elementData(ArrayList.java:422) [bci: 5]
at java.util.ArrayList.remove(ArrayList.java:499) [bci: 17]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v78 
=== Succesors ===
trueSuccessor: v171 
falseSuccessor: v173 
=== Usages ===
=== Predecessor ===
i206 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v78 #trueSuccessor: v171 #falseSuccessor: v173  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v171 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.elementData(ArrayList.java:422) [bci: 5]
at java.util.ArrayList.remove(ArrayList.java:499) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v178 
=== Usages ===
a208 
=== Predecessor ===
v174 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v178  <|@  <|@
f <@~|@floating>@ <|@
tid i16 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList.remove(ArrayList.java:501) [bci: 28]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i17 i34 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i34 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.ArrayList.remove(ArrayList.java:505) [bci: 60]
stamp: i32
=== Inputs ===
x: i204 
y: i16 
=== Succesors ===
=== Usages ===
v143 v145 v214 v88 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i204 y: i16  <|@  <|@
f <@~|@floating>@ <|@
tid v145 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.ArrayList.remove(ArrayList.java:505) [bci: 66]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i34 
y: i206 
=== Succesors ===
=== Usages ===
v178 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i34 y: i206  <|@  <|@
f <@*|@fixed>@ <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.remove(ArrayList.java:505) [bci: 66]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v145 
=== Succesors ===
trueSuccessor: v175 
falseSuccessor: v177 
=== Usages ===
=== Predecessor ===
v171 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v145 #trueSuccessor: v175 #falseSuccessor: v177  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v175 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.remove(ArrayList.java:505) [bci: 66]
stamp: void
=== Inputs ===
=== Succesors ===
next: i207 
=== Usages ===
v152 v98 
=== Predecessor ===
v178 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i207  <|@  <|@
f <@~|@floating>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i207 v68 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i207 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.ArrayList.remove(ArrayList.java:498) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v210 
=== Succesors ===
next: v68 
=== Usages ===
i9 
=== Predecessor ===
v175 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v210 #next: v68  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList.remove(ArrayList.java:498) [bci: 10]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i9 v19 i24 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.ArrayList.remove(ArrayList.java:498) [bci: 11]
stamp: i32
=== Inputs ===
x: i207 
y: i8 
=== Succesors ===
=== Usages ===
v68 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i207 y: i8  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList.modCount
nodeSourcePosition: at java.util.ArrayList.remove(ArrayList.java:498) [bci: 12]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v210 
value: i9 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a208 
=== Usages ===
=== Predecessor ===
i207 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v210 value: i9 stateAfter: - lastLocationAccess: - #next: a208  <|@  <|@
f <@~|@floating>@ <|@
tid a72 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayList.elementData(ArrayList.java:422) [bci: 1]
at java.util.ArrayList.remove(ArrayList.java:499) [bci: 17]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a205 
=== Succesors ===
=== Usages ===
j197 v214 v213 j192 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a205  <|@  <|@
f <@~|@floating>@ <|@
tid v213 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a72 
index: i2 
=== Succesors ===
=== Usages ===
a208 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a72 index: i2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a208 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.ArrayList.elementData(ArrayList.java:422) [bci: 5]
at java.util.ArrayList.remove(ArrayList.java:499) [bci: 17]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v171 
address: v213 
=== Succesors ===
next: v22 
=== Usages ===
a87 
=== Predecessor ===
v68 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v171 address: v213 #next: v22  <|@  <|@
f <@~|@floating>@ <|@
tid a87 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayList.elementData(ArrayList.java:422) [bci: 5]
at java.util.ArrayList.remove(ArrayList.java:499) [bci: 17]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a208 
=== Succesors ===
=== Usages ===
v60 v40 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a208  <|@  <|@
f <@~|@floating>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a72 
index: i34 
=== Succesors ===
=== Usages ===
v152 v98 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a72 index: i34  <|@  <|@
f <@~|@floating>@ <|@
tid i15 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.util.ArrayList.remove(ArrayList.java:501) [bci: 26]
stamp: i32
=== Inputs ===
x: i204 
y: i2 
=== Succesors ===
=== Usages ===
i17 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i204 y: i2  <|@  <|@
f <@~|@floating>@ <|@
tid i17 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.ArrayList.remove(ArrayList.java:501) [bci: 28]
stamp: i32
=== Inputs ===
x: i15 
y: i16 
=== Succesors ===
=== Usages ===
v19 j202 i126 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i15 y: i16  <|@  <|@
f <@~|@floating>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList.remove(ArrayList.java:502) [bci: 31]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i17 
y: i8 
=== Succesors ===
=== Usages ===
v22 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i17 y: i8  <|@  <|@
f <@~|@floating>@ <|@
tid a155 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList.remove(ArrayList.java:505) [bci: 66]
rawvalue: null
stableDimension: 0
stamp: n - NULL
stampKind: n -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v98 v152 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.remove(ArrayList.java:502) [bci: 31]
stamp: void
trueSuccessorProbability: 0.8668582258360336
=== Inputs ===
condition: v19 
=== Succesors ===
trueSuccessor: v20 
falseSuccessor: v21 
=== Usages ===
=== Predecessor ===
a208 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v19 #trueSuccessor: v20 #falseSuccessor: v21  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4605983184310992836
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.remove(ArrayList.java:505) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v88 
=== Usages ===
=== Predecessor ===
v22 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v88  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ArrayList.size
nodeSourcePosition: at java.util.ArrayList.remove(ArrayList.java:505) [bci: 62]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v209 
value: i34 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v98 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v209 value: i34 stateAfter: - lastLocationAccess: - #next: v98  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at java.util.ArrayList.remove(ArrayList.java:505) [bci: 66]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v175 
address: v214 
value: a155 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v60 
=== Usages ===
=== Predecessor ===
v88 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v175 address: v214 value: a155 stateAfter: - lastLocationAccess: - #next: v60  <|@  <|@
f <@*|@fixed>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.remove(ArrayList.java:507) [bci: 68]
stamp: void
=== Inputs ===
result: a87 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v98 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a87 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4593964958246633712
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.remove(ArrayList.java:503) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v125 
=== Usages ===
=== Predecessor ===
v22 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v125  <|@  <|@
f <@~|@floating>@ <|@
tid i126 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.remove(ArrayList.java:503) [bci: 47]
stamp: i32
=== Inputs ===
x: i206 
y: i17 
=== Succesors ===
=== Usages ===
v127 v121 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i206 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid i24 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.ArrayList.remove(ArrayList.java:503) [bci: 40]
stamp: i32
=== Inputs ===
x: i2 
y: i8 
=== Succesors ===
=== Usages ===
j193 v121 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2 y: i8  <|@  <|@
f <@~|@floating>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.remove(ArrayList.java:503) [bci: 47]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i126 
y: i24 
=== Succesors ===
=== Usages ===
v125 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i126 y: i24  <|@  <|@
f <@*|@fixed>@ <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 77]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.remove(ArrayList.java:503) [bci: 47]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v121 
=== Succesors ===
trueSuccessor: v124 
falseSuccessor: v122 
=== Usages ===
=== Predecessor ===
v21 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v121 #trueSuccessor: v124 #falseSuccessor: v122  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4563782903482747766
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.remove(ArrayList.java:503) [bci: 47]
stamp: void
=== Inputs ===
=== Succesors ===
next: v123 
=== Usages ===
=== Predecessor ===
v125 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v123  <|@  <|@
f <@*|@fixed>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.remove(ArrayList.java:503) [bci: 47]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v111 
=== Predecessor ===
v124 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B10" 
    xhandlers
    flags 
    probability 4593916988867072729
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 80]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.remove(ArrayList.java:503) [bci: 47]
stamp: void
=== Inputs ===
=== Succesors ===
next: v131 
=== Usages ===
=== Predecessor ===
v125 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v131  <|@  <|@
f <@~|@floating>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.remove(ArrayList.java:503) [bci: 47]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i126 
y: i2 
=== Succesors ===
=== Usages ===
v131 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i126 y: i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.remove(ArrayList.java:503) [bci: 47]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v127 
=== Succesors ===
trueSuccessor: v130 
falseSuccessor: v128 
=== Usages ===
=== Predecessor ===
v122 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v127 #trueSuccessor: v130 #falseSuccessor: v128  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4563721502676909708
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.remove(ArrayList.java:503) [bci: 47]
stamp: void
=== Inputs ===
=== Succesors ===
next: v129 
=== Usages ===
=== Predecessor ===
v131 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v129  <|@  <|@
f <@*|@fixed>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.remove(ArrayList.java:503) [bci: 47]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v111 
=== Predecessor ===
v130 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors 
    xhandlers
    flags 
    probability 4568255802707199233
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.remove(ArrayList.java:503) [bci: 47]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v123 v129 
=== Succesors ===
next: v132 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v123 v129 #next: v132  <|@  <|@
tid ?11 <|@
d <@d|@=== Debug Properties ===
bci: 15
code: ResolvedJavaMethodBytecode<ArrayList.remove(int)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.ArrayList.remove(ArrayList.java:498) [bci: 12]
rethrowException: false
sourceFile: ArrayList.java
sourceLine: 499
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 - - 
=== Succesors ===
=== Usages ===
v132 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
nodeSourcePosition: at org.graalvm.compiler.nodes.DeoptimizeNode.deopt(DeoptimizationAction, DeoptimizationReason) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:263) [bci: 119]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.remove(ArrayList.java:503) [bci: 47]
reason: RuntimeConstraint
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?11 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v111 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?11  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 4593869499181307356
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.remove(ArrayList.java:503) [bci: 47]
stamp: void
=== Inputs ===
=== Succesors ===
next: j192 
=== Usages ===
=== Predecessor ===
v131 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j192  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j192 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.remove(ArrayList.java:503) [bci: 47]
stamp: i64
=== Inputs ===
object: a72 
=== Succesors ===
next: j197 
=== Usages ===
v215 
=== Predecessor ===
v128 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a72 #next: j197  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j197 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.remove(ArrayList.java:503) [bci: 47]
stamp: i64
=== Inputs ===
object: a72 
=== Succesors ===
next: v203 
=== Usages ===
v216 
=== Predecessor ===
j192 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a72 #next: v203  <|@  <|@
f <@~|@floating>@ <|@
tid j193 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.remove(ArrayList.java:503) [bci: 47]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i24 
=== Succesors ===
=== Usages ===
v215 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i24  <|@  <|@
f <@~|@floating>@ <|@
tid v215 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: j192 
index: j193 
=== Succesors ===
=== Usages ===
v203 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j192 index: j193  <|@  <|@
f <@~|@floating>@ <|@
tid j198 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.remove(ArrayList.java:503) [bci: 47]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i2 
=== Succesors ===
=== Usages ===
v216 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2  <|@  <|@
f <@~|@floating>@ <|@
tid v216 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: j197 
index: j198 
=== Succesors ===
=== Usages ===
v203 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j197 index: j198  <|@  <|@
f <@~|@floating>@ <|@
tid j202 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.remove(ArrayList.java:503) [bci: 47]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i17 
=== Succesors ===
=== Usages ===
v203 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i17  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v203 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: ObjectArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.remove(ArrayList.java:503) [bci: 47]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v215 v216 j202 
=== Succesors ===
next: v143 
=== Usages ===
=== Predecessor ===
j197 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v215 v216 j202 #next: v143  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ArrayList.size
nodeSourcePosition: at java.util.ArrayList.remove(ArrayList.java:505) [bci: 62]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v209 
value: i34 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v152 
=== Usages ===
=== Predecessor ===
v203 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v209 value: i34 stateAfter: - lastLocationAccess: - #next: v152  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v152 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at java.util.ArrayList.remove(ArrayList.java:505) [bci: 66]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v175 
address: v214 
value: a155 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v40 
=== Usages ===
=== Predecessor ===
v143 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v175 address: v214 value: a155 stateAfter: - lastLocationAccess: - #next: v40  <|@  <|@
f <@*|@fixed>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.remove(ArrayList.java:507) [bci: 68]
stamp: void
=== Inputs ===
result: a87 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v152 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a87 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B14" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v177 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.remove(ArrayList.java:505) [bci: 66]
stamp: void
=== Inputs ===
=== Succesors ===
next: v190 
=== Usages ===
=== Predecessor ===
v178 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v190  <|@  <|@
f <@~|@floating>@ <|@
tid i191 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -41499
stableDimension: 0
stamp: i32 [-41499] ⇊00000000ffff5de5 ⇈00000000ffff5de5
stampKind: i32
value: int[-41499|0xffffffffffff5de5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i183 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v179 
=== Predecessor ===
v177 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B14" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.elementData(ArrayList.java:422) [bci: 5]
at java.util.ArrayList.remove(ArrayList.java:499) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v188 
=== Usages ===
=== Predecessor ===
v174 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v188  <|@  <|@
f <@~|@floating>@ <|@
tid i189 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -20251
stableDimension: 0
stamp: i32 [-20251] ⇊00000000ffffb0e5 ⇈00000000ffffb0e5
stampKind: i32
value: int[-20251|0xffffffffffffb0e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i183 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v179 
=== Predecessor ===
v173 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B14" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.rangeCheck(ArrayList.java:656) [bci: 5]
at java.util.ArrayList.remove(ArrayList.java:496) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v186 
=== Usages ===
=== Predecessor ===
v166 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v186  <|@  <|@
f <@~|@floating>@ <|@
tid i187 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16403
stableDimension: 0
stamp: i32 [-16403] ⇊00000000ffffbfed ⇈00000000ffffbfed
stampKind: i32
value: int[-16403|0xffffffffffffbfed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i183 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v179 
=== Predecessor ===
v165 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" "B11" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i183 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-41499 - -16403] ⇊00000000ffff10e5 ⇈00000000fffffffd
valueDescription: i32
=== Inputs ===
merge: v179 
values: i187 i189 i191 
=== Succesors ===
=== Usages ===
v185 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v179 values: i187 i189 i191  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v179 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v186 v188 v190 
=== Succesors ===
next: v185 
=== Usages ===
i183 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v186 v188 v190 #next: v185  <|@  <|@
f <@~|@floating>@ <|@
tid a182 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v185 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i183 
speculation: a182 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v179 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i183 speculation: a182  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i204 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: i204  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/ArrayList;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v211 v209 v210 ?11 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v209 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i204 v88 v143 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i204 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList.size
nodeSourcePosition: at java.util.ArrayList.rangeCheck(ArrayList.java:656) [bci: 2]
at java.util.ArrayList.remove(ArrayList.java:496) [bci: 2]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v209 
=== Succesors ===
next: v166 
=== Usages ===
v42 i15 i34 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v209 #next: v166  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 j198 v42 ?11 v213 i15 i24 v78 v127 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList.rangeCheck(ArrayList.java:656) [bci: 5]
at java.util.ArrayList.remove(ArrayList.java:496) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i204 
=== Succesors ===
=== Usages ===
v166 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i204  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<ArrayList.remove(int)>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: ArrayList.java
sourceLine: 496
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 - - 
=== Succesors ===
=== Usages ===
v185 i206 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.rangeCheck(ArrayList.java:656) [bci: 5]
at java.util.ArrayList.remove(ArrayList.java:496) [bci: 2]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v42 
=== Succesors ===
trueSuccessor: v163 
falseSuccessor: v165 
=== Usages ===
=== Predecessor ===
i204 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v42 #trueSuccessor: v163 #falseSuccessor: v165  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@72929bc2 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v163 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.rangeCheck(ArrayList.java:656) [bci: 5]
at java.util.ArrayList.remove(ArrayList.java:496) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: a205 
=== Usages ===
=== Predecessor ===
v166 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a205  <|@  <|@
f <@~|@floating>@ <|@
tid v211 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a205 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a205 <|@
result v3|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList.elementData
nodeSourcePosition: at java.util.ArrayList.elementData(ArrayList.java:422) [bci: 1]
at java.util.ArrayList.remove(ArrayList.java:499) [bci: 17]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v211 
=== Succesors ===
next: i206 
=== Usages ===
a72 v212 
=== Predecessor ===
v163 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v211 #next: i206  <|@  <|@
f <@~|@floating>@ <|@
tid v212 <|@
result [v3|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a205 
=== Succesors ===
=== Usages ===
i206 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a205  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i206 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.ArrayList.elementData(ArrayList.java:422) [bci: 5]
at java.util.ArrayList.remove(ArrayList.java:499) [bci: 17]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v212 
=== Succesors ===
next: v174 
=== Usages ===
v78 v145 i126 
=== Predecessor ===
a205 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v212 #next: v174  <|@  <|@
f <@~|@floating>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.ArrayList.elementData(ArrayList.java:422) [bci: 5]
at java.util.ArrayList.remove(ArrayList.java:499) [bci: 17]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i206 
=== Succesors ===
=== Usages ===
v174 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2 y: i206  <|@  <|@
f <@*|@fixed>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.elementData(ArrayList.java:422) [bci: 5]
at java.util.ArrayList.remove(ArrayList.java:499) [bci: 17]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v78 
=== Succesors ===
trueSuccessor: v171 
falseSuccessor: v173 
=== Usages ===
=== Predecessor ===
i206 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v78 #trueSuccessor: v171 #falseSuccessor: v173  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.remove(ArrayList.java:496) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction v4|DWORD = MOV [v3|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v4|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v171 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.elementData(ArrayList.java:422) [bci: 5]
at java.util.ArrayList.remove(ArrayList.java:499) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v178 
=== Usages ===
a208 
=== Predecessor ===
v174 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v178  <|@  <|@
f <@~|@floating>@ <|@
tid i16 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList.remove(ArrayList.java:501) [bci: 28]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i17 i34 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i34 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.ArrayList.remove(ArrayList.java:505) [bci: 60]
stamp: i32
=== Inputs ===
x: i204 
y: i16 
=== Succesors ===
=== Usages ===
v143 v145 v214 v88 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i204 y: i16  <|@  <|@
f <@~|@floating>@ <|@
tid v145 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.ArrayList.remove(ArrayList.java:505) [bci: 66]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i34 
y: i206 
=== Succesors ===
=== Usages ===
v178 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i34 y: i206  <|@  <|@
f <@*|@fixed>@ <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.remove(ArrayList.java:505) [bci: 66]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v145 
=== Succesors ===
trueSuccessor: v175 
falseSuccessor: v177 
=== Usages ===
=== Predecessor ===
v171 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v145 #trueSuccessor: v175 #falseSuccessor: v177  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = DEC v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v4|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v175 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.remove(ArrayList.java:505) [bci: 66]
stamp: void
=== Inputs ===
=== Succesors ===
next: i207 
=== Usages ===
v152 v98 
=== Predecessor ===
v178 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i207  <|@  <|@
f <@~|@floating>@ <|@
tid v210 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i207 v68 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i207 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.ArrayList.remove(ArrayList.java:498) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v210 
=== Succesors ===
next: v68 
=== Usages ===
i9 
=== Predecessor ===
v175 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v210 #next: v68  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList.remove(ArrayList.java:498) [bci: 10]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i9 v19 i24 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.ArrayList.remove(ArrayList.java:498) [bci: 11]
stamp: i32
=== Inputs ===
x: i207 
y: i8 
=== Succesors ===
=== Usages ===
v68 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i207 y: i8  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList.modCount
nodeSourcePosition: at java.util.ArrayList.remove(ArrayList.java:498) [bci: 12]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v210 
value: i9 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a208 
=== Usages ===
=== Predecessor ===
i207 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v210 value: i9 stateAfter: - lastLocationAccess: - #next: a208  <|@  <|@
f <@~|@floating>@ <|@
tid a72 <|@
result v8|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayList.elementData(ArrayList.java:422) [bci: 1]
at java.util.ArrayList.remove(ArrayList.java:499) [bci: 17]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a205 
=== Succesors ===
=== Usages ===
j197 v214 v213 j192 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a205  <|@  <|@
f <@~|@floating>@ <|@
tid v213 <|@
result [v8|QWORD[.] + v1|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a72 
index: i2 
=== Succesors ===
=== Usages ===
a208 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a72 index: i2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a208 <|@
result v9|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.ArrayList.elementData(ArrayList.java:422) [bci: 5]
at java.util.ArrayList.remove(ArrayList.java:499) [bci: 17]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v171 
address: v213 
=== Succesors ===
next: v22 
=== Usages ===
a87 
=== Predecessor ===
v68 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v171 address: v213 #next: v22  <|@  <|@
f <@~|@floating>@ <|@
tid a87 <|@
result v10|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayList.elementData(ArrayList.java:422) [bci: 5]
at java.util.ArrayList.remove(ArrayList.java:499) [bci: 17]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a208 
=== Succesors ===
=== Usages ===
v60 v40 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a208  <|@  <|@
f <@~|@floating>@ <|@
tid v214 <|@
result [v8|QWORD[.] + v5|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a72 
index: i34 
=== Succesors ===
=== Usages ===
v152 v98 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a72 index: i34  <|@  <|@
f <@~|@floating>@ <|@
tid i15 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.util.ArrayList.remove(ArrayList.java:501) [bci: 26]
stamp: i32
=== Inputs ===
x: i204 
y: i2 
=== Succesors ===
=== Usages ===
i17 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i204 y: i2  <|@  <|@
f <@~|@floating>@ <|@
tid i17 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.ArrayList.remove(ArrayList.java:501) [bci: 28]
stamp: i32
=== Inputs ===
x: i15 
y: i16 
=== Succesors ===
=== Usages ===
v19 j202 i126 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i15 y: i16  <|@  <|@
f <@~|@floating>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList.remove(ArrayList.java:502) [bci: 31]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i17 
y: i8 
=== Succesors ===
=== Usages ===
v22 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i17 y: i8  <|@  <|@
f <@~|@floating>@ <|@
tid a155 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList.remove(ArrayList.java:505) [bci: 66]
rawvalue: null
stableDimension: 0
stamp: n - NULL
stampKind: n -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v98 v152 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.remove(ArrayList.java:502) [bci: 31]
stamp: void
trueSuccessorProbability: 0.8668582258360336
=== Inputs ===
condition: v19 
=== Succesors ===
trueSuccessor: v20 
falseSuccessor: v21 
=== Usages ===
=== Predecessor ===
a208 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v19 #trueSuccessor: v20 #falseSuccessor: v21  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = ADD (x: v6|DWORD, ~y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@207359ed encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[.] = MOV [v8|QWORD[.] + v1|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@207359ed encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = SUB (x: v2|DWORD, ~y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = DEC v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v12|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8668582258360336 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4605983184310992836
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.remove(ArrayList.java:505) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v88 
=== Usages ===
=== Predecessor ===
v22 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v88  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ArrayList.size
nodeSourcePosition: at java.util.ArrayList.remove(ArrayList.java:505) [bci: 62]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v209 
value: i34 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v98 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v209 value: i34 stateAfter: - lastLocationAccess: - #next: v98  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at java.util.ArrayList.remove(ArrayList.java:505) [bci: 66]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v175 
address: v214 
value: a155 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v60 
=== Usages ===
=== Predecessor ===
v88 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v175 address: v214 value: a155 stateAfter: - lastLocationAccess: - #next: v60  <|@  <|@
f <@*|@fixed>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.remove(ArrayList.java:507) [bci: 68]
stamp: void
=== Inputs ===
result: a87 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v98 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a87 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v8|QWORD[.] + v5|DWORD * 4 + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4593964958246633712
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.remove(ArrayList.java:503) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v125 
=== Usages ===
=== Predecessor ===
v22 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v125  <|@  <|@
f <@~|@floating>@ <|@
tid i126 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.remove(ArrayList.java:503) [bci: 47]
stamp: i32
=== Inputs ===
x: i206 
y: i17 
=== Succesors ===
=== Usages ===
v127 v121 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i206 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid i24 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.ArrayList.remove(ArrayList.java:503) [bci: 40]
stamp: i32
=== Inputs ===
x: i2 
y: i8 
=== Succesors ===
=== Usages ===
j193 v121 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2 y: i8  <|@  <|@
f <@~|@floating>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.remove(ArrayList.java:503) [bci: 47]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i126 
y: i24 
=== Succesors ===
=== Usages ===
v125 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i126 y: i24  <|@  <|@
f <@*|@fixed>@ <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 77]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.remove(ArrayList.java:503) [bci: 47]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v121 
=== Succesors ===
trueSuccessor: v124 
falseSuccessor: v122 
=== Usages ===
=== Predecessor ===
v21 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v121 #trueSuccessor: v124 #falseSuccessor: v122  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = SUB (x: v4|DWORD, ~y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = INC v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v14|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4563782903482747766
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.remove(ArrayList.java:503) [bci: 47]
stamp: void
=== Inputs ===
=== Succesors ===
next: v123 
=== Usages ===
=== Predecessor ===
v125 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v123  <|@  <|@
f <@*|@fixed>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.remove(ArrayList.java:503) [bci: 47]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v111 
=== Predecessor ===
v124 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B10" 
    xhandlers
    flags 
    probability 4593916988867072729
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 80]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.remove(ArrayList.java:503) [bci: 47]
stamp: void
=== Inputs ===
=== Succesors ===
next: v131 
=== Usages ===
=== Predecessor ===
v125 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v131  <|@  <|@
f <@~|@floating>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.remove(ArrayList.java:503) [bci: 47]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i126 
y: i2 
=== Succesors ===
=== Usages ===
v131 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i126 y: i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.remove(ArrayList.java:503) [bci: 47]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v127 
=== Succesors ===
trueSuccessor: v130 
falseSuccessor: v128 
=== Usages ===
=== Predecessor ===
v122 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v127 #trueSuccessor: v130 #falseSuccessor: v128  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v1|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4563721502676909708
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.remove(ArrayList.java:503) [bci: 47]
stamp: void
=== Inputs ===
=== Succesors ===
next: v129 
=== Usages ===
=== Predecessor ===
v131 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v129  <|@  <|@
f <@*|@fixed>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.remove(ArrayList.java:503) [bci: 47]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v111 
=== Predecessor ===
v130 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors 
    xhandlers
    flags 
    probability 4568255802707199233
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.remove(ArrayList.java:503) [bci: 47]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v123 v129 
=== Succesors ===
next: v132 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v123 v129 #next: v132  <|@  <|@
tid ?11 <|@
d <@d|@=== Debug Properties ===
bci: 15
code: ResolvedJavaMethodBytecode<ArrayList.remove(int)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.ArrayList.remove(ArrayList.java:498) [bci: 12]
rethrowException: false
sourceFile: ArrayList.java
sourceLine: 499
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 - - 
=== Succesors ===
=== Usages ===
v132 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
nodeSourcePosition: at org.graalvm.compiler.nodes.DeoptimizeNode.deopt(DeoptimizationAction, DeoptimizationReason) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:263) [bci: 119]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.remove(ArrayList.java:503) [bci: 47]
reason: RuntimeConstraint
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?11 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v111 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?11  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -33889 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.remove(ArrayList.java:499) [bci: 15]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction DEOPT info [bci:15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 4593869499181307356
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.remove(ArrayList.java:503) [bci: 47]
stamp: void
=== Inputs ===
=== Succesors ===
next: j192 
=== Usages ===
=== Predecessor ===
v131 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j192  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j192 <|@
result v15|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.remove(ArrayList.java:503) [bci: 47]
stamp: i64
=== Inputs ===
object: a72 
=== Succesors ===
next: j197 
=== Usages ===
v215 
=== Predecessor ===
v128 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a72 #next: j197  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j197 <|@
result v16|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.remove(ArrayList.java:503) [bci: 47]
stamp: i64
=== Inputs ===
object: a72 
=== Succesors ===
next: v203 
=== Usages ===
v216 
=== Predecessor ===
j192 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a72 #next: v203  <|@  <|@
f <@~|@floating>@ <|@
tid j193 <|@
result v17|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.remove(ArrayList.java:503) [bci: 47]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i24 
=== Succesors ===
=== Usages ===
v215 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i24  <|@  <|@
f <@~|@floating>@ <|@
tid v215 <|@
result [v15|QWORD[*] + v17|QWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: j192 
index: j193 
=== Succesors ===
=== Usages ===
v203 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j192 index: j193  <|@  <|@
f <@~|@floating>@ <|@
tid j198 <|@
result v18|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.remove(ArrayList.java:503) [bci: 47]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i2 
=== Succesors ===
=== Usages ===
v216 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2  <|@  <|@
f <@~|@floating>@ <|@
tid v216 <|@
result [v16|QWORD[*] + v18|QWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: j197 
index: j198 
=== Succesors ===
=== Usages ===
v203 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j197 index: j198  <|@  <|@
f <@~|@floating>@ <|@
tid j202 <|@
result v19|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.remove(ArrayList.java:503) [bci: 47]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i17 
=== Succesors ===
=== Usages ===
v203 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i17  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v203 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: ObjectArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.remove(ArrayList.java:503) [bci: 47]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v215 v216 j202 
=== Succesors ===
next: v143 
=== Usages ===
=== Predecessor ===
j197 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v215 v216 j202 #next: v143  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ArrayList.size
nodeSourcePosition: at java.util.ArrayList.remove(ArrayList.java:505) [bci: 62]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v209 
value: i34 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v152 
=== Usages ===
=== Predecessor ===
v203 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v209 value: i34 stateAfter: - lastLocationAccess: - #next: v152  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v152 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at java.util.ArrayList.remove(ArrayList.java:505) [bci: 66]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v175 
address: v214 
value: a155 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v40 
=== Usages ===
=== Predecessor ===
v143 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v175 address: v214 value: a155 stateAfter: - lastLocationAccess: - #next: v40  <|@  <|@
f <@*|@fixed>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.remove(ArrayList.java:507) [bci: 68]
stamp: void
=== Inputs ===
result: a87 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v152 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a87 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[*] = MOVE v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[*] = MOVE v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOVSXD v14|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOVSXD v1|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOVSXD v12|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v15|QWORD[*] + v17|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v16|QWORD[*] + v18|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v19|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: ObjectArraycopy(Word,Word,Word)void@0x106813120:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v8|QWORD[.] + v5|DWORD * 4 + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B14" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v177 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.remove(ArrayList.java:505) [bci: 66]
stamp: void
=== Inputs ===
=== Succesors ===
next: v190 
=== Usages ===
=== Predecessor ===
v178 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v190  <|@  <|@
f <@~|@floating>@ <|@
tid i191 <|@
result int[-41499|0xffffffffffff5de5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -41499
stableDimension: 0
stamp: i32 [-41499] ⇊00000000ffff5de5 ⇈00000000ffff5de5
stampKind: i32
value: int[-41499|0xffffffffffff5de5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i183 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v179 
=== Predecessor ===
v177 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-41499|0xffffffffffff5de5]] destination: B11 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B14" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.elementData(ArrayList.java:422) [bci: 5]
at java.util.ArrayList.remove(ArrayList.java:499) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v188 
=== Usages ===
=== Predecessor ===
v174 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v188  <|@  <|@
f <@~|@floating>@ <|@
tid i189 <|@
result int[-20251|0xffffffffffffb0e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -20251
stableDimension: 0
stamp: i32 [-20251] ⇊00000000ffffb0e5 ⇈00000000ffffb0e5
stampKind: i32
value: int[-20251|0xffffffffffffb0e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i183 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v179 
=== Predecessor ===
v173 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-20251|0xffffffffffffb0e5]] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B14" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.rangeCheck(ArrayList.java:656) [bci: 5]
at java.util.ArrayList.remove(ArrayList.java:496) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v186 
=== Usages ===
=== Predecessor ===
v166 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v186  <|@  <|@
f <@~|@floating>@ <|@
tid i187 <|@
result int[-16403|0xffffffffffffbfed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16403
stableDimension: 0
stamp: i32 [-16403] ⇊00000000ffffbfed ⇈00000000ffffbfed
stampKind: i32
value: int[-16403|0xffffffffffffbfed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i183 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v179 
=== Predecessor ===
v165 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-16403|0xffffffffffffbfed]] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" "B11" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i183 <|@
result v20|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-41499 - -16403] ⇊00000000ffff10e5 ⇈00000000fffffffd
valueDescription: i32
=== Inputs ===
merge: v179 
values: i187 i189 i191 
=== Succesors ===
=== Usages ===
v185 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v179 values: i187 i189 i191  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v179 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v186 v188 v190 
=== Succesors ===
next: v185 
=== Usages ===
i183 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v186 v188 v190 #next: v185  <|@  <|@
f <@~|@floating>@ <|@
tid a182 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v185 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i183 
speculation: a182 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v179 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i183 speculation: a182  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v20|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.remove(ArrayList.java:496) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@72929bc2 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.remove(ArrayList.java:496) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction v4|DWORD = MOV [v3|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v4|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = DEC v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v4|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = ADD (x: v6|DWORD, ~y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@207359ed encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[.] = MOV [v8|QWORD[.] + v1|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@207359ed encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = SUB (x: v2|DWORD, ~y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = DEC v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v12|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8668582258360336 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4605983184310992836
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v8|QWORD[.] + v5|DWORD * 4 + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4593964958246633712
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = SUB (x: v4|DWORD, ~y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = INC v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v14|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B10" 
    xhandlers
    flags 
    probability 4593916988867072729
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v1|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 4593869499181307356
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[*] = MOVE v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[*] = MOVE v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOVSXD v14|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOVSXD v1|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOVSXD v12|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v15|QWORD[*] + v17|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v16|QWORD[*] + v18|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v19|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: ObjectArraycopy(Word,Word,Word)void@0x106813120:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v8|QWORD[.] + v5|DWORD * 4 + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4563782903482747766
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors 
    xhandlers
    flags 
    probability 4568255802707199233
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -33889 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.remove(ArrayList.java:499) [bci: 15]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction DEOPT info [bci:15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4563721502676909708
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B14" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-20251|0xffffffffffffb0e5]] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" "B11" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v20|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.remove(ArrayList.java:496) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B14" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-16403|0xffffffffffffbfed]] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B14" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-41499|0xffffffffffff5de5]] destination: B11 -> B14 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: invokespecial #26         // rangeCheck:(int)void
     5: aload_0       
     6: dup           
     7: getfield      #13         // java.util.AbstractList.modCount:int
    10: iconst_1      
    11: iadd          
    12: putfield      #13         // java.util.AbstractList.modCount:int
    15: aload_0       
    16: iload_1       
    17: invokevirtual #27         // elementData:(int)java.lang.Object
    20: astore_2      
    21: aload_0       
    22: getfield      #0          // size:int
    25: iload_1       
    26: isub          
    27: iconst_1      
    28: isub          
    29: istore_3      
    30: iload_3       
    31: ifle          50
    34: aload_0       
    35: getfield      #2          // elementData:java.lang.Object[]
    38: iload_1       
    39: iconst_1      
    40: iadd          
    41: aload_0       
    42: getfield      #2          // elementData:java.lang.Object[]
    45: iload_1       
    46: iload_3       
    47: invokestatic  #25         // java.lang.System.arraycopy:(java.lang.Object, int, java.lang.Object, int, int)void
    50: aload_0       
    51: getfield      #2          // elementData:java.lang.Object[]
    54: aload_0       
    55: dup           
    56: getfield      #0          // size:int
    59: iconst_1      
    60: isub          
    61: dup_x1        
    62: putfield      #0          // size:int
    65: aconst_null   
    66: aastore       
    67: aload_2       
    68: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@72929bc2 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction rax|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr    8  <|@ instruction CMP (x: rax|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr   10  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   14  <|@ instruction rdi|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   16  <|@ st <@st|@reference-map: [rsi:0, rdi:0]
live-base-pointers: []
java.util.ArrayList.remove(ArrayList.java:496) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - 
>@ <|@ instruction r10|DWORD = MOV [rdi|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   18  <|@ instruction CMP (x: r10|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr   20  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   24  <|@ instruction r11|DWORD = DEC rax|DWORD size: DWORD <|@ <|@
      nr   26  <|@ instruction CMP (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   34  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, ~y: [rsi|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   36  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr   38  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@207359ed encoding: base: 0 shift: 3 <|@ <|@
      nr   40  <|@ instruction r8|DWORD[.] = MOV [rdi|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   42  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@207359ed encoding: base: 0 shift: 3 <|@ <|@
      nr   44  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: rdx|DWORD) size: DWORD <|@ <|@
      nr   46  <|@ instruction rax|DWORD = DEC rax|DWORD size: DWORD <|@ <|@
      nr   48  <|@ instruction CMP rax|DWORD y: 1 size: DWORD <|@ <|@
      nr   50  <|@ instruction BRANCH trueDestinationProbability: 0.8668582258360336 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4605983184310992836
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r11|DWORD) size: DWORD <|@ <|@
      nr   56  <|@ instruction MOV (x: [rdi|QWORD[.] + r11|DWORD * 4 + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   58  <|@ instruction rax|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4593964958246633712
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr   66  <|@ instruction r9|DWORD = INC rdx|DWORD size: DWORD <|@ <|@
      nr   68  <|@ instruction CMP (x: r9|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   70  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B10" 
    xhandlers
    flags 
    probability 4593916988867072729
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   78  <|@ instruction CMP (x: rdx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 4593869499181307356
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ instruction stack:32|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   98  <|@ instruction stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction r10|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction rcx|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  106  <|@ instruction r9|QWORD = MOVSXD r9|DWORD size: QWORD <|@ <|@
      nr  108  <|@ instruction rdx|QWORD = MOVSXD rdx|DWORD size: QWORD <|@ <|@
      nr  110  <|@ instruction rbx|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr  112  <|@ instruction stack:56|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction rdi|QWORD = LEA [r10|QWORD[*] + r9|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr  116  <|@ instruction rsi|QWORD = LEA [rcx|QWORD[*] + rdx|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr  118  <|@ instruction rdx|QWORD = MOVE rbx|QWORD moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: ObjectArraycopy(Word,Word,Word)void@0x106813120:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  122  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction r11|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  126  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r11|DWORD) size: DWORD <|@ <|@
      nr  128  <|@ instruction rdi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  130  <|@ instruction MOV (x: [rdi|QWORD[.] + r11|DWORD * 4 + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  132  <|@ instruction rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4563782903482747766
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction JUMP ~[] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors 
    xhandlers
    flags 
    probability 4568255802707199233
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   88  <|@ instruction MOV [r15|QWORD + 668] y: -33889 size: DWORD <|@ <|@
      nr   90  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   92  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.ArrayList.remove(ArrayList.java:499) [bci: 15]
locals: rsi|QWORD[.] rdx|DWORD - - 
>@ <|@ instruction DEOPT info [bci:15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4563721502676909708
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   84  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B14" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  144  <|@ instruction r10|DWORD = MOVE input: int[-20251|0xffffffffffffb0e5] <|@ <|@
      nr  146  <|@ instruction JUMP ~[] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" "B11" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  156  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  158  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  160  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.ArrayList.remove(ArrayList.java:496) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B14" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  150  <|@ instruction r10|DWORD = MOVE input: int[-16403|0xffffffffffffbfed] <|@ <|@
      nr  152  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B14" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  138  <|@ instruction r10|DWORD = MOVE input: int[-41499|0xffffffffffff5de5] <|@ <|@
      nr  140  <|@ instruction JUMP ~[] destination: B11 -> B14 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: invokespecial #26         // rangeCheck:(int)void
     5: aload_0       
     6: dup           
     7: getfield      #13         // java.util.AbstractList.modCount:int
    10: iconst_1      
    11: iadd          
    12: putfield      #13         // java.util.AbstractList.modCount:int
    15: aload_0       
    16: iload_1       
    17: invokevirtual #27         // elementData:(int)java.lang.Object
    20: astore_2      
    21: aload_0       
    22: getfield      #0          // size:int
    25: iload_1       
    26: isub          
    27: iconst_1      
    28: isub          
    29: istore_3      
    30: iload_3       
    31: ifle          50
    34: aload_0       
    35: getfield      #2          // elementData:java.lang.Object[]
    38: iload_1       
    39: iconst_1      
    40: iadd          
    41: aload_0       
    42: getfield      #2          // elementData:java.lang.Object[]
    45: iload_1       
    46: iload_3       
    47: invokestatic  #25         // java.lang.System.arraycopy:(java.lang.Object, int, java.lang.Object, int, int)void
    50: aload_0       
    51: getfield      #2          // elementData:java.lang.Object[]
    54: aload_0       
    55: dup           
    56: getfield      #0          // size:int
    59: iconst_1      
    60: isub          
    61: dup_x1        
    62: putfield      #0          // size:int
    65: aconst_null   
    66: aastore       
    67: aload_2       
    68: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@72929bc2 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction rax|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr    8  <|@ instruction CMP (x: rax|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr   10  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   14  <|@ instruction rdi|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   16  <|@ st <@st|@reference-map: [rsi:0, rdi:0]
live-base-pointers: []
java.util.ArrayList.remove(ArrayList.java:496) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - 
>@ <|@ instruction r10|DWORD = MOV [rdi|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   18  <|@ instruction CMP (x: r10|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr   20  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   24  <|@ instruction r11|DWORD = DEC rax|DWORD size: DWORD <|@ <|@
      nr   26  <|@ instruction CMP (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   34  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, ~y: [rsi|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   36  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr   38  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@207359ed encoding: base: 0 shift: 3 <|@ <|@
      nr   40  <|@ instruction r8|DWORD[.] = MOV [rdi|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   42  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@207359ed encoding: base: 0 shift: 3 <|@ <|@
      nr   44  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: rdx|DWORD) size: DWORD <|@ <|@
      nr   46  <|@ instruction rax|DWORD = DEC rax|DWORD size: DWORD <|@ <|@
      nr   48  <|@ instruction CMP rax|DWORD y: 1 size: DWORD <|@ <|@
      nr   50  <|@ instruction BRANCH trueDestinationProbability: 0.8668582258360336 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4605983184310992836
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r11|DWORD) size: DWORD <|@ <|@
      nr   56  <|@ instruction MOV (x: [rdi|QWORD[.] + r11|DWORD * 4 + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   58  <|@ instruction rax|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" "B7" 
    xhandlers
    flags 
    probability 4593964958246633712
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr   66  <|@ instruction r9|DWORD = INC rdx|DWORD size: DWORD <|@ <|@
      nr   68  <|@ instruction CMP (x: r9|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   70  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B5 -> B9 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4593916988867072729
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   78  <|@ instruction CMP (x: rdx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B7 -> B9 falseDestination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 4593869499181307356
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ instruction stack:32|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   98  <|@ instruction stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction r10|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction rcx|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  106  <|@ instruction r9|QWORD = MOVSXD r9|DWORD size: QWORD <|@ <|@
      nr  108  <|@ instruction rdx|QWORD = MOVSXD rdx|DWORD size: QWORD <|@ <|@
      nr  110  <|@ instruction rbx|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr  112  <|@ instruction stack:56|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction rdi|QWORD = LEA [r10|QWORD[*] + r9|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr  116  <|@ instruction rsi|QWORD = LEA [rcx|QWORD[*] + rdx|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr  118  <|@ instruction rdx|QWORD = MOVE rbx|QWORD moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: ObjectArraycopy(Word,Word,Word)void@0x106813120:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  122  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction r11|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  126  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r11|DWORD) size: DWORD <|@ <|@
      nr  128  <|@ instruction rdi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  130  <|@ instruction MOV (x: [rdi|QWORD[.] + r11|DWORD * 4 + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  132  <|@ instruction rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors 
    xhandlers
    flags 
    probability 4568255802707199233
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   88  <|@ instruction MOV [r15|QWORD + 668] y: -33889 size: DWORD <|@ <|@
      nr   90  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   92  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.ArrayList.remove(ArrayList.java:499) [bci: 15]
locals: rsi|QWORD[.] rdx|DWORD - - 
>@ <|@ instruction DEOPT info [bci:15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B14" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  144  <|@ instruction r10|DWORD = MOVE input: int[-20251|0xffffffffffffb0e5] <|@ <|@
      nr  146  <|@ instruction JUMP ~[] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" "B11" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  156  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  158  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  160  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.ArrayList.remove(ArrayList.java:496) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B14" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  150  <|@ instruction r10|DWORD = MOVE input: int[-16403|0xffffffffffffbfed] <|@ <|@
      nr  152  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B14" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  138  <|@ instruction r10|DWORD = MOVE input: int[-41499|0xffffffffffff5de5] <|@ <|@
      nr  140  <|@ instruction JUMP ~[] destination: B11 -> B14 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: invokespecial #26         // rangeCheck:(int)void
     5: aload_0       
     6: dup           
     7: getfield      #13         // java.util.AbstractList.modCount:int
    10: iconst_1      
    11: iadd          
    12: putfield      #13         // java.util.AbstractList.modCount:int
    15: aload_0       
    16: iload_1       
    17: invokevirtual #27         // elementData:(int)java.lang.Object
    20: astore_2      
    21: aload_0       
    22: getfield      #0          // size:int
    25: iload_1       
    26: isub          
    27: iconst_1      
    28: isub          
    29: istore_3      
    30: iload_3       
    31: ifle          50
    34: aload_0       
    35: getfield      #2          // elementData:java.lang.Object[]
    38: iload_1       
    39: iconst_1      
    40: iadd          
    41: aload_0       
    42: getfield      #2          // elementData:java.lang.Object[]
    45: iload_1       
    46: iload_3       
    47: invokestatic  #25         // java.lang.System.arraycopy:(java.lang.Object, int, java.lang.Object, int, int)void
    50: aload_0       
    51: getfield      #2          // elementData:java.lang.Object[]
    54: aload_0       
    55: dup           
    56: getfield      #0          // size:int
    59: iconst_1      
    60: isub          
    61: dup_x1        
    62: putfield      #0          // size:int
    65: aconst_null   
    66: aastore       
    67: aload_2       
    68: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec3848896c24308b46103bc20f8e1d0100008b7e14448b14fd0c000000443bd20f86ef000000448bd841ffcb453bd30f860201000041b8010000004403460c4489460c48c1e703448b44971049c1e0032bc2ffc883f8010f8d1f00000044895e104689649f10498bc0488b6c24304883c438850500000000c5f877c3442bd0448bca41ffc1453bca0f8f6f000000413bd20f8f660000004c8944242044895c241c48897424104c8bd7488bcf4d63c94863d24863d848897c24084b8d7c8a10488d749110488bd3e80000000090488b742410448b5c241c44895e10488b7c24084689649f10488b442420488b6c24304883c438850500000000c5f877c341c7879c0200009f7bffff4d89a7a8020000e8000000009041bae5b0ffff4589979c0200004d89a7a8020000e8000000009041baedbfffffebe441bae55dffffebdce80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@72929bc2 slotKind: QWORD  <||@
  Comment 48 6 rax|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 51 8 CMP (x: rax|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 53 10 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B13  <||@
  Comment 59 block B1 null  <||@
  Comment 59 12 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 59 14 rdi|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 62 16 r10|DWORD = MOV [rdi|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 62 [rsi:0, rdi:0]at java.util.ArrayList.remove(ArrayList.java:496) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2  |3 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |-  |-   <||@
  Comment 62 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 70 18 CMP (x: r10|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 73 20 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B12  <||@
  Comment 79 block B2 null  <||@
  Comment 79 22 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 79 24 r11|DWORD = DEC rax|DWORD size: DWORD  <||@
  Comment 85 26 CMP (x: r10|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 88 28 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B11  <||@
  Comment 94 block B3 null  <||@
  Comment 94 30 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 94 32 r8|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 100 34 r8|DWORD = ADD (x: r8|DWORD, ~y: [rsi|QWORD[.] + 12]) size: DWORD  <||@
  Comment 104 36 MOV (x: [rsi|QWORD[.] + 12], y: r8|DWORD) size: DWORD  <||@
  Comment 108 38 rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@207359ed encoding: base: 0 shift: 3  <||@
  Comment 112 40 r8|DWORD[.] = MOV [rdi|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 117 42 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@207359ed encoding: base: 0 shift: 3  <||@
  Comment 121 44 rax|DWORD = SUB (x: rax|DWORD, ~y: rdx|DWORD) size: DWORD  <||@
  Comment 123 46 rax|DWORD = DEC rax|DWORD size: DWORD  <||@
  Comment 125 48 CMP rax|DWORD y: 1 size: DWORD  <||@
  Comment 128 50 BRANCH trueDestinationProbability: 0.8668582258360336 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5  <||@
  Comment 134 block B4 null  <||@
  Comment 134 52 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 134 54 MOV (x: [rsi|QWORD[.] + 16], y: r11|DWORD) size: DWORD  <||@
  Comment 138 56 MOV (x: [rdi|QWORD[.] + r11|DWORD * 4 + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 143 58 rax|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 146 60 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 155 12  <||@
  Comment 165 block B5 null  <||@
  Comment 165 62 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 165 64 r10|DWORD = SUB (x: r10|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 168 66 r9|DWORD = INC rdx|DWORD size: DWORD  <||@
  Comment 174 68 CMP (x: r9|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 177 70 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B5 -> B9 falseDestination: B5 -> B7  <||@
  Comment 183 block B7 null  <||@
  Comment 183 76 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 183 78 CMP (x: rdx|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 186 80 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B7 -> B9 falseDestination: B7 -> B10  <||@
  Comment 192 block B10 null  <||@
  Comment 192 94 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 192 96 stack:32|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 197 98 stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 202 100 stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 207 102 r10|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 210 104 rcx|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 213 106 r9|QWORD = MOVSXD r9|DWORD size: QWORD  <||@
  Comment 216 108 rdx|QWORD = MOVSXD rdx|DWORD size: QWORD  <||@
  Comment 219 110 rbx|QWORD = MOVSXD rax|DWORD size: QWORD  <||@
  Comment 222 112 stack:56|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 227 114 rdi|QWORD = LEA [r10|QWORD[*] + r9|QWORD * 4 + 16] size: QWORD  <||@
  Comment 232 116 rsi|QWORD = LEA [rcx|QWORD[*] + rdx|QWORD * 4 + 16] size: QWORD  <||@
  Comment 237 118 rdx|QWORD = MOVE rbx|QWORD moveKind: QWORD  <||@
  Comment 240 120 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: ObjectArraycopy(Word,Word,Word)void@0x106813120:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 240 {Field[name=StubRoutines::_oop_arraycopy, type=address, offset=0, address=0x105a7dc90, value=0x106813120]:0x106813120}  <||@
  Comment 246 122 rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 251 124 r11|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 256 126 MOV (x: [rsi|QWORD[.] + 16], y: r11|DWORD) size: DWORD  <||@
  Comment 260 128 rdi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 265 130 MOV (x: [rdi|QWORD[.] + r11|DWORD * 4 + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 270 132 rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 275 134 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 284 12  <||@
  Comment 294 block B9 null  <||@
  Comment 294 86 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 294 88 MOV [r15|QWORD + 668] y: -33889 size: DWORD  <||@
  Comment 305 90 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 312 92 DEOPT info [bci:15]  <||@
  Comment 312 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 317 [rsi:0]at java.util.ArrayList.remove(ArrayList.java:499) [bci: 15, duringCall: false, rethrow: false]
              |0             |1          |2  |3 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |-  |-   <||@
  Comment 318 block B12 null  <||@
  Comment 318 142 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 318 144 r10|DWORD = MOVE input: int[-20251|0xffffffffffffb0e5]  <||@
  Comment 324 146 JUMP ~[] destination: B12 -> B14  <||@
  Comment 324 block B14 null  <||@
  Comment 324 154 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 324 156 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 331 158 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 338 160 DEOPT info [bci:0]  <||@
  Comment 338 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 343 [rsi:0]at java.util.ArrayList.remove(ArrayList.java:496) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2  |3 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |-  |-   <||@
  Comment 344 block B13 null  <||@
  Comment 344 148 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 344 150 r10|DWORD = MOVE input: int[-16403|0xffffffffffffbfed]  <||@
  Comment 350 152 JUMP ~[] destination: B13 -> B14  <||@
  Comment 352 block B11 null  <||@
  Comment 352 136 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 352 138 r10|DWORD = MOVE input: int[-41499|0xffffffffffff5de5]  <||@
  Comment 358 140 JUMP ~[] destination: B11 -> B14  <||@
  Comment 360 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 360 4  <||@
  Comment 366 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 366 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-8757[java.util.ArrayList.remove(int)]"
  method "HotSpotCompilation-8757[java.util.ArrayList.remove(int)]"
  date 1527005197638
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 106b938a0 448b560849c1e203493bc20f85af25c7ff900f1f80000000000f1f800000000089842400c0feff4883ec3848896c24308b46103bc20f8e1d0100008b7e14448b14fd0c000000443bd20f86ef000000448bd841ffcb453bd30f860201000041b8010000004403460c4489460c48c1e703448b44971049c1e0032bc2ffc883f8010f8d1f00000044895e104689649f10498bc0488b6c24304883c4388505c5b6cffdc5f877c3442bd0448bca41ffc1453bca0f8f6f000000413bd20f8f660000004c8944242044895c241c48897424104c8bd7488bcf4d63c94863d24863d848897c24084b8d7c8a10488d749110488bd3e88bf7c7ff90488b742410448b5c241c44895e10488b7c24084689649f10488b442420488b6c24304883c438850544b6cffdc5f877c341c7879c0200009f7bffff4d89a7a8020000e8213cc7ff9041bae5b0ffff4589979c0200004d89a7a8020000e8073cc7ff9041baedbfffffebe441bae55dffffebdce8136c0b0090e8ed3ac7ff90f4f4f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@72929bc2 slotKind: QWORD  <||@
  Comment 48 6 rax|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 51 8 CMP (x: rax|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 53 10 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B13  <||@
  Comment 59 block B1 null  <||@
  Comment 59 12 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 59 14 rdi|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 62 16 r10|DWORD = MOV [rdi|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 62 [rsi:0, rdi:0]at java.util.ArrayList.remove(ArrayList.java:496) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2  |3 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |-  |-   <||@
  Comment 62 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 70 18 CMP (x: r10|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 73 20 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B12  <||@
  Comment 79 block B2 null  <||@
  Comment 79 22 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 79 24 r11|DWORD = DEC rax|DWORD size: DWORD  <||@
  Comment 85 26 CMP (x: r10|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 88 28 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B11  <||@
  Comment 94 block B3 null  <||@
  Comment 94 30 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 94 32 r8|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 100 34 r8|DWORD = ADD (x: r8|DWORD, ~y: [rsi|QWORD[.] + 12]) size: DWORD  <||@
  Comment 104 36 MOV (x: [rsi|QWORD[.] + 12], y: r8|DWORD) size: DWORD  <||@
  Comment 108 38 rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@207359ed encoding: base: 0 shift: 3  <||@
  Comment 112 40 r8|DWORD[.] = MOV [rdi|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 117 42 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@207359ed encoding: base: 0 shift: 3  <||@
  Comment 121 44 rax|DWORD = SUB (x: rax|DWORD, ~y: rdx|DWORD) size: DWORD  <||@
  Comment 123 46 rax|DWORD = DEC rax|DWORD size: DWORD  <||@
  Comment 125 48 CMP rax|DWORD y: 1 size: DWORD  <||@
  Comment 128 50 BRANCH trueDestinationProbability: 0.8668582258360336 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5  <||@
  Comment 134 block B4 null  <||@
  Comment 134 52 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 134 54 MOV (x: [rsi|QWORD[.] + 16], y: r11|DWORD) size: DWORD  <||@
  Comment 138 56 MOV (x: [rdi|QWORD[.] + r11|DWORD * 4 + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 143 58 rax|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 146 60 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 155 12  <||@
  Comment 165 block B5 null  <||@
  Comment 165 62 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 165 64 r10|DWORD = SUB (x: r10|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 168 66 r9|DWORD = INC rdx|DWORD size: DWORD  <||@
  Comment 174 68 CMP (x: r9|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 177 70 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B5 -> B9 falseDestination: B5 -> B7  <||@
  Comment 183 block B7 null  <||@
  Comment 183 76 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 183 78 CMP (x: rdx|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 186 80 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B7 -> B9 falseDestination: B7 -> B10  <||@
  Comment 192 block B10 null  <||@
  Comment 192 94 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 192 96 stack:32|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 197 98 stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 202 100 stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 207 102 r10|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 210 104 rcx|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 213 106 r9|QWORD = MOVSXD r9|DWORD size: QWORD  <||@
  Comment 216 108 rdx|QWORD = MOVSXD rdx|DWORD size: QWORD  <||@
  Comment 219 110 rbx|QWORD = MOVSXD rax|DWORD size: QWORD  <||@
  Comment 222 112 stack:56|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 227 114 rdi|QWORD = LEA [r10|QWORD[*] + r9|QWORD * 4 + 16] size: QWORD  <||@
  Comment 232 116 rsi|QWORD = LEA [rcx|QWORD[*] + rdx|QWORD * 4 + 16] size: QWORD  <||@
  Comment 237 118 rdx|QWORD = MOVE rbx|QWORD moveKind: QWORD  <||@
  Comment 240 120 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: ObjectArraycopy(Word,Word,Word)void@0x106813120:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 240 {Field[name=StubRoutines::_oop_arraycopy, type=address, offset=0, address=0x105a7dc90, value=0x106813120]:0x106813120}  <||@
  Comment 246 122 rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 251 124 r11|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 256 126 MOV (x: [rsi|QWORD[.] + 16], y: r11|DWORD) size: DWORD  <||@
  Comment 260 128 rdi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 265 130 MOV (x: [rdi|QWORD[.] + r11|DWORD * 4 + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 270 132 rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 275 134 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 284 12  <||@
  Comment 294 block B9 null  <||@
  Comment 294 86 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 294 88 MOV [r15|QWORD + 668] y: -33889 size: DWORD  <||@
  Comment 305 90 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 312 92 DEOPT info [bci:15]  <||@
  Comment 312 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 317 [rsi:0]at java.util.ArrayList.remove(ArrayList.java:499) [bci: 15, duringCall: false, rethrow: false]
              |0             |1          |2  |3 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |-  |-   <||@
  Comment 318 block B12 null  <||@
  Comment 318 142 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 318 144 r10|DWORD = MOVE input: int[-20251|0xffffffffffffb0e5]  <||@
  Comment 324 146 JUMP ~[] destination: B12 -> B14  <||@
  Comment 324 block B14 null  <||@
  Comment 324 154 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 324 156 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 331 158 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 338 160 DEOPT info [bci:0]  <||@
  Comment 338 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 343 [rsi:0]at java.util.ArrayList.remove(ArrayList.java:496) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2  |3 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |-  |-   <||@
  Comment 344 block B13 null  <||@
  Comment 344 148 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 344 150 r10|DWORD = MOVE input: int[-16403|0xffffffffffffbfed]  <||@
  Comment 350 152 JUMP ~[] destination: B13 -> B14  <||@
  Comment 352 block B11 null  <||@
  Comment 352 136 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 352 138 r10|DWORD = MOVE input: int[-41499|0xffffffffffff5de5]  <||@
  Comment 358 140 JUMP ~[] destination: B11 -> B14  <||@
  Comment 360 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 360 4  <||@
  Comment 366 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 366 5  <||@
  HexCodeFile>>> <|@
end_nmethod
