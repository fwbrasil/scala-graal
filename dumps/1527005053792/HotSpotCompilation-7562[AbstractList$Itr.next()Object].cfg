begin_compilation
  name " HotSpotCompilation-7562[java.util.AbstractList$Itr.next()]"
  method "HotSpotCompilation-7562[java.util.AbstractList$Itr.next()]"
  date 1527005185856
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a248 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a248  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! Ljava/util/AbstractList$Itr;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v259 v261 v262 v266 ?222 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v259 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a248 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a248 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList$Itr.this$0
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 1]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
nullCheck: false
stamp: n Ljava/util/AbstractList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v259 
=== Succesors ===
next: i249 
=== Usages ===
a87 v270 v260 v263 v267 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v259 #next: i249  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<AbstractList$Itr.next()>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 355
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - 
=== Succesors ===
=== Usages ===
v229 i249 i254 i257 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - -  <|@  <|@
f <@~|@floating>@ <|@
tid v260 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a248 
=== Succesors ===
=== Usages ===
i249 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a248  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i249 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 4]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v260 
=== Succesors ===
next: i250 
=== Usages ===
v21 
=== Predecessor ===
a248 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v260 #next: i250  <|@  <|@
f <@~|@floating>@ <|@
tid v261 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i250 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i250 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList$Itr.expectedModCount
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 8]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v261 
=== Succesors ===
next: v165 
=== Usages ===
v21 
=== Predecessor ===
i249 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v261 #next: v165  <|@  <|@
f <@~|@floating>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 11]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i249 
y: i250 
=== Succesors ===
=== Usages ===
v165 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i249 y: i250  <|@  <|@
f <@*|@fixed>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 11]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v21 
=== Succesors ===
trueSuccessor: v162 
falseSuccessor: v164 
=== Usages ===
=== Predecessor ===
i250 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v21 #trueSuccessor: v162 #falseSuccessor: v164  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 11]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v251 
=== Usages ===
=== Predecessor ===
v165 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v251  <|@  <|@
f <@~|@floating>@ <|@
tid v270 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a248 
=== Succesors ===
=== Usages ===
v251 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a248  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v251 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v270 
=== Succesors ===
next: i252 
=== Usages ===
v247 v245 
=== Predecessor ===
v162 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v270 #next: i252  <|@  <|@
f <@~|@floating>@ <|@
tid v262 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i252 v122 v142 v145 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i252 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList$Itr.cursor
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:357) [bci: 5]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v262 
=== Succesors ===
next: v38 
=== Usages ===
v143 ?222 v144 v132 i14 v141 v269 v265 v121 v110 
=== Predecessor ===
v251 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v262 #next: v38  <|@  <|@
f <@~|@floating>@ <|@
tid i13 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:360) [bci: 25]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i14 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i14 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:360) [bci: 26]
stamp: i32
=== Inputs ===
x: i252 
y: i13 
=== Succesors ===
=== Usages ===
v145 v122 v142 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i252 y: i13  <|@  <|@
f <@~|@floating>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
rawvalue: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v245 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v251 
y: v244 
=== Succesors ===
=== Usages ===
v38 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v251 y: v244  <|@  <|@
f <@~|@floating>@ <|@
tid v266 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v121 v141 v144 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=get target_method_class=Ljava/util/Arrays$ArrayList; position=at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
stamp: void
trueSuccessorProbability: 0.9304496688887071
=== Inputs ===
condition: v245 
=== Succesors ===
trueSuccessor: v31 
falseSuccessor: v37 
=== Usages ===
=== Predecessor ===
i252 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v245 #trueSuccessor: v31 #falseSuccessor: v37  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606555965109464781
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=get target_method_class=Ljava/util/Arrays$ArrayList; position=at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: a253 
=== Usages ===
=== Predecessor ===
v38 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a253  <|@  <|@
f <@~|@floating>@ <|@
tid v263 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a248 
=== Succesors ===
=== Usages ===
a253 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a248  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a253 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Arrays$ArrayList.a
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 1]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v263 
=== Succesors ===
next: i254 
=== Usages ===
a104 v264 
=== Predecessor ===
v31 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v263 #next: i254  <|@  <|@
f <@~|@floating>@ <|@
tid v264 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a253 
=== Succesors ===
=== Usages ===
i254 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a253  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i254 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v264 
=== Succesors ===
next: v173 
=== Usages ===
v110 
=== Predecessor ===
a253 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v264 #next: v173  <|@  <|@
f <@~|@floating>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i252 
y: i254 
=== Succesors ===
=== Usages ===
v173 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i252 y: i254  <|@  <|@
f <@*|@fixed>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v110 
=== Succesors ===
trueSuccessor: v170 
falseSuccessor: v172 
=== Usages ===
=== Predecessor ===
i254 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v110 #trueSuccessor: v170 #falseSuccessor: v172  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4606555965109464781
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v121 
=== Usages ===
a255 
=== Predecessor ===
v173 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v121  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList$Itr.lastRet
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:359) [bci: 20]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v266 
value: i252 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v122 
=== Usages ===
=== Predecessor ===
v170 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v266 value: i252 stateAfter: - lastLocationAccess: - #next: v122  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList$Itr.cursor
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:360) [bci: 27]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v262 
value: i14 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a255 
=== Usages ===
=== Predecessor ===
v121 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v262 value: i14 stateAfter: - lastLocationAccess: - #next: a255  <|@  <|@
f <@~|@floating>@ <|@
tid a104 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 1]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a253 
=== Succesors ===
=== Usages ===
v265 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a253  <|@  <|@
f <@~|@floating>@ <|@
tid v265 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a104 
index: i252 
=== Succesors ===
=== Usages ===
a255 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a104 index: i252  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a255 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v170 
address: v265 
=== Succesors ===
next: v71 
=== Usages ===
a119 
=== Predecessor ===
v122 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v170 address: v265 #next: v71  <|@  <|@
f <@~|@floating>@ <|@
tid a119 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a255 
=== Succesors ===
=== Usages ===
v71 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a255  <|@  <|@
f <@*|@fixed>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a119 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a255 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a119 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v172 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v236 
=== Usages ===
=== Predecessor ===
v173 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v236  <|@  <|@
f <@~|@floating>@ <|@
tid i237 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -28443
stableDimension: 0
stamp: i32 [-28443] ⇊00000000ffff90e5 ⇈00000000ffff90e5
stampKind: i32
value: int[-28443|0xffffffffffff90e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i227 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v236 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v223 
=== Predecessor ===
v172 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4589676050187585944
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v47 
=== Usages ===
=== Predecessor ===
v38 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v47  <|@  <|@
f <@~|@floating>@ <|@
tid v246 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
rawvalue: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v247 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v247 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v251 
y: v246 
=== Succesors ===
=== Usages ===
v47 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v251 y: v246  <|@  <|@
f <@*|@fixed>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=get target_method_class=Lorg/graalvm/compiler/graph/NodeList; position=at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
stamp: void
trueSuccessorProbability: 0.9931436112226744
=== Inputs ===
condition: v247 
=== Succesors ===
trueSuccessor: v43 
falseSuccessor: v46 
=== Usages ===
=== Predecessor ===
v37 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v247 #trueSuccessor: v43 #falseSuccessor: v46  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4589641688507158590
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=get target_method_class=Lorg/graalvm/compiler/graph/NodeList; position=at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: a256 
=== Usages ===
=== Predecessor ===
v47 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a256  <|@  <|@
f <@~|@floating>@ <|@
tid v267 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a248 
=== Succesors ===
=== Usages ===
a256 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a248  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a256 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: NodeList.nodes
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 23]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
nullCheck: false
stamp: n [Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v267 
=== Succesors ===
next: i257 
=== Usages ===
a126 v268 
=== Predecessor ===
v43 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v267 #next: i257  <|@  <|@
f <@~|@floating>@ <|@
tid v268 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a256 
=== Succesors ===
=== Usages ===
i257 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a256  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i257 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v268 
=== Succesors ===
next: v181 
=== Usages ===
v132 
=== Predecessor ===
a256 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v268 #next: v181  <|@  <|@
f <@~|@floating>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i252 
y: i257 
=== Succesors ===
=== Usages ===
v181 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i252 y: i257  <|@  <|@
f <@*|@fixed>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v132 
=== Succesors ===
trueSuccessor: v178 
falseSuccessor: v180 
=== Usages ===
=== Predecessor ===
i257 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v132 #trueSuccessor: v178 #falseSuccessor: v180  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4589641688507158590
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v141 
=== Usages ===
a258 
=== Predecessor ===
v181 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v141  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList$Itr.lastRet
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:359) [bci: 20]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v266 
value: i252 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v142 
=== Usages ===
=== Predecessor ===
v178 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v266 value: i252 stateAfter: - lastLocationAccess: - #next: v142  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList$Itr.cursor
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:360) [bci: 27]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v262 
value: i14 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a258 
=== Usages ===
=== Predecessor ===
v141 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v262 value: i14 stateAfter: - lastLocationAccess: - #next: a258  <|@  <|@
f <@~|@floating>@ <|@
tid a126 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 23]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
op: Uncompress
stamp: a [Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
value: a256 
=== Succesors ===
=== Usages ===
v269 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a256  <|@  <|@
f <@~|@floating>@ <|@
tid v269 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a126 
index: i252 
=== Succesors ===
=== Usages ===
a258 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a126 index: i252  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a258 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
nullCheck: false
stamp: n Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
stateBefore: - 
guard: v178 
address: v269 
=== Succesors ===
next: v83 
=== Usages ===
a140 
=== Predecessor ===
v142 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v178 address: v269 #next: v83  <|@  <|@
f <@~|@floating>@ <|@
tid a140 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
op: Uncompress
stamp: a Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
value: a258 
=== Succesors ===
=== Usages ===
v83 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a258  <|@  <|@
f <@*|@fixed>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a140 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a258 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a140 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v238 
=== Usages ===
=== Predecessor ===
v181 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v238  <|@  <|@
f <@~|@floating>@ <|@
tid i239 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -34075
stableDimension: 0
stamp: i32 [-34075] ⇊00000000ffff7ae5 ⇈00000000ffff7ae5
stampKind: i32
value: int[-34075|0xffffffffffff7ae5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i227 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v223 
=== Predecessor ===
v180 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 4557432213833603606
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: a9 
=== Usages ===
=== Predecessor ===
v47 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a9  <|@  <|@
f <@~|@floating>@ <|@
tid a87 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 1]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
op: Uncompress
stamp: a Ljava/util/AbstractList;
=== Inputs ===
value: a248 
=== Succesors ===
=== Usages ===
v143 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a248  <|@  <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
returnStamp: a Ljava/lang/Object;
signature: [Ljdk.vm.ci.meta.JavaType;@2c2e8ccc
stamp: void
targetMethod: HotSpotMethod<AbstractList.get(int)>
=== Inputs ===
arguments: a87 i252 
=== Succesors ===
=== Usages ===
a9 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a87 i252  <|@  <|@
tid ?222 <|@
d <@d|@=== Debug Properties ===
bci: 14
code: ResolvedJavaMethodBytecode<AbstractList$Itr.next()>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 358
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i252 - 
=== Succesors ===
=== Usages ===
a9 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i252 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a9 <|@
d <@d|@=== Debug Properties ===
bci: 14
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
polymorphic: false
stamp: a Ljava/lang/Object;
targetMethod: Direct#AbstractList.get
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v143 
stateDuring: ?222 
=== Succesors ===
next: v144 
=== Usages ===
v82 
=== Predecessor ===
v46 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v143 stateDuring: ?222 #next: v144  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v144 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList$Itr.lastRet
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:359) [bci: 20]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v266 
value: i252 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v145 
=== Usages ===
=== Predecessor ===
a9 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v266 value: i252 stateAfter: - lastLocationAccess: - #next: v145  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v145 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList$Itr.cursor
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:360) [bci: 27]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v262 
value: i14 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v82 
=== Usages ===
=== Predecessor ===
v144 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v262 value: i14 stateAfter: - lastLocationAccess: - #next: v82  <|@  <|@
f <@*|@fixed>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a9 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v145 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a9 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 11]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v232 
=== Usages ===
=== Predecessor ===
v165 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v232  <|@  <|@
f <@~|@floating>@ <|@
tid i233 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -24851
stableDimension: 0
stamp: i32 [-24851] ⇊00000000ffff9eed ⇈00000000ffff9eed
stampKind: i32
value: int[-24851|0xffffffffffff9eed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i227 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v232 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v223 
=== Predecessor ===
v164 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B4" "B8" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i227 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-34075 - -24851] ⇊00000000ffff10e5 ⇈00000000fffffffd
valueDescription: i32
=== Inputs ===
merge: v223 
values: i233 i237 i239 
=== Succesors ===
=== Usages ===
v229 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v223 values: i233 i237 i239  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v223 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v232 v236 v238 
=== Succesors ===
next: v229 
=== Usages ===
i227 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v232 v236 v238 #next: v229  <|@  <|@
f <@~|@floating>@ <|@
tid a226 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v229 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v229 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2 
actionAndReason: i227 
speculation: a226 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v223 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2 actionAndReason: i227 speculation: a226  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a248 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a248  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! Ljava/util/AbstractList$Itr;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v259 v261 v262 v266 ?222 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v259 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a248 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a248 <|@
result v1|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList$Itr.this$0
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 1]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
nullCheck: false
stamp: n Ljava/util/AbstractList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v259 
=== Succesors ===
next: i249 
=== Usages ===
a87 v270 v260 v263 v267 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v259 #next: i249  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<AbstractList$Itr.next()>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 355
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - 
=== Succesors ===
=== Usages ===
v229 i249 i254 i257 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - -  <|@  <|@
f <@~|@floating>@ <|@
tid v260 <|@
result [v1|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a248 
=== Succesors ===
=== Usages ===
i249 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a248  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i249 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 4]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v260 
=== Succesors ===
next: i250 
=== Usages ===
v21 
=== Predecessor ===
a248 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v260 #next: i250  <|@  <|@
f <@~|@floating>@ <|@
tid v261 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i250 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i250 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList$Itr.expectedModCount
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 8]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v261 
=== Succesors ===
next: v165 
=== Usages ===
v21 
=== Predecessor ===
i249 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v261 #next: v165  <|@  <|@
f <@~|@floating>@ <|@
tid v21 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 11]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i249 
y: i250 
=== Succesors ===
=== Usages ===
v165 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i249 y: i250  <|@  <|@
f <@*|@fixed>@ <|@
tid v165 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 11]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v21 
=== Succesors ===
trueSuccessor: v162 
falseSuccessor: v164 
=== Usages ===
=== Predecessor ===
i250 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v21 #trueSuccessor: v162 #falseSuccessor: v164  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@50bcb3b8 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v2|DWORD = MOV [v1|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD, y: [v0|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 11]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v251 
=== Usages ===
=== Predecessor ===
v165 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v251  <|@  <|@
f <@~|@floating>@ <|@
tid v270 <|@
result [v1|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a248 
=== Succesors ===
=== Usages ===
v251 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a248  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v251 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v270 
=== Succesors ===
next: i252 
=== Usages ===
v247 v245 
=== Predecessor ===
v162 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v270 #next: i252  <|@  <|@
f <@~|@floating>@ <|@
tid v262 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i252 v122 v142 v145 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i252 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList$Itr.cursor
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:357) [bci: 5]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v262 
=== Succesors ===
next: v38 
=== Usages ===
v143 ?222 v144 v132 i14 v141 v269 v265 v121 v110 
=== Predecessor ===
v251 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v262 #next: v38  <|@  <|@
f <@~|@floating>@ <|@
tid i13 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:360) [bci: 25]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i14 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i14 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:360) [bci: 26]
stamp: i32
=== Inputs ===
x: i252 
y: i13 
=== Succesors ===
=== Usages ===
v145 v122 v142 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i252 y: i13  <|@  <|@
f <@~|@floating>@ <|@
tid v244 <|@
result meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
rawvalue: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v245 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v251 
y: v244 
=== Succesors ===
=== Usages ===
v38 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v251 y: v244  <|@  <|@
f <@~|@floating>@ <|@
tid v266 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v121 v141 v144 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=get target_method_class=Ljava/util/Arrays$ArrayList; position=at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
stamp: void
trueSuccessorProbability: 0.9304496688887071
=== Inputs ===
condition: v245 
=== Succesors ===
trueSuccessor: v31 
falseSuccessor: v37 
=== Usages ===
=== Predecessor ===
i252 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v245 #trueSuccessor: v31 #falseSuccessor: v37  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV [v1|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = INC v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v3|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9304496688887071 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606555965109464781
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=get target_method_class=Ljava/util/Arrays$ArrayList; position=at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: a253 
=== Usages ===
=== Predecessor ===
v38 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a253  <|@  <|@
f <@~|@floating>@ <|@
tid v263 <|@
result [v1|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a248 
=== Succesors ===
=== Usages ===
a253 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a248  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a253 <|@
result v6|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Arrays$ArrayList.a
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 1]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v263 
=== Succesors ===
next: i254 
=== Usages ===
a104 v264 
=== Predecessor ===
v31 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v263 #next: i254  <|@  <|@
f <@~|@floating>@ <|@
tid v264 <|@
result [v6|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a253 
=== Succesors ===
=== Usages ===
i254 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a253  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i254 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v264 
=== Succesors ===
next: v173 
=== Usages ===
v110 
=== Predecessor ===
a253 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v264 #next: v173  <|@  <|@
f <@~|@floating>@ <|@
tid v110 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i252 
y: i254 
=== Succesors ===
=== Usages ===
v173 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i252 y: i254  <|@  <|@
f <@*|@fixed>@ <|@
tid v173 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v110 
=== Succesors ===
trueSuccessor: v170 
falseSuccessor: v172 
=== Usages ===
=== Predecessor ===
i254 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v110 #trueSuccessor: v170 #falseSuccessor: v172  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[.] = MOV [v1|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction CMP (x: v4|DWORD, y: [v6|DWORD[.] * 8 + 12]) size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4606555965109464781
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v121 
=== Usages ===
a255 
=== Predecessor ===
v173 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v121  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList$Itr.lastRet
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:359) [bci: 20]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v266 
value: i252 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v122 
=== Usages ===
=== Predecessor ===
v170 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v266 value: i252 stateAfter: - lastLocationAccess: - #next: v122  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList$Itr.cursor
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:360) [bci: 27]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v262 
value: i14 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a255 
=== Usages ===
=== Predecessor ===
v121 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v262 value: i14 stateAfter: - lastLocationAccess: - #next: a255  <|@  <|@
f <@~|@floating>@ <|@
tid a104 <|@
result v7|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 1]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a253 
=== Succesors ===
=== Usages ===
v265 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a253  <|@  <|@
f <@~|@floating>@ <|@
tid v265 <|@
result [v7|QWORD[.] + v4|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a104 
index: i252 
=== Succesors ===
=== Usages ===
a255 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a104 index: i252  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a255 <|@
result v8|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v170 
address: v265 
=== Succesors ===
next: v71 
=== Usages ===
a119 
=== Predecessor ===
v122 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v170 address: v265 #next: v71  <|@  <|@
f <@~|@floating>@ <|@
tid a119 <|@
result v9|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a255 
=== Succesors ===
=== Usages ===
v71 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a255  <|@  <|@
f <@*|@fixed>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a119 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a255 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a119 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2200a97e encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[.] = MOV [v7|QWORD[.] + v4|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2200a97e encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v172 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v236 
=== Usages ===
=== Predecessor ===
v173 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v236  <|@  <|@
f <@~|@floating>@ <|@
tid i237 <|@
result int[-28443|0xffffffffffff90e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -28443
stableDimension: 0
stamp: i32 [-28443] ⇊00000000ffff90e5 ⇈00000000ffff90e5
stampKind: i32
value: int[-28443|0xffffffffffff90e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i227 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v236 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v223 
=== Predecessor ===
v172 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-28443|0xffffffffffff90e5]] destination: B4 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4589676050187585944
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v47 
=== Usages ===
=== Predecessor ===
v38 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v47  <|@  <|@
f <@~|@floating>@ <|@
tid v246 <|@
result meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
rawvalue: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v247 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v247 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v251 
y: v246 
=== Succesors ===
=== Usages ===
v47 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v251 y: v246  <|@  <|@
f <@*|@fixed>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=get target_method_class=Lorg/graalvm/compiler/graph/NodeList; position=at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
stamp: void
trueSuccessorProbability: 0.9931436112226744
=== Inputs ===
condition: v247 
=== Succesors ===
trueSuccessor: v43 
falseSuccessor: v46 
=== Usages ===
=== Predecessor ===
v37 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v247 #trueSuccessor: v43 #falseSuccessor: v46  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v3|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9931436112226744 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4589641688507158590
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=get target_method_class=Lorg/graalvm/compiler/graph/NodeList; position=at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: a256 
=== Usages ===
=== Predecessor ===
v47 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a256  <|@  <|@
f <@~|@floating>@ <|@
tid v267 <|@
result [v1|DWORD[.] * 8 + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a248 
=== Succesors ===
=== Usages ===
a256 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a248  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a256 <|@
result v10|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: NodeList.nodes
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 23]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
nullCheck: false
stamp: n [Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v267 
=== Succesors ===
next: i257 
=== Usages ===
a126 v268 
=== Predecessor ===
v43 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v267 #next: i257  <|@  <|@
f <@~|@floating>@ <|@
tid v268 <|@
result [v10|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a256 
=== Succesors ===
=== Usages ===
i257 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a256  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i257 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v268 
=== Succesors ===
next: v181 
=== Usages ===
v132 
=== Predecessor ===
a256 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v268 #next: v181  <|@  <|@
f <@~|@floating>@ <|@
tid v132 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i252 
y: i257 
=== Succesors ===
=== Usages ===
v181 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i252 y: i257  <|@  <|@
f <@*|@fixed>@ <|@
tid v181 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v132 
=== Succesors ===
trueSuccessor: v178 
falseSuccessor: v180 
=== Usages ===
=== Predecessor ===
i257 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v132 #trueSuccessor: v178 #falseSuccessor: v180  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[.] = MOV [v1|DWORD[.] * 8 + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction CMP (x: v4|DWORD, y: [v10|DWORD[.] * 8 + 12]) size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4589641688507158590
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v141 
=== Usages ===
a258 
=== Predecessor ===
v181 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v141  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList$Itr.lastRet
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:359) [bci: 20]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v266 
value: i252 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v142 
=== Usages ===
=== Predecessor ===
v178 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v266 value: i252 stateAfter: - lastLocationAccess: - #next: v142  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList$Itr.cursor
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:360) [bci: 27]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v262 
value: i14 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a258 
=== Usages ===
=== Predecessor ===
v141 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v262 value: i14 stateAfter: - lastLocationAccess: - #next: a258  <|@  <|@
f <@~|@floating>@ <|@
tid a126 <|@
result v11|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 23]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
op: Uncompress
stamp: a [Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
value: a256 
=== Succesors ===
=== Usages ===
v269 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a256  <|@  <|@
f <@~|@floating>@ <|@
tid v269 <|@
result [v11|QWORD[.] + v4|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a126 
index: i252 
=== Succesors ===
=== Usages ===
a258 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a126 index: i252  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a258 <|@
result v12|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
nullCheck: false
stamp: n Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
stateBefore: - 
guard: v178 
address: v269 
=== Succesors ===
next: v83 
=== Usages ===
a140 
=== Predecessor ===
v142 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v178 address: v269 #next: v83  <|@  <|@
f <@~|@floating>@ <|@
tid a140 <|@
result v13|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
op: Uncompress
stamp: a Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
value: a258 
=== Succesors ===
=== Usages ===
v83 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a258  <|@  <|@
f <@*|@fixed>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a140 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a258 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a140 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2200a97e encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[.] = MOV [v11|QWORD[.] + v4|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2200a97e encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v238 
=== Usages ===
=== Predecessor ===
v181 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v238  <|@  <|@
f <@~|@floating>@ <|@
tid i239 <|@
result int[-34075|0xffffffffffff7ae5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -34075
stableDimension: 0
stamp: i32 [-34075] ⇊00000000ffff7ae5 ⇈00000000ffff7ae5
stampKind: i32
value: int[-34075|0xffffffffffff7ae5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i227 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v223 
=== Predecessor ===
v180 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-34075|0xffffffffffff7ae5]] destination: B8 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 4557432213833603606
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: a9 
=== Usages ===
=== Predecessor ===
v47 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a9  <|@  <|@
f <@~|@floating>@ <|@
tid a87 <|@
result v14|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 1]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
op: Uncompress
stamp: a Ljava/util/AbstractList;
=== Inputs ===
value: a248 
=== Succesors ===
=== Usages ===
v143 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a248  <|@  <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
returnStamp: a Ljava/lang/Object;
signature: [Ljdk.vm.ci.meta.JavaType;@2c2e8ccc
stamp: void
targetMethod: HotSpotMethod<AbstractList.get(int)>
=== Inputs ===
arguments: a87 i252 
=== Succesors ===
=== Usages ===
a9 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a87 i252  <|@  <|@
tid ?222 <|@
d <@d|@=== Debug Properties ===
bci: 14
code: ResolvedJavaMethodBytecode<AbstractList$Itr.next()>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 358
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i252 - 
=== Succesors ===
=== Usages ===
a9 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i252 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a9 <|@
result v15|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 14
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
polymorphic: false
stamp: a Ljava/lang/Object;
targetMethod: Direct#AbstractList.get
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v143 
stateDuring: ?222 
=== Succesors ===
next: v144 
=== Usages ===
v82 
=== Predecessor ===
v46 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v143 stateDuring: ?222 #next: v144  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v144 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList$Itr.lastRet
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:359) [bci: 20]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v266 
value: i252 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v145 
=== Usages ===
=== Predecessor ===
a9 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v266 value: i252 stateAfter: - lastLocationAccess: - #next: v145  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v145 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList$Itr.cursor
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:360) [bci: 27]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v262 
value: i14 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v82 
=== Usages ===
=== Predecessor ===
v144 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v262 value: i14 stateAfter: - lastLocationAccess: - #next: v82  <|@  <|@
f <@*|@fixed>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a9 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v145 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a9 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2200a97e encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v14|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
locals: v0|QWORD[.] v4|DWORD - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractList.get(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:14] <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v15|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 11]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v232 
=== Usages ===
=== Predecessor ===
v165 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v232  <|@  <|@
f <@~|@floating>@ <|@
tid i233 <|@
result int[-24851|0xffffffffffff9eed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -24851
stableDimension: 0
stamp: i32 [-24851] ⇊00000000ffff9eed ⇈00000000ffff9eed
stampKind: i32
value: int[-24851|0xffffffffffff9eed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i227 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v232 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v223 
=== Predecessor ===
v164 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-24851|0xffffffffffff9eed]] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B4" "B8" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i227 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-34075 - -24851] ⇊00000000ffff10e5 ⇈00000000fffffffd
valueDescription: i32
=== Inputs ===
merge: v223 
values: i233 i237 i239 
=== Succesors ===
=== Usages ===
v229 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v223 values: i233 i237 i239  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v223 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v232 v236 v238 
=== Succesors ===
next: v229 
=== Usages ===
i227 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v232 v236 v238 #next: v229  <|@  <|@
f <@~|@floating>@ <|@
tid a226 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v229 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v229 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2 
actionAndReason: i227 
speculation: a226 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v223 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2 actionAndReason: i227 speculation: a226  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v16|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@50bcb3b8 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v2|DWORD = MOV [v1|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD, y: [v0|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV [v1|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = INC v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v3|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9304496688887071 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606555965109464781
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[.] = MOV [v1|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction CMP (x: v4|DWORD, y: [v6|DWORD[.] * 8 + 12]) size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4606555965109464781
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2200a97e encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[.] = MOV [v7|QWORD[.] + v4|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2200a97e encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4589676050187585944
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v3|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9931436112226744 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4589641688507158590
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[.] = MOV [v1|DWORD[.] * 8 + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction CMP (x: v4|DWORD, y: [v10|DWORD[.] * 8 + 12]) size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4589641688507158590
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2200a97e encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[.] = MOV [v11|QWORD[.] + v4|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2200a97e encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 4557432213833603606
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2200a97e encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v14|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
locals: v0|QWORD[.] v4|DWORD - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractList.get(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:14] <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v15|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-24851|0xffffffffffff9eed]] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B4" "B8" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v16|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-28443|0xffffffffffff90e5]] destination: B4 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-34075|0xffffffffffff7ae5]] destination: B8 -> B11 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #8          // checkForComodification:()void
     4: aload_0       
     5: getfield      #3          // cursor:int
     8: istore_1      
     9: aload_0       
    10: getfield      #1          // this$0:java.util.AbstractList
    13: iload_1       
    14: invokevirtual #9          // java.util.AbstractList.get:(int)java.lang.Object
    17: astore_2      
    18: aload_0       
    19: iload_1       
    20: putfield      #4          // lastRet:int
    23: aload_0       
    24: iload_1       
    25: iconst_1      
    26: iadd          
    27: putfield      #3          // cursor:int
    30: aload_2       
    31: areturn       
    32: astore_1      
    33: aload_0       
    34: invokevirtual #8          // checkForComodification:()void
    37: new           #12         // java.util.NoSuchElementException
    40: dup           
    41: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    44: athrow        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@50bcb3b8 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction rdx|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr    8  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   10  <|@ instruction CMP (x: rax|DWORD, y: [rsi|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction r10|DWORD = MOV [rdx|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   18  <|@ instruction r11|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   20  <|@ instruction r8|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr   22  <|@ instruction CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr   24  <|@ instruction BRANCH trueDestinationProbability: 0.9304496688887071 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606555965109464781
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ instruction rax|DWORD[.] = MOV [rdx|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   30  <|@ st <@st|@reference-map: [rax:0, rsi:0]
live-base-pointers: []
java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction CMP (x: r11|DWORD, y: [rax|DWORD[.] * 8 + 12]) size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4606555965109464781
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r11|DWORD) size: DWORD <|@ <|@
      nr   38  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr   40  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2200a97e encoding: base: 0 shift: 3 <|@ <|@
      nr   42  <|@ instruction rax|DWORD[.] = MOV [rax|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   44  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2200a97e encoding: base: 0 shift: 3 <|@ <|@
      nr   46  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4589676050187585944
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   56  <|@ instruction CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@ <|@
      nr   58  <|@ instruction BRANCH trueDestinationProbability: 0.9931436112226744 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4589641688507158590
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   62  <|@ instruction rax|DWORD[.] = MOV [rdx|DWORD[.] * 8 + 28] size: DWORD <|@ <|@
      nr   64  <|@ st <@st|@reference-map: [rax:0, rsi:0]
live-base-pointers: []
java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction CMP (x: r11|DWORD, y: [rax|DWORD[.] * 8 + 12]) size: DWORD state [bci:0] <|@ <|@
      nr   66  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4589641688507158590
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r11|DWORD) size: DWORD <|@ <|@
      nr   72  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr   74  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2200a97e encoding: base: 0 shift: 3 <|@ <|@
      nr   76  <|@ instruction rax|DWORD[.] = MOV [rax|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   78  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2200a97e encoding: base: 0 shift: 3 <|@ <|@
      nr   80  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 4557432213833603606
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   90  <|@ instruction stack:28|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction stack:40|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   94  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2200a97e encoding: base: 0 shift: 3 <|@ <|@
      nr   96  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   98  <|@ instruction rdx|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction stack:44|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  102  <|@ st <@st|@reference-map: [stack:8]
live-base-pointers: []
java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
locals: stack:40|QWORD[.] stack:44|DWORD - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractList.get(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:14] <|@ <|@
      nr  104  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  106  <|@ instruction r11|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r11|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr  114  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  118  <|@ instruction r10|DWORD = MOVE input: int[-24851|0xffffffffffff9eed] <|@ <|@
      nr  120  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B4" "B8" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  124  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  126  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  128  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction r10|DWORD = MOVE input: int[-28443|0xffffffffffff90e5] <|@ <|@
      nr   52  <|@ instruction JUMP ~[] destination: B4 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   84  <|@ instruction r10|DWORD = MOVE input: int[-34075|0xffffffffffff7ae5] <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B8 -> B11 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #8          // checkForComodification:()void
     4: aload_0       
     5: getfield      #3          // cursor:int
     8: istore_1      
     9: aload_0       
    10: getfield      #1          // this$0:java.util.AbstractList
    13: iload_1       
    14: invokevirtual #9          // java.util.AbstractList.get:(int)java.lang.Object
    17: astore_2      
    18: aload_0       
    19: iload_1       
    20: putfield      #4          // lastRet:int
    23: aload_0       
    24: iload_1       
    25: iconst_1      
    26: iadd          
    27: putfield      #3          // cursor:int
    30: aload_2       
    31: areturn       
    32: astore_1      
    33: aload_0       
    34: invokevirtual #8          // checkForComodification:()void
    37: new           #12         // java.util.NoSuchElementException
    40: dup           
    41: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    44: athrow        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@50bcb3b8 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction rdx|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr    8  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   10  <|@ instruction CMP (x: rax|DWORD, y: [rsi|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction r10|DWORD = MOV [rdx|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   18  <|@ instruction r11|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   20  <|@ instruction r8|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr   22  <|@ instruction CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr   24  <|@ instruction BRANCH trueDestinationProbability: 0.9304496688887071 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606555965109464781
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ instruction rax|DWORD[.] = MOV [rdx|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   30  <|@ st <@st|@reference-map: [rax:0, rsi:0]
live-base-pointers: []
java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction CMP (x: r11|DWORD, y: [rax|DWORD[.] * 8 + 12]) size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4606555965109464781
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r11|DWORD) size: DWORD <|@ <|@
      nr   38  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr   40  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2200a97e encoding: base: 0 shift: 3 <|@ <|@
      nr   42  <|@ instruction rax|DWORD[.] = MOV [rax|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   44  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2200a97e encoding: base: 0 shift: 3 <|@ <|@
      nr   46  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4589676050187585944
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   56  <|@ instruction CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@ <|@
      nr   58  <|@ instruction BRANCH trueDestinationProbability: 0.9931436112226744 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4589641688507158590
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   62  <|@ instruction rax|DWORD[.] = MOV [rdx|DWORD[.] * 8 + 28] size: DWORD <|@ <|@
      nr   64  <|@ st <@st|@reference-map: [rax:0, rsi:0]
live-base-pointers: []
java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction CMP (x: r11|DWORD, y: [rax|DWORD[.] * 8 + 12]) size: DWORD state [bci:0] <|@ <|@
      nr   66  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4589641688507158590
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r11|DWORD) size: DWORD <|@ <|@
      nr   72  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr   74  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2200a97e encoding: base: 0 shift: 3 <|@ <|@
      nr   76  <|@ instruction rax|DWORD[.] = MOV [rax|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   78  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2200a97e encoding: base: 0 shift: 3 <|@ <|@
      nr   80  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 4557432213833603606
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   90  <|@ instruction stack:28|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction stack:40|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   94  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2200a97e encoding: base: 0 shift: 3 <|@ <|@
      nr   96  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   98  <|@ instruction rdx|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction stack:44|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  102  <|@ st <@st|@reference-map: [stack:8]
live-base-pointers: []
java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
locals: stack:40|QWORD[.] stack:44|DWORD - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractList.get(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:14] <|@ <|@
      nr  104  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  106  <|@ instruction r11|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r11|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr  114  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  118  <|@ instruction r10|DWORD = MOVE input: int[-24851|0xffffffffffff9eed] <|@ <|@
      nr  120  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B4" "B8" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  124  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  126  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  128  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction r10|DWORD = MOVE input: int[-28443|0xffffffffffff90e5] <|@ <|@
      nr   52  <|@ instruction JUMP ~[] destination: B4 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   84  <|@ instruction r10|DWORD = MOVE input: int[-34075|0xffffffffffff7ae5] <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B8 -> B11 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #8          // checkForComodification:()void
     4: aload_0       
     5: getfield      #3          // cursor:int
     8: istore_1      
     9: aload_0       
    10: getfield      #1          // this$0:java.util.AbstractList
    13: iload_1       
    14: invokevirtual #9          // java.util.AbstractList.get:(int)java.lang.Object
    17: astore_2      
    18: aload_0       
    19: iload_1       
    20: putfield      #4          // lastRet:int
    23: aload_0       
    24: iload_1       
    25: iconst_1      
    26: iadd          
    27: putfield      #3          // cursor:int
    30: aload_2       
    31: areturn       
    32: astore_1      
    33: aload_0       
    34: invokevirtual #8          // checkForComodification:()void
    37: new           #12         // java.util.NoSuchElementException
    40: dup           
    41: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    44: athrow        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec2848896c24208b56188b04d50c0000003b46140f85fc000000448b14d508000000448b5e0c458bc341ffc04181faaddeadde0f853d0000008b04d510000000443b1cc50c0000000f83e200000044895e104489460c48c1e003428b44981048c1e003488b6c24204883c428850500000000c5f877c34181faaddeadde0f853d0000008b04d51c000000443b1cc50c0000000f83a000000044895e104489460c48c1e003428b44981048c1e003488b6c24204883c428850500000000c5f877c34489442414488974240848c1e203488bf2418bd344895c240448b8ffffffffffffffff666690e80000000090488b742408448b5c240444895e10448b4424144489460c488b6c24204883c428850500000000c5f877c341baed9effff4589979c0200004d89a7a8020000e8000000009041bae590ffffebe441bae57affffebdce80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@50bcb3b8 slotKind: QWORD  <||@
  Comment 48 6 rdx|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 51 8 rax|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 51 [rdx:0, rsi:0]at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 51 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 58 10 CMP (x: rax|DWORD, y: [rsi|QWORD[.] + 20]) size: DWORD  <||@
  Comment 61 12 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10  <||@
  Comment 67 block B1 null  <||@
  Comment 67 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 67 16 r10|DWORD = MOV [rdx|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 75 18 r11|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 79 20 r8|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 85 22 CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}  <||@
  Comment 85 {meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}}  <||@
  Comment 92 24 BRANCH trueDestinationProbability: 0.9304496688887071 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5  <||@
  Comment 98 block B2 null  <||@
  Comment 98 26 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 98 28 rax|DWORD[.] = MOV [rdx|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 105 30 CMP (x: r11|DWORD, y: [rax|DWORD[.] * 8 + 12]) size: DWORD state [bci:0]  <||@
  Comment 105 [rax:0, rsi:0]at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 105 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 113 32 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B4  <||@
  Comment 119 block B3 null  <||@
  Comment 119 34 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 119 36 MOV (x: [rsi|QWORD[.] + 16], y: r11|DWORD) size: DWORD  <||@
  Comment 123 38 MOV (x: [rsi|QWORD[.] + 12], y: r8|DWORD) size: DWORD  <||@
  Comment 127 40 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2200a97e encoding: base: 0 shift: 3  <||@
  Comment 131 42 rax|DWORD[.] = MOV [rax|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD  <||@
  Comment 136 44 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2200a97e encoding: base: 0 shift: 3  <||@
  Comment 140 46 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 149 12  <||@
  Comment 159 block B5 null  <||@
  Comment 159 54 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 159 56 CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}  <||@
  Comment 159 {meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}}  <||@
  Comment 166 58 BRANCH trueDestinationProbability: 0.9931436112226744 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B9  <||@
  Comment 172 block B6 null  <||@
  Comment 172 60 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 172 62 rax|DWORD[.] = MOV [rdx|DWORD[.] * 8 + 28] size: DWORD  <||@
  Comment 179 64 CMP (x: r11|DWORD, y: [rax|DWORD[.] * 8 + 12]) size: DWORD state [bci:0]  <||@
  Comment 179 [rax:0, rsi:0]at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 179 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 187 66 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B8  <||@
  Comment 193 block B7 null  <||@
  Comment 193 68 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 193 70 MOV (x: [rsi|QWORD[.] + 16], y: r11|DWORD) size: DWORD  <||@
  Comment 197 72 MOV (x: [rsi|QWORD[.] + 12], y: r8|DWORD) size: DWORD  <||@
  Comment 201 74 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2200a97e encoding: base: 0 shift: 3  <||@
  Comment 205 76 rax|DWORD[.] = MOV [rax|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD  <||@
  Comment 210 78 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2200a97e encoding: base: 0 shift: 3  <||@
  Comment 214 80 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 223 12  <||@
  Comment 233 block B9 null  <||@
  Comment 233 88 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 233 90 stack:28|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 238 92 stack:40|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 243 94 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2200a97e encoding: base: 0 shift: 3  <||@
  Comment 247 96 rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 250 98 rdx|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 253 100 stack:44|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 258 102 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractList.get(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:14]  <||@
  Comment 258 7  <||@
  Comment 271 {HotSpotMethod<AbstractList.get(int)>}  <||@
  Comment 276 [stack:8]at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14, duringCall: true, rethrow: false]
              |0                  |1               |2 
     locals:  |stack:40|QWORD[.]  |stack:44|DWORD  |-   <||@
  Comment 277 104 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 282 106 r11|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 287 108 MOV (x: [rsi|QWORD[.] + 16], y: r11|DWORD) size: DWORD  <||@
  Comment 291 110 r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 296 112 MOV (x: [rsi|QWORD[.] + 12], y: r8|DWORD) size: DWORD  <||@
  Comment 300 114 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 309 12  <||@
  Comment 319 block B10 null  <||@
  Comment 319 116 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 319 118 r10|DWORD = MOVE input: int[-24851|0xffffffffffff9eed]  <||@
  Comment 325 120 JUMP ~[] destination: B10 -> B11  <||@
  Comment 325 block B11 null  <||@
  Comment 325 122 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 325 124 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 332 126 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 339 128 DEOPT info [bci:0]  <||@
  Comment 339 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 344 [rsi:0]at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 345 block B4 null  <||@
  Comment 345 48 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 345 50 r10|DWORD = MOVE input: int[-28443|0xffffffffffff90e5]  <||@
  Comment 351 52 JUMP ~[] destination: B4 -> B11  <||@
  Comment 353 block B8 null  <||@
  Comment 353 82 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 353 84 r10|DWORD = MOVE input: int[-34075|0xffffffffffff7ae5]  <||@
  Comment 359 86 JUMP ~[] destination: B8 -> B11  <||@
  Comment 361 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 361 4  <||@
  Comment 367 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 367 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-7562[java.util.AbstractList$Itr.next()]"
  method "HotSpotCompilation-7562[java.util.AbstractList$Itr.next()]"
  date 1527005185935
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 107aff980 448b560849c1e203493bc20f85cf64d0fe900f1f80000000000f1f800000000089842400c0feff4883ec2848896c24208b56188b04d50c0000003b46140f85fc000000448b14d508000000448b5e0c458bc341ffc04181fa8faf00f80f853d0000008b04d510000000443b1cc50c0000000f83e200000044895e104489460c48c1e003428b44981048c1e003488b6c24204883c4288505ebf5d8fcc5f877c34181fac8b101f80f853d0000008b04d51c000000443b1cc50c0000000f83a000000044895e104489460c48c1e003428b44981048c1e003488b6c24204883c4288505a1f5d8fcc5f877c34489442414488974240848c1e203488bf2418bd344895c240448b8ffffffffffffffff666690e84c68d0fe90488b742408448b5c240444895e10448b4424144489460c488b6c24204883c42885054bf5d8fcc5f877c341baed9effff4589979c0200004d89a7a8020000e8267bd0fe9041bae590ffffebe441bae57affffebdce832ab14ff90e80c7ad0fe90f4f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@50bcb3b8 slotKind: QWORD  <||@
  Comment 48 6 rdx|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 51 8 rax|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 51 [rdx:0, rsi:0]at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 51 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 58 10 CMP (x: rax|DWORD, y: [rsi|QWORD[.] + 20]) size: DWORD  <||@
  Comment 61 12 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10  <||@
  Comment 67 block B1 null  <||@
  Comment 67 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 67 16 r10|DWORD = MOV [rdx|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 75 18 r11|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 79 20 r8|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 85 22 CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}  <||@
  Comment 85 {meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}}  <||@
  Comment 92 24 BRANCH trueDestinationProbability: 0.9304496688887071 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5  <||@
  Comment 98 block B2 null  <||@
  Comment 98 26 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 98 28 rax|DWORD[.] = MOV [rdx|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 105 30 CMP (x: r11|DWORD, y: [rax|DWORD[.] * 8 + 12]) size: DWORD state [bci:0]  <||@
  Comment 105 [rax:0, rsi:0]at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 105 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 113 32 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B4  <||@
  Comment 119 block B3 null  <||@
  Comment 119 34 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 119 36 MOV (x: [rsi|QWORD[.] + 16], y: r11|DWORD) size: DWORD  <||@
  Comment 123 38 MOV (x: [rsi|QWORD[.] + 12], y: r8|DWORD) size: DWORD  <||@
  Comment 127 40 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2200a97e encoding: base: 0 shift: 3  <||@
  Comment 131 42 rax|DWORD[.] = MOV [rax|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD  <||@
  Comment 136 44 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2200a97e encoding: base: 0 shift: 3  <||@
  Comment 140 46 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 149 12  <||@
  Comment 159 block B5 null  <||@
  Comment 159 54 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 159 56 CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}  <||@
  Comment 159 {meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}}  <||@
  Comment 166 58 BRANCH trueDestinationProbability: 0.9931436112226744 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B9  <||@
  Comment 172 block B6 null  <||@
  Comment 172 60 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 172 62 rax|DWORD[.] = MOV [rdx|DWORD[.] * 8 + 28] size: DWORD  <||@
  Comment 179 64 CMP (x: r11|DWORD, y: [rax|DWORD[.] * 8 + 12]) size: DWORD state [bci:0]  <||@
  Comment 179 [rax:0, rsi:0]at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 179 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 187 66 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B8  <||@
  Comment 193 block B7 null  <||@
  Comment 193 68 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 193 70 MOV (x: [rsi|QWORD[.] + 16], y: r11|DWORD) size: DWORD  <||@
  Comment 197 72 MOV (x: [rsi|QWORD[.] + 12], y: r8|DWORD) size: DWORD  <||@
  Comment 201 74 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2200a97e encoding: base: 0 shift: 3  <||@
  Comment 205 76 rax|DWORD[.] = MOV [rax|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD  <||@
  Comment 210 78 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2200a97e encoding: base: 0 shift: 3  <||@
  Comment 214 80 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 223 12  <||@
  Comment 233 block B9 null  <||@
  Comment 233 88 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 233 90 stack:28|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 238 92 stack:40|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 243 94 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2200a97e encoding: base: 0 shift: 3  <||@
  Comment 247 96 rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 250 98 rdx|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 253 100 stack:44|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 258 102 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractList.get(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:14]  <||@
  Comment 258 7  <||@
  Comment 271 {HotSpotMethod<AbstractList.get(int)>}  <||@
  Comment 276 [stack:8]at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14, duringCall: true, rethrow: false]
              |0                  |1               |2 
     locals:  |stack:40|QWORD[.]  |stack:44|DWORD  |-   <||@
  Comment 277 104 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 282 106 r11|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 287 108 MOV (x: [rsi|QWORD[.] + 16], y: r11|DWORD) size: DWORD  <||@
  Comment 291 110 r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 296 112 MOV (x: [rsi|QWORD[.] + 12], y: r8|DWORD) size: DWORD  <||@
  Comment 300 114 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 309 12  <||@
  Comment 319 block B10 null  <||@
  Comment 319 116 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 319 118 r10|DWORD = MOVE input: int[-24851|0xffffffffffff9eed]  <||@
  Comment 325 120 JUMP ~[] destination: B10 -> B11  <||@
  Comment 325 block B11 null  <||@
  Comment 325 122 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 325 124 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 332 126 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 339 128 DEOPT info [bci:0]  <||@
  Comment 339 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 344 [rsi:0]at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 345 block B4 null  <||@
  Comment 345 48 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 345 50 r10|DWORD = MOVE input: int[-28443|0xffffffffffff90e5]  <||@
  Comment 351 52 JUMP ~[] destination: B4 -> B11  <||@
  Comment 353 block B8 null  <||@
  Comment 353 82 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 353 84 r10|DWORD = MOVE input: int[-34075|0xffffffffffff7ae5]  <||@
  Comment 359 86 JUMP ~[] destination: B8 -> B11  <||@
  Comment 361 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 361 4  <||@
  Comment 367 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 367 5  <||@
  HexCodeFile>>> <|@
end_nmethod
