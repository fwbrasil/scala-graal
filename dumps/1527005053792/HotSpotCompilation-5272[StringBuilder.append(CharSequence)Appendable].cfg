begin_compilation
  name " HotSpotCompilation-5272[java.lang.StringBuilder.append(CharSequence)]"
  method "HotSpotCompilation-5272[java.lang.StringBuilder.append(CharSequence)]"
  date 1527005168596
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v743 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v743  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/lang/StringBuilder;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 ?44 ?6 ?20 v8 v758 ?56 v757 j428 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a -
uncheckedStamp: a Ljava/lang/CharSequence;
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v755 ?6 v763 ?44 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<StringBuilder.append(CharSequence)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: StringBuilder.java
sourceLine: 76
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 
=== Succesors ===
=== Usages ===
v327 a389 v743 v793 i746 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2  <|@  <|@
f <@~|@floating>@ <|@
tid v763 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v743 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v743 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:483) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v763 
=== Succesors ===
next: v352 
=== Usages ===
v450 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v763 #next: v352  <|@  <|@
f <@~|@floating>@ <|@
tid v449 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:483) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v450 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v450 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:483) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v743 
y: v449 
=== Succesors ===
=== Usages ===
v352 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v743 y: v449  <|@  <|@
f <@*|@fixed>@ <|@
tid v352 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:481) [bci: 1]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v450 
=== Succesors ===
trueSuccessor: v350 
falseSuccessor: v349 
=== Usages ===
=== Predecessor ===
v743 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v450 #trueSuccessor: v350 #falseSuccessor: v349  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v350 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:481) [bci: 1]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: a744 
=== Usages ===
=== Predecessor ===
v352 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a744  <|@  <|@
f <@~|@floating>@ <|@
tid v755 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a744 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a744 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:447) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v755 
=== Succesors ===
next: v793 
=== Usages ===
a139 v793 v756 
=== Predecessor ===
v350 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v755 #next: v793  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v793 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a744 
=== Succesors ===
next: a745 
=== Usages ===
=== Predecessor ===
a744 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a744 #next: a745  <|@  <|@
f <@~|@floating>@ <|@
tid v758 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a745 v203 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a745 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractStringBuilder.value
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v758 
=== Succesors ===
next: i746 
=== Usages ===
a150 v761 v759 
=== Predecessor ===
v793 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v758 #next: i746  <|@  <|@
f <@~|@floating>@ <|@
tid v759 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a745 
=== Succesors ===
=== Usages ===
i746 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a745  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i746 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 5]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v759 
=== Succesors ===
next: i747 
=== Usages ===
i59 i93 i301 v279 
=== Predecessor ===
a745 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v759 #next: i747  <|@  <|@
f <@~|@floating>@ <|@
tid v756 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a744 
=== Succesors ===
=== Usages ===
i747 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a744  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i747 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:447) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v756 
=== Succesors ===
next: i748 
=== Usages ===
i41 ?44 i182 j447 
=== Predecessor ===
i746 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v756 #next: i748  <|@  <|@
f <@~|@floating>@ <|@
tid v757 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i748 v199 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i748 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 16]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v757 
=== Succesors ===
next: v64 
=== Usages ===
i41 j443 v164 v183 
=== Predecessor ===
i747 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v757 #next: v64  <|@  <|@
f <@~|@floating>@ <|@
tid i41 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 20]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: i32
=== Inputs ===
x: i747 
y: i748 
=== Succesors ===
=== Usages ===
v199 i59 i96 i207 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i747 y: i748  <|@  <|@
f <@~|@floating>@ <|@
tid i59 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: i32
=== Inputs ===
x: i41 
y: i746 
=== Succesors ===
=== Usages ===
v61 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i41 y: i746  <|@  <|@
f <@~|@floating>@ <|@
tid i60 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v61 i93 v106 i365 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i59 
y: i60 
=== Succesors ===
=== Usages ===
v64 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i59 y: i60  <|@  <|@
f <@~|@floating>@ <|@
tid i45 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 25]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
a389 v164 v97 v110 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: void
trueSuccessorProbability: 0.9528445987940962
=== Inputs ===
condition: v61 
=== Succesors ===
trueSuccessor: v62 
falseSuccessor: v63 
=== Usages ===
=== Predecessor ===
i748 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v61 #trueSuccessor: v62 #falseSuccessor: v63  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B53" 
    xhandlers
    flags 
    probability 4606757680705418579
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v116 
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v116  <|@  <|@
f <@~|@floating>@ <|@
tid a150 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a745 
=== Succesors ===
=== Usages ===
a117 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a745  <|@  <|@
f <@*|@fixed>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v115 
=== Predecessor ===
v62 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4586956630549375696
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 10]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v231 
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v231  <|@  <|@
f <@~|@floating>@ <|@
tid i93 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:150) [bci: 6]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i746 
y: i60 
=== Succesors ===
=== Usages ===
i95 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i746 y: i60  <|@  <|@
f <@~|@floating>@ <|@
tid i94 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:150) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i95 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i95 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:150) [bci: 8]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i93 
y: i94 
=== Succesors ===
=== Usages ===
i96 i207 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i93 y: i94  <|@  <|@
f <@~|@floating>@ <|@
tid i96 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:151) [bci: 12]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: i32
=== Inputs ===
x: i95 
y: i41 
=== Succesors ===
=== Usages ===
v97 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i95 y: i41  <|@  <|@
f <@~|@floating>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:151) [bci: 13]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i96 
y: i45 
=== Succesors ===
=== Usages ===
i207 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i96 y: i45  <|@  <|@
f <@~|@floating>@ <|@
tid i207 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v97 
trueValue: i41 
falseValue: i95 
=== Succesors ===
=== Usages ===
j452 i109 v106 v374 v279 i301 a389 v416 i365 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v97 trueValue: i41 falseValue: i95  <|@  <|@
f <@~|@floating>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i207 
y: i60 
=== Succesors ===
=== Usages ===
v231 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i207 y: i60  <|@  <|@
f <@*|@fixed>@ <|@
tid v231 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v106 
=== Succesors ===
trueSuccessor: v230 
falseSuccessor: v228 
=== Usages ===
=== Predecessor ===
v63 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v106 #trueSuccessor: v230 #falseSuccessor: v228  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v332 
=== Usages ===
=== Predecessor ===
v231 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v332  <|@  <|@
f <@~|@floating>@ <|@
tid i333 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -51219
stableDimension: 0
stamp: i32 [-51219] ⇊00000000ffff37ed ⇈00000000ffff37ed
stampKind: i32
value: int[-51219|0xffffffffffff37ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i325 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v332 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v321 
=== Predecessor ===
v230 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4586956630549375696
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v235 
=== Usages ===
=== Predecessor ===
v231 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v235  <|@  <|@
f <@~|@floating>@ <|@
tid i108 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 22]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
rawvalue: 2147483639
stableDimension: 0
stamp: i32 [2147483639] ⇊000000007ffffff7 ⇈000000007ffffff7
stampKind: i32
value: int[2147483639|0x7ffffff7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i109 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i109 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 25]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: i32
=== Inputs ===
x: i108 
y: i207 
=== Succesors ===
=== Usages ===
v110 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i108 y: i207  <|@  <|@
f <@~|@floating>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 26]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i109 
y: i45 
=== Succesors ===
=== Usages ===
v235 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i109 y: i45  <|@  <|@
f <@*|@fixed>@ <|@
tid v235 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 26]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v110 
=== Succesors ===
trueSuccessor: v234 
falseSuccessor: v232 
=== Usages ===
=== Predecessor ===
v228 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v110 #trueSuccessor: v234 #falseSuccessor: v232  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v234 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 26]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v334 
=== Usages ===
=== Predecessor ===
v235 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v334  <|@  <|@
f <@~|@floating>@ <|@
tid i335 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -51475
stableDimension: 0
stamp: i32 [-51475] ⇊00000000ffff36ed ⇈00000000ffff36ed
stampKind: i32
value: int[-51475|0xffffffffffff36ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i325 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v334 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v321 
=== Predecessor ===
v234 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B11" 
    xhandlers
    flags 
    probability 4586956630549375696
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v232 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 26]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: j368 
=== Usages ===
=== Predecessor ===
v235 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j368  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j368 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j413 
=== Usages ===
v764 v765 
=== Predecessor ===
v232 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j413  <|@  <|@
f <@~|@floating>@ <|@
tid v764 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j368 
index: - 
=== Succesors ===
=== Usages ===
j413 v415 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j368 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j413 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v764 
=== Succesors ===
next: j414 
=== Usages ===
j372 v766 v767 a388 v772 v768 v769 v770 v771 
=== Predecessor ===
j368 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v764 #next: j414  <|@  <|@
f <@~|@floating>@ <|@
tid v765 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j368 
index: - 
=== Succesors ===
=== Usages ===
j414 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j368 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j414 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v765 
=== Succesors ===
next: v377 
=== Usages ===
v378 
=== Predecessor ===
j413 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v765 #next: v377  <|@  <|@
f <@~|@floating>@ <|@
tid i373 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v374 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v374 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i207 
y: i373 
=== Succesors ===
=== Usages ===
v377 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i207 y: i373  <|@  <|@
f <@~|@floating>@ <|@
tid j364 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v417 v463 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v377 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v374 
=== Succesors ===
trueSuccessor: v376 
falseSuccessor: v375 
=== Usages ===
=== Predecessor ===
j414 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v374 #trueSuccessor: v376 #falseSuccessor: v375  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4586277049598017570
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v376 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v384 
=== Usages ===
=== Predecessor ===
v377 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v384  <|@  <|@
f <@~|@floating>@ <|@
tid i365 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i207 
y: i60 
=== Succesors ===
=== Usages ===
i397 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i207 y: i60  <|@  <|@
f <@~|@floating>@ <|@
tid i396 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i397 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i397 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i365 
y: i396 
=== Succesors ===
=== Usages ===
i367 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i365 y: i396  <|@  <|@
f <@~|@floating>@ <|@
tid i366 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i367 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i367 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i397 
y: i366 
=== Succesors ===
=== Usages ===
j371 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i397 y: i366  <|@  <|@
f <@~|@floating>@ <|@
tid j371 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i367 
=== Succesors ===
=== Usages ===
j372 v768 v769 v770 v771 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i367  <|@  <|@
f <@~|@floating>@ <|@
tid j372 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: i64
=== Inputs ===
x: j371 
y: j413 
=== Succesors ===
=== Usages ===
v378 v415 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j371 y: j413  <|@  <|@
f <@~|@floating>@ <|@
tid v378 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j414 
y: j372 
=== Succesors ===
=== Usages ===
v384 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j414 y: j372  <|@  <|@
f <@*|@fixed>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v378 
=== Succesors ===
trueSuccessor: v383 
falseSuccessor: v382 
=== Usages ===
=== Predecessor ===
v376 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v378 #trueSuccessor: v383 #falseSuccessor: v382  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4556464396203846584
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v381 
=== Usages ===
=== Predecessor ===
v384 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v381  <|@  <|@
f <@*|@fixed>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v380 
=== Predecessor ===
v383 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    probability 4586215887312395339
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v382 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v415 
=== Usages ===
=== Predecessor ===
v384 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v415  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v764 
value: j372 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v402 
=== Usages ===
=== Predecessor ===
v382 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v764 value: j372 stateAfter: - lastLocationAccess: - #next: v402  <|@  <|@
f <@~|@floating>@ <|@
tid v768 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j371 
index: j413 
=== Succesors ===
=== Usages ===
v402 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j371 index: j413  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v402 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: void
=== Inputs ===
address: v768 
=== Succesors ===
next: v405 
=== Usages ===
=== Predecessor ===
v415 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v768 #next: v405  <|@  <|@
f <@~|@floating>@ <|@
tid v769 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j371 
index: j413 
=== Succesors ===
=== Usages ===
v405 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j371 index: j413  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: void
=== Inputs ===
address: v769 
=== Succesors ===
next: v408 
=== Usages ===
=== Predecessor ===
v402 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v769 #next: v408  <|@  <|@
f <@~|@floating>@ <|@
tid v770 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j371 
index: j413 
=== Succesors ===
=== Usages ===
v408 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j371 index: j413  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v408 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: void
=== Inputs ===
address: v770 
=== Succesors ===
next: v411 
=== Usages ===
=== Predecessor ===
v405 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v770 #next: v411  <|@  <|@
f <@~|@floating>@ <|@
tid v771 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j371 
index: j413 
=== Succesors ===
=== Usages ===
v411 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j371 index: j413  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v411 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: void
=== Inputs ===
address: v771 
=== Succesors ===
next: v416 
=== Usages ===
=== Predecessor ===
v408 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v771 #next: v416  <|@  <|@
f <@~|@floating>@ <|@
tid v766 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j413 
index: - 
=== Succesors ===
=== Usages ===
v416 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j413 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v416 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v766 
value: i207 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v417 
=== Usages ===
=== Predecessor ===
v411 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v766 value: i207 stateAfter: - lastLocationAccess: - #next: v417  <|@  <|@
f <@~|@floating>@ <|@
tid v767 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j413 
index: - 
=== Succesors ===
=== Usages ===
v417 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j413 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v417 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v767 
value: j364 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v420 
=== Usages ===
=== Predecessor ===
v416 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v767 value: j364 stateAfter: - lastLocationAccess: - #next: v420  <|@  <|@
f <@~|@floating>@ <|@
tid v772 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j413 
index: - 
=== Succesors ===
=== Usages ===
v420 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j413 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v451 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
rawvalue: meta{HotSpotType<[C, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[C, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v420 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v420 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v772 
value: v451 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v387 
=== Usages ===
=== Predecessor ===
v417 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v772 value: v451 stateAfter: - lastLocationAccess: - #next: v387  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v387 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: a388 
=== Usages ===
=== Predecessor ===
v420 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a388  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a388 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j413 
=== Succesors ===
next: v390 
=== Usages ===
a393 
=== Predecessor ===
v387 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j413 #next: v390  <|@  <|@
f <@*|@fixed>@ <|@
tid v390 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v391 
=== Predecessor ===
a388 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4572086669764547954
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v379 
=== Usages ===
=== Predecessor ===
v377 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v379  <|@  <|@
f <@*|@fixed>@ <|@
tid v379 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v380 
=== Predecessor ===
v375 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B9" 
    successors "B13" 
    xhandlers
    flags 
    probability 4572575968049525806
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v379 v381 
=== Succesors ===
next: a389 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v379 v381 #next: a389  <|@  <|@
f <@~|@floating>@ <|@
tid v363 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
rawvalue: meta{HotSpotType<[C, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[C, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a389 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a389 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v363 i207 i45 
=== Succesors ===
next: v392 
=== Usages ===
a393 
=== Predecessor ===
v380 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v363 i207 i45 #next: v392  <|@  <|@
f <@*|@fixed>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v391 
=== Predecessor ===
a389 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B10" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4586956630549375697
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a393 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v391 
values: a388 a389 
=== Succesors ===
=== Usages ===
v776 a307 v762 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v391 values: a388 a389  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v390 v392 
=== Succesors ===
next: v593 
=== Usages ===
a393 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v390 v392 #next: v593  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v593 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v466 
=== Usages ===
j594 j596 
=== Predecessor ===
v391 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v466  <|@  <|@
f <@~|@floating>@ <|@
tid v279 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:102) [bci: 9]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i746 
y: i207 
=== Succesors ===
=== Usages ===
i301 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i746 y: i207  <|@  <|@
f <@~|@floating>@ <|@
tid i301 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v279 
trueValue: i746 
falseValue: i207 
=== Succesors ===
=== Usages ===
j453 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v279 trueValue: i746 falseValue: i207  <|@  <|@
f <@~|@floating>@ <|@
tid j453 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i301 
=== Succesors ===
=== Usages ===
j658 v776 j457 v463 v590 j640 j646 j650 j654 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i301  <|@  <|@
f <@~|@floating>@ <|@
tid v463 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j453 
y: j364 
=== Succesors ===
=== Usages ===
v466 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j453 y: j364  <|@  <|@
f <@~|@floating>@ <|@
tid j657 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j658 j709 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j599 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j613 j676 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j653 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j654 j706 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j621 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j622 j682 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j649 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j650 j703 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j359 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:483) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j688 j630 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j645 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j646 j700 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j147 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
rawvalue: 16
stableDimension: 0
stamp: i64 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j694 j638 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j639 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16
stableDimension: 0
stamp: i64 [-16] ⇊fffffffffffffff0 ⇈fffffffffffffff0
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j640 j695 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j400 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j683 v696 j623 j631 v641 j689 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v466 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v463 
=== Succesors ===
trueSuccessor: v464 
falseSuccessor: v465 
=== Usages ===
=== Predecessor ===
v593 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v463 #trueSuccessor: v464 #falseSuccessor: v465  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B32" 
    xhandlers
    flags 
    probability 4582453030922005201
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v464 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v483 
=== Usages ===
=== Predecessor ===
v466 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v483  <|@  <|@
f <@*|@fixed>@ <|@
tid v483 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v484 
=== Predecessor ===
v464 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4582453030922005201
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v465 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v469 
=== Usages ===
=== Predecessor ===
v466 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v469  <|@  <|@
f <@~|@floating>@ <|@
tid v762 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a393 
index: - 
=== Succesors ===
=== Usages ===
j596 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a393 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j596 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v593 
address: v762 
=== Succesors ===
=== Usages ===
v777 v779 v781 v783 v785 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v593 address: v762  <|@  <|@
f <@~|@floating>@ <|@
tid v761 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a745 
=== Succesors ===
=== Usages ===
j594 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a745  <|@  <|@
f <@~|@floating>@ <|@
tid j594 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v593 
address: v761 
=== Succesors ===
=== Usages ===
v778 v780 v782 v784 v786 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v593 address: v761  <|@  <|@
f <@~|@floating>@ <|@
tid j640 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483664 - 2147483631]
=== Inputs ===
x: j453 
y: j639 
=== Succesors ===
=== Usages ===
v641 v643 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j453 y: j639  <|@  <|@
f <@~|@floating>@ <|@
tid v641 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j640 
y: j400 
=== Succesors ===
=== Usages ===
v469 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j640 y: j400  <|@  <|@
f <@*|@fixed>@ <|@
tid v469 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v641 
=== Succesors ===
trueSuccessor: v467 
falseSuccessor: v468 
=== Usages ===
=== Predecessor ===
v465 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v641 #trueSuccessor: v467 #falseSuccessor: v468  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B20" 
    xhandlers
    flags 
    probability 4580754078543609885
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v467 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v479 
=== Usages ===
=== Predecessor ===
v469 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v479  <|@  <|@
f <@*|@fixed>@ <|@
tid v479 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v480 
=== Predecessor ===
v467 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4573445831667264209
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v468 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v470 
=== Usages ===
=== Predecessor ===
v469 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v470  <|@  <|@
f <@*|@fixed>@ <|@
tid v470 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v471 
=== Predecessor ===
v468 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B59" 
    successors "B19" "B59" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4582453030922005201
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j631 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v471 
values: j400 j638 
=== Succesors ===
=== Usages ===
v786 j638 v785 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v471 values: j400 j638  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v471 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v470 
=== Succesors ===
next: v749 
=== Usages ===
v749 v475 v476 j631 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v470 #next: v749  <|@  <|@
f <@~|@floating>@ <|@
tid v786 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j594 
index: j631 
=== Succesors ===
=== Usages ===
v749 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j594 index: j631  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v749 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v471 
address: v786 
=== Succesors ===
next: v727 
=== Usages ===
v727 
=== Predecessor ===
v471 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v471 address: v786 #next: v727  <|@  <|@
f <@~|@floating>@ <|@
tid v785 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j596 
index: j631 
=== Succesors ===
=== Usages ===
v727 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j596 index: j631  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v727 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v785 
value: v749 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v478 
=== Usages ===
=== Predecessor ===
v749 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v785 value: v749 stateAfter: - lastLocationAccess: - #next: v478  <|@  <|@
f <@~|@floating>@ <|@
tid j638 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j631 
y: j147 
=== Succesors ===
=== Usages ===
j623 j631 v643 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j631 y: j147  <|@  <|@
f <@~|@floating>@ <|@
tid v643 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j640 
y: j638 
=== Succesors ===
=== Usages ===
v478 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j640 y: j638  <|@  <|@
f <@*|@fixed>@ <|@
tid v478 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v643 
=== Succesors ===
trueSuccessor: v475 
falseSuccessor: v477 
=== Usages ===
=== Predecessor ===
v727 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v643 #trueSuccessor: v475 #falseSuccessor: v477  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" 
    xhandlers
    flags 
    probability 4573445831667264209
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v475 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v471 
=== Succesors ===
next: v481 
=== Usages ===
=== Predecessor ===
v478 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v471 #next: v481  <|@  <|@
f <@*|@fixed>@ <|@
tid v481 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v480 
=== Predecessor ===
v475 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B16" "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4582453030922005201
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j623 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v480 
values: j400 j638 
=== Succesors ===
=== Usages ===
v784 j630 j614 v647 v783 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v480 values: j400 j638  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v480 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v479 v481 
=== Succesors ===
next: v503 
=== Usages ===
j623 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v479 v481 #next: v503  <|@  <|@
f <@~|@floating>@ <|@
tid j646 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j453 
y: j645 
=== Succesors ===
=== Usages ===
v647 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j453 y: j645  <|@  <|@
f <@~|@floating>@ <|@
tid v647 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j646 
y: j623 
=== Succesors ===
=== Usages ===
v503 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j646 y: j623  <|@  <|@
f <@*|@fixed>@ <|@
tid v503 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v647 
=== Succesors ===
trueSuccessor: v502 
falseSuccessor: v501 
=== Usages ===
=== Predecessor ===
v480 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v647 #trueSuccessor: v502 #falseSuccessor: v501  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4573445831667264209
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v502 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v506 
=== Usages ===
=== Predecessor ===
v503 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v506  <|@  <|@
f <@*|@fixed>@ <|@
tid v506 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v491 
=== Predecessor ===
v502 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4580754078543609885
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v501 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v750 
=== Usages ===
v750 
=== Predecessor ===
v503 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v750  <|@  <|@
f <@~|@floating>@ <|@
tid v784 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j594 
index: j623 
=== Succesors ===
=== Usages ===
v750 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j594 index: j623  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v750 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v501 
address: v784 
=== Succesors ===
next: v725 
=== Usages ===
v725 
=== Predecessor ===
v501 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v501 address: v784 #next: v725  <|@  <|@
f <@~|@floating>@ <|@
tid v783 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j596 
index: j623 
=== Succesors ===
=== Usages ===
v725 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j596 index: j623  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v725 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v783 
value: v750 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v490 
=== Usages ===
=== Predecessor ===
v750 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v783 value: v750 stateAfter: - lastLocationAccess: - #next: v490  <|@  <|@
f <@~|@floating>@ <|@
tid j630 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j623 
y: j359 
=== Succesors ===
=== Usages ===
j614 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j623 y: j359  <|@  <|@
f <@*|@fixed>@ <|@
tid v490 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v491 
=== Predecessor ===
v725 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4582453030922005201
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j614 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v491 
values: j630 j623 
=== Succesors ===
=== Usages ===
v782 j622 j606 v651 v781 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v491 values: j630 j623  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v491 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v490 v506 
=== Succesors ===
next: v509 
=== Usages ===
j614 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v490 v506 #next: v509  <|@  <|@
f <@~|@floating>@ <|@
tid j650 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j453 
y: j649 
=== Succesors ===
=== Usages ===
v651 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j453 y: j649  <|@  <|@
f <@~|@floating>@ <|@
tid v651 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j650 
y: j614 
=== Succesors ===
=== Usages ===
v509 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j650 y: j614  <|@  <|@
f <@*|@fixed>@ <|@
tid v509 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v651 
=== Succesors ===
trueSuccessor: v508 
falseSuccessor: v507 
=== Usages ===
=== Predecessor ===
v491 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v651 #trueSuccessor: v508 #falseSuccessor: v507  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4573445831667264209
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v508 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v512 
=== Usages ===
=== Predecessor ===
v509 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v512  <|@  <|@
f <@*|@fixed>@ <|@
tid v512 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v495 
=== Predecessor ===
v508 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4580754078543609885
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v507 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v751 
=== Usages ===
v751 
=== Predecessor ===
v509 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v751  <|@  <|@
f <@~|@floating>@ <|@
tid v782 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j594 
index: j614 
=== Succesors ===
=== Usages ===
v751 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j594 index: j614  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v751 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v507 
address: v782 
=== Succesors ===
next: v723 
=== Usages ===
v723 
=== Predecessor ===
v507 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v507 address: v782 #next: v723  <|@  <|@
f <@~|@floating>@ <|@
tid v781 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j596 
index: j614 
=== Succesors ===
=== Usages ===
v723 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j596 index: j614  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v723 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v781 
value: v751 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v494 
=== Usages ===
=== Predecessor ===
v751 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v781 value: v751 stateAfter: - lastLocationAccess: - #next: v494  <|@  <|@
f <@~|@floating>@ <|@
tid j622 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j614 
y: j621 
=== Succesors ===
=== Usages ===
j606 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j614 y: j621  <|@  <|@
f <@*|@fixed>@ <|@
tid v494 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v495 
=== Predecessor ===
v723 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4582453030922005201
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j606 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v495 
values: j622 j614 
=== Succesors ===
=== Usages ===
v780 j613 j597 v655 v779 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v495 values: j622 j614  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v495 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v494 v512 
=== Succesors ===
next: v515 
=== Usages ===
j606 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v494 v512 #next: v515  <|@  <|@
f <@~|@floating>@ <|@
tid j654 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j453 
y: j653 
=== Succesors ===
=== Usages ===
v655 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j453 y: j653  <|@  <|@
f <@~|@floating>@ <|@
tid v655 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j654 
y: j606 
=== Succesors ===
=== Usages ===
v515 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j654 y: j606  <|@  <|@
f <@*|@fixed>@ <|@
tid v515 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v655 
=== Succesors ===
trueSuccessor: v514 
falseSuccessor: v513 
=== Usages ===
=== Predecessor ===
v495 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v655 #trueSuccessor: v514 #falseSuccessor: v513  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4573445831667264209
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v518 
=== Usages ===
=== Predecessor ===
v515 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v518  <|@  <|@
f <@*|@fixed>@ <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v498 
=== Predecessor ===
v514 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4580754078543609885
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v513 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v752 
=== Usages ===
v752 
=== Predecessor ===
v515 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v752  <|@  <|@
f <@~|@floating>@ <|@
tid v780 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j594 
index: j606 
=== Succesors ===
=== Usages ===
v752 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j594 index: j606  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v752 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16>
=== Inputs ===
stateBefore: - 
guard: v513 
address: v780 
=== Succesors ===
next: v721 
=== Usages ===
v721 
=== Predecessor ===
v513 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v513 address: v780 #next: v721  <|@  <|@
f <@~|@floating>@ <|@
tid v779 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j596 
index: j606 
=== Succesors ===
=== Usages ===
v721 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j596 index: j606  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v721 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v779 
value: v752 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v497 
=== Usages ===
=== Predecessor ===
v752 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v779 value: v752 stateAfter: - lastLocationAccess: - #next: v497  <|@  <|@
f <@~|@floating>@ <|@
tid j613 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j606 
y: j599 
=== Succesors ===
=== Usages ===
j597 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j606 y: j599  <|@  <|@
f <@*|@fixed>@ <|@
tid v497 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v498 
=== Predecessor ===
v721 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4582453030922005201
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j597 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v498 
values: j613 j606 
=== Succesors ===
=== Usages ===
v778 v659 v777 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v498 values: j613 j606  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v498 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v497 v518 
=== Succesors ===
next: v521 
=== Usages ===
j597 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v497 v518 #next: v521  <|@  <|@
f <@~|@floating>@ <|@
tid j658 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j453 
y: j657 
=== Succesors ===
=== Usages ===
v659 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j453 y: j657  <|@  <|@
f <@~|@floating>@ <|@
tid v659 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j658 
y: j597 
=== Succesors ===
=== Usages ===
v521 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j658 y: j597  <|@  <|@
f <@*|@fixed>@ <|@
tid v521 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v659 
=== Succesors ===
trueSuccessor: v520 
falseSuccessor: v519 
=== Usages ===
=== Predecessor ===
v498 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v659 #trueSuccessor: v520 #falseSuccessor: v519  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4573445831667264209
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v520 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v524 
=== Usages ===
=== Predecessor ===
v521 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v524  <|@  <|@
f <@*|@fixed>@ <|@
tid v524 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v484 
=== Predecessor ===
v520 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4580754078543609885
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v519 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i753 
=== Usages ===
i753 
=== Predecessor ===
v521 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i753  <|@  <|@
f <@~|@floating>@ <|@
tid v778 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j594 
index: j597 
=== Succesors ===
=== Usages ===
i753 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j594 index: j597  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i753 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v519 
address: v778 
=== Succesors ===
next: v719 
=== Usages ===
v719 
=== Predecessor ===
v519 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v519 address: v778 #next: v719  <|@  <|@
f <@~|@floating>@ <|@
tid v777 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j596 
index: j597 
=== Succesors ===
=== Usages ===
v719 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j596 index: j597  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v719 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v777 
value: i753 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v500 
=== Usages ===
=== Predecessor ===
i753 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v777 value: i753 stateAfter: - lastLocationAccess: - #next: v500  <|@  <|@
f <@*|@fixed>@ <|@
tid v500 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v484 
=== Predecessor ===
v719 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B14" "B31" "B30" 
    successors "B33" "B51" 
    xhandlers
    flags 
    probability 4586956630549375697
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v484 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v483 v500 v524 
=== Succesors ===
next: v662 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v483 v500 v524 #next: v662  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v662 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v531 
=== Usages ===
j664 
=== Predecessor ===
v484 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v531  <|@  <|@
f <@~|@floating>@ <|@
tid j452 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i207 
=== Succesors ===
=== Usages ===
j457 v590 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i207  <|@  <|@
f <@~|@floating>@ <|@
tid v590 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j453 
y: j452 
=== Succesors ===
=== Usages ===
v531 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j453 y: j452  <|@  <|@
f <@*|@fixed>@ <|@
tid v531 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v590 
=== Succesors ===
trueSuccessor: v530 
falseSuccessor: v529 
=== Usages ===
=== Predecessor ===
v662 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v590 #trueSuccessor: v530 #falseSuccessor: v529  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4582453030922005201
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v530 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v534 
=== Usages ===
=== Predecessor ===
v531 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v534  <|@  <|@
f <@~|@floating>@ <|@
tid v776 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a393 
index: j453 
=== Succesors ===
=== Usages ===
j664 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a393 index: j453  <|@  <|@
f <@~|@floating>@ <|@
tid j664 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v662 
address: v776 
=== Succesors ===
=== Usages ===
v787 v788 v789 v790 v791 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v662 address: v776  <|@  <|@
f <@~|@floating>@ <|@
tid j457 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j452 
y: j453 
=== Succesors ===
=== Usages ===
j709 j695 j700 j703 j706 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j452 y: j453  <|@  <|@
f <@~|@floating>@ <|@
tid j695 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967311 - 4294967279]
=== Inputs ===
x: j457 
y: j639 
=== Succesors ===
=== Usages ===
v696 v698 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j457 y: j639  <|@  <|@
f <@~|@floating>@ <|@
tid v696 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j695 
y: j400 
=== Succesors ===
=== Usages ===
v534 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j695 y: j400  <|@  <|@
f <@*|@fixed>@ <|@
tid v534 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v696 
=== Succesors ===
trueSuccessor: v532 
falseSuccessor: v533 
=== Usages ===
=== Predecessor ===
v530 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v696 #trueSuccessor: v532 #falseSuccessor: v533  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B38" 
    xhandlers
    flags 
    probability 4580754078543609885
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v532 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v543 
=== Usages ===
=== Predecessor ===
v534 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v543  <|@  <|@
f <@*|@fixed>@ <|@
tid v543 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v544 
=== Predecessor ===
v532 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4573445831667264209
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v533 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v535 
=== Usages ===
=== Predecessor ===
v534 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v535  <|@  <|@
f <@~|@floating>@ <|@
tid v738 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v737 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v535 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v536 
=== Predecessor ===
v533 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B50" 
    successors "B37" "B50" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4582453030922005201
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j689 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v536 
values: j400 j694 
=== Succesors ===
=== Usages ===
v791 j694 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v536 values: j400 j694  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v536 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v535 
=== Succesors ===
next: v737 
=== Usages ===
j689 v539 v540 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v535 #next: v737  <|@  <|@
f <@~|@floating>@ <|@
tid v791 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j664 
index: j689 
=== Succesors ===
=== Usages ===
v737 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j664 index: j689  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v737 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v791 
value: v738 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v542 
=== Usages ===
=== Predecessor ===
v536 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v791 value: v738 stateAfter: - lastLocationAccess: - #next: v542  <|@  <|@
f <@~|@floating>@ <|@
tid j694 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j689 
y: j147 
=== Succesors ===
=== Usages ===
j683 j689 v698 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j689 y: j147  <|@  <|@
f <@~|@floating>@ <|@
tid v698 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j695 
y: j694 
=== Succesors ===
=== Usages ===
v542 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j695 y: j694  <|@  <|@
f <@*|@fixed>@ <|@
tid v542 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v698 
=== Succesors ===
trueSuccessor: v539 
falseSuccessor: v541 
=== Usages ===
=== Predecessor ===
v737 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v698 #trueSuccessor: v539 #falseSuccessor: v541  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    probability 4573445831667264209
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v539 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v536 
=== Succesors ===
next: v545 
=== Usages ===
=== Predecessor ===
v542 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v536 #next: v545  <|@  <|@
f <@*|@fixed>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v544 
=== Predecessor ===
v539 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B34" "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4582453030922005201
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j683 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v544 
values: j400 j694 
=== Succesors ===
=== Usages ===
v790 j688 j677 v701 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v544 values: j400 j694  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v544 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v543 v545 
=== Succesors ===
next: v566 
=== Usages ===
j683 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v543 v545 #next: v566  <|@  <|@
f <@~|@floating>@ <|@
tid j700 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j457 
y: j645 
=== Succesors ===
=== Usages ===
v701 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j457 y: j645  <|@  <|@
f <@~|@floating>@ <|@
tid v701 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j700 
y: j683 
=== Succesors ===
=== Usages ===
v566 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j700 y: j683  <|@  <|@
f <@*|@fixed>@ <|@
tid v566 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v701 
=== Succesors ===
trueSuccessor: v565 
falseSuccessor: v564 
=== Usages ===
=== Predecessor ===
v544 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v701 #trueSuccessor: v565 #falseSuccessor: v564  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4573445831667264209
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v565 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v569 
=== Usages ===
=== Predecessor ===
v566 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v569  <|@  <|@
f <@*|@fixed>@ <|@
tid v569 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v555 
=== Predecessor ===
v565 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4580754078543609885
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v564 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v736 
=== Usages ===
=== Predecessor ===
v566 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v736  <|@  <|@
f <@~|@floating>@ <|@
tid v790 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j664 
index: j683 
=== Succesors ===
=== Usages ===
v736 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j664 index: j683  <|@  <|@
f <@~|@floating>@ <|@
tid v742 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v736 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v736 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v790 
value: v742 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v554 
=== Usages ===
=== Predecessor ===
v564 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v790 value: v742 stateAfter: - lastLocationAccess: - #next: v554  <|@  <|@
f <@~|@floating>@ <|@
tid j688 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j683 
y: j359 
=== Succesors ===
=== Usages ===
j677 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j683 y: j359  <|@  <|@
f <@*|@fixed>@ <|@
tid v554 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v555 
=== Predecessor ===
v736 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4582453030922005201
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j677 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v555 
values: j688 j683 
=== Succesors ===
=== Usages ===
v789 j682 j671 v704 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v555 values: j688 j683  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v555 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v554 v569 
=== Succesors ===
next: v572 
=== Usages ===
j677 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v554 v569 #next: v572  <|@  <|@
f <@~|@floating>@ <|@
tid j703 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j457 
y: j649 
=== Succesors ===
=== Usages ===
v704 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j457 y: j649  <|@  <|@
f <@~|@floating>@ <|@
tid v704 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j703 
y: j677 
=== Succesors ===
=== Usages ===
v572 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j703 y: j677  <|@  <|@
f <@*|@fixed>@ <|@
tid v572 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v704 
=== Succesors ===
trueSuccessor: v571 
falseSuccessor: v570 
=== Usages ===
=== Predecessor ===
v555 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v704 #trueSuccessor: v571 #falseSuccessor: v570  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4573445831667264209
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v571 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v575 
=== Usages ===
=== Predecessor ===
v572 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v575  <|@  <|@
f <@*|@fixed>@ <|@
tid v575 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v558 
=== Predecessor ===
v571 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4580754078543609885
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v570 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v734 
=== Usages ===
=== Predecessor ===
v572 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v734  <|@  <|@
f <@~|@floating>@ <|@
tid v789 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j664 
index: j677 
=== Succesors ===
=== Usages ===
v734 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j664 index: j677  <|@  <|@
f <@~|@floating>@ <|@
tid v741 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v734 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v734 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v789 
value: v741 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v557 
=== Usages ===
=== Predecessor ===
v570 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v789 value: v741 stateAfter: - lastLocationAccess: - #next: v557  <|@  <|@
f <@~|@floating>@ <|@
tid j682 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j677 
y: j621 
=== Succesors ===
=== Usages ===
j671 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j677 y: j621  <|@  <|@
f <@*|@fixed>@ <|@
tid v557 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v558 
=== Predecessor ===
v734 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4582453030922005201
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j671 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v558 
values: j682 j677 
=== Succesors ===
=== Usages ===
v788 j676 j665 v707 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v558 values: j682 j677  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v558 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v557 v575 
=== Succesors ===
next: v578 
=== Usages ===
j671 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v557 v575 #next: v578  <|@  <|@
f <@~|@floating>@ <|@
tid j706 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j457 
y: j653 
=== Succesors ===
=== Usages ===
v707 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j457 y: j653  <|@  <|@
f <@~|@floating>@ <|@
tid v707 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j706 
y: j671 
=== Succesors ===
=== Usages ===
v578 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j706 y: j671  <|@  <|@
f <@*|@fixed>@ <|@
tid v578 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v707 
=== Succesors ===
trueSuccessor: v577 
falseSuccessor: v576 
=== Usages ===
=== Predecessor ===
v558 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v707 #trueSuccessor: v577 #falseSuccessor: v576  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4573445831667264209
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v577 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v581 
=== Usages ===
=== Predecessor ===
v578 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v581  <|@  <|@
f <@*|@fixed>@ <|@
tid v581 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v561 
=== Predecessor ===
v577 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4580754078543609885
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v576 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v732 
=== Usages ===
=== Predecessor ===
v578 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v732  <|@  <|@
f <@~|@floating>@ <|@
tid v788 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j664 
index: j671 
=== Succesors ===
=== Usages ===
v732 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j664 index: j671  <|@  <|@
f <@~|@floating>@ <|@
tid v740 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16>
value: SIMD<0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v732 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v732 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v788 
value: v740 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v560 
=== Usages ===
=== Predecessor ===
v576 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v788 value: v740 stateAfter: - lastLocationAccess: - #next: v560  <|@  <|@
f <@~|@floating>@ <|@
tid j676 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j671 
y: j599 
=== Succesors ===
=== Usages ===
j665 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j671 y: j599  <|@  <|@
f <@*|@fixed>@ <|@
tid v560 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v561 
=== Predecessor ===
v732 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4582453030922005201
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j665 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v561 
values: j676 j671 
=== Succesors ===
=== Usages ===
v787 v710 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v561 values: j676 j671  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v561 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v560 v581 
=== Succesors ===
next: v584 
=== Usages ===
j665 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v560 v581 #next: v584  <|@  <|@
f <@~|@floating>@ <|@
tid j709 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j457 
y: j657 
=== Succesors ===
=== Usages ===
v710 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j457 y: j657  <|@  <|@
f <@~|@floating>@ <|@
tid v710 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j709 
y: j665 
=== Succesors ===
=== Usages ===
v584 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j709 y: j665  <|@  <|@
f <@*|@fixed>@ <|@
tid v584 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v710 
=== Succesors ===
trueSuccessor: v583 
falseSuccessor: v582 
=== Usages ===
=== Predecessor ===
v561 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v710 #trueSuccessor: v583 #falseSuccessor: v582  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 4573445831667264209
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v583 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v587 
=== Usages ===
=== Predecessor ===
v584 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v587  <|@  <|@
f <@*|@fixed>@ <|@
tid v587 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v548 
=== Predecessor ===
v583 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 4580754078543609885
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v582 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v730 
=== Usages ===
=== Predecessor ===
v584 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v730  <|@  <|@
f <@~|@floating>@ <|@
tid v787 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j664 
index: j665 
=== Succesors ===
=== Usages ===
v730 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j664 index: j665  <|@  <|@
f <@~|@floating>@ <|@
tid i739 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i16 [0] ⇈0000000000000000
stampKind: i16
value: short[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v730 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v730 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v787 
value: i739 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v563 
=== Usages ===
=== Predecessor ===
v582 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v787 value: i739 stateAfter: - lastLocationAccess: - #next: v563  <|@  <|@
f <@*|@fixed>@ <|@
tid v563 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v548 
=== Predecessor ===
v730 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B36" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4580754078543609885
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v541 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v540 
=== Usages ===
=== Predecessor ===
v542 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v540  <|@  <|@
f <@*|@fixed>@ <|@
tid v540 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v536 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v541 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v536  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B52" 
    xhandlers
    flags 
    probability 4582453030922005201
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v529 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v547 
=== Usages ===
=== Predecessor ===
v531 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v547  <|@  <|@
f <@*|@fixed>@ <|@
tid v547 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v548 
=== Predecessor ===
v529 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B49" "B48" 
    successors "B53" 
    xhandlers
    flags 
    probability 4586956630549375697
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v548 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v547 v563 v587 
=== Succesors ===
next: a307 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v547 v563 v587 #next: a307  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a307 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a393 
=== Succesors ===
next: v203 
=== Usages ===
a117 a202 
=== Predecessor ===
v548 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a393 #next: v203  <|@  <|@
f <@~|@floating>@ <|@
tid a202 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
op: Compress
stamp: n! -
=== Inputs ===
value: a307 
=== Succesors ===
=== Usages ===
v203 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a307  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v203 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: AbstractStringBuilder.value
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v758 
value: a202 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j428 
=== Usages ===
=== Predecessor ===
a307 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v758 value: a202 stateAfter: - lastLocationAccess: - #next: j428  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j428 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v434 
=== Usages ===
j430 
=== Predecessor ===
v203 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v434  <|@  <|@
f <@~|@floating>@ <|@
tid i429 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j430 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j430 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j428 
y: i429 
=== Succesors ===
=== Usages ===
v773 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j428 y: i429  <|@  <|@
f <@~|@floating>@ <|@
tid j433 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v773 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v773 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j430 
index: j433 
=== Succesors ===
=== Usages ===
v434 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j430 index: j433  <|@  <|@
f <@~|@floating>@ <|@
tid i435 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v434 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v434 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v773 
value: i435 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v114 
=== Usages ===
=== Predecessor ===
j428 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v773 value: i435 stateAfter: - lastLocationAccess: - #next: v114  <|@  <|@
f <@*|@fixed>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v115 
=== Predecessor ===
v434 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B2" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a117 <|@
d <@d|@=== Debug Properties ===
stamp: a# [C
valueDescription: a -
=== Inputs ===
merge: v115 
values: a307 a150 
=== Succesors ===
=== Usages ===
v760 j442 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v115 values: a307 a150  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v114 v116 
=== Succesors ===
next: v170 
=== Usages ===
a117 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v114 v116 #next: v170  <|@  <|@
f <@~|@floating>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 22]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i748 
y: i45 
=== Succesors ===
=== Usages ===
v170 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i748 y: i45  <|@  <|@
f <@*|@fixed>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 33]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v164 
=== Succesors ===
trueSuccessor: v169 
falseSuccessor: v165 
=== Usages ===
=== Predecessor ===
v115 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v164 #trueSuccessor: v169 #falseSuccessor: v165  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B57" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v169 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v344 
=== Usages ===
=== Predecessor ===
v170 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v344  <|@  <|@
f <@*|@fixed>@ <|@
tid v344 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v338 
=== Predecessor ===
v169 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B58" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 36]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: i754 
=== Usages ===
=== Predecessor ===
v170 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i754  <|@  <|@
f <@~|@floating>@ <|@
tid v760 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a117 
index: - 
=== Succesors ===
=== Usages ===
i754 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a117 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i754 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 85]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v760 
=== Succesors ===
next: v187 
=== Usages ===
i182 
=== Predecessor ===
v165 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v760 #next: v187  <|@  <|@
f <@~|@floating>@ <|@
tid i182 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: i32 [-2147483647 - 2147483647]
=== Inputs ===
x: i754 
y: i747 
=== Succesors ===
=== Usages ===
v183 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i754 y: i747  <|@  <|@
f <@~|@floating>@ <|@
tid v183 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i182 
y: i748 
=== Succesors ===
=== Usages ===
v187 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i182 y: i748  <|@  <|@
f <@*|@fixed>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v183 
=== Succesors ===
trueSuccessor: v186 
falseSuccessor: v184 
=== Usages ===
=== Predecessor ===
i754 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v183 #trueSuccessor: v186 #falseSuccessor: v184  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v346 
=== Usages ===
=== Predecessor ===
v187 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v346  <|@  <|@
f <@*|@fixed>@ <|@
tid v346 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v338 
=== Predecessor ===
v186 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B54" "B56" 
    successors 
    xhandlers
    flags 
    probability 4581393005893843005
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v344 v346 
=== Succesors ===
next: v792 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v344 v346 #next: v792  <|@  <|@
tid ?6 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<StringBuilder.append(CharSequence)>
duringCall: true
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
rethrowException: false
sourceFile: StringBuilder.java
sourceLine: 76
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 
=== Succesors ===
=== Usages ===
?20 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2  <|@  <|@
tid ?20 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<StringBuilder.append(CharSequence)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: StringBuilder.java
sourceLine: 166
stackSize: 0
=== Inputs ===
outerFrameState: ?6 
values: a1 - 
=== Succesors ===
=== Usages ===
?24 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?6 values: a1 -  <|@  <|@
tid ?24 <|@
d <@d|@=== Debug Properties ===
bci: 21
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(CharSequence)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 484
stackSize: 0
=== Inputs ===
outerFrameState: ?20 
values: - - 
=== Succesors ===
=== Usages ===
?33 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?20 values: - -  <|@  <|@
tid ?33 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<StringBuilder.append(String)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: StringBuilder.java
sourceLine: 76
stackSize: 0
=== Inputs ===
outerFrameState: ?24 
values: - - 
=== Succesors ===
=== Usages ===
?56 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?24 values: - -  <|@  <|@
tid ?56 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<StringBuilder.append(String)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: StringBuilder.java
sourceLine: 136
stackSize: 0
=== Inputs ===
outerFrameState: ?33 
values: a1 - 
=== Succesors ===
=== Usages ===
?44 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?33 values: a1 -  <|@  <|@
tid ?44 <|@
d <@d|@=== Debug Properties ===
bci: 24
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(String)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 449
stackSize: 0
=== Inputs ===
outerFrameState: ?56 
values: a1 a2 i747 
=== Succesors ===
=== Usages ===
v792 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?56 values: a1 a2 i747  <|@  <|@
f <@*|@fixed>@ <|@
tid v792 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 188
reason: RuntimeConstraint
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?44 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v338 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?44  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v184 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: j438 
=== Usages ===
=== Predecessor ===
v187 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j438  <|@  <|@
f <@~|@floating>@ <|@
tid a139 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:447) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a744 
=== Succesors ===
=== Usages ===
j438 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a744  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j438 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: i64
=== Inputs ===
object: a139 
=== Succesors ===
next: j442 
=== Usages ===
v774 
=== Predecessor ===
v184 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a139 #next: j442  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j442 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: i64
=== Inputs ===
object: a117 
=== Succesors ===
next: v448 
=== Usages ===
v775 
=== Predecessor ===
j438 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a117 #next: v448  <|@  <|@
f <@~|@floating>@ <|@
tid v774 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j438 
index: - 
=== Succesors ===
=== Usages ===
v448 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j438 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j443 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i748 
=== Succesors ===
=== Usages ===
v775 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i748  <|@  <|@
f <@~|@floating>@ <|@
tid v775 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j442 
index: j443 
=== Succesors ===
=== Usages ===
v448 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j442 index: j443  <|@  <|@
f <@~|@floating>@ <|@
tid j447 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i747 
=== Succesors ===
=== Usages ===
v448 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i747  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v448 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: charArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v774 v775 j447 
=== Succesors ===
next: v199 
=== Usages ===
=== Predecessor ===
j442 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v774 v775 j447 #next: v199  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:450) [bci: 45]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v757 
value: i41 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v8 
=== Usages ===
=== Predecessor ===
v448 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v757 value: i41 stateAfter: - lastLocationAccess: - #next: v8  <|@  <|@
f <@*|@fixed>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 5]
stamp: void
=== Inputs ===
result: a1 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v199 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a1 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580754078543609885
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v477 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v476 
=== Usages ===
=== Predecessor ===
v478 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v476  <|@  <|@
f <@*|@fixed>@ <|@
tid v476 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v471 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v477 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v471  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:481) [bci: 1]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v357 
=== Usages ===
=== Predecessor ===
v352 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v357  <|@  <|@
f <@~|@floating>@ <|@
tid i323 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -34579
stableDimension: 0
stamp: i32 [-34579] ⇊00000000ffff78ed ⇈00000000ffff78ed
stampKind: i32
value: int[-34579|0xffffffffffff78ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i325 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v357 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:481) [bci: 1]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v321 
=== Predecessor ===
v349 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" "B60" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i325 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-51475 - -34579] ⇊00000000ffff20e5 ⇈00000000ffff7ffd
valueDescription: i32
=== Inputs ===
merge: v321 
values: i333 i335 i323 
=== Succesors ===
=== Usages ===
v327 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v321 values: i333 i335 i323  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v321 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v332 v334 v357 
=== Succesors ===
next: v327 
=== Usages ===
i325 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v332 v334 v357 #next: v327  <|@  <|@
f <@~|@floating>@ <|@
tid a324 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v327 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v327 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i325 
speculation: a324 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v321 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i325 speculation: a324  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v743 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v743  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/lang/StringBuilder;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 ?44 ?6 ?20 v8 v758 ?56 v757 j428 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a -
uncheckedStamp: a Ljava/lang/CharSequence;
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v755 ?6 v763 ?44 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<StringBuilder.append(CharSequence)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: StringBuilder.java
sourceLine: 76
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 
=== Succesors ===
=== Usages ===
v327 a389 v743 v793 i746 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2  <|@  <|@
f <@~|@floating>@ <|@
tid v763 <|@
result [v1|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v743 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v743 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:483) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v763 
=== Succesors ===
next: v352 
=== Usages ===
v450 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v763 #next: v352  <|@  <|@
f <@~|@floating>@ <|@
tid v449 <|@
result meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:483) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v450 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v450 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:483) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v743 
y: v449 
=== Succesors ===
=== Usages ===
v352 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v743 y: v449  <|@  <|@
f <@*|@fixed>@ <|@
tid v352 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:481) [bci: 1]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v450 
=== Succesors ===
trueSuccessor: v350 
falseSuccessor: v349 
=== Usages ===
=== Predecessor ===
v743 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v450 #trueSuccessor: v350 #falseSuccessor: v349  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@14f91edb slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction CMP [v1|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v350 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:481) [bci: 1]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: a744 
=== Usages ===
=== Predecessor ===
v352 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a744  <|@  <|@
f <@~|@floating>@ <|@
tid v755 <|@
result [v1|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a744 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a744 <|@
result v2|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:447) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v755 
=== Succesors ===
next: v793 
=== Usages ===
a139 v793 v756 
=== Predecessor ===
v350 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v755 #next: v793  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v793 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a744 
=== Succesors ===
next: a745 
=== Usages ===
=== Predecessor ===
a744 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a744 #next: a745  <|@  <|@
f <@~|@floating>@ <|@
tid v758 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a745 v203 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a745 <|@
result v3|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractStringBuilder.value
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v758 
=== Succesors ===
next: i746 
=== Usages ===
a150 v761 v759 
=== Predecessor ===
v793 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v758 #next: i746  <|@  <|@
f <@~|@floating>@ <|@
tid v759 <|@
result [v3|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a745 
=== Succesors ===
=== Usages ===
i746 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a745  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i746 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 5]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v759 
=== Succesors ===
next: i747 
=== Usages ===
i59 i93 i301 v279 
=== Predecessor ===
a745 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v759 #next: i747  <|@  <|@
f <@~|@floating>@ <|@
tid v756 <|@
result [v2|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a744 
=== Succesors ===
=== Usages ===
i747 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a744  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i747 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:447) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v756 
=== Succesors ===
next: i748 
=== Usages ===
i41 ?44 i182 j447 
=== Predecessor ===
i746 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v756 #next: i748  <|@  <|@
f <@~|@floating>@ <|@
tid v757 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i748 v199 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i748 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 16]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v757 
=== Succesors ===
next: v64 
=== Usages ===
i41 j443 v164 v183 
=== Predecessor ===
i747 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v757 #next: v64  <|@  <|@
f <@~|@floating>@ <|@
tid i41 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 20]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: i32
=== Inputs ===
x: i747 
y: i748 
=== Succesors ===
=== Usages ===
v199 i59 i96 i207 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i747 y: i748  <|@  <|@
f <@~|@floating>@ <|@
tid i59 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: i32
=== Inputs ===
x: i41 
y: i746 
=== Succesors ===
=== Usages ===
v61 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i41 y: i746  <|@  <|@
f <@~|@floating>@ <|@
tid i60 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v61 i93 v106 i365 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i59 
y: i60 
=== Succesors ===
=== Usages ===
v64 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i59 y: i60  <|@  <|@
f <@~|@floating>@ <|@
tid i45 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 25]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
a389 v164 v97 v110 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: void
trueSuccessorProbability: 0.9528445987940962
=== Inputs ===
condition: v61 
=== Succesors ===
trueSuccessor: v62 
falseSuccessor: v63 
=== Usages ===
=== Predecessor ===
i748 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v61 #trueSuccessor: v62 #falseSuccessor: v63  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[.] = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v2|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v4|DWORD = MOV [v3|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV [v2|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = ADD (x: v5|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SUB (x: v7|DWORD, ~y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v8|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9528445987940962 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B53" 
    xhandlers
    flags 
    probability 4606757680705418579
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v116 
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v116  <|@  <|@
f <@~|@floating>@ <|@
tid a150 <|@
result v9|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a745 
=== Succesors ===
=== Usages ===
a117 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a745  <|@  <|@
f <@*|@fixed>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v115 
=== Predecessor ===
v62 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@18965d9d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v9|QWORD[.]] destination: B2 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4586956630549375696
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 10]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v231 
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v231  <|@  <|@
f <@~|@floating>@ <|@
tid i93 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:150) [bci: 6]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i746 
y: i60 
=== Succesors ===
=== Usages ===
i95 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i746 y: i60  <|@  <|@
f <@~|@floating>@ <|@
tid i94 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:150) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i95 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i95 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:150) [bci: 8]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i93 
y: i94 
=== Succesors ===
=== Usages ===
i96 i207 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i93 y: i94  <|@  <|@
f <@~|@floating>@ <|@
tid i96 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:151) [bci: 12]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: i32
=== Inputs ===
x: i95 
y: i41 
=== Succesors ===
=== Usages ===
v97 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i95 y: i41  <|@  <|@
f <@~|@floating>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:151) [bci: 13]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i96 
y: i45 
=== Succesors ===
=== Usages ===
i207 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i96 y: i45  <|@  <|@
f <@~|@floating>@ <|@
tid i207 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v97 
trueValue: i41 
falseValue: i95 
=== Succesors ===
=== Usages ===
j452 i109 v106 v374 v279 i301 a389 v416 i365 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v97 trueValue: i41 falseValue: i95  <|@  <|@
f <@~|@floating>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i207 
y: i60 
=== Succesors ===
=== Usages ===
v231 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i207 y: i60  <|@  <|@
f <@*|@fixed>@ <|@
tid v231 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v106 
=== Succesors ===
trueSuccessor: v230 
falseSuccessor: v228 
=== Usages ===
=== Predecessor ===
v63 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v106 #trueSuccessor: v230 #falseSuccessor: v228  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = SHL v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = LEA [v10|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = SUB (x: v11|DWORD, ~y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v12|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = CMOVE (falseValue: v11|DWORD, ~trueValue: v7|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction CMP v13|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v332 
=== Usages ===
=== Predecessor ===
v231 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v332  <|@  <|@
f <@~|@floating>@ <|@
tid i333 <|@
result int[-51219|0xffffffffffff37ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -51219
stableDimension: 0
stamp: i32 [-51219] ⇊00000000ffff37ed ⇈00000000ffff37ed
stampKind: i32
value: int[-51219|0xffffffffffff37ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i325 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v332 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v321 
=== Predecessor ===
v230 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-51219|0xffffffffffff37ed]] destination: B4 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4586956630549375696
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v235 
=== Usages ===
=== Predecessor ===
v231 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v235  <|@  <|@
f <@~|@floating>@ <|@
tid i108 <|@
result int[2147483639|0x7ffffff7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 22]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
rawvalue: 2147483639
stableDimension: 0
stamp: i32 [2147483639] ⇊000000007ffffff7 ⇈000000007ffffff7
stampKind: i32
value: int[2147483639|0x7ffffff7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i109 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i109 <|@
result v15|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 25]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: i32
=== Inputs ===
x: i108 
y: i207 
=== Succesors ===
=== Usages ===
v110 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i108 y: i207  <|@  <|@
f <@~|@floating>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 26]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i109 
y: i45 
=== Succesors ===
=== Usages ===
v235 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i109 y: i45  <|@  <|@
f <@*|@fixed>@ <|@
tid v235 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 26]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v110 
=== Succesors ===
trueSuccessor: v234 
falseSuccessor: v232 
=== Usages ===
=== Predecessor ===
v228 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v110 #trueSuccessor: v234 #falseSuccessor: v232  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE input: int[2147483639|0x7ffffff7] <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = SUB (x: v14|DWORD, ~y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v15|DWORD, y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v234 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 26]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v334 
=== Usages ===
=== Predecessor ===
v235 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v334  <|@  <|@
f <@~|@floating>@ <|@
tid i335 <|@
result int[-51475|0xffffffffffff36ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -51475
stableDimension: 0
stamp: i32 [-51475] ⇊00000000ffff36ed ⇈00000000ffff36ed
stampKind: i32
value: int[-51475|0xffffffffffff36ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i325 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v334 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v321 
=== Predecessor ===
v234 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-51475|0xffffffffffff36ed]] destination: B6 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B11" 
    xhandlers
    flags 
    probability 4586956630549375696
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v232 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 26]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: j368 
=== Usages ===
=== Predecessor ===
v235 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j368  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j368 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j413 
=== Usages ===
v764 v765 
=== Predecessor ===
v232 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j413  <|@  <|@
f <@~|@floating>@ <|@
tid v764 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j368 
index: - 
=== Succesors ===
=== Usages ===
j413 v415 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j368 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j413 <|@
result v16|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v764 
=== Succesors ===
next: j414 
=== Usages ===
j372 v766 v767 a388 v772 v768 v769 v770 v771 
=== Predecessor ===
j368 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v764 #next: j414  <|@  <|@
f <@~|@floating>@ <|@
tid v765 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j368 
index: - 
=== Succesors ===
=== Usages ===
j414 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j368 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j414 <|@
result v17|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v765 
=== Succesors ===
next: v377 
=== Usages ===
v378 
=== Predecessor ===
j413 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v765 #next: v377  <|@  <|@
f <@~|@floating>@ <|@
tid i373 <|@
result int[16777215|0xffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v374 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v374 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i207 
y: i373 
=== Succesors ===
=== Usages ===
v377 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i207 y: i373  <|@  <|@
f <@~|@floating>@ <|@
tid j364 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v417 v463 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v377 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v374 
=== Succesors ===
trueSuccessor: v376 
falseSuccessor: v375 
=== Usages ===
=== Predecessor ===
j414 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v374 #trueSuccessor: v376 #falseSuccessor: v375  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v13|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B7 -> B8 falseDestination: B7 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4586277049598017570
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v376 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v384 
=== Usages ===
=== Predecessor ===
v377 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v384  <|@  <|@
f <@~|@floating>@ <|@
tid i365 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i207 
y: i60 
=== Succesors ===
=== Usages ===
i397 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i207 y: i60  <|@  <|@
f <@~|@floating>@ <|@
tid i396 <|@
result int[23|0x17] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i397 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i397 <|@
result v19|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i365 
y: i396 
=== Succesors ===
=== Usages ===
i367 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i365 y: i396  <|@  <|@
f <@~|@floating>@ <|@
tid i366 <|@
result int[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i367 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i367 <|@
result v20|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i397 
y: i366 
=== Succesors ===
=== Usages ===
j371 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i397 y: i366  <|@  <|@
f <@~|@floating>@ <|@
tid j371 <|@
result v21|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i367 
=== Succesors ===
=== Usages ===
j372 v768 v769 v770 v771 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i367  <|@  <|@
f <@~|@floating>@ <|@
tid j372 <|@
result v22|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: i64
=== Inputs ===
x: j371 
y: j413 
=== Succesors ===
=== Usages ===
v378 v415 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j371 y: j413  <|@  <|@
f <@~|@floating>@ <|@
tid v378 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j414 
y: j372 
=== Succesors ===
=== Usages ===
v384 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j414 y: j372  <|@  <|@
f <@*|@fixed>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v378 
=== Succesors ===
trueSuccessor: v383 
falseSuccessor: v382 
=== Usages ===
=== Predecessor ===
v376 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v378 #trueSuccessor: v383 #falseSuccessor: v382  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = SHL v13|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = LEA [v18|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = AND v19|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = MOVSXD v20|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = ADD (x: v21|QWORD, y: v16|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v22|QWORD, y: v17|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4556464396203846584
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v381 
=== Usages ===
=== Predecessor ===
v384 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v381  <|@  <|@
f <@*|@fixed>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v380 
=== Predecessor ===
v383 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    probability 4586215887312395339
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v382 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v415 
=== Usages ===
=== Predecessor ===
v384 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v415  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v764 
value: j372 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v402 
=== Usages ===
=== Predecessor ===
v382 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v764 value: j372 stateAfter: - lastLocationAccess: - #next: v402  <|@  <|@
f <@~|@floating>@ <|@
tid v768 <|@
result [v21|QWORD + v16|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j371 
index: j413 
=== Succesors ===
=== Usages ===
v402 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j371 index: j413  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v402 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: void
=== Inputs ===
address: v768 
=== Succesors ===
next: v405 
=== Usages ===
=== Predecessor ===
v415 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v768 #next: v405  <|@  <|@
f <@~|@floating>@ <|@
tid v769 <|@
result [v21|QWORD + v16|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j371 
index: j413 
=== Succesors ===
=== Usages ===
v405 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j371 index: j413  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: void
=== Inputs ===
address: v769 
=== Succesors ===
next: v408 
=== Usages ===
=== Predecessor ===
v402 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v769 #next: v408  <|@  <|@
f <@~|@floating>@ <|@
tid v770 <|@
result [v21|QWORD + v16|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j371 
index: j413 
=== Succesors ===
=== Usages ===
v408 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j371 index: j413  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v408 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: void
=== Inputs ===
address: v770 
=== Succesors ===
next: v411 
=== Usages ===
=== Predecessor ===
v405 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v770 #next: v411  <|@  <|@
f <@~|@floating>@ <|@
tid v771 <|@
result [v21|QWORD + v16|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j371 
index: j413 
=== Succesors ===
=== Usages ===
v411 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j371 index: j413  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v411 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: void
=== Inputs ===
address: v771 
=== Succesors ===
next: v416 
=== Usages ===
=== Predecessor ===
v408 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v771 #next: v416  <|@  <|@
f <@~|@floating>@ <|@
tid v766 <|@
result [v16|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j413 
index: - 
=== Succesors ===
=== Usages ===
v416 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j413 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v416 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v766 
value: i207 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v417 
=== Usages ===
=== Predecessor ===
v411 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v766 value: i207 stateAfter: - lastLocationAccess: - #next: v417  <|@  <|@
f <@~|@floating>@ <|@
tid v767 <|@
result [v16|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j413 
index: - 
=== Succesors ===
=== Usages ===
v417 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j413 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v417 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v767 
value: j364 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v420 
=== Usages ===
=== Predecessor ===
v416 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v767 value: j364 stateAfter: - lastLocationAccess: - #next: v420  <|@  <|@
f <@~|@floating>@ <|@
tid v772 <|@
result [v16|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j413 
index: - 
=== Succesors ===
=== Usages ===
v420 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j413 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v451 <|@
result meta{HotSpotType<[C, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
rawvalue: meta{HotSpotType<[C, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[C, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v420 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v420 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v772 
value: v451 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v387 
=== Usages ===
=== Predecessor ===
v417 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v772 value: v451 stateAfter: - lastLocationAccess: - #next: v387  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v387 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: a388 
=== Usages ===
=== Predecessor ===
v420 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a388  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a388 <|@
result v23|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j413 
=== Succesors ===
next: v390 
=== Usages ===
a393 
=== Predecessor ===
v387 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j413 #next: v390  <|@  <|@
f <@*|@fixed>@ <|@
tid v390 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v391 
=== Predecessor ===
a388 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v22|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v21|QWORD + v16|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v21|QWORD + v16|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v21|QWORD + v16|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v21|QWORD + v16|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v16|QWORD + 12], y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v16|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v16|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = MOVE v16|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v23|QWORD[.]] destination: B10 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4572086669764547954
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v379 
=== Usages ===
=== Predecessor ===
v377 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v379  <|@  <|@
f <@*|@fixed>@ <|@
tid v379 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v380 
=== Predecessor ===
v375 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B9" 
    successors "B13" 
    xhandlers
    flags 
    probability 4572575968049525806
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v379 v381 
=== Succesors ===
next: a389 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v379 v381 #next: a389  <|@  <|@
f <@~|@floating>@ <|@
tid v363 <|@
result v24|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
rawvalue: meta{HotSpotType<[C, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[C, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a389 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a389 <|@
result v25|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v363 i207 i45 
=== Succesors ===
next: v392 
=== Usages ===
a393 
=== Predecessor ===
v380 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v363 i207 i45 #next: v392  <|@  <|@
f <@*|@fixed>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v391 
=== Predecessor ===
a389 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v24|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v13|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v25|QWORD[.]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B10" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4586956630549375697
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a393 <|@
result v26|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v391 
values: a388 a389 
=== Succesors ===
=== Usages ===
v776 a307 v762 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v391 values: a388 a389  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v390 v392 
=== Succesors ===
next: v593 
=== Usages ===
a393 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v390 v392 #next: v593  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v593 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v466 
=== Usages ===
j594 j596 
=== Predecessor ===
v391 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v466  <|@  <|@
f <@~|@floating>@ <|@
tid v279 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:102) [bci: 9]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i746 
y: i207 
=== Succesors ===
=== Usages ===
i301 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i746 y: i207  <|@  <|@
f <@~|@floating>@ <|@
tid i301 <|@
result v27|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v279 
trueValue: i746 
falseValue: i207 
=== Succesors ===
=== Usages ===
j453 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v279 trueValue: i746 falseValue: i207  <|@  <|@
f <@~|@floating>@ <|@
tid j453 <|@
result v28|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i301 
=== Succesors ===
=== Usages ===
j658 v776 j457 v463 v590 j640 j646 j650 j654 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i301  <|@  <|@
f <@~|@floating>@ <|@
tid v463 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j453 
y: j364 
=== Succesors ===
=== Usages ===
v466 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j453 y: j364  <|@  <|@
f <@~|@floating>@ <|@
tid j657 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j658 j709 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j599 <|@
result long[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j613 j676 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j653 <|@
result long[-2|0xfffffffffffffffe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j654 j706 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j621 <|@
result long[4|0x4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j622 j682 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j649 <|@
result long[-4|0xfffffffffffffffc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j650 j703 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j359 <|@
result long[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:483) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j688 j630 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j645 <|@
result long[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j646 j700 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j147 <|@
result long[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
rawvalue: 16
stableDimension: 0
stamp: i64 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j694 j638 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j639 <|@
result long[-16|0xfffffffffffffff0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16
stableDimension: 0
stamp: i64 [-16] ⇊fffffffffffffff0 ⇈fffffffffffffff0
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j640 j695 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j400 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j683 v696 j623 j631 v641 j689 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v466 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v463 
=== Succesors ===
trueSuccessor: v464 
falseSuccessor: v465 
=== Usages ===
=== Predecessor ===
v593 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v463 #trueSuccessor: v464 #falseSuccessor: v465  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v26|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v13|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = CMOVE (falseValue: v13|DWORD, ~trueValue: v4|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOVSXD v27|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v28|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B32" 
    xhandlers
    flags 
    probability 4582453030922005201
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v464 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v483 
=== Usages ===
=== Predecessor ===
v466 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v483  <|@  <|@
f <@*|@fixed>@ <|@
tid v483 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v484 
=== Predecessor ===
v464 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B14 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4582453030922005201
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v465 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v469 
=== Usages ===
=== Predecessor ===
v466 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v469  <|@  <|@
f <@~|@floating>@ <|@
tid v762 <|@
result [v26|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a393 
index: - 
=== Succesors ===
=== Usages ===
j596 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a393 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j596 <|@
result v29|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v593 
address: v762 
=== Succesors ===
=== Usages ===
v777 v779 v781 v783 v785 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v593 address: v762  <|@  <|@
f <@~|@floating>@ <|@
tid v761 <|@
result [v3|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a745 
=== Succesors ===
=== Usages ===
j594 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a745  <|@  <|@
f <@~|@floating>@ <|@
tid j594 <|@
result v30|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v593 
address: v761 
=== Succesors ===
=== Usages ===
v778 v780 v782 v784 v786 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v593 address: v761  <|@  <|@
f <@~|@floating>@ <|@
tid j640 <|@
result v31|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483664 - 2147483631]
=== Inputs ===
x: j453 
y: j639 
=== Succesors ===
=== Usages ===
v641 v643 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j453 y: j639  <|@  <|@
f <@~|@floating>@ <|@
tid v641 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j640 
y: j400 
=== Succesors ===
=== Usages ===
v469 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j640 y: j400  <|@  <|@
f <@*|@fixed>@ <|@
tid v469 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v641 
=== Succesors ===
trueSuccessor: v467 
falseSuccessor: v468 
=== Usages ===
=== Predecessor ===
v465 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v641 #trueSuccessor: v467 #falseSuccessor: v468  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = LEA [v26|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[*] = LEA [v3|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = LEA [v28|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v31|QWORD, y: v31|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B20" 
    xhandlers
    flags 
    probability 4580754078543609885
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v467 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v479 
=== Usages ===
=== Predecessor ===
v469 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v479  <|@  <|@
f <@*|@fixed>@ <|@
tid v479 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v480 
=== Predecessor ===
v467 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4573445831667264209
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v468 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v470 
=== Usages ===
=== Predecessor ===
v469 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v470  <|@  <|@
f <@*|@fixed>@ <|@
tid v470 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v471 
=== Predecessor ===
v468 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B59" 
    successors "B19" "B59" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4582453030922005201
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j631 <|@
result v32|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v471 
values: j400 j638 
=== Succesors ===
=== Usages ===
v786 j638 v785 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v471 values: j400 j638  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v471 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v470 
=== Succesors ===
next: v749 
=== Usages ===
v749 v475 v476 j631 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v470 #next: v749  <|@  <|@
f <@~|@floating>@ <|@
tid v786 <|@
result [v30|QWORD[*] + v32|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j594 
index: j631 
=== Succesors ===
=== Usages ===
v749 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j594 index: j631  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v749 <|@
result v33|V256_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v471 
address: v786 
=== Succesors ===
next: v727 
=== Usages ===
v727 
=== Predecessor ===
v471 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v471 address: v786 #next: v727  <|@  <|@
f <@~|@floating>@ <|@
tid v785 <|@
result [v29|QWORD[.] + v32|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j596 
index: j631 
=== Succesors ===
=== Usages ===
v727 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j596 index: j631  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v727 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v785 
value: v749 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v478 
=== Usages ===
=== Predecessor ===
v749 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v785 value: v749 stateAfter: - lastLocationAccess: - #next: v478  <|@  <|@
f <@~|@floating>@ <|@
tid j638 <|@
result v34|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j631 
y: j147 
=== Succesors ===
=== Usages ===
j623 j631 v643 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j631 y: j147  <|@  <|@
f <@~|@floating>@ <|@
tid v643 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j640 
y: j638 
=== Succesors ===
=== Usages ===
v478 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j640 y: j638  <|@  <|@
f <@*|@fixed>@ <|@
tid v478 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v643 
=== Succesors ===
trueSuccessor: v475 
falseSuccessor: v477 
=== Usages ===
=== Predecessor ===
v727 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v643 #trueSuccessor: v475 #falseSuccessor: v477  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v33|V256_WORD = H [v30|QWORD[*] + v32|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v29|QWORD[.] + v32|QWORD * 2], input: v33|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = LEA [v32|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v34|QWORD, y: v31|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" 
    xhandlers
    flags 
    probability 4573445831667264209
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v475 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v471 
=== Succesors ===
next: v481 
=== Usages ===
=== Predecessor ===
v478 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v471 #next: v481  <|@  <|@
f <@*|@fixed>@ <|@
tid v481 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v480 
=== Predecessor ===
v475 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v34|QWORD] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B16" "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4582453030922005201
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j623 <|@
result v35|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v480 
values: j400 j638 
=== Succesors ===
=== Usages ===
v784 j630 j614 v647 v783 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v480 values: j400 j638  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v480 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v479 v481 
=== Succesors ===
next: v503 
=== Usages ===
j623 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v479 v481 #next: v503  <|@  <|@
f <@~|@floating>@ <|@
tid j646 <|@
result v36|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j453 
y: j645 
=== Succesors ===
=== Usages ===
v647 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j453 y: j645  <|@  <|@
f <@~|@floating>@ <|@
tid v647 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j646 
y: j623 
=== Succesors ===
=== Usages ===
v503 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j646 y: j623  <|@  <|@
f <@*|@fixed>@ <|@
tid v503 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v647 
=== Succesors ===
trueSuccessor: v502 
falseSuccessor: v501 
=== Usages ===
=== Predecessor ===
v480 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v647 #trueSuccessor: v502 #falseSuccessor: v501  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v35|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = LEA [v28|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v35|QWORD, y: v36|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4573445831667264209
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v502 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v506 
=== Usages ===
=== Predecessor ===
v503 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v506  <|@  <|@
f <@*|@fixed>@ <|@
tid v506 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v491 
=== Predecessor ===
v502 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v35|QWORD] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4580754078543609885
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v501 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v750 
=== Usages ===
v750 
=== Predecessor ===
v503 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v750  <|@  <|@
f <@~|@floating>@ <|@
tid v784 <|@
result [v30|QWORD[*] + v35|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j594 
index: j623 
=== Succesors ===
=== Usages ===
v750 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j594 index: j623  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v750 <|@
result v37|V128_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v501 
address: v784 
=== Succesors ===
next: v725 
=== Usages ===
v725 
=== Predecessor ===
v501 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v501 address: v784 #next: v725  <|@  <|@
f <@~|@floating>@ <|@
tid v783 <|@
result [v29|QWORD[.] + v35|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j596 
index: j623 
=== Succesors ===
=== Usages ===
v725 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j596 index: j623  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v725 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v783 
value: v750 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v490 
=== Usages ===
=== Predecessor ===
v750 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v783 value: v750 stateAfter: - lastLocationAccess: - #next: v490  <|@  <|@
f <@~|@floating>@ <|@
tid j630 <|@
result v38|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j623 
y: j359 
=== Succesors ===
=== Usages ===
j614 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j623 y: j359  <|@  <|@
f <@*|@fixed>@ <|@
tid v490 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v491 
=== Predecessor ===
v725 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|V128_WORD = H [v30|QWORD[*] + v35|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v29|QWORD[.] + v35|QWORD * 2], input: v37|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = LEA [v35|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v38|QWORD] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4582453030922005201
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j614 <|@
result v39|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v491 
values: j630 j623 
=== Succesors ===
=== Usages ===
v782 j622 j606 v651 v781 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v491 values: j630 j623  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v491 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v490 v506 
=== Succesors ===
next: v509 
=== Usages ===
j614 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v490 v506 #next: v509  <|@  <|@
f <@~|@floating>@ <|@
tid j650 <|@
result v40|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j453 
y: j649 
=== Succesors ===
=== Usages ===
v651 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j453 y: j649  <|@  <|@
f <@~|@floating>@ <|@
tid v651 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j650 
y: j614 
=== Succesors ===
=== Usages ===
v509 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j650 y: j614  <|@  <|@
f <@*|@fixed>@ <|@
tid v509 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v651 
=== Succesors ===
trueSuccessor: v508 
falseSuccessor: v507 
=== Usages ===
=== Predecessor ===
v491 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v651 #trueSuccessor: v508 #falseSuccessor: v507  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v39|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = LEA [v28|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v39|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4573445831667264209
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v508 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v512 
=== Usages ===
=== Predecessor ===
v509 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v512  <|@  <|@
f <@*|@fixed>@ <|@
tid v512 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v495 
=== Predecessor ===
v508 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v39|QWORD] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4580754078543609885
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v507 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v751 
=== Usages ===
v751 
=== Predecessor ===
v509 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v751  <|@  <|@
f <@~|@floating>@ <|@
tid v782 <|@
result [v30|QWORD[*] + v39|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j594 
index: j614 
=== Succesors ===
=== Usages ===
v751 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j594 index: j614  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v751 <|@
result v41|V64_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v507 
address: v782 
=== Succesors ===
next: v723 
=== Usages ===
v723 
=== Predecessor ===
v507 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v507 address: v782 #next: v723  <|@  <|@
f <@~|@floating>@ <|@
tid v781 <|@
result [v29|QWORD[.] + v39|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j596 
index: j614 
=== Succesors ===
=== Usages ===
v723 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j596 index: j614  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v723 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v781 
value: v751 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v494 
=== Usages ===
=== Predecessor ===
v751 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v781 value: v751 stateAfter: - lastLocationAccess: - #next: v494  <|@  <|@
f <@~|@floating>@ <|@
tid j622 <|@
result v42|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j614 
y: j621 
=== Succesors ===
=== Usages ===
j606 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j614 y: j621  <|@  <|@
f <@*|@fixed>@ <|@
tid v494 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v495 
=== Predecessor ===
v723 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v41|V64_WORD = H [v30|QWORD[*] + v39|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v29|QWORD[.] + v39|QWORD * 2], input: v41|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = LEA [v39|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v42|QWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4582453030922005201
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j606 <|@
result v43|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v495 
values: j622 j614 
=== Succesors ===
=== Usages ===
v780 j613 j597 v655 v779 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v495 values: j622 j614  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v495 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v494 v512 
=== Succesors ===
next: v515 
=== Usages ===
j606 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v494 v512 #next: v515  <|@  <|@
f <@~|@floating>@ <|@
tid j654 <|@
result v44|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j453 
y: j653 
=== Succesors ===
=== Usages ===
v655 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j453 y: j653  <|@  <|@
f <@~|@floating>@ <|@
tid v655 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j654 
y: j606 
=== Succesors ===
=== Usages ===
v515 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j654 y: j606  <|@  <|@
f <@*|@fixed>@ <|@
tid v515 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v655 
=== Succesors ===
trueSuccessor: v514 
falseSuccessor: v513 
=== Usages ===
=== Predecessor ===
v495 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v655 #trueSuccessor: v514 #falseSuccessor: v513  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v43|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = LEA [v28|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v43|QWORD, y: v44|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4573445831667264209
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v518 
=== Usages ===
=== Predecessor ===
v515 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v518  <|@  <|@
f <@*|@fixed>@ <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v498 
=== Predecessor ===
v514 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v43|QWORD] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4580754078543609885
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v513 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v752 
=== Usages ===
v752 
=== Predecessor ===
v515 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v752  <|@  <|@
f <@~|@floating>@ <|@
tid v780 <|@
result [v30|QWORD[*] + v43|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j594 
index: j606 
=== Succesors ===
=== Usages ===
v752 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j594 index: j606  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v752 <|@
result v45|V32_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16>
=== Inputs ===
stateBefore: - 
guard: v513 
address: v780 
=== Succesors ===
next: v721 
=== Usages ===
v721 
=== Predecessor ===
v513 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v513 address: v780 #next: v721  <|@  <|@
f <@~|@floating>@ <|@
tid v779 <|@
result [v29|QWORD[.] + v43|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j596 
index: j606 
=== Succesors ===
=== Usages ===
v721 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j596 index: j606  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v721 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v779 
value: v752 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v497 
=== Usages ===
=== Predecessor ===
v752 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v779 value: v752 stateAfter: - lastLocationAccess: - #next: v497  <|@  <|@
f <@~|@floating>@ <|@
tid j613 <|@
result v46|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j606 
y: j599 
=== Succesors ===
=== Usages ===
j597 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j606 y: j599  <|@  <|@
f <@*|@fixed>@ <|@
tid v497 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v498 
=== Predecessor ===
v721 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v45|V32_WORD = H [v30|QWORD[*] + v43|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction J (address: [v29|QWORD[.] + v43|QWORD * 2], input: v45|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = LEA [v43|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v46|QWORD] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4582453030922005201
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j597 <|@
result v47|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v498 
values: j613 j606 
=== Succesors ===
=== Usages ===
v778 v659 v777 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v498 values: j613 j606  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v498 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v497 v518 
=== Succesors ===
next: v521 
=== Usages ===
j597 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v497 v518 #next: v521  <|@  <|@
f <@~|@floating>@ <|@
tid j658 <|@
result v48|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j453 
y: j657 
=== Succesors ===
=== Usages ===
v659 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j453 y: j657  <|@  <|@
f <@~|@floating>@ <|@
tid v659 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j658 
y: j597 
=== Succesors ===
=== Usages ===
v521 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j658 y: j597  <|@  <|@
f <@*|@fixed>@ <|@
tid v521 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v659 
=== Succesors ===
trueSuccessor: v520 
falseSuccessor: v519 
=== Usages ===
=== Predecessor ===
v498 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v659 #trueSuccessor: v520 #falseSuccessor: v519  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v47|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = DEC v28|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v47|QWORD, y: v48|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4573445831667264209
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v520 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v524 
=== Usages ===
=== Predecessor ===
v521 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v524  <|@  <|@
f <@*|@fixed>@ <|@
tid v524 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v484 
=== Predecessor ===
v520 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4580754078543609885
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v519 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i753 
=== Usages ===
i753 
=== Predecessor ===
v521 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i753  <|@  <|@
f <@~|@floating>@ <|@
tid v778 <|@
result [v30|QWORD[*] + v47|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j594 
index: j597 
=== Succesors ===
=== Usages ===
i753 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j594 index: j597  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i753 <|@
result v49|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v519 
address: v778 
=== Succesors ===
next: v719 
=== Usages ===
v719 
=== Predecessor ===
v519 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v519 address: v778 #next: v719  <|@  <|@
f <@~|@floating>@ <|@
tid v777 <|@
result [v29|QWORD[.] + v47|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j596 
index: j597 
=== Succesors ===
=== Usages ===
v719 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j596 index: j597  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v719 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v777 
value: i753 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v500 
=== Usages ===
=== Predecessor ===
i753 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v777 value: i753 stateAfter: - lastLocationAccess: - #next: v500  <|@  <|@
f <@*|@fixed>@ <|@
tid v500 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v484 
=== Predecessor ===
v719 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = MOVSX [v30|QWORD[*] + v47|QWORD * 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD[.] + v47|QWORD * 2], y: v49|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B14" "B31" "B30" 
    successors "B33" "B51" 
    xhandlers
    flags 
    probability 4586956630549375697
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v484 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v483 v500 v524 
=== Succesors ===
next: v662 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v483 v500 v524 #next: v662  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v662 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v531 
=== Usages ===
j664 
=== Predecessor ===
v484 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v531  <|@  <|@
f <@~|@floating>@ <|@
tid j452 <|@
result v50|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i207 
=== Succesors ===
=== Usages ===
j457 v590 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i207  <|@  <|@
f <@~|@floating>@ <|@
tid v590 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j453 
y: j452 
=== Succesors ===
=== Usages ===
v531 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j453 y: j452  <|@  <|@
f <@*|@fixed>@ <|@
tid v531 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v590 
=== Succesors ===
trueSuccessor: v530 
falseSuccessor: v529 
=== Usages ===
=== Predecessor ===
v662 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v590 #trueSuccessor: v530 #falseSuccessor: v529  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = MOVSXD v13|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v50|QWORD, y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B32 -> B33 falseDestination: B32 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4582453030922005201
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v530 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v534 
=== Usages ===
=== Predecessor ===
v531 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v534  <|@  <|@
f <@~|@floating>@ <|@
tid v776 <|@
result [v26|QWORD[.] + v28|QWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a393 
index: j453 
=== Succesors ===
=== Usages ===
j664 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a393 index: j453  <|@  <|@
f <@~|@floating>@ <|@
tid j664 <|@
result v51|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v662 
address: v776 
=== Succesors ===
=== Usages ===
v787 v788 v789 v790 v791 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v662 address: v776  <|@  <|@
f <@~|@floating>@ <|@
tid j457 <|@
result v52|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j452 
y: j453 
=== Succesors ===
=== Usages ===
j709 j695 j700 j703 j706 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j452 y: j453  <|@  <|@
f <@~|@floating>@ <|@
tid j695 <|@
result v53|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967311 - 4294967279]
=== Inputs ===
x: j457 
y: j639 
=== Succesors ===
=== Usages ===
v696 v698 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j457 y: j639  <|@  <|@
f <@~|@floating>@ <|@
tid v696 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j695 
y: j400 
=== Succesors ===
=== Usages ===
v534 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j695 y: j400  <|@  <|@
f <@*|@fixed>@ <|@
tid v534 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v696 
=== Succesors ===
trueSuccessor: v532 
falseSuccessor: v533 
=== Usages ===
=== Predecessor ===
v530 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v696 #trueSuccessor: v532 #falseSuccessor: v533  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = LEA [v26|QWORD[.] + v28|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = SUB (x: v50|QWORD, ~y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = LEA [v52|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v53|QWORD, y: v53|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B38" 
    xhandlers
    flags 
    probability 4580754078543609885
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v532 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v543 
=== Usages ===
=== Predecessor ===
v534 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v543  <|@  <|@
f <@*|@fixed>@ <|@
tid v543 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v544 
=== Predecessor ===
v532 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B34 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4573445831667264209
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v533 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v535 
=== Usages ===
=== Predecessor ===
v534 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v535  <|@  <|@
f <@~|@floating>@ <|@
tid v738 <|@
result v54|V256_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v737 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v535 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v536 
=== Predecessor ===
v533 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v54|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B50" 
    successors "B37" "B50" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4582453030922005201
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j689 <|@
result v55|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v536 
values: j400 j694 
=== Succesors ===
=== Usages ===
v791 j694 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v536 values: j400 j694  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v536 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v535 
=== Succesors ===
next: v737 
=== Usages ===
j689 v539 v540 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v535 #next: v737  <|@  <|@
f <@~|@floating>@ <|@
tid v791 <|@
result [v51|QWORD[.] + v55|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j664 
index: j689 
=== Succesors ===
=== Usages ===
v737 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j664 index: j689  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v737 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v791 
value: v738 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v542 
=== Usages ===
=== Predecessor ===
v536 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v791 value: v738 stateAfter: - lastLocationAccess: - #next: v542  <|@  <|@
f <@~|@floating>@ <|@
tid j694 <|@
result v56|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j689 
y: j147 
=== Succesors ===
=== Usages ===
j683 j689 v698 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j689 y: j147  <|@  <|@
f <@~|@floating>@ <|@
tid v698 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j695 
y: j694 
=== Succesors ===
=== Usages ===
v542 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j695 y: j694  <|@  <|@
f <@*|@fixed>@ <|@
tid v542 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v698 
=== Succesors ===
trueSuccessor: v539 
falseSuccessor: v541 
=== Usages ===
=== Predecessor ===
v737 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v698 #trueSuccessor: v539 #falseSuccessor: v541  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v55|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v51|QWORD[.] + v55|QWORD * 2], input: v54|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = LEA [v55|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v56|QWORD, y: v53|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B36 -> B37 falseDestination: B36 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    probability 4573445831667264209
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v539 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v536 
=== Succesors ===
next: v545 
=== Usages ===
=== Predecessor ===
v542 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v536 #next: v545  <|@  <|@
f <@*|@fixed>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v544 
=== Predecessor ===
v539 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v56|QWORD] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B34" "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4582453030922005201
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j683 <|@
result v57|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v544 
values: j400 j694 
=== Succesors ===
=== Usages ===
v790 j688 j677 v701 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v544 values: j400 j694  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v544 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v543 v545 
=== Succesors ===
next: v566 
=== Usages ===
j683 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v543 v545 #next: v566  <|@  <|@
f <@~|@floating>@ <|@
tid j700 <|@
result v58|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j457 
y: j645 
=== Succesors ===
=== Usages ===
v701 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j457 y: j645  <|@  <|@
f <@~|@floating>@ <|@
tid v701 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j700 
y: j683 
=== Succesors ===
=== Usages ===
v566 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j700 y: j683  <|@  <|@
f <@*|@fixed>@ <|@
tid v566 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v701 
=== Succesors ===
trueSuccessor: v565 
falseSuccessor: v564 
=== Usages ===
=== Predecessor ===
v544 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v701 #trueSuccessor: v565 #falseSuccessor: v564  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v57|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = LEA [v52|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v57|QWORD, y: v58|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4573445831667264209
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v565 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v569 
=== Usages ===
=== Predecessor ===
v566 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v569  <|@  <|@
f <@*|@fixed>@ <|@
tid v569 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v555 
=== Predecessor ===
v565 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v57|QWORD] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4580754078543609885
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v564 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v736 
=== Usages ===
=== Predecessor ===
v566 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v736  <|@  <|@
f <@~|@floating>@ <|@
tid v790 <|@
result [v51|QWORD[.] + v57|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j664 
index: j683 
=== Succesors ===
=== Usages ===
v736 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j664 index: j683  <|@  <|@
f <@~|@floating>@ <|@
tid v742 <|@
result v59|V128_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v736 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v736 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v790 
value: v742 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v554 
=== Usages ===
=== Predecessor ===
v564 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v790 value: v742 stateAfter: - lastLocationAccess: - #next: v554  <|@  <|@
f <@~|@floating>@ <|@
tid j688 <|@
result v60|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j683 
y: j359 
=== Succesors ===
=== Usages ===
j677 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j683 y: j359  <|@  <|@
f <@*|@fixed>@ <|@
tid v554 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v555 
=== Predecessor ===
v736 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v59|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v51|QWORD[.] + v57|QWORD * 2], input: v59|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = LEA [v57|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v60|QWORD] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4582453030922005201
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j677 <|@
result v61|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v555 
values: j688 j683 
=== Succesors ===
=== Usages ===
v789 j682 j671 v704 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v555 values: j688 j683  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v555 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v554 v569 
=== Succesors ===
next: v572 
=== Usages ===
j677 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v554 v569 #next: v572  <|@  <|@
f <@~|@floating>@ <|@
tid j703 <|@
result v62|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j457 
y: j649 
=== Succesors ===
=== Usages ===
v704 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j457 y: j649  <|@  <|@
f <@~|@floating>@ <|@
tid v704 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j703 
y: j677 
=== Succesors ===
=== Usages ===
v572 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j703 y: j677  <|@  <|@
f <@*|@fixed>@ <|@
tid v572 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v704 
=== Succesors ===
trueSuccessor: v571 
falseSuccessor: v570 
=== Usages ===
=== Predecessor ===
v555 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v704 #trueSuccessor: v571 #falseSuccessor: v570  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v61|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = LEA [v52|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v61|QWORD, y: v62|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4573445831667264209
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v571 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v575 
=== Usages ===
=== Predecessor ===
v572 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v575  <|@  <|@
f <@*|@fixed>@ <|@
tid v575 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v558 
=== Predecessor ===
v571 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v61|QWORD] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4580754078543609885
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v570 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v734 
=== Usages ===
=== Predecessor ===
v572 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v734  <|@  <|@
f <@~|@floating>@ <|@
tid v789 <|@
result [v51|QWORD[.] + v61|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j664 
index: j677 
=== Succesors ===
=== Usages ===
v734 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j664 index: j677  <|@  <|@
f <@~|@floating>@ <|@
tid v741 <|@
result v63|V64_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v734 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v734 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v789 
value: v741 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v557 
=== Usages ===
=== Predecessor ===
v570 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v789 value: v741 stateAfter: - lastLocationAccess: - #next: v557  <|@  <|@
f <@~|@floating>@ <|@
tid j682 <|@
result v64|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j677 
y: j621 
=== Succesors ===
=== Usages ===
j671 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j677 y: j621  <|@  <|@
f <@*|@fixed>@ <|@
tid v557 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v558 
=== Predecessor ===
v734 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v63|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v51|QWORD[.] + v61|QWORD * 2], input: v63|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = LEA [v61|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v64|QWORD] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4582453030922005201
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j671 <|@
result v65|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v558 
values: j682 j677 
=== Succesors ===
=== Usages ===
v788 j676 j665 v707 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v558 values: j682 j677  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v558 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v557 v575 
=== Succesors ===
next: v578 
=== Usages ===
j671 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v557 v575 #next: v578  <|@  <|@
f <@~|@floating>@ <|@
tid j706 <|@
result v66|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j457 
y: j653 
=== Succesors ===
=== Usages ===
v707 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j457 y: j653  <|@  <|@
f <@~|@floating>@ <|@
tid v707 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j706 
y: j671 
=== Succesors ===
=== Usages ===
v578 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j706 y: j671  <|@  <|@
f <@*|@fixed>@ <|@
tid v578 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v707 
=== Succesors ===
trueSuccessor: v577 
falseSuccessor: v576 
=== Usages ===
=== Predecessor ===
v558 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v707 #trueSuccessor: v577 #falseSuccessor: v576  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v65|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = LEA [v52|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v65|QWORD, y: v66|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4573445831667264209
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v577 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v581 
=== Usages ===
=== Predecessor ===
v578 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v581  <|@  <|@
f <@*|@fixed>@ <|@
tid v581 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v561 
=== Predecessor ===
v577 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v65|QWORD] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4580754078543609885
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v576 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v732 
=== Usages ===
=== Predecessor ===
v578 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v732  <|@  <|@
f <@~|@floating>@ <|@
tid v788 <|@
result [v51|QWORD[.] + v65|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j664 
index: j671 
=== Succesors ===
=== Usages ===
v732 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j664 index: j671  <|@  <|@
f <@~|@floating>@ <|@
tid v740 <|@
result v67|V32_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16>
value: SIMD<0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v732 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v732 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v788 
value: v740 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v560 
=== Usages ===
=== Predecessor ===
v576 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v788 value: v740 stateAfter: - lastLocationAccess: - #next: v560  <|@  <|@
f <@~|@floating>@ <|@
tid j676 <|@
result v68|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j671 
y: j599 
=== Succesors ===
=== Usages ===
j665 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j671 y: j599  <|@  <|@
f <@*|@fixed>@ <|@
tid v560 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v561 
=== Predecessor ===
v732 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v67|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v51|QWORD[.] + v65|QWORD * 2], input: v67|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = LEA [v65|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v68|QWORD] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4582453030922005201
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j665 <|@
result v69|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v561 
values: j676 j671 
=== Succesors ===
=== Usages ===
v787 v710 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v561 values: j676 j671  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v561 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v560 v581 
=== Succesors ===
next: v584 
=== Usages ===
j665 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v560 v581 #next: v584  <|@  <|@
f <@~|@floating>@ <|@
tid j709 <|@
result v70|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j457 
y: j657 
=== Succesors ===
=== Usages ===
v710 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j457 y: j657  <|@  <|@
f <@~|@floating>@ <|@
tid v710 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j709 
y: j665 
=== Succesors ===
=== Usages ===
v584 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j709 y: j665  <|@  <|@
f <@*|@fixed>@ <|@
tid v584 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v710 
=== Succesors ===
trueSuccessor: v583 
falseSuccessor: v582 
=== Usages ===
=== Predecessor ===
v561 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v710 #trueSuccessor: v583 #falseSuccessor: v582  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v69|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = DEC v52|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v69|QWORD, y: v70|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B47 -> B48 falseDestination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 4573445831667264209
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v583 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v587 
=== Usages ===
=== Predecessor ===
v584 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v587  <|@  <|@
f <@*|@fixed>@ <|@
tid v587 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v548 
=== Predecessor ===
v583 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B48 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 4580754078543609885
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v582 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v730 
=== Usages ===
=== Predecessor ===
v584 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v730  <|@  <|@
f <@~|@floating>@ <|@
tid v787 <|@
result [v51|QWORD[.] + v69|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j664 
index: j665 
=== Succesors ===
=== Usages ===
v730 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j664 index: j665  <|@  <|@
f <@~|@floating>@ <|@
tid i739 <|@
result short[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i16 [0] ⇈0000000000000000
stampKind: i16
value: short[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v730 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v730 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v787 
value: i739 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v563 
=== Usages ===
=== Predecessor ===
v582 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v787 value: i739 stateAfter: - lastLocationAccess: - #next: v563  <|@  <|@
f <@*|@fixed>@ <|@
tid v563 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v548 
=== Predecessor ===
v730 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v51|QWORD[.] + v69|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B49 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B36" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4580754078543609885
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v541 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v540 
=== Usages ===
=== Predecessor ===
v542 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v540  <|@  <|@
f <@*|@fixed>@ <|@
tid v540 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v536 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v541 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v536  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v56|QWORD] destination: B50 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B52" 
    xhandlers
    flags 
    probability 4582453030922005201
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v529 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v547 
=== Usages ===
=== Predecessor ===
v531 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v547  <|@  <|@
f <@*|@fixed>@ <|@
tid v547 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v548 
=== Predecessor ===
v529 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B49" "B48" 
    successors "B53" 
    xhandlers
    flags 
    probability 4586956630549375697
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v548 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v547 v563 v587 
=== Succesors ===
next: a307 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v547 v563 v587 #next: a307  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a307 <|@
result v26|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a393 
=== Succesors ===
next: v203 
=== Usages ===
a117 a202 
=== Predecessor ===
v548 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a393 #next: v203  <|@  <|@
f <@~|@floating>@ <|@
tid a202 <|@
result v71|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
op: Compress
stamp: n! -
=== Inputs ===
value: a307 
=== Succesors ===
=== Usages ===
v203 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a307  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v203 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: AbstractStringBuilder.value
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v758 
value: a202 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j428 
=== Usages ===
=== Predecessor ===
a307 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v758 value: a202 stateAfter: - lastLocationAccess: - #next: j428  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j428 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v434 
=== Usages ===
j430 
=== Predecessor ===
v203 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v434  <|@  <|@
f <@~|@floating>@ <|@
tid i429 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j430 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j430 <|@
result v72|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j428 
y: i429 
=== Succesors ===
=== Usages ===
v773 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j428 y: i429  <|@  <|@
f <@~|@floating>@ <|@
tid j433 <|@
result v73|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v773 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v773 <|@
result [v72|QWORD[*] + v73|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j430 
index: j433 
=== Succesors ===
=== Usages ===
v434 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j430 index: j433  <|@  <|@
f <@~|@floating>@ <|@
tid i435 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v434 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v434 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v773 
value: i435 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v114 
=== Usages ===
=== Predecessor ===
j428 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v773 value: i435 stateAfter: - lastLocationAccess: - #next: v114  <|@  <|@
f <@*|@fixed>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v115 
=== Predecessor ===
v434 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v71|DWORD[.] = COMPRESSPOINTER (input: v26|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@18965d9d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v71|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v73|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v72|QWORD[*] + v73|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v26|QWORD[.]] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B2" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a117 <|@
result v74|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# [C
valueDescription: a -
=== Inputs ===
merge: v115 
values: a307 a150 
=== Succesors ===
=== Usages ===
v760 j442 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v115 values: a307 a150  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v114 v116 
=== Succesors ===
next: v170 
=== Usages ===
a117 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v114 v116 #next: v170  <|@  <|@
f <@~|@floating>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 22]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i748 
y: i45 
=== Succesors ===
=== Usages ===
v170 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i748 y: i45  <|@  <|@
f <@*|@fixed>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 33]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v164 
=== Succesors ===
trueSuccessor: v169 
falseSuccessor: v165 
=== Usages ===
=== Predecessor ===
v115 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v164 #trueSuccessor: v169 #falseSuccessor: v165  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v74|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v6|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B53 -> B54 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B57" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v169 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v344 
=== Usages ===
=== Predecessor ===
v170 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v344  <|@  <|@
f <@*|@fixed>@ <|@
tid v344 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v338 
=== Predecessor ===
v169 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B54 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B58" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 36]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: i754 
=== Usages ===
=== Predecessor ===
v170 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i754  <|@  <|@
f <@~|@floating>@ <|@
tid v760 <|@
result [v74|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a117 
index: - 
=== Succesors ===
=== Usages ===
i754 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a117 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i754 <|@
result v75|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 85]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v760 
=== Succesors ===
next: v187 
=== Usages ===
i182 
=== Predecessor ===
v165 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v760 #next: v187  <|@  <|@
f <@~|@floating>@ <|@
tid i182 <|@
result v76|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: i32 [-2147483647 - 2147483647]
=== Inputs ===
x: i754 
y: i747 
=== Succesors ===
=== Usages ===
v183 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i754 y: i747  <|@  <|@
f <@~|@floating>@ <|@
tid v183 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i182 
y: i748 
=== Succesors ===
=== Usages ===
v187 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i182 y: i748  <|@  <|@
f <@*|@fixed>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v183 
=== Succesors ===
trueSuccessor: v186 
falseSuccessor: v184 
=== Usages ===
=== Predecessor ===
i754 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v183 #trueSuccessor: v186 #falseSuccessor: v184  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = MOV [v74|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = SUB (x: v75|DWORD, ~y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v6|DWORD, y: v76|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B55 -> B56 falseDestination: B55 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v346 
=== Usages ===
=== Predecessor ===
v187 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v346  <|@  <|@
f <@*|@fixed>@ <|@
tid v346 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v338 
=== Predecessor ===
v186 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B54" "B56" 
    successors 
    xhandlers
    flags 
    probability 4581393005893843005
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v344 v346 
=== Succesors ===
next: v792 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v344 v346 #next: v792  <|@  <|@
tid ?6 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<StringBuilder.append(CharSequence)>
duringCall: true
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
rethrowException: false
sourceFile: StringBuilder.java
sourceLine: 76
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 
=== Succesors ===
=== Usages ===
?20 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2  <|@  <|@
tid ?20 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<StringBuilder.append(CharSequence)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: StringBuilder.java
sourceLine: 166
stackSize: 0
=== Inputs ===
outerFrameState: ?6 
values: a1 - 
=== Succesors ===
=== Usages ===
?24 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?6 values: a1 -  <|@  <|@
tid ?24 <|@
d <@d|@=== Debug Properties ===
bci: 21
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(CharSequence)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 484
stackSize: 0
=== Inputs ===
outerFrameState: ?20 
values: - - 
=== Succesors ===
=== Usages ===
?33 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?20 values: - -  <|@  <|@
tid ?33 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<StringBuilder.append(String)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: StringBuilder.java
sourceLine: 76
stackSize: 0
=== Inputs ===
outerFrameState: ?24 
values: - - 
=== Succesors ===
=== Usages ===
?56 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?24 values: - -  <|@  <|@
tid ?56 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<StringBuilder.append(String)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: StringBuilder.java
sourceLine: 136
stackSize: 0
=== Inputs ===
outerFrameState: ?33 
values: a1 - 
=== Succesors ===
=== Usages ===
?44 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?33 values: a1 -  <|@  <|@
tid ?44 <|@
d <@d|@=== Debug Properties ===
bci: 24
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(String)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 449
stackSize: 0
=== Inputs ===
outerFrameState: ?56 
values: a1 a2 i747 
=== Succesors ===
=== Usages ===
v792 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?56 values: a1 a2 i747  <|@  <|@
f <@*|@fixed>@ <|@
tid v792 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 188
reason: RuntimeConstraint
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?44 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v338 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?44  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -48225 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 24]
locals: v0|QWORD[.] v1|QWORD[.] v5|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:24, 2, 2, 21, 2, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v184 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: j438 
=== Usages ===
=== Predecessor ===
v187 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j438  <|@  <|@
f <@~|@floating>@ <|@
tid a139 <|@
result v77|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:447) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a744 
=== Succesors ===
=== Usages ===
j438 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a744  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j438 <|@
result v78|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: i64
=== Inputs ===
object: a139 
=== Succesors ===
next: j442 
=== Usages ===
v774 
=== Predecessor ===
v184 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a139 #next: j442  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j442 <|@
result v79|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: i64
=== Inputs ===
object: a117 
=== Succesors ===
next: v448 
=== Usages ===
v775 
=== Predecessor ===
j438 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a117 #next: v448  <|@  <|@
f <@~|@floating>@ <|@
tid v774 <|@
result [v78|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j438 
index: - 
=== Succesors ===
=== Usages ===
v448 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j438 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j443 <|@
result v80|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i748 
=== Succesors ===
=== Usages ===
v775 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i748  <|@  <|@
f <@~|@floating>@ <|@
tid v775 <|@
result [v79|QWORD[*] + v80|QWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j442 
index: j443 
=== Succesors ===
=== Usages ===
v448 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j442 index: j443  <|@  <|@
f <@~|@floating>@ <|@
tid j447 <|@
result v81|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i747 
=== Succesors ===
=== Usages ===
v448 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i747  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v448 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: charArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v774 v775 j447 
=== Succesors ===
next: v199 
=== Usages ===
=== Predecessor ===
j442 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v774 v775 j447 #next: v199  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:450) [bci: 45]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v757 
value: i41 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v8 
=== Usages ===
=== Predecessor ===
v448 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v757 value: i41 stateAfter: - lastLocationAccess: - #next: v8  <|@  <|@
f <@*|@fixed>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 5]
stamp: void
=== Inputs ===
result: a1 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v199 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a1 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@18965d9d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[*] = MOVE v77|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[*] = MOVE v74|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v80|QWORD = MOVSXD v6|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v81|QWORD = MOV v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v78|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v79|QWORD[*] + v80|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v81|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580754078543609885
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v477 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v476 
=== Usages ===
=== Predecessor ===
v478 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v476  <|@  <|@
f <@*|@fixed>@ <|@
tid v476 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v471 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v477 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v471  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v34|QWORD] destination: B59 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:481) [bci: 1]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v357 
=== Usages ===
=== Predecessor ===
v352 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v357  <|@  <|@
f <@~|@floating>@ <|@
tid i323 <|@
result int[-34579|0xffffffffffff78ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -34579
stableDimension: 0
stamp: i32 [-34579] ⇊00000000ffff78ed ⇈00000000ffff78ed
stampKind: i32
value: int[-34579|0xffffffffffff78ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i325 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v357 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:481) [bci: 1]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v321 
=== Predecessor ===
v349 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-34579|0xffffffffffff78ed]] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" "B60" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i325 <|@
result v82|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-51475 - -34579] ⇊00000000ffff20e5 ⇈00000000ffff7ffd
valueDescription: i32
=== Inputs ===
merge: v321 
values: i333 i335 i323 
=== Succesors ===
=== Usages ===
v327 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v321 values: i333 i335 i323  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v321 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v332 v334 v357 
=== Succesors ===
next: v327 
=== Usages ===
i325 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v332 v334 v357 #next: v327  <|@  <|@
f <@~|@floating>@ <|@
tid a324 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v327 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v327 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i325 
speculation: a324 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v321 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i325 speculation: a324  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v82|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v82|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@14f91edb slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction CMP [v1|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[.] = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v2|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v4|DWORD = MOV [v3|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV [v2|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = ADD (x: v5|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SUB (x: v7|DWORD, ~y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v8|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9528445987940962 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B53" 
    xhandlers
    flags 
    probability 4606757680705418579
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@18965d9d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v9|QWORD[.]] destination: B2 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B2" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v74|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v6|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B53 -> B54 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B58" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = MOV [v74|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = SUB (x: v75|DWORD, ~y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v6|DWORD, y: v76|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B55 -> B56 falseDestination: B55 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@18965d9d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[*] = MOVE v77|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[*] = MOVE v74|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v80|QWORD = MOVSXD v6|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v81|QWORD = MOV v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v78|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v79|QWORD[*] + v80|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v81|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4586956630549375696
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = SHL v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = LEA [v10|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = SUB (x: v11|DWORD, ~y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v12|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = CMOVE (falseValue: v11|DWORD, ~trueValue: v7|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction CMP v13|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4586956630549375696
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE input: int[2147483639|0x7ffffff7] <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = SUB (x: v14|DWORD, ~y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v15|DWORD, y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B11" 
    xhandlers
    flags 
    probability 4586956630549375696
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v13|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B7 -> B8 falseDestination: B7 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4586277049598017570
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = SHL v13|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = LEA [v18|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = AND v19|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = MOVSXD v20|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = ADD (x: v21|QWORD, y: v16|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v22|QWORD, y: v17|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    probability 4586215887312395339
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v22|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v21|QWORD + v16|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v21|QWORD + v16|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v21|QWORD + v16|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v21|QWORD + v16|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v16|QWORD + 12], y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v16|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v16|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = MOVE v16|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v23|QWORD[.]] destination: B10 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B10" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4586956630549375697
    begin_IR
      LIR
      nr   -1  <|@ instruction [v26|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v13|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = CMOVE (falseValue: v13|DWORD, ~trueValue: v4|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOVSXD v27|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v28|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4582453030922005201
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = LEA [v26|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[*] = LEA [v3|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = LEA [v28|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v31|QWORD, y: v31|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B20" 
    xhandlers
    flags 
    probability 4580754078543609885
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B16" "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4582453030922005201
    begin_IR
      LIR
      nr   -1  <|@ instruction [v35|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = LEA [v28|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v35|QWORD, y: v36|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4580754078543609885
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|V128_WORD = H [v30|QWORD[*] + v35|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v29|QWORD[.] + v35|QWORD * 2], input: v37|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = LEA [v35|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v38|QWORD] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4582453030922005201
    begin_IR
      LIR
      nr   -1  <|@ instruction [v39|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = LEA [v28|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v39|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4580754078543609885
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v41|V64_WORD = H [v30|QWORD[*] + v39|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v29|QWORD[.] + v39|QWORD * 2], input: v41|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = LEA [v39|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v42|QWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4582453030922005201
    begin_IR
      LIR
      nr   -1  <|@ instruction [v43|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = LEA [v28|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v43|QWORD, y: v44|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4580754078543609885
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v45|V32_WORD = H [v30|QWORD[*] + v43|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction J (address: [v29|QWORD[.] + v43|QWORD * 2], input: v45|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = LEA [v43|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v46|QWORD] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4582453030922005201
    begin_IR
      LIR
      nr   -1  <|@ instruction [v47|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = DEC v28|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v47|QWORD, y: v48|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4580754078543609885
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = MOVSX [v30|QWORD[*] + v47|QWORD * 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD[.] + v47|QWORD * 2], y: v49|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B14" "B31" "B30" 
    successors "B33" "B51" 
    xhandlers
    flags 
    probability 4586956630549375697
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = MOVSXD v13|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v50|QWORD, y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B32 -> B33 falseDestination: B32 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B52" 
    xhandlers
    flags 
    probability 4582453030922005201
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B49" "B48" 
    successors "B53" 
    xhandlers
    flags 
    probability 4586956630549375697
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v71|DWORD[.] = COMPRESSPOINTER (input: v26|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@18965d9d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v71|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v73|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v72|QWORD[*] + v73|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v26|QWORD[.]] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B32" 
    xhandlers
    flags 
    probability 4582453030922005201
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B14 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4582453030922005201
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = LEA [v26|QWORD[.] + v28|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = SUB (x: v50|QWORD, ~y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = LEA [v52|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v53|QWORD, y: v53|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B38" 
    xhandlers
    flags 
    probability 4580754078543609885
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B34 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B34" "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4582453030922005201
    begin_IR
      LIR
      nr   -1  <|@ instruction [v57|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = LEA [v52|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v57|QWORD, y: v58|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4580754078543609885
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v59|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v51|QWORD[.] + v57|QWORD * 2], input: v59|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = LEA [v57|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v60|QWORD] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4582453030922005201
    begin_IR
      LIR
      nr   -1  <|@ instruction [v61|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = LEA [v52|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v61|QWORD, y: v62|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4580754078543609885
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v63|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v51|QWORD[.] + v61|QWORD * 2], input: v63|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = LEA [v61|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v64|QWORD] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4582453030922005201
    begin_IR
      LIR
      nr   -1  <|@ instruction [v65|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = LEA [v52|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v65|QWORD, y: v66|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4580754078543609885
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v67|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v51|QWORD[.] + v65|QWORD * 2], input: v67|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = LEA [v65|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v68|QWORD] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4582453030922005201
    begin_IR
      LIR
      nr   -1  <|@ instruction [v69|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = DEC v52|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v69|QWORD, y: v70|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B47 -> B48 falseDestination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 4580754078543609885
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v51|QWORD[.] + v69|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B49 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B57" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B54 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B54" "B56" 
    successors 
    xhandlers
    flags 
    probability 4581393005893843005
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -48225 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 24]
locals: v0|QWORD[.] v1|QWORD[.] v5|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:24, 2, 2, 21, 2, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4573445831667264209
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v43|QWORD] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4573445831667264209
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v57|QWORD] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4573445831667264209
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v61|QWORD] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4573445831667264209
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4573445831667264209
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v54|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B36" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4580754078543609885
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v56|QWORD] destination: B50 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B50" 
    successors "B37" "B50" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4582453030922005201
    begin_IR
      LIR
      nr   -1  <|@ instruction [v55|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v51|QWORD[.] + v55|QWORD * 2], input: v54|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = LEA [v55|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v56|QWORD, y: v53|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B36 -> B37 falseDestination: B36 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4573445831667264209
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v35|QWORD] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4573445831667264209
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v39|QWORD] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 4573445831667264209
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B48 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    probability 4573445831667264209
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v56|QWORD] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4573445831667264209
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580754078543609885
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v34|QWORD] destination: B59 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B59" 
    successors "B19" "B59" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4582453030922005201
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v33|V256_WORD = H [v30|QWORD[*] + v32|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v29|QWORD[.] + v32|QWORD * 2], input: v33|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = LEA [v32|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v34|QWORD, y: v31|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4573445831667264209
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v65|QWORD] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" 
    xhandlers
    flags 
    probability 4573445831667264209
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v34|QWORD] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4572086669764547954
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B9" 
    successors "B13" 
    xhandlers
    flags 
    probability 4572575968049525806
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v24|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v13|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v25|QWORD[.]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4556464396203846584
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-34579|0xffffffffffff78ed]] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" "B60" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v82|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v82|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-51475|0xffffffffffff36ed]] destination: B6 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-51219|0xffffffffffff37ed]] destination: B4 -> B61 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #5          // append:(java.lang.CharSequence)java.lang.StringBuilder
     5: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@14f91edb slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rsi:0, r13:0, stack:32]
live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 0]
locals: rsi|QWORD[.] r13|QWORD[.] 
>@ <|@ instruction CMP [r13|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction r14|DWORD[.] = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   18  <|@ st <@st|@reference-map: [rsi:0, r13:0, r14:0, stack:32]
live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 0]
locals: rsi|QWORD[.] r13|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r14|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   20  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   22  <|@ st <@st|@reference-map: [rsi:0, r10:0, r13:0, r14:0, stack:32]
live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 0]
locals: rsi|QWORD[.] r13|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   24  <|@ instruction r8|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   26  <|@ instruction r9|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   28  <|@ instruction rcx|DWORD = ADD (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr   30  <|@ instruction stack:36|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction rdi|DWORD = SUB (x: rcx|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr   34  <|@ instruction CMP rdi|DWORD y: 1 size: DWORD <|@ <|@
      nr   36  <|@ instruction BRANCH trueDestinationProbability: 0.9528445987940962 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B53" 
    xhandlers
    flags 
    probability 4606757680705418579
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   40  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@18965d9d encoding: base: 0 shift: 3 <|@ <|@
      nr   42  <|@ instruction JUMP ~[] destination: B2 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B2" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  524  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  526  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B53 -> B54 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B58" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  534  <|@ instruction rdi|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  536  <|@ instruction rdi|DWORD = SUB (x: rdi|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  538  <|@ instruction CMP (x: r9|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  540  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B55 -> B56 falseDestination: B55 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  556  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: r14|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@18965d9d encoding: base: 0 shift: 3 <|@ <|@
      nr  558  <|@ instruction r14|QWORD[*] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  560  <|@ instruction r10|QWORD[*] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  562  <|@ instruction rdx|QWORD = MOVSXD r9|DWORD size: QWORD <|@ <|@
      nr  564  <|@ instruction r11|QWORD = MOV r8|DWORD size: DWORD <|@ <|@
      nr  566  <|@ instruction rdi|QWORD = LEA [r14|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  568  <|@ instruction rsi|QWORD = LEA [r10|QWORD[*] + rdx|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  570  <|@ instruction rdx|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  572  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  574  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  576  <|@ instruction rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  578  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  580  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  582  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4586956630549375696
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   46  <|@ instruction rdx|DWORD = SHL r11|DWORD size: DWORD <|@ <|@
      nr   48  <|@ instruction rdx|DWORD = LEA [rdx|DWORD + 2] size: DWORD <|@ <|@
      nr   50  <|@ instruction rbx|DWORD = SUB (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   52  <|@ instruction TEST (x: rbx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr   54  <|@ instruction rdx|DWORD = CMOVE (falseValue: rdx|DWORD, ~trueValue: rcx|DWORD) condition: < <|@ <|@
      nr   56  <|@ instruction CMP rdx|DWORD y: 1 size: DWORD <|@ <|@
      nr   58  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4586956630549375696
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   68  <|@ instruction rbx|DWORD = MOVE input: int[2147483639|0x7ffffff7] <|@ <|@
      nr   70  <|@ instruction rbx|DWORD = SUB (x: rbx|DWORD, ~y: rdx|DWORD) size: DWORD <|@ <|@
      nr   72  <|@ instruction TEST (x: rbx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr   74  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B11" 
    xhandlers
    flags 
    probability 4586956630549375696
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   84  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   86  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   88  <|@ instruction CMP rdx|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   90  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B7 -> B8 falseDestination: B7 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4586277049598017570
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   94  <|@ instruction rax|DWORD = SHL rdx|DWORD size: DWORD <|@ <|@
      nr   96  <|@ instruction rax|DWORD = LEA [rax|DWORD + 23] size: DWORD <|@ <|@
      nr   98  <|@ instruction rax|DWORD = AND rax|DWORD y: -8 size: DWORD <|@ <|@
      nr  100  <|@ instruction rax|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr  102  <|@ instruction rbp|QWORD = ADD (x: rax|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  104  <|@ instruction CMP (x: rbp|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  106  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    probability 4586215887312395339
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  124  <|@ instruction MOV (x: [r15|QWORD + 96], y: rbp|QWORD) size: QWORD <|@ <|@
      nr  126  <|@ instruction AMD64PREFETCH ~[rax|QWORD + rbx|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  128  <|@ instruction AMD64PREFETCH ~[rax|QWORD + rbx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  130  <|@ instruction AMD64PREFETCH ~[rax|QWORD + rbx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  132  <|@ instruction AMD64PREFETCH ~[rax|QWORD + rbx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  134  <|@ instruction MOV (x: [rbx|QWORD + 12], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  136  <|@ instruction MOV [rbx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  138  <|@ instruction MOV [rbx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr  140  <|@ instruction rbx|QWORD[.] = MOVE rbx|QWORD moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction rax|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction stack:40|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  146  <|@ instruction stack:44|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction stack:48|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  150  <|@ instruction stack:52|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr  152  <|@ instruction stack:64|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction r13|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  156  <|@ instruction r14|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  158  <|@ instruction JUMP ~[] destination: B10 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B10" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4586956630549375697
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  196  <|@ instruction CMP (x: r13|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  198  <|@ instruction rdx|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: r14|DWORD) condition: > <|@ <|@
      nr  200  <|@ instruction r10|QWORD = MOVSXD rdx|DWORD size: QWORD <|@ <|@
      nr  202  <|@ instruction CMP r10|QWORD y: 1 size: QWORD <|@ <|@
      nr  204  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4582453030922005201
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  212  <|@ instruction r11|DWORD[.] = MOVE stack:48|DWORD[.] moveKind: DWORD <|@ <|@
      nr  214  <|@ instruction r8|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  216  <|@ instruction r11|QWORD[*] = LEA [r11|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr  218  <|@ instruction r9|QWORD = LEA [r10|QWORD - 16] size: QWORD <|@ <|@
      nr  220  <|@ instruction TEST (x: r9|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  222  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B20" 
    xhandlers
    flags 
    probability 4580754078543609885
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  226  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  228  <|@ instruction JUMP ~[] destination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B16" "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4582453030922005201
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  254  <|@ instruction r9|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  256  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  258  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4580754078543609885
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  266  <|@ instruction xmm0|V128_WORD = H [r11|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr  268  <|@ instruction J (address: [r8|QWORD[.] + rcx|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  270  <|@ instruction r9|QWORD = LEA [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  272  <|@ instruction rcx|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4582453030922005201
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  278  <|@ instruction r9|QWORD = LEA [r10|QWORD - 4] size: QWORD <|@ <|@
      nr  280  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  282  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4580754078543609885
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  290  <|@ instruction xmm0|V64_WORD = H [r11|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr  292  <|@ instruction J (address: [r8|QWORD[.] + rcx|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  294  <|@ instruction r9|QWORD = LEA [rcx|QWORD + 4] size: QWORD <|@ <|@
      nr  296  <|@ instruction rcx|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  298  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4582453030922005201
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  302  <|@ instruction r9|QWORD = LEA [r10|QWORD - 2] size: QWORD <|@ <|@
      nr  304  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  306  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4580754078543609885
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  314  <|@ instruction xmm0|V32_WORD = H [r11|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr  316  <|@ instruction J (address: [r8|QWORD[.] + rcx|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  318  <|@ instruction r9|QWORD = LEA [rcx|QWORD + 2] size: QWORD <|@ <|@
      nr  320  <|@ instruction rcx|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  322  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4582453030922005201
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  326  <|@ instruction r9|QWORD = DEC r10|QWORD size: QWORD <|@ <|@
      nr  328  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  330  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4580754078543609885
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  338  <|@ instruction r11|DWORD = MOVSX [r11|QWORD[*] + rcx|QWORD * 2] size: DWORD <|@ <|@
      nr  340  <|@ instruction MOV (x: [r8|QWORD[.] + rcx|QWORD * 2], y: r11|DWORD) size: WORD <|@ <|@
      nr  342  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B14" "B31" "B30" 
    successors "B33" "B51" 
    xhandlers
    flags 
    probability 4586956630549375697
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  346  <|@ instruction r11|QWORD = MOVSXD r13|DWORD size: QWORD <|@ <|@
      nr  348  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  350  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B32 -> B33 falseDestination: B32 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B52" 
    xhandlers
    flags 
    probability 4582453030922005201
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  492  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  494  <|@ instruction JUMP ~[] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B49" "B48" 
    successors "B53" 
    xhandlers
    flags 
    probability 4586956630549375697
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  498  <|@ instruction r10|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@18965d9d encoding: base: 0 shift: 3 <|@ <|@
      nr  500  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr  502  <|@ instruction r10|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  504  <|@ instruction r11|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  506  <|@ instruction MOVB (x: [r10|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  508  <|@ instruction r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  510  <|@ instruction rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  512  <|@ instruction r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ instruction r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  516  <|@ instruction r14|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD <|@ <|@
      nr  518  <|@ instruction r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  520  <|@ instruction JUMP ~[] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B32" 
    xhandlers
    flags 
    probability 4582453030922005201
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  208  <|@ instruction JUMP ~[] destination: B14 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4582453030922005201
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  354  <|@ instruction r8|QWORD[.] = LEA [rax|QWORD[.] + r10|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  356  <|@ instruction r11|QWORD = SUB (x: r11|QWORD, ~y: r10|QWORD) size: QWORD <|@ <|@
      nr  358  <|@ instruction r10|QWORD = LEA [r11|QWORD - 16] size: QWORD <|@ <|@
      nr  360  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  362  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B38" 
    xhandlers
    flags 
    probability 4580754078543609885
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  366  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  368  <|@ instruction JUMP ~[] destination: B34 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B34" "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4582453030922005201
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  394  <|@ instruction r10|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  396  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  398  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4580754078543609885
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  406  <|@ instruction xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr  408  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  410  <|@ instruction r10|QWORD = LEA [r9|QWORD + 8] size: QWORD <|@ <|@
      nr  412  <|@ instruction r9|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4582453030922005201
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  418  <|@ instruction r10|QWORD = LEA [r11|QWORD - 4] size: QWORD <|@ <|@
      nr  420  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  422  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4580754078543609885
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  430  <|@ instruction xmm0|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  432  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  434  <|@ instruction r10|QWORD = LEA [r9|QWORD + 4] size: QWORD <|@ <|@
      nr  436  <|@ instruction r9|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  438  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4582453030922005201
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  442  <|@ instruction r10|QWORD = LEA [r11|QWORD - 2] size: QWORD <|@ <|@
      nr  444  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  446  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4580754078543609885
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  454  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr  456  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  458  <|@ instruction r10|QWORD = LEA [r9|QWORD + 2] size: QWORD <|@ <|@
      nr  460  <|@ instruction r9|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  462  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4582453030922005201
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  466  <|@ instruction r11|QWORD = DEC r11|QWORD size: QWORD <|@ <|@
      nr  468  <|@ instruction CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  470  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B47 -> B48 falseDestination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 4580754078543609885
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  480  <|@ instruction MOV (x: [r8|QWORD[.] + r9|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr  482  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  484  <|@ instruction JUMP ~[] destination: B49 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B57" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  530  <|@ instruction JUMP ~[] destination: B54 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B54" "B56" 
    successors 
    xhandlers
    flags 
    probability 4581393005893843005
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  548  <|@ instruction MOV [r15|QWORD + 668] y: -48225 size: DWORD <|@ <|@
      nr  550  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  552  <|@ st <@st|@reference-map: [rsi:0, r13:0]
live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 24]
locals: rsi|QWORD[.] r13|QWORD[.] r8|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: rsi|QWORD[.] r13|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:24, 2, 2, 21, 2, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  544  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4573445831667264209
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  310  <|@ instruction JUMP ~[] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4573445831667264209
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  402  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4573445831667264209
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  426  <|@ instruction JUMP ~[] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4573445831667264209
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  334  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4573445831667264209
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  372  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr  374  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  376  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B36" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4580754078543609885
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  488  <|@ instruction JUMP ~[] destination: B50 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B50" 
    successors "B37" "B50" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4582453030922005201
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  380  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  382  <|@ instruction r9|QWORD = LEA [r9|QWORD + 16] size: QWORD <|@ <|@
      nr  384  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  386  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B36 -> B37 falseDestination: B36 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4573445831667264209
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  262  <|@ instruction JUMP ~[] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4573445831667264209
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  286  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 4573445831667264209
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  474  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  476  <|@ instruction JUMP ~[] destination: B48 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    probability 4573445831667264209
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4573445831667264209
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  232  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  234  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580754078543609885
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  586  <|@ instruction JUMP ~[] destination: B59 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B59" 
    successors "B19" "B59" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4582453030922005201
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  238  <|@ instruction xmm0|V256_WORD = H [r11|QWORD[*] + rcx|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr  240  <|@ instruction J (address: [r8|QWORD[.] + rcx|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  242  <|@ instruction rcx|QWORD = LEA [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  244  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  246  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4573445831667264209
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  450  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" 
    xhandlers
    flags 
    probability 4573445831667264209
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  250  <|@ instruction JUMP ~[] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4572086669764547954
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  162  <|@ instruction stack:40|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  164  <|@ instruction stack:44|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  166  <|@ instruction stack:48|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  168  <|@ instruction stack:52|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr  170  <|@ instruction stack:64|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B9" 
    successors "B13" 
    xhandlers
    flags 
    probability 4572575968049525806
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  176  <|@ instruction rbx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr  178  <|@ instruction rsi|QWORD = MOVE rbx|QWORD moveKind: QWORD <|@ <|@
      nr  180  <|@ instruction rbx|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  182  <|@ instruction rdx|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  184  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  186  <|@ instruction r14|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  188  <|@ instruction r13|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  190  <|@ st <@st|@reference-map: [stack:0, stack:12, stack:16, stack:32]
live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 0]
locals: stack:32|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  192  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4556464396203846584
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  110  <|@ instruction stack:40|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction stack:44|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  114  <|@ instruction stack:48|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction stack:52|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction stack:64|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction JUMP ~[] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  590  <|@ instruction r10|DWORD = MOVE input: int[-34579|0xffffffffffff78ed] <|@ <|@
      nr  592  <|@ instruction JUMP ~[] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" "B60" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  596  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  598  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  600  <|@ st <@st|@reference-map: [rsi:0, r13:0]
live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 0]
locals: rsi|QWORD[.] r13|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   78  <|@ instruction r10|DWORD = MOVE input: int[-51475|0xffffffffffff36ed] <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B6 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   62  <|@ instruction r10|DWORD = MOVE input: int[-51219|0xffffffffffff37ed] <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B4 -> B61 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #5          // append:(java.lang.CharSequence)java.lang.StringBuilder
     5: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@14f91edb slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rsi:0, r13:0, stack:32]
live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 0]
locals: rsi|QWORD[.] r13|QWORD[.] 
>@ <|@ instruction CMP [r13|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction r14|DWORD[.] = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   18  <|@ st <@st|@reference-map: [rsi:0, r13:0, r14:0, stack:32]
live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 0]
locals: rsi|QWORD[.] r13|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r14|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   20  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   22  <|@ st <@st|@reference-map: [rsi:0, r10:0, r13:0, r14:0, stack:32]
live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 0]
locals: rsi|QWORD[.] r13|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   24  <|@ instruction r8|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   26  <|@ instruction r9|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   28  <|@ instruction rcx|DWORD = ADD (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr   30  <|@ instruction stack:36|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction rdi|DWORD = SUB (x: rcx|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr   34  <|@ instruction CMP rdi|DWORD y: 1 size: DWORD <|@ <|@
      nr   36  <|@ instruction BRANCH trueDestinationProbability: 0.9528445987940962 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B53" 
    xhandlers
    flags 
    probability 4606757680705418579
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   40  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@18965d9d encoding: base: 0 shift: 3 <|@ <|@
      nr   42  <|@ instruction JUMP ~[] destination: B2 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B2" 
    successors "B57" "B55" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  524  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  526  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B53 -> B57 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B57" "B58" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  534  <|@ instruction rdi|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  536  <|@ instruction rdi|DWORD = SUB (x: rdi|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  538  <|@ instruction CMP (x: r9|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  540  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B55 -> B57 falseDestination: B55 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  556  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: r14|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@18965d9d encoding: base: 0 shift: 3 <|@ <|@
      nr  558  <|@ instruction r14|QWORD[*] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  560  <|@ instruction r10|QWORD[*] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  562  <|@ instruction rdx|QWORD = MOVSXD r9|DWORD size: QWORD <|@ <|@
      nr  564  <|@ instruction r11|QWORD = MOV r8|DWORD size: DWORD <|@ <|@
      nr  566  <|@ instruction rdi|QWORD = LEA [r14|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  568  <|@ instruction rsi|QWORD = LEA [r10|QWORD[*] + rdx|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  570  <|@ instruction rdx|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  572  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  574  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  576  <|@ instruction rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  578  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  580  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  582  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4586956630549375696
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   46  <|@ instruction rdx|DWORD = SHL r11|DWORD size: DWORD <|@ <|@
      nr   48  <|@ instruction rdx|DWORD = LEA [rdx|DWORD + 2] size: DWORD <|@ <|@
      nr   50  <|@ instruction rbx|DWORD = SUB (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   52  <|@ instruction TEST (x: rbx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr   54  <|@ instruction rdx|DWORD = CMOVE (falseValue: rdx|DWORD, ~trueValue: rcx|DWORD) condition: < <|@ <|@
      nr   56  <|@ instruction CMP rdx|DWORD y: 1 size: DWORD <|@ <|@
      nr   58  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4586956630549375696
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   68  <|@ instruction rbx|DWORD = MOVE input: int[2147483639|0x7ffffff7] <|@ <|@
      nr   70  <|@ instruction rbx|DWORD = SUB (x: rbx|DWORD, ~y: rdx|DWORD) size: DWORD <|@ <|@
      nr   72  <|@ instruction TEST (x: rbx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr   74  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B12" 
    xhandlers
    flags 
    probability 4586956630549375696
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   84  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   86  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   88  <|@ instruction CMP rdx|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   90  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B7 -> B8 falseDestination: B7 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" "B10" 
    xhandlers
    flags 
    probability 4586277049598017570
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   94  <|@ instruction rax|DWORD = SHL rdx|DWORD size: DWORD <|@ <|@
      nr   96  <|@ instruction rax|DWORD = LEA [rax|DWORD + 23] size: DWORD <|@ <|@
      nr   98  <|@ instruction rax|DWORD = AND rax|DWORD y: -8 size: DWORD <|@ <|@
      nr  100  <|@ instruction rax|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr  102  <|@ instruction rbp|QWORD = ADD (x: rax|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  104  <|@ instruction CMP (x: rbp|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  106  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B12 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    probability 4586215887312395339
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  124  <|@ instruction MOV (x: [r15|QWORD + 96], y: rbp|QWORD) size: QWORD <|@ <|@
      nr  126  <|@ instruction AMD64PREFETCH ~[rax|QWORD + rbx|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  128  <|@ instruction AMD64PREFETCH ~[rax|QWORD + rbx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  130  <|@ instruction AMD64PREFETCH ~[rax|QWORD + rbx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  132  <|@ instruction AMD64PREFETCH ~[rax|QWORD + rbx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  134  <|@ instruction MOV (x: [rbx|QWORD + 12], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  136  <|@ instruction MOV [rbx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  138  <|@ instruction MOV [rbx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr  140  <|@ instruction rbx|QWORD[.] = MOVE rbx|QWORD moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction rax|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction stack:40|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  146  <|@ instruction stack:44|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction stack:48|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  150  <|@ instruction stack:52|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr  152  <|@ instruction stack:64|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction r13|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  156  <|@ instruction r14|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  158  <|@ instruction JUMP ~[] destination: B10 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B10" "B12" 
    successors "B32" "B15" 
    xhandlers
    flags 
    probability 4586956630549375697
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  196  <|@ instruction CMP (x: r13|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  198  <|@ instruction rdx|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: r14|DWORD) condition: > <|@ <|@
      nr  200  <|@ instruction r10|QWORD = MOVSXD rdx|DWORD size: QWORD <|@ <|@
      nr  202  <|@ instruction CMP r10|QWORD y: 1 size: QWORD <|@ <|@
      nr  204  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B13 -> B32 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B20" "B18" 
    xhandlers
    flags 
    probability 4582453030922005201
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  212  <|@ instruction r11|DWORD[.] = MOVE stack:48|DWORD[.] moveKind: DWORD <|@ <|@
      nr  214  <|@ instruction r8|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  216  <|@ instruction r11|QWORD[*] = LEA [r11|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr  218  <|@ instruction r9|QWORD = LEA [r10|QWORD - 16] size: QWORD <|@ <|@
      nr  220  <|@ instruction TEST (x: r9|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  226  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  222  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B15 -> B20 falseDestination: B15 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B15" "B18" 
    successors "B23" "B22" 
    xhandlers
    flags 
    probability 4582453030922005201
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  254  <|@ instruction r9|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  256  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  258  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B20 -> B23 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4580754078543609885
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  266  <|@ instruction xmm0|V128_WORD = H [r11|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr  268  <|@ instruction J (address: [r8|QWORD[.] + rcx|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  270  <|@ instruction r9|QWORD = LEA [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  272  <|@ instruction rcx|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B20" 
    successors "B26" "B25" 
    xhandlers
    flags 
    probability 4582453030922005201
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  278  <|@ instruction r9|QWORD = LEA [r10|QWORD - 4] size: QWORD <|@ <|@
      nr  280  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  282  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B23 -> B26 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4580754078543609885
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  290  <|@ instruction xmm0|V64_WORD = H [r11|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr  292  <|@ instruction J (address: [r8|QWORD[.] + rcx|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  294  <|@ instruction r9|QWORD = LEA [rcx|QWORD + 4] size: QWORD <|@ <|@
      nr  296  <|@ instruction rcx|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  298  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B23" 
    successors "B29" "B28" 
    xhandlers
    flags 
    probability 4582453030922005201
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  302  <|@ instruction r9|QWORD = LEA [r10|QWORD - 2] size: QWORD <|@ <|@
      nr  304  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  306  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B26 -> B29 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4580754078543609885
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  314  <|@ instruction xmm0|V32_WORD = H [r11|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr  316  <|@ instruction J (address: [r8|QWORD[.] + rcx|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  318  <|@ instruction r9|QWORD = LEA [rcx|QWORD + 2] size: QWORD <|@ <|@
      nr  320  <|@ instruction rcx|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  322  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B26" 
    successors "B32" "B31" 
    xhandlers
    flags 
    probability 4582453030922005201
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  326  <|@ instruction r9|QWORD = DEC r10|QWORD size: QWORD <|@ <|@
      nr  328  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  330  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B29 -> B32 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4580754078543609885
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  338  <|@ instruction r11|DWORD = MOVSX [r11|QWORD[*] + rcx|QWORD * 2] size: DWORD <|@ <|@
      nr  340  <|@ instruction MOV (x: [r8|QWORD[.] + rcx|QWORD * 2], y: r11|DWORD) size: WORD <|@ <|@
      nr  342  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B13" "B31" "B29" 
    successors "B33" "B52" 
    xhandlers
    flags 
    probability 4586956630549375697
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  346  <|@ instruction r11|QWORD = MOVSXD r13|DWORD size: QWORD <|@ <|@
      nr  348  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  350  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B32 -> B33 falseDestination: B32 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B32" "B49" "B47" 
    successors "B53" 
    xhandlers
    flags 
    probability 4586956630549375697
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  492  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  498  <|@ instruction r10|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@18965d9d encoding: base: 0 shift: 3 <|@ <|@
      nr  500  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr  502  <|@ instruction r10|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  504  <|@ instruction r11|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  506  <|@ instruction MOVB (x: [r10|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  508  <|@ instruction r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  510  <|@ instruction rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  512  <|@ instruction r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ instruction r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  516  <|@ instruction r14|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD <|@ <|@
      nr  518  <|@ instruction r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  520  <|@ instruction JUMP ~[] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4582453030922005201
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  354  <|@ instruction r8|QWORD[.] = LEA [rax|QWORD[.] + r10|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  356  <|@ instruction r11|QWORD = SUB (x: r11|QWORD, ~y: r10|QWORD) size: QWORD <|@ <|@
      nr  358  <|@ instruction r10|QWORD = LEA [r11|QWORD - 16] size: QWORD <|@ <|@
      nr  360  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  362  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B38" 
    xhandlers
    flags 
    probability 4580754078543609885
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  366  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  368  <|@ instruction JUMP ~[] destination: B34 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B34" "B36" 
    successors "B41" "B40" 
    xhandlers
    flags 
    probability 4582453030922005201
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  394  <|@ instruction r10|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  396  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  398  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B38 -> B41 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4580754078543609885
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  406  <|@ instruction xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr  408  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  410  <|@ instruction r10|QWORD = LEA [r9|QWORD + 8] size: QWORD <|@ <|@
      nr  412  <|@ instruction r9|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B38" 
    successors "B44" "B43" 
    xhandlers
    flags 
    probability 4582453030922005201
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  418  <|@ instruction r10|QWORD = LEA [r11|QWORD - 4] size: QWORD <|@ <|@
      nr  420  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  422  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B41 -> B44 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4580754078543609885
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  430  <|@ instruction xmm0|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  432  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  434  <|@ instruction r10|QWORD = LEA [r9|QWORD + 4] size: QWORD <|@ <|@
      nr  436  <|@ instruction r9|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  438  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B41" 
    successors "B47" "B46" 
    xhandlers
    flags 
    probability 4582453030922005201
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  442  <|@ instruction r10|QWORD = LEA [r11|QWORD - 2] size: QWORD <|@ <|@
      nr  444  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  446  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B44 -> B47 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4580754078543609885
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  454  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr  456  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  458  <|@ instruction r10|QWORD = LEA [r9|QWORD + 2] size: QWORD <|@ <|@
      nr  460  <|@ instruction r9|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  462  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B44" 
    successors "B52" "B49" 
    xhandlers
    flags 
    probability 4582453030922005201
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  466  <|@ instruction r11|QWORD = DEC r11|QWORD size: QWORD <|@ <|@
      nr  468  <|@ instruction CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  470  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B47 -> B52 falseDestination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 4580754078543609885
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  480  <|@ instruction MOV (x: [r8|QWORD[.] + r9|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr  484  <|@ instruction JUMP ~[] destination: B49 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B53" "B55" 
    successors 
    xhandlers
    flags 
    probability 4581393005893843005
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  548  <|@ instruction MOV [r15|QWORD + 668] y: -48225 size: DWORD <|@ <|@
      nr  550  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  552  <|@ st <@st|@reference-map: [rsi:0, r13:0]
live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 24]
locals: rsi|QWORD[.] r13|QWORD[.] r8|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: rsi|QWORD[.] r13|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:24, 2, 2, 21, 2, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4573445831667264209
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  372  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr  374  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  376  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B36" 
    successors "B38" "B36" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4582453030922005201
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  380  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  382  <|@ instruction r9|QWORD = LEA [r9|QWORD + 16] size: QWORD <|@ <|@
      nr  384  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  386  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B36 -> B38 falseDestination: B36 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B15" "B18" 
    successors "B20" "B18" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4582453030922005201
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  238  <|@ instruction xmm0|V256_WORD = H [r11|QWORD[*] + rcx|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr  240  <|@ instruction J (address: [r8|QWORD[.] + rcx|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  242  <|@ instruction rcx|QWORD = LEA [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  244  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  246  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B18 -> B20 falseDestination: B18 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" "B8" 
    successors "B13" 
    xhandlers
    flags 
    probability 4572575968049525806
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  162  <|@ instruction stack:40|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  164  <|@ instruction stack:44|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  166  <|@ instruction stack:48|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  168  <|@ instruction stack:52|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr  170  <|@ instruction stack:64|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  176  <|@ instruction rbx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr  178  <|@ instruction rsi|QWORD = MOVE rbx|QWORD moveKind: QWORD <|@ <|@
      nr  180  <|@ instruction rbx|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  184  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  186  <|@ instruction r14|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  188  <|@ instruction r13|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  190  <|@ st <@st|@reference-map: [stack:0, stack:12, stack:16, stack:32]
live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 0]
locals: stack:32|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  192  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  590  <|@ instruction r10|DWORD = MOVE input: int[-34579|0xffffffffffff78ed] <|@ <|@
      nr  592  <|@ instruction JUMP ~[] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" "B60" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  596  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  598  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  600  <|@ st <@st|@reference-map: [rsi:0, r13:0]
live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 0]
locals: rsi|QWORD[.] r13|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   78  <|@ instruction r10|DWORD = MOVE input: int[-51475|0xffffffffffff36ed] <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B6 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   62  <|@ instruction r10|DWORD = MOVE input: int[-51219|0xffffffffffff37ed] <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B4 -> B61 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #5          // append:(java.lang.CharSequence)java.lang.StringBuilder
     5: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec3848896c243048897424204c8bea41817d08addeadde0f8571030000458b750c438504f4448b5610468b1cd50c000000468b04f50c000000448b4e0c418bc84103c9894c241c8bf9412bfb83ff010f8d5b00000049c1e2034585c90f8c8e020000418b7a0c412bf8443bcf0f8f7e02000049c1e6034963d1458bd8498d7e10498d745210498bd3e80000000090488b7424208b4c241c894e0c488bc6488b6c24304883c438850500000000c5f877c3418bd3d1e28d52028bda2bd985db0f4cd183fa010f8ce6020000bbf7ffff7f2bda85db0f8ccf020000498b5f60498b7f7081faffffff000f83640200008bc2d1e08d401783e0f84863c0488be84803eb483bef0f874802000049896f600f188418c00000000f188418000100000f188418400100000f1884188001000089530c48c70301000000c74308addeadde488bc344894c241844894424144489542410448974240c4c892c24448bea458bf3453bee418bd5410f4fd64c63d24983fa010f8c9e000000448b5c24104c8d40104e8d1cdd100000004d8d4af04d85c948c7c1000000000f8d9c0100004d8d4af8493bc90f8f13000000c4c17a6f044bc4c17a7f04484c8d4908498bc94d8d4afc493bc90f8f13000000c4c1f96e044bc4c1f97e04484c8d4904498bc94d8d4afe493bc90f8f13000000c4c1796e044bc4c1797e04484c8d4902498bc94d8bca49ffc9493bc90f8f0a000000450fbf1c4b6645891c484d63dd4d3bda0f8f44000000488b7424204c8bd049c1ea03448956104c8bd649c1ea0949bb00e01b17010000004788241a4c8bd08b4c241c448b4c2418448b442414448b74240c4c8b2c24e9f5fdffff4e8d4450104d2bda4d8d53f04d85d20f8d8f00000049c7c1000000004d8d53f84d3bca0f8f11000000c5f9efc0c4817a7f04484d8d51084d8bca4d8d53fc4d3bca0f8f11000000c5f9efc0c481f97e04484d8d51044d8bca4d8d53fe4d3bca0f8f11000000c5f9efc0c481797e04484d8d51024d8bca49ffcb4d3bcb0f8f3affffff6647892448e930ffffff41c7879c0200009f43ffff4d89a7a8020000e80000000090c5f9efc049c7c1000000000f1f4000c4817e7f04484d8d49104d3bca7ef1e955ffffff660f1f440000660f1f440000c4c17e6f044bc4c17e7f0448488d4910493bc97eebe94afeffff44894c241844894424144489542410448974240c4c892c2448bbaddeaddeaddeadde488bf38bdab900000000458bf3448bebe80000000090e9d1fdffff41baed78ffff4589979c0200004d89a7a8020000e8000000009041baed36ffffebe441baed37ffffebdce80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@14f91edb slotKind: QWORD  <||@
  Comment 48 6 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 56 10 CMP [r13|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0]  <||@
  Comment 56 [rsi:0, r13:0, stack:32]at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |r13|QWORD[.]   <||@
  Comment 56 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 56 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 64 12 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B60  <||@
  Comment 70 block B1 null  <||@
  Comment 70 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 70 16 r14|DWORD[.] = MOV [r13|QWORD[.] + 12] size: DWORD  <||@
  Comment 74 18 NULLCHECK [r12|QWORD[*] + r14|DWORD[.] * 8] state [bci:0]  <||@
  Comment 74 [rsi:0, r13:0, r14:0, stack:32]at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |r13|QWORD[.]   <||@
  Comment 74 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 78 20 r10|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 82 22 r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 82 [rsi:0, r10:0, r13:0, r14:0, stack:32]at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |r13|QWORD[.]   <||@
  Comment 82 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 90 24 r8|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 98 26 r9|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 102 28 rcx|DWORD = ADD (x: r8|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 108 30 stack:36|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 112 32 rdi|DWORD = SUB (x: rcx|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 117 34 CMP rdi|DWORD y: 1 size: DWORD  <||@
  Comment 120 36 BRANCH trueDestinationProbability: 0.9528445987940962 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3  <||@
  Comment 126 block B2 null  <||@
  Comment 126 38 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 126 40 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@18965d9d encoding: base: 0 shift: 3  <||@
  Comment 130 42 JUMP ~[] destination: B2 -> B53  <||@
  Comment 130 block B53 null  <||@
  Comment 130 522 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 130 524 TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 133 526 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B53 -> B57 falseDestination: B53 -> B55  <||@
  Comment 139 block B55 null  <||@
  Comment 139 532 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 139 534 rdi|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD  <||@
  Comment 143 536 rdi|DWORD = SUB (x: rdi|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 146 538 CMP (x: r9|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 149 540 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B55 -> B57 falseDestination: B55 -> B58  <||@
  Comment 155 block B58 null  <||@
  Comment 155 554 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 155 556 r14|QWORD[.] = UNCOMPRESSPOINTER (input: r14|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@18965d9d encoding: base: 0 shift: 3  <||@
  Comment 159 558 r14|QWORD[*] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 159 560 r10|QWORD[*] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 159 562 rdx|QWORD = MOVSXD r9|DWORD size: QWORD  <||@
  Comment 162 564 r11|QWORD = MOV r8|DWORD size: DWORD  <||@
  Comment 165 566 rdi|QWORD = LEA [r14|QWORD[*] + 16] size: QWORD  <||@
  Comment 169 568 rsi|QWORD = LEA [r10|QWORD[*] + rdx|QWORD * 2 + 16] size: QWORD  <||@
  Comment 174 570 rdx|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 177 572 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 177 {Field[name=StubRoutines::_jshort_arraycopy, type=address, offset=0, address=0x105a7dc78, value=0x106812d40]:0x106812d40}  <||@
  Comment 183 574 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 188 576 rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 192 578 MOV (x: [rsi|QWORD[.] + 12], y: rcx|DWORD) size: DWORD  <||@
  Comment 195 580 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 198 582 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 207 12  <||@
  Comment 217 block B3 null  <||@
  Comment 217 44 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 217 46 rdx|DWORD = SHL r11|DWORD size: DWORD  <||@
  Comment 222 48 rdx|DWORD = LEA [rdx|DWORD + 2] size: DWORD  <||@
  Comment 225 50 rbx|DWORD = SUB (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 229 52 TEST (x: rbx|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 231 54 rdx|DWORD = CMOVE (falseValue: rdx|DWORD, ~trueValue: rcx|DWORD) condition: <  <||@
  Comment 234 56 CMP rdx|DWORD y: 1 size: DWORD  <||@
  Comment 237 58 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5  <||@
  Comment 243 block B5 null  <||@
  Comment 243 66 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 243 68 rbx|DWORD = MOVE input: int[2147483639|0x7ffffff7]  <||@
  Comment 248 70 rbx|DWORD = SUB (x: rbx|DWORD, ~y: rdx|DWORD) size: DWORD  <||@
  Comment 250 72 TEST (x: rbx|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 252 74 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B7  <||@
  Comment 258 block B7 null  <||@
  Comment 258 82 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 258 84 rbx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 262 86 rdi|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 266 88 CMP rdx|DWORD y: 16777215 size: DWORD  <||@
  Comment 272 90 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B7 -> B8 falseDestination: B7 -> B12  <||@
  Comment 278 block B8 null  <||@
  Comment 278 92 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 278 94 rax|DWORD = SHL rdx|DWORD size: DWORD  <||@
  Comment 282 96 rax|DWORD = LEA [rax|DWORD + 23] size: DWORD  <||@
  Comment 285 98 rax|DWORD = AND rax|DWORD y: -8 size: DWORD  <||@
  Comment 288 100 rax|QWORD = MOVSXD rax|DWORD size: QWORD  <||@
  Comment 291 102 rbp|QWORD = ADD (x: rax|QWORD, y: rbx|QWORD) size: QWORD  <||@
  Comment 297 104 CMP (x: rbp|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 300 106 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B12 falseDestination: B8 -> B10  <||@
  Comment 306 block B10 null  <||@
  Comment 306 122 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 306 124 MOV (x: [r15|QWORD + 96], y: rbp|QWORD) size: QWORD  <||@
  Comment 310 126 AMD64PREFETCH ~[rax|QWORD + rbx|QWORD * 1 + 192] instr: 0  <||@
  Comment 318 128 AMD64PREFETCH ~[rax|QWORD + rbx|QWORD * 1 + 256] instr: 0  <||@
  Comment 326 130 AMD64PREFETCH ~[rax|QWORD + rbx|QWORD * 1 + 320] instr: 0  <||@
  Comment 334 132 AMD64PREFETCH ~[rax|QWORD + rbx|QWORD * 1 + 384] instr: 0  <||@
  Comment 342 134 MOV (x: [rbx|QWORD + 12], y: rdx|DWORD) size: DWORD  <||@
  Comment 345 136 MOV [rbx|QWORD] y: 1 size: QWORD  <||@
  Comment 352 138 MOV [rbx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 352 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 359 140 rbx|QWORD[.] = MOVE rbx|QWORD moveKind: QWORD  <||@
  Comment 359 142 rax|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 362 144 stack:40|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 367 146 stack:44|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 372 148 stack:48|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 377 150 stack:52|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD  <||@
  Comment 382 152 stack:64|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 386 154 r13|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 389 156 r14|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 392 158 JUMP ~[] destination: B10 -> B13  <||@
  Comment 392 block B13 null  <||@
  Comment 392 194 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 392 196 CMP (x: r13|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 395 198 rdx|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: r14|DWORD) condition: >  <||@
  Comment 402 200 r10|QWORD = MOVSXD rdx|DWORD size: QWORD  <||@
  Comment 405 202 CMP r10|QWORD y: 1 size: QWORD  <||@
  Comment 409 204 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B13 -> B32 falseDestination: B13 -> B15  <||@
  Comment 415 block B15 null  <||@
  Comment 415 210 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 415 212 r11|DWORD[.] = MOVE stack:48|DWORD[.] moveKind: DWORD  <||@
  Comment 420 214 r8|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 424 216 r11|QWORD[*] = LEA [r11|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 432 218 r9|QWORD = LEA [r10|QWORD - 16] size: QWORD  <||@
  Comment 436 220 TEST (x: r9|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 439 226 rcx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 446 222 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B15 -> B20 falseDestination: B15 -> B18  <||@
  Comment 452 block B20 null  <||@
  Comment 452 252 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 452 254 r9|QWORD = LEA [r10|QWORD - 8] size: QWORD  <||@
  Comment 456 256 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 459 258 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B20 -> B23 falseDestination: B20 -> B22  <||@
  Comment 465 block B22 null  <||@
  Comment 465 264 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 465 266 xmm0|V128_WORD = H [r11|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVDQU  <||@
  Comment 471 268 J (address: [r8|QWORD[.] + rcx|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 477 270 r9|QWORD = LEA [rcx|QWORD + 8] size: QWORD  <||@
  Comment 481 272 rcx|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 484 274 JUMP ~[] destination: B22 -> B23  <||@
  Comment 484 block B23 null  <||@
  Comment 484 276 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 484 278 r9|QWORD = LEA [r10|QWORD - 4] size: QWORD  <||@
  Comment 488 280 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 491 282 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B23 -> B26 falseDestination: B23 -> B25  <||@
  Comment 497 block B25 null  <||@
  Comment 497 288 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 497 290 xmm0|V64_WORD = H [r11|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVQ  <||@
  Comment 503 292 J (address: [r8|QWORD[.] + rcx|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 509 294 r9|QWORD = LEA [rcx|QWORD + 4] size: QWORD  <||@
  Comment 513 296 rcx|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 516 298 JUMP ~[] destination: B25 -> B26  <||@
  Comment 516 block B26 null  <||@
  Comment 516 300 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 516 302 r9|QWORD = LEA [r10|QWORD - 2] size: QWORD  <||@
  Comment 520 304 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 523 306 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B26 -> B29 falseDestination: B26 -> B28  <||@
  Comment 529 block B28 null  <||@
  Comment 529 312 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 529 314 xmm0|V32_WORD = H [r11|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVD  <||@
  Comment 535 316 J (address: [r8|QWORD[.] + rcx|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 541 318 r9|QWORD = LEA [rcx|QWORD + 2] size: QWORD  <||@
  Comment 545 320 rcx|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 548 322 JUMP ~[] destination: B28 -> B29  <||@
  Comment 548 block B29 null  <||@
  Comment 548 324 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 548 326 r9|QWORD = DEC r10|QWORD size: QWORD  <||@
  Comment 554 328 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 557 330 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B29 -> B32 falseDestination: B29 -> B31  <||@
  Comment 563 block B31 null  <||@
  Comment 563 336 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 563 338 r11|DWORD = MOVSX [r11|QWORD[*] + rcx|QWORD * 2] size: DWORD  <||@
  Comment 568 340 MOV (x: [r8|QWORD[.] + rcx|QWORD * 2], y: r11|DWORD) size: WORD  <||@
  Comment 573 342 JUMP ~[] destination: B31 -> B32  <||@
  Comment 573 block B32 null  <||@
  Comment 573 344 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 573 346 r11|QWORD = MOVSXD r13|DWORD size: QWORD  <||@
  Comment 576 348 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 579 350 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B32 -> B33 falseDestination: B32 -> B52  <||@
  Comment 585 block B52 null  <||@
  Comment 585 496 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 585 492 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 590 498 r10|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@18965d9d encoding: base: 0 shift: 3  <||@
  Comment 597 500 MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 601 502 r10|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 608 504 r11|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 618 506 MOVB (x: [r10|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 622 508 r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 625 510 rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 629 512 r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 634 514 r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 639 516 r14|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD  <||@
  Comment 644 518 r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 648 520 JUMP ~[] destination: B52 -> B53  <||@
  Comment 653 block B33 null  <||@
  Comment 653 352 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 653 354 r8|QWORD[.] = LEA [rax|QWORD[.] + r10|QWORD * 2 + 16] size: QWORD  <||@
  Comment 658 356 r11|QWORD = SUB (x: r11|QWORD, ~y: r10|QWORD) size: QWORD  <||@
  Comment 661 358 r10|QWORD = LEA [r11|QWORD - 16] size: QWORD  <||@
  Comment 665 360 TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 668 362 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35  <||@
  Comment 674 block B34 null  <||@
  Comment 674 364 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 674 366 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 681 368 JUMP ~[] destination: B34 -> B38  <||@
  Comment 681 block B38 null  <||@
  Comment 681 392 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 681 394 r10|QWORD = LEA [r11|QWORD - 8] size: QWORD  <||@
  Comment 685 396 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 688 398 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B38 -> B41 falseDestination: B38 -> B40  <||@
  Comment 694 block B40 null  <||@
  Comment 694 404 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 694 406 xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 698 408 J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 704 410 r10|QWORD = LEA [r9|QWORD + 8] size: QWORD  <||@
  Comment 708 412 r9|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 711 414 JUMP ~[] destination: B40 -> B41  <||@
  Comment 711 block B41 null  <||@
  Comment 711 416 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 711 418 r10|QWORD = LEA [r11|QWORD - 4] size: QWORD  <||@
  Comment 715 420 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 718 422 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B41 -> B44 falseDestination: B41 -> B43  <||@
  Comment 724 block B43 null  <||@
  Comment 724 428 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 724 430 xmm0|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 728 432 J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 734 434 r10|QWORD = LEA [r9|QWORD + 4] size: QWORD  <||@
  Comment 738 436 r9|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 741 438 JUMP ~[] destination: B43 -> B44  <||@
  Comment 741 block B44 null  <||@
  Comment 741 440 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 741 442 r10|QWORD = LEA [r11|QWORD - 2] size: QWORD  <||@
  Comment 745 444 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 748 446 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B44 -> B47 falseDestination: B44 -> B46  <||@
  Comment 754 block B46 null  <||@
  Comment 754 452 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 754 454 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 758 456 J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 764 458 r10|QWORD = LEA [r9|QWORD + 2] size: QWORD  <||@
  Comment 768 460 r9|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 771 462 JUMP ~[] destination: B46 -> B47  <||@
  Comment 771 block B47 null  <||@
  Comment 771 464 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 771 466 r11|QWORD = DEC r11|QWORD size: QWORD  <||@
  Comment 774 468 CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 777 470 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B47 -> B52 falseDestination: B47 -> B49  <||@
  Comment 783 block B49 null  <||@
  Comment 783 478 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 783 480 MOV (x: [r8|QWORD[.] + r9|QWORD * 2], y: r12|ILLEGAL) size: WORD  <||@
  Comment 788 484 JUMP ~[] destination: B49 -> B52  <||@
  Comment 793 block B57 null  <||@
  Comment 793 546 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 793 548 MOV [r15|QWORD + 668] y: -48225 size: DWORD  <||@
  Comment 804 550 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 811 552 DEOPT info [bci:24, 2, 2, 21, 2, 2]  <||@
  Comment 811 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 816 [rsi:0, r13:0]at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 24, duringCall: false, rethrow: false]
              |0             |1             |2        
     locals:  |rsi|QWORD[.]  |r13|QWORD[.]  |r8|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |r13|QWORD[.]   <||@
  Comment 817 block B35 null  <||@
  Comment 817 370 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 817 372 xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 821 374 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 828 376 JUMP ~[] destination: B35 -> B36  <||@
  Comment 828 block B36 loop 1 depth 1 header:536|LoopBegin  <||@
  Comment 828 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 832 380 J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 838 382 r9|QWORD = LEA [r9|QWORD + 16] size: QWORD  <||@
  Comment 842 384 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 845 386 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B36 -> B38 falseDestination: B36 -> B36  <||@
  Comment 852 block B18 loop 0 depth 1 header:471|LoopBegin  <||@
  Comment 852 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 864 238 xmm0|V256_WORD = H [r11|QWORD[*] + rcx|QWORD * 2] nZ: YMM oh: VMOVDQU  <||@
  Comment 870 240 J (address: [r8|QWORD[.] + rcx|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 876 242 rcx|QWORD = LEA [rcx|QWORD + 16] size: QWORD  <||@
  Comment 880 244 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 883 246 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B18 -> B20 falseDestination: B18 -> B18  <||@
  Comment 890 block B12 null  <||@
  Comment 890 174 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 890 162 stack:40|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 895 164 stack:44|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 900 166 stack:48|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 905 168 stack:52|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD  <||@
  Comment 910 170 stack:64|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 914 176 rbx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 914 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 924 178 rsi|QWORD = MOVE rbx|QWORD moveKind: QWORD  <||@
  Comment 927 180 rbx|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 929 184 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 934 186 r14|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 937 188 r13|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 940 190 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 940 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 945 [stack:0, stack:12, stack:16, stack:32]at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:64|QWORD[.]   <||@
  Comment 946 192 JUMP ~[] destination: B12 -> B13  <||@
  Comment 951 block B60 null  <||@
  Comment 951 588 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 951 590 r10|DWORD = MOVE input: int[-34579|0xffffffffffff78ed]  <||@
  Comment 957 592 JUMP ~[] destination: B60 -> B61  <||@
  Comment 957 block B61 null  <||@
  Comment 957 594 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 957 596 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 964 598 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 971 600 DEOPT info [bci:0]  <||@
  Comment 971 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 976 [rsi:0, r13:0]at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |r13|QWORD[.]   <||@
  Comment 977 block B6 null  <||@
  Comment 977 76 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 977 78 r10|DWORD = MOVE input: int[-51475|0xffffffffffff36ed]  <||@
  Comment 983 80 JUMP ~[] destination: B6 -> B61  <||@
  Comment 985 block B4 null  <||@
  Comment 985 60 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 985 62 r10|DWORD = MOVE input: int[-51219|0xffffffffffff37ed]  <||@
  Comment 991 64 JUMP ~[] destination: B4 -> B61  <||@
  Comment 993 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 993 4  <||@
  Comment 999 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 999 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-5272[java.lang.StringBuilder.append(CharSequence)]"
  method "HotSpotCompilation-5272[java.lang.StringBuilder.append(CharSequence)]"
  date 1527005168891
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 106b0fd80 448b560849c1e203493bc20f85cf60cfff900f1f80000000000f1f800000000089842400c0feff4883ec3848896c243048897424204c8bea41817d08da0200f80f8571030000458b750c438504f4448b5610468b1cd50c000000468b04f50c000000448b4e0c418bc84103c9894c241c8bf9412bfb83ff010f8d5b00000049c1e2034585c90f8c8e020000418b7a0c412bf8443bcf0f8f7e02000049c1e6034963d1458bd8498d7e10498d745210498bd3e80a2fd0ff90488b7424208b4c241c894e0c488bc6488b6c24304883c4388505b1f1d7fdc5f877c3418bd3d1e28d52028bda2bd985db0f4cd183fa010f8ce6020000bbf7ffff7f2bda85db0f8ccf020000498b5f60498b7f7081faffffff000f83640200008bc2d1e08d401783e0f84863c0488be84803eb483bef0f874802000049896f600f188418c00000000f188418000100000f188418400100000f1884188001000089530c48c70301000000c74308410000f8488bc344894c241844894424144489542410448974240c4c892c24448bea458bf3453bee418bd5410f4fd64c63d24983fa010f8c9e000000448b5c24104c8d40104e8d1cdd100000004d8d4af04d85c948c7c1000000000f8d9c0100004d8d4af8493bc90f8f13000000c4c17a6f044bc4c17a7f04484c8d4908498bc94d8d4afc493bc90f8f13000000c4c1f96e044bc4c1f97e04484c8d4904498bc94d8d4afe493bc90f8f13000000c4c1796e044bc4c1797e04484c8d4902498bc94d8bca49ffc9493bc90f8f0a000000450fbf1c4b6645891c484d63dd4d3bda0f8f44000000488b7424204c8bd049c1ea03448956104c8bd649c1ea0949bb00e01b17010000004788241a4c8bd08b4c241c448b4c2418448b442414448b74240c4c8b2c24e9f5fdffff4e8d4450104d2bda4d8d53f04d85d20f8d8f00000049c7c1000000004d8d53f84d3bca0f8f11000000c5f9efc0c4817a7f04484d8d51084d8bca4d8d53fc4d3bca0f8f11000000c5f9efc0c481f97e04484d8d51044d8bca4d8d53fe4d3bca0f8f11000000c5f9efc0c481797e04484d8d51024d8bca49ffcb4d3bcb0f8f3affffff6647892448e930ffffff41c7879c0200009f43ffff4d89a7a8020000e84e75cfff90c5f9efc049c7c1000000000f1f4000c4817e7f04484d8d49104d3bca7ef1e955ffffff660f1f440000660f1f440000c4c17e6f044bc4c17e7f0448488d4910493bc97eebe94afeffff44894c241844894424144489542410448974240c4c892c2448bb080200c007000000488bf38bdab900000000458bf3448bebe8af6c480090e9d1fdffff41baed78ffff4589979c0200004d89a7a8020000e8ae74cfff9041baed36ffffebe441baed37ffffebdce8baa4130090e89473cfff90f4f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@14f91edb slotKind: QWORD  <||@
  Comment 48 6 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 56 10 CMP [r13|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0]  <||@
  Comment 56 [rsi:0, r13:0, stack:32]at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |r13|QWORD[.]   <||@
  Comment 56 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 56 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 64 12 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B60  <||@
  Comment 70 block B1 null  <||@
  Comment 70 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 70 16 r14|DWORD[.] = MOV [r13|QWORD[.] + 12] size: DWORD  <||@
  Comment 74 18 NULLCHECK [r12|QWORD[*] + r14|DWORD[.] * 8] state [bci:0]  <||@
  Comment 74 [rsi:0, r13:0, r14:0, stack:32]at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |r13|QWORD[.]   <||@
  Comment 74 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 78 20 r10|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 82 22 r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 82 [rsi:0, r10:0, r13:0, r14:0, stack:32]at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |r13|QWORD[.]   <||@
  Comment 82 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 90 24 r8|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 98 26 r9|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 102 28 rcx|DWORD = ADD (x: r8|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 108 30 stack:36|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 112 32 rdi|DWORD = SUB (x: rcx|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 117 34 CMP rdi|DWORD y: 1 size: DWORD  <||@
  Comment 120 36 BRANCH trueDestinationProbability: 0.9528445987940962 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3  <||@
  Comment 126 block B2 null  <||@
  Comment 126 38 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 126 40 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@18965d9d encoding: base: 0 shift: 3  <||@
  Comment 130 42 JUMP ~[] destination: B2 -> B53  <||@
  Comment 130 block B53 null  <||@
  Comment 130 522 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 130 524 TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 133 526 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B53 -> B57 falseDestination: B53 -> B55  <||@
  Comment 139 block B55 null  <||@
  Comment 139 532 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 139 534 rdi|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD  <||@
  Comment 143 536 rdi|DWORD = SUB (x: rdi|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 146 538 CMP (x: r9|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 149 540 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B55 -> B57 falseDestination: B55 -> B58  <||@
  Comment 155 block B58 null  <||@
  Comment 155 554 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 155 556 r14|QWORD[.] = UNCOMPRESSPOINTER (input: r14|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@18965d9d encoding: base: 0 shift: 3  <||@
  Comment 159 558 r14|QWORD[*] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 159 560 r10|QWORD[*] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 159 562 rdx|QWORD = MOVSXD r9|DWORD size: QWORD  <||@
  Comment 162 564 r11|QWORD = MOV r8|DWORD size: DWORD  <||@
  Comment 165 566 rdi|QWORD = LEA [r14|QWORD[*] + 16] size: QWORD  <||@
  Comment 169 568 rsi|QWORD = LEA [r10|QWORD[*] + rdx|QWORD * 2 + 16] size: QWORD  <||@
  Comment 174 570 rdx|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 177 572 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 177 {Field[name=StubRoutines::_jshort_arraycopy, type=address, offset=0, address=0x105a7dc78, value=0x106812d40]:0x106812d40}  <||@
  Comment 183 574 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 188 576 rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 192 578 MOV (x: [rsi|QWORD[.] + 12], y: rcx|DWORD) size: DWORD  <||@
  Comment 195 580 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 198 582 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 207 12  <||@
  Comment 217 block B3 null  <||@
  Comment 217 44 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 217 46 rdx|DWORD = SHL r11|DWORD size: DWORD  <||@
  Comment 222 48 rdx|DWORD = LEA [rdx|DWORD + 2] size: DWORD  <||@
  Comment 225 50 rbx|DWORD = SUB (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 229 52 TEST (x: rbx|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 231 54 rdx|DWORD = CMOVE (falseValue: rdx|DWORD, ~trueValue: rcx|DWORD) condition: <  <||@
  Comment 234 56 CMP rdx|DWORD y: 1 size: DWORD  <||@
  Comment 237 58 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5  <||@
  Comment 243 block B5 null  <||@
  Comment 243 66 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 243 68 rbx|DWORD = MOVE input: int[2147483639|0x7ffffff7]  <||@
  Comment 248 70 rbx|DWORD = SUB (x: rbx|DWORD, ~y: rdx|DWORD) size: DWORD  <||@
  Comment 250 72 TEST (x: rbx|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 252 74 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B7  <||@
  Comment 258 block B7 null  <||@
  Comment 258 82 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 258 84 rbx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 262 86 rdi|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 266 88 CMP rdx|DWORD y: 16777215 size: DWORD  <||@
  Comment 272 90 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B7 -> B8 falseDestination: B7 -> B12  <||@
  Comment 278 block B8 null  <||@
  Comment 278 92 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 278 94 rax|DWORD = SHL rdx|DWORD size: DWORD  <||@
  Comment 282 96 rax|DWORD = LEA [rax|DWORD + 23] size: DWORD  <||@
  Comment 285 98 rax|DWORD = AND rax|DWORD y: -8 size: DWORD  <||@
  Comment 288 100 rax|QWORD = MOVSXD rax|DWORD size: QWORD  <||@
  Comment 291 102 rbp|QWORD = ADD (x: rax|QWORD, y: rbx|QWORD) size: QWORD  <||@
  Comment 297 104 CMP (x: rbp|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 300 106 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B12 falseDestination: B8 -> B10  <||@
  Comment 306 block B10 null  <||@
  Comment 306 122 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 306 124 MOV (x: [r15|QWORD + 96], y: rbp|QWORD) size: QWORD  <||@
  Comment 310 126 AMD64PREFETCH ~[rax|QWORD + rbx|QWORD * 1 + 192] instr: 0  <||@
  Comment 318 128 AMD64PREFETCH ~[rax|QWORD + rbx|QWORD * 1 + 256] instr: 0  <||@
  Comment 326 130 AMD64PREFETCH ~[rax|QWORD + rbx|QWORD * 1 + 320] instr: 0  <||@
  Comment 334 132 AMD64PREFETCH ~[rax|QWORD + rbx|QWORD * 1 + 384] instr: 0  <||@
  Comment 342 134 MOV (x: [rbx|QWORD + 12], y: rdx|DWORD) size: DWORD  <||@
  Comment 345 136 MOV [rbx|QWORD] y: 1 size: QWORD  <||@
  Comment 352 138 MOV [rbx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 352 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 359 140 rbx|QWORD[.] = MOVE rbx|QWORD moveKind: QWORD  <||@
  Comment 359 142 rax|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 362 144 stack:40|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 367 146 stack:44|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 372 148 stack:48|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 377 150 stack:52|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD  <||@
  Comment 382 152 stack:64|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 386 154 r13|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 389 156 r14|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 392 158 JUMP ~[] destination: B10 -> B13  <||@
  Comment 392 block B13 null  <||@
  Comment 392 194 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 392 196 CMP (x: r13|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 395 198 rdx|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: r14|DWORD) condition: >  <||@
  Comment 402 200 r10|QWORD = MOVSXD rdx|DWORD size: QWORD  <||@
  Comment 405 202 CMP r10|QWORD y: 1 size: QWORD  <||@
  Comment 409 204 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B13 -> B32 falseDestination: B13 -> B15  <||@
  Comment 415 block B15 null  <||@
  Comment 415 210 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 415 212 r11|DWORD[.] = MOVE stack:48|DWORD[.] moveKind: DWORD  <||@
  Comment 420 214 r8|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 424 216 r11|QWORD[*] = LEA [r11|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 432 218 r9|QWORD = LEA [r10|QWORD - 16] size: QWORD  <||@
  Comment 436 220 TEST (x: r9|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 439 226 rcx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 446 222 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B15 -> B20 falseDestination: B15 -> B18  <||@
  Comment 452 block B20 null  <||@
  Comment 452 252 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 452 254 r9|QWORD = LEA [r10|QWORD - 8] size: QWORD  <||@
  Comment 456 256 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 459 258 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B20 -> B23 falseDestination: B20 -> B22  <||@
  Comment 465 block B22 null  <||@
  Comment 465 264 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 465 266 xmm0|V128_WORD = H [r11|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVDQU  <||@
  Comment 471 268 J (address: [r8|QWORD[.] + rcx|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 477 270 r9|QWORD = LEA [rcx|QWORD + 8] size: QWORD  <||@
  Comment 481 272 rcx|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 484 274 JUMP ~[] destination: B22 -> B23  <||@
  Comment 484 block B23 null  <||@
  Comment 484 276 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 484 278 r9|QWORD = LEA [r10|QWORD - 4] size: QWORD  <||@
  Comment 488 280 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 491 282 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B23 -> B26 falseDestination: B23 -> B25  <||@
  Comment 497 block B25 null  <||@
  Comment 497 288 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 497 290 xmm0|V64_WORD = H [r11|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVQ  <||@
  Comment 503 292 J (address: [r8|QWORD[.] + rcx|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 509 294 r9|QWORD = LEA [rcx|QWORD + 4] size: QWORD  <||@
  Comment 513 296 rcx|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 516 298 JUMP ~[] destination: B25 -> B26  <||@
  Comment 516 block B26 null  <||@
  Comment 516 300 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 516 302 r9|QWORD = LEA [r10|QWORD - 2] size: QWORD  <||@
  Comment 520 304 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 523 306 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B26 -> B29 falseDestination: B26 -> B28  <||@
  Comment 529 block B28 null  <||@
  Comment 529 312 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 529 314 xmm0|V32_WORD = H [r11|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVD  <||@
  Comment 535 316 J (address: [r8|QWORD[.] + rcx|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 541 318 r9|QWORD = LEA [rcx|QWORD + 2] size: QWORD  <||@
  Comment 545 320 rcx|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 548 322 JUMP ~[] destination: B28 -> B29  <||@
  Comment 548 block B29 null  <||@
  Comment 548 324 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 548 326 r9|QWORD = DEC r10|QWORD size: QWORD  <||@
  Comment 554 328 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 557 330 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B29 -> B32 falseDestination: B29 -> B31  <||@
  Comment 563 block B31 null  <||@
  Comment 563 336 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 563 338 r11|DWORD = MOVSX [r11|QWORD[*] + rcx|QWORD * 2] size: DWORD  <||@
  Comment 568 340 MOV (x: [r8|QWORD[.] + rcx|QWORD * 2], y: r11|DWORD) size: WORD  <||@
  Comment 573 342 JUMP ~[] destination: B31 -> B32  <||@
  Comment 573 block B32 null  <||@
  Comment 573 344 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 573 346 r11|QWORD = MOVSXD r13|DWORD size: QWORD  <||@
  Comment 576 348 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 579 350 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B32 -> B33 falseDestination: B32 -> B52  <||@
  Comment 585 block B52 null  <||@
  Comment 585 496 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 585 492 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 590 498 r10|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@18965d9d encoding: base: 0 shift: 3  <||@
  Comment 597 500 MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 601 502 r10|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 608 504 r11|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 618 506 MOVB (x: [r10|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 622 508 r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 625 510 rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 629 512 r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 634 514 r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 639 516 r14|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD  <||@
  Comment 644 518 r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 648 520 JUMP ~[] destination: B52 -> B53  <||@
  Comment 653 block B33 null  <||@
  Comment 653 352 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 653 354 r8|QWORD[.] = LEA [rax|QWORD[.] + r10|QWORD * 2 + 16] size: QWORD  <||@
  Comment 658 356 r11|QWORD = SUB (x: r11|QWORD, ~y: r10|QWORD) size: QWORD  <||@
  Comment 661 358 r10|QWORD = LEA [r11|QWORD - 16] size: QWORD  <||@
  Comment 665 360 TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 668 362 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35  <||@
  Comment 674 block B34 null  <||@
  Comment 674 364 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 674 366 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 681 368 JUMP ~[] destination: B34 -> B38  <||@
  Comment 681 block B38 null  <||@
  Comment 681 392 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 681 394 r10|QWORD = LEA [r11|QWORD - 8] size: QWORD  <||@
  Comment 685 396 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 688 398 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B38 -> B41 falseDestination: B38 -> B40  <||@
  Comment 694 block B40 null  <||@
  Comment 694 404 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 694 406 xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 698 408 J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 704 410 r10|QWORD = LEA [r9|QWORD + 8] size: QWORD  <||@
  Comment 708 412 r9|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 711 414 JUMP ~[] destination: B40 -> B41  <||@
  Comment 711 block B41 null  <||@
  Comment 711 416 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 711 418 r10|QWORD = LEA [r11|QWORD - 4] size: QWORD  <||@
  Comment 715 420 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 718 422 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B41 -> B44 falseDestination: B41 -> B43  <||@
  Comment 724 block B43 null  <||@
  Comment 724 428 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 724 430 xmm0|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 728 432 J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 734 434 r10|QWORD = LEA [r9|QWORD + 4] size: QWORD  <||@
  Comment 738 436 r9|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 741 438 JUMP ~[] destination: B43 -> B44  <||@
  Comment 741 block B44 null  <||@
  Comment 741 440 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 741 442 r10|QWORD = LEA [r11|QWORD - 2] size: QWORD  <||@
  Comment 745 444 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 748 446 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B44 -> B47 falseDestination: B44 -> B46  <||@
  Comment 754 block B46 null  <||@
  Comment 754 452 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 754 454 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 758 456 J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 764 458 r10|QWORD = LEA [r9|QWORD + 2] size: QWORD  <||@
  Comment 768 460 r9|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 771 462 JUMP ~[] destination: B46 -> B47  <||@
  Comment 771 block B47 null  <||@
  Comment 771 464 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 771 466 r11|QWORD = DEC r11|QWORD size: QWORD  <||@
  Comment 774 468 CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 777 470 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B47 -> B52 falseDestination: B47 -> B49  <||@
  Comment 783 block B49 null  <||@
  Comment 783 478 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 783 480 MOV (x: [r8|QWORD[.] + r9|QWORD * 2], y: r12|ILLEGAL) size: WORD  <||@
  Comment 788 484 JUMP ~[] destination: B49 -> B52  <||@
  Comment 793 block B57 null  <||@
  Comment 793 546 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 793 548 MOV [r15|QWORD + 668] y: -48225 size: DWORD  <||@
  Comment 804 550 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 811 552 DEOPT info [bci:24, 2, 2, 21, 2, 2]  <||@
  Comment 811 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 816 [rsi:0, r13:0]at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 24, duringCall: false, rethrow: false]
              |0             |1             |2        
     locals:  |rsi|QWORD[.]  |r13|QWORD[.]  |r8|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |r13|QWORD[.]   <||@
  Comment 817 block B35 null  <||@
  Comment 817 370 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 817 372 xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 821 374 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 828 376 JUMP ~[] destination: B35 -> B36  <||@
  Comment 828 block B36 loop 1 depth 1 header:536|LoopBegin  <||@
  Comment 828 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 832 380 J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 838 382 r9|QWORD = LEA [r9|QWORD + 16] size: QWORD  <||@
  Comment 842 384 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 845 386 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B36 -> B38 falseDestination: B36 -> B36  <||@
  Comment 852 block B18 loop 0 depth 1 header:471|LoopBegin  <||@
  Comment 852 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 864 238 xmm0|V256_WORD = H [r11|QWORD[*] + rcx|QWORD * 2] nZ: YMM oh: VMOVDQU  <||@
  Comment 870 240 J (address: [r8|QWORD[.] + rcx|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 876 242 rcx|QWORD = LEA [rcx|QWORD + 16] size: QWORD  <||@
  Comment 880 244 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 883 246 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B18 -> B20 falseDestination: B18 -> B18  <||@
  Comment 890 block B12 null  <||@
  Comment 890 174 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 890 162 stack:40|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 895 164 stack:44|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 900 166 stack:48|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 905 168 stack:52|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD  <||@
  Comment 910 170 stack:64|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 914 176 rbx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 914 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 924 178 rsi|QWORD = MOVE rbx|QWORD moveKind: QWORD  <||@
  Comment 927 180 rbx|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 929 184 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 934 186 r14|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 937 188 r13|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 940 190 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 940 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 945 [stack:0, stack:12, stack:16, stack:32]at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:64|QWORD[.]   <||@
  Comment 946 192 JUMP ~[] destination: B12 -> B13  <||@
  Comment 951 block B60 null  <||@
  Comment 951 588 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 951 590 r10|DWORD = MOVE input: int[-34579|0xffffffffffff78ed]  <||@
  Comment 957 592 JUMP ~[] destination: B60 -> B61  <||@
  Comment 957 block B61 null  <||@
  Comment 957 594 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 957 596 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 964 598 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 971 600 DEOPT info [bci:0]  <||@
  Comment 971 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 976 [rsi:0, r13:0]at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |r13|QWORD[.]   <||@
  Comment 977 block B6 null  <||@
  Comment 977 76 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 977 78 r10|DWORD = MOVE input: int[-51475|0xffffffffffff36ed]  <||@
  Comment 983 80 JUMP ~[] destination: B6 -> B61  <||@
  Comment 985 block B4 null  <||@
  Comment 985 60 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 985 62 r10|DWORD = MOVE input: int[-51219|0xffffffffffff37ed]  <||@
  Comment 991 64 JUMP ~[] destination: B4 -> B61  <||@
  Comment 993 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 993 4  <||@
  Comment 999 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 999 5  <||@
  HexCodeFile>>> <|@
end_nmethod
