begin_compilation
  name " HotSpotCompilation-9201[java.util.ArrayList$SubList$1.next()]"
  method "HotSpotCompilation-9201[java.util.ArrayList$SubList$1.next()]"
  date 1527005199919
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a147 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a147  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/ArrayList$SubList$1;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v157 v158 v161 v164 v166 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a147 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a147 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList$1.this$1
nodeSourcePosition: at java.util.ArrayList$SubList$1.checkForComodification(ArrayList.java:1212) [bci: 5]
at java.util.ArrayList$SubList$1.next(ArrayList.java:1114) [bci: 1]
nullCheck: false
stamp: n# Ljava/util/ArrayList$SubList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v158 
=== Succesors ===
next: a148 
=== Usages ===
v162 v159 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v158 #next: a148  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<ArrayList$SubList$1.next()>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: ArrayList.java
sourceLine: 1114
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - 
=== Succesors ===
=== Usages ===
v134 a148 i149 i154 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - -  <|@  <|@
f <@~|@floating>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a147 
=== Succesors ===
=== Usages ===
a148 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a147  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a148 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList.this$0
nodeSourcePosition: at java.util.ArrayList$SubList$1.checkForComodification(ArrayList.java:1212) [bci: 8]
at java.util.ArrayList$SubList$1.next(ArrayList.java:1114) [bci: 1]
nullCheck: true
stamp: n# Ljava/util/ArrayList;
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v159 
=== Succesors ===
next: i149 
=== Usages ===
v163 v160 
=== Predecessor ===
a147 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v159 #next: i149  <|@  <|@
f <@~|@floating>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a148 
=== Succesors ===
=== Usages ===
i149 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a148  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i149 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.ArrayList$SubList$1.checkForComodification(ArrayList.java:1212) [bci: 11]
at java.util.ArrayList$SubList$1.next(ArrayList.java:1114) [bci: 1]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v160 
=== Succesors ===
next: i150 
=== Usages ===
v33 
=== Predecessor ===
a148 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v160 #next: i150  <|@  <|@
f <@~|@floating>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i150 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i150 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList$1.expectedModCount
nodeSourcePosition: at java.util.ArrayList$SubList$1.checkForComodification(ArrayList.java:1212) [bci: 1]
at java.util.ArrayList$SubList$1.next(ArrayList.java:1114) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v157 
=== Succesors ===
next: v111 
=== Usages ===
v33 
=== Predecessor ===
i149 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v157 #next: v111  <|@  <|@
f <@~|@floating>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayList$SubList$1.checkForComodification(ArrayList.java:1212) [bci: 14]
at java.util.ArrayList$SubList$1.next(ArrayList.java:1114) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i149 
y: i150 
=== Succesors ===
=== Usages ===
v111 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i149 y: i150  <|@  <|@
f <@*|@fixed>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.checkForComodification(ArrayList.java:1212) [bci: 14]
at java.util.ArrayList$SubList$1.next(ArrayList.java:1114) [bci: 1]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v33 
=== Succesors ===
trueSuccessor: v108 
falseSuccessor: v110 
=== Usages ===
=== Predecessor ===
i150 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v33 #trueSuccessor: v108 #falseSuccessor: v110  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.checkForComodification(ArrayList.java:1212) [bci: 14]
at java.util.ArrayList$SubList$1.next(ArrayList.java:1114) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: i151 
=== Usages ===
=== Predecessor ===
v111 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i151  <|@  <|@
f <@~|@floating>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i151 v74 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i151 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList$1.cursor
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1115) [bci: 5]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v161 
=== Succesors ===
next: i152 
=== Usages ===
v9 i15 i20 v77 
=== Predecessor ===
v108 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v161 #next: i152  <|@  <|@
f <@~|@floating>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a147 
=== Succesors ===
=== Usages ===
i152 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a147  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i152 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList.size
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1116) [bci: 14]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v162 
=== Succesors ===
next: v115 
=== Usages ===
v9 
=== Predecessor ===
i151 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v162 #next: v115  <|@  <|@
f <@~|@floating>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1116) [bci: 17]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i151 
y: i152 
=== Succesors ===
=== Usages ===
v115 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i151 y: i152  <|@  <|@
f <@*|@fixed>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1116) [bci: 17]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v9 
=== Succesors ===
trueSuccessor: v112 
falseSuccessor: v114 
=== Usages ===
=== Predecessor ===
i152 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v9 #trueSuccessor: v112 #falseSuccessor: v114  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1116) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: a153 
=== Usages ===
=== Predecessor ===
v115 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a153  <|@  <|@
f <@~|@floating>@ <|@
tid v163 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a148 
=== Succesors ===
=== Usages ===
a153 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a148  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a153 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList.elementData
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1118) [bci: 35]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v163 
=== Succesors ===
next: i154 
=== Usages ===
a64 v165 
=== Predecessor ===
v112 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v163 #next: i154  <|@  <|@
f <@~|@floating>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a153 
=== Succesors ===
=== Usages ===
i154 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a153  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i154 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1119) [bci: 46]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v165 
=== Succesors ===
next: i155 
=== Usages ===
v17 v79 
=== Predecessor ===
a153 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v165 #next: i155  <|@  <|@
f <@~|@floating>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i155 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i155 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList$1.val$offset
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1119) [bci: 40]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v164 
=== Succesors ===
next: v123 
=== Usages ===
i15 
=== Predecessor ===
i154 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v164 #next: v123  <|@  <|@
f <@~|@floating>@ <|@
tid i15 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1119) [bci: 44]
stamp: i32
=== Inputs ===
x: i151 
y: i155 
=== Succesors ===
=== Usages ===
v17 v167 v79 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i151 y: i155  <|@  <|@
f <@~|@floating>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1119) [bci: 47]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i15 
y: i154 
=== Succesors ===
=== Usages ===
v123 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i15 y: i154  <|@  <|@
f <@*|@fixed>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1119) [bci: 47]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v17 
=== Succesors ===
trueSuccessor: v120 
falseSuccessor: v122 
=== Usages ===
=== Predecessor ===
i155 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v17 #trueSuccessor: v120 #falseSuccessor: v122  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1119) [bci: 47]
stamp: void
=== Inputs ===
=== Succesors ===
next: v127 
=== Usages ===
=== Predecessor ===
v123 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v127  <|@  <|@
f <@~|@floating>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1122) [bci: 77]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i15 
y: i154 
=== Succesors ===
=== Usages ===
v127 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i15 y: i154  <|@  <|@
f <@*|@fixed>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1122) [bci: 77]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v79 
=== Succesors ===
trueSuccessor: v124 
falseSuccessor: v126 
=== Usages ===
=== Predecessor ===
v120 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v79 #trueSuccessor: v124 #falseSuccessor: v126  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1122) [bci: 77]
stamp: void
=== Inputs ===
=== Succesors ===
next: v74 
=== Usages ===
a156 
=== Predecessor ===
v127 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v74  <|@  <|@
f <@~|@floating>@ <|@
tid i19 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1121) [bci: 60]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i20 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i20 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1121) [bci: 61]
stamp: i32
=== Inputs ===
x: i151 
y: i19 
=== Succesors ===
=== Usages ===
v74 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i151 y: i19  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ArrayList$SubList$1.cursor
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1121) [bci: 62]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v161 
value: i20 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v77 
=== Usages ===
=== Predecessor ===
v124 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v161 value: i20 stateAfter: - lastLocationAccess: - #next: v77  <|@  <|@
f <@~|@floating>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v77 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ArrayList$SubList$1.lastRet
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1122) [bci: 73]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v166 
value: i151 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a156 
=== Usages ===
=== Predecessor ===
v74 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v166 value: i151 stateAfter: - lastLocationAccess: - #next: a156  <|@  <|@
f <@~|@floating>@ <|@
tid a64 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1118) [bci: 35]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a153 
=== Succesors ===
=== Usages ===
v167 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a153  <|@  <|@
f <@~|@floating>@ <|@
tid v167 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a64 
index: i15 
=== Succesors ===
=== Usages ===
a156 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a64 index: i15  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a156 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1122) [bci: 77]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v124 
address: v167 
=== Succesors ===
next: v28 
=== Usages ===
a88 
=== Predecessor ===
v77 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v124 address: v167 #next: v28  <|@  <|@
f <@~|@floating>@ <|@
tid a88 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1122) [bci: 77]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a156 
=== Succesors ===
=== Usages ===
v28 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a156  <|@  <|@
f <@*|@fixed>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1122) [bci: 78]
stamp: void
=== Inputs ===
result: a88 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a156 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a88 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1122) [bci: 77]
stamp: void
=== Inputs ===
=== Succesors ===
next: v145 
=== Usages ===
=== Predecessor ===
v127 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v145  <|@  <|@
f <@~|@floating>@ <|@
tid i146 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -20507
stableDimension: 0
stamp: i32 [-20507] ⇊00000000ffffafe5 ⇈00000000ffffafe5
stampKind: i32
value: int[-20507|0xffffffffffffafe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i132 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v145 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v128 
=== Predecessor ===
v126 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1119) [bci: 47]
stamp: void
=== Inputs ===
=== Succesors ===
next: v143 
=== Usages ===
=== Predecessor ===
v123 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v143  <|@  <|@
f <@~|@floating>@ <|@
tid i144 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -18707
stableDimension: 0
stamp: i32 [-18707] ⇊00000000ffffb6ed ⇈00000000ffffb6ed
stampKind: i32
value: int[-18707|0xffffffffffffb6ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i132 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v128 
=== Predecessor ===
v122 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1116) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v141 
=== Usages ===
=== Predecessor ===
v115 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v141  <|@  <|@
f <@~|@floating>@ <|@
tid i142 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -15635
stableDimension: 0
stamp: i32 [-15635] ⇊00000000ffffc2ed ⇈00000000ffffc2ed
stampKind: i32
value: int[-15635|0xffffffffffffc2ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i132 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v128 
=== Predecessor ===
v114 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.checkForComodification(ArrayList.java:1212) [bci: 14]
at java.util.ArrayList$SubList$1.next(ArrayList.java:1114) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v139 
=== Usages ===
=== Predecessor ===
v111 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v139  <|@  <|@
f <@~|@floating>@ <|@
tid i140 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -14099
stableDimension: 0
stamp: i32 [-14099] ⇊00000000ffffc8ed ⇈00000000ffffc8ed
stampKind: i32
value: int[-14099|0xffffffffffffc8ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i132 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v128 
=== Predecessor ===
v110 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" "B6" "B5" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i132 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-20507 - -11275] ⇊00000000ffff80e5 ⇈00000000fffffffd
valueDescription: i32
=== Inputs ===
merge: v128 
values: i140 i142 i144 i146 
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v128 values: i140 i142 i144 i146  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v139 v141 v143 v145 
=== Succesors ===
next: v134 
=== Usages ===
i132 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v139 v141 v143 v145 #next: v134  <|@  <|@
f <@~|@floating>@ <|@
tid a131 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2 
actionAndReason: i132 
speculation: a131 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v128 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2 actionAndReason: i132 speculation: a131  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a147 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a147  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/ArrayList$SubList$1;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v157 v158 v161 v164 v166 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v158 <|@
result [v0|QWORD[.] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a147 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a147 <|@
result v1|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList$1.this$1
nodeSourcePosition: at java.util.ArrayList$SubList$1.checkForComodification(ArrayList.java:1212) [bci: 5]
at java.util.ArrayList$SubList$1.next(ArrayList.java:1114) [bci: 1]
nullCheck: false
stamp: n# Ljava/util/ArrayList$SubList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v158 
=== Succesors ===
next: a148 
=== Usages ===
v162 v159 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v158 #next: a148  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<ArrayList$SubList$1.next()>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: ArrayList.java
sourceLine: 1114
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - 
=== Succesors ===
=== Usages ===
v134 a148 i149 i154 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - -  <|@  <|@
f <@~|@floating>@ <|@
tid v159 <|@
result [v1|DWORD[.] * 8 + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a147 
=== Succesors ===
=== Usages ===
a148 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a147  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a148 <|@
result v2|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList.this$0
nodeSourcePosition: at java.util.ArrayList$SubList$1.checkForComodification(ArrayList.java:1212) [bci: 8]
at java.util.ArrayList$SubList$1.next(ArrayList.java:1114) [bci: 1]
nullCheck: true
stamp: n# Ljava/util/ArrayList;
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v159 
=== Succesors ===
next: i149 
=== Usages ===
v163 v160 
=== Predecessor ===
a147 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v159 #next: i149  <|@  <|@
f <@~|@floating>@ <|@
tid v160 <|@
result [v2|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a148 
=== Succesors ===
=== Usages ===
i149 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a148  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i149 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.ArrayList$SubList$1.checkForComodification(ArrayList.java:1212) [bci: 11]
at java.util.ArrayList$SubList$1.next(ArrayList.java:1114) [bci: 1]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v160 
=== Succesors ===
next: i150 
=== Usages ===
v33 
=== Predecessor ===
a148 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v160 #next: i150  <|@  <|@
f <@~|@floating>@ <|@
tid v157 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i150 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i150 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList$1.expectedModCount
nodeSourcePosition: at java.util.ArrayList$SubList$1.checkForComodification(ArrayList.java:1212) [bci: 1]
at java.util.ArrayList$SubList$1.next(ArrayList.java:1114) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v157 
=== Succesors ===
next: v111 
=== Usages ===
v33 
=== Predecessor ===
i149 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v157 #next: v111  <|@  <|@
f <@~|@floating>@ <|@
tid v33 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayList$SubList$1.checkForComodification(ArrayList.java:1212) [bci: 14]
at java.util.ArrayList$SubList$1.next(ArrayList.java:1114) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i149 
y: i150 
=== Succesors ===
=== Usages ===
v111 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i149 y: i150  <|@  <|@
f <@*|@fixed>@ <|@
tid v111 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.checkForComodification(ArrayList.java:1212) [bci: 14]
at java.util.ArrayList$SubList$1.next(ArrayList.java:1114) [bci: 1]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v33 
=== Succesors ===
trueSuccessor: v108 
falseSuccessor: v110 
=== Usages ===
=== Predecessor ===
i150 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v33 #trueSuccessor: v108 #falseSuccessor: v110  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@301e229 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[.] = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList$SubList$1.next(ArrayList.java:1114) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v2|DWORD[.] = MOV [v1|DWORD[.] * 8 + 32] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList$SubList$1.next(ArrayList.java:1114) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v3|DWORD = MOV [v2|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: [v0|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.checkForComodification(ArrayList.java:1212) [bci: 14]
at java.util.ArrayList$SubList$1.next(ArrayList.java:1114) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: i151 
=== Usages ===
=== Predecessor ===
v111 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i151  <|@  <|@
f <@~|@floating>@ <|@
tid v161 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i151 v74 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i151 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList$1.cursor
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1115) [bci: 5]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v161 
=== Succesors ===
next: i152 
=== Usages ===
v9 i15 i20 v77 
=== Predecessor ===
v108 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v161 #next: i152  <|@  <|@
f <@~|@floating>@ <|@
tid v162 <|@
result [v1|DWORD[.] * 8 + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a147 
=== Succesors ===
=== Usages ===
i152 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a147  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i152 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList.size
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1116) [bci: 14]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v162 
=== Succesors ===
next: v115 
=== Usages ===
v9 
=== Predecessor ===
i151 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v162 #next: v115  <|@  <|@
f <@~|@floating>@ <|@
tid v9 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1116) [bci: 17]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i151 
y: i152 
=== Succesors ===
=== Usages ===
v115 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i151 y: i152  <|@  <|@
f <@*|@fixed>@ <|@
tid v115 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1116) [bci: 17]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v9 
=== Succesors ===
trueSuccessor: v112 
falseSuccessor: v114 
=== Usages ===
=== Predecessor ===
i152 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v9 #trueSuccessor: v112 #falseSuccessor: v114  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v4|DWORD, y: [v1|DWORD[.] * 8 + 24]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1116) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: a153 
=== Usages ===
=== Predecessor ===
v115 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a153  <|@  <|@
f <@~|@floating>@ <|@
tid v163 <|@
result [v2|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a148 
=== Succesors ===
=== Usages ===
a153 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a148  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a153 <|@
result v5|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList.elementData
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1118) [bci: 35]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v163 
=== Succesors ===
next: i154 
=== Usages ===
a64 v165 
=== Predecessor ===
v112 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v163 #next: i154  <|@  <|@
f <@~|@floating>@ <|@
tid v165 <|@
result [v5|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a153 
=== Succesors ===
=== Usages ===
i154 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a153  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i154 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1119) [bci: 46]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v165 
=== Succesors ===
next: i155 
=== Usages ===
v17 v79 
=== Predecessor ===
a153 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v165 #next: i155  <|@  <|@
f <@~|@floating>@ <|@
tid v164 <|@
result [v0|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i155 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i155 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList$1.val$offset
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1119) [bci: 40]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v164 
=== Succesors ===
next: v123 
=== Usages ===
i15 
=== Predecessor ===
i154 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v164 #next: v123  <|@  <|@
f <@~|@floating>@ <|@
tid i15 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1119) [bci: 44]
stamp: i32
=== Inputs ===
x: i151 
y: i155 
=== Succesors ===
=== Usages ===
v17 v167 v79 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i151 y: i155  <|@  <|@
f <@~|@floating>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1119) [bci: 47]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i15 
y: i154 
=== Succesors ===
=== Usages ===
v123 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i15 y: i154  <|@  <|@
f <@*|@fixed>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1119) [bci: 47]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v17 
=== Succesors ===
trueSuccessor: v120 
falseSuccessor: v122 
=== Usages ===
=== Predecessor ===
i155 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v17 #trueSuccessor: v120 #falseSuccessor: v122  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[.] = MOV [v2|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList$SubList$1.next(ArrayList.java:1114) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v6|DWORD = MOV [v5|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = ADD (x: v4|DWORD, ~y: [v0|QWORD[.] + 28]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v6|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1119) [bci: 47]
stamp: void
=== Inputs ===
=== Succesors ===
next: v127 
=== Usages ===
=== Predecessor ===
v123 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v127  <|@  <|@
f <@~|@floating>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1122) [bci: 77]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i15 
y: i154 
=== Succesors ===
=== Usages ===
v127 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i15 y: i154  <|@  <|@
f <@*|@fixed>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1122) [bci: 77]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v79 
=== Succesors ===
trueSuccessor: v124 
falseSuccessor: v126 
=== Usages ===
=== Predecessor ===
v120 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v79 #trueSuccessor: v124 #falseSuccessor: v126  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v6|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1122) [bci: 77]
stamp: void
=== Inputs ===
=== Succesors ===
next: v74 
=== Usages ===
a156 
=== Predecessor ===
v127 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v74  <|@  <|@
f <@~|@floating>@ <|@
tid i19 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1121) [bci: 60]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i20 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i20 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1121) [bci: 61]
stamp: i32
=== Inputs ===
x: i151 
y: i19 
=== Succesors ===
=== Usages ===
v74 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i151 y: i19  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ArrayList$SubList$1.cursor
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1121) [bci: 62]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v161 
value: i20 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v77 
=== Usages ===
=== Predecessor ===
v124 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v161 value: i20 stateAfter: - lastLocationAccess: - #next: v77  <|@  <|@
f <@~|@floating>@ <|@
tid v166 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v77 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ArrayList$SubList$1.lastRet
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1122) [bci: 73]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v166 
value: i151 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a156 
=== Usages ===
=== Predecessor ===
v74 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v166 value: i151 stateAfter: - lastLocationAccess: - #next: a156  <|@  <|@
f <@~|@floating>@ <|@
tid a64 <|@
result v9|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1118) [bci: 35]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a153 
=== Succesors ===
=== Usages ===
v167 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a153  <|@  <|@
f <@~|@floating>@ <|@
tid v167 <|@
result [v9|QWORD[.] + v7|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a64 
index: i15 
=== Succesors ===
=== Usages ===
a156 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a64 index: i15  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a156 <|@
result v10|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1122) [bci: 77]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v124 
address: v167 
=== Succesors ===
next: v28 
=== Usages ===
a88 
=== Predecessor ===
v77 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v124 address: v167 #next: v28  <|@  <|@
f <@~|@floating>@ <|@
tid a88 <|@
result v11|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1122) [bci: 77]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a156 
=== Succesors ===
=== Usages ===
v28 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a156  <|@  <|@
f <@*|@fixed>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1122) [bci: 78]
stamp: void
=== Inputs ===
result: a88 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a156 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a88 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = INC v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@491426eb encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[.] = MOV [v9|QWORD[.] + v7|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@491426eb encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1122) [bci: 77]
stamp: void
=== Inputs ===
=== Succesors ===
next: v145 
=== Usages ===
=== Predecessor ===
v127 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v145  <|@  <|@
f <@~|@floating>@ <|@
tid i146 <|@
result int[-20507|0xffffffffffffafe5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -20507
stableDimension: 0
stamp: i32 [-20507] ⇊00000000ffffafe5 ⇈00000000ffffafe5
stampKind: i32
value: int[-20507|0xffffffffffffafe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i132 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v145 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v128 
=== Predecessor ===
v126 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-20507|0xffffffffffffafe5]] destination: B5 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1119) [bci: 47]
stamp: void
=== Inputs ===
=== Succesors ===
next: v143 
=== Usages ===
=== Predecessor ===
v123 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v143  <|@  <|@
f <@~|@floating>@ <|@
tid i144 <|@
result int[-18707|0xffffffffffffb6ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -18707
stableDimension: 0
stamp: i32 [-18707] ⇊00000000ffffb6ed ⇈00000000ffffb6ed
stampKind: i32
value: int[-18707|0xffffffffffffb6ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i132 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v128 
=== Predecessor ===
v122 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-18707|0xffffffffffffb6ed]] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1116) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v141 
=== Usages ===
=== Predecessor ===
v115 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v141  <|@  <|@
f <@~|@floating>@ <|@
tid i142 <|@
result int[-15635|0xffffffffffffc2ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -15635
stableDimension: 0
stamp: i32 [-15635] ⇊00000000ffffc2ed ⇈00000000ffffc2ed
stampKind: i32
value: int[-15635|0xffffffffffffc2ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i132 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v128 
=== Predecessor ===
v114 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-15635|0xffffffffffffc2ed]] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.checkForComodification(ArrayList.java:1212) [bci: 14]
at java.util.ArrayList$SubList$1.next(ArrayList.java:1114) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v139 
=== Usages ===
=== Predecessor ===
v111 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v139  <|@  <|@
f <@~|@floating>@ <|@
tid i140 <|@
result int[-14099|0xffffffffffffc8ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -14099
stableDimension: 0
stamp: i32 [-14099] ⇊00000000ffffc8ed ⇈00000000ffffc8ed
stampKind: i32
value: int[-14099|0xffffffffffffc8ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i132 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v128 
=== Predecessor ===
v110 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-14099|0xffffffffffffc8ed]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" "B6" "B5" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i132 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-20507 - -11275] ⇊00000000ffff80e5 ⇈00000000fffffffd
valueDescription: i32
=== Inputs ===
merge: v128 
values: i140 i142 i144 i146 
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v128 values: i140 i142 i144 i146  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v139 v141 v143 v145 
=== Succesors ===
next: v134 
=== Usages ===
i132 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v139 v141 v143 v145 #next: v134  <|@  <|@
f <@~|@floating>@ <|@
tid a131 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2 
actionAndReason: i132 
speculation: a131 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v128 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2 actionAndReason: i132 speculation: a131  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v12|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList$SubList$1.next(ArrayList.java:1114) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@301e229 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[.] = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList$SubList$1.next(ArrayList.java:1114) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v2|DWORD[.] = MOV [v1|DWORD[.] * 8 + 32] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList$SubList$1.next(ArrayList.java:1114) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v3|DWORD = MOV [v2|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: [v0|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v4|DWORD, y: [v1|DWORD[.] * 8 + 24]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[.] = MOV [v2|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList$SubList$1.next(ArrayList.java:1114) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v6|DWORD = MOV [v5|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = ADD (x: v4|DWORD, ~y: [v0|QWORD[.] + 28]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v6|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v6|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = INC v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@491426eb encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[.] = MOV [v9|QWORD[.] + v7|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@491426eb encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-14099|0xffffffffffffc8ed]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" "B6" "B5" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v12|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList$SubList$1.next(ArrayList.java:1114) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-18707|0xffffffffffffb6ed]] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-15635|0xffffffffffffc2ed]] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-20507|0xffffffffffffafe5]] destination: B5 -> B9 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #10         // checkForComodification:()void
     4: aload_0       
     5: getfield      #4          // cursor:int
     8: istore_1      
     9: iload_1       
    10: aload_0       
    11: getfield      #0          // this$1:java.util.ArrayList$SubList
    14: getfield      #9          // java.util.ArrayList$SubList.size:int
    17: if_icmplt     28
    20: new           #12         // java.util.NoSuchElementException
    23: dup           
    24: invokespecial #11         // java.util.NoSuchElementException.<init>:()void
    27: athrow        
    28: aload_0       
    29: getfield      #0          // this$1:java.util.ArrayList$SubList
    32: getfield      #6          // java.util.ArrayList$SubList.this$0:java.util.ArrayList
    35: getfield      #12         // java.util.ArrayList.elementData:java.lang.Object[]
    38: astore_2      
    39: aload_0       
    40: getfield      #2          // val$offset:int
    43: iload_1       
    44: iadd          
    45: aload_2       
    46: arraylength   
    47: if_icmplt     58
    50: new           #15         // java.util.ConcurrentModificationException
    53: dup           
    54: invokespecial #13         // java.util.ConcurrentModificationException.<init>:()void
    57: athrow        
    58: aload_0       
    59: iload_1       
    60: iconst_1      
    61: iadd          
    62: putfield      #4          // cursor:int
    65: aload_2       
    66: aload_0       
    67: getfield      #2          // val$offset:int
    70: aload_0       
    71: iload_1       
    72: dup_x1        
    73: putfield      #5          // lastRet:int
    76: iadd          
    77: aaload        
    78: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@301e229 slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction rax|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rax:0, rsi:0]
live-base-pointers: []
java.util.ArrayList$SubList$1.next(ArrayList.java:1114) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[.] = MOV [rax|DWORD[.] * 8 + 32] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ st <@st|@reference-map: [rax:0, rsi:0, r10:0]
live-base-pointers: []
java.util.ArrayList$SubList$1.next(ArrayList.java:1114) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   14  <|@ instruction CMP (x: r11|DWORD, y: [rsi|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr   16  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction r11|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   22  <|@ instruction CMP (x: r11|DWORD, y: [rax|DWORD[.] * 8 + 24]) size: DWORD <|@ <|@
      nr   24  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ instruction rax|DWORD[.] = MOV [r10|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   30  <|@ st <@st|@reference-map: [rax:0, rsi:0]
live-base-pointers: []
java.util.ArrayList$SubList$1.next(ArrayList.java:1114) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r10|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction r8|DWORD = ADD (x: r11|DWORD, ~y: [rsi|QWORD[.] + 28]) size: DWORD <|@ <|@
      nr   34  <|@ instruction CMP (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   36  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   40  <|@ instruction CMP (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   46  <|@ instruction r10|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr   48  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr   50  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r11|DWORD) size: DWORD <|@ <|@
      nr   52  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@491426eb encoding: base: 0 shift: 3 <|@ <|@
      nr   54  <|@ instruction rax|DWORD[.] = MOV [rax|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   56  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@491426eb encoding: base: 0 shift: 3 <|@ <|@
      nr   60  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-14099|0xffffffffffffc8ed] // MoveResolver resolve mapping <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" "B6" "B5" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   80  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr   82  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   84  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.ArrayList$SubList$1.next(ArrayList.java:1114) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-18707|0xffffffffffffb6ed] // MoveResolver resolve mapping <|@ <|@
      nr   68  <|@ instruction JUMP ~[] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-15635|0xffffffffffffc2ed] // MoveResolver resolve mapping <|@ <|@
      nr   72  <|@ instruction JUMP ~[] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-20507|0xffffffffffffafe5] // MoveResolver resolve mapping <|@ <|@
      nr   76  <|@ instruction JUMP ~[] destination: B5 -> B9 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #10         // checkForComodification:()void
     4: aload_0       
     5: getfield      #4          // cursor:int
     8: istore_1      
     9: iload_1       
    10: aload_0       
    11: getfield      #0          // this$1:java.util.ArrayList$SubList
    14: getfield      #9          // java.util.ArrayList$SubList.size:int
    17: if_icmplt     28
    20: new           #12         // java.util.NoSuchElementException
    23: dup           
    24: invokespecial #11         // java.util.NoSuchElementException.<init>:()void
    27: athrow        
    28: aload_0       
    29: getfield      #0          // this$1:java.util.ArrayList$SubList
    32: getfield      #6          // java.util.ArrayList$SubList.this$0:java.util.ArrayList
    35: getfield      #12         // java.util.ArrayList.elementData:java.lang.Object[]
    38: astore_2      
    39: aload_0       
    40: getfield      #2          // val$offset:int
    43: iload_1       
    44: iadd          
    45: aload_2       
    46: arraylength   
    47: if_icmplt     58
    50: new           #15         // java.util.ConcurrentModificationException
    53: dup           
    54: invokespecial #13         // java.util.ConcurrentModificationException.<init>:()void
    57: athrow        
    58: aload_0       
    59: iload_1       
    60: iconst_1      
    61: iadd          
    62: putfield      #4          // cursor:int
    65: aload_2       
    66: aload_0       
    67: getfield      #2          // val$offset:int
    70: aload_0       
    71: iload_1       
    72: dup_x1        
    73: putfield      #5          // lastRet:int
    76: iadd          
    77: aaload        
    78: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@301e229 slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction rax|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rax:0, rsi:0]
live-base-pointers: []
java.util.ArrayList$SubList$1.next(ArrayList.java:1114) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[.] = MOV [rax|DWORD[.] * 8 + 32] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ st <@st|@reference-map: [rax:0, rsi:0, r10:0]
live-base-pointers: []
java.util.ArrayList$SubList$1.next(ArrayList.java:1114) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   14  <|@ instruction CMP (x: r11|DWORD, y: [rsi|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr   16  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction r11|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   22  <|@ instruction CMP (x: r11|DWORD, y: [rax|DWORD[.] * 8 + 24]) size: DWORD <|@ <|@
      nr   24  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ instruction rax|DWORD[.] = MOV [r10|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   30  <|@ st <@st|@reference-map: [rax:0, rsi:0]
live-base-pointers: []
java.util.ArrayList$SubList$1.next(ArrayList.java:1114) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r10|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction r8|DWORD = ADD (x: r11|DWORD, ~y: [rsi|QWORD[.] + 28]) size: DWORD <|@ <|@
      nr   34  <|@ instruction CMP (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   36  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   40  <|@ instruction CMP (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   46  <|@ instruction r10|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr   48  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr   50  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r11|DWORD) size: DWORD <|@ <|@
      nr   52  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@491426eb encoding: base: 0 shift: 3 <|@ <|@
      nr   54  <|@ instruction rax|DWORD[.] = MOV [rax|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   56  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@491426eb encoding: base: 0 shift: 3 <|@ <|@
      nr   60  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-14099|0xffffffffffffc8ed] // MoveResolver resolve mapping <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" "B6" "B5" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   80  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr   82  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   84  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.ArrayList$SubList$1.next(ArrayList.java:1114) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-18707|0xffffffffffffb6ed] // MoveResolver resolve mapping <|@ <|@
      nr   68  <|@ instruction JUMP ~[] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-15635|0xffffffffffffc2ed] // MoveResolver resolve mapping <|@ <|@
      nr   72  <|@ instruction JUMP ~[] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-20507|0xffffffffffffafe5] // MoveResolver resolve mapping <|@ <|@
      nr   76  <|@ instruction JUMP ~[] destination: B5 -> B9 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #10         // checkForComodification:()void
     4: aload_0       
     5: getfield      #4          // cursor:int
     8: istore_1      
     9: iload_1       
    10: aload_0       
    11: getfield      #0          // this$1:java.util.ArrayList$SubList
    14: getfield      #9          // java.util.ArrayList$SubList.size:int
    17: if_icmplt     28
    20: new           #12         // java.util.NoSuchElementException
    23: dup           
    24: invokespecial #11         // java.util.NoSuchElementException.<init>:()void
    27: athrow        
    28: aload_0       
    29: getfield      #0          // this$1:java.util.ArrayList$SubList
    32: getfield      #6          // java.util.ArrayList$SubList.this$0:java.util.ArrayList
    35: getfield      #12         // java.util.ArrayList.elementData:java.lang.Object[]
    38: astore_2      
    39: aload_0       
    40: getfield      #2          // val$offset:int
    43: iload_1       
    44: iadd          
    45: aload_2       
    46: arraylength   
    47: if_icmplt     58
    50: new           #15         // java.util.ConcurrentModificationException
    53: dup           
    54: invokespecial #13         // java.util.ConcurrentModificationException.<init>:()void
    57: athrow        
    58: aload_0       
    59: iload_1       
    60: iconst_1      
    61: iadd          
    62: putfield      #4          // cursor:int
    65: aload_2       
    66: aload_0       
    67: getfield      #2          // val$offset:int
    70: aload_0       
    71: iload_1       
    72: dup_x1        
    73: putfield      #5          // lastRet:int
    76: iadd          
    77: aaload        
    78: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c24108b4620448b14c520000000468b1cd50c000000443b5e140f8569000000448b5e0c443b1cc5180000000f8d79000000428b04d514000000448b14c50c000000458bc34403461c453bd00f8e51000000453bd00f8658000000458bd341ffc24489560c44895e1048c1e003428b44801048c1e003488b6c24104883c418850500000000c5f877c341baedc8ffff4589979c0200004d89a7a8020000e8000000009041baedb6ffffebe441baedc2ffffebdc41bae5afffffebd4e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@301e229 slotKind: QWORD  <||@
  Comment 48 8 rax|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD  <||@
  Comment 51 10 r10|DWORD[.] = MOV [rax|DWORD[.] * 8 + 32] size: DWORD state [bci:0]  <||@
  Comment 51 [rax:0, rsi:0]at java.util.ArrayList$SubList$1.next(ArrayList.java:1114) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 51 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 59 12 r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 59 [rax:0, rsi:0, r10:0]at java.util.ArrayList$SubList$1.next(ArrayList.java:1114) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 59 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 67 14 CMP (x: r11|DWORD, y: [rsi|QWORD[.] + 20]) size: DWORD  <||@
  Comment 71 16 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B8  <||@
  Comment 77 block B1 null  <||@
  Comment 77 18 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 77 20 r11|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 81 22 CMP (x: r11|DWORD, y: [rax|DWORD[.] * 8 + 24]) size: DWORD  <||@
  Comment 89 24 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B7  <||@
  Comment 95 block B2 null  <||@
  Comment 95 26 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 95 28 rax|DWORD[.] = MOV [r10|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 103 30 r10|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 103 [rax:0, rsi:0]at java.util.ArrayList$SubList$1.next(ArrayList.java:1114) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 103 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 111 32 r8|DWORD = ADD (x: r11|DWORD, ~y: [rsi|QWORD[.] + 28]) size: DWORD  <||@
  Comment 118 34 CMP (x: r10|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 121 36 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B6  <||@
  Comment 127 block B3 null  <||@
  Comment 127 38 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 127 40 CMP (x: r10|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 130 42 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B5  <||@
  Comment 136 block B4 null  <||@
  Comment 136 44 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 136 46 r10|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 142 48 MOV (x: [rsi|QWORD[.] + 12], y: r10|DWORD) size: DWORD  <||@
  Comment 146 50 MOV (x: [rsi|QWORD[.] + 16], y: r11|DWORD) size: DWORD  <||@
  Comment 150 52 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@491426eb encoding: base: 0 shift: 3  <||@
  Comment 154 54 rax|DWORD[.] = MOV [rax|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD  <||@
  Comment 159 56 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@491426eb encoding: base: 0 shift: 3  <||@
  Comment 163 60 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 172 12  <||@
  Comment 182 block B8 null  <||@
  Comment 182 62 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 182 -1 r10|DWORD = MOVE input: int[-14099|0xffffffffffffc8ed]  <||@
  Comment 188 64 JUMP ~[] destination: B8 -> B9  <||@
  Comment 188 block B9 null  <||@
  Comment 188 78 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 188 80 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 195 82 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 202 84 DEOPT info [bci:0]  <||@
  Comment 202 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 207 [rsi:0]at java.util.ArrayList$SubList$1.next(ArrayList.java:1114) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 208 block B6 null  <||@
  Comment 208 66 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 208 -1 r10|DWORD = MOVE input: int[-18707|0xffffffffffffb6ed]  <||@
  Comment 214 68 JUMP ~[] destination: B6 -> B9  <||@
  Comment 216 block B7 null  <||@
  Comment 216 70 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 216 -1 r10|DWORD = MOVE input: int[-15635|0xffffffffffffc2ed]  <||@
  Comment 222 72 JUMP ~[] destination: B7 -> B9  <||@
  Comment 224 block B5 null  <||@
  Comment 224 74 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 224 -1 r10|DWORD = MOVE input: int[-20507|0xffffffffffffafe5]  <||@
  Comment 230 76 JUMP ~[] destination: B5 -> B9  <||@
  Comment 232 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 232 4  <||@
  Comment 238 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 238 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-9201[java.util.ArrayList$SubList$1.next()]"
  method "HotSpotCompilation-9201[java.util.ArrayList$SubList$1.next()]"
  date 1527005199968
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 1079727e0 448b560849c1e203493bc20f856f36e9fe900f1f80000000000f1f800000000089842400c0feff4883ec1848896c24108b4620448b14c520000000468b1cd50c000000443b5e140f8569000000448b5e0c443b1cc5180000000f8d79000000428b04d514000000448b14c50c000000458bc34403461c453bd00f8e51000000453bd00f8658000000458bd341ffc24489560c44895e1048c1e003428b44801048c1e003488b6c24104883c418850574c7f1fcc5f877c341baedc8ffff4589979c0200004d89a7a8020000e84f4de9fe9041baedb6ffffebe441baedc2ffffebdc41bae5afffffebd4e8537d2dff90e82d4ce9fe90f4f4f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@301e229 slotKind: QWORD  <||@
  Comment 48 8 rax|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD  <||@
  Comment 51 10 r10|DWORD[.] = MOV [rax|DWORD[.] * 8 + 32] size: DWORD state [bci:0]  <||@
  Comment 51 [rax:0, rsi:0]at java.util.ArrayList$SubList$1.next(ArrayList.java:1114) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 51 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 59 12 r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 59 [rax:0, rsi:0, r10:0]at java.util.ArrayList$SubList$1.next(ArrayList.java:1114) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 59 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 67 14 CMP (x: r11|DWORD, y: [rsi|QWORD[.] + 20]) size: DWORD  <||@
  Comment 71 16 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B8  <||@
  Comment 77 block B1 null  <||@
  Comment 77 18 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 77 20 r11|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 81 22 CMP (x: r11|DWORD, y: [rax|DWORD[.] * 8 + 24]) size: DWORD  <||@
  Comment 89 24 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B7  <||@
  Comment 95 block B2 null  <||@
  Comment 95 26 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 95 28 rax|DWORD[.] = MOV [r10|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 103 30 r10|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 103 [rax:0, rsi:0]at java.util.ArrayList$SubList$1.next(ArrayList.java:1114) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 103 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 111 32 r8|DWORD = ADD (x: r11|DWORD, ~y: [rsi|QWORD[.] + 28]) size: DWORD  <||@
  Comment 118 34 CMP (x: r10|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 121 36 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B6  <||@
  Comment 127 block B3 null  <||@
  Comment 127 38 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 127 40 CMP (x: r10|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 130 42 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B5  <||@
  Comment 136 block B4 null  <||@
  Comment 136 44 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 136 46 r10|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 142 48 MOV (x: [rsi|QWORD[.] + 12], y: r10|DWORD) size: DWORD  <||@
  Comment 146 50 MOV (x: [rsi|QWORD[.] + 16], y: r11|DWORD) size: DWORD  <||@
  Comment 150 52 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@491426eb encoding: base: 0 shift: 3  <||@
  Comment 154 54 rax|DWORD[.] = MOV [rax|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD  <||@
  Comment 159 56 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@491426eb encoding: base: 0 shift: 3  <||@
  Comment 163 60 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 172 12  <||@
  Comment 182 block B8 null  <||@
  Comment 182 62 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 182 -1 r10|DWORD = MOVE input: int[-14099|0xffffffffffffc8ed]  <||@
  Comment 188 64 JUMP ~[] destination: B8 -> B9  <||@
  Comment 188 block B9 null  <||@
  Comment 188 78 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 188 80 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 195 82 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 202 84 DEOPT info [bci:0]  <||@
  Comment 202 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 207 [rsi:0]at java.util.ArrayList$SubList$1.next(ArrayList.java:1114) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 208 block B6 null  <||@
  Comment 208 66 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 208 -1 r10|DWORD = MOVE input: int[-18707|0xffffffffffffb6ed]  <||@
  Comment 214 68 JUMP ~[] destination: B6 -> B9  <||@
  Comment 216 block B7 null  <||@
  Comment 216 70 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 216 -1 r10|DWORD = MOVE input: int[-15635|0xffffffffffffc2ed]  <||@
  Comment 222 72 JUMP ~[] destination: B7 -> B9  <||@
  Comment 224 block B5 null  <||@
  Comment 224 74 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 224 -1 r10|DWORD = MOVE input: int[-20507|0xffffffffffffafe5]  <||@
  Comment 230 76 JUMP ~[] destination: B5 -> B9  <||@
  Comment 232 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 232 4  <||@
  Comment 238 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 238 5  <||@
  HexCodeFile>>> <|@
end_nmethod
