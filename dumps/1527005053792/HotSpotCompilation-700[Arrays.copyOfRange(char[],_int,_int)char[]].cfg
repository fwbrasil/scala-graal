begin_compilation
  name " HotSpotCompilation-700[java.util.Arrays.copyOfRange(char[], int, int)]"
  method "HotSpotCompilation-700[java.util.Arrays.copyOfRange(char[], int, int)]"
  date 1527005147193
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v87 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v87  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a# [C
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 j182 v356 v338 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 i5 i11 v58 j183 v41 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 i5 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?4 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<Arrays.copyOfRange(char[], int, int)>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Arrays.java
sourceLine: 3661
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 i3 - - 
=== Succesors ===
=== Usages ===
v107 a142 v356 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 i3 - -  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.util.Arrays.copyOfRange(Arrays.java:3661) [bci: 2]
stamp: i32
=== Inputs ===
x: i3 
y: i2 
=== Succesors ===
=== Usages ===
v7 j194 i82 v18 i63 v169 i118 v127 a142 v262 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i3 y: i2  <|@  <|@
f <@~|@floating>@ <|@
tid i6 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Arrays.copyOfRange(Arrays.java:3662) [bci: 5]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v7 v52 a142 v64 v41 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.Arrays.copyOfRange(Arrays.java:3662) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i5 
y: i6 
=== Succesors ===
=== Usages ===
v87 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i5 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.copyOfRange(Arrays.java:3662) [bci: 5]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v7 
=== Succesors ===
trueSuccessor: v86 
falseSuccessor: v84 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v7 #trueSuccessor: v86 #falseSuccessor: v84  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.copyOfRange(Arrays.java:3662) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v102 
=== Usages ===
=== Predecessor ===
v87 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v102  <|@  <|@
f <@~|@floating>@ <|@
tid i103 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -7187
stableDimension: 0
stamp: i32 [-7187] ⇊00000000ffffe3ed ⇈00000000ffffe3ed
stampKind: i32
value: int[-7187|0xffffffffffffe3ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i105 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v101 
=== Predecessor ===
v86 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.copyOfRange(Arrays.java:3662) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v356 
=== Usages ===
=== Predecessor ===
v87 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v356  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v356 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?4 
object: a1 
=== Succesors ===
next: v44 
=== Usages ===
=== Predecessor ===
v84 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?4 object: a1 #next: v44  <|@  <|@
f <@~|@floating>@ <|@
tid i111 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -17761
stableDimension: 0
stamp: i32 [-17761] ⇊00000000ffffba9f ⇈00000000ffffba9f
stampKind: i32
value: int[-17761|0xffffffffffffba9f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i105 i105 i105 i105 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3665) [bci: 57]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i6 
=== Succesors ===
=== Usages ===
v44 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3665) [bci: 57]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v41 
=== Succesors ===
trueSuccessor: v43 
falseSuccessor: v42 
=== Usages ===
=== Predecessor ===
v356 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v41 #trueSuccessor: v43 #falseSuccessor: v42  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3665) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v110 
=== Usages ===
=== Predecessor ===
v44 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v110  <|@  <|@
f <@*|@fixed>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v101 
=== Predecessor ===
v43 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3665) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: i337 
=== Usages ===
=== Predecessor ===
v44 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i337  <|@  <|@
f <@~|@floating>@ <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i337 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i337 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.Arrays.copyOfRange(Arrays.java:3665) [bci: 50]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v338 
=== Succesors ===
next: v56 
=== Usages ===
i11 i57 
=== Predecessor ===
v42 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v338 #next: v56  <|@  <|@
f <@~|@floating>@ <|@
tid i11 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.util.Arrays.copyOfRange(Arrays.java:3665) [bci: 52]
stamp: i32
=== Inputs ===
x: i337 
y: i2 
=== Succesors ===
=== Usages ===
i82 v18 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i337 y: i2  <|@  <|@
f <@~|@floating>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at java.util.Arrays.copyOfRange(Arrays.java:3666) [bci: 54]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i5 
y: i11 
=== Succesors ===
=== Usages ===
i82 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i5 y: i11  <|@  <|@
f <@~|@floating>@ <|@
tid i82 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v18 
trueValue: i5 
falseValue: i11 
=== Succesors ===
=== Usages ===
i63 i57 j191 v52 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v18 trueValue: i5 falseValue: i11  <|@  <|@
f <@~|@floating>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 41]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3665) [bci: 57]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i82 
y: i6 
=== Succesors ===
=== Usages ===
v56 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i82 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:259) [bci: 52]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3665) [bci: 57]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v52 
=== Succesors ===
trueSuccessor: v55 
falseSuccessor: v53 
=== Usages ===
=== Predecessor ===
i337 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v52 #trueSuccessor: v55 #falseSuccessor: v53  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3665) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v114 
=== Usages ===
=== Predecessor ===
v56 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v114  <|@  <|@
f <@*|@fixed>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3665) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v101 
=== Predecessor ===
v55 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:259) [bci: 55]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3665) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v62 
=== Usages ===
=== Predecessor ===
v56 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v62  <|@  <|@
f <@~|@floating>@ <|@
tid i57 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 65]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3665) [bci: 57]
stamp: i32
=== Inputs ===
x: i337 
y: i82 
=== Succesors ===
=== Usages ===
v58 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i337 y: i82  <|@  <|@
f <@~|@floating>@ <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3665) [bci: 57]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i57 
y: i2 
=== Succesors ===
=== Usages ===
v62 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i57 y: i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 77]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3665) [bci: 57]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v58 
=== Succesors ===
trueSuccessor: v61 
falseSuccessor: v59 
=== Usages ===
=== Predecessor ===
v53 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v58 #trueSuccessor: v61 #falseSuccessor: v59  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576803513614379298
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3665) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v113 
=== Usages ===
=== Predecessor ===
v62 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v113  <|@  <|@
f <@*|@fixed>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3665) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v101 
=== Predecessor ===
v61 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B11" 
    xhandlers
    flags 
    probability 4606914895974952345
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 80]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3665) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v68 
=== Usages ===
=== Predecessor ===
v62 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v68  <|@  <|@
f <@~|@floating>@ <|@
tid i63 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3665) [bci: 57]
stamp: i32
=== Inputs ===
x: i5 
y: i82 
=== Succesors ===
=== Usages ===
v64 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i5 y: i82  <|@  <|@
f <@~|@floating>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3665) [bci: 57]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i63 
y: i6 
=== Succesors ===
=== Usages ===
v68 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i63 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3665) [bci: 57]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v64 
=== Succesors ===
trueSuccessor: v67 
falseSuccessor: v65 
=== Usages ===
=== Predecessor ===
v59 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v64 #trueSuccessor: v67 #falseSuccessor: v65  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576747014696046040
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3665) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v112 
=== Usages ===
=== Predecessor ===
v68 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v112  <|@  <|@
f <@*|@fixed>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3665) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v101 
=== Predecessor ===
v67 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B9" "B7" "B5" 
    successors 
    xhandlers
    flags 
    probability 4585839534465583581
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i105 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-17761 - -7187] ⇊00000000ffff8285
valueDescription: i32
=== Inputs ===
merge: v101 
values: i103 i111 i111 i111 i111 
=== Succesors ===
=== Usages ===
v107 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v101 values: i103 i111 i111 i111 i111  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v102 v110 v112 v113 v114 
=== Succesors ===
next: v107 
=== Usages ===
i105 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v102 v110 v112 v113 v114 #next: v107  <|@  <|@
f <@~|@floating>@ <|@
tid a104 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v107 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?4 
actionAndReason: i105 
speculation: a104 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v101 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?4 actionAndReason: i105 speculation: a104  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" "B15" 
    xhandlers
    flags 
    probability 4606827499210655586
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3665) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: j121 
=== Usages ===
=== Predecessor ===
v68 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j121  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j121 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Arrays.copyOfRange(Arrays.java:3664) [bci: 40]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j166 
=== Usages ===
v340 v341 
=== Predecessor ===
v65 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j166  <|@  <|@
f <@~|@floating>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j121 
index: - 
=== Succesors ===
=== Usages ===
j166 v168 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j121 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j166 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Arrays.copyOfRange(Arrays.java:3664) [bci: 40]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v340 
=== Succesors ===
next: j167 
=== Usages ===
j125 v342 v343 a141 v348 v344 v345 v346 v347 
=== Predecessor ===
j121 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v340 #next: j167  <|@  <|@
f <@~|@floating>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j121 
index: - 
=== Succesors ===
=== Usages ===
j167 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j121 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j167 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Arrays.copyOfRange(Arrays.java:3664) [bci: 40]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v341 
=== Succesors ===
next: v130 
=== Usages ===
v131 
=== Predecessor ===
j166 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v341 #next: v130  <|@  <|@
f <@~|@floating>@ <|@
tid i117 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Arrays.copyOfRange(Arrays.java:3664) [bci: 40]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i118 v262 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i126 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Arrays.copyOfRange(Arrays.java:3664) [bci: 40]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v127 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Arrays.copyOfRange(Arrays.java:3664) [bci: 40]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i5 
y: i126 
=== Succesors ===
=== Usages ===
v130 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i5 y: i126  <|@  <|@
f <@*|@fixed>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Arrays.copyOfRange(Arrays.java:3664) [bci: 40]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v127 
=== Succesors ===
trueSuccessor: v129 
falseSuccessor: v128 
=== Usages ===
=== Predecessor ===
j167 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v127 #trueSuccessor: v129 #falseSuccessor: v128  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4605962271244117669
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Arrays.copyOfRange(Arrays.java:3664) [bci: 40]
stamp: void
=== Inputs ===
=== Succesors ===
next: v137 
=== Usages ===
=== Predecessor ===
v130 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v137  <|@  <|@
f <@~|@floating>@ <|@
tid i118 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Arrays.copyOfRange(Arrays.java:3664) [bci: 40]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i5 
y: i117 
=== Succesors ===
=== Usages ===
i150 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i5 y: i117  <|@  <|@
f <@~|@floating>@ <|@
tid i149 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Arrays.copyOfRange(Arrays.java:3664) [bci: 40]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i150 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i150 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Arrays.copyOfRange(Arrays.java:3664) [bci: 40]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i118 
y: i149 
=== Succesors ===
=== Usages ===
i120 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i118 y: i149  <|@  <|@
f <@~|@floating>@ <|@
tid i119 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Arrays.copyOfRange(Arrays.java:3664) [bci: 40]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i120 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i120 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Arrays.copyOfRange(Arrays.java:3664) [bci: 40]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i150 
y: i119 
=== Succesors ===
=== Usages ===
j124 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i150 y: i119  <|@  <|@
f <@~|@floating>@ <|@
tid j124 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Arrays.copyOfRange(Arrays.java:3664) [bci: 40]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i120 
=== Succesors ===
=== Usages ===
j125 v344 v345 v346 v347 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i120  <|@  <|@
f <@~|@floating>@ <|@
tid j125 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Arrays.copyOfRange(Arrays.java:3664) [bci: 40]
stamp: i64
=== Inputs ===
x: j124 
y: j166 
=== Succesors ===
=== Usages ===
v131 v168 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j124 y: j166  <|@  <|@
f <@~|@floating>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Arrays.copyOfRange(Arrays.java:3664) [bci: 40]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j167 
y: j125 
=== Succesors ===
=== Usages ===
v137 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j167 y: j125  <|@  <|@
f <@*|@fixed>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Arrays.copyOfRange(Arrays.java:3664) [bci: 40]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v131 
=== Succesors ===
trueSuccessor: v136 
falseSuccessor: v135 
=== Usages ===
=== Predecessor ===
v129 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v131 #trueSuccessor: v136 #falseSuccessor: v135  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4576137334868311846
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Arrays.copyOfRange(Arrays.java:3664) [bci: 40]
stamp: void
=== Inputs ===
=== Succesors ===
next: v134 
=== Usages ===
=== Predecessor ===
v137 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v134  <|@  <|@
f <@*|@fixed>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Arrays.copyOfRange(Arrays.java:3664) [bci: 40]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v133 
=== Predecessor ===
v136 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605884400727129256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v135 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Arrays.copyOfRange(Arrays.java:3664) [bci: 40]
stamp: void
=== Inputs ===
=== Succesors ===
next: v168 
=== Usages ===
=== Predecessor ===
v137 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v168  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v168 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Arrays.copyOfRange(Arrays.java:3664) [bci: 40]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v340 
value: j125 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v155 
=== Usages ===
=== Predecessor ===
v135 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v340 value: j125 stateAfter: - lastLocationAccess: - #next: v155  <|@  <|@
f <@~|@floating>@ <|@
tid v344 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j124 
index: j166 
=== Succesors ===
=== Usages ===
v155 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j124 index: j166  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Arrays.copyOfRange(Arrays.java:3664) [bci: 40]
stamp: void
=== Inputs ===
address: v344 
=== Succesors ===
next: v158 
=== Usages ===
=== Predecessor ===
v168 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v344 #next: v158  <|@  <|@
f <@~|@floating>@ <|@
tid v345 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j124 
index: j166 
=== Succesors ===
=== Usages ===
v158 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j124 index: j166  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Arrays.copyOfRange(Arrays.java:3664) [bci: 40]
stamp: void
=== Inputs ===
address: v345 
=== Succesors ===
next: v161 
=== Usages ===
=== Predecessor ===
v155 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v345 #next: v161  <|@  <|@
f <@~|@floating>@ <|@
tid v346 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j124 
index: j166 
=== Succesors ===
=== Usages ===
v161 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j124 index: j166  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Arrays.copyOfRange(Arrays.java:3664) [bci: 40]
stamp: void
=== Inputs ===
address: v346 
=== Succesors ===
next: v164 
=== Usages ===
=== Predecessor ===
v158 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v346 #next: v164  <|@  <|@
f <@~|@floating>@ <|@
tid v347 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j124 
index: j166 
=== Succesors ===
=== Usages ===
v164 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j124 index: j166  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Arrays.copyOfRange(Arrays.java:3664) [bci: 40]
stamp: void
=== Inputs ===
address: v347 
=== Succesors ===
next: v169 
=== Usages ===
=== Predecessor ===
v161 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v347 #next: v169  <|@  <|@
f <@~|@floating>@ <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j166 
index: - 
=== Succesors ===
=== Usages ===
v169 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j166 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v169 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Arrays.copyOfRange(Arrays.java:3664) [bci: 40]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v342 
value: i5 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v170 
=== Usages ===
=== Predecessor ===
v164 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v342 value: i5 stateAfter: - lastLocationAccess: - #next: v170  <|@  <|@
f <@~|@floating>@ <|@
tid v343 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j166 
index: - 
=== Succesors ===
=== Usages ===
v170 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j166 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j116 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Arrays.copyOfRange(Arrays.java:3664) [bci: 40]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v170 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Arrays.copyOfRange(Arrays.java:3664) [bci: 40]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v343 
value: j116 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v174 
=== Usages ===
=== Predecessor ===
v169 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v343 value: j116 stateAfter: - lastLocationAccess: - #next: v174  <|@  <|@
f <@~|@floating>@ <|@
tid v348 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j166 
index: - 
=== Succesors ===
=== Usages ===
v174 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j166 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Arrays.copyOfRange(Arrays.java:3664) [bci: 40]
rawvalue: meta{HotSpotType<[C, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[C, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v174 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Arrays.copyOfRange(Arrays.java:3664) [bci: 40]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v348 
value: v193 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v140 
=== Usages ===
=== Predecessor ===
v170 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v348 value: v193 stateAfter: - lastLocationAccess: - #next: v140  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Arrays.copyOfRange(Arrays.java:3664) [bci: 40]
stamp: void
=== Inputs ===
=== Succesors ===
next: a141 
=== Usages ===
=== Predecessor ===
v174 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a141  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a141 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Arrays.copyOfRange(Arrays.java:3664) [bci: 40]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j166 
=== Succesors ===
next: v143 
=== Usages ===
a146 
=== Predecessor ===
v140 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j166 #next: v143  <|@  <|@
f <@*|@fixed>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Arrays.copyOfRange(Arrays.java:3664) [bci: 40]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v144 
=== Predecessor ===
a141 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B16" 
    xhandlers
    flags 
    probability 4591586244395468262
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Arrays.copyOfRange(Arrays.java:3664) [bci: 40]
stamp: void
=== Inputs ===
=== Succesors ===
next: v132 
=== Usages ===
=== Predecessor ===
v130 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v132  <|@  <|@
f <@*|@fixed>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Arrays.copyOfRange(Arrays.java:3664) [bci: 40]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v133 
=== Predecessor ===
v128 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4592209208531375563
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Arrays.copyOfRange(Arrays.java:3664) [bci: 40]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v132 v134 
=== Succesors ===
next: a142 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v132 v134 #next: a142  <|@  <|@
f <@~|@floating>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Arrays.copyOfRange(Arrays.java:3664) [bci: 40]
rawvalue: meta{HotSpotType<[C, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[C, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a142 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a142 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Arrays.copyOfRange(Arrays.java:3664) [bci: 40]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?4 
arguments: v115 i5 i6 
=== Succesors ===
next: v145 
=== Usages ===
a146 
=== Predecessor ===
v133 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?4 arguments: v115 i5 i6 #next: v145  <|@  <|@
f <@*|@fixed>@ <|@
tid v145 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Arrays.copyOfRange(Arrays.java:3664) [bci: 40]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v144 
=== Predecessor ===
a142 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4606827499210655585
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a146 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Arrays.copyOfRange(Arrays.java:3664) [bci: 40]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v144 
values: a141 a142 
=== Succesors ===
=== Usages ===
v339 a99 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v144 values: a141 a142  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v144 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Arrays.copyOfRange(Arrays.java:3664) [bci: 40]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v143 v145 
=== Succesors ===
next: v264 
=== Usages ===
a146 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v143 v145 #next: v264  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v264 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v202 
=== Usages ===
j266 
=== Predecessor ===
v144 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v202  <|@  <|@
f <@~|@floating>@ <|@
tid v262 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i5 
y: i117 
=== Succesors ===
=== Usages ===
v202 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i5 y: i117  <|@  <|@
f <@*|@fixed>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v262 
=== Succesors ===
trueSuccessor: v200 
falseSuccessor: v201 
=== Usages ===
=== Predecessor ===
v264 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v262 #trueSuccessor: v200 #falseSuccessor: v201  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602323899583285089
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v219 
=== Usages ===
=== Predecessor ===
v202 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v219  <|@  <|@
f <@*|@fixed>@ <|@
tid v219 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v220 
=== Predecessor ===
v200 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4602323899583285089
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v201 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v205 
=== Usages ===
=== Predecessor ===
v202 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v205  <|@  <|@
f <@~|@floating>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a146 
index: - 
=== Succesors ===
=== Usages ===
j266 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a146 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j266 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v264 
address: v339 
=== Succesors ===
=== Usages ===
v351 v352 v353 v354 v355 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v264 address: v339  <|@  <|@
f <@~|@floating>@ <|@
tid j194 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i5 
=== Succesors ===
=== Usages ===
j318 j300 j306 j310 j314 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i5  <|@  <|@
f <@~|@floating>@ <|@
tid j299 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16
stableDimension: 0
stamp: i64 [-16] ⇊fffffffffffffff0 ⇈fffffffffffffff0
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j300 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j300 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483664 - 2147483631]
=== Inputs ===
x: j194 
y: j299 
=== Succesors ===
=== Usages ===
v301 v303 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j194 y: j299  <|@  <|@
f <@~|@floating>@ <|@
tid j153 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Arrays.copyOfRange(Arrays.java:3664) [bci: 40]
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j293 v301 j287 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v301 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j300 
y: j153 
=== Succesors ===
=== Usages ===
v205 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j300 y: j153  <|@  <|@
f <@*|@fixed>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v301 
=== Succesors ===
trueSuccessor: v203 
falseSuccessor: v204 
=== Usages ===
=== Predecessor ===
v201 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v301 #trueSuccessor: v203 #falseSuccessor: v204  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" 
    xhandlers
    flags 
    probability 4600160829666940297
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v203 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v215 
=== Usages ===
=== Predecessor ===
v205 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v215  <|@  <|@
f <@*|@fixed>@ <|@
tid v215 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v216 
=== Predecessor ===
v203 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4593316700328544097
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v204 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v206 
=== Usages ===
=== Predecessor ===
v205 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v206  <|@  <|@
f <@~|@floating>@ <|@
tid j96 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Arrays.copyOfRange(Arrays.java:3664) [bci: 40]
rawvalue: 16
stableDimension: 0
stamp: i64 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j298 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v332 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v331 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v206 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v207 
=== Predecessor ===
v204 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B37" 
    successors "B23" "B37" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602323899583285089
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j293 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v207 
values: j153 j298 
=== Succesors ===
=== Usages ===
v355 j298 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v207 values: j153 j298  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v206 
=== Succesors ===
next: v331 
=== Usages ===
j293 v211 v212 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v206 #next: v331  <|@  <|@
f <@~|@floating>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j266 
index: j293 
=== Succesors ===
=== Usages ===
v331 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j266 index: j293  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v331 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v355 
value: v332 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v214 
=== Usages ===
=== Predecessor ===
v207 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v355 value: v332 stateAfter: - lastLocationAccess: - #next: v214  <|@  <|@
f <@~|@floating>@ <|@
tid j298 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j293 
y: j96 
=== Succesors ===
=== Usages ===
j287 j293 v303 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j293 y: j96  <|@  <|@
f <@~|@floating>@ <|@
tid v303 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j300 
y: j298 
=== Succesors ===
=== Usages ===
v214 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j300 y: j298  <|@  <|@
f <@*|@fixed>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v303 
=== Succesors ===
trueSuccessor: v211 
falseSuccessor: v213 
=== Usages ===
=== Predecessor ===
v331 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v303 #trueSuccessor: v211 #falseSuccessor: v213  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4593316700328544097
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v211 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v207 
=== Succesors ===
next: v217 
=== Usages ===
=== Predecessor ===
v214 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v207 #next: v217  <|@  <|@
f <@*|@fixed>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v216 
=== Predecessor ===
v211 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B20" "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4602323899583285089
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j287 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v216 
values: j153 j298 
=== Succesors ===
=== Usages ===
v354 j292 j280 v307 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v216 values: j153 j298  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v216 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v215 v217 
=== Succesors ===
next: v240 
=== Usages ===
j287 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v215 v217 #next: v240  <|@  <|@
f <@~|@floating>@ <|@
tid j305 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j306 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j306 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j194 
y: j305 
=== Succesors ===
=== Usages ===
v307 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j194 y: j305  <|@  <|@
f <@~|@floating>@ <|@
tid v307 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j306 
y: j287 
=== Succesors ===
=== Usages ===
v240 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j306 y: j287  <|@  <|@
f <@*|@fixed>@ <|@
tid v240 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v307 
=== Succesors ===
trueSuccessor: v239 
falseSuccessor: v238 
=== Usages ===
=== Predecessor ===
v216 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v307 #trueSuccessor: v239 #falseSuccessor: v238  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4593316700328544097
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v239 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v243 
=== Usages ===
=== Predecessor ===
v240 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v243  <|@  <|@
f <@*|@fixed>@ <|@
tid v243 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v227 
=== Predecessor ===
v239 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4600160829666940297
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v330 
=== Usages ===
=== Predecessor ===
v240 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v330  <|@  <|@
f <@~|@floating>@ <|@
tid v354 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j266 
index: j287 
=== Succesors ===
=== Usages ===
v330 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j266 index: j287  <|@  <|@
f <@~|@floating>@ <|@
tid v336 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v330 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v330 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v354 
value: v336 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v226 
=== Usages ===
=== Predecessor ===
v238 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v354 value: v336 stateAfter: - lastLocationAccess: - #next: v226  <|@  <|@
f <@~|@floating>@ <|@
tid j172 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Arrays.copyOfRange(Arrays.java:3664) [bci: 40]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j292 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j292 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j287 
y: j172 
=== Succesors ===
=== Usages ===
j280 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j287 y: j172  <|@  <|@
f <@*|@fixed>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v227 
=== Predecessor ===
v330 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4602323899583285089
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j280 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v227 
values: j292 j287 
=== Succesors ===
=== Usages ===
v353 j286 j274 v311 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v227 values: j292 j287  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v227 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v226 v243 
=== Succesors ===
next: v246 
=== Usages ===
j280 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v226 v243 #next: v246  <|@  <|@
f <@~|@floating>@ <|@
tid j309 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j310 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j310 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j194 
y: j309 
=== Succesors ===
=== Usages ===
v311 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j194 y: j309  <|@  <|@
f <@~|@floating>@ <|@
tid v311 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j310 
y: j280 
=== Succesors ===
=== Usages ===
v246 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j310 y: j280  <|@  <|@
f <@*|@fixed>@ <|@
tid v246 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v311 
=== Succesors ===
trueSuccessor: v245 
falseSuccessor: v244 
=== Usages ===
=== Predecessor ===
v227 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v311 #trueSuccessor: v245 #falseSuccessor: v244  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4593316700328544097
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v249 
=== Usages ===
=== Predecessor ===
v246 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v249  <|@  <|@
f <@*|@fixed>@ <|@
tid v249 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v231 
=== Predecessor ===
v245 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4600160829666940297
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v328 
=== Usages ===
=== Predecessor ===
v246 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v328  <|@  <|@
f <@~|@floating>@ <|@
tid v353 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j266 
index: j280 
=== Succesors ===
=== Usages ===
v328 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j266 index: j280  <|@  <|@
f <@~|@floating>@ <|@
tid v335 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v328 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v328 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v353 
value: v335 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v230 
=== Usages ===
=== Predecessor ===
v244 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v353 value: v335 stateAfter: - lastLocationAccess: - #next: v230  <|@  <|@
f <@~|@floating>@ <|@
tid j285 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j286 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j286 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j280 
y: j285 
=== Succesors ===
=== Usages ===
j274 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j280 y: j285  <|@  <|@
f <@*|@fixed>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v231 
=== Predecessor ===
v328 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4602323899583285089
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j274 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v231 
values: j286 j280 
=== Succesors ===
=== Usages ===
v352 j279 j267 v315 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v231 values: j286 j280  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v231 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v230 v249 
=== Succesors ===
next: v252 
=== Usages ===
j274 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v230 v249 #next: v252  <|@  <|@
f <@~|@floating>@ <|@
tid j313 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j314 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j314 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j194 
y: j313 
=== Succesors ===
=== Usages ===
v315 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j194 y: j313  <|@  <|@
f <@~|@floating>@ <|@
tid v315 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j314 
y: j274 
=== Succesors ===
=== Usages ===
v252 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j314 y: j274  <|@  <|@
f <@*|@fixed>@ <|@
tid v252 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v315 
=== Succesors ===
trueSuccessor: v251 
falseSuccessor: v250 
=== Usages ===
=== Predecessor ===
v231 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v315 #trueSuccessor: v251 #falseSuccessor: v250  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4593316700328544097
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v251 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v255 
=== Usages ===
=== Predecessor ===
v252 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v255  <|@  <|@
f <@*|@fixed>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v235 
=== Predecessor ===
v251 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4600160829666940297
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v250 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v326 
=== Usages ===
=== Predecessor ===
v252 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v326  <|@  <|@
f <@~|@floating>@ <|@
tid v352 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j266 
index: j274 
=== Succesors ===
=== Usages ===
v326 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j266 index: j274  <|@  <|@
f <@~|@floating>@ <|@
tid v334 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16>
value: SIMD<0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v326 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v326 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v352 
value: v334 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v234 
=== Usages ===
=== Predecessor ===
v250 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v352 value: v334 stateAfter: - lastLocationAccess: - #next: v234  <|@  <|@
f <@~|@floating>@ <|@
tid j269 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j279 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j279 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j274 
y: j269 
=== Succesors ===
=== Usages ===
j267 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j274 y: j269  <|@  <|@
f <@*|@fixed>@ <|@
tid v234 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v235 
=== Predecessor ===
v326 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4602323899583285089
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j267 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v235 
values: j279 j274 
=== Succesors ===
=== Usages ===
v351 v319 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v235 values: j279 j274  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v235 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v234 v255 
=== Succesors ===
next: v258 
=== Usages ===
j267 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v234 v255 #next: v258  <|@  <|@
f <@~|@floating>@ <|@
tid j317 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j318 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j318 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j194 
y: j317 
=== Succesors ===
=== Usages ===
v319 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j194 y: j317  <|@  <|@
f <@~|@floating>@ <|@
tid v319 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j318 
y: j267 
=== Succesors ===
=== Usages ===
v258 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j318 y: j267  <|@  <|@
f <@*|@fixed>@ <|@
tid v258 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v319 
=== Succesors ===
trueSuccessor: v257 
falseSuccessor: v256 
=== Usages ===
=== Predecessor ===
v235 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v319 #trueSuccessor: v257 #falseSuccessor: v256  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4593316700328544097
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v257 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v261 
=== Usages ===
=== Predecessor ===
v258 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v261  <|@  <|@
f <@*|@fixed>@ <|@
tid v261 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v220 
=== Predecessor ===
v257 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4600160829666940297
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v256 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v324 
=== Usages ===
=== Predecessor ===
v258 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v324  <|@  <|@
f <@~|@floating>@ <|@
tid v351 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j266 
index: j267 
=== Succesors ===
=== Usages ===
v324 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j266 index: j267  <|@  <|@
f <@~|@floating>@ <|@
tid i333 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i16 [0] ⇈0000000000000000
stampKind: i16
value: short[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v324 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v324 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v351 
value: i333 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v237 
=== Usages ===
=== Predecessor ===
v256 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v351 value: i333 stateAfter: - lastLocationAccess: - #next: v237  <|@  <|@
f <@*|@fixed>@ <|@
tid v237 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v220 
=== Predecessor ===
v324 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B18" "B35" "B34" 
    successors 
    xhandlers
    flags 
    probability 4606827499210655585
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v220 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v219 v237 v261 
=== Succesors ===
next: a99 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v219 v237 v261 #next: a99  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a99 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.copyOfRange(Arrays.java:3664) [bci: 40]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a146 
=== Succesors ===
next: j182 
=== Usages ===
v17 j187 
=== Predecessor ===
v220 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a146 #next: j182  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j182 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3665) [bci: 57]
stamp: i64
=== Inputs ===
object: a1 
=== Succesors ===
next: j187 
=== Usages ===
v349 
=== Predecessor ===
a99 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a1 #next: j187  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j187 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3665) [bci: 57]
stamp: i64
=== Inputs ===
object: a99 
=== Succesors ===
next: v192 
=== Usages ===
v350 
=== Predecessor ===
j182 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a99 #next: v192  <|@  <|@
f <@~|@floating>@ <|@
tid j183 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3665) [bci: 57]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i2 
=== Succesors ===
=== Usages ===
v349 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2  <|@  <|@
f <@~|@floating>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j182 
index: j183 
=== Succesors ===
=== Usages ===
v192 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j182 index: j183  <|@  <|@
f <@~|@floating>@ <|@
tid v350 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j187 
index: - 
=== Succesors ===
=== Usages ===
v192 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j187 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j191 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3665) [bci: 57]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i82 
=== Succesors ===
=== Usages ===
v192 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i82  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: charArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3665) [bci: 57]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v349 v350 j191 
=== Succesors ===
next: v17 
=== Usages ===
=== Predecessor ===
j187 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v349 v350 j191 #next: v17  <|@  <|@
f <@*|@fixed>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.copyOfRange(Arrays.java:3667) [bci: 62]
stamp: void
=== Inputs ===
result: a99 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v192 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a99 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4600160829666940297
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v213 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v212 
=== Usages ===
=== Predecessor ===
v214 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v212  <|@  <|@
f <@*|@fixed>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v207 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v213 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v207  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v87 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v87  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a# [C
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 j182 v356 v338 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 i5 i11 v58 j183 v41 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 i5 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?4 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<Arrays.copyOfRange(char[], int, int)>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Arrays.java
sourceLine: 3661
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 i3 - - 
=== Succesors ===
=== Usages ===
v107 a142 v356 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 i3 - -  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.util.Arrays.copyOfRange(Arrays.java:3661) [bci: 2]
stamp: i32
=== Inputs ===
x: i3 
y: i2 
=== Succesors ===
=== Usages ===
v7 j194 i82 v18 i63 v169 i118 v127 a142 v262 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i3 y: i2  <|@  <|@
f <@~|@floating>@ <|@
tid i6 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Arrays.copyOfRange(Arrays.java:3662) [bci: 5]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v7 v52 a142 v64 v41 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.Arrays.copyOfRange(Arrays.java:3662) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i5 
y: i6 
=== Succesors ===
=== Usages ===
v87 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i5 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.copyOfRange(Arrays.java:3662) [bci: 5]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v7 
=== Succesors ===
trueSuccessor: v86 
falseSuccessor: v84 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v7 #trueSuccessor: v86 #falseSuccessor: v84  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@5a5d1c0a slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = SUB (x: v2|DWORD, ~y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.copyOfRange(Arrays.java:3662) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v102 
=== Usages ===
=== Predecessor ===
v87 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v102  <|@  <|@
f <@~|@floating>@ <|@
tid i103 <|@
result int[-7187|0xffffffffffffe3ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -7187
stableDimension: 0
stamp: i32 [-7187] ⇊00000000ffffe3ed ⇈00000000ffffe3ed
stampKind: i32
value: int[-7187|0xffffffffffffe3ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i105 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v101 
=== Predecessor ===
v86 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-7187|0xffffffffffffe3ed]] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.copyOfRange(Arrays.java:3662) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v356 
=== Usages ===
=== Predecessor ===
v87 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v356  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v356 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?4 
object: a1 
=== Succesors ===
next: v44 
=== Usages ===
=== Predecessor ===
v84 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?4 object: a1 #next: v44  <|@  <|@
f <@~|@floating>@ <|@
tid i111 <|@
result int[-17761|0xffffffffffffba9f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -17761
stableDimension: 0
stamp: i32 [-17761] ⇊00000000ffffba9f ⇈00000000ffffba9f
stampKind: i32
value: int[-17761|0xffffffffffffba9f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i105 i105 i105 i105 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3665) [bci: 57]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i6 
=== Succesors ===
=== Usages ===
v44 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3665) [bci: 57]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v41 
=== Succesors ===
trueSuccessor: v43 
falseSuccessor: v42 
=== Usages ===
=== Predecessor ===
v356 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v41 #trueSuccessor: v43 #falseSuccessor: v42  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOfRange(Arrays.java:3661) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD - - 
>@ <|@ instruction NULLCHECK [v0|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3665) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v110 
=== Usages ===
=== Predecessor ===
v44 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v110  <|@  <|@
f <@*|@fixed>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v101 
=== Predecessor ===
v43 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-17761|0xffffffffffffba9f]] destination: B3 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3665) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: i337 
=== Usages ===
=== Predecessor ===
v44 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i337  <|@  <|@
f <@~|@floating>@ <|@
tid v338 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i337 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i337 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.Arrays.copyOfRange(Arrays.java:3665) [bci: 50]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v338 
=== Succesors ===
next: v56 
=== Usages ===
i11 i57 
=== Predecessor ===
v42 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v338 #next: v56  <|@  <|@
f <@~|@floating>@ <|@
tid i11 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.util.Arrays.copyOfRange(Arrays.java:3665) [bci: 52]
stamp: i32
=== Inputs ===
x: i337 
y: i2 
=== Succesors ===
=== Usages ===
i82 v18 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i337 y: i2  <|@  <|@
f <@~|@floating>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at java.util.Arrays.copyOfRange(Arrays.java:3666) [bci: 54]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i5 
y: i11 
=== Succesors ===
=== Usages ===
i82 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i5 y: i11  <|@  <|@
f <@~|@floating>@ <|@
tid i82 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v18 
trueValue: i5 
falseValue: i11 
=== Succesors ===
=== Usages ===
i63 i57 j191 v52 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v18 trueValue: i5 falseValue: i11  <|@  <|@
f <@~|@floating>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 41]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3665) [bci: 57]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i82 
y: i6 
=== Succesors ===
=== Usages ===
v56 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i82 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:259) [bci: 52]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3665) [bci: 57]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v52 
=== Succesors ===
trueSuccessor: v55 
falseSuccessor: v53 
=== Usages ===
=== Predecessor ===
i337 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v52 #trueSuccessor: v55 #falseSuccessor: v53  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = SUB (x: v4|DWORD, ~y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = CMOVE (falseValue: v5|DWORD, ~trueValue: v3|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction TEST (x: v6|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3665) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v114 
=== Usages ===
=== Predecessor ===
v56 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v114  <|@  <|@
f <@*|@fixed>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3665) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v101 
=== Predecessor ===
v55 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-17761|0xffffffffffffba9f]] destination: B5 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:259) [bci: 55]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3665) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v62 
=== Usages ===
=== Predecessor ===
v56 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v62  <|@  <|@
f <@~|@floating>@ <|@
tid i57 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 65]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3665) [bci: 57]
stamp: i32
=== Inputs ===
x: i337 
y: i82 
=== Succesors ===
=== Usages ===
v58 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i337 y: i82  <|@  <|@
f <@~|@floating>@ <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3665) [bci: 57]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i57 
y: i2 
=== Succesors ===
=== Usages ===
v62 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i57 y: i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 77]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3665) [bci: 57]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v58 
=== Succesors ===
trueSuccessor: v61 
falseSuccessor: v59 
=== Usages ===
=== Predecessor ===
v53 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v58 #trueSuccessor: v61 #falseSuccessor: v59  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = SUB (x: v4|DWORD, ~y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v1|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576803513614379298
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3665) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v113 
=== Usages ===
=== Predecessor ===
v62 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v113  <|@  <|@
f <@*|@fixed>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3665) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v101 
=== Predecessor ===
v61 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-17761|0xffffffffffffba9f]] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B11" 
    xhandlers
    flags 
    probability 4606914895974952345
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 80]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3665) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v68 
=== Usages ===
=== Predecessor ===
v62 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v68  <|@  <|@
f <@~|@floating>@ <|@
tid i63 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3665) [bci: 57]
stamp: i32
=== Inputs ===
x: i5 
y: i82 
=== Succesors ===
=== Usages ===
v64 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i5 y: i82  <|@  <|@
f <@~|@floating>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3665) [bci: 57]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i63 
y: i6 
=== Succesors ===
=== Usages ===
v68 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i63 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3665) [bci: 57]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v64 
=== Succesors ===
trueSuccessor: v67 
falseSuccessor: v65 
=== Usages ===
=== Predecessor ===
v59 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v64 #trueSuccessor: v67 #falseSuccessor: v65  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SUB (x: v3|DWORD, ~y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v8|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576747014696046040
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3665) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v112 
=== Usages ===
=== Predecessor ===
v68 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v112  <|@  <|@
f <@*|@fixed>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3665) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v101 
=== Predecessor ===
v67 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-17761|0xffffffffffffba9f]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B9" "B7" "B5" 
    successors 
    xhandlers
    flags 
    probability 4585839534465583581
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i105 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-17761 - -7187] ⇊00000000ffff8285
valueDescription: i32
=== Inputs ===
merge: v101 
values: i103 i111 i111 i111 i111 
=== Succesors ===
=== Usages ===
v107 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v101 values: i103 i111 i111 i111 i111  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v102 v110 v112 v113 v114 
=== Succesors ===
next: v107 
=== Usages ===
i105 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v102 v110 v112 v113 v114 #next: v107  <|@  <|@
f <@~|@floating>@ <|@
tid a104 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v107 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?4 
actionAndReason: i105 
speculation: a104 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v101 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?4 actionAndReason: i105 speculation: a104  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v9|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOfRange(Arrays.java:3661) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" "B15" 
    xhandlers
    flags 
    probability 4606827499210655586
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3665) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: j121 
=== Usages ===
=== Predecessor ===
v68 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j121  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j121 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Arrays.copyOfRange(Arrays.java:3664) [bci: 40]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j166 
=== Usages ===
v340 v341 
=== Predecessor ===
v65 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j166  <|@  <|@
f <@~|@floating>@ <|@
tid v340 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j121 
index: - 
=== Succesors ===
=== Usages ===
j166 v168 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j121 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j166 <|@
result v10|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Arrays.copyOfRange(Arrays.java:3664) [bci: 40]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v340 
=== Succesors ===
next: j167 
=== Usages ===
j125 v342 v343 a141 v348 v344 v345 v346 v347 
=== Predecessor ===
j121 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v340 #next: j167  <|@  <|@
f <@~|@floating>@ <|@
tid v341 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j121 
index: - 
=== Succesors ===
=== Usages ===
j167 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j121 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j167 <|@
result v11|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Arrays.copyOfRange(Arrays.java:3664) [bci: 40]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v341 
=== Succesors ===
next: v130 
=== Usages ===
v131 
=== Predecessor ===
j166 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v341 #next: v130  <|@  <|@
f <@~|@floating>@ <|@
tid i117 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Arrays.copyOfRange(Arrays.java:3664) [bci: 40]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i118 v262 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i126 <|@
result int[16777215|0xffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Arrays.copyOfRange(Arrays.java:3664) [bci: 40]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v127 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Arrays.copyOfRange(Arrays.java:3664) [bci: 40]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i5 
y: i126 
=== Succesors ===
=== Usages ===
v130 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i5 y: i126  <|@  <|@
f <@*|@fixed>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Arrays.copyOfRange(Arrays.java:3664) [bci: 40]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v127 
=== Succesors ===
trueSuccessor: v129 
falseSuccessor: v128 
=== Usages ===
=== Predecessor ===
j167 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v127 #trueSuccessor: v129 #falseSuccessor: v128  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v3|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4605962271244117669
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Arrays.copyOfRange(Arrays.java:3664) [bci: 40]
stamp: void
=== Inputs ===
=== Succesors ===
next: v137 
=== Usages ===
=== Predecessor ===
v130 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v137  <|@  <|@
f <@~|@floating>@ <|@
tid i118 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Arrays.copyOfRange(Arrays.java:3664) [bci: 40]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i5 
y: i117 
=== Succesors ===
=== Usages ===
i150 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i5 y: i117  <|@  <|@
f <@~|@floating>@ <|@
tid i149 <|@
result int[23|0x17] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Arrays.copyOfRange(Arrays.java:3664) [bci: 40]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i150 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i150 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Arrays.copyOfRange(Arrays.java:3664) [bci: 40]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i118 
y: i149 
=== Succesors ===
=== Usages ===
i120 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i118 y: i149  <|@  <|@
f <@~|@floating>@ <|@
tid i119 <|@
result int[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Arrays.copyOfRange(Arrays.java:3664) [bci: 40]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i120 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i120 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Arrays.copyOfRange(Arrays.java:3664) [bci: 40]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i150 
y: i119 
=== Succesors ===
=== Usages ===
j124 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i150 y: i119  <|@  <|@
f <@~|@floating>@ <|@
tid j124 <|@
result v15|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Arrays.copyOfRange(Arrays.java:3664) [bci: 40]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i120 
=== Succesors ===
=== Usages ===
j125 v344 v345 v346 v347 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i120  <|@  <|@
f <@~|@floating>@ <|@
tid j125 <|@
result v16|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Arrays.copyOfRange(Arrays.java:3664) [bci: 40]
stamp: i64
=== Inputs ===
x: j124 
y: j166 
=== Succesors ===
=== Usages ===
v131 v168 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j124 y: j166  <|@  <|@
f <@~|@floating>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Arrays.copyOfRange(Arrays.java:3664) [bci: 40]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j167 
y: j125 
=== Succesors ===
=== Usages ===
v137 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j167 y: j125  <|@  <|@
f <@*|@fixed>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Arrays.copyOfRange(Arrays.java:3664) [bci: 40]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v131 
=== Succesors ===
trueSuccessor: v136 
falseSuccessor: v135 
=== Usages ===
=== Predecessor ===
v129 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v131 #trueSuccessor: v136 #falseSuccessor: v135  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = SHL v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = LEA [v12|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = AND v13|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOVSXD v14|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = ADD (x: v15|QWORD, y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v16|QWORD, y: v11|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4576137334868311846
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Arrays.copyOfRange(Arrays.java:3664) [bci: 40]
stamp: void
=== Inputs ===
=== Succesors ===
next: v134 
=== Usages ===
=== Predecessor ===
v137 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v134  <|@  <|@
f <@*|@fixed>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Arrays.copyOfRange(Arrays.java:3664) [bci: 40]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v133 
=== Predecessor ===
v136 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605884400727129256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v135 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Arrays.copyOfRange(Arrays.java:3664) [bci: 40]
stamp: void
=== Inputs ===
=== Succesors ===
next: v168 
=== Usages ===
=== Predecessor ===
v137 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v168  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v168 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Arrays.copyOfRange(Arrays.java:3664) [bci: 40]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v340 
value: j125 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v155 
=== Usages ===
=== Predecessor ===
v135 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v340 value: j125 stateAfter: - lastLocationAccess: - #next: v155  <|@  <|@
f <@~|@floating>@ <|@
tid v344 <|@
result [v15|QWORD + v10|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j124 
index: j166 
=== Succesors ===
=== Usages ===
v155 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j124 index: j166  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Arrays.copyOfRange(Arrays.java:3664) [bci: 40]
stamp: void
=== Inputs ===
address: v344 
=== Succesors ===
next: v158 
=== Usages ===
=== Predecessor ===
v168 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v344 #next: v158  <|@  <|@
f <@~|@floating>@ <|@
tid v345 <|@
result [v15|QWORD + v10|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j124 
index: j166 
=== Succesors ===
=== Usages ===
v158 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j124 index: j166  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Arrays.copyOfRange(Arrays.java:3664) [bci: 40]
stamp: void
=== Inputs ===
address: v345 
=== Succesors ===
next: v161 
=== Usages ===
=== Predecessor ===
v155 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v345 #next: v161  <|@  <|@
f <@~|@floating>@ <|@
tid v346 <|@
result [v15|QWORD + v10|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j124 
index: j166 
=== Succesors ===
=== Usages ===
v161 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j124 index: j166  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Arrays.copyOfRange(Arrays.java:3664) [bci: 40]
stamp: void
=== Inputs ===
address: v346 
=== Succesors ===
next: v164 
=== Usages ===
=== Predecessor ===
v158 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v346 #next: v164  <|@  <|@
f <@~|@floating>@ <|@
tid v347 <|@
result [v15|QWORD + v10|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j124 
index: j166 
=== Succesors ===
=== Usages ===
v164 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j124 index: j166  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Arrays.copyOfRange(Arrays.java:3664) [bci: 40]
stamp: void
=== Inputs ===
address: v347 
=== Succesors ===
next: v169 
=== Usages ===
=== Predecessor ===
v161 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v347 #next: v169  <|@  <|@
f <@~|@floating>@ <|@
tid v342 <|@
result [v10|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j166 
index: - 
=== Succesors ===
=== Usages ===
v169 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j166 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v169 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Arrays.copyOfRange(Arrays.java:3664) [bci: 40]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v342 
value: i5 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v170 
=== Usages ===
=== Predecessor ===
v164 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v342 value: i5 stateAfter: - lastLocationAccess: - #next: v170  <|@  <|@
f <@~|@floating>@ <|@
tid v343 <|@
result [v10|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j166 
index: - 
=== Succesors ===
=== Usages ===
v170 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j166 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j116 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Arrays.copyOfRange(Arrays.java:3664) [bci: 40]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v170 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Arrays.copyOfRange(Arrays.java:3664) [bci: 40]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v343 
value: j116 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v174 
=== Usages ===
=== Predecessor ===
v169 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v343 value: j116 stateAfter: - lastLocationAccess: - #next: v174  <|@  <|@
f <@~|@floating>@ <|@
tid v348 <|@
result [v10|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j166 
index: - 
=== Succesors ===
=== Usages ===
v174 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j166 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v193 <|@
result meta{HotSpotType<[C, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Arrays.copyOfRange(Arrays.java:3664) [bci: 40]
rawvalue: meta{HotSpotType<[C, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[C, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v174 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Arrays.copyOfRange(Arrays.java:3664) [bci: 40]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v348 
value: v193 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v140 
=== Usages ===
=== Predecessor ===
v170 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v348 value: v193 stateAfter: - lastLocationAccess: - #next: v140  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Arrays.copyOfRange(Arrays.java:3664) [bci: 40]
stamp: void
=== Inputs ===
=== Succesors ===
next: a141 
=== Usages ===
=== Predecessor ===
v174 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a141  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a141 <|@
result v17|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Arrays.copyOfRange(Arrays.java:3664) [bci: 40]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j166 
=== Succesors ===
next: v143 
=== Usages ===
a146 
=== Predecessor ===
v140 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j166 #next: v143  <|@  <|@
f <@*|@fixed>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Arrays.copyOfRange(Arrays.java:3664) [bci: 40]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v144 
=== Predecessor ===
a141 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v16|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v15|QWORD + v10|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v15|QWORD + v10|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v15|QWORD + v10|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v15|QWORD + v10|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v10|QWORD + 12], y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = MOVE v10|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v17|QWORD[.]] destination: B14 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B16" 
    xhandlers
    flags 
    probability 4591586244395468262
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Arrays.copyOfRange(Arrays.java:3664) [bci: 40]
stamp: void
=== Inputs ===
=== Succesors ===
next: v132 
=== Usages ===
=== Predecessor ===
v130 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v132  <|@  <|@
f <@*|@fixed>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Arrays.copyOfRange(Arrays.java:3664) [bci: 40]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v133 
=== Predecessor ===
v128 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4592209208531375563
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Arrays.copyOfRange(Arrays.java:3664) [bci: 40]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v132 v134 
=== Succesors ===
next: a142 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v132 v134 #next: a142  <|@  <|@
f <@~|@floating>@ <|@
tid v115 <|@
result v18|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Arrays.copyOfRange(Arrays.java:3664) [bci: 40]
rawvalue: meta{HotSpotType<[C, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[C, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a142 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a142 <|@
result v19|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Arrays.copyOfRange(Arrays.java:3664) [bci: 40]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?4 
arguments: v115 i5 i6 
=== Succesors ===
next: v145 
=== Usages ===
a146 
=== Predecessor ===
v133 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?4 arguments: v115 i5 i6 #next: v145  <|@  <|@
f <@*|@fixed>@ <|@
tid v145 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Arrays.copyOfRange(Arrays.java:3664) [bci: 40]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v144 
=== Predecessor ===
a142 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v18|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOfRange(Arrays.java:3661) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v19|QWORD[.]] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4606827499210655585
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a146 <|@
result v20|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Arrays.copyOfRange(Arrays.java:3664) [bci: 40]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v144 
values: a141 a142 
=== Succesors ===
=== Usages ===
v339 a99 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v144 values: a141 a142  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v144 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Arrays.copyOfRange(Arrays.java:3664) [bci: 40]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v143 v145 
=== Succesors ===
next: v264 
=== Usages ===
a146 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v143 v145 #next: v264  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v264 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v202 
=== Usages ===
j266 
=== Predecessor ===
v144 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v202  <|@  <|@
f <@~|@floating>@ <|@
tid v262 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i5 
y: i117 
=== Succesors ===
=== Usages ===
v202 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i5 y: i117  <|@  <|@
f <@*|@fixed>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v262 
=== Succesors ===
trueSuccessor: v200 
falseSuccessor: v201 
=== Usages ===
=== Predecessor ===
v264 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v262 #trueSuccessor: v200 #falseSuccessor: v201  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v20|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v3|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602323899583285089
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v219 
=== Usages ===
=== Predecessor ===
v202 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v219  <|@  <|@
f <@*|@fixed>@ <|@
tid v219 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v220 
=== Predecessor ===
v200 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B18 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4602323899583285089
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v201 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v205 
=== Usages ===
=== Predecessor ===
v202 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v205  <|@  <|@
f <@~|@floating>@ <|@
tid v339 <|@
result [v20|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a146 
index: - 
=== Succesors ===
=== Usages ===
j266 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a146 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j266 <|@
result v21|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v264 
address: v339 
=== Succesors ===
=== Usages ===
v351 v352 v353 v354 v355 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v264 address: v339  <|@  <|@
f <@~|@floating>@ <|@
tid j194 <|@
result v22|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i5 
=== Succesors ===
=== Usages ===
j318 j300 j306 j310 j314 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i5  <|@  <|@
f <@~|@floating>@ <|@
tid j299 <|@
result long[-16|0xfffffffffffffff0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16
stableDimension: 0
stamp: i64 [-16] ⇊fffffffffffffff0 ⇈fffffffffffffff0
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j300 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j300 <|@
result v23|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483664 - 2147483631]
=== Inputs ===
x: j194 
y: j299 
=== Succesors ===
=== Usages ===
v301 v303 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j194 y: j299  <|@  <|@
f <@~|@floating>@ <|@
tid j153 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Arrays.copyOfRange(Arrays.java:3664) [bci: 40]
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j293 v301 j287 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v301 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j300 
y: j153 
=== Succesors ===
=== Usages ===
v205 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j300 y: j153  <|@  <|@
f <@*|@fixed>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v301 
=== Succesors ===
trueSuccessor: v203 
falseSuccessor: v204 
=== Usages ===
=== Predecessor ===
v201 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v301 #trueSuccessor: v203 #falseSuccessor: v204  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = LEA [v20|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOVSXD v3|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = LEA [v22|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v23|QWORD, y: v23|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" 
    xhandlers
    flags 
    probability 4600160829666940297
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v203 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v215 
=== Usages ===
=== Predecessor ===
v205 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v215  <|@  <|@
f <@*|@fixed>@ <|@
tid v215 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v216 
=== Predecessor ===
v203 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B20 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4593316700328544097
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v204 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v206 
=== Usages ===
=== Predecessor ===
v205 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v206  <|@  <|@
f <@~|@floating>@ <|@
tid j96 <|@
result long[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Arrays.copyOfRange(Arrays.java:3664) [bci: 40]
rawvalue: 16
stableDimension: 0
stamp: i64 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j298 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v332 <|@
result v24|V256_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v331 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v206 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v207 
=== Predecessor ===
v204 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v24|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B37" 
    successors "B23" "B37" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602323899583285089
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j293 <|@
result v25|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v207 
values: j153 j298 
=== Succesors ===
=== Usages ===
v355 j298 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v207 values: j153 j298  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v206 
=== Succesors ===
next: v331 
=== Usages ===
j293 v211 v212 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v206 #next: v331  <|@  <|@
f <@~|@floating>@ <|@
tid v355 <|@
result [v21|QWORD[.] + v25|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j266 
index: j293 
=== Succesors ===
=== Usages ===
v331 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j266 index: j293  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v331 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v355 
value: v332 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v214 
=== Usages ===
=== Predecessor ===
v207 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v355 value: v332 stateAfter: - lastLocationAccess: - #next: v214  <|@  <|@
f <@~|@floating>@ <|@
tid j298 <|@
result v26|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j293 
y: j96 
=== Succesors ===
=== Usages ===
j287 j293 v303 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j293 y: j96  <|@  <|@
f <@~|@floating>@ <|@
tid v303 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j300 
y: j298 
=== Succesors ===
=== Usages ===
v214 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j300 y: j298  <|@  <|@
f <@*|@fixed>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v303 
=== Succesors ===
trueSuccessor: v211 
falseSuccessor: v213 
=== Usages ===
=== Predecessor ===
v331 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v303 #trueSuccessor: v211 #falseSuccessor: v213  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v25|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v21|QWORD[.] + v25|QWORD * 2], input: v24|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = LEA [v25|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v26|QWORD, y: v23|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4593316700328544097
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v211 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v207 
=== Succesors ===
next: v217 
=== Usages ===
=== Predecessor ===
v214 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v207 #next: v217  <|@  <|@
f <@*|@fixed>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v216 
=== Predecessor ===
v211 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v26|QWORD] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B20" "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4602323899583285089
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j287 <|@
result v27|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v216 
values: j153 j298 
=== Succesors ===
=== Usages ===
v354 j292 j280 v307 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v216 values: j153 j298  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v216 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v215 v217 
=== Succesors ===
next: v240 
=== Usages ===
j287 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v215 v217 #next: v240  <|@  <|@
f <@~|@floating>@ <|@
tid j305 <|@
result long[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j306 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j306 <|@
result v28|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j194 
y: j305 
=== Succesors ===
=== Usages ===
v307 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j194 y: j305  <|@  <|@
f <@~|@floating>@ <|@
tid v307 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j306 
y: j287 
=== Succesors ===
=== Usages ===
v240 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j306 y: j287  <|@  <|@
f <@*|@fixed>@ <|@
tid v240 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v307 
=== Succesors ===
trueSuccessor: v239 
falseSuccessor: v238 
=== Usages ===
=== Predecessor ===
v216 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v307 #trueSuccessor: v239 #falseSuccessor: v238  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v27|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = LEA [v22|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v27|QWORD, y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4593316700328544097
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v239 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v243 
=== Usages ===
=== Predecessor ===
v240 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v243  <|@  <|@
f <@*|@fixed>@ <|@
tid v243 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v227 
=== Predecessor ===
v239 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v27|QWORD] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4600160829666940297
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v330 
=== Usages ===
=== Predecessor ===
v240 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v330  <|@  <|@
f <@~|@floating>@ <|@
tid v354 <|@
result [v21|QWORD[.] + v27|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j266 
index: j287 
=== Succesors ===
=== Usages ===
v330 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j266 index: j287  <|@  <|@
f <@~|@floating>@ <|@
tid v336 <|@
result v29|V128_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v330 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v330 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v354 
value: v336 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v226 
=== Usages ===
=== Predecessor ===
v238 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v354 value: v336 stateAfter: - lastLocationAccess: - #next: v226  <|@  <|@
f <@~|@floating>@ <|@
tid j172 <|@
result long[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.Arrays.copyOfRange(Arrays.java:3664) [bci: 40]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j292 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j292 <|@
result v30|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j287 
y: j172 
=== Succesors ===
=== Usages ===
j280 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j287 y: j172  <|@  <|@
f <@*|@fixed>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v227 
=== Predecessor ===
v330 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v29|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v21|QWORD[.] + v27|QWORD * 2], input: v29|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = LEA [v27|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v30|QWORD] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4602323899583285089
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j280 <|@
result v31|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v227 
values: j292 j287 
=== Succesors ===
=== Usages ===
v353 j286 j274 v311 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v227 values: j292 j287  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v227 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v226 v243 
=== Succesors ===
next: v246 
=== Usages ===
j280 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v226 v243 #next: v246  <|@  <|@
f <@~|@floating>@ <|@
tid j309 <|@
result long[-4|0xfffffffffffffffc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j310 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j310 <|@
result v32|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j194 
y: j309 
=== Succesors ===
=== Usages ===
v311 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j194 y: j309  <|@  <|@
f <@~|@floating>@ <|@
tid v311 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j310 
y: j280 
=== Succesors ===
=== Usages ===
v246 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j310 y: j280  <|@  <|@
f <@*|@fixed>@ <|@
tid v246 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v311 
=== Succesors ===
trueSuccessor: v245 
falseSuccessor: v244 
=== Usages ===
=== Predecessor ===
v227 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v311 #trueSuccessor: v245 #falseSuccessor: v244  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v31|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = LEA [v22|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v31|QWORD, y: v32|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4593316700328544097
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v249 
=== Usages ===
=== Predecessor ===
v246 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v249  <|@  <|@
f <@*|@fixed>@ <|@
tid v249 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v231 
=== Predecessor ===
v245 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v31|QWORD] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4600160829666940297
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v328 
=== Usages ===
=== Predecessor ===
v246 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v328  <|@  <|@
f <@~|@floating>@ <|@
tid v353 <|@
result [v21|QWORD[.] + v31|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j266 
index: j280 
=== Succesors ===
=== Usages ===
v328 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j266 index: j280  <|@  <|@
f <@~|@floating>@ <|@
tid v335 <|@
result v33|V64_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v328 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v328 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v353 
value: v335 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v230 
=== Usages ===
=== Predecessor ===
v244 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v353 value: v335 stateAfter: - lastLocationAccess: - #next: v230  <|@  <|@
f <@~|@floating>@ <|@
tid j285 <|@
result long[4|0x4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j286 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j286 <|@
result v34|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j280 
y: j285 
=== Succesors ===
=== Usages ===
j274 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j280 y: j285  <|@  <|@
f <@*|@fixed>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v231 
=== Predecessor ===
v328 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v33|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v21|QWORD[.] + v31|QWORD * 2], input: v33|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = LEA [v31|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v34|QWORD] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4602323899583285089
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j274 <|@
result v35|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v231 
values: j286 j280 
=== Succesors ===
=== Usages ===
v352 j279 j267 v315 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v231 values: j286 j280  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v231 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v230 v249 
=== Succesors ===
next: v252 
=== Usages ===
j274 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v230 v249 #next: v252  <|@  <|@
f <@~|@floating>@ <|@
tid j313 <|@
result long[-2|0xfffffffffffffffe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j314 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j314 <|@
result v36|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j194 
y: j313 
=== Succesors ===
=== Usages ===
v315 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j194 y: j313  <|@  <|@
f <@~|@floating>@ <|@
tid v315 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j314 
y: j274 
=== Succesors ===
=== Usages ===
v252 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j314 y: j274  <|@  <|@
f <@*|@fixed>@ <|@
tid v252 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v315 
=== Succesors ===
trueSuccessor: v251 
falseSuccessor: v250 
=== Usages ===
=== Predecessor ===
v231 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v315 #trueSuccessor: v251 #falseSuccessor: v250  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v35|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = LEA [v22|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v35|QWORD, y: v36|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4593316700328544097
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v251 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v255 
=== Usages ===
=== Predecessor ===
v252 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v255  <|@  <|@
f <@*|@fixed>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v235 
=== Predecessor ===
v251 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v35|QWORD] destination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4600160829666940297
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v250 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v326 
=== Usages ===
=== Predecessor ===
v252 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v326  <|@  <|@
f <@~|@floating>@ <|@
tid v352 <|@
result [v21|QWORD[.] + v35|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j266 
index: j274 
=== Succesors ===
=== Usages ===
v326 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j266 index: j274  <|@  <|@
f <@~|@floating>@ <|@
tid v334 <|@
result v37|V32_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16>
value: SIMD<0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v326 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v326 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v352 
value: v334 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v234 
=== Usages ===
=== Predecessor ===
v250 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v352 value: v334 stateAfter: - lastLocationAccess: - #next: v234  <|@  <|@
f <@~|@floating>@ <|@
tid j269 <|@
result long[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j279 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j279 <|@
result v38|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j274 
y: j269 
=== Succesors ===
=== Usages ===
j267 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j274 y: j269  <|@  <|@
f <@*|@fixed>@ <|@
tid v234 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v235 
=== Predecessor ===
v326 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v21|QWORD[.] + v35|QWORD * 2], input: v37|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = LEA [v35|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v38|QWORD] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4602323899583285089
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j267 <|@
result v39|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v235 
values: j279 j274 
=== Succesors ===
=== Usages ===
v351 v319 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v235 values: j279 j274  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v235 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v234 v255 
=== Succesors ===
next: v258 
=== Usages ===
j267 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v234 v255 #next: v258  <|@  <|@
f <@~|@floating>@ <|@
tid j317 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j318 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j318 <|@
result v40|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j194 
y: j317 
=== Succesors ===
=== Usages ===
v319 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j194 y: j317  <|@  <|@
f <@~|@floating>@ <|@
tid v319 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j318 
y: j267 
=== Succesors ===
=== Usages ===
v258 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j318 y: j267  <|@  <|@
f <@*|@fixed>@ <|@
tid v258 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v319 
=== Succesors ===
trueSuccessor: v257 
falseSuccessor: v256 
=== Usages ===
=== Predecessor ===
v235 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v319 #trueSuccessor: v257 #falseSuccessor: v256  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v39|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = DEC v22|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v39|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4593316700328544097
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v257 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v261 
=== Usages ===
=== Predecessor ===
v258 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v261  <|@  <|@
f <@*|@fixed>@ <|@
tid v261 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v220 
=== Predecessor ===
v257 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4600160829666940297
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v256 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v324 
=== Usages ===
=== Predecessor ===
v258 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v324  <|@  <|@
f <@~|@floating>@ <|@
tid v351 <|@
result [v21|QWORD[.] + v39|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j266 
index: j267 
=== Succesors ===
=== Usages ===
v324 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j266 index: j267  <|@  <|@
f <@~|@floating>@ <|@
tid i333 <|@
result short[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i16 [0] ⇈0000000000000000
stampKind: i16
value: short[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v324 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v324 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v351 
value: i333 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v237 
=== Usages ===
=== Predecessor ===
v256 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v351 value: i333 stateAfter: - lastLocationAccess: - #next: v237  <|@  <|@
f <@*|@fixed>@ <|@
tid v237 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v220 
=== Predecessor ===
v324 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v21|QWORD[.] + v39|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B18" "B35" "B34" 
    successors 
    xhandlers
    flags 
    probability 4606827499210655585
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v220 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v219 v237 v261 
=== Succesors ===
next: a99 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v219 v237 v261 #next: a99  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a99 <|@
result v20|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.copyOfRange(Arrays.java:3664) [bci: 40]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a146 
=== Succesors ===
next: j182 
=== Usages ===
v17 j187 
=== Predecessor ===
v220 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a146 #next: j182  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j182 <|@
result v41|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3665) [bci: 57]
stamp: i64
=== Inputs ===
object: a1 
=== Succesors ===
next: j187 
=== Usages ===
v349 
=== Predecessor ===
a99 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a1 #next: j187  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j187 <|@
result v42|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3665) [bci: 57]
stamp: i64
=== Inputs ===
object: a99 
=== Succesors ===
next: v192 
=== Usages ===
v350 
=== Predecessor ===
j182 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a99 #next: v192  <|@  <|@
f <@~|@floating>@ <|@
tid j183 <|@
result v43|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3665) [bci: 57]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i2 
=== Succesors ===
=== Usages ===
v349 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2  <|@  <|@
f <@~|@floating>@ <|@
tid v349 <|@
result [v41|QWORD[*] + v43|QWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j182 
index: j183 
=== Succesors ===
=== Usages ===
v192 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j182 index: j183  <|@  <|@
f <@~|@floating>@ <|@
tid v350 <|@
result [v42|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j187 
index: - 
=== Succesors ===
=== Usages ===
v192 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j187 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j191 <|@
result v44|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3665) [bci: 57]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i82 
=== Succesors ===
=== Usages ===
v192 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i82  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: charArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3665) [bci: 57]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v349 v350 j191 
=== Succesors ===
next: v17 
=== Usages ===
=== Predecessor ===
j187 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v349 v350 j191 #next: v17  <|@  <|@
f <@*|@fixed>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.copyOfRange(Arrays.java:3667) [bci: 62]
stamp: void
=== Inputs ===
result: a99 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v192 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a99 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[*] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[*] = MOVE v20|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOVSXD v1|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = MOVSXD v6|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v41|QWORD[*] + v43|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v42|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v44|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v20|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4600160829666940297
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v213 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v212 
=== Usages ===
=== Predecessor ===
v214 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v212  <|@  <|@
f <@*|@fixed>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v207 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v213 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v207  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v26|QWORD] destination: B37 -> B22 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@5a5d1c0a slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = SUB (x: v2|DWORD, ~y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOfRange(Arrays.java:3661) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD - - 
>@ <|@ instruction NULLCHECK [v0|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = SUB (x: v4|DWORD, ~y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = CMOVE (falseValue: v5|DWORD, ~trueValue: v3|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction TEST (x: v6|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = SUB (x: v4|DWORD, ~y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v1|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B11" 
    xhandlers
    flags 
    probability 4606914895974952345
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SUB (x: v3|DWORD, ~y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v8|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" "B15" 
    xhandlers
    flags 
    probability 4606827499210655586
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v3|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4605962271244117669
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = SHL v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = LEA [v12|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = AND v13|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOVSXD v14|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = ADD (x: v15|QWORD, y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v16|QWORD, y: v11|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605884400727129256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v16|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v15|QWORD + v10|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v15|QWORD + v10|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v15|QWORD + v10|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v15|QWORD + v10|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v10|QWORD + 12], y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = MOVE v10|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v17|QWORD[.]] destination: B14 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4606827499210655585
    begin_IR
      LIR
      nr   -1  <|@ instruction [v20|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v3|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4602323899583285089
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = LEA [v20|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOVSXD v3|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = LEA [v22|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v23|QWORD, y: v23|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" 
    xhandlers
    flags 
    probability 4600160829666940297
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B20 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B20" "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4602323899583285089
    begin_IR
      LIR
      nr   -1  <|@ instruction [v27|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = LEA [v22|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v27|QWORD, y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4600160829666940297
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v29|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v21|QWORD[.] + v27|QWORD * 2], input: v29|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = LEA [v27|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v30|QWORD] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4602323899583285089
    begin_IR
      LIR
      nr   -1  <|@ instruction [v31|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = LEA [v22|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v31|QWORD, y: v32|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4600160829666940297
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v33|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v21|QWORD[.] + v31|QWORD * 2], input: v33|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = LEA [v31|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v34|QWORD] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4602323899583285089
    begin_IR
      LIR
      nr   -1  <|@ instruction [v35|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = LEA [v22|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v35|QWORD, y: v36|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4600160829666940297
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v21|QWORD[.] + v35|QWORD * 2], input: v37|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = LEA [v35|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v38|QWORD] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4602323899583285089
    begin_IR
      LIR
      nr   -1  <|@ instruction [v39|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = DEC v22|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v39|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4600160829666940297
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v21|QWORD[.] + v39|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B18" "B35" "B34" 
    successors 
    xhandlers
    flags 
    probability 4606827499210655585
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[*] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[*] = MOVE v20|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOVSXD v1|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = MOVSXD v6|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v41|QWORD[*] + v43|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v42|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v44|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v20|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602323899583285089
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B18 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4593316700328544097
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v35|QWORD] destination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4593316700328544097
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4593316700328544097
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v24|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4600160829666940297
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v26|QWORD] destination: B37 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B37" 
    successors "B23" "B37" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602323899583285089
    begin_IR
      LIR
      nr   -1  <|@ instruction [v25|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v21|QWORD[.] + v25|QWORD * 2], input: v24|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = LEA [v25|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v26|QWORD, y: v23|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4593316700328544097
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v27|QWORD] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4593316700328544097
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v31|QWORD] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4593316700328544097
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v26|QWORD] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B16" 
    xhandlers
    flags 
    probability 4591586244395468262
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4592209208531375563
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v18|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOfRange(Arrays.java:3661) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v19|QWORD[.]] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-17761|0xffffffffffffba9f]] destination: B3 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B9" "B7" "B5" 
    successors 
    xhandlers
    flags 
    probability 4585839534465583581
    begin_IR
      LIR
      nr   -1  <|@ instruction [v9|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOfRange(Arrays.java:3661) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-17761|0xffffffffffffba9f]] destination: B5 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576803513614379298
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-17761|0xffffffffffffba9f]] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576747014696046040
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-17761|0xffffffffffffba9f]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4576137334868311846
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-7187|0xffffffffffffe3ed]] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: iload_1       
     2: isub          
     3: istore_3      
     4: iload_3       
     5: ifge          39
     8: new           #2          // java.lang.IllegalArgumentException
    11: dup           
    12: new           #3          // java.lang.StringBuilder
    15: dup           
    16: invokespecial #1          // java.lang.StringBuilder.<init>:()void
    19: iload_1       
    20: invokevirtual #3          // java.lang.StringBuilder.append:(int)java.lang.StringBuilder
    23: ldc           #102        // " > "
    25: invokevirtual #2          // java.lang.StringBuilder.append:(java.lang.String)java.lang.StringBuilder
    28: iload_2       
    29: invokevirtual #3          // java.lang.StringBuilder.append:(int)java.lang.StringBuilder
    32: invokevirtual #4          // java.lang.StringBuilder.toString:()java.lang.String
    35: invokespecial #5          // java.lang.IllegalArgumentException.<init>:(java.lang.String)void
    38: athrow        
    39: iload_3       
    40: newarray      char
    42: astore        4
    44: aload_0       
    45: iload_1       
    46: aload         4
    48: iconst_0      
    49: aload_0       
    50: arraylength   
    51: iload_1       
    52: isub          
    53: iload_3       
    54: invokestatic  #76         // java.lang.Math.min:(int, int)int
    57: invokestatic  #46         // java.lang.System.arraycopy:(java.lang.Object, int, java.lang.Object, int, int)void
    60: aload         4
    62: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@5a5d1c0a slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r14|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction r10|DWORD = SUB (x: rcx|DWORD, ~y: r14|DWORD) size: DWORD <|@ <|@
      nr   12  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   14  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3661) [bci: 0]
locals: r13|QWORD[.] r14|DWORD rcx|DWORD - - 
>@ <|@ instruction NULLCHECK [r13|QWORD[.]] state [bci:0] <|@ <|@
      nr   30  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr   32  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   46  <|@ instruction rsi|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   48  <|@ instruction rdx|DWORD = SUB (x: rsi|DWORD, ~y: r14|DWORD) size: DWORD <|@ <|@
      nr   50  <|@ instruction CMP (x: rdx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   52  <|@ instruction rdx|DWORD = CMOVE (falseValue: rdx|DWORD, ~trueValue: r10|DWORD) condition: > <|@ <|@
      nr   54  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr   56  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction rsi|DWORD = SUB (x: rsi|DWORD, ~y: rdx|DWORD) size: DWORD <|@ <|@
      nr   72  <|@ instruction CMP (x: r14|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr   74  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B11" 
    xhandlers
    flags 
    probability 4606914895974952345
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   88  <|@ instruction rsi|DWORD = SUB (x: r10|DWORD, ~y: rdx|DWORD) size: DWORD <|@ <|@
      nr   90  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr   92  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" "B15" 
    xhandlers
    flags 
    probability 4606827499210655586
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  114  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  116  <|@ instruction r11|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  118  <|@ instruction CMP r10|DWORD y: 16777215 size: DWORD <|@ <|@
      nr  120  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4605962271244117669
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  124  <|@ instruction r8|DWORD = SHL r10|DWORD size: DWORD <|@ <|@
      nr  126  <|@ instruction r8|DWORD = LEA [r8|DWORD + 23] size: DWORD <|@ <|@
      nr  128  <|@ instruction r8|DWORD = AND r8|DWORD y: -8 size: DWORD <|@ <|@
      nr  130  <|@ instruction r8|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  132  <|@ instruction r9|QWORD = ADD (x: r8|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  134  <|@ instruction CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  136  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605884400727129256
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  150  <|@ instruction MOV (x: [r15|QWORD + 96], y: r9|QWORD) size: QWORD <|@ <|@
      nr  152  <|@ instruction AMD64PREFETCH ~[r8|QWORD + rsi|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  154  <|@ instruction AMD64PREFETCH ~[r8|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  156  <|@ instruction AMD64PREFETCH ~[r8|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  158  <|@ instruction AMD64PREFETCH ~[r8|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  160  <|@ instruction MOV (x: [rsi|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  162  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  164  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr  166  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  168  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  170  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  172  <|@ instruction stack:32|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  174  <|@ instruction r14|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B14 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4606827499210655585
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  204  <|@ instruction CMP r14|DWORD y: 1 size: DWORD <|@ <|@
      nr  206  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4602323899583285089
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  214  <|@ instruction rdi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  216  <|@ instruction rsi|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr  218  <|@ instruction rdx|QWORD = LEA [rsi|QWORD - 16] size: QWORD <|@ <|@
      nr  220  <|@ instruction TEST (x: rdx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  222  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" 
    xhandlers
    flags 
    probability 4600160829666940297
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  226  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  228  <|@ instruction JUMP ~[] destination: B20 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B20" "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4602323899583285089
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  254  <|@ instruction rdx|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr  256  <|@ instruction CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  258  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4600160829666940297
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  266  <|@ instruction xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr  268  <|@ instruction J (address: [rdi|QWORD[.] + r10|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  270  <|@ instruction rdx|QWORD = LEA [r10|QWORD + 8] size: QWORD <|@ <|@
      nr  272  <|@ instruction r10|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction JUMP ~[] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4602323899583285089
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  278  <|@ instruction rdx|QWORD = LEA [rsi|QWORD - 4] size: QWORD <|@ <|@
      nr  280  <|@ instruction CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  282  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4600160829666940297
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  290  <|@ instruction xmm0|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  292  <|@ instruction J (address: [rdi|QWORD[.] + r10|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  294  <|@ instruction rdx|QWORD = LEA [r10|QWORD + 4] size: QWORD <|@ <|@
      nr  296  <|@ instruction r10|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  298  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4602323899583285089
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  302  <|@ instruction rdx|QWORD = LEA [rsi|QWORD - 2] size: QWORD <|@ <|@
      nr  304  <|@ instruction CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  306  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4600160829666940297
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  314  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr  316  <|@ instruction J (address: [rdi|QWORD[.] + r10|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  318  <|@ instruction rdx|QWORD = LEA [r10|QWORD + 2] size: QWORD <|@ <|@
      nr  320  <|@ instruction r10|QWORD = MOVE rdx|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  322  <|@ instruction JUMP ~[] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4602323899583285089
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  326  <|@ instruction rsi|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr  328  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  330  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4600160829666940297
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  338  <|@ instruction MOV (x: [rdi|QWORD[.] + r10|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr  340  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B18" "B35" "B34" 
    successors 
    xhandlers
    flags 
    probability 4606827499210655585
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  344  <|@ instruction r13|QWORD[*] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction rdi|QWORD = MOVSXD stack:32|DWORD size: QWORD <|@ <|@
      nr  350  <|@ instruction rdx|QWORD = MOVSXD stack:36|DWORD size: QWORD <|@ <|@
      nr  352  <|@ instruction rdi|QWORD = LEA [r13|QWORD[*] + rdi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  354  <|@ instruction rsi|QWORD = LEA [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  356  <|@ instruction stack:48|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  360  <|@ instruction rax|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602323899583285089
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B18 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4593316700328544097
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  310  <|@ instruction JUMP ~[] destination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4593316700328544097
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  334  <|@ instruction JUMP ~[] destination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4593316700328544097
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  232  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr  234  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  236  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4600160829666940297
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  366  <|@ instruction JUMP ~[] destination: B37 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B37" 
    successors "B23" "B37" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602323899583285089
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  240  <|@ instruction J (address: [rdi|QWORD[.] + r10|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  242  <|@ instruction r10|QWORD = LEA [r10|QWORD + 16] size: QWORD <|@ <|@
      nr  244  <|@ instruction CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  246  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4593316700328544097
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  262  <|@ instruction JUMP ~[] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4593316700328544097
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  286  <|@ instruction JUMP ~[] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4593316700328544097
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  250  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B16" 
    xhandlers
    flags 
    probability 4591586244395468262
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  180  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  182  <|@ instruction stack:28|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  184  <|@ instruction stack:32|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  186  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4592209208531375563
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  190  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr  192  <|@ instruction rdx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  194  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  196  <|@ instruction r14|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  198  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3661) [bci: 0]
locals: r13|QWORD[.] stack:32|DWORD stack:28|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  200  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction r10|DWORD = MOVE input: int[-17761|0xffffffffffffba9f] <|@ <|@
      nr   38  <|@ instruction stack:28|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   40  <|@ instruction stack:32|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr   42  <|@ instruction JUMP ~[] destination: B3 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B9" "B7" "B5" 
    successors 
    xhandlers
    flags 
    probability 4585839534465583581
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  106  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  110  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3661) [bci: 0]
locals: r13|QWORD[.] stack:32|DWORD stack:28|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   60  <|@ instruction r10|DWORD = MOVE input: int[-17761|0xffffffffffffba9f] <|@ <|@
      nr   62  <|@ instruction stack:28|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction stack:32|DWORD = MOVE r14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   66  <|@ instruction JUMP ~[] destination: B5 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576803513614379298
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   78  <|@ instruction r10|DWORD = MOVE input: int[-17761|0xffffffffffffba9f] <|@ <|@
      nr   80  <|@ instruction stack:28|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   82  <|@ instruction stack:32|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction JUMP ~[] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576747014696046040
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ instruction r10|DWORD = MOVE input: int[-17761|0xffffffffffffba9f] <|@ <|@
      nr   98  <|@ instruction stack:28|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction stack:32|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  102  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4576137334868311846
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  140  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  142  <|@ instruction stack:28|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  144  <|@ instruction stack:32|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  146  <|@ instruction JUMP ~[] destination: B13 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction r10|DWORD = MOVE input: int[-7187|0xffffffffffffe3ed] <|@ <|@
      nr   20  <|@ instruction stack:28|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   22  <|@ instruction stack:32|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr   24  <|@ instruction JUMP ~[] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: iload_1       
     2: isub          
     3: istore_3      
     4: iload_3       
     5: ifge          39
     8: new           #2          // java.lang.IllegalArgumentException
    11: dup           
    12: new           #3          // java.lang.StringBuilder
    15: dup           
    16: invokespecial #1          // java.lang.StringBuilder.<init>:()void
    19: iload_1       
    20: invokevirtual #3          // java.lang.StringBuilder.append:(int)java.lang.StringBuilder
    23: ldc           #102        // " > "
    25: invokevirtual #2          // java.lang.StringBuilder.append:(java.lang.String)java.lang.StringBuilder
    28: iload_2       
    29: invokevirtual #3          // java.lang.StringBuilder.append:(int)java.lang.StringBuilder
    32: invokevirtual #4          // java.lang.StringBuilder.toString:()java.lang.String
    35: invokespecial #5          // java.lang.IllegalArgumentException.<init>:(java.lang.String)void
    38: athrow        
    39: iload_3       
    40: newarray      char
    42: astore        4
    44: aload_0       
    45: iload_1       
    46: aload         4
    48: iconst_0      
    49: aload_0       
    50: arraylength   
    51: iload_1       
    52: isub          
    53: iload_3       
    54: invokestatic  #76         // java.lang.Math.min:(int, int)int
    57: invokestatic  #46         // java.lang.System.arraycopy:(java.lang.Object, int, java.lang.Object, int, int)void
    60: aload         4
    62: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@5a5d1c0a slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r14|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction r10|DWORD = SUB (x: rcx|DWORD, ~y: r14|DWORD) size: DWORD <|@ <|@
      nr   12  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   14  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3661) [bci: 0]
locals: r13|QWORD[.] r14|DWORD rcx|DWORD - - 
>@ <|@ instruction NULLCHECK [r13|QWORD[.]] state [bci:0] <|@ <|@
      nr   30  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr   32  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   46  <|@ instruction rsi|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   48  <|@ instruction rdx|DWORD = SUB (x: rsi|DWORD, ~y: r14|DWORD) size: DWORD <|@ <|@
      nr   50  <|@ instruction CMP (x: rdx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   52  <|@ instruction rdx|DWORD = CMOVE (falseValue: rdx|DWORD, ~trueValue: r10|DWORD) condition: > <|@ <|@
      nr   54  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr   56  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction rsi|DWORD = SUB (x: rsi|DWORD, ~y: rdx|DWORD) size: DWORD <|@ <|@
      nr   72  <|@ instruction CMP (x: r14|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr   74  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B11" 
    xhandlers
    flags 
    probability 4606914895974952345
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   88  <|@ instruction rsi|DWORD = SUB (x: r10|DWORD, ~y: rdx|DWORD) size: DWORD <|@ <|@
      nr   90  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr   92  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" "B16" 
    xhandlers
    flags 
    probability 4606827499210655586
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  114  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  116  <|@ instruction r11|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  118  <|@ instruction CMP r10|DWORD y: 16777215 size: DWORD <|@ <|@
      nr  120  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B16" "B14" 
    xhandlers
    flags 
    probability 4605962271244117669
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  124  <|@ instruction r8|DWORD = SHL r10|DWORD size: DWORD <|@ <|@
      nr  126  <|@ instruction r8|DWORD = LEA [r8|DWORD + 23] size: DWORD <|@ <|@
      nr  128  <|@ instruction r8|DWORD = AND r8|DWORD y: -8 size: DWORD <|@ <|@
      nr  130  <|@ instruction r8|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  132  <|@ instruction r9|QWORD = ADD (x: r8|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  134  <|@ instruction CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  136  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B12 -> B16 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605884400727129256
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  150  <|@ instruction MOV (x: [r15|QWORD + 96], y: r9|QWORD) size: QWORD <|@ <|@
      nr  152  <|@ instruction AMD64PREFETCH ~[r8|QWORD + rsi|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  154  <|@ instruction AMD64PREFETCH ~[r8|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  156  <|@ instruction AMD64PREFETCH ~[r8|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  158  <|@ instruction AMD64PREFETCH ~[r8|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  160  <|@ instruction MOV (x: [rsi|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  162  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  164  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr  166  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  168  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  170  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  172  <|@ instruction stack:32|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  174  <|@ instruction r14|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B14 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B36" "B19" 
    xhandlers
    flags 
    probability 4606827499210655585
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  204  <|@ instruction CMP r14|DWORD y: 1 size: DWORD <|@ <|@
      nr  206  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B17 -> B36 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4602323899583285089
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  214  <|@ instruction rdi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  216  <|@ instruction rsi|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr  218  <|@ instruction rdx|QWORD = LEA [rsi|QWORD - 16] size: QWORD <|@ <|@
      nr  220  <|@ instruction TEST (x: rdx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  222  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" 
    xhandlers
    flags 
    probability 4600160829666940297
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  226  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  228  <|@ instruction JUMP ~[] destination: B20 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B27" "B26" 
    xhandlers
    flags 
    probability 4602323899583285089
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  254  <|@ instruction rdx|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr  256  <|@ instruction CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  258  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B24 -> B27 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4600160829666940297
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  266  <|@ instruction xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr  268  <|@ instruction J (address: [rdi|QWORD[.] + r10|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  270  <|@ instruction rdx|QWORD = LEA [r10|QWORD + 8] size: QWORD <|@ <|@
      nr  272  <|@ instruction r10|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction JUMP ~[] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B24" 
    successors "B30" "B29" 
    xhandlers
    flags 
    probability 4602323899583285089
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  278  <|@ instruction rdx|QWORD = LEA [rsi|QWORD - 4] size: QWORD <|@ <|@
      nr  280  <|@ instruction CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  282  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B27 -> B30 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4600160829666940297
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  290  <|@ instruction xmm0|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  292  <|@ instruction J (address: [rdi|QWORD[.] + r10|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  294  <|@ instruction rdx|QWORD = LEA [r10|QWORD + 4] size: QWORD <|@ <|@
      nr  296  <|@ instruction r10|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  298  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B27" 
    successors "B33" "B32" 
    xhandlers
    flags 
    probability 4602323899583285089
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  302  <|@ instruction rdx|QWORD = LEA [rsi|QWORD - 2] size: QWORD <|@ <|@
      nr  304  <|@ instruction CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  306  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B30 -> B33 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4600160829666940297
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  314  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr  316  <|@ instruction J (address: [rdi|QWORD[.] + r10|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  318  <|@ instruction rdx|QWORD = LEA [r10|QWORD + 2] size: QWORD <|@ <|@
      nr  320  <|@ instruction r10|QWORD = MOVE rdx|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  322  <|@ instruction JUMP ~[] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B30" 
    successors "B36" "B35" 
    xhandlers
    flags 
    probability 4602323899583285089
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  326  <|@ instruction rsi|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr  328  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  330  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B33 -> B36 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4600160829666940297
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  338  <|@ instruction MOV (x: [rdi|QWORD[.] + r10|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr  340  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B17" "B35" "B33" 
    successors 
    xhandlers
    flags 
    probability 4606827499210655585
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  344  <|@ instruction r13|QWORD[*] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction rdi|QWORD = MOVSXD stack:32|DWORD size: QWORD <|@ <|@
      nr  350  <|@ instruction rdx|QWORD = MOVSXD stack:36|DWORD size: QWORD <|@ <|@
      nr  352  <|@ instruction rdi|QWORD = LEA [r13|QWORD[*] + rdi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  354  <|@ instruction rsi|QWORD = LEA [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  356  <|@ instruction stack:48|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  360  <|@ instruction rax|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4593316700328544097
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  232  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr  234  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  236  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B22" 
    successors "B24" "B22" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602323899583285089
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  240  <|@ instruction J (address: [rdi|QWORD[.] + r10|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  242  <|@ instruction r10|QWORD = LEA [r10|QWORD + 16] size: QWORD <|@ <|@
      nr  244  <|@ instruction CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  246  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B22 -> B24 falseDestination: B22 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4592209208531375563
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  180  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  182  <|@ instruction stack:28|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  184  <|@ instruction stack:32|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  190  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr  192  <|@ instruction rdx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  194  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  196  <|@ instruction r14|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  198  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3661) [bci: 0]
locals: r13|QWORD[.] stack:32|DWORD stack:28|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  200  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction r10|DWORD = MOVE input: int[-17761|0xffffffffffffba9f] <|@ <|@
      nr   42  <|@ instruction JUMP ~[] destination: B3 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B9" "B7" "B5" 
    successors 
    xhandlers
    flags 
    probability 4585839534465583581
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   20  <|@ instruction stack:28|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   22  <|@ instruction stack:32|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  110  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3661) [bci: 0]
locals: r13|QWORD[.] stack:32|DWORD stack:28|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   60  <|@ instruction r10|DWORD = MOVE input: int[-17761|0xffffffffffffba9f] <|@ <|@
      nr   66  <|@ instruction JUMP ~[] destination: B5 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576803513614379298
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   78  <|@ instruction r10|DWORD = MOVE input: int[-17761|0xffffffffffffba9f] <|@ <|@
      nr   84  <|@ instruction JUMP ~[] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576747014696046040
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ instruction r10|DWORD = MOVE input: int[-17761|0xffffffffffffba9f] <|@ <|@
      nr  102  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction r10|DWORD = MOVE input: int[-7187|0xffffffffffffe3ed] <|@ <|@
      nr   24  <|@ instruction JUMP ~[] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: iload_1       
     2: isub          
     3: istore_3      
     4: iload_3       
     5: ifge          39
     8: new           #2          // java.lang.IllegalArgumentException
    11: dup           
    12: new           #3          // java.lang.StringBuilder
    15: dup           
    16: invokespecial #1          // java.lang.StringBuilder.<init>:()void
    19: iload_1       
    20: invokevirtual #3          // java.lang.StringBuilder.append:(int)java.lang.StringBuilder
    23: ldc           #102        // " > "
    25: invokevirtual #2          // java.lang.StringBuilder.append:(java.lang.String)java.lang.StringBuilder
    28: iload_2       
    29: invokevirtual #3          // java.lang.StringBuilder.append:(int)java.lang.StringBuilder
    32: invokevirtual #4          // java.lang.StringBuilder.toString:()java.lang.String
    35: invokespecial #5          // java.lang.IllegalArgumentException.<init>:(java.lang.String)void
    38: athrow        
    39: iload_3       
    40: newarray      char
    42: astore        4
    44: aload_0       
    45: iload_1       
    46: aload         4
    48: iconst_0      
    49: aload_0       
    50: arraylength   
    51: iload_1       
    52: isub          
    53: iload_3       
    54: invokestatic  #76         // java.lang.Math.min:(int, int)int
    57: invokestatic  #46         // java.lang.System.arraycopy:(java.lang.Object, int, java.lang.Object, int, int)void
    60: aload         4
    62: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 89842400c0feff4883ec2848896c24204c8bee448bf2448bd1452bd64585d20f8c17020000418545004585f60f8ccf010000418b750c8bd6412bd6413bd2410f4fd285d20f8cda0100002bf2443bf60f8fd7010000418bf22bf285f60f8cd2010000498b77604d8b5f704181faffffff000f835d010000458bc241d1e0458d40174183e0f84d63c04d8bc84c03ce4d3bcb0f873d0100004d894f60410f188430c0000000410f18843000010000410f18843040010000410f188430800100004489560c48c70601000000c74608addeadde488bc68954240c4489742410458bf24183fe010f8c86000000488d78104963f6488d56f04885d20f8da900000049c7c200000000488d56f84c3bd20f8f11000000c5f9efc0c4a17a7f0457498d52084c8bd2488d56fc4c3bd20f8f11000000c5f9efc0c4a1f97e0457498d52044c8bd2488d56fe4c3bd20f8f11000000c5f9efc0c4a1797e0457498d52024c8bd248ffce4c3bd60f8f050000006646892457488bf048637c2410486354240c498d7c7d10488d761048890424e80000000090488b0424488b6c24204883c428850500000000c5f877c3c5f9efc049c7c2000000000f1f80000000000f1f8000000000c4a17e7f04574d8d52104c3bd27ef1e931ffffff8954240c894c2414448974241048beaddeaddeaddeadde418bd2b900000000458bf2e80000000090e9dffeffff41ba9fbaffff894c241444897424104589979c0200004d89a7a8020000e8000000009041ba9fbaffffebdb41ba9fbaffffebd341ba9fbaffffebcb41baede3ffffebc3e80000000090e80000000090  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 3  <||@
  Comment 0 1  <||@
  Comment 11 block B0 null  <||@
  Comment 11 0 [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 11 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 16 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@5a5d1c0a slotKind: QWORD  <||@
  Comment 16 6 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 19 8 r14|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 22 10 r10|DWORD = SUB (x: rcx|DWORD, ~y: r14|DWORD) size: DWORD  <||@
  Comment 28 12 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 31 14 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 37 block B2 null  <||@
  Comment 37 26 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 37 28 NULLCHECK [r13|QWORD[.]] state [bci:0]  <||@
  Comment 37 [r13:0]at java.util.Arrays.copyOfRange(Arrays.java:3661) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2          |3  |4 
     locals:  |r13|QWORD[.]  |r14|DWORD  |rcx|DWORD  |-  |-   <||@
  Comment 37 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 41 30 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 44 32 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4  <||@
  Comment 50 block B4 null  <||@
  Comment 50 44 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 50 46 rsi|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD  <||@
  Comment 54 48 rdx|DWORD = SUB (x: rsi|DWORD, ~y: r14|DWORD) size: DWORD  <||@
  Comment 59 50 CMP (x: rdx|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 62 52 rdx|DWORD = CMOVE (falseValue: rdx|DWORD, ~trueValue: r10|DWORD) condition: >  <||@
  Comment 66 54 TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 68 56 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6  <||@
  Comment 74 block B6 null  <||@
  Comment 74 68 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 74 70 rsi|DWORD = SUB (x: rsi|DWORD, ~y: rdx|DWORD) size: DWORD  <||@
  Comment 76 72 CMP (x: r14|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 79 74 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B8  <||@
  Comment 85 block B8 null  <||@
  Comment 85 86 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 85 88 rsi|DWORD = SUB (x: r10|DWORD, ~y: rdx|DWORD) size: DWORD  <||@
  Comment 90 90 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 92 92 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B11  <||@
  Comment 98 block B11 null  <||@
  Comment 98 112 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 98 114 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 102 116 r11|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 106 118 CMP r10|DWORD y: 16777215 size: DWORD  <||@
  Comment 113 120 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B16  <||@
  Comment 119 block B12 null  <||@
  Comment 119 122 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 119 124 r8|DWORD = SHL r10|DWORD size: DWORD  <||@
  Comment 125 126 r8|DWORD = LEA [r8|DWORD + 23] size: DWORD  <||@
  Comment 129 128 r8|DWORD = AND r8|DWORD y: -8 size: DWORD  <||@
  Comment 133 130 r8|QWORD = MOVSXD r8|DWORD size: QWORD  <||@
  Comment 136 132 r9|QWORD = ADD (x: r8|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 142 134 CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 145 136 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B12 -> B16 falseDestination: B12 -> B14  <||@
  Comment 151 block B14 null  <||@
  Comment 151 148 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 151 150 MOV (x: [r15|QWORD + 96], y: r9|QWORD) size: QWORD  <||@
  Comment 155 152 AMD64PREFETCH ~[r8|QWORD + rsi|QWORD * 1 + 192] instr: 0  <||@
  Comment 164 154 AMD64PREFETCH ~[r8|QWORD + rsi|QWORD * 1 + 256] instr: 0  <||@
  Comment 173 156 AMD64PREFETCH ~[r8|QWORD + rsi|QWORD * 1 + 320] instr: 0  <||@
  Comment 182 158 AMD64PREFETCH ~[r8|QWORD + rsi|QWORD * 1 + 384] instr: 0  <||@
  Comment 191 160 MOV (x: [rsi|QWORD + 12], y: r10|DWORD) size: DWORD  <||@
  Comment 195 162 MOV [rsi|QWORD] y: 1 size: QWORD  <||@
  Comment 202 164 MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 202 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 209 166 rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 209 168 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 212 170 stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 216 172 stack:32|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 221 174 r14|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 224 176 JUMP ~[] destination: B14 -> B17  <||@
  Comment 224 block B17 null  <||@
  Comment 224 202 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 224 204 CMP r14|DWORD y: 1 size: DWORD  <||@
  Comment 228 206 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B17 -> B36 falseDestination: B17 -> B19  <||@
  Comment 234 block B19 null  <||@
  Comment 234 212 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 234 214 rdi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 238 216 rsi|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 241 218 rdx|QWORD = LEA [rsi|QWORD - 16] size: QWORD  <||@
  Comment 245 220 TEST (x: rdx|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 248 222 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21  <||@
  Comment 254 block B20 null  <||@
  Comment 254 224 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 254 226 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 261 228 JUMP ~[] destination: B20 -> B24  <||@
  Comment 261 block B24 null  <||@
  Comment 261 252 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 261 254 rdx|QWORD = LEA [rsi|QWORD - 8] size: QWORD  <||@
  Comment 265 256 CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 268 258 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B24 -> B27 falseDestination: B24 -> B26  <||@
  Comment 274 block B26 null  <||@
  Comment 274 264 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 274 266 xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 278 268 J (address: [rdi|QWORD[.] + r10|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 284 270 rdx|QWORD = LEA [r10|QWORD + 8] size: QWORD  <||@
  Comment 288 272 r10|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 291 274 JUMP ~[] destination: B26 -> B27  <||@
  Comment 291 block B27 null  <||@
  Comment 291 276 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 291 278 rdx|QWORD = LEA [rsi|QWORD - 4] size: QWORD  <||@
  Comment 295 280 CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 298 282 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B27 -> B30 falseDestination: B27 -> B29  <||@
  Comment 304 block B29 null  <||@
  Comment 304 288 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 304 290 xmm0|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 308 292 J (address: [rdi|QWORD[.] + r10|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 314 294 rdx|QWORD = LEA [r10|QWORD + 4] size: QWORD  <||@
  Comment 318 296 r10|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 321 298 JUMP ~[] destination: B29 -> B30  <||@
  Comment 321 block B30 null  <||@
  Comment 321 300 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 321 302 rdx|QWORD = LEA [rsi|QWORD - 2] size: QWORD  <||@
  Comment 325 304 CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 328 306 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B30 -> B33 falseDestination: B30 -> B32  <||@
  Comment 334 block B32 null  <||@
  Comment 334 312 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 334 314 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 338 316 J (address: [rdi|QWORD[.] + r10|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 344 318 rdx|QWORD = LEA [r10|QWORD + 2] size: QWORD  <||@
  Comment 348 320 r10|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 351 322 JUMP ~[] destination: B32 -> B33  <||@
  Comment 351 block B33 null  <||@
  Comment 351 324 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 351 326 rsi|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 354 328 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 357 330 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B33 -> B36 falseDestination: B33 -> B35  <||@
  Comment 363 block B35 null  <||@
  Comment 363 336 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 363 338 MOV (x: [rdi|QWORD[.] + r10|QWORD * 2], y: r12|ILLEGAL) size: WORD  <||@
  Comment 368 340 JUMP ~[] destination: B35 -> B36  <||@
  Comment 368 block B36 null  <||@
  Comment 368 342 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 368 344 r13|QWORD[*] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 368 346 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 371 348 rdi|QWORD = MOVSXD stack:32|DWORD size: QWORD  <||@
  Comment 376 350 rdx|QWORD = MOVSXD stack:36|DWORD size: QWORD  <||@
  Comment 381 352 rdi|QWORD = LEA [r13|QWORD[*] + rdi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 386 354 rsi|QWORD = LEA [rsi|QWORD[*] + 16] size: QWORD  <||@
  Comment 390 356 stack:48|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 394 358 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 394 {Field[name=StubRoutines::_jshort_arraycopy, type=address, offset=0, address=0x105a7dc78, value=0x106812d40]:0x106812d40}  <||@
  Comment 400 360 rax|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 404 362 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 413 12  <||@
  Comment 423 block B21 null  <||@
  Comment 423 230 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 423 232 xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 427 234 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 434 236 JUMP ~[] destination: B21 -> B22  <||@
  Comment 434 block B22 loop 0 depth 1 header:207|LoopBegin  <||@
  Comment 434 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 448 240 J (address: [rdi|QWORD[.] + r10|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 454 242 r10|QWORD = LEA [r10|QWORD + 16] size: QWORD  <||@
  Comment 458 244 CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 461 246 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B22 -> B24 falseDestination: B22 -> B22  <||@
  Comment 468 block B16 null  <||@
  Comment 468 188 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 468 180 stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 472 182 stack:28|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 476 184 stack:32|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 481 190 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 481 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 491 192 rdx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 494 194 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 499 196 r14|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 502 198 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 502 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 507 [r13:0]at java.util.Arrays.copyOfRange(Arrays.java:3661) [bci: 0, duringCall: false, rethrow: false]
              |0             |1               |2               |3  |4 
     locals:  |r13|QWORD[.]  |stack:32|DWORD  |stack:28|DWORD  |-  |-   <||@
  Comment 508 200 JUMP ~[] destination: B16 -> B17  <||@
  Comment 513 block B3 null  <||@
  Comment 513 34 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 513 36 r10|DWORD = MOVE input: int[-17761|0xffffffffffffba9f]  <||@
  Comment 519 42 JUMP ~[] destination: B3 -> B10  <||@
  Comment 519 block B10 null  <||@
  Comment 519 104 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 519 20 stack:28|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 523 22 stack:32|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 528 106 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 535 108 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 542 110 DEOPT info [bci:0]  <||@
  Comment 542 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 547 [r13:0]at java.util.Arrays.copyOfRange(Arrays.java:3661) [bci: 0, duringCall: false, rethrow: false]
              |0             |1               |2               |3  |4 
     locals:  |r13|QWORD[.]  |stack:32|DWORD  |stack:28|DWORD  |-  |-   <||@
  Comment 548 block B5 null  <||@
  Comment 548 58 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 548 60 r10|DWORD = MOVE input: int[-17761|0xffffffffffffba9f]  <||@
  Comment 554 66 JUMP ~[] destination: B5 -> B10  <||@
  Comment 556 block B7 null  <||@
  Comment 556 76 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 556 78 r10|DWORD = MOVE input: int[-17761|0xffffffffffffba9f]  <||@
  Comment 562 84 JUMP ~[] destination: B7 -> B10  <||@
  Comment 564 block B9 null  <||@
  Comment 564 94 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 564 96 r10|DWORD = MOVE input: int[-17761|0xffffffffffffba9f]  <||@
  Comment 570 102 JUMP ~[] destination: B9 -> B10  <||@
  Comment 572 block B1 null  <||@
  Comment 572 16 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 572 18 r10|DWORD = MOVE input: int[-7187|0xffffffffffffe3ed]  <||@
  Comment 578 24 JUMP ~[] destination: B1 -> B10  <||@
  Comment 580 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 580 4  <||@
  Comment 586 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 586 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-700[java.util.Arrays.copyOfRange(char[], int, int)]"
  method "HotSpotCompilation-700[java.util.Arrays.copyOfRange(char[], int, int)]"
  date 1527005147424
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 1078b0960 89842400c0feff4883ec2848896c24204c8bee448bf2448bd1452bd64585d20f8c17020000418545004585f60f8ccf010000418b750c8bd6412bd6413bd2410f4fd285d20f8cda0100002bf2443bf60f8fd7010000418bf22bf285f60f8cd2010000498b77604d8b5f704181faffffff000f835d010000458bc241d1e0458d40174183e0f84d63c04d8bc84c03ce4d3bcb0f873d0100004d894f60410f188430c0000000410f18843000010000410f18843040010000410f188430800100004489560c48c70601000000c74608410000f8488bc68954240c4489742410458bf24183fe010f8c86000000488d78104963f6488d56f04885d20f8da900000049c7c200000000488d56f84c3bd20f8f11000000c5f9efc0c4a17a7f0457498d52084c8bd2488d56fc4c3bd20f8f11000000c5f9efc0c4a1f97e0457498d52044c8bd2488d56fe4c3bd20f8f11000000c5f9efc0c4a1797e0457498d52024c8bd248ffce4c3bd60f8f050000006646892457488bf048637c2410486354240c498d7c7d10488d761048890424e85122f6fe90488b0424488b6c24204883c428850503e5fdfcc5f877c3c5f9efc049c7c2000000000f1f80000000000f1f8000000000c4a17e7f04574d8d52104c3bd27ef1e931ffffff8954240c894c2414448974241048be080200c007000000418bd2b900000000458bf2e885626eff90e9dffeffff41ba9fbaffff894c241444897424104589979c0200004d89a7a8020000e87b6af5fe9041ba9fbaffffebdb41ba9fbaffffebd341ba9fbaffffebcb41baede3ffffebc3e8779a39ff90e85169f5fe90  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 3  <||@
  Comment 0 1  <||@
  Comment 11 block B0 null  <||@
  Comment 11 0 [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 11 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 16 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@5a5d1c0a slotKind: QWORD  <||@
  Comment 16 6 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 19 8 r14|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 22 10 r10|DWORD = SUB (x: rcx|DWORD, ~y: r14|DWORD) size: DWORD  <||@
  Comment 28 12 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 31 14 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 37 block B2 null  <||@
  Comment 37 26 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 37 28 NULLCHECK [r13|QWORD[.]] state [bci:0]  <||@
  Comment 37 [r13:0]at java.util.Arrays.copyOfRange(Arrays.java:3661) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2          |3  |4 
     locals:  |r13|QWORD[.]  |r14|DWORD  |rcx|DWORD  |-  |-   <||@
  Comment 37 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 41 30 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 44 32 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4  <||@
  Comment 50 block B4 null  <||@
  Comment 50 44 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 50 46 rsi|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD  <||@
  Comment 54 48 rdx|DWORD = SUB (x: rsi|DWORD, ~y: r14|DWORD) size: DWORD  <||@
  Comment 59 50 CMP (x: rdx|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 62 52 rdx|DWORD = CMOVE (falseValue: rdx|DWORD, ~trueValue: r10|DWORD) condition: >  <||@
  Comment 66 54 TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 68 56 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6  <||@
  Comment 74 block B6 null  <||@
  Comment 74 68 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 74 70 rsi|DWORD = SUB (x: rsi|DWORD, ~y: rdx|DWORD) size: DWORD  <||@
  Comment 76 72 CMP (x: r14|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 79 74 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B8  <||@
  Comment 85 block B8 null  <||@
  Comment 85 86 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 85 88 rsi|DWORD = SUB (x: r10|DWORD, ~y: rdx|DWORD) size: DWORD  <||@
  Comment 90 90 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 92 92 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B11  <||@
  Comment 98 block B11 null  <||@
  Comment 98 112 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 98 114 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 102 116 r11|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 106 118 CMP r10|DWORD y: 16777215 size: DWORD  <||@
  Comment 113 120 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B16  <||@
  Comment 119 block B12 null  <||@
  Comment 119 122 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 119 124 r8|DWORD = SHL r10|DWORD size: DWORD  <||@
  Comment 125 126 r8|DWORD = LEA [r8|DWORD + 23] size: DWORD  <||@
  Comment 129 128 r8|DWORD = AND r8|DWORD y: -8 size: DWORD  <||@
  Comment 133 130 r8|QWORD = MOVSXD r8|DWORD size: QWORD  <||@
  Comment 136 132 r9|QWORD = ADD (x: r8|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 142 134 CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 145 136 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B12 -> B16 falseDestination: B12 -> B14  <||@
  Comment 151 block B14 null  <||@
  Comment 151 148 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 151 150 MOV (x: [r15|QWORD + 96], y: r9|QWORD) size: QWORD  <||@
  Comment 155 152 AMD64PREFETCH ~[r8|QWORD + rsi|QWORD * 1 + 192] instr: 0  <||@
  Comment 164 154 AMD64PREFETCH ~[r8|QWORD + rsi|QWORD * 1 + 256] instr: 0  <||@
  Comment 173 156 AMD64PREFETCH ~[r8|QWORD + rsi|QWORD * 1 + 320] instr: 0  <||@
  Comment 182 158 AMD64PREFETCH ~[r8|QWORD + rsi|QWORD * 1 + 384] instr: 0  <||@
  Comment 191 160 MOV (x: [rsi|QWORD + 12], y: r10|DWORD) size: DWORD  <||@
  Comment 195 162 MOV [rsi|QWORD] y: 1 size: QWORD  <||@
  Comment 202 164 MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 202 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 209 166 rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 209 168 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 212 170 stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 216 172 stack:32|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 221 174 r14|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 224 176 JUMP ~[] destination: B14 -> B17  <||@
  Comment 224 block B17 null  <||@
  Comment 224 202 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 224 204 CMP r14|DWORD y: 1 size: DWORD  <||@
  Comment 228 206 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B17 -> B36 falseDestination: B17 -> B19  <||@
  Comment 234 block B19 null  <||@
  Comment 234 212 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 234 214 rdi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 238 216 rsi|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 241 218 rdx|QWORD = LEA [rsi|QWORD - 16] size: QWORD  <||@
  Comment 245 220 TEST (x: rdx|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 248 222 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21  <||@
  Comment 254 block B20 null  <||@
  Comment 254 224 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 254 226 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 261 228 JUMP ~[] destination: B20 -> B24  <||@
  Comment 261 block B24 null  <||@
  Comment 261 252 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 261 254 rdx|QWORD = LEA [rsi|QWORD - 8] size: QWORD  <||@
  Comment 265 256 CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 268 258 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B24 -> B27 falseDestination: B24 -> B26  <||@
  Comment 274 block B26 null  <||@
  Comment 274 264 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 274 266 xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 278 268 J (address: [rdi|QWORD[.] + r10|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 284 270 rdx|QWORD = LEA [r10|QWORD + 8] size: QWORD  <||@
  Comment 288 272 r10|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 291 274 JUMP ~[] destination: B26 -> B27  <||@
  Comment 291 block B27 null  <||@
  Comment 291 276 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 291 278 rdx|QWORD = LEA [rsi|QWORD - 4] size: QWORD  <||@
  Comment 295 280 CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 298 282 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B27 -> B30 falseDestination: B27 -> B29  <||@
  Comment 304 block B29 null  <||@
  Comment 304 288 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 304 290 xmm0|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 308 292 J (address: [rdi|QWORD[.] + r10|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 314 294 rdx|QWORD = LEA [r10|QWORD + 4] size: QWORD  <||@
  Comment 318 296 r10|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 321 298 JUMP ~[] destination: B29 -> B30  <||@
  Comment 321 block B30 null  <||@
  Comment 321 300 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 321 302 rdx|QWORD = LEA [rsi|QWORD - 2] size: QWORD  <||@
  Comment 325 304 CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 328 306 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B30 -> B33 falseDestination: B30 -> B32  <||@
  Comment 334 block B32 null  <||@
  Comment 334 312 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 334 314 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 338 316 J (address: [rdi|QWORD[.] + r10|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 344 318 rdx|QWORD = LEA [r10|QWORD + 2] size: QWORD  <||@
  Comment 348 320 r10|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 351 322 JUMP ~[] destination: B32 -> B33  <||@
  Comment 351 block B33 null  <||@
  Comment 351 324 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 351 326 rsi|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 354 328 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 357 330 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B33 -> B36 falseDestination: B33 -> B35  <||@
  Comment 363 block B35 null  <||@
  Comment 363 336 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 363 338 MOV (x: [rdi|QWORD[.] + r10|QWORD * 2], y: r12|ILLEGAL) size: WORD  <||@
  Comment 368 340 JUMP ~[] destination: B35 -> B36  <||@
  Comment 368 block B36 null  <||@
  Comment 368 342 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 368 344 r13|QWORD[*] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 368 346 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 371 348 rdi|QWORD = MOVSXD stack:32|DWORD size: QWORD  <||@
  Comment 376 350 rdx|QWORD = MOVSXD stack:36|DWORD size: QWORD  <||@
  Comment 381 352 rdi|QWORD = LEA [r13|QWORD[*] + rdi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 386 354 rsi|QWORD = LEA [rsi|QWORD[*] + 16] size: QWORD  <||@
  Comment 390 356 stack:48|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 394 358 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 394 {Field[name=StubRoutines::_jshort_arraycopy, type=address, offset=0, address=0x105a7dc78, value=0x106812d40]:0x106812d40}  <||@
  Comment 400 360 rax|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 404 362 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 413 12  <||@
  Comment 423 block B21 null  <||@
  Comment 423 230 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 423 232 xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 427 234 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 434 236 JUMP ~[] destination: B21 -> B22  <||@
  Comment 434 block B22 loop 0 depth 1 header:207|LoopBegin  <||@
  Comment 434 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 448 240 J (address: [rdi|QWORD[.] + r10|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 454 242 r10|QWORD = LEA [r10|QWORD + 16] size: QWORD  <||@
  Comment 458 244 CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 461 246 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B22 -> B24 falseDestination: B22 -> B22  <||@
  Comment 468 block B16 null  <||@
  Comment 468 188 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 468 180 stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 472 182 stack:28|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 476 184 stack:32|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 481 190 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 481 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 491 192 rdx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 494 194 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 499 196 r14|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 502 198 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 502 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 507 [r13:0]at java.util.Arrays.copyOfRange(Arrays.java:3661) [bci: 0, duringCall: false, rethrow: false]
              |0             |1               |2               |3  |4 
     locals:  |r13|QWORD[.]  |stack:32|DWORD  |stack:28|DWORD  |-  |-   <||@
  Comment 508 200 JUMP ~[] destination: B16 -> B17  <||@
  Comment 513 block B3 null  <||@
  Comment 513 34 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 513 36 r10|DWORD = MOVE input: int[-17761|0xffffffffffffba9f]  <||@
  Comment 519 42 JUMP ~[] destination: B3 -> B10  <||@
  Comment 519 block B10 null  <||@
  Comment 519 104 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 519 20 stack:28|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 523 22 stack:32|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 528 106 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 535 108 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 542 110 DEOPT info [bci:0]  <||@
  Comment 542 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 547 [r13:0]at java.util.Arrays.copyOfRange(Arrays.java:3661) [bci: 0, duringCall: false, rethrow: false]
              |0             |1               |2               |3  |4 
     locals:  |r13|QWORD[.]  |stack:32|DWORD  |stack:28|DWORD  |-  |-   <||@
  Comment 548 block B5 null  <||@
  Comment 548 58 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 548 60 r10|DWORD = MOVE input: int[-17761|0xffffffffffffba9f]  <||@
  Comment 554 66 JUMP ~[] destination: B5 -> B10  <||@
  Comment 556 block B7 null  <||@
  Comment 556 76 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 556 78 r10|DWORD = MOVE input: int[-17761|0xffffffffffffba9f]  <||@
  Comment 562 84 JUMP ~[] destination: B7 -> B10  <||@
  Comment 564 block B9 null  <||@
  Comment 564 94 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 564 96 r10|DWORD = MOVE input: int[-17761|0xffffffffffffba9f]  <||@
  Comment 570 102 JUMP ~[] destination: B9 -> B10  <||@
  Comment 572 block B1 null  <||@
  Comment 572 16 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 572 18 r10|DWORD = MOVE input: int[-7187|0xffffffffffffe3ed]  <||@
  Comment 578 24 JUMP ~[] destination: B1 -> B10  <||@
  Comment 580 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 580 4  <||@
  Comment 586 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 586 5  <||@
  HexCodeFile>>> <|@
end_nmethod
