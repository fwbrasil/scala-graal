begin_compilation
  name " HotSpotCompilation-3772[sun.nio.cs.StreamEncoder.implWrite(char[], int, int)]"
  method "HotSpotCompilation-3772[sun.nio.cs.StreamEncoder.implWrite(char[], int, int)]"
  date 1527005127646
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i1661 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: i1661  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Lsun/nio/cs/StreamEncoder;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v1037 v1689 ?16 ?1434 v1692 v1693 ?26 ?103 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# [C
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 a1426 v1688 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v190 i145 v192 v1582 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 i145 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?5 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<StreamEncoder.implWrite(char[], int, int)>
duringCall: false
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: StreamEncoder.java
sourceLine: 265
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 i4 - - 
=== Succesors ===
=== Usages ===
v1444 a1543 i1661 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 i4 - -  <|@  <|@
f <@~|@floating>@ <|@
tid v1688 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i1661 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1661 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 7]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 3]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v1688 
=== Succesors ===
next: v1259 
=== Usages ===
v173 v1586 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v1688 #next: v1259  <|@  <|@
f <@~|@floating>@ <|@
tid i145 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 5]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 3]
stamp: i32
=== Inputs ===
x: i3 
y: i4 
=== Succesors ===
=== Usages ===
v175 v1584 v190 v173 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i3 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:274) [bci: 5]
at java.nio.Buffer.<init>(Buffer.java:201) [bci: 55]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1661 
y: i145 
=== Succesors ===
=== Usages ===
v1259 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1661 y: i145  <|@  <|@
f <@~|@floating>@ <|@
tid a1441 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1444 v1525 v1480 v1460 v1497 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1259 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:274) [bci: 5]
at java.nio.Buffer.<init>(Buffer.java:201) [bci: 55]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 3]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v173 
=== Succesors ===
trueSuccessor: v1258 
falseSuccessor: v1256 
=== Usages ===
=== Predecessor ===
i1661 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v173 #trueSuccessor: v1258 #falseSuccessor: v1256  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1258 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:274) [bci: 5]
at java.nio.Buffer.<init>(Buffer.java:201) [bci: 55]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1445 
=== Usages ===
=== Predecessor ===
v1259 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1445  <|@  <|@
f <@~|@floating>@ <|@
tid i1446 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -242963
stableDimension: 0
stamp: i32 [-242963] ⇊00000000fffc4aed ⇈00000000fffc4aed
stampKind: i32
value: int[-242963|0xfffffffffffc4aed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1442 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1445 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1438 
=== Predecessor ===
v1258 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1256 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:274) [bci: 5]
at java.nio.Buffer.<init>(Buffer.java:201) [bci: 55]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1263 
=== Usages ===
=== Predecessor ===
v1259 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1263  <|@  <|@
f <@~|@floating>@ <|@
tid i10 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:267) [bci: 12]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v11 ?227 v555 v497 v522 v730 v73 v599 v1588 v175 v192 v1580 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v175 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:274) [bci: 9]
at java.nio.Buffer.<init>(Buffer.java:201) [bci: 55]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i145 
y: i10 
=== Succesors ===
=== Usages ===
v1263 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i145 y: i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v1263 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:274) [bci: 9]
at java.nio.Buffer.<init>(Buffer.java:201) [bci: 55]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 3]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v175 
=== Succesors ===
trueSuccessor: v1262 
falseSuccessor: v1260 
=== Usages ===
=== Predecessor ===
v1256 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v175 #trueSuccessor: v1262 #falseSuccessor: v1260  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1262 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:274) [bci: 9]
at java.nio.Buffer.<init>(Buffer.java:201) [bci: 55]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1447 
=== Usages ===
=== Predecessor ===
v1263 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1447  <|@  <|@
f <@~|@floating>@ <|@
tid i1448 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -243219
stableDimension: 0
stamp: i32 [-243219] ⇊00000000fffc49ed ⇈00000000fffc49ed
stampKind: i32
value: int[-243219|0xfffffffffffc49ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1442 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1447 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1438 
=== Predecessor ===
v1262 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1260 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:274) [bci: 9]
at java.nio.Buffer.<init>(Buffer.java:201) [bci: 55]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1267 
=== Usages ===
=== Predecessor ===
v1263 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1267  <|@  <|@
f <@~|@floating>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at java.nio.Buffer.<init>(Buffer.java:202) [bci: 61]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i145 
y: i3 
=== Succesors ===
=== Usages ===
v1267 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i145 y: i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v1267 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at java.nio.Buffer.<init>(Buffer.java:202) [bci: 61]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 3]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v190 
=== Succesors ===
trueSuccessor: v1266 
falseSuccessor: v1264 
=== Usages ===
=== Predecessor ===
v1260 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v190 #trueSuccessor: v1266 #falseSuccessor: v1264  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1266 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at java.nio.Buffer.<init>(Buffer.java:202) [bci: 61]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1449 
=== Usages ===
=== Predecessor ===
v1267 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1449  <|@  <|@
f <@~|@floating>@ <|@
tid i1450 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -243475
stableDimension: 0
stamp: i32 [-243475] ⇊00000000fffc48ed ⇈00000000fffc48ed
stampKind: i32
value: int[-243475|0xfffffffffffc48ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1442 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1449 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1438 
=== Predecessor ===
v1266 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1264 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at java.nio.Buffer.<init>(Buffer.java:202) [bci: 61]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1271 
=== Usages ===
=== Predecessor ===
v1267 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1271  <|@  <|@
f <@~|@floating>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at java.nio.Buffer.<init>(Buffer.java:202) [bci: 61]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i10 
=== Succesors ===
=== Usages ===
v1271 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v1271 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at java.nio.Buffer.<init>(Buffer.java:202) [bci: 61]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 3]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v192 
=== Succesors ===
trueSuccessor: v1270 
falseSuccessor: v1268 
=== Usages ===
=== Predecessor ===
v1264 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v192 #trueSuccessor: v1270 #falseSuccessor: v1268  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1270 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at java.nio.Buffer.<init>(Buffer.java:202) [bci: 61]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1451 
=== Usages ===
=== Predecessor ===
v1271 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1451  <|@  <|@
f <@~|@floating>@ <|@
tid i1452 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -243731
stableDimension: 0
stamp: i32 [-243731] ⇊00000000fffc47ed ⇈00000000fffc47ed
stampKind: i32
value: int[-243731|0xfffffffffffc47ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1442 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1451 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1438 
=== Predecessor ===
v1270 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B117" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1268 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at java.nio.Buffer.<init>(Buffer.java:202) [bci: 61]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1662 
=== Usages ===
=== Predecessor ===
v1271 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1662  <|@  <|@
f <@~|@floating>@ <|@
tid v1689 <|@
d <@d|@=== Debug Properties ===
displacement: 23
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1662 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1662 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: StreamEncoder.haveLeftoverChar
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:267) [bci: 9]
nullCheck: false
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
stateBefore: - 
guard: - 
address: v1689 
=== Succesors ===
next: v1275 
=== Usages ===
i956 
=== Predecessor ===
v1268 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1689 #next: v1275  <|@  <|@
f <@~|@floating>@ <|@
tid i956 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:267) [bci: 9]
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i1662 
=== Succesors ===
=== Usages ===
v11 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1662  <|@  <|@
f <@~|@floating>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:267) [bci: 12]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i956 
y: i10 
=== Succesors ===
=== Usages ===
v1275 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i956 y: i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v1275 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:267) [bci: 12]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v11 
=== Succesors ===
trueSuccessor: v1272 
falseSuccessor: v1274 
=== Usages ===
=== Predecessor ===
i1662 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v11 #trueSuccessor: v1272 #falseSuccessor: v1274  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1272 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:267) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1531 
=== Usages ===
=== Predecessor ===
v1275 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1531  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1531 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1550 
=== Usages ===
v1715 v1716 
=== Predecessor ===
v1272 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1550  <|@  <|@
f <@~|@floating>@ <|@
tid v1715 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1531 
index: - 
=== Succesors ===
=== Usages ===
j1550 v1552 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1531 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1550 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1715 
=== Succesors ===
next: j1551 
=== Usages ===
j1595 j1556 v1720 
=== Predecessor ===
j1531 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1715 #next: j1551  <|@  <|@
f <@~|@floating>@ <|@
tid v1716 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1531 
index: - 
=== Succesors ===
=== Usages ===
j1551 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1531 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1551 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1716 
=== Succesors ===
next: v1539 
=== Usages ===
v1536 
=== Predecessor ===
j1550 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1716 #next: v1539  <|@  <|@
f <@~|@floating>@ <|@
tid j1594 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 48
stableDimension: 0
stamp: i64 [48] ⇊0000000000000030 ⇈0000000000000030
stampKind: i64
value: long[48|0x30]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1595 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1595 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1550 
y: j1594 
=== Succesors ===
=== Usages ===
v1536 v1552 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1550 y: j1594  <|@  <|@
f <@~|@floating>@ <|@
tid v1536 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1551 
y: j1595 
=== Succesors ===
=== Usages ===
v1539 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1551 y: j1595  <|@  <|@
f <@~|@floating>@ <|@
tid i41 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:281) [bci: 116]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v54 v117 v78 v1117 v1087 i309 i381 i341 i308 v894 a1543 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1539 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1536 
=== Succesors ===
trueSuccessor: v1537 
falseSuccessor: v1538 
=== Usages ===
=== Predecessor ===
j1551 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1536 #trueSuccessor: v1537 #falseSuccessor: v1538  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1537 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a1543 
=== Usages ===
=== Predecessor ===
v1539 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1543  <|@  <|@
f <@~|@floating>@ <|@
tid v1529 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a1543 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1597 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 8
stableDimension: 0
stamp: i32 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1543 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1543 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?5 
arguments: v1529 i1597 i41 
=== Succesors ===
next: j1544 
=== Usages ===
j1544 
=== Predecessor ===
v1537 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?5 arguments: v1529 i1597 i41 #next: j1544  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1544 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1543 
=== Succesors ===
next: v1557 
=== Usages ===
j1556 
=== Predecessor ===
a1543 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1543 #next: v1557  <|@  <|@
f <@*|@fixed>@ <|@
tid v1557 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1554 
=== Predecessor ===
j1544 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1538 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1552 
=== Usages ===
=== Predecessor ===
v1539 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1552  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1552 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1715 
value: j1595 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1548 
=== Usages ===
=== Predecessor ===
v1538 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1715 value: j1595 stateAfter: - lastLocationAccess: - #next: v1548  <|@  <|@
f <@~|@floating>@ <|@
tid v1720 <|@
d <@d|@=== Debug Properties ===
displacement: 240
scale: Times1
stamp: void*
=== Inputs ===
base: j1550 
index: - 
=== Succesors ===
=== Usages ===
v1548 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1550 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1548 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v1720 
=== Succesors ===
next: v1555 
=== Usages ===
=== Predecessor ===
v1552 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1720 #next: v1555  <|@  <|@
f <@*|@fixed>@ <|@
tid v1555 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1554 
=== Predecessor ===
v1548 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1556 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1554 
values: j1550 j1544 
=== Succesors ===
=== Usages ===
v1719 v1718 a1422 v1721 v1722 v1723 v1724 v1725 v1726 v1727 v1728 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1554 values: j1550 j1544  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1554 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1555 v1557 
=== Succesors ===
next: a1422 
=== Usages ===
j1556 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1555 v1557 #next: a1422  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1422 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j1556 
=== Succesors ===
next: j1568 
=== Usages ===
a1429 
=== Predecessor ===
v1554 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1556 #next: j1568  <|@  <|@
f <@~|@floating>@ <|@
tid v1562 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j1563 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1563 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v1562 
=== Succesors ===
=== Usages ===
v1717 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v1562  <|@  <|@
f <@~|@floating>@ <|@
tid v1717 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j1563 
index: - 
=== Succesors ===
=== Usages ===
j1568 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1563 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1568 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1717 
=== Succesors ===
next: v1569 
=== Usages ===
v1569 
=== Predecessor ===
a1422 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1717 #next: v1569  <|@  <|@
f <@~|@floating>@ <|@
tid v1718 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1556 
index: - 
=== Succesors ===
=== Usages ===
v1569 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1556 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1569 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1718 
value: j1568 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1573 
=== Usages ===
=== Predecessor ===
j1568 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1718 value: j1568 stateAfter: - lastLocationAccess: - #next: v1573  <|@  <|@
f <@~|@floating>@ <|@
tid v1719 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1556 
index: - 
=== Succesors ===
=== Usages ===
v1573 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1556 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1600 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1573 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1573 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1719 
value: v1600 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1578 
=== Usages ===
=== Predecessor ===
v1569 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1719 value: v1600 stateAfter: - lastLocationAccess: - #next: v1578  <|@  <|@
f <@~|@floating>@ <|@
tid v1721 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1556 
index: - 
=== Succesors ===
=== Usages ===
v1578 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1556 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1576 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4294967295
stableDimension: 0
stamp: i64 [4294967295] ⇊00000000ffffffff ⇈00000000ffffffff
stampKind: i64
value: long[4294967295|0xffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1578 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1578 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1721 
value: j1576 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1580 
=== Usages ===
=== Predecessor ===
v1573 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1721 value: j1576 stateAfter: - lastLocationAccess: - #next: v1580  <|@  <|@
f <@~|@floating>@ <|@
tid v1722 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j1556 
index: - 
=== Succesors ===
=== Usages ===
v1580 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1556 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1580 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1722 
value: i10 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1582 
=== Usages ===
=== Predecessor ===
v1578 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1722 value: i10 stateAfter: - lastLocationAccess: - #next: v1582  <|@  <|@
f <@~|@floating>@ <|@
tid v1723 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j1556 
index: - 
=== Succesors ===
=== Usages ===
v1582 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1556 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1582 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1723 
value: i3 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1584 
=== Usages ===
=== Predecessor ===
v1580 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1723 value: i3 stateAfter: - lastLocationAccess: - #next: v1584  <|@  <|@
f <@~|@floating>@ <|@
tid v1724 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: j1556 
index: - 
=== Succesors ===
=== Usages ===
v1584 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1556 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1584 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1724 
value: i145 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1586 
=== Usages ===
=== Predecessor ===
v1582 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1724 value: i145 stateAfter: - lastLocationAccess: - #next: v1586  <|@  <|@
f <@~|@floating>@ <|@
tid v1725 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: j1556 
index: - 
=== Succesors ===
=== Usages ===
v1586 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1556 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1586 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1725 
value: i1661 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1588 
=== Usages ===
=== Predecessor ===
v1584 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1725 value: i1661 stateAfter: - lastLocationAccess: - #next: v1588  <|@  <|@
f <@~|@floating>@ <|@
tid v1726 <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times1
stamp: void*
=== Inputs ===
base: j1556 
index: - 
=== Succesors ===
=== Usages ===
v1588 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1556 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1588 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1726 
value: i10 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1591 
=== Usages ===
=== Predecessor ===
v1586 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1726 value: i10 stateAfter: - lastLocationAccess: - #next: v1591  <|@  <|@
f <@~|@floating>@ <|@
tid v1727 <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
=== Inputs ===
base: j1556 
index: - 
=== Succesors ===
=== Usages ===
v1591 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1556 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i1589 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i8
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1591 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1591 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1727 
value: i1589 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1593 
=== Usages ===
=== Predecessor ===
v1588 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1727 value: i1589 stateAfter: - lastLocationAccess: - #next: v1593  <|@  <|@
f <@~|@floating>@ <|@
tid v1728 <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times1
stamp: void*
=== Inputs ===
base: j1556 
index: - 
=== Succesors ===
=== Usages ===
v1593 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1556 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a1426 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n# [C
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v1593 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1593 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1728 
value: a1426 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1429 
=== Usages ===
=== Predecessor ===
v1591 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1728 value: a1426 stateAfter: - lastLocationAccess: - #next: a1429  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1429 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1422 
=== Succesors ===
next: v1430 
=== Usages ===
v1705 ?866 v1690 v1691 v1707 v1708 v1709 v1029 
=== Predecessor ===
v1593 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1422 #next: v1430  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1430 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v14 
=== Usages ===
=== Predecessor ===
a1429 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v14  <|@  <|@
f <@*|@fixed>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v15 
=== Predecessor ===
v1430 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B75" 
    successors "B14" "B115" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607182529020635733
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 1.0000244738936506
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v14 
=== Succesors ===
next: a1663 
=== Usages ===
v33 v46 v834 v1414 v1409 v1404 v1399 v1394 v1389 v1384 v1294 v1378 v1304 v1309 v1314 v1319 v1324 v1329 v1335 v1372 v1345 v1354 v1360 v1366 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v14 #next: a1663  <|@  <|@
f <@~|@floating>@ <|@
tid v1707 <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times1
stamp: void*
=== Inputs ===
base: a1429 
index: - 
=== Succesors ===
=== Usages ===
a1663 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1429 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1663 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CharBuffer.hb
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:970) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v1707 
=== Succesors ===
next: v1729 
=== Usages ===
v1729 a1119 v1695 
=== Predecessor ===
v15 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1707 #next: v1729  <|@  <|@
tid a133 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@67262f52
hasIdentity: true
objectId: 0
stamp: a!# Ljava/nio/HeapCharBuffer;
type: HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?212 ?1434 ?389 ?212 ?16 ?321 ?103 ?316 ?227 ?26 ?280 ?866 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?866 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a133 
materializedValue: a1429 
=== Succesors ===
=== Usages ===
?16 ?321 ?1433 ?280 ?26 ?385 ?525 ?1434 ?316 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a133 materializedValue: a1429  <|@  <|@
tid ?16 <|@
d <@d|@=== Debug Properties ===
bci: 22
code: ResolvedJavaMethodBytecode<StreamEncoder.implWrite(char[], int, int)>
duringCall: false
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: StreamEncoder.java
sourceLine: 270
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - a133 - 
virtualObjectMappings: ?866 
=== Succesors ===
=== Usages ===
v1460 v1729 a1665 v1730 v1731 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - a133 - virtualObjectMappings: ?866  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1729 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?16 
object: a1663 
=== Succesors ===
next: a1664 
=== Usages ===
=== Predecessor ===
a1663 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?16 object: a1663 #next: a1664  <|@  <|@
f <@~|@floating>@ <|@
tid v1693 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1664 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1664 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: StreamEncoder.bb
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 37]
nullCheck: false
stamp: n Ljava/nio/ByteBuffer;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1693 
=== Succesors ===
next: a1665 
=== Usages ===
a971 v1714 v1706 v1710 v1711 v1712 v1713 
=== Predecessor ===
v1729 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1693 #next: a1665  <|@  <|@
f <@~|@floating>@ <|@
tid v1710 <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1664 
=== Succesors ===
=== Usages ===
a1665 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1664  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1665 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ByteBuffer.hb
nodeSourcePosition: at java.nio.ByteBuffer.hasArray(ByteBuffer.java:970) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 8]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: true
stamp: n# [B
=== Inputs ===
stateBefore: ?16 
guard: - 
address: v1710 
=== Succesors ===
next: v1730 
=== Usages ===
?321 v1730 v1697 v1698 v1700 v1702 v1703 v1704 ?316 ?280 v1732 
=== Predecessor ===
a1664 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?16 guard: - address: v1710 #next: v1730  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1730 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?16 
object: a1665 
=== Succesors ===
next: i1666 
=== Usages ===
=== Predecessor ===
a1665 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?16 object: a1665 #next: i1666  <|@  <|@
f <@~|@floating>@ <|@
tid v1690 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1429 
index: - 
=== Succesors ===
=== Usages ===
i1666 i1683 v1074 i1686 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1429 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1666 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.position
nodeSourcePosition: at java.nio.Buffer.hasRemaining(Buffer.java:402) [bci: 1]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 24]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1690 
=== Succesors ===
next: i1667 
=== Usages ===
v66 i732 
=== Predecessor ===
v1730 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1690 #next: i1667  <|@  <|@
f <@~|@floating>@ <|@
tid v1691 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1429 
index: - 
=== Succesors ===
=== Usages ===
i1667 i1682 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1429 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1667 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.limit
nodeSourcePosition: at java.nio.Buffer.hasRemaining(Buffer.java:402) [bci: 5]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 24]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1691 
=== Succesors ===
next: v1295 
=== Usages ===
v66 i893 v495 i733 
=== Predecessor ===
i1666 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1691 #next: v1295  <|@  <|@
f <@~|@floating>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.hasRemaining(Buffer.java:402) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 24]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1666 
y: i1667 
=== Succesors ===
=== Usages ===
v1295 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1666 y: i1667  <|@  <|@
f <@*|@fixed>@ <|@
tid v1295 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 27]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v66 
=== Succesors ===
trueSuccessor: v1291 
falseSuccessor: v1294 
=== Usages ===
=== Predecessor ===
i1667 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v66 #trueSuccessor: v1291 #falseSuccessor: v1294  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B114" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182529020635733
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1291 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1668 
=== Usages ===
=== Predecessor ===
v1295 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1668  <|@  <|@
f <@~|@floating>@ <|@
tid v1692 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1668 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1668 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: StreamEncoder.encoder
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 31]
nullCheck: false
stamp: n# Lsun/nio/cs/UTF_8$Encoder;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1692 
=== Succesors ===
next: v1731 
=== Usages ===
?316 v1731 v1694 ?321 ?227 ?280 
=== Predecessor ===
v1291 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1692 #next: v1731  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1731 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?16 
object: a1668 
=== Succesors ===
next: i1669 
=== Usages ===
=== Predecessor ===
a1668 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?16 object: a1668 #next: i1669  <|@  <|@
f <@~|@floating>@ <|@
tid v1708 <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
=== Inputs ===
base: a1429 
index: - 
=== Succesors ===
=== Usages ===
i1669 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1429 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1669 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CharBuffer.isReadOnly
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:970) [bci: 8]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: false
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
stateBefore: - 
guard: - 
address: v1708 
=== Succesors ===
next: v1305 
=== Usages ===
i1122 
=== Predecessor ===
v1731 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1708 #next: v1305  <|@  <|@
f <@~|@floating>@ <|@
tid i1122 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:970) [bci: 8]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i1669 
=== Succesors ===
=== Usages ===
v599 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1669  <|@  <|@
f <@~|@floating>@ <|@
tid v599 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:970) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1122 
y: i10 
=== Succesors ===
=== Usages ===
v1305 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1122 y: i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v1305 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:970) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v599 
=== Succesors ===
trueSuccessor: v1301 
falseSuccessor: v1304 
=== Usages ===
=== Predecessor ===
i1669 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v599 #trueSuccessor: v1301 #falseSuccessor: v1304  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B113" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182529020635733
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1301 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:970) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1670 
=== Usages ===
=== Predecessor ===
v1305 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1670  <|@  <|@
f <@~|@floating>@ <|@
tid v1711 <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1664 
=== Succesors ===
=== Usages ===
i1670 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1664  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1670 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ByteBuffer.isReadOnly
nodeSourcePosition: at java.nio.ByteBuffer.hasArray(ByteBuffer.java:970) [bci: 8]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 8]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: false
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
stateBefore: - 
guard: - 
address: v1711 
=== Succesors ===
next: v1310 
=== Usages ===
i1131 
=== Predecessor ===
v1301 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1711 #next: v1310  <|@  <|@
f <@~|@floating>@ <|@
tid i1131 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.nio.ByteBuffer.hasArray(ByteBuffer.java:970) [bci: 8]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 8]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i1670 
=== Succesors ===
=== Usages ===
v730 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1670  <|@  <|@
f <@~|@floating>@ <|@
tid v730 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.ByteBuffer.hasArray(ByteBuffer.java:970) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 8]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1131 
y: i10 
=== Succesors ===
=== Usages ===
v1310 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1131 y: i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v1310 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.ByteBuffer.hasArray(ByteBuffer.java:970) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 8]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v730 
=== Succesors ===
trueSuccessor: v1306 
falseSuccessor: v1309 
=== Usages ===
=== Predecessor ===
i1670 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v730 #trueSuccessor: v1306 #falseSuccessor: v1309  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182529020635733
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1306 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.ByteBuffer.hasArray(ByteBuffer.java:970) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 8]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1671 
=== Usages ===
=== Predecessor ===
v1310 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1671  <|@  <|@
f <@~|@floating>@ <|@
tid v1694 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1668 
=== Succesors ===
=== Usages ===
i1671 v1087 v1117 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1668  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1671 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CharsetEncoder.state
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:570) [bci: 12]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1694 
=== Succesors ===
next: i1672 
=== Usages ===
v73 v78 
=== Predecessor ===
v1306 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1694 #next: i1672  <|@  <|@
f <@~|@floating>@ <|@
tid v1712 <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1664 
=== Succesors ===
=== Usages ===
i1672 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1664  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1672 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ByteBuffer.offset
nodeSourcePosition: at java.nio.ByteBuffer.arrayOffset(ByteBuffer.java:1025) [bci: 31]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:590) [bci: 34]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1712 
=== Succesors ===
next: i1673 
=== Usages ===
i735 i737 i476 
=== Predecessor ===
i1671 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1712 #next: i1673  <|@  <|@
f <@~|@floating>@ <|@
tid v1714 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1664 
=== Succesors ===
=== Usages ===
i1673 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1664  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1673 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.limit
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:256) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:591) [bci: 49]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1714 
=== Succesors ===
next: i1674 
=== Usages ===
i737 v520 
=== Predecessor ===
i1672 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1714 #next: i1674  <|@  <|@
f <@~|@floating>@ <|@
tid v1713 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1664 
=== Succesors ===
=== Usages ===
i1674 v1081 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1664  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1674 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.position
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:226) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:590) [bci: 38]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1713 
=== Succesors ===
next: i1675 
=== Usages ===
i735 
=== Predecessor ===
i1673 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1713 #next: i1675  <|@  <|@
f <@~|@floating>@ <|@
tid v1709 <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times1
stamp: void*
=== Inputs ===
base: a1429 
index: - 
=== Succesors ===
=== Usages ===
i1675 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1429 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1675 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CharBuffer.offset
nodeSourcePosition: at java.nio.CharBuffer.arrayOffset(CharBuffer.java:1025) [bci: 31]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:586) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1709 
=== Succesors ===
next: v1315 
=== Usages ===
i469 i733 i732 
=== Predecessor ===
i1674 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1709 #next: v1315  <|@  <|@
f <@~|@floating>@ <|@
tid i737 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:591) [bci: 52]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: i32
=== Inputs ===
x: i1672 
y: i1673 
=== Succesors ===
=== Usages ===
i739 i354 v334 i800 i800 ?316 ?321 ?280 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1672 y: i1673  <|@  <|@
f <@~|@floating>@ <|@
tid i735 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:590) [bci: 41]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: i32
=== Inputs ===
x: i1672 
y: i1674 
=== Succesors ===
=== Usages ===
i739 ?280 ?280 i799 i285 i1211 v1221 j1225 v1229 i1660 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1672 y: i1674  <|@  <|@
f <@~|@floating>@ <|@
tid i739 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 66]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: i32
=== Inputs ===
x: i737 
y: i735 
=== Succesors ===
=== Usages ===
v754 i464 i464 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i737 y: i735  <|@  <|@
f <@~|@floating>@ <|@
tid i733 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:587) [bci: 24]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: i32
=== Inputs ===
x: i1667 
y: i1675 
=== Succesors ===
=== Usages ===
i738 ?321 v322 v1244 ?316 i1235 ?280 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1667 y: i1675  <|@  <|@
f <@~|@floating>@ <|@
tid i732 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:586) [bci: 13]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: i32
=== Inputs ===
x: i1666 
y: i1675 
=== Succesors ===
=== Usages ===
i738 ?280 i284 j1210 v1218 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1666 y: i1675  <|@  <|@
f <@~|@floating>@ <|@
tid i738 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 61]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: i32
=== Inputs ===
x: i733 
y: i732 
=== Succesors ===
=== Usages ===
v754 i464 i799 i464 i1660 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i733 y: i732  <|@  <|@
f <@~|@floating>@ <|@
tid v754 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 67]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i739 
y: i738 
=== Succesors ===
=== Usages ===
v757 v459 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i739 y: i738  <|@  <|@
f <@~|@floating>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:570) [bci: 23]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1671 
y: i41 
=== Succesors ===
=== Usages ===
v1315 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1671 y: i41  <|@  <|@
f <@*|@fixed>@ <|@
tid v1315 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:570) [bci: 23]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 0.9977260532612405
=== Inputs ===
condition: v78 
=== Succesors ===
trueSuccessor: v1311 
falseSuccessor: v75 
=== Usages ===
=== Predecessor ===
i1675 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v78 #trueSuccessor: v1311 #falseSuccessor: v75  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607162156848611752
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1311 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:570) [bci: 23]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1117 
=== Usages ===
=== Predecessor ===
v1315 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1117  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1117 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CharsetEncoder.state
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:573) [bci: 51]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1694 
value: i41 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v757 
=== Usages ===
=== Predecessor ===
v1311 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1694 value: i41 stateAfter: - lastLocationAccess: - #next: v757  <|@  <|@
f <@*|@fixed>@ <|@
tid v757 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 67]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 0.5358952359076989
=== Inputs ===
condition: v754 
=== Succesors ===
trueSuccessor: v755 
falseSuccessor: v756 
=== Usages ===
=== Predecessor ===
v1117 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v754 #trueSuccessor: v755 #falseSuccessor: v756  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602991276431535006
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v755 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 9]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 67]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v761 
=== Usages ===
=== Predecessor ===
v757 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v761  <|@  <|@
f <@*|@fixed>@ <|@
tid v761 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v462 
=== Predecessor ===
v755 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602013380752059413
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v756 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 5]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 67]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v762 
=== Usages ===
=== Predecessor ===
v757 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v762  <|@  <|@
f <@~|@floating>@ <|@
tid i1660 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 70]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: i32
=== Inputs ===
x: i735 
y: i738 
=== Succesors ===
=== Usages ===
i800 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i735 y: i738  <|@  <|@
f <@*|@fixed>@ <|@
tid v762 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v462 
=== Predecessor ===
v756 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B21" "B112" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4567389915042742827
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:570) [bci: 18]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v76 
=== Usages ===
=== Predecessor ===
v1315 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v76  <|@  <|@
f <@~|@floating>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:570) [bci: 15]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1671 
y: i10 
=== Succesors ===
=== Usages ===
v76 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1671 y: i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:570) [bci: 15]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v73 
=== Succesors ===
trueSuccessor: v74 
falseSuccessor: v1314 
=== Usages ===
=== Predecessor ===
v75 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v73 #trueSuccessor: v74 #falseSuccessor: v1314  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4567389915042742827
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:573) [bci: 48]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1087 
=== Usages ===
=== Predecessor ===
v76 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1087  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1087 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CharsetEncoder.state
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:573) [bci: 51]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1694 
value: i41 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v459 
=== Usages ===
=== Predecessor ===
v74 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1694 value: i41 stateAfter: - lastLocationAccess: - #next: v459  <|@  <|@
f <@*|@fixed>@ <|@
tid v459 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 67]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 0.5358952359076989
=== Inputs ===
condition: v754 
=== Succesors ===
trueSuccessor: v457 
falseSuccessor: v458 
=== Usages ===
=== Predecessor ===
v1087 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v754 #trueSuccessor: v457 #falseSuccessor: v458  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4563262748217087376
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v457 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 9]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 67]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v465 
=== Usages ===
=== Predecessor ===
v459 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v465  <|@  <|@
f <@*|@fixed>@ <|@
tid v465 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v462 
=== Predecessor ===
v457 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562509882613657286
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v458 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 5]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 67]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v463 
=== Usages ===
=== Predecessor ===
v459 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v463  <|@  <|@
f <@~|@floating>@ <|@
tid i799 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 70]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: i32
=== Inputs ===
x: i735 
y: i738 
=== Succesors ===
=== Usages ===
i800 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i735 y: i738  <|@  <|@
f <@*|@fixed>@ <|@
tid v463 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v462 
=== Predecessor ===
v458 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B22" "B18" "B19" 
    successors "B25" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182529020635733
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i464 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v462 
values: i738 i739 i739 i738 
=== Succesors ===
=== Usages ===
?280 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v462 values: i738 i739 i739 i738  <|@  <|@
f <@~|@floating>@ <|@
tid i800 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v462 
values: i799 i737 i737 i1660 
=== Succesors ===
=== Usages ===
i1211 v287 v1221 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v462 values: i799 i737 i737 i1660  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v462 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v463 v465 v761 v762 
=== Succesors ===
next: i1676 
=== Usages ===
i464 i800 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v463 v465 v761 v762 #next: i1676  <|@  <|@
f <@~|@floating>@ <|@
tid v1695 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1663 
=== Succesors ===
=== Usages ===
i1676 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1663  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1676 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1695 
=== Succesors ===
next: v1617 
=== Usages ===
v1218 v1241 j1208 
=== Predecessor ===
v462 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1695 #next: v1617  <|@  <|@
f <@~|@floating>@ <|@
tid j1208 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i1676 
=== Succesors ===
=== Usages ===
v1217 v1240 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1676  <|@  <|@
f <@~|@floating>@ <|@
tid i1211 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i32
=== Inputs ===
x: i800 
y: i735 
=== Succesors ===
=== Usages ===
j1212 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i800 y: i735  <|@  <|@
f <@~|@floating>@ <|@
tid j1212 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1211 
=== Succesors ===
=== Usages ===
j1214 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1211  <|@  <|@
f <@~|@floating>@ <|@
tid j1213 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1214 j1237 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1214 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j1212 
y: j1213 
=== Succesors ===
=== Usages ===
j1215 j1226 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1212 y: j1213  <|@  <|@
f <@~|@floating>@ <|@
tid v1221 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i735 
y: i800 
=== Succesors ===
=== Usages ===
v1617 v1633 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i735 y: i800  <|@  <|@
tid ?103 <|@
d <@d|@=== Debug Properties ===
bci: 41
code: ResolvedJavaMethodBytecode<StreamEncoder.implWrite(char[], int, int)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: StreamEncoder.java
sourceLine: 271
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - a133 - 
=== Succesors ===
=== Usages ===
?227 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - a133 -  <|@  <|@
f <@~|@floating>@ <|@
tid a971 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 37]
op: Uncompress
stamp: a Ljava/nio/ByteBuffer;
=== Inputs ===
value: a1664 
=== Succesors ===
=== Usages ===
?227 ?525 ?321 ?389 ?316 v1029 ?280 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1664  <|@  <|@
tid ?212 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a133 
materializedValue: a133 
=== Succesors ===
=== Usages ===
?227 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a133 materializedValue: a133  <|@  <|@
tid ?227 <|@
d <@d|@=== Debug Properties ===
bci: 57
code: ResolvedJavaMethodBytecode<CharsetEncoder.encode(CharBuffer, ByteBuffer, boolean)>
duringCall: true
localsSize: 7
locksSize: 0
rethrowException: false
sourceFile: CharsetEncoder.java
sourceLine: 579
stackSize: 0
=== Inputs ===
outerFrameState: ?103 
values: a1668 a133 a971 i10 - - - 
virtualObjectMappings: ?212 
=== Succesors ===
=== Usages ===
?397 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?103 values: a1668 a133 a971 i10 - - - virtualObjectMappings: ?212  <|@  <|@
tid ?397 <|@
d <@d|@=== Debug Properties ===
bci: 17
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeLoop(CharBuffer, ByteBuffer)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 691
stackSize: 0
=== Inputs ===
outerFrameState: ?227 
values: - - - 
=== Succesors ===
=== Usages ===
?389 ?385 ?280 ?1433 ?316 ?321 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?227 values: - - -  <|@  <|@
f <@~|@floating>@ <|@
tid a1119 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:970) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1663 
=== Succesors ===
=== Usages ===
?316 v1699 v1696 ?321 ?280 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1663  <|@  <|@
f <@*|@fixed>@ <|@
tid v1617 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1221 
=== Succesors ===
trueSuccessor: v1616 
falseSuccessor: v1613 
=== Usages ===
=== Predecessor ===
i1676 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1221 #trueSuccessor: v1616 #falseSuccessor: v1613  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678929393265237
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1616 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1625 
=== Usages ===
=== Predecessor ===
v1617 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1625  <|@  <|@
f <@~|@floating>@ <|@
tid j1210 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i732 
=== Succesors ===
=== Usages ===
j1215 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i732  <|@  <|@
f <@~|@floating>@ <|@
tid j1215 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j1210 
y: j1214 
=== Succesors ===
=== Usages ===
v1217 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1210 y: j1214  <|@  <|@
f <@~|@floating>@ <|@
tid v1217 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1215 
y: j1208 
=== Succesors ===
=== Usages ===
v1625 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1215 y: j1208  <|@  <|@
f <@*|@fixed>@ <|@
tid v1625 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1217 
=== Succesors ===
trueSuccessor: v1624 
falseSuccessor: v1621 
=== Usages ===
=== Predecessor ===
v1616 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1217 #trueSuccessor: v1624 #falseSuccessor: v1621  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678929393265237
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1624 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1623 
=== Usages ===
=== Predecessor ===
v1625 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1623  <|@  <|@
f <@~|@floating>@ <|@
tid v1218 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i732 
y: i1676 
=== Succesors ===
=== Usages ===
v1623 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i732 y: i1676  <|@  <|@
f <@*|@fixed>@ <|@
tid v1623 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1218 
=== Succesors ===
trueSuccessor: v1614 
falseSuccessor: v1622 
=== Usages ===
=== Predecessor ===
v1624 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1218 #trueSuccessor: v1614 #falseSuccessor: v1622  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B33" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678929393265237
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1614 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1612 
=== Usages ===
=== Predecessor ===
v1623 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1612  <|@  <|@
f <@*|@fixed>@ <|@
tid v1612 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1610 
=== Predecessor ===
v1614 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1622 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1620 
=== Usages ===
=== Predecessor ===
v1623 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1620  <|@  <|@
f <@*|@fixed>@ <|@
tid v1620 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1618 
=== Predecessor ===
v1622 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1621 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1619 
=== Usages ===
=== Predecessor ===
v1625 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1619  <|@  <|@
f <@*|@fixed>@ <|@
tid v1619 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1618 
=== Predecessor ===
v1621 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1618 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1619 v1620 
=== Succesors ===
next: v1319 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1619 v1620 #next: v1319  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B41" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1319 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v1484 
=== Usages ===
=== Predecessor ===
v1618 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v1484  <|@  <|@
f <@~|@floating>@ <|@
tid i1485 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -250651
stableDimension: 0
stamp: i32 [-250651] ⇊00000000fffc2ce5 ⇈00000000fffc2ce5
stampKind: i32
value: int[-250651|0xfffffffffffc2ce5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1487 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1484 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1483 
=== Predecessor ===
v1319 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B33" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678929393265237
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1613 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1611 
=== Usages ===
=== Predecessor ===
v1617 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1611  <|@  <|@
f <@*|@fixed>@ <|@
tid v1611 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1610 
=== Predecessor ===
v1613 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B27" 
    successors "B34" "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182529020635733
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1611 v1612 
=== Succesors ===
next: v1633 
=== Usages ===
v1223 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1611 v1612 #next: v1633  <|@  <|@
f <@*|@fixed>@ <|@
tid v1633 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1221 
=== Succesors ===
trueSuccessor: v1632 
falseSuccessor: v1629 
=== Usages ===
=== Predecessor ===
v1610 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1221 #trueSuccessor: v1632 #falseSuccessor: v1629  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B38" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678929393265237
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1632 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1677 
=== Usages ===
=== Predecessor ===
v1633 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1677  <|@  <|@
f <@~|@floating>@ <|@
tid v1697 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1665 
=== Succesors ===
=== Usages ===
i1677 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1665  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1677 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1697 
=== Succesors ===
next: v1641 
=== Usages ===
v1229 j1224 
=== Predecessor ===
v1632 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1697 #next: v1641  <|@  <|@
f <@~|@floating>@ <|@
tid j1225 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i735 
=== Succesors ===
=== Usages ===
j1226 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i735  <|@  <|@
f <@~|@floating>@ <|@
tid j1226 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j1214 
y: j1225 
=== Succesors ===
=== Usages ===
v1228 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1214 y: j1225  <|@  <|@
f <@~|@floating>@ <|@
tid j1224 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i1677 
=== Succesors ===
=== Usages ===
v1228 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1677  <|@  <|@
f <@~|@floating>@ <|@
tid v1228 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1226 
y: j1224 
=== Succesors ===
=== Usages ===
v1641 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1226 y: j1224  <|@  <|@
f <@*|@fixed>@ <|@
tid v1641 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1228 
=== Succesors ===
trueSuccessor: v1640 
falseSuccessor: v1637 
=== Usages ===
=== Predecessor ===
i1677 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1228 #trueSuccessor: v1640 #falseSuccessor: v1637  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678929393265237
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1640 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1639 
=== Usages ===
=== Predecessor ===
v1641 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1639  <|@  <|@
f <@~|@floating>@ <|@
tid v1229 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i735 
y: i1677 
=== Succesors ===
=== Usages ===
v1639 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i735 y: i1677  <|@  <|@
f <@*|@fixed>@ <|@
tid v1639 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1229 
=== Succesors ===
trueSuccessor: v1630 
falseSuccessor: v1638 
=== Usages ===
=== Predecessor ===
v1640 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1229 #trueSuccessor: v1630 #falseSuccessor: v1638  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678929393265237
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1630 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1628 
=== Usages ===
=== Predecessor ===
v1639 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1628  <|@  <|@
f <@*|@fixed>@ <|@
tid v1628 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1626 
=== Predecessor ===
v1630 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1638 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1636 
=== Usages ===
=== Predecessor ===
v1639 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1636  <|@  <|@
f <@*|@fixed>@ <|@
tid v1636 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1634 
=== Predecessor ===
v1638 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1637 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1635 
=== Usages ===
=== Predecessor ===
v1641 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1635  <|@  <|@
f <@*|@fixed>@ <|@
tid v1635 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1634 
=== Predecessor ===
v1637 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1634 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1635 v1636 
=== Succesors ===
next: v1324 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1635 v1636 #next: v1324  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1324 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v1490 
=== Usages ===
=== Predecessor ===
v1634 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v1490  <|@  <|@
f <@~|@floating>@ <|@
tid i1491 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -256283
stableDimension: 0
stamp: i32 [-256283] ⇊00000000fffc16e5 ⇈00000000fffc16e5
stampKind: i32
value: int[-256283|0xfffffffffffc16e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1487 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1490 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1483 
=== Predecessor ===
v1324 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B31" "B40" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1487 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-256283 - -250651] ⇊00000000fffc04e5 ⇈00000000fffc3ee5
valueDescription: i32
=== Inputs ===
merge: v1483 
values: i1485 i1491 
=== Succesors ===
=== Usages ===
v1489 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1483 values: i1485 i1491  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1483 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1484 v1490 
=== Succesors ===
next: v1489 
=== Usages ===
i1487 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1484 v1490 #next: v1489  <|@  <|@
tid ?280 <|@
d <@d|@=== Debug Properties ===
bci: 70
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)>
duringCall: false
localsSize: 12
locksSize: 0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 67]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 592
stackSize: 2
=== Inputs ===
outerFrameState: ?397 
values: a1668 a133 a971 a1119 i732 i733 a1665 i735 i737 - - - i735 i464 
virtualObjectMappings: ?866 
=== Succesors ===
=== Usages ===
v1489 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?397 values: a1668 a133 a971 a1119 i732 i733 a1665 i735 i737 - - - i735 i464 virtualObjectMappings: ?866  <|@  <|@
f <@~|@floating>@ <|@
tid a1486 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@1159422862
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@1159422862]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1489 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1489 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?280 
actionAndReason: i1487 
speculation: a1486 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1483 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?280 actionAndReason: i1487 speculation: a1486  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678929393265237
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1629 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1627 
=== Usages ===
=== Predecessor ===
v1633 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1627  <|@  <|@
f <@*|@fixed>@ <|@
tid v1627 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1626 
=== Predecessor ===
v1629 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B36" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182529020635733
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1626 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1627 v1628 
=== Succesors ===
next: v282 
=== Usages ===
v1233 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1627 v1628 #next: v282  <|@  <|@
f <@~|@floating>@ <|@
tid i1143 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 87]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
rawvalue: 128
stableDimension: 0
stamp: i16 [128] ⇊0000000000000080 ⇈0000000000000080
stampKind: i16
value: short[128|0x80]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1144 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v282 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v283 
=== Predecessor ===
v1626 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B46" 
    successors "B45" "B48" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4628637040060955957
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i284 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v283 
values: i732 i309 
=== Succesors ===
=== Usages ===
j1234 v1244 v1696 v1241 i309 i1235 ?316 i319 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v283 values: i732 i309  <|@  <|@
f <@~|@floating>@ <|@
tid i285 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v283 
values: i735 i308 
=== Succesors ===
=== Usages ===
v1698 v287 ?316 i320 i308 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v283 values: i735 i308  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 28.221435738803496
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v282 
=== Succesors ===
next: v293 
=== Usages ===
i284 i285 v289 v301 v315 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v282 #next: v293  <|@  <|@
f <@~|@floating>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 77]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i285 
y: i800 
=== Succesors ===
=== Usages ===
v293 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i285 y: i800  <|@  <|@
f <@*|@fixed>@ <|@
tid v293 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 77]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 0.9647476131021091
=== Inputs ===
condition: v287 
=== Succesors ===
trueSuccessor: v288 
falseSuccessor: v289 
=== Usages ===
=== Predecessor ===
v283 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v287 #trueSuccessor: v288 #falseSuccessor: v289  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4628357001361009421
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v288 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 80]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1678 
=== Usages ===
v1223 v1233 
=== Predecessor ===
v293 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1678  <|@  <|@
f <@~|@floating>@ <|@
tid v1223 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1610 v288 
=== Succesors ===
=== Usages ===
i1678 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1610 v288  <|@  <|@
f <@~|@floating>@ <|@
tid v1696 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a1119 
index: i284 
=== Succesors ===
=== Usages ===
i1678 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1119 index: i284  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1678 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v1223 
address: v1696 
=== Succesors ===
next: v307 
=== Usages ===
v1144 i1146 
=== Predecessor ===
v288 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1223 address: v1696 #next: v307  <|@  <|@
f <@~|@floating>@ <|@
tid v1144 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 87]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1678 
y: i1143 
=== Succesors ===
=== Usages ===
v307 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1678 y: i1143  <|@  <|@
f <@*|@fixed>@ <|@
tid v307 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 87]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 0.9998116902024854
=== Inputs ===
condition: v1144 
=== Succesors ===
trueSuccessor: v297 
falseSuccessor: v301 
=== Usages ===
=== Predecessor ===
i1678 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1144 #trueSuccessor: v297 #falseSuccessor: v301  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4628355558195456655
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v297 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 90]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1008 
=== Usages ===
=== Predecessor ===
v307 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1008  <|@  <|@
f <@~|@floating>@ <|@
tid v1233 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1626 v288 
=== Succesors ===
=== Usages ===
v1008 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1626 v288  <|@  <|@
f <@~|@floating>@ <|@
tid v1698 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i285 
index: a1665 
=== Succesors ===
=== Usages ===
v1008 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i285 index: a1665  <|@  <|@
f <@~|@floating>@ <|@
tid i1146 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 16
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 104]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
resultBits: 8
stamp: i8
=== Inputs ===
value: i1678 
=== Succesors ===
=== Usages ===
v1008 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i1678  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1008 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1233 
address: v1698 
value: i1146 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v315 
=== Usages ===
=== Predecessor ===
v297 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1233 address: v1698 value: i1146 stateAfter: - lastLocationAccess: - #next: v315  <|@  <|@
f <@~|@floating>@ <|@
tid i308 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 94]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: i32
=== Inputs ===
x: i285 
y: i41 
=== Succesors ===
=== Usages ===
i285 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i285 y: i41  <|@  <|@
f <@~|@floating>@ <|@
tid i309 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 100]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: i32
=== Inputs ===
x: i284 
y: i41 
=== Succesors ===
=== Usages ===
i284 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i284 y: i41  <|@  <|@
f <@*|@fixed>@ <|@
tid v315 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
loopBegin: v283 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1008 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v283  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B49" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572561228257811438
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v301 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v283 
=== Succesors ===
next: v300 
=== Usages ===
=== Predecessor ===
v307 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v283 #next: v300  <|@  <|@
f <@*|@fixed>@ <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v299 
=== Predecessor ===
v301 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B49" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607136457943565555
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v289 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v283 
=== Succesors ===
next: v298 
=== Usages ===
=== Predecessor ===
v293 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v283 #next: v298  <|@  <|@
f <@*|@fixed>@ <|@
tid v298 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v299 
=== Predecessor ===
v289 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B47" 
    successors "B50" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182529020635733
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v298 v300 
=== Succesors ===
next: v1649 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v298 v300 #next: v1649  <|@  <|@
f <@~|@floating>@ <|@
tid v1244 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i284 
y: i733 
=== Succesors ===
=== Usages ===
v1649 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i284 y: i733  <|@  <|@
f <@*|@fixed>@ <|@
tid v1649 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1244 
=== Succesors ===
trueSuccessor: v1648 
falseSuccessor: v1645 
=== Usages ===
=== Predecessor ===
v299 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1244 #trueSuccessor: v1648 #falseSuccessor: v1645  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678929393265237
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1648 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1657 
=== Usages ===
=== Predecessor ===
v1649 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1657  <|@  <|@
f <@~|@floating>@ <|@
tid j1234 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i284 
=== Succesors ===
=== Usages ===
j1238 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i284  <|@  <|@
f <@~|@floating>@ <|@
tid i1235 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i32
=== Inputs ===
x: i733 
y: i284 
=== Succesors ===
=== Usages ===
j1236 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i733 y: i284  <|@  <|@
f <@~|@floating>@ <|@
tid j1236 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1235 
=== Succesors ===
=== Usages ===
j1237 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1235  <|@  <|@
f <@~|@floating>@ <|@
tid j1237 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j1236 
y: j1213 
=== Succesors ===
=== Usages ===
j1238 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1236 y: j1213  <|@  <|@
f <@~|@floating>@ <|@
tid j1238 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j1234 
y: j1237 
=== Succesors ===
=== Usages ===
v1240 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1234 y: j1237  <|@  <|@
f <@~|@floating>@ <|@
tid v1240 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1238 
y: j1208 
=== Succesors ===
=== Usages ===
v1657 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1238 y: j1208  <|@  <|@
f <@*|@fixed>@ <|@
tid v1657 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1240 
=== Succesors ===
trueSuccessor: v1656 
falseSuccessor: v1653 
=== Usages ===
=== Predecessor ===
v1648 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1240 #trueSuccessor: v1656 #falseSuccessor: v1653  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678929393265237
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1656 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1655 
=== Usages ===
=== Predecessor ===
v1657 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1655  <|@  <|@
f <@~|@floating>@ <|@
tid v1241 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i284 
y: i1676 
=== Succesors ===
=== Usages ===
v1655 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i284 y: i1676  <|@  <|@
f <@*|@fixed>@ <|@
tid v1655 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1241 
=== Succesors ===
trueSuccessor: v1646 
falseSuccessor: v1654 
=== Usages ===
=== Predecessor ===
v1656 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1241 #trueSuccessor: v1646 #falseSuccessor: v1654  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678929393265237
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1646 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1644 
=== Usages ===
=== Predecessor ===
v1655 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1644  <|@  <|@
f <@*|@fixed>@ <|@
tid v1644 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1642 
=== Predecessor ===
v1646 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1654 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1652 
=== Usages ===
=== Predecessor ===
v1655 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1652  <|@  <|@
f <@*|@fixed>@ <|@
tid v1652 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1650 
=== Predecessor ===
v1654 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1653 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1651 
=== Usages ===
=== Predecessor ===
v1657 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1651  <|@  <|@
f <@*|@fixed>@ <|@
tid v1651 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1650 
=== Predecessor ===
v1653 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1650 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1651 v1652 
=== Succesors ===
next: v1329 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1651 v1652 #next: v1329  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1329 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v1327 
=== Usages ===
=== Predecessor ===
v1650 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v1327  <|@  <|@
tid ?316 <|@
d <@d|@=== Debug Properties ===
bci: 109
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)>
duringCall: false
localsSize: 12
locksSize: 0
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 597
stackSize: 0
=== Inputs ===
outerFrameState: ?397 
values: a1668 a133 a971 a1119 i284 i733 a1665 i285 i737 - - - 
virtualObjectMappings: ?866 
=== Succesors ===
=== Usages ===
v1327 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?397 values: a1668 a133 a971 a1119 i284 i733 a1665 i285 i737 - - - virtualObjectMappings: ?866  <|@  <|@
f <@*|@fixed>@ <|@
tid v1327 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1011
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
reason: BoundsCheckException
speculation: Object[d.a@1723836758]
stamp: void
=== Inputs ===
stateBefore: ?316 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1329 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?316  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678929393265237
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1645 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1643 
=== Usages ===
=== Predecessor ===
v1649 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1643  <|@  <|@
f <@*|@fixed>@ <|@
tid v1643 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1642 
=== Predecessor ===
v1645 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B52" 
    successors "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182529020635733
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1642 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1643 v1644 
=== Succesors ===
next: v317 
=== Usages ===
v1246 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1643 v1644 #next: v317  <|@  <|@
f <@*|@fixed>@ <|@
tid v317 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v318 
=== Predecessor ===
v1642 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B63" "B88" 
    successors "B60" "B95" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4607879356046553365
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i319 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v318 
values: i284 i381 i381 
=== Succesors ===
=== Usages ===
?321 v322 ?389 v1699 v1029 i469 i381 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v318 values: i284 i381 i381  <|@  <|@
f <@~|@floating>@ <|@
tid i320 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v318 
values: i285 i341 i395 
=== Succesors ===
=== Usages ===
?321 v1043 v334 v1029 i341 v1700 i395 i354 v1702 i394 ?389 i476 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v318 values: i285 i341 i395  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v318 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.1547228949992876
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 2
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v317 
=== Succesors ===
next: v328 
=== Usages ===
i319 i320 v324 v336 v382 v396 v1383 v1334 v1359 v1365 v1371 v1377 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v317 #next: v328  <|@  <|@
f <@~|@floating>@ <|@
tid v322 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 113]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i319 
y: i733 
=== Succesors ===
=== Usages ===
v328 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i319 y: i733  <|@  <|@
f <@*|@fixed>@ <|@
tid v328 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 113]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 0.13401192679415996
=== Inputs ===
condition: v322 
=== Succesors ===
trueSuccessor: v323 
falseSuccessor: v324 
=== Usages ===
=== Predecessor ===
v318 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v322 #trueSuccessor: v323 #falseSuccessor: v324  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B79" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4594743492025225673
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v323 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 116]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1679 
=== Usages ===
v1246 
=== Predecessor ===
v328 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1679  <|@  <|@
f <@~|@floating>@ <|@
tid v1246 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1642 v323 
=== Succesors ===
=== Usages ===
i1679 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1642 v323  <|@  <|@
f <@~|@floating>@ <|@
tid v1699 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a1119 
index: i319 
=== Succesors ===
=== Usages ===
i1679 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1119 index: i319  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1679 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v1246 
address: v1699 
=== Succesors ===
next: i1680 
=== Usages ===
i1018 
=== Predecessor ===
v323 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1246 address: v1699 #next: i1680  <|@  <|@
f <@~|@floating>@ <|@
tid v1732 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1665 
=== Succesors ===
=== Usages ===
i1680 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1665  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1680 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1732 
=== Succesors ===
next: v333 
=== Usages ===
v1043 v1063 
=== Predecessor ===
i1679 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1732 #next: v333  <|@  <|@
f <@~|@floating>@ <|@
tid v1043 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i320 
y: i1680 
=== Succesors ===
=== Usages ===
v1379 v1336 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i320 y: i1680  <|@  <|@
f <@~|@floating>@ <|@
tid i1018 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
resultBits: 32
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i1679 
=== Succesors ===
=== Usages ===
v330 i342 i367 v347 i375 v483 i360 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1679  <|@  <|@
f <@~|@floating>@ <|@
tid i295 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 84]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
rawvalue: 128
stableDimension: 0
stamp: i32 [128] ⇊0000000000000080 ⇈0000000000000080
stampKind: i32
value: int[128|0x80]
=== Inputs ===
=== Succesors ===
=== Usages ===
i376 v330 i370 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v330 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:599) [bci: 127]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1018 
y: i295 
=== Succesors ===
=== Usages ===
v333 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1018 y: i295  <|@  <|@
f <@~|@floating>@ <|@
tid i381 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:634) [bci: 470]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: i32
=== Inputs ===
x: i319 
y: i41 
=== Succesors ===
=== Usages ===
i319 i319 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i319 y: i41  <|@  <|@
f <@~|@floating>@ <|@
tid i341 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 151]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: i32
=== Inputs ===
x: i320 
y: i41 
=== Succesors ===
=== Usages ===
i320 v1703 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i320 y: i41  <|@  <|@
f <@*|@fixed>@ <|@
tid v333 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:599) [bci: 127]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 0.9444529691575878
=== Inputs ===
condition: v330 
=== Succesors ===
trueSuccessor: v331 
falseSuccessor: v332 
=== Usages ===
=== Predecessor ===
i1680 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v330 #trueSuccessor: v331 #falseSuccessor: v332  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B66" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4594433791124817836
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v331 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:601) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v340 
=== Usages ===
=== Predecessor ===
v333 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v340  <|@  <|@
f <@~|@floating>@ <|@
tid v334 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:601) [bci: 134]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i320 
y: i737 
=== Succesors ===
=== Usages ===
v340 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i320 y: i737  <|@  <|@
f <@*|@fixed>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:601) [bci: 134]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 0.9998375304630381
=== Inputs ===
condition: v334 
=== Succesors ===
trueSuccessor: v335 
falseSuccessor: v336 
=== Usages ===
=== Predecessor ===
v331 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v334 #trueSuccessor: v335 #falseSuccessor: v336  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" "B64" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4594432935597468643
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v335 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 147]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1336 
=== Usages ===
=== Predecessor ===
v340 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1336  <|@  <|@
f <@*|@fixed>@ <|@
tid v1336 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 157]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1043 
=== Succesors ===
trueSuccessor: v1331 
falseSuccessor: v1334 
=== Usages ===
=== Predecessor ===
v335 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1043 #trueSuccessor: v1331 #falseSuccessor: v1334  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B59" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4594432935597468643
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1331 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 157]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1028 
=== Usages ===
v1028 
=== Predecessor ===
v1336 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1028  <|@  <|@
f <@~|@floating>@ <|@
tid v1700 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i320 
index: a1665 
=== Succesors ===
=== Usages ===
v1028 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i320 index: a1665  <|@  <|@
f <@~|@floating>@ <|@
tid i342 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 156]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
resultBits: 8
stamp: i8
=== Inputs ===
value: i1018 
=== Succesors ===
=== Usages ===
v1028 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i1018  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1028 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 157]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1331 
address: v1700 
value: i342 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v382 
=== Usages ===
=== Predecessor ===
v1331 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1331 address: v1700 value: i342 stateAfter: - lastLocationAccess: - #next: v382  <|@  <|@
f <@*|@fixed>@ <|@
tid v382 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
loopBegin: v318 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1028 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v318  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1334 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 157]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v318 
=== Succesors ===
next: v1335 
=== Usages ===
=== Predecessor ===
v1336 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v318 #next: v1335  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B107" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1335 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 157]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v1493 
=== Usages ===
=== Predecessor ===
v1334 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v1493  <|@  <|@
f <@~|@floating>@ <|@
tid i1494 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -261403
stableDimension: 0
stamp: i32 [-261403] ⇊00000000fffc02e5 ⇈00000000fffc02e5
stampKind: i32
value: int[-261403|0xfffffffffffc02e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1495 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1493 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1492 
=== Predecessor ===
v1335 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4537629705179309201
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v336 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 137]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v318 
=== Succesors ===
next: a384 
=== Usages ===
=== Predecessor ===
v340 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v318 #next: a384  <|@  <|@
tid v1029 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 143]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
returnStamp: a# Ljava/nio/charset/CoderResult;
signature: [Ljdk.vm.ci.meta.JavaType;@434fc7fc
stamp: void
targetMethod: HotSpotMethod<UTF_8$Encoder.overflow(CharBuffer, int, ByteBuffer, int)>
=== Inputs ===
arguments: a1429 i319 a971 i320 
=== Succesors ===
=== Usages ===
a384 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1429 i319 a971 i320  <|@  <|@
tid ?1433 <|@
d <@d|@=== Debug Properties ===
bci: 143
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)>
duringCall: true
localsSize: 12
locksSize: 0
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 602
stackSize: 0
=== Inputs ===
outerFrameState: ?397 
values: - - - - - - - - - - - - 
virtualObjectMappings: ?866 
=== Succesors ===
=== Usages ===
a384 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?397 values: - - - - - - - - - - - - virtualObjectMappings: ?866  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a384 <|@
d <@d|@=== Debug Properties ===
bci: 143
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 143]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
polymorphic: false
stamp: a# Ljava/nio/charset/CoderResult;
targetMethod: Direct#UTF_8$Encoder.overflow
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1029 
stateDuring: ?1433 
=== Succesors ===
next: i1681 
=== Usages ===
?385 v1701 ?26 
=== Predecessor ===
v336 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1029 stateDuring: ?1433 #next: i1681  <|@  <|@
tid ?385 <|@
d <@d|@=== Debug Properties ===
bci: 146
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)>
duringCall: false
localsSize: 12
locksSize: 0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 143]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 602
stackSize: 1
=== Inputs ===
outerFrameState: ?397 
values: - - - - - - - - - - - - a384 
virtualObjectMappings: ?866 
=== Succesors ===
=== Usages ===
v1525 i1681 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?397 values: - - - - - - - - - - - - a384 virtualObjectMappings: ?866  <|@  <|@
f <@~|@floating>@ <|@
tid v1701 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a384 
index: - 
=== Succesors ===
=== Usages ===
i1681 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a384 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1681 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CoderResult.type
nodeSourcePosition: at java.nio.charset.CoderResult.isOverflow(CoderResult.java:129) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 91]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?385 
guard: - 
address: v1701 
=== Succesors ===
next: v1346 
=== Usages ===
v117 v555 
=== Predecessor ===
a384 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?385 guard: - address: v1701 #next: v1346  <|@  <|@
f <@~|@floating>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.charset.CoderResult.isOverflow(CoderResult.java:129) [bci: 5]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 91]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1681 
y: i41 
=== Succesors ===
=== Usages ===
v94 v1355 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1681 y: i41  <|@  <|@
f <@~|@floating>@ <|@
tid v555 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.charset.CoderResult.isUnderflow(CoderResult.java:120) [bci: 4]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:272) [bci: 48]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1681 
y: i10 
=== Succesors ===
=== Usages ===
v1346 v35 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1681 y: i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v1346 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:589) [bci: 105]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 0.9999755802164062
=== Inputs ===
condition: v555 
=== Succesors ===
trueSuccessor: v1342 
falseSuccessor: v93 
=== Usages ===
=== Predecessor ===
i1681 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v555 #trueSuccessor: v1342 #falseSuccessor: v93  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4537629534033743191
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1342 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:589) [bci: 105]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v106 
=== Usages ===
=== Predecessor ===
v1346 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v106  <|@  <|@
f <@*|@fixed>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v104 
=== Predecessor ===
v1342 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4468675328631188685
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:589) [bci: 100]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v94 
=== Usages ===
=== Predecessor ===
v1346 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v94  <|@  <|@
f <@*|@fixed>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 94]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v117 
=== Succesors ===
trueSuccessor: v101 
falseSuccessor: v1345 
=== Usages ===
=== Predecessor ===
v93 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v117 #trueSuccessor: v101 #falseSuccessor: v1345  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4468675328631188685
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v105 
=== Usages ===
=== Predecessor ===
v94 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v105  <|@  <|@
f <@*|@fixed>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v104 
=== Predecessor ===
v101 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B67" 
    successors "B71" "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4537629705179309201
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v105 v106 
=== Succesors ===
next: v35 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v105 v106 #next: v35  <|@  <|@
f <@*|@fixed>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:272) [bci: 51]
stamp: void
trueSuccessorProbability: 0.9999755267053062
=== Inputs ===
condition: v555 
=== Succesors ===
trueSuccessor: v33 
falseSuccessor: v31 
=== Usages ===
=== Predecessor ===
v104 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v555 #trueSuccessor: v33 #falseSuccessor: v31  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B72" "B73" 
    xhandlers
    flags 
    probability 4537629533658711714
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:273) [bci: 54]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: i1682 
=== Usages ===
=== Predecessor ===
v35 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: i1682  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1682 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.limit
nodeSourcePosition: at java.nio.Buffer.remaining(Buffer.java:391) [bci: 1]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:274) [bci: 84]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1691 
=== Succesors ===
next: i1683 
=== Usages ===
i53 
=== Predecessor ===
v33 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1691 #next: i1683  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1683 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.position
nodeSourcePosition: at java.nio.Buffer.remaining(Buffer.java:391) [bci: 5]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:274) [bci: 84]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1690 
=== Succesors ===
next: v1350 
=== Usages ===
i53 
=== Predecessor ===
i1682 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1690 #next: v1350  <|@  <|@
f <@~|@floating>@ <|@
tid i53 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.nio.Buffer.remaining(Buffer.java:391) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:274) [bci: 84]
stamp: i32
=== Inputs ===
x: i1682 
y: i1683 
=== Succesors ===
=== Usages ===
v54 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i1682 y: i1683  <|@  <|@
f <@~|@floating>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:274) [bci: 88]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i53 
y: i41 
=== Succesors ===
=== Usages ===
v1350 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i53 y: i41  <|@  <|@
f <@*|@fixed>@ <|@
tid v1350 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:274) [bci: 88]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v54 
=== Succesors ===
trueSuccessor: v1349 
falseSuccessor: v1347 
=== Usages ===
=== Predecessor ===
i1683 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v54 #trueSuccessor: v1349 #falseSuccessor: v1347  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B77" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1349 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:274) [bci: 88]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1476 
=== Usages ===
=== Predecessor ===
v1350 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1476  <|@  <|@
f <@~|@floating>@ <|@
tid i1477 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -264979
stableDimension: 0
stamp: i32 [-264979] ⇊00000000fffbf4ed ⇈00000000fffbf4ed
stampKind: i32
value: int[-264979|0xfffffffffffbf4ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1478 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1476 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1475 
=== Predecessor ===
v1349 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors 
    xhandlers
    flags 
    probability 4537629533658711714
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1347 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:274) [bci: 88]
stamp: void
=== Inputs ===
=== Succesors ===
next: v57 
=== Usages ===
=== Predecessor ===
v1350 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v57  <|@  <|@
f <@*|@fixed>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:287) [bci: 155]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1347 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4468687617662610068
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:280) [bci: 108]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1355 
=== Usages ===
=== Predecessor ===
v35 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1355  <|@  <|@
f <@*|@fixed>@ <|@
tid v1355 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:280) [bci: 113]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v117 
=== Succesors ===
trueSuccessor: v1351 
falseSuccessor: v1354 
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v117 #trueSuccessor: v1351 #falseSuccessor: v1354  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4468687617662610068
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1351 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:280) [bci: 113]
stamp: void
=== Inputs ===
=== Succesors ===
next: v44 
=== Usages ===
=== Predecessor ===
v1355 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v44  <|@  <|@
tid v1037 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:282) [bci: 141]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@5d56db08
stamp: void
targetMethod: HotSpotMethod<StreamEncoder.writeBytes()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
v44 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?1434 <|@
d <@d|@=== Debug Properties ===
bci: 141
code: ResolvedJavaMethodBytecode<StreamEncoder.implWrite(char[], int, int)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: StreamEncoder.java
sourceLine: 282
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - a133 - 
virtualObjectMappings: ?866 
=== Succesors ===
=== Usages ===
v44 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - a133 - virtualObjectMappings: ?866  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
bci: 141
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:282) [bci: 141]
polymorphic: false
stamp: void
targetMethod: Direct#StreamEncoder.writeBytes
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1037 
stateDuring: ?1434 
=== Succesors ===
next: v46 
=== Usages ===
=== Predecessor ===
v1351 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1037 stateDuring: ?1434 #next: v46  <|@  <|@
f <@*|@fixed>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22]
stamp: void
=== Inputs ===
loopBegin: v15 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v44 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v15  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1354 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:280) [bci: 113]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v1481 
=== Usages ===
=== Predecessor ===
v1355 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v1481  <|@  <|@
f <@~|@floating>@ <|@
tid i1482 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -265235
stableDimension: 0
stamp: i32 [-265235] ⇊00000000fffbf3ed ⇈00000000fffbf3ed
stampKind: i32
value: int[-265235|0xfffffffffffbf3ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1478 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1481 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1475 
=== Predecessor ===
v1354 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B72" "B76" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1478 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-265235 - -264979] ⇊00000000fffbf0ed ⇈00000000fffbf7ed
valueDescription: i32
=== Inputs ===
merge: v1475 
values: i1477 i1482 
=== Succesors ===
=== Usages ===
v1480 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1475 values: i1477 i1482  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1475 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1476 v1481 
=== Succesors ===
next: v1480 
=== Usages ===
i1478 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1476 v1481 #next: v1480  <|@  <|@
tid ?26 <|@
d <@d|@=== Debug Properties ===
bci: 44
code: ResolvedJavaMethodBytecode<StreamEncoder.implWrite(char[], int, int)>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
rethrowException: false
sourceFile: StreamEncoder.java
sourceLine: 271
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 - - - a133 - a384 
virtualObjectMappings: ?866 
=== Succesors ===
=== Usages ===
v1480 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - a133 - a384 virtualObjectMappings: ?866  <|@  <|@
f <@*|@fixed>@ <|@
tid v1480 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?26 
actionAndReason: i1478 
speculation: a1441 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1475 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?26 actionAndReason: i1478 speculation: a1441  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1345 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:589) [bci: 105]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v1525 
=== Usages ===
=== Predecessor ===
v94 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v1525  <|@  <|@
f <@~|@floating>@ <|@
tid i1527 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -265747
stableDimension: 0
stamp: i32 [-265747] ⇊00000000fffbf1ed ⇈00000000fffbf1ed
stampKind: i32
value: int[-265747|0xfffffffffffbf1ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1525 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1525 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?385 
actionAndReason: i1527 
speculation: a1441 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1345 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?385 actionAndReason: i1527 speculation: a1441  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B80" "B82" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4576108836187578827
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v332 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 161]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1361 
=== Usages ===
=== Predecessor ===
v333 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1361  <|@  <|@
f <@~|@floating>@ <|@
tid i346 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 163]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
rawvalue: 2048
stableDimension: 0
stamp: i32 [2048] ⇊0000000000000800 ⇈0000000000000800
stampKind: i32
value: int[2048|0x800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v347 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v347 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 166]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1018 
y: i346 
=== Succesors ===
=== Usages ===
v1361 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1018 y: i346  <|@  <|@
f <@*|@fixed>@ <|@
tid v1361 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 166]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v347 
=== Succesors ===
trueSuccessor: v1359 
falseSuccessor: v1356 
=== Usages ===
=== Predecessor ===
v332 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v347 #trueSuccessor: v1359 #falseSuccessor: v1356  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B81" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1359 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 166]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v318 
=== Succesors ===
next: v1360 
=== Usages ===
=== Predecessor ===
v1361 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v318 #next: v1360  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B107" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1360 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 166]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v1498 
=== Usages ===
=== Predecessor ===
v1359 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v1498  <|@  <|@
f <@~|@floating>@ <|@
tid i1499 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -266003
stableDimension: 0
stamp: i32 [-266003] ⇊00000000fffbf0ed ⇈00000000fffbf0ed
stampKind: i32
value: int[-266003|0xfffffffffffbf0ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1495 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1498 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1492 
=== Predecessor ===
v1360 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B83" "B93" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4576108836187578827
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1356 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 166]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1367 
=== Usages ===
=== Predecessor ===
v1361 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1367  <|@  <|@
f <@~|@floating>@ <|@
tid i482 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 229]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
rawvalue: 55296
stableDimension: 0
stamp: i32 [55296] ⇊000000000000d800 ⇈000000000000d800
stampKind: i32
value: int[55296|0xd800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v483 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v483 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 3]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 229]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1018 
y: i482 
=== Succesors ===
=== Usages ===
v1367 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1018 y: i482  <|@  <|@
f <@*|@fixed>@ <|@
tid v1367 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 3]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 229]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v483 
=== Succesors ===
trueSuccessor: v1362 
falseSuccessor: v1365 
=== Usages ===
=== Predecessor ===
v1356 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v483 #trueSuccessor: v1362 #falseSuccessor: v1365  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B84" "B86" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4576108836187578827
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1362 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 3]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 229]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1373 
=== Usages ===
=== Predecessor ===
v1367 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1373  <|@  <|@
f <@~|@floating>@ <|@
tid i354 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 398]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: i32
=== Inputs ===
x: i737 
y: i320 
=== Succesors ===
=== Usages ===
v356 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i737 y: i320  <|@  <|@
f <@~|@floating>@ <|@
tid i355 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 399]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
rawvalue: 3
stableDimension: 0
stamp: i32 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
v356 i395 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v356 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 400]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i354 
y: i355 
=== Succesors ===
=== Usages ===
v1373 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i354 y: i355  <|@  <|@
f <@*|@fixed>@ <|@
tid v1373 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 400]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v356 
=== Succesors ===
trueSuccessor: v1371 
falseSuccessor: v1368 
=== Usages ===
=== Predecessor ===
v1362 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v356 #trueSuccessor: v1371 #falseSuccessor: v1368  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1371 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 400]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v318 
=== Succesors ===
next: v1372 
=== Usages ===
=== Predecessor ===
v1373 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v318 #next: v1372  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B107" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1372 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 400]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v1502 
=== Usages ===
=== Predecessor ===
v1371 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v1502  <|@  <|@
f <@~|@floating>@ <|@
tid i1503 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -266515
stableDimension: 0
stamp: i32 [-266515] ⇊00000000fffbeeed ⇈00000000fffbeeed
stampKind: i32
value: int[-266515|0xfffffffffffbeeed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1495 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1502 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1492 
=== Predecessor ===
v1372 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B87" "B91" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4576108836187578827
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1368 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 400]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1379 
=== Usages ===
=== Predecessor ===
v1373 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1379  <|@  <|@
f <@*|@fixed>@ <|@
tid v1379 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1043 
=== Succesors ===
trueSuccessor: v1374 
falseSuccessor: v1377 
=== Usages ===
=== Predecessor ===
v1368 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1043 #trueSuccessor: v1374 #falseSuccessor: v1377  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4576108836187578827
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1374 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1385 
=== Usages ===
v1206 
=== Predecessor ===
v1379 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1385  <|@  <|@
f <@~|@floating>@ <|@
tid i393 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 435]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i394 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i394 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 435]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: i32
=== Inputs ===
x: i320 
y: i393 
=== Succesors ===
=== Usages ===
v1063 v1704 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i320 y: i393  <|@  <|@
f <@~|@floating>@ <|@
tid v1063 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 469]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i394 
y: i1680 
=== Succesors ===
=== Usages ===
v1385 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i394 y: i1680  <|@  <|@
f <@*|@fixed>@ <|@
tid v1385 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 469]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1063 
=== Succesors ===
trueSuccessor: v1380 
falseSuccessor: v1383 
=== Usages ===
=== Predecessor ===
v1374 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1063 #trueSuccessor: v1380 #falseSuccessor: v1383  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B59" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4576108836187578827
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1380 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 469]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1051 
=== Usages ===
v1206 
=== Predecessor ===
v1385 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1051  <|@  <|@
f <@~|@floating>@ <|@
tid v1206 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1380 v1374 
=== Succesors ===
=== Usages ===
v1051 v1071 v1061 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1380 v1374  <|@  <|@
f <@~|@floating>@ <|@
tid v1702 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i320 
index: a1665 
=== Succesors ===
=== Usages ===
v1051 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i320 index: a1665  <|@  <|@
f <@~|@floating>@ <|@
tid i359 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 425]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
rawvalue: 12
stableDimension: 0
stamp: i32 [12] ⇊000000000000000c ⇈000000000000000c
stampKind: i32
value: int[12|0xc]
=== Inputs ===
=== Succesors ===
=== Usages ===
i360 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i360 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 427]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: i32 [0 - 15] ⇈000000000000000f
=== Inputs ===
x: i1018 
y: i359 
=== Succesors ===
=== Usages ===
i361 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i1018 y: i359  <|@  <|@
f <@~|@floating>@ <|@
tid i358 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 420]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
rawvalue: 224
stableDimension: 0
stamp: i32 [224] ⇊00000000000000e0 ⇈00000000000000e0
stampKind: i32
value: int[224|0xe0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i361 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i361 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 428]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: i32 [224 - 239] ⇊00000000000000e0 ⇈00000000000000ef
=== Inputs ===
x: i360 
y: i358 
=== Succesors ===
=== Usages ===
i362 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i360 y: i358  <|@  <|@
f <@~|@floating>@ <|@
tid i362 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 429]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
resultBits: 8
stamp: i8 [-32 - -17] ⇊00000000000000e0 ⇈00000000000000ef
=== Inputs ===
value: i361 
=== Succesors ===
=== Usages ===
v1051 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i361  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1051 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1206 
address: v1702 
value: i362 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1061 
=== Usages ===
=== Predecessor ===
v1380 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1206 address: v1702 value: i362 stateAfter: - lastLocationAccess: - #next: v1061  <|@  <|@
f <@~|@floating>@ <|@
tid v1703 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i341 
index: a1665 
=== Succesors ===
=== Usages ===
v1061 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i341 index: a1665  <|@  <|@
f <@~|@floating>@ <|@
tid i366 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 443]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
rawvalue: 6
stableDimension: 0
stamp: i32 [6] ⇊0000000000000006 ⇈0000000000000006
stampKind: i32
value: int[6|0x6]
=== Inputs ===
=== Succesors ===
=== Usages ===
i367 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i367 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 445]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: i32 [0 - 1023] ⇈00000000000003ff
=== Inputs ===
x: i1018 
y: i366 
=== Succesors ===
=== Usages ===
i369 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i1018 y: i366  <|@  <|@
f <@~|@floating>@ <|@
tid i368 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 446]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
rawvalue: 63
stableDimension: 0
stamp: i32 [63] ⇊000000000000003f ⇈000000000000003f
stampKind: i32
value: int[63|0x3f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i369 i375 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i369 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 448]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: i32 [0 - 63] ⇈000000000000003f
=== Inputs ===
x: i367 
y: i368 
=== Succesors ===
=== Usages ===
i370 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i367 y: i368  <|@  <|@
f <@~|@floating>@ <|@
tid i370 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 449]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: i32 [128 - 191] ⇊0000000000000080 ⇈00000000000000bf
=== Inputs ===
x: i369 
y: i295 
=== Succesors ===
=== Usages ===
i371 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i369 y: i295  <|@  <|@
f <@~|@floating>@ <|@
tid i371 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 450]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
resultBits: 8
stamp: i8 [-128 - -65] ⇊0000000000000080 ⇈00000000000000bf
=== Inputs ===
value: i370 
=== Succesors ===
=== Usages ===
v1061 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i370  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1061 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 451]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1206 
address: v1703 
value: i371 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1071 
=== Usages ===
=== Predecessor ===
v1051 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1206 address: v1703 value: i371 stateAfter: - lastLocationAccess: - #next: v1071  <|@  <|@
f <@~|@floating>@ <|@
tid v1704 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i394 
index: a1665 
=== Succesors ===
=== Usages ===
v1071 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i394 index: a1665  <|@  <|@
f <@~|@floating>@ <|@
tid i375 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 466]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: i32 [0 - 63] ⇈000000000000003f
=== Inputs ===
x: i1018 
y: i368 
=== Succesors ===
=== Usages ===
i376 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i1018 y: i368  <|@  <|@
f <@~|@floating>@ <|@
tid i376 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 467]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: i32 [128 - 191] ⇊0000000000000080 ⇈00000000000000bf
=== Inputs ===
x: i375 
y: i295 
=== Succesors ===
=== Usages ===
i377 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i375 y: i295  <|@  <|@
f <@~|@floating>@ <|@
tid i377 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 468]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
resultBits: 8
stamp: i8 [-128 - -65] ⇊0000000000000080 ⇈00000000000000bf
=== Inputs ===
value: i376 
=== Succesors ===
=== Usages ===
v1071 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i376  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1071 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 469]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1206 
address: v1704 
value: i377 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v396 
=== Usages ===
=== Predecessor ===
v1061 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1206 address: v1704 value: i377 stateAfter: - lastLocationAccess: - #next: v396  <|@  <|@
f <@~|@floating>@ <|@
tid i395 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 456]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: i32
=== Inputs ===
x: i320 
y: i355 
=== Succesors ===
=== Usages ===
i320 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i320 y: i355  <|@  <|@
f <@*|@fixed>@ <|@
tid v396 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 1
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:634) [bci: 470]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
loopBegin: v318 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1071 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v318  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1383 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 469]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v318 
=== Succesors ===
next: v1384 
=== Usages ===
=== Predecessor ===
v1385 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v318 #next: v1384  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B107" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1384 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 469]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v1506 
=== Usages ===
=== Predecessor ===
v1383 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v1506  <|@  <|@
f <@~|@floating>@ <|@
tid i1507 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -272411
stableDimension: 0
stamp: i32 [-272411] ⇊00000000fffbd7e5 ⇈00000000fffbd7e5
stampKind: i32
value: int[-272411|0xfffffffffffbd7e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1495 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1506 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1492 
=== Predecessor ===
v1384 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1377 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v318 
=== Succesors ===
next: v1378 
=== Usages ===
=== Predecessor ===
v1379 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v318 #next: v1378  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B107" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1378 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v1504 
=== Usages ===
=== Predecessor ===
v1377 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v1504  <|@  <|@
f <@~|@floating>@ <|@
tid i1505 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -267291
stableDimension: 0
stamp: i32 [-267291] ⇊00000000fffbebe5 ⇈00000000fffbebe5
stampKind: i32
value: int[-267291|0xfffffffffffbebe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1495 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1504 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1492 
=== Predecessor ===
v1378 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1365 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 3]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 229]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v318 
=== Succesors ===
next: v1366 
=== Usages ===
=== Predecessor ===
v1367 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v318 #next: v1366  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B107" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1366 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 3]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 229]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v1500 
=== Usages ===
=== Predecessor ===
v1365 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v1500  <|@  <|@
f <@~|@floating>@ <|@
tid i1501 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -266259
stableDimension: 0
stamp: i32 [-266259] ⇊00000000fffbefed ⇈00000000fffbefed
stampKind: i32
value: int[-266259|0xfffffffffffbefed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1495 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1500 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1492 
=== Predecessor ===
v1366 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B96" "B97" 
    xhandlers
    flags 
    probability 4607182422079717084
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v324 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 476]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v318 
=== Succesors ===
next: v1390 
=== Usages ===
=== Predecessor ===
v328 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v318 #next: v1390  <|@  <|@
f <@~|@floating>@ <|@
tid i469 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 6]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: i32
=== Inputs ===
x: i319 
y: i1675 
=== Succesors ===
=== Usages ===
v503 v495 v497 v1074 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i319 y: i1675  <|@  <|@
f <@~|@floating>@ <|@
tid v495 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1667 
y: i469 
=== Succesors ===
=== Usages ===
v1390 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1667 y: i469  <|@  <|@
f <@*|@fixed>@ <|@
tid v1390 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v495 
=== Succesors ===
trueSuccessor: v1389 
falseSuccessor: v1386 
=== Usages ===
=== Predecessor ===
v324 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v495 #trueSuccessor: v1389 #falseSuccessor: v1386  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B107" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1389 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v1508 
=== Usages ===
=== Predecessor ===
v1390 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v1508  <|@  <|@
f <@~|@floating>@ <|@
tid i1509 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -274451
stableDimension: 0
stamp: i32 [-274451] ⇊00000000fffbcfed ⇈00000000fffbcfed
stampKind: i32
value: int[-274451|0xfffffffffffbcfed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1495 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1508 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1492 
=== Predecessor ===
v1389 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B98" "B99" 
    xhandlers
    flags 
    probability 4607182422079717084
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1386 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1395 
=== Usages ===
=== Predecessor ===
v1390 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1395  <|@  <|@
f <@~|@floating>@ <|@
tid v497 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i469 
y: i10 
=== Succesors ===
=== Usages ===
v1395 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i469 y: i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v1395 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v497 
=== Succesors ===
trueSuccessor: v1394 
falseSuccessor: v1391 
=== Usages ===
=== Predecessor ===
v1386 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v497 #trueSuccessor: v1394 #falseSuccessor: v1391  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B107" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1394 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v1510 
=== Usages ===
=== Predecessor ===
v1395 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v1510  <|@  <|@
f <@~|@floating>@ <|@
tid i1511 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -274707
stableDimension: 0
stamp: i32 [-274707] ⇊00000000fffbceed ⇈00000000fffbceed
stampKind: i32
value: int[-274707|0xfffffffffffbceed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1495 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1510 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1492 
=== Predecessor ===
v1394 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B100" "B101" 
    xhandlers
    flags 
    probability 4607182422079717084
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1391 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1684 
=== Usages ===
=== Predecessor ===
v1395 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1684  <|@  <|@
f <@~|@floating>@ <|@
tid v1705 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1429 
index: - 
=== Succesors ===
=== Usages ===
i1684 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1429 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1684 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.mark
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 26]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1705 
=== Succesors ===
next: v1400 
=== Usages ===
v503 
=== Predecessor ===
v1391 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1705 #next: v1400  <|@  <|@
f <@~|@floating>@ <|@
tid v503 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i469 
y: i1684 
=== Succesors ===
=== Usages ===
v1400 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i469 y: i1684  <|@  <|@
f <@*|@fixed>@ <|@
tid v1400 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v503 
=== Succesors ===
trueSuccessor: v1399 
falseSuccessor: v1396 
=== Usages ===
=== Predecessor ===
i1684 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v503 #trueSuccessor: v1399 #falseSuccessor: v1396  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B107" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1399 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v1512 
=== Usages ===
=== Predecessor ===
v1400 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v1512  <|@  <|@
f <@~|@floating>@ <|@
tid i1513 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -275731
stableDimension: 0
stamp: i32 [-275731] ⇊00000000fffbcaed ⇈00000000fffbcaed
stampKind: i32
value: int[-275731|0xfffffffffffbcaed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1495 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1512 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1492 
=== Predecessor ===
v1399 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B102" "B103" 
    xhandlers
    flags 
    probability 4607182422079717084
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1396 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1405 
=== Usages ===
=== Predecessor ===
v1400 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1405  <|@  <|@
f <@~|@floating>@ <|@
tid i476 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 17]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: i32
=== Inputs ===
x: i320 
y: i1672 
=== Succesors ===
=== Usages ===
?525 v520 v522 v1081 v528 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i320 y: i1672  <|@  <|@
f <@~|@floating>@ <|@
tid v520 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1673 
y: i476 
=== Succesors ===
=== Usages ===
v1405 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1673 y: i476  <|@  <|@
f <@*|@fixed>@ <|@
tid v1405 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v520 
=== Succesors ===
trueSuccessor: v1404 
falseSuccessor: v1401 
=== Usages ===
=== Predecessor ===
v1396 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v520 #trueSuccessor: v1404 #falseSuccessor: v1401  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B107" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1404 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v1514 
=== Usages ===
=== Predecessor ===
v1405 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v1514  <|@  <|@
f <@~|@floating>@ <|@
tid i1515 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -275987
stableDimension: 0
stamp: i32 [-275987] ⇊00000000fffbc9ed ⇈00000000fffbc9ed
stampKind: i32
value: int[-275987|0xfffffffffffbc9ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1495 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1514 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1492 
=== Predecessor ===
v1404 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" "B105" 
    xhandlers
    flags 
    probability 4607182422079717084
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1401 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1410 
=== Usages ===
=== Predecessor ===
v1405 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1410  <|@  <|@
f <@~|@floating>@ <|@
tid v522 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i476 
y: i10 
=== Succesors ===
=== Usages ===
v1410 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i476 y: i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v1410 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v522 
=== Succesors ===
trueSuccessor: v1409 
falseSuccessor: v1406 
=== Usages ===
=== Predecessor ===
v1401 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v522 #trueSuccessor: v1409 #falseSuccessor: v1406  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B107" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1409 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v1516 
=== Usages ===
=== Predecessor ===
v1410 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v1516  <|@  <|@
f <@~|@floating>@ <|@
tid i1517 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -276243
stableDimension: 0
stamp: i32 [-276243] ⇊00000000fffbc8ed ⇈00000000fffbc8ed
stampKind: i32
value: int[-276243|0xfffffffffffbc8ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1495 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1516 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1492 
=== Predecessor ===
v1409 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" "B108" 
    xhandlers
    flags 
    probability 4607182422079717084
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1406 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1685 
=== Usages ===
=== Predecessor ===
v1410 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1685  <|@  <|@
f <@~|@floating>@ <|@
tid v1706 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1664 
=== Succesors ===
=== Usages ===
i1685 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1664  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1685 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.mark
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 26]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1706 
=== Succesors ===
next: v1415 
=== Usages ===
v528 
=== Predecessor ===
v1406 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1706 #next: v1415  <|@  <|@
f <@~|@floating>@ <|@
tid v528 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i476 
y: i1685 
=== Succesors ===
=== Usages ===
v1415 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i476 y: i1685  <|@  <|@
f <@*|@fixed>@ <|@
tid v1415 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v528 
=== Succesors ===
trueSuccessor: v1414 
falseSuccessor: v1411 
=== Usages ===
=== Predecessor ===
i1685 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v528 #trueSuccessor: v1414 #falseSuccessor: v1411  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B107" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1414 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v1518 
=== Usages ===
=== Predecessor ===
v1415 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v1518  <|@  <|@
f <@~|@floating>@ <|@
tid i1519 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -277523
stableDimension: 0
stamp: i32 [-277523] ⇊00000000fffbc3ed ⇈00000000fffbc3ed
stampKind: i32
value: int[-277523|0xfffffffffffbc3ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1495 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1518 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1492 
=== Predecessor ===
v1414 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B65" "B81" "B94" "B85" "B92" "B90" "B96" "B98" "B100" "B102" "B104" "B106" 
    successors 
    xhandlers
    flags 
    probability 2371145203810566144
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1495 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-277523 - -261403] ⇊00000000fff800e5 ⇈00000000ffffffed
valueDescription: i32
=== Inputs ===
merge: v1492 
values: i1494 i1499 i1501 i1503 i1505 i1507 i1509 i1511 i1513 i1515 i1517 i1519 
=== Succesors ===
=== Usages ===
v1497 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1492 values: i1494 i1499 i1501 i1503 i1505 i1507 i1509 i1511 i1513 i1515 i1517 i1519  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1492 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1493 v1498 v1500 v1502 v1504 v1506 v1508 v1510 v1512 v1514 v1516 v1518 
=== Succesors ===
next: v1497 
=== Usages ===
i1495 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1493 v1498 v1500 v1502 v1504 v1506 v1508 v1510 v1512 v1514 v1516 v1518 #next: v1497  <|@  <|@
tid ?321 <|@
d <@d|@=== Debug Properties ===
bci: 109
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)>
duringCall: false
localsSize: 12
locksSize: 0
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 597
stackSize: 0
=== Inputs ===
outerFrameState: ?397 
values: a1668 a133 a971 a1119 i319 i733 a1665 i320 i737 - - - 
virtualObjectMappings: ?866 
=== Succesors ===
=== Usages ===
v1497 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?397 values: a1668 a133 a971 a1119 i319 i733 a1665 i320 i737 - - - virtualObjectMappings: ?866  <|@  <|@
f <@*|@fixed>@ <|@
tid v1497 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?321 
actionAndReason: i1495 
speculation: a1441 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1492 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?321 actionAndReason: i1495 speculation: a1441  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B109" 
    xhandlers
    flags 
    probability 4607182422079717084
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1411 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1074 
=== Usages ===
=== Predecessor ===
v1415 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1074  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1074 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Buffer.position
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:245) [bci: 22]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1690 
value: i469 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1081 
=== Usages ===
=== Predecessor ===
v1411 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1690 value: i469 stateAfter: - lastLocationAccess: - #next: v1081  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1081 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Buffer.position
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:245) [bci: 22]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1713 
value: i476 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v834 
=== Usages ===
=== Predecessor ===
v1074 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1713 value: i476 stateAfter: - lastLocationAccess: - #next: v834  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B110" "B111" 
    xhandlers
    flags 
    probability 4607182422079717084
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v834 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:273) [bci: 54]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: i1686 
=== Usages ===
=== Predecessor ===
v1081 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: i1686  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1686 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.position
nodeSourcePosition: at java.nio.Buffer.remaining(Buffer.java:391) [bci: 5]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:274) [bci: 84]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1690 
=== Succesors ===
next: v1419 
=== Usages ===
i893 
=== Predecessor ===
v834 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1690 #next: v1419  <|@  <|@
f <@~|@floating>@ <|@
tid i893 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.nio.Buffer.remaining(Buffer.java:391) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:274) [bci: 84]
stamp: i32
=== Inputs ===
x: i1667 
y: i1686 
=== Succesors ===
=== Usages ===
v894 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i1667 y: i1686  <|@  <|@
f <@~|@floating>@ <|@
tid v894 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:274) [bci: 88]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i893 
y: i41 
=== Succesors ===
=== Usages ===
v1419 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i893 y: i41  <|@  <|@
f <@*|@fixed>@ <|@
tid v1419 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:274) [bci: 88]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v894 
=== Succesors ===
trueSuccessor: v1418 
falseSuccessor: v1416 
=== Usages ===
=== Predecessor ===
i1686 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v894 #trueSuccessor: v1418 #falseSuccessor: v1416  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1418 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:274) [bci: 88]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1417 
=== Usages ===
=== Predecessor ===
v1419 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1417  <|@  <|@
tid ?389 <|@
d <@d|@=== Debug Properties ===
bci: 482
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)>
duringCall: true
localsSize: 12
locksSize: 0
nodeSourcePosition: at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 636
stackSize: 0
=== Inputs ===
outerFrameState: ?397 
values: - a133 a971 - i319 - - i320 - - - - 
=== Succesors ===
=== Usages ===
?481 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?397 values: - a133 a971 - i319 - - i320 - - - -  <|@  <|@
tid ?481 <|@
d <@d|@=== Debug Properties ===
bci: 4
code: ResolvedJavaMethodBytecode<UTF_8.access$200(Buffer, int, Buffer, int)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 57
stackSize: 0
=== Inputs ===
outerFrameState: ?389 
values: - - - - 
=== Succesors ===
=== Usages ===
?531 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?389 values: - - - -  <|@  <|@
tid ?531 <|@
d <@d|@=== Debug Properties ===
bci: 18
code: ResolvedJavaMethodBytecode<UTF_8.updatePositions(Buffer, int, Buffer, int)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 78
stackSize: 0
=== Inputs ===
outerFrameState: ?481 
values: - - - - 
=== Succesors ===
=== Usages ===
?525 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?481 values: - - - -  <|@  <|@
tid ?525 <|@
d <@d|@=== Debug Properties ===
bci: 25
code: ResolvedJavaMethodBytecode<Buffer.position(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:245) [bci: 22]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
rethrowException: false
sourceFile: Buffer.java
sourceLine: 246
stackSize: 0
=== Inputs ===
outerFrameState: ?531 
values: a971 i476 
virtualObjectMappings: ?866 
=== Succesors ===
=== Usages ===
v1417 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?531 values: a971 i476 virtualObjectMappings: ?866  <|@  <|@
f <@*|@fixed>@ <|@
tid v1417 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1086
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:274) [bci: 88]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?525 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1418 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?525  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors 
    xhandlers
    flags 
    probability 4607182422079717084
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1416 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:274) [bci: 88]
stamp: void
=== Inputs ===
=== Succesors ===
next: v896 
=== Usages ===
=== Predecessor ===
v1419 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v896  <|@  <|@
f <@*|@fixed>@ <|@
tid v896 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:287) [bci: 155]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1416 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B116" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1314 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:570) [bci: 23]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v1473 
=== Usages ===
=== Predecessor ===
v76 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v1473  <|@  <|@
f <@~|@floating>@ <|@
tid i1474 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -285715
stableDimension: 0
stamp: i32 [-285715] ⇊00000000fffba3ed ⇈00000000fffba3ed
stampKind: i32
value: int[-285715|0xfffffffffffba3ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1458 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1473 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1455 
=== Predecessor ===
v1314 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B116" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1309 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.ByteBuffer.hasArray(ByteBuffer.java:970) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 8]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v1471 
=== Usages ===
=== Predecessor ===
v1310 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v1471  <|@  <|@
f <@~|@floating>@ <|@
tid i1472 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -306707
stableDimension: 0
stamp: i32 [-306707] ⇊00000000fffb51ed ⇈00000000fffb51ed
stampKind: i32
value: int[-306707|0xfffffffffffb51ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1458 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1471 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1455 
=== Predecessor ===
v1309 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B116" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1304 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:970) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v1469 
=== Usages ===
=== Predecessor ===
v1305 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v1469  <|@  <|@
f <@~|@floating>@ <|@
tid i1470 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -306195
stableDimension: 0
stamp: i32 [-306195] ⇊00000000fffb53ed ⇈00000000fffb53ed
stampKind: i32
value: int[-306195|0xfffffffffffb53ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1458 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1469 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1455 
=== Predecessor ===
v1304 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B116" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1294 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 27]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v1465 
=== Usages ===
=== Predecessor ===
v1295 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v1465  <|@  <|@
f <@~|@floating>@ <|@
tid i1466 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -246803
stableDimension: 0
stamp: i32 [-246803] ⇊00000000fffc3bed ⇈00000000fffc3bed
stampKind: i32
value: int[-246803|0xfffffffffffc3bed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1458 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1465 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1455 
=== Predecessor ===
v1294 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" "B114" "B113" "B112" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1458 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-306963 - -246803] ⇊00000000fff800e5 ⇈00000000fffffffd
valueDescription: i32
=== Inputs ===
merge: v1455 
values: i1466 i1470 i1472 i1474 
=== Succesors ===
=== Usages ===
v1460 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1455 values: i1466 i1470 i1472 i1474  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1455 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1465 v1469 v1471 v1473 
=== Succesors ===
next: v1460 
=== Usages ===
i1458 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1465 v1469 v1471 v1473 #next: v1460  <|@  <|@
f <@*|@fixed>@ <|@
tid v1460 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?16 
actionAndReason: i1458 
speculation: a1441 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1455 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?16 actionAndReason: i1458 speculation: a1441  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1274 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:267) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1453 
=== Usages ===
=== Predecessor ===
v1275 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1453  <|@  <|@
f <@~|@floating>@ <|@
tid i1454 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -245011
stableDimension: 0
stamp: i32 [-245011] ⇊00000000fffc42ed ⇈00000000fffc42ed
stampKind: i32
value: int[-245011|0xfffffffffffc42ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1442 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1453 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1438 
=== Predecessor ===
v1274 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" "B7" "B117" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1442 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-245011 - -241675] ⇊00000000fffc40e5 ⇈00000000fffc4ffd
valueDescription: i32
=== Inputs ===
merge: v1438 
values: i1446 i1448 i1450 i1452 i1454 
=== Succesors ===
=== Usages ===
v1444 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1438 values: i1446 i1448 i1450 i1452 i1454  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1438 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1445 v1447 v1449 v1451 v1453 
=== Succesors ===
next: v1444 
=== Usages ===
i1442 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1445 v1447 v1449 v1451 v1453 #next: v1444  <|@  <|@
f <@*|@fixed>@ <|@
tid v1444 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?5 
actionAndReason: i1442 
speculation: a1441 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1438 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?5 actionAndReason: i1442 speculation: a1441  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i1661 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: i1661  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Lsun/nio/cs/StreamEncoder;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v1037 v1689 ?16 ?1434 v1692 v1693 ?26 ?103 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# [C
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 a1426 v1688 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v190 i145 v192 v1582 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 i145 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?5 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<StreamEncoder.implWrite(char[], int, int)>
duringCall: false
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: StreamEncoder.java
sourceLine: 265
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 i4 - - 
=== Succesors ===
=== Usages ===
v1444 a1543 i1661 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 i4 - -  <|@  <|@
f <@~|@floating>@ <|@
tid v1688 <|@
result [v1|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i1661 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1661 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 7]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 3]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v1688 
=== Succesors ===
next: v1259 
=== Usages ===
v173 v1586 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v1688 #next: v1259  <|@  <|@
f <@~|@floating>@ <|@
tid i145 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 5]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 3]
stamp: i32
=== Inputs ===
x: i3 
y: i4 
=== Succesors ===
=== Usages ===
v175 v1584 v190 v173 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i3 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:274) [bci: 5]
at java.nio.Buffer.<init>(Buffer.java:201) [bci: 55]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1661 
y: i145 
=== Succesors ===
=== Usages ===
v1259 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1661 y: i145  <|@  <|@
f <@~|@floating>@ <|@
tid a1441 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1444 v1525 v1480 v1460 v1497 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1259 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:274) [bci: 5]
at java.nio.Buffer.<init>(Buffer.java:201) [bci: 55]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 3]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v173 
=== Succesors ===
trueSuccessor: v1258 
falseSuccessor: v1256 
=== Usages ===
=== Predecessor ===
i1661 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v173 #trueSuccessor: v1258 #falseSuccessor: v1256  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@46383ced slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v4|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = ADD (x: v2|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1258 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:274) [bci: 5]
at java.nio.Buffer.<init>(Buffer.java:201) [bci: 55]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1445 
=== Usages ===
=== Predecessor ===
v1259 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1445  <|@  <|@
f <@~|@floating>@ <|@
tid i1446 <|@
result int[-242963|0xfffffffffffc4aed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -242963
stableDimension: 0
stamp: i32 [-242963] ⇊00000000fffc4aed ⇈00000000fffc4aed
stampKind: i32
value: int[-242963|0xfffffffffffc4aed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1442 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1445 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1438 
=== Predecessor ===
v1258 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-242963|0xfffffffffffc4aed]] destination: B1 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1256 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:274) [bci: 5]
at java.nio.Buffer.<init>(Buffer.java:201) [bci: 55]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1263 
=== Usages ===
=== Predecessor ===
v1259 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1263  <|@  <|@
f <@~|@floating>@ <|@
tid i10 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:267) [bci: 12]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v11 ?227 v555 v497 v522 v730 v73 v599 v1588 v175 v192 v1580 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v175 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:274) [bci: 9]
at java.nio.Buffer.<init>(Buffer.java:201) [bci: 55]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i145 
y: i10 
=== Succesors ===
=== Usages ===
v1263 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i145 y: i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v1263 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:274) [bci: 9]
at java.nio.Buffer.<init>(Buffer.java:201) [bci: 55]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 3]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v175 
=== Succesors ===
trueSuccessor: v1262 
falseSuccessor: v1260 
=== Usages ===
=== Predecessor ===
v1256 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v175 #trueSuccessor: v1262 #falseSuccessor: v1260  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1262 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:274) [bci: 9]
at java.nio.Buffer.<init>(Buffer.java:201) [bci: 55]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1447 
=== Usages ===
=== Predecessor ===
v1263 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1447  <|@  <|@
f <@~|@floating>@ <|@
tid i1448 <|@
result int[-243219|0xfffffffffffc49ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -243219
stableDimension: 0
stamp: i32 [-243219] ⇊00000000fffc49ed ⇈00000000fffc49ed
stampKind: i32
value: int[-243219|0xfffffffffffc49ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1442 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1447 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1438 
=== Predecessor ===
v1262 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-243219|0xfffffffffffc49ed]] destination: B3 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1260 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:274) [bci: 9]
at java.nio.Buffer.<init>(Buffer.java:201) [bci: 55]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1267 
=== Usages ===
=== Predecessor ===
v1263 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1267  <|@  <|@
f <@~|@floating>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at java.nio.Buffer.<init>(Buffer.java:202) [bci: 61]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i145 
y: i3 
=== Succesors ===
=== Usages ===
v1267 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i145 y: i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v1267 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at java.nio.Buffer.<init>(Buffer.java:202) [bci: 61]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 3]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v190 
=== Succesors ===
trueSuccessor: v1266 
falseSuccessor: v1264 
=== Usages ===
=== Predecessor ===
v1260 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v190 #trueSuccessor: v1266 #falseSuccessor: v1264  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1266 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at java.nio.Buffer.<init>(Buffer.java:202) [bci: 61]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1449 
=== Usages ===
=== Predecessor ===
v1267 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1449  <|@  <|@
f <@~|@floating>@ <|@
tid i1450 <|@
result int[-243475|0xfffffffffffc48ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -243475
stableDimension: 0
stamp: i32 [-243475] ⇊00000000fffc48ed ⇈00000000fffc48ed
stampKind: i32
value: int[-243475|0xfffffffffffc48ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1442 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1449 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1438 
=== Predecessor ===
v1266 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-243475|0xfffffffffffc48ed]] destination: B5 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1264 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at java.nio.Buffer.<init>(Buffer.java:202) [bci: 61]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1271 
=== Usages ===
=== Predecessor ===
v1267 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1271  <|@  <|@
f <@~|@floating>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at java.nio.Buffer.<init>(Buffer.java:202) [bci: 61]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i10 
=== Succesors ===
=== Usages ===
v1271 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v1271 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at java.nio.Buffer.<init>(Buffer.java:202) [bci: 61]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 3]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v192 
=== Succesors ===
trueSuccessor: v1270 
falseSuccessor: v1268 
=== Usages ===
=== Predecessor ===
v1264 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v192 #trueSuccessor: v1270 #falseSuccessor: v1268  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1270 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at java.nio.Buffer.<init>(Buffer.java:202) [bci: 61]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1451 
=== Usages ===
=== Predecessor ===
v1271 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1451  <|@  <|@
f <@~|@floating>@ <|@
tid i1452 <|@
result int[-243731|0xfffffffffffc47ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -243731
stableDimension: 0
stamp: i32 [-243731] ⇊00000000fffc47ed ⇈00000000fffc47ed
stampKind: i32
value: int[-243731|0xfffffffffffc47ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1442 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1451 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1438 
=== Predecessor ===
v1270 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-243731|0xfffffffffffc47ed]] destination: B7 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B117" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1268 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at java.nio.Buffer.<init>(Buffer.java:202) [bci: 61]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1662 
=== Usages ===
=== Predecessor ===
v1271 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1662  <|@  <|@
f <@~|@floating>@ <|@
tid v1689 <|@
result [v0|QWORD[.] + 23] <|@
d <@d|@=== Debug Properties ===
displacement: 23
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1662 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1662 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: StreamEncoder.haveLeftoverChar
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:267) [bci: 9]
nullCheck: false
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
stateBefore: - 
guard: - 
address: v1689 
=== Succesors ===
next: v1275 
=== Usages ===
i956 
=== Predecessor ===
v1268 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1689 #next: v1275  <|@  <|@
f <@~|@floating>@ <|@
tid i956 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:267) [bci: 9]
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i1662 
=== Succesors ===
=== Usages ===
v11 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1662  <|@  <|@
f <@~|@floating>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:267) [bci: 12]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i956 
y: i10 
=== Succesors ===
=== Usages ===
v1275 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i956 y: i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v1275 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:267) [bci: 12]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v11 
=== Succesors ===
trueSuccessor: v1272 
falseSuccessor: v1274 
=== Usages ===
=== Predecessor ===
i1662 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v11 #trueSuccessor: v1272 #falseSuccessor: v1274  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVZXB [v0|QWORD[.] + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v6|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1272 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:267) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1531 
=== Usages ===
=== Predecessor ===
v1275 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1531  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1531 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1550 
=== Usages ===
v1715 v1716 
=== Predecessor ===
v1272 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1550  <|@  <|@
f <@~|@floating>@ <|@
tid v1715 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1531 
index: - 
=== Succesors ===
=== Usages ===
j1550 v1552 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1531 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1550 <|@
result v7|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1715 
=== Succesors ===
next: j1551 
=== Usages ===
j1595 j1556 v1720 
=== Predecessor ===
j1531 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1715 #next: j1551  <|@  <|@
f <@~|@floating>@ <|@
tid v1716 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1531 
index: - 
=== Succesors ===
=== Usages ===
j1551 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1531 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1551 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1716 
=== Succesors ===
next: v1539 
=== Usages ===
v1536 
=== Predecessor ===
j1550 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1716 #next: v1539  <|@  <|@
f <@~|@floating>@ <|@
tid j1594 <|@
result long[48|0x30] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 48
stableDimension: 0
stamp: i64 [48] ⇊0000000000000030 ⇈0000000000000030
stampKind: i64
value: long[48|0x30]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1595 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1595 <|@
result v8|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1550 
y: j1594 
=== Succesors ===
=== Usages ===
v1536 v1552 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1550 y: j1594  <|@  <|@
f <@~|@floating>@ <|@
tid v1536 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1551 
y: j1595 
=== Succesors ===
=== Usages ===
v1539 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1551 y: j1595  <|@  <|@
f <@~|@floating>@ <|@
tid i41 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:281) [bci: 116]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v54 v117 v78 v1117 v1087 i309 i381 i341 i308 v894 a1543 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1539 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1536 
=== Succesors ===
trueSuccessor: v1537 
falseSuccessor: v1538 
=== Usages ===
=== Predecessor ===
j1551 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1536 #trueSuccessor: v1537 #falseSuccessor: v1538  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = LEA [v7|QWORD + 48] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v8|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1537 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a1543 
=== Usages ===
=== Predecessor ===
v1539 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1543  <|@  <|@
f <@~|@floating>@ <|@
tid v1529 <|@
result v9|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a1543 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1597 <|@
result int[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 8
stableDimension: 0
stamp: i32 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1543 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1543 <|@
result v10|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?5 
arguments: v1529 i1597 i41 
=== Succesors ===
next: j1544 
=== Usages ===
j1544 
=== Predecessor ===
v1537 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?5 arguments: v1529 i1597 i41 #next: j1544  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1544 <|@
result v10|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1543 
=== Succesors ===
next: v1557 
=== Usages ===
j1556 
=== Predecessor ===
a1543 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1543 #next: v1557  <|@  <|@
f <@*|@fixed>@ <|@
tid v1557 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1554 
=== Predecessor ===
j1544 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v9|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v10|QWORD[.]] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1538 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1552 
=== Usages ===
=== Predecessor ===
v1539 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1552  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1552 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1715 
value: j1595 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1548 
=== Usages ===
=== Predecessor ===
v1538 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1715 value: j1595 stateAfter: - lastLocationAccess: - #next: v1548  <|@  <|@
f <@~|@floating>@ <|@
tid v1720 <|@
result [v7|QWORD + 240] <|@
d <@d|@=== Debug Properties ===
displacement: 240
scale: Times1
stamp: void*
=== Inputs ===
base: j1550 
index: - 
=== Succesors ===
=== Usages ===
v1548 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1550 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1548 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v1720 
=== Succesors ===
next: v1555 
=== Usages ===
=== Predecessor ===
v1552 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1720 #next: v1555  <|@  <|@
f <@*|@fixed>@ <|@
tid v1555 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1554 
=== Predecessor ===
v1548 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v7|QWORD + 240] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v7|QWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1556 <|@
result v11|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1554 
values: j1550 j1544 
=== Succesors ===
=== Usages ===
v1719 v1718 a1422 v1721 v1722 v1723 v1724 v1725 v1726 v1727 v1728 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1554 values: j1550 j1544  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1554 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1555 v1557 
=== Succesors ===
next: a1422 
=== Usages ===
j1556 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1555 v1557 #next: a1422  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1422 <|@
result v12|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j1556 
=== Succesors ===
next: j1568 
=== Usages ===
a1429 
=== Predecessor ===
v1554 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1556 #next: j1568  <|@  <|@
f <@~|@floating>@ <|@
tid v1562 <|@
result v13|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j1563 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1563 <|@
result v13|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v1562 
=== Succesors ===
=== Usages ===
v1717 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v1562  <|@  <|@
f <@~|@floating>@ <|@
tid v1717 <|@
result [v13|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j1563 
index: - 
=== Succesors ===
=== Usages ===
j1568 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1563 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1568 <|@
result v14|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1717 
=== Succesors ===
next: v1569 
=== Usages ===
v1569 
=== Predecessor ===
a1422 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1717 #next: v1569  <|@  <|@
f <@~|@floating>@ <|@
tid v1718 <|@
result [v11|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1556 
index: - 
=== Succesors ===
=== Usages ===
v1569 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1556 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1569 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1718 
value: j1568 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1573 
=== Usages ===
=== Predecessor ===
j1568 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1718 value: j1568 stateAfter: - lastLocationAccess: - #next: v1573  <|@  <|@
f <@~|@floating>@ <|@
tid v1719 <|@
result [v11|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1556 
index: - 
=== Succesors ===
=== Usages ===
v1573 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1556 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1600 <|@
result meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1573 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1573 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1719 
value: v1600 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1578 
=== Usages ===
=== Predecessor ===
v1569 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1719 value: v1600 stateAfter: - lastLocationAccess: - #next: v1578  <|@  <|@
f <@~|@floating>@ <|@
tid v1721 <|@
result [v11|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1556 
index: - 
=== Succesors ===
=== Usages ===
v1578 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1556 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1576 <|@
result v15|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4294967295
stableDimension: 0
stamp: i64 [4294967295] ⇊00000000ffffffff ⇈00000000ffffffff
stampKind: i64
value: long[4294967295|0xffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1578 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1578 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1721 
value: j1576 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1580 
=== Usages ===
=== Predecessor ===
v1573 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1721 value: j1576 stateAfter: - lastLocationAccess: - #next: v1580  <|@  <|@
f <@~|@floating>@ <|@
tid v1722 <|@
result [v11|QWORD[*] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j1556 
index: - 
=== Succesors ===
=== Usages ===
v1580 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1556 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1580 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1722 
value: i10 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1582 
=== Usages ===
=== Predecessor ===
v1578 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1722 value: i10 stateAfter: - lastLocationAccess: - #next: v1582  <|@  <|@
f <@~|@floating>@ <|@
tid v1723 <|@
result [v11|QWORD[*] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j1556 
index: - 
=== Succesors ===
=== Usages ===
v1582 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1556 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1582 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1723 
value: i3 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1584 
=== Usages ===
=== Predecessor ===
v1580 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1723 value: i3 stateAfter: - lastLocationAccess: - #next: v1584  <|@  <|@
f <@~|@floating>@ <|@
tid v1724 <|@
result [v11|QWORD[*] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: j1556 
index: - 
=== Succesors ===
=== Usages ===
v1584 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1556 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1584 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1724 
value: i145 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1586 
=== Usages ===
=== Predecessor ===
v1582 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1724 value: i145 stateAfter: - lastLocationAccess: - #next: v1586  <|@  <|@
f <@~|@floating>@ <|@
tid v1725 <|@
result [v11|QWORD[*] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: j1556 
index: - 
=== Succesors ===
=== Usages ===
v1586 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1556 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1586 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1725 
value: i1661 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1588 
=== Usages ===
=== Predecessor ===
v1584 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1725 value: i1661 stateAfter: - lastLocationAccess: - #next: v1588  <|@  <|@
f <@~|@floating>@ <|@
tid v1726 <|@
result [v11|QWORD[*] + 36] <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times1
stamp: void*
=== Inputs ===
base: j1556 
index: - 
=== Succesors ===
=== Usages ===
v1588 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1556 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1588 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1726 
value: i10 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1591 
=== Usages ===
=== Predecessor ===
v1586 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1726 value: i10 stateAfter: - lastLocationAccess: - #next: v1591  <|@  <|@
f <@~|@floating>@ <|@
tid v1727 <|@
result [v11|QWORD[*] + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
=== Inputs ===
base: j1556 
index: - 
=== Succesors ===
=== Usages ===
v1591 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1556 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i1589 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i8
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1591 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1591 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1727 
value: i1589 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1593 
=== Usages ===
=== Predecessor ===
v1588 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1727 value: i1589 stateAfter: - lastLocationAccess: - #next: v1593  <|@  <|@
f <@~|@floating>@ <|@
tid v1728 <|@
result [v11|QWORD[*] + 44] <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times1
stamp: void*
=== Inputs ===
base: j1556 
index: - 
=== Succesors ===
=== Usages ===
v1593 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1556 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a1426 <|@
result v16|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n# [C
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v1593 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1593 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1728 
value: a1426 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1429 
=== Usages ===
=== Predecessor ===
v1591 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1728 value: a1426 stateAfter: - lastLocationAccess: - #next: a1429  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1429 <|@
result v12|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1422 
=== Succesors ===
next: v1430 
=== Usages ===
v1705 ?866 v1690 v1691 v1707 v1708 v1709 v1029 
=== Predecessor ===
v1593 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1422 #next: v1430  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1430 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v14 
=== Usages ===
=== Predecessor ===
a1429 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v14  <|@  <|@
f <@*|@fixed>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v15 
=== Predecessor ===
v1430 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = MOVE v11|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOV [v13|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD[*]], y: v14|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v11|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOVE input: long[4294967295|0xffffffff] <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD[*] + 12], y: v15|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD[*] + 24], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD[*] + 28], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD[*] + 32], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD[*] + 36], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v11|QWORD[*] + 40], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v16|DWORD[.] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1032c7c7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD[*] + 44], y: v16|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B75" 
    successors "B14" "B115" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607182529020635733
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 1.0000244738936506
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v14 
=== Succesors ===
next: a1663 
=== Usages ===
v33 v46 v834 v1414 v1409 v1404 v1399 v1394 v1389 v1384 v1294 v1378 v1304 v1309 v1314 v1319 v1324 v1329 v1335 v1372 v1345 v1354 v1360 v1366 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v14 #next: a1663  <|@  <|@
f <@~|@floating>@ <|@
tid v1707 <|@
result [v12|QWORD[.] + 44] <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times1
stamp: void*
=== Inputs ===
base: a1429 
index: - 
=== Succesors ===
=== Usages ===
a1663 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1429 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1663 <|@
result v17|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CharBuffer.hb
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:970) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v1707 
=== Succesors ===
next: v1729 
=== Usages ===
v1729 a1119 v1695 
=== Predecessor ===
v15 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1707 #next: v1729  <|@  <|@
tid a133 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@67262f52
hasIdentity: true
objectId: 0
stamp: a!# Ljava/nio/HeapCharBuffer;
type: HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?212 ?1434 ?389 ?212 ?16 ?321 ?103 ?316 ?227 ?26 ?280 ?866 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?866 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a133 
materializedValue: a1429 
=== Succesors ===
=== Usages ===
?16 ?321 ?1433 ?280 ?26 ?385 ?525 ?1434 ?316 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a133 materializedValue: a1429  <|@  <|@
tid ?16 <|@
d <@d|@=== Debug Properties ===
bci: 22
code: ResolvedJavaMethodBytecode<StreamEncoder.implWrite(char[], int, int)>
duringCall: false
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: StreamEncoder.java
sourceLine: 270
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - a133 - 
virtualObjectMappings: ?866 
=== Succesors ===
=== Usages ===
v1460 v1729 a1665 v1730 v1731 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - a133 - virtualObjectMappings: ?866  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1729 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?16 
object: a1663 
=== Succesors ===
next: a1664 
=== Usages ===
=== Predecessor ===
a1663 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?16 object: a1663 #next: a1664  <|@  <|@
f <@~|@floating>@ <|@
tid v1693 <|@
result [v0|QWORD[.] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1664 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1664 <|@
result v18|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: StreamEncoder.bb
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 37]
nullCheck: false
stamp: n Ljava/nio/ByteBuffer;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1693 
=== Succesors ===
next: a1665 
=== Usages ===
a971 v1714 v1706 v1710 v1711 v1712 v1713 
=== Predecessor ===
v1729 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1693 #next: a1665  <|@  <|@
f <@~|@floating>@ <|@
tid v1710 <|@
result [v18|DWORD[.] * 8 + 44] <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1664 
=== Succesors ===
=== Usages ===
a1665 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1664  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1665 <|@
result v19|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ByteBuffer.hb
nodeSourcePosition: at java.nio.ByteBuffer.hasArray(ByteBuffer.java:970) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 8]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: true
stamp: n# [B
=== Inputs ===
stateBefore: ?16 
guard: - 
address: v1710 
=== Succesors ===
next: v1730 
=== Usages ===
?321 v1730 v1697 v1698 v1700 v1702 v1703 v1704 ?316 ?280 v1732 
=== Predecessor ===
a1664 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?16 guard: - address: v1710 #next: v1730  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1730 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?16 
object: a1665 
=== Succesors ===
next: i1666 
=== Usages ===
=== Predecessor ===
a1665 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?16 object: a1665 #next: i1666  <|@  <|@
f <@~|@floating>@ <|@
tid v1690 <|@
result [v12|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1429 
index: - 
=== Succesors ===
=== Usages ===
i1666 i1683 v1074 i1686 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1429 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1666 <|@
result v20|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.position
nodeSourcePosition: at java.nio.Buffer.hasRemaining(Buffer.java:402) [bci: 1]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 24]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1690 
=== Succesors ===
next: i1667 
=== Usages ===
v66 i732 
=== Predecessor ===
v1730 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1690 #next: i1667  <|@  <|@
f <@~|@floating>@ <|@
tid v1691 <|@
result [v12|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1429 
index: - 
=== Succesors ===
=== Usages ===
i1667 i1682 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1429 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1667 <|@
result v21|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.limit
nodeSourcePosition: at java.nio.Buffer.hasRemaining(Buffer.java:402) [bci: 5]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 24]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1691 
=== Succesors ===
next: v1295 
=== Usages ===
v66 i893 v495 i733 
=== Predecessor ===
i1666 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1691 #next: v1295  <|@  <|@
f <@~|@floating>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.hasRemaining(Buffer.java:402) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 24]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1666 
y: i1667 
=== Succesors ===
=== Usages ===
v1295 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1666 y: i1667  <|@  <|@
f <@*|@fixed>@ <|@
tid v1295 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 27]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v66 
=== Succesors ===
trueSuccessor: v1291 
falseSuccessor: v1294 
=== Usages ===
=== Predecessor ===
i1667 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v66 #trueSuccessor: v1291 #falseSuccessor: v1294  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v17|DWORD[.] = MOV [v12|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22]
locals: v0|QWORD[.] - - - v12|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v17|DWORD[.] * 8] state [bci:22] <|@ <|@
      nr   -1  <|@ instruction v18|DWORD[.] = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22]
locals: v0|QWORD[.] - - - v12|QWORD[.] - 
>@ <|@ instruction v19|DWORD[.] = MOV [v18|DWORD[.] * 8 + 44] size: DWORD state [bci:22] <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22]
locals: v0|QWORD[.] - - - v12|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v19|DWORD[.] * 8] state [bci:22] <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOV [v12|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOV [v12|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v21|DWORD, y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B114" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182529020635733
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1291 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1668 
=== Usages ===
=== Predecessor ===
v1295 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1668  <|@  <|@
f <@~|@floating>@ <|@
tid v1692 <|@
result [v0|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1668 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1668 <|@
result v22|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: StreamEncoder.encoder
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 31]
nullCheck: false
stamp: n# Lsun/nio/cs/UTF_8$Encoder;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1692 
=== Succesors ===
next: v1731 
=== Usages ===
?316 v1731 v1694 ?321 ?227 ?280 
=== Predecessor ===
v1291 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1692 #next: v1731  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1731 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?16 
object: a1668 
=== Succesors ===
next: i1669 
=== Usages ===
=== Predecessor ===
a1668 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?16 object: a1668 #next: i1669  <|@  <|@
f <@~|@floating>@ <|@
tid v1708 <|@
result [v12|QWORD[.] + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
=== Inputs ===
base: a1429 
index: - 
=== Succesors ===
=== Usages ===
i1669 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1429 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1669 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CharBuffer.isReadOnly
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:970) [bci: 8]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: false
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
stateBefore: - 
guard: - 
address: v1708 
=== Succesors ===
next: v1305 
=== Usages ===
i1122 
=== Predecessor ===
v1731 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1708 #next: v1305  <|@  <|@
f <@~|@floating>@ <|@
tid i1122 <|@
result v23|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:970) [bci: 8]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i1669 
=== Succesors ===
=== Usages ===
v599 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1669  <|@  <|@
f <@~|@floating>@ <|@
tid v599 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:970) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1122 
y: i10 
=== Succesors ===
=== Usages ===
v1305 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1122 y: i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v1305 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:970) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v599 
=== Succesors ===
trueSuccessor: v1301 
falseSuccessor: v1304 
=== Usages ===
=== Predecessor ===
i1669 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v599 #trueSuccessor: v1301 #falseSuccessor: v1304  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v22|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22]
locals: v0|QWORD[.] - - - v12|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v22|DWORD[.] * 8] state [bci:22] <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = MOVZXB [v12|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v23|DWORD, y: v23|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B113" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182529020635733
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1301 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:970) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1670 
=== Usages ===
=== Predecessor ===
v1305 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1670  <|@  <|@
f <@~|@floating>@ <|@
tid v1711 <|@
result [v18|DWORD[.] * 8 + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1664 
=== Succesors ===
=== Usages ===
i1670 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1664  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1670 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ByteBuffer.isReadOnly
nodeSourcePosition: at java.nio.ByteBuffer.hasArray(ByteBuffer.java:970) [bci: 8]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 8]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: false
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
stateBefore: - 
guard: - 
address: v1711 
=== Succesors ===
next: v1310 
=== Usages ===
i1131 
=== Predecessor ===
v1301 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1711 #next: v1310  <|@  <|@
f <@~|@floating>@ <|@
tid i1131 <|@
result v24|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.nio.ByteBuffer.hasArray(ByteBuffer.java:970) [bci: 8]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 8]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i1670 
=== Succesors ===
=== Usages ===
v730 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1670  <|@  <|@
f <@~|@floating>@ <|@
tid v730 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.ByteBuffer.hasArray(ByteBuffer.java:970) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 8]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1131 
y: i10 
=== Succesors ===
=== Usages ===
v1310 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1131 y: i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v1310 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.ByteBuffer.hasArray(ByteBuffer.java:970) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 8]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v730 
=== Succesors ===
trueSuccessor: v1306 
falseSuccessor: v1309 
=== Usages ===
=== Predecessor ===
i1670 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v730 #trueSuccessor: v1306 #falseSuccessor: v1309  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOVZXB [v18|DWORD[.] * 8 + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v24|DWORD, y: v24|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182529020635733
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1306 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.ByteBuffer.hasArray(ByteBuffer.java:970) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 8]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1671 
=== Usages ===
=== Predecessor ===
v1310 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1671  <|@  <|@
f <@~|@floating>@ <|@
tid v1694 <|@
result [v22|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1668 
=== Succesors ===
=== Usages ===
i1671 v1087 v1117 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1668  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1671 <|@
result v25|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CharsetEncoder.state
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:570) [bci: 12]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1694 
=== Succesors ===
next: i1672 
=== Usages ===
v73 v78 
=== Predecessor ===
v1306 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1694 #next: i1672  <|@  <|@
f <@~|@floating>@ <|@
tid v1712 <|@
result [v18|DWORD[.] * 8 + 36] <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1664 
=== Succesors ===
=== Usages ===
i1672 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1664  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1672 <|@
result v26|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ByteBuffer.offset
nodeSourcePosition: at java.nio.ByteBuffer.arrayOffset(ByteBuffer.java:1025) [bci: 31]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:590) [bci: 34]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1712 
=== Succesors ===
next: i1673 
=== Usages ===
i735 i737 i476 
=== Predecessor ===
i1671 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1712 #next: i1673  <|@  <|@
f <@~|@floating>@ <|@
tid v1714 <|@
result [v18|DWORD[.] * 8 + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1664 
=== Succesors ===
=== Usages ===
i1673 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1664  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1673 <|@
result v27|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.limit
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:256) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:591) [bci: 49]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1714 
=== Succesors ===
next: i1674 
=== Usages ===
i737 v520 
=== Predecessor ===
i1672 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1714 #next: i1674  <|@  <|@
f <@~|@floating>@ <|@
tid v1713 <|@
result [v18|DWORD[.] * 8 + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1664 
=== Succesors ===
=== Usages ===
i1674 v1081 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1664  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1674 <|@
result v28|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.position
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:226) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:590) [bci: 38]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1713 
=== Succesors ===
next: i1675 
=== Usages ===
i735 
=== Predecessor ===
i1673 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1713 #next: i1675  <|@  <|@
f <@~|@floating>@ <|@
tid v1709 <|@
result [v12|QWORD[.] + 36] <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times1
stamp: void*
=== Inputs ===
base: a1429 
index: - 
=== Succesors ===
=== Usages ===
i1675 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1429 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1675 <|@
result v29|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CharBuffer.offset
nodeSourcePosition: at java.nio.CharBuffer.arrayOffset(CharBuffer.java:1025) [bci: 31]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:586) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1709 
=== Succesors ===
next: v1315 
=== Usages ===
i469 i733 i732 
=== Predecessor ===
i1674 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1709 #next: v1315  <|@  <|@
f <@~|@floating>@ <|@
tid i737 <|@
result v30|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:591) [bci: 52]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: i32
=== Inputs ===
x: i1672 
y: i1673 
=== Succesors ===
=== Usages ===
i739 i354 v334 i800 i800 ?316 ?321 ?280 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1672 y: i1673  <|@  <|@
f <@~|@floating>@ <|@
tid i735 <|@
result v31|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:590) [bci: 41]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: i32
=== Inputs ===
x: i1672 
y: i1674 
=== Succesors ===
=== Usages ===
i739 ?280 ?280 i799 i285 i1211 v1221 j1225 v1229 i1660 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1672 y: i1674  <|@  <|@
f <@~|@floating>@ <|@
tid i739 <|@
result v32|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 66]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: i32
=== Inputs ===
x: i737 
y: i735 
=== Succesors ===
=== Usages ===
v754 i464 i464 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i737 y: i735  <|@  <|@
f <@~|@floating>@ <|@
tid i733 <|@
result v33|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:587) [bci: 24]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: i32
=== Inputs ===
x: i1667 
y: i1675 
=== Succesors ===
=== Usages ===
i738 ?321 v322 v1244 ?316 i1235 ?280 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1667 y: i1675  <|@  <|@
f <@~|@floating>@ <|@
tid i732 <|@
result v34|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:586) [bci: 13]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: i32
=== Inputs ===
x: i1666 
y: i1675 
=== Succesors ===
=== Usages ===
i738 ?280 i284 j1210 v1218 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1666 y: i1675  <|@  <|@
f <@~|@floating>@ <|@
tid i738 <|@
result v35|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 61]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: i32
=== Inputs ===
x: i733 
y: i732 
=== Succesors ===
=== Usages ===
v754 i464 i799 i464 i1660 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i733 y: i732  <|@  <|@
f <@~|@floating>@ <|@
tid v754 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 67]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i739 
y: i738 
=== Succesors ===
=== Usages ===
v757 v459 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i739 y: i738  <|@  <|@
f <@~|@floating>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:570) [bci: 23]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1671 
y: i41 
=== Succesors ===
=== Usages ===
v1315 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1671 y: i41  <|@  <|@
f <@*|@fixed>@ <|@
tid v1315 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:570) [bci: 23]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 0.9977260532612405
=== Inputs ===
condition: v78 
=== Succesors ===
trueSuccessor: v1311 
falseSuccessor: v75 
=== Usages ===
=== Predecessor ===
i1675 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v78 #trueSuccessor: v1311 #falseSuccessor: v75  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = MOV [v22|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOV [v18|DWORD[.] * 8 + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = MOV [v18|DWORD[.] * 8 + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = MOV [v18|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOV [v12|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = ADD (x: v26|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = ADD (x: v28|DWORD, y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = SUB (x: v30|DWORD, ~y: v31|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = ADD (x: v21|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = ADD (x: v20|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = SUB (x: v33|DWORD, ~y: v34|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v25|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9977260532612405 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607162156848611752
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1311 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:570) [bci: 23]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1117 
=== Usages ===
=== Predecessor ===
v1315 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1117  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1117 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CharsetEncoder.state
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:573) [bci: 51]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1694 
value: i41 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v757 
=== Usages ===
=== Predecessor ===
v1311 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1694 value: i41 stateAfter: - lastLocationAccess: - #next: v757  <|@  <|@
f <@*|@fixed>@ <|@
tid v757 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 67]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 0.5358952359076989
=== Inputs ===
condition: v754 
=== Succesors ===
trueSuccessor: v755 
falseSuccessor: v756 
=== Usages ===
=== Predecessor ===
v1117 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v754 #trueSuccessor: v755 #falseSuccessor: v756  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v22|DWORD[.] * 8 + 20] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v35|DWORD, y: v32|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5358952359076989 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602991276431535006
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v755 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 9]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 67]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v761 
=== Usages ===
=== Predecessor ===
v757 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v761  <|@  <|@
f <@*|@fixed>@ <|@
tid v761 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v462 
=== Predecessor ===
v755 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v32|DWORD, v30|DWORD] destination: B18 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602013380752059413
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v756 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 5]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 67]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v762 
=== Usages ===
=== Predecessor ===
v757 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v762  <|@  <|@
f <@~|@floating>@ <|@
tid i1660 <|@
result v36|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 70]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: i32
=== Inputs ===
x: i735 
y: i738 
=== Succesors ===
=== Usages ===
i800 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i735 y: i738  <|@  <|@
f <@*|@fixed>@ <|@
tid v762 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v462 
=== Predecessor ===
v756 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = ADD (x: v35|DWORD, y: v31|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v35|DWORD, v36|DWORD] destination: B19 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B21" "B112" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4567389915042742827
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:570) [bci: 18]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v76 
=== Usages ===
=== Predecessor ===
v1315 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v76  <|@  <|@
f <@~|@floating>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:570) [bci: 15]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1671 
y: i10 
=== Succesors ===
=== Usages ===
v76 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1671 y: i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:570) [bci: 15]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v73 
=== Succesors ===
trueSuccessor: v74 
falseSuccessor: v1314 
=== Usages ===
=== Predecessor ===
v75 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v73 #trueSuccessor: v74 #falseSuccessor: v1314  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v25|DWORD, y: v25|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4567389915042742827
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:573) [bci: 48]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1087 
=== Usages ===
=== Predecessor ===
v76 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1087  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1087 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CharsetEncoder.state
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:573) [bci: 51]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1694 
value: i41 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v459 
=== Usages ===
=== Predecessor ===
v74 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1694 value: i41 stateAfter: - lastLocationAccess: - #next: v459  <|@  <|@
f <@*|@fixed>@ <|@
tid v459 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 67]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 0.5358952359076989
=== Inputs ===
condition: v754 
=== Succesors ===
trueSuccessor: v457 
falseSuccessor: v458 
=== Usages ===
=== Predecessor ===
v1087 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v754 #trueSuccessor: v457 #falseSuccessor: v458  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v22|DWORD[.] * 8 + 20] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v35|DWORD, y: v32|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5358952359076989 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4563262748217087376
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v457 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 9]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 67]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v465 
=== Usages ===
=== Predecessor ===
v459 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v465  <|@  <|@
f <@*|@fixed>@ <|@
tid v465 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v462 
=== Predecessor ===
v457 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v32|DWORD, v30|DWORD] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562509882613657286
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v458 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 5]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 67]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v463 
=== Usages ===
=== Predecessor ===
v459 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v463  <|@  <|@
f <@~|@floating>@ <|@
tid i799 <|@
result v37|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 70]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: i32
=== Inputs ===
x: i735 
y: i738 
=== Succesors ===
=== Usages ===
i800 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i735 y: i738  <|@  <|@
f <@*|@fixed>@ <|@
tid v463 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v462 
=== Predecessor ===
v458 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = ADD (x: v31|DWORD, y: v35|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v35|DWORD, v37|DWORD] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B22" "B18" "B19" 
    successors "B25" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182529020635733
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i464 <|@
result v38|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v462 
values: i738 i739 i739 i738 
=== Succesors ===
=== Usages ===
?280 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v462 values: i738 i739 i739 i738  <|@  <|@
f <@~|@floating>@ <|@
tid i800 <|@
result v39|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v462 
values: i799 i737 i737 i1660 
=== Succesors ===
=== Usages ===
i1211 v287 v1221 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v462 values: i799 i737 i737 i1660  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v462 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v463 v465 v761 v762 
=== Succesors ===
next: i1676 
=== Usages ===
i464 i800 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v463 v465 v761 v762 #next: i1676  <|@  <|@
f <@~|@floating>@ <|@
tid v1695 <|@
result [v17|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1663 
=== Succesors ===
=== Usages ===
i1676 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1663  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1676 <|@
result v40|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1695 
=== Succesors ===
next: v1617 
=== Usages ===
v1218 v1241 j1208 
=== Predecessor ===
v462 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1695 #next: v1617  <|@  <|@
f <@~|@floating>@ <|@
tid j1208 <|@
result v41|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i1676 
=== Succesors ===
=== Usages ===
v1217 v1240 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1676  <|@  <|@
f <@~|@floating>@ <|@
tid i1211 <|@
result v42|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i32
=== Inputs ===
x: i800 
y: i735 
=== Succesors ===
=== Usages ===
j1212 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i800 y: i735  <|@  <|@
f <@~|@floating>@ <|@
tid j1212 <|@
result v43|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1211 
=== Succesors ===
=== Usages ===
j1214 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1211  <|@  <|@
f <@~|@floating>@ <|@
tid j1213 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1214 j1237 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1214 <|@
result v44|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j1212 
y: j1213 
=== Succesors ===
=== Usages ===
j1215 j1226 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1212 y: j1213  <|@  <|@
f <@~|@floating>@ <|@
tid v1221 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i735 
y: i800 
=== Succesors ===
=== Usages ===
v1617 v1633 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i735 y: i800  <|@  <|@
tid ?103 <|@
d <@d|@=== Debug Properties ===
bci: 41
code: ResolvedJavaMethodBytecode<StreamEncoder.implWrite(char[], int, int)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: StreamEncoder.java
sourceLine: 271
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - a133 - 
=== Succesors ===
=== Usages ===
?227 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - a133 -  <|@  <|@
f <@~|@floating>@ <|@
tid a971 <|@
result v45|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 37]
op: Uncompress
stamp: a Ljava/nio/ByteBuffer;
=== Inputs ===
value: a1664 
=== Succesors ===
=== Usages ===
?227 ?525 ?321 ?389 ?316 v1029 ?280 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1664  <|@  <|@
tid ?212 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a133 
materializedValue: a133 
=== Succesors ===
=== Usages ===
?227 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a133 materializedValue: a133  <|@  <|@
tid ?227 <|@
d <@d|@=== Debug Properties ===
bci: 57
code: ResolvedJavaMethodBytecode<CharsetEncoder.encode(CharBuffer, ByteBuffer, boolean)>
duringCall: true
localsSize: 7
locksSize: 0
rethrowException: false
sourceFile: CharsetEncoder.java
sourceLine: 579
stackSize: 0
=== Inputs ===
outerFrameState: ?103 
values: a1668 a133 a971 i10 - - - 
virtualObjectMappings: ?212 
=== Succesors ===
=== Usages ===
?397 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?103 values: a1668 a133 a971 i10 - - - virtualObjectMappings: ?212  <|@  <|@
tid ?397 <|@
d <@d|@=== Debug Properties ===
bci: 17
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeLoop(CharBuffer, ByteBuffer)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 691
stackSize: 0
=== Inputs ===
outerFrameState: ?227 
values: - - - 
=== Succesors ===
=== Usages ===
?389 ?385 ?280 ?1433 ?316 ?321 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?227 values: - - -  <|@  <|@
f <@~|@floating>@ <|@
tid a1119 <|@
result v46|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:970) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1663 
=== Succesors ===
=== Usages ===
?316 v1699 v1696 ?321 ?280 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1663  <|@  <|@
f <@*|@fixed>@ <|@
tid v1617 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1221 
=== Succesors ===
trueSuccessor: v1616 
falseSuccessor: v1613 
=== Usages ===
=== Predecessor ===
i1676 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1221 #trueSuccessor: v1616 #falseSuccessor: v1613  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v38|DWORD, v39|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = MOV [v17|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOV v40|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = SUB (x: v39|DWORD, ~y: v31|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOVSXD v42|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = DEC v43|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.] = UNCOMPRESSPOINTER (input: v18|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1032c7c7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v17|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1032c7c7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v39|DWORD, y: v31|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678929393265237
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1616 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1625 
=== Usages ===
=== Predecessor ===
v1617 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1625  <|@  <|@
f <@~|@floating>@ <|@
tid j1210 <|@
result v47|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i732 
=== Succesors ===
=== Usages ===
j1215 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i732  <|@  <|@
f <@~|@floating>@ <|@
tid j1215 <|@
result v48|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j1210 
y: j1214 
=== Succesors ===
=== Usages ===
v1217 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1210 y: j1214  <|@  <|@
f <@~|@floating>@ <|@
tid v1217 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1215 
y: j1208 
=== Succesors ===
=== Usages ===
v1625 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1215 y: j1208  <|@  <|@
f <@*|@fixed>@ <|@
tid v1625 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1217 
=== Succesors ===
trueSuccessor: v1624 
falseSuccessor: v1621 
=== Usages ===
=== Predecessor ===
v1616 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1217 #trueSuccessor: v1624 #falseSuccessor: v1621  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = MOVSXD v34|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = ADD (x: v47|QWORD, y: v44|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v41|QWORD, y: v48|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B25 -> B26 falseDestination: B25 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678929393265237
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1624 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1623 
=== Usages ===
=== Predecessor ===
v1625 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1623  <|@  <|@
f <@~|@floating>@ <|@
tid v1218 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i732 
y: i1676 
=== Succesors ===
=== Usages ===
v1623 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i732 y: i1676  <|@  <|@
f <@*|@fixed>@ <|@
tid v1623 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1218 
=== Succesors ===
trueSuccessor: v1614 
falseSuccessor: v1622 
=== Usages ===
=== Predecessor ===
v1624 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1218 #trueSuccessor: v1614 #falseSuccessor: v1622  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v40|DWORD, y: v34|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B33" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678929393265237
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1614 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1612 
=== Usages ===
=== Predecessor ===
v1623 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1612  <|@  <|@
f <@*|@fixed>@ <|@
tid v1612 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1610 
=== Predecessor ===
v1614 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B27 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1622 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1620 
=== Usages ===
=== Predecessor ===
v1623 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1620  <|@  <|@
f <@*|@fixed>@ <|@
tid v1620 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1618 
=== Predecessor ===
v1622 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1621 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1619 
=== Usages ===
=== Predecessor ===
v1625 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1619  <|@  <|@
f <@*|@fixed>@ <|@
tid v1619 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1618 
=== Predecessor ===
v1621 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1618 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1619 v1620 
=== Succesors ===
next: v1319 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1619 v1620 #next: v1319  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B41" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1319 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v1484 
=== Usages ===
=== Predecessor ===
v1618 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v1484  <|@  <|@
f <@~|@floating>@ <|@
tid i1485 <|@
result int[-250651|0xfffffffffffc2ce5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -250651
stableDimension: 0
stamp: i32 [-250651] ⇊00000000fffc2ce5 ⇈00000000fffc2ce5
stampKind: i32
value: int[-250651|0xfffffffffffc2ce5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1487 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1484 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1483 
=== Predecessor ===
v1319 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-250651|0xfffffffffffc2ce5]] destination: B31 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B33" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678929393265237
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1613 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1611 
=== Usages ===
=== Predecessor ===
v1617 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1611  <|@  <|@
f <@*|@fixed>@ <|@
tid v1611 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1610 
=== Predecessor ===
v1613 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B27" 
    successors "B34" "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182529020635733
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1611 v1612 
=== Succesors ===
next: v1633 
=== Usages ===
v1223 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1611 v1612 #next: v1633  <|@  <|@
f <@*|@fixed>@ <|@
tid v1633 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1221 
=== Succesors ===
trueSuccessor: v1632 
falseSuccessor: v1629 
=== Usages ===
=== Predecessor ===
v1610 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1221 #trueSuccessor: v1632 #falseSuccessor: v1629  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v39|DWORD, y: v31|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B38" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678929393265237
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1632 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1677 
=== Usages ===
=== Predecessor ===
v1633 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1677  <|@  <|@
f <@~|@floating>@ <|@
tid v1697 <|@
result [v19|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1665 
=== Succesors ===
=== Usages ===
i1677 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1665  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1677 <|@
result v49|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1697 
=== Succesors ===
next: v1641 
=== Usages ===
v1229 j1224 
=== Predecessor ===
v1632 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1697 #next: v1641  <|@  <|@
f <@~|@floating>@ <|@
tid j1225 <|@
result v50|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i735 
=== Succesors ===
=== Usages ===
j1226 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i735  <|@  <|@
f <@~|@floating>@ <|@
tid j1226 <|@
result v51|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j1214 
y: j1225 
=== Succesors ===
=== Usages ===
v1228 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1214 y: j1225  <|@  <|@
f <@~|@floating>@ <|@
tid j1224 <|@
result v52|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i1677 
=== Succesors ===
=== Usages ===
v1228 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1677  <|@  <|@
f <@~|@floating>@ <|@
tid v1228 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1226 
y: j1224 
=== Succesors ===
=== Usages ===
v1641 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1226 y: j1224  <|@  <|@
f <@*|@fixed>@ <|@
tid v1641 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1228 
=== Succesors ===
trueSuccessor: v1640 
falseSuccessor: v1637 
=== Usages ===
=== Predecessor ===
i1677 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1228 #trueSuccessor: v1640 #falseSuccessor: v1637  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = MOV [v19|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = MOVSXD v31|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = ADD (x: v50|QWORD, y: v44|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = MOV v49|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v52|QWORD, y: v51|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678929393265237
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1640 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1639 
=== Usages ===
=== Predecessor ===
v1641 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1639  <|@  <|@
f <@~|@floating>@ <|@
tid v1229 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i735 
y: i1677 
=== Succesors ===
=== Usages ===
v1639 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i735 y: i1677  <|@  <|@
f <@*|@fixed>@ <|@
tid v1639 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1229 
=== Succesors ===
trueSuccessor: v1630 
falseSuccessor: v1638 
=== Usages ===
=== Predecessor ===
v1640 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1229 #trueSuccessor: v1630 #falseSuccessor: v1638  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v49|DWORD, y: v31|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678929393265237
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1630 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1628 
=== Usages ===
=== Predecessor ===
v1639 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1628  <|@  <|@
f <@*|@fixed>@ <|@
tid v1628 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1626 
=== Predecessor ===
v1630 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B36 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1638 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1636 
=== Usages ===
=== Predecessor ===
v1639 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1636  <|@  <|@
f <@*|@fixed>@ <|@
tid v1636 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1634 
=== Predecessor ===
v1638 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1637 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1635 
=== Usages ===
=== Predecessor ===
v1641 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1635  <|@  <|@
f <@*|@fixed>@ <|@
tid v1635 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1634 
=== Predecessor ===
v1637 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1634 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1635 v1636 
=== Succesors ===
next: v1324 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1635 v1636 #next: v1324  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1324 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v1490 
=== Usages ===
=== Predecessor ===
v1634 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v1490  <|@  <|@
f <@~|@floating>@ <|@
tid i1491 <|@
result int[-256283|0xfffffffffffc16e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -256283
stableDimension: 0
stamp: i32 [-256283] ⇊00000000fffc16e5 ⇈00000000fffc16e5
stampKind: i32
value: int[-256283|0xfffffffffffc16e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1487 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1490 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1483 
=== Predecessor ===
v1324 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-256283|0xfffffffffffc16e5]] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B31" "B40" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1487 <|@
result v53|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-256283 - -250651] ⇊00000000fffc04e5 ⇈00000000fffc3ee5
valueDescription: i32
=== Inputs ===
merge: v1483 
values: i1485 i1491 
=== Succesors ===
=== Usages ===
v1489 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1483 values: i1485 i1491  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1483 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1484 v1490 
=== Succesors ===
next: v1489 
=== Usages ===
i1487 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1484 v1490 #next: v1489  <|@  <|@
tid ?280 <|@
d <@d|@=== Debug Properties ===
bci: 70
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)>
duringCall: false
localsSize: 12
locksSize: 0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 67]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 592
stackSize: 2
=== Inputs ===
outerFrameState: ?397 
values: a1668 a133 a971 a1119 i732 i733 a1665 i735 i737 - - - i735 i464 
virtualObjectMappings: ?866 
=== Succesors ===
=== Usages ===
v1489 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?397 values: a1668 a133 a971 a1119 i732 i733 a1665 i735 i737 - - - i735 i464 virtualObjectMappings: ?866  <|@  <|@
f <@~|@floating>@ <|@
tid a1486 <|@
result v54|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@1159422862
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@1159422862]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1489 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1489 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?280 
actionAndReason: i1487 
speculation: a1486 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1483 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?280 actionAndReason: i1487 speculation: a1486  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v53|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1159422862] <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v53|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v54|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 70]
stack: v31|DWORD v38|DWORD 
locals: v22|DWORD[.] v12|QWORD[.] v45|QWORD[.] v46|QWORD[.] v34|DWORD v33|DWORD v19|DWORD[.] v31|DWORD v30|DWORD - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: v22|DWORD[.] v12|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
locals: v0|QWORD[.] - - - v12|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:70, 17, 57, 41] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678929393265237
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1629 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1627 
=== Usages ===
=== Predecessor ===
v1633 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1627  <|@  <|@
f <@*|@fixed>@ <|@
tid v1627 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1626 
=== Predecessor ===
v1629 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B36" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182529020635733
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1626 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1627 v1628 
=== Succesors ===
next: v282 
=== Usages ===
v1233 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1627 v1628 #next: v282  <|@  <|@
f <@~|@floating>@ <|@
tid i1143 <|@
result short[128|0x80] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 87]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
rawvalue: 128
stableDimension: 0
stamp: i16 [128] ⇊0000000000000080 ⇈0000000000000080
stampKind: i16
value: short[128|0x80]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1144 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v282 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v283 
=== Predecessor ===
v1626 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v34|DWORD, v31|DWORD] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B46" 
    successors "B45" "B48" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4628637040060955957
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i284 <|@
result v55|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v283 
values: i732 i309 
=== Succesors ===
=== Usages ===
j1234 v1244 v1696 v1241 i309 i1235 ?316 i319 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v283 values: i732 i309  <|@  <|@
f <@~|@floating>@ <|@
tid i285 <|@
result v56|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v283 
values: i735 i308 
=== Succesors ===
=== Usages ===
v1698 v287 ?316 i320 i308 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v283 values: i735 i308  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 28.221435738803496
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v282 
=== Succesors ===
next: v293 
=== Usages ===
i284 i285 v289 v301 v315 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v282 #next: v293  <|@  <|@
f <@~|@floating>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 77]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i285 
y: i800 
=== Succesors ===
=== Usages ===
v293 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i285 y: i800  <|@  <|@
f <@*|@fixed>@ <|@
tid v293 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 77]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 0.9647476131021091
=== Inputs ===
condition: v287 
=== Succesors ===
trueSuccessor: v288 
falseSuccessor: v289 
=== Usages ===
=== Predecessor ===
v283 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v287 #trueSuccessor: v288 #falseSuccessor: v289  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v55|DWORD, v56|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v39|DWORD, y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9647476131021091 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4628357001361009421
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v288 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 80]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1678 
=== Usages ===
v1223 v1233 
=== Predecessor ===
v293 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1678  <|@  <|@
f <@~|@floating>@ <|@
tid v1223 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1610 v288 
=== Succesors ===
=== Usages ===
i1678 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1610 v288  <|@  <|@
f <@~|@floating>@ <|@
tid v1696 <|@
result [v46|QWORD[.] + v55|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a1119 
index: i284 
=== Succesors ===
=== Usages ===
i1678 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1119 index: i284  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1678 <|@
result v57|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v1223 
address: v1696 
=== Succesors ===
next: v307 
=== Usages ===
v1144 i1146 
=== Predecessor ===
v288 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1223 address: v1696 #next: v307  <|@  <|@
f <@~|@floating>@ <|@
tid v1144 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 87]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1678 
y: i1143 
=== Succesors ===
=== Usages ===
v307 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1678 y: i1143  <|@  <|@
f <@*|@fixed>@ <|@
tid v307 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 87]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 0.9998116902024854
=== Inputs ===
condition: v1144 
=== Succesors ===
trueSuccessor: v297 
falseSuccessor: v301 
=== Usages ===
=== Predecessor ===
i1678 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1144 #trueSuccessor: v297 #falseSuccessor: v301  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = MOVSX [v46|QWORD[.] + v55|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v57|DWORD y: 128 size: WORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9998116902024854 condition: |<| trueDestination: B45 -> B46 falseDestination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4628355558195456655
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v297 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 90]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1008 
=== Usages ===
=== Predecessor ===
v307 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1008  <|@  <|@
f <@~|@floating>@ <|@
tid v1233 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1626 v288 
=== Succesors ===
=== Usages ===
v1008 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1626 v288  <|@  <|@
f <@~|@floating>@ <|@
tid v1698 <|@
result [v56|DWORD + v19|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i285 
index: a1665 
=== Succesors ===
=== Usages ===
v1008 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i285 index: a1665  <|@  <|@
f <@~|@floating>@ <|@
tid i1146 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 16
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 104]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
resultBits: 8
stamp: i8
=== Inputs ===
value: i1678 
=== Succesors ===
=== Usages ===
v1008 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i1678  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1008 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1233 
address: v1698 
value: i1146 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v315 
=== Usages ===
=== Predecessor ===
v297 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1233 address: v1698 value: i1146 stateAfter: - lastLocationAccess: - #next: v315  <|@  <|@
f <@~|@floating>@ <|@
tid i308 <|@
result v58|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 94]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: i32
=== Inputs ===
x: i285 
y: i41 
=== Succesors ===
=== Usages ===
i285 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i285 y: i41  <|@  <|@
f <@~|@floating>@ <|@
tid i309 <|@
result v59|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 100]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: i32
=== Inputs ===
x: i284 
y: i41 
=== Succesors ===
=== Usages ===
i284 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i284 y: i41  <|@  <|@
f <@*|@fixed>@ <|@
tid v315 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
loopBegin: v283 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1008 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v283  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v56|DWORD + v19|DWORD[.] * 8 + 16], y: v57|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = INC v56|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = INC v55|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v59|DWORD, v58|DWORD] destination: B46 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B49" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572561228257811438
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v301 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v283 
=== Succesors ===
next: v300 
=== Usages ===
=== Predecessor ===
v307 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v283 #next: v300  <|@  <|@
f <@*|@fixed>@ <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v299 
=== Predecessor ===
v301 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B49" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607136457943565555
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v289 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v283 
=== Succesors ===
next: v298 
=== Usages ===
=== Predecessor ===
v293 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v283 #next: v298  <|@  <|@
f <@*|@fixed>@ <|@
tid v298 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v299 
=== Predecessor ===
v289 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B47" 
    successors "B50" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182529020635733
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v298 v300 
=== Succesors ===
next: v1649 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v298 v300 #next: v1649  <|@  <|@
f <@~|@floating>@ <|@
tid v1244 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i284 
y: i733 
=== Succesors ===
=== Usages ===
v1649 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i284 y: i733  <|@  <|@
f <@*|@fixed>@ <|@
tid v1649 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1244 
=== Succesors ===
trueSuccessor: v1648 
falseSuccessor: v1645 
=== Usages ===
=== Predecessor ===
v299 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1244 #trueSuccessor: v1648 #falseSuccessor: v1645  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v33|DWORD, y: v55|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B49 -> B50 falseDestination: B49 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678929393265237
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1648 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1657 
=== Usages ===
=== Predecessor ===
v1649 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1657  <|@  <|@
f <@~|@floating>@ <|@
tid j1234 <|@
result v60|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i284 
=== Succesors ===
=== Usages ===
j1238 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i284  <|@  <|@
f <@~|@floating>@ <|@
tid i1235 <|@
result v61|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i32
=== Inputs ===
x: i733 
y: i284 
=== Succesors ===
=== Usages ===
j1236 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i733 y: i284  <|@  <|@
f <@~|@floating>@ <|@
tid j1236 <|@
result v62|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1235 
=== Succesors ===
=== Usages ===
j1237 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1235  <|@  <|@
f <@~|@floating>@ <|@
tid j1237 <|@
result v63|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j1236 
y: j1213 
=== Succesors ===
=== Usages ===
j1238 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1236 y: j1213  <|@  <|@
f <@~|@floating>@ <|@
tid j1238 <|@
result v64|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j1234 
y: j1237 
=== Succesors ===
=== Usages ===
v1240 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1234 y: j1237  <|@  <|@
f <@~|@floating>@ <|@
tid v1240 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1238 
y: j1208 
=== Succesors ===
=== Usages ===
v1657 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1238 y: j1208  <|@  <|@
f <@*|@fixed>@ <|@
tid v1657 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1240 
=== Succesors ===
trueSuccessor: v1656 
falseSuccessor: v1653 
=== Usages ===
=== Predecessor ===
v1648 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1240 #trueSuccessor: v1656 #falseSuccessor: v1653  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = MOVSXD v55|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = SUB (x: v33|DWORD, ~y: v55|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = MOVSXD v61|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = DEC v62|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = ADD (x: v60|QWORD, y: v63|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v41|QWORD, y: v64|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B50 -> B51 falseDestination: B50 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678929393265237
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1656 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1655 
=== Usages ===
=== Predecessor ===
v1657 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1655  <|@  <|@
f <@~|@floating>@ <|@
tid v1241 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i284 
y: i1676 
=== Succesors ===
=== Usages ===
v1655 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i284 y: i1676  <|@  <|@
f <@*|@fixed>@ <|@
tid v1655 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1241 
=== Succesors ===
trueSuccessor: v1646 
falseSuccessor: v1654 
=== Usages ===
=== Predecessor ===
v1656 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1241 #trueSuccessor: v1646 #falseSuccessor: v1654  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v40|DWORD, y: v55|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B51 -> B52 falseDestination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678929393265237
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1646 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1644 
=== Usages ===
=== Predecessor ===
v1655 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1644  <|@  <|@
f <@*|@fixed>@ <|@
tid v1644 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1642 
=== Predecessor ===
v1646 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B52 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1654 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1652 
=== Usages ===
=== Predecessor ===
v1655 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1652  <|@  <|@
f <@*|@fixed>@ <|@
tid v1652 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1650 
=== Predecessor ===
v1654 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1653 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1651 
=== Usages ===
=== Predecessor ===
v1657 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1651  <|@  <|@
f <@*|@fixed>@ <|@
tid v1651 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1650 
=== Predecessor ===
v1653 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1650 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1651 v1652 
=== Succesors ===
next: v1329 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1651 v1652 #next: v1329  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1329 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v1327 
=== Usages ===
=== Predecessor ===
v1650 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v1327  <|@  <|@
tid ?316 <|@
d <@d|@=== Debug Properties ===
bci: 109
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)>
duringCall: false
localsSize: 12
locksSize: 0
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 597
stackSize: 0
=== Inputs ===
outerFrameState: ?397 
values: a1668 a133 a971 a1119 i284 i733 a1665 i285 i737 - - - 
virtualObjectMappings: ?866 
=== Succesors ===
=== Usages ===
v1327 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?397 values: a1668 a133 a971 a1119 i284 i733 a1665 i285 i737 - - - virtualObjectMappings: ?866  <|@  <|@
f <@*|@fixed>@ <|@
tid v1327 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1011
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
reason: BoundsCheckException
speculation: Object[d.a@1723836758]
stamp: void
=== Inputs ===
stateBefore: ?316 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1329 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?316  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1723836758] <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -258843 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v65|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: v22|DWORD[.] v12|QWORD[.] v45|QWORD[.] v46|QWORD[.] v55|DWORD v33|DWORD v19|DWORD[.] v56|DWORD v30|DWORD - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: v22|DWORD[.] v12|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
locals: v0|QWORD[.] - - - v12|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:109, 17, 57, 41] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678929393265237
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1645 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1643 
=== Usages ===
=== Predecessor ===
v1649 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1643  <|@  <|@
f <@*|@fixed>@ <|@
tid v1643 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1642 
=== Predecessor ===
v1645 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B52" 
    successors "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182529020635733
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1642 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1643 v1644 
=== Succesors ===
next: v317 
=== Usages ===
v1246 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1643 v1644 #next: v317  <|@  <|@
f <@*|@fixed>@ <|@
tid v317 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v318 
=== Predecessor ===
v1642 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v55|DWORD, v56|DWORD] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B63" "B88" 
    successors "B60" "B95" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4607879356046553365
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i319 <|@
result v66|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v318 
values: i284 i381 i381 
=== Succesors ===
=== Usages ===
?321 v322 ?389 v1699 v1029 i469 i381 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v318 values: i284 i381 i381  <|@  <|@
f <@~|@floating>@ <|@
tid i320 <|@
result v67|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v318 
values: i285 i341 i395 
=== Succesors ===
=== Usages ===
?321 v1043 v334 v1029 i341 v1700 i395 i354 v1702 i394 ?389 i476 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v318 values: i285 i341 i395  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v318 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.1547228949992876
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 2
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v317 
=== Succesors ===
next: v328 
=== Usages ===
i319 i320 v324 v336 v382 v396 v1383 v1334 v1359 v1365 v1371 v1377 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v317 #next: v328  <|@  <|@
f <@~|@floating>@ <|@
tid v322 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 113]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i319 
y: i733 
=== Succesors ===
=== Usages ===
v328 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i319 y: i733  <|@  <|@
f <@*|@fixed>@ <|@
tid v328 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 113]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 0.13401192679415996
=== Inputs ===
condition: v322 
=== Succesors ===
trueSuccessor: v323 
falseSuccessor: v324 
=== Usages ===
=== Predecessor ===
v318 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v322 #trueSuccessor: v323 #falseSuccessor: v324  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v66|DWORD, v67|DWORD] = LABEL numbPhis: 2 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v33|DWORD, y: v66|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.13401192679415996 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B79" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4594743492025225673
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v323 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 116]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1679 
=== Usages ===
v1246 
=== Predecessor ===
v328 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1679  <|@  <|@
f <@~|@floating>@ <|@
tid v1246 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1642 v323 
=== Succesors ===
=== Usages ===
i1679 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1642 v323  <|@  <|@
f <@~|@floating>@ <|@
tid v1699 <|@
result [v46|QWORD[.] + v66|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a1119 
index: i319 
=== Succesors ===
=== Usages ===
i1679 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1119 index: i319  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1679 <|@
result v68|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v1246 
address: v1699 
=== Succesors ===
next: i1680 
=== Usages ===
i1018 
=== Predecessor ===
v323 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1246 address: v1699 #next: i1680  <|@  <|@
f <@~|@floating>@ <|@
tid v1732 <|@
result [v19|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1665 
=== Succesors ===
=== Usages ===
i1680 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1665  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1680 <|@
result v69|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1732 
=== Succesors ===
next: v333 
=== Usages ===
v1043 v1063 
=== Predecessor ===
i1679 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1732 #next: v333  <|@  <|@
f <@~|@floating>@ <|@
tid v1043 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i320 
y: i1680 
=== Succesors ===
=== Usages ===
v1379 v1336 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i320 y: i1680  <|@  <|@
f <@~|@floating>@ <|@
tid i1018 <|@
result v70|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
resultBits: 32
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i1679 
=== Succesors ===
=== Usages ===
v330 i342 i367 v347 i375 v483 i360 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1679  <|@  <|@
f <@~|@floating>@ <|@
tid i295 <|@
result int[128|0x80] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 84]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
rawvalue: 128
stableDimension: 0
stamp: i32 [128] ⇊0000000000000080 ⇈0000000000000080
stampKind: i32
value: int[128|0x80]
=== Inputs ===
=== Succesors ===
=== Usages ===
i376 v330 i370 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v330 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:599) [bci: 127]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1018 
y: i295 
=== Succesors ===
=== Usages ===
v333 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1018 y: i295  <|@  <|@
f <@~|@floating>@ <|@
tid i381 <|@
result v71|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:634) [bci: 470]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: i32
=== Inputs ===
x: i319 
y: i41 
=== Succesors ===
=== Usages ===
i319 i319 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i319 y: i41  <|@  <|@
f <@~|@floating>@ <|@
tid i341 <|@
result v72|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 151]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: i32
=== Inputs ===
x: i320 
y: i41 
=== Succesors ===
=== Usages ===
i320 v1703 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i320 y: i41  <|@  <|@
f <@*|@fixed>@ <|@
tid v333 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:599) [bci: 127]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 0.9444529691575878
=== Inputs ===
condition: v330 
=== Succesors ===
trueSuccessor: v331 
falseSuccessor: v332 
=== Usages ===
=== Predecessor ===
i1680 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v330 #trueSuccessor: v331 #falseSuccessor: v332  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = MOVSX [v46|QWORD[.] + v66|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = MOV [v19|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = MOVZX v68|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = INC v66|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = INC v67|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v70|DWORD y: 128 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9444529691575878 condition: |<| trueDestination: B60 -> B61 falseDestination: B60 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B66" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4594433791124817836
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v331 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:601) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v340 
=== Usages ===
=== Predecessor ===
v333 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v340  <|@  <|@
f <@~|@floating>@ <|@
tid v334 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:601) [bci: 134]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i320 
y: i737 
=== Succesors ===
=== Usages ===
v340 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i320 y: i737  <|@  <|@
f <@*|@fixed>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:601) [bci: 134]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 0.9998375304630381
=== Inputs ===
condition: v334 
=== Succesors ===
trueSuccessor: v335 
falseSuccessor: v336 
=== Usages ===
=== Predecessor ===
v331 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v334 #trueSuccessor: v335 #falseSuccessor: v336  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v30|DWORD, y: v67|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9998375304630381 condition: > trueDestination: B61 -> B62 falseDestination: B61 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" "B64" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4594432935597468643
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v335 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 147]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1336 
=== Usages ===
=== Predecessor ===
v340 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1336  <|@  <|@
f <@*|@fixed>@ <|@
tid v1336 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 157]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1043 
=== Succesors ===
trueSuccessor: v1331 
falseSuccessor: v1334 
=== Usages ===
=== Predecessor ===
v335 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1043 #trueSuccessor: v1331 #falseSuccessor: v1334  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v69|DWORD, y: v67|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B62 -> B63 falseDestination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B59" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4594432935597468643
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1331 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 157]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1028 
=== Usages ===
v1028 
=== Predecessor ===
v1336 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1028  <|@  <|@
f <@~|@floating>@ <|@
tid v1700 <|@
result [v67|DWORD + v19|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i320 
index: a1665 
=== Succesors ===
=== Usages ===
v1028 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i320 index: a1665  <|@  <|@
f <@~|@floating>@ <|@
tid i342 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 156]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
resultBits: 8
stamp: i8
=== Inputs ===
value: i1018 
=== Succesors ===
=== Usages ===
v1028 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i1018  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1028 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 157]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1331 
address: v1700 
value: i342 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v382 
=== Usages ===
=== Predecessor ===
v1331 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1331 address: v1700 value: i342 stateAfter: - lastLocationAccess: - #next: v382  <|@  <|@
f <@*|@fixed>@ <|@
tid v382 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
loopBegin: v318 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1028 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v318  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v67|DWORD + v19|DWORD[.] * 8 + 16], y: v70|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v71|DWORD, v72|DWORD] destination: B63 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1334 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 157]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v318 
=== Succesors ===
next: v1335 
=== Usages ===
=== Predecessor ===
v1336 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v318 #next: v1335  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B107" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1335 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 157]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v1493 
=== Usages ===
=== Predecessor ===
v1334 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v1493  <|@  <|@
f <@~|@floating>@ <|@
tid i1494 <|@
result int[-261403|0xfffffffffffc02e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -261403
stableDimension: 0
stamp: i32 [-261403] ⇊00000000fffc02e5 ⇈00000000fffc02e5
stampKind: i32
value: int[-261403|0xfffffffffffc02e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1495 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1493 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1492 
=== Predecessor ===
v1335 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-261403|0xfffffffffffc02e5]] destination: B65 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4537629705179309201
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v336 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 137]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v318 
=== Succesors ===
next: a384 
=== Usages ===
=== Predecessor ===
v340 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v318 #next: a384  <|@  <|@
tid v1029 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 143]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
returnStamp: a# Ljava/nio/charset/CoderResult;
signature: [Ljdk.vm.ci.meta.JavaType;@434fc7fc
stamp: void
targetMethod: HotSpotMethod<UTF_8$Encoder.overflow(CharBuffer, int, ByteBuffer, int)>
=== Inputs ===
arguments: a1429 i319 a971 i320 
=== Succesors ===
=== Usages ===
a384 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1429 i319 a971 i320  <|@  <|@
tid ?1433 <|@
d <@d|@=== Debug Properties ===
bci: 143
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)>
duringCall: true
localsSize: 12
locksSize: 0
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 602
stackSize: 0
=== Inputs ===
outerFrameState: ?397 
values: - - - - - - - - - - - - 
virtualObjectMappings: ?866 
=== Succesors ===
=== Usages ===
a384 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?397 values: - - - - - - - - - - - - virtualObjectMappings: ?866  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a384 <|@
result v73|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 143
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 143]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
polymorphic: false
stamp: a# Ljava/nio/charset/CoderResult;
targetMethod: Direct#UTF_8$Encoder.overflow
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1029 
stateDuring: ?1433 
=== Succesors ===
next: i1681 
=== Usages ===
?385 v1701 ?26 
=== Predecessor ===
v336 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1029 stateDuring: ?1433 #next: i1681  <|@  <|@
tid ?385 <|@
d <@d|@=== Debug Properties ===
bci: 146
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)>
duringCall: false
localsSize: 12
locksSize: 0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 143]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 602
stackSize: 1
=== Inputs ===
outerFrameState: ?397 
values: - - - - - - - - - - - - a384 
virtualObjectMappings: ?866 
=== Succesors ===
=== Usages ===
v1525 i1681 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?397 values: - - - - - - - - - - - - a384 virtualObjectMappings: ?866  <|@  <|@
f <@~|@floating>@ <|@
tid v1701 <|@
result [v73|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a384 
index: - 
=== Succesors ===
=== Usages ===
i1681 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a384 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1681 <|@
result v74|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CoderResult.type
nodeSourcePosition: at java.nio.charset.CoderResult.isOverflow(CoderResult.java:129) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 91]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?385 
guard: - 
address: v1701 
=== Succesors ===
next: v1346 
=== Usages ===
v117 v555 
=== Predecessor ===
a384 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?385 guard: - address: v1701 #next: v1346  <|@  <|@
f <@~|@floating>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.charset.CoderResult.isOverflow(CoderResult.java:129) [bci: 5]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 91]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1681 
y: i41 
=== Succesors ===
=== Usages ===
v94 v1355 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1681 y: i41  <|@  <|@
f <@~|@floating>@ <|@
tid v555 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.charset.CoderResult.isUnderflow(CoderResult.java:120) [bci: 4]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:272) [bci: 48]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1681 
y: i10 
=== Succesors ===
=== Usages ===
v1346 v35 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1681 y: i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v1346 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:589) [bci: 105]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 0.9999755802164062
=== Inputs ===
condition: v555 
=== Succesors ===
trueSuccessor: v1342 
falseSuccessor: v93 
=== Usages ===
=== Predecessor ===
i1681 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v555 #trueSuccessor: v1342 #falseSuccessor: v93  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v66|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v67|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 143]
locals: - - - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: v22|DWORD[.] v12|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
locals: v0|QWORD[.] - - - v12|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD] [] callTarget: HotSpotMethod<UTF_8$Encoder.overflow(CharBuffer, int, ByteBuffer, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:143, 17, 57, 41] <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 146]
stack: v73|QWORD[.] 
locals: - - - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: v22|DWORD[.] v12|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
locals: v0|QWORD[.] - - - v12|QWORD[.] - 
>@ <|@ instruction v74|DWORD = MOV [v73|QWORD[.] + 12] size: DWORD state [bci:146, 17, 57, 41] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v74|DWORD, y: v74|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9999755802164062 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4537629534033743191
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1342 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:589) [bci: 105]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v106 
=== Usages ===
=== Predecessor ===
v1346 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v106  <|@  <|@
f <@*|@fixed>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v104 
=== Predecessor ===
v1342 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B67 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4468675328631188685
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:589) [bci: 100]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v94 
=== Usages ===
=== Predecessor ===
v1346 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v94  <|@  <|@
f <@*|@fixed>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 94]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v117 
=== Succesors ===
trueSuccessor: v101 
falseSuccessor: v1345 
=== Usages ===
=== Predecessor ===
v93 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v117 #trueSuccessor: v101 #falseSuccessor: v1345  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v74|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4468675328631188685
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v105 
=== Usages ===
=== Predecessor ===
v94 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v105  <|@  <|@
f <@*|@fixed>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v104 
=== Predecessor ===
v101 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B67" 
    successors "B71" "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4537629705179309201
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v105 v106 
=== Succesors ===
next: v35 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v105 v106 #next: v35  <|@  <|@
f <@*|@fixed>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:272) [bci: 51]
stamp: void
trueSuccessorProbability: 0.9999755267053062
=== Inputs ===
condition: v555 
=== Succesors ===
trueSuccessor: v33 
falseSuccessor: v31 
=== Usages ===
=== Predecessor ===
v104 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v555 #trueSuccessor: v33 #falseSuccessor: v31  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v74|DWORD, y: v74|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9999755267053062 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B72" "B73" 
    xhandlers
    flags 
    probability 4537629533658711714
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:273) [bci: 54]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: i1682 
=== Usages ===
=== Predecessor ===
v35 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: i1682  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1682 <|@
result v75|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.limit
nodeSourcePosition: at java.nio.Buffer.remaining(Buffer.java:391) [bci: 1]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:274) [bci: 84]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1691 
=== Succesors ===
next: i1683 
=== Usages ===
i53 
=== Predecessor ===
v33 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1691 #next: i1683  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1683 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.position
nodeSourcePosition: at java.nio.Buffer.remaining(Buffer.java:391) [bci: 5]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:274) [bci: 84]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1690 
=== Succesors ===
next: v1350 
=== Usages ===
i53 
=== Predecessor ===
i1682 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1690 #next: v1350  <|@  <|@
f <@~|@floating>@ <|@
tid i53 <|@
result v76|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.nio.Buffer.remaining(Buffer.java:391) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:274) [bci: 84]
stamp: i32
=== Inputs ===
x: i1682 
y: i1683 
=== Succesors ===
=== Usages ===
v54 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i1682 y: i1683  <|@  <|@
f <@~|@floating>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:274) [bci: 88]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i53 
y: i41 
=== Succesors ===
=== Usages ===
v1350 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i53 y: i41  <|@  <|@
f <@*|@fixed>@ <|@
tid v1350 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:274) [bci: 88]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v54 
=== Succesors ===
trueSuccessor: v1349 
falseSuccessor: v1347 
=== Usages ===
=== Predecessor ===
i1683 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v54 #trueSuccessor: v1349 #falseSuccessor: v1347  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = MOV [v12|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = SUB (x: v75|DWORD, ~y: [v12|QWORD[.] + 24]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v76|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B77" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1349 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:274) [bci: 88]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1476 
=== Usages ===
=== Predecessor ===
v1350 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1476  <|@  <|@
f <@~|@floating>@ <|@
tid i1477 <|@
result int[-264979|0xfffffffffffbf4ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -264979
stableDimension: 0
stamp: i32 [-264979] ⇊00000000fffbf4ed ⇈00000000fffbf4ed
stampKind: i32
value: int[-264979|0xfffffffffffbf4ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1478 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1476 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1475 
=== Predecessor ===
v1349 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-264979|0xfffffffffffbf4ed]] destination: B72 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors 
    xhandlers
    flags 
    probability 4537629533658711714
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1347 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:274) [bci: 88]
stamp: void
=== Inputs ===
=== Succesors ===
next: v57 
=== Usages ===
=== Predecessor ===
v1350 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v57  <|@  <|@
f <@*|@fixed>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:287) [bci: 155]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1347 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4468687617662610068
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:280) [bci: 108]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1355 
=== Usages ===
=== Predecessor ===
v35 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1355  <|@  <|@
f <@*|@fixed>@ <|@
tid v1355 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:280) [bci: 113]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v117 
=== Succesors ===
trueSuccessor: v1351 
falseSuccessor: v1354 
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v117 #trueSuccessor: v1351 #falseSuccessor: v1354  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v74|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4468687617662610068
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1351 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:280) [bci: 113]
stamp: void
=== Inputs ===
=== Succesors ===
next: v44 
=== Usages ===
=== Predecessor ===
v1355 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v44  <|@  <|@
tid v1037 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:282) [bci: 141]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@5d56db08
stamp: void
targetMethod: HotSpotMethod<StreamEncoder.writeBytes()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
v44 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?1434 <|@
d <@d|@=== Debug Properties ===
bci: 141
code: ResolvedJavaMethodBytecode<StreamEncoder.implWrite(char[], int, int)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: StreamEncoder.java
sourceLine: 282
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - a133 - 
virtualObjectMappings: ?866 
=== Succesors ===
=== Usages ===
v44 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - a133 - virtualObjectMappings: ?866  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
bci: 141
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:282) [bci: 141]
polymorphic: false
stamp: void
targetMethod: Direct#StreamEncoder.writeBytes
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1037 
stateDuring: ?1434 
=== Succesors ===
next: v46 
=== Usages ===
=== Predecessor ===
v1351 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1037 stateDuring: ?1434 #next: v46  <|@  <|@
f <@*|@fixed>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22]
stamp: void
=== Inputs ===
loopBegin: v15 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v44 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v15  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:282) [bci: 141]
locals: v0|QWORD[.] - - - v12|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<StreamEncoder.writeBytes()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:141] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B75 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1354 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:280) [bci: 113]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v1481 
=== Usages ===
=== Predecessor ===
v1355 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v1481  <|@  <|@
f <@~|@floating>@ <|@
tid i1482 <|@
result int[-265235|0xfffffffffffbf3ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -265235
stableDimension: 0
stamp: i32 [-265235] ⇊00000000fffbf3ed ⇈00000000fffbf3ed
stampKind: i32
value: int[-265235|0xfffffffffffbf3ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1478 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1481 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1475 
=== Predecessor ===
v1354 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-265235|0xfffffffffffbf3ed]] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B72" "B76" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1478 <|@
result v77|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-265235 - -264979] ⇊00000000fffbf0ed ⇈00000000fffbf7ed
valueDescription: i32
=== Inputs ===
merge: v1475 
values: i1477 i1482 
=== Succesors ===
=== Usages ===
v1480 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1475 values: i1477 i1482  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1475 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1476 v1481 
=== Succesors ===
next: v1480 
=== Usages ===
i1478 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1476 v1481 #next: v1480  <|@  <|@
tid ?26 <|@
d <@d|@=== Debug Properties ===
bci: 44
code: ResolvedJavaMethodBytecode<StreamEncoder.implWrite(char[], int, int)>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
rethrowException: false
sourceFile: StreamEncoder.java
sourceLine: 271
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 - - - a133 - a384 
virtualObjectMappings: ?866 
=== Succesors ===
=== Usages ===
v1480 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - a133 - a384 virtualObjectMappings: ?866  <|@  <|@
f <@*|@fixed>@ <|@
tid v1480 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?26 
actionAndReason: i1478 
speculation: a1441 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1475 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?26 actionAndReason: i1478 speculation: a1441  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v77|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v77|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 44]
stack: v73|QWORD[.] 
locals: v0|QWORD[.] - - - v12|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1345 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:589) [bci: 105]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v1525 
=== Usages ===
=== Predecessor ===
v94 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v1525  <|@  <|@
f <@~|@floating>@ <|@
tid i1527 <|@
result int[-265747|0xfffffffffffbf1ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -265747
stableDimension: 0
stamp: i32 [-265747] ⇊00000000fffbf1ed ⇈00000000fffbf1ed
stampKind: i32
value: int[-265747|0xfffffffffffbf1ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1525 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1525 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?385 
actionAndReason: i1527 
speculation: a1441 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1345 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?385 actionAndReason: i1527 speculation: a1441  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -265747 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 146]
stack: v73|QWORD[.] 
locals: - - - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: v22|DWORD[.] v12|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
locals: v0|QWORD[.] - - - v12|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:146, 17, 57, 41] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B80" "B82" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4576108836187578827
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v332 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 161]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1361 
=== Usages ===
=== Predecessor ===
v333 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1361  <|@  <|@
f <@~|@floating>@ <|@
tid i346 <|@
result int[2048|0x800] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 163]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
rawvalue: 2048
stableDimension: 0
stamp: i32 [2048] ⇊0000000000000800 ⇈0000000000000800
stampKind: i32
value: int[2048|0x800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v347 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v347 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 166]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1018 
y: i346 
=== Succesors ===
=== Usages ===
v1361 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1018 y: i346  <|@  <|@
f <@*|@fixed>@ <|@
tid v1361 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 166]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v347 
=== Succesors ===
trueSuccessor: v1359 
falseSuccessor: v1356 
=== Usages ===
=== Predecessor ===
v332 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v347 #trueSuccessor: v1359 #falseSuccessor: v1356  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v70|DWORD y: 2048 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B79 -> B80 falseDestination: B79 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B81" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1359 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 166]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v318 
=== Succesors ===
next: v1360 
=== Usages ===
=== Predecessor ===
v1361 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v318 #next: v1360  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B80 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B107" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1360 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 166]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v1498 
=== Usages ===
=== Predecessor ===
v1359 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v1498  <|@  <|@
f <@~|@floating>@ <|@
tid i1499 <|@
result int[-266003|0xfffffffffffbf0ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -266003
stableDimension: 0
stamp: i32 [-266003] ⇊00000000fffbf0ed ⇈00000000fffbf0ed
stampKind: i32
value: int[-266003|0xfffffffffffbf0ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1495 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1498 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1492 
=== Predecessor ===
v1360 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-266003|0xfffffffffffbf0ed]] destination: B81 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B83" "B93" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4576108836187578827
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1356 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 166]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1367 
=== Usages ===
=== Predecessor ===
v1361 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1367  <|@  <|@
f <@~|@floating>@ <|@
tid i482 <|@
result int[55296|0xd800] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 229]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
rawvalue: 55296
stableDimension: 0
stamp: i32 [55296] ⇊000000000000d800 ⇈000000000000d800
stampKind: i32
value: int[55296|0xd800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v483 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v483 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 3]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 229]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1018 
y: i482 
=== Succesors ===
=== Usages ===
v1367 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1018 y: i482  <|@  <|@
f <@*|@fixed>@ <|@
tid v1367 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 3]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 229]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v483 
=== Succesors ===
trueSuccessor: v1362 
falseSuccessor: v1365 
=== Usages ===
=== Predecessor ===
v1356 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v483 #trueSuccessor: v1362 #falseSuccessor: v1365  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v70|DWORD y: 55296 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B82 -> B83 falseDestination: B82 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B84" "B86" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4576108836187578827
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1362 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 3]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 229]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1373 
=== Usages ===
=== Predecessor ===
v1367 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1373  <|@  <|@
f <@~|@floating>@ <|@
tid i354 <|@
result v78|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 398]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: i32
=== Inputs ===
x: i737 
y: i320 
=== Succesors ===
=== Usages ===
v356 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i737 y: i320  <|@  <|@
f <@~|@floating>@ <|@
tid i355 <|@
result int[3|0x3] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 399]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
rawvalue: 3
stableDimension: 0
stamp: i32 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
v356 i395 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v356 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 400]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i354 
y: i355 
=== Succesors ===
=== Usages ===
v1373 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i354 y: i355  <|@  <|@
f <@*|@fixed>@ <|@
tid v1373 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 400]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v356 
=== Succesors ===
trueSuccessor: v1371 
falseSuccessor: v1368 
=== Usages ===
=== Predecessor ===
v1362 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v356 #trueSuccessor: v1371 #falseSuccessor: v1368  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = SUB (x: v30|DWORD, ~y: v67|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v78|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B83 -> B84 falseDestination: B83 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1371 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 400]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v318 
=== Succesors ===
next: v1372 
=== Usages ===
=== Predecessor ===
v1373 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v318 #next: v1372  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B107" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1372 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 400]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v1502 
=== Usages ===
=== Predecessor ===
v1371 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v1502  <|@  <|@
f <@~|@floating>@ <|@
tid i1503 <|@
result int[-266515|0xfffffffffffbeeed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -266515
stableDimension: 0
stamp: i32 [-266515] ⇊00000000fffbeeed ⇈00000000fffbeeed
stampKind: i32
value: int[-266515|0xfffffffffffbeeed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1495 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1502 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1492 
=== Predecessor ===
v1372 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-266515|0xfffffffffffbeeed]] destination: B85 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B87" "B91" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4576108836187578827
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1368 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 400]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1379 
=== Usages ===
=== Predecessor ===
v1373 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1379  <|@  <|@
f <@*|@fixed>@ <|@
tid v1379 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1043 
=== Succesors ===
trueSuccessor: v1374 
falseSuccessor: v1377 
=== Usages ===
=== Predecessor ===
v1368 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1043 #trueSuccessor: v1374 #falseSuccessor: v1377  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v69|DWORD, y: v67|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B86 -> B87 falseDestination: B86 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4576108836187578827
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1374 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1385 
=== Usages ===
v1206 
=== Predecessor ===
v1379 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1385  <|@  <|@
f <@~|@floating>@ <|@
tid i393 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 435]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i394 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i394 <|@
result v79|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 435]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: i32
=== Inputs ===
x: i320 
y: i393 
=== Succesors ===
=== Usages ===
v1063 v1704 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i320 y: i393  <|@  <|@
f <@~|@floating>@ <|@
tid v1063 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 469]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i394 
y: i1680 
=== Succesors ===
=== Usages ===
v1385 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i394 y: i1680  <|@  <|@
f <@*|@fixed>@ <|@
tid v1385 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 469]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1063 
=== Succesors ===
trueSuccessor: v1380 
falseSuccessor: v1383 
=== Usages ===
=== Predecessor ===
v1374 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1063 #trueSuccessor: v1380 #falseSuccessor: v1383  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = LEA [v67|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v69|DWORD, y: v79|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B87 -> B88 falseDestination: B87 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B59" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4576108836187578827
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1380 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 469]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1051 
=== Usages ===
v1206 
=== Predecessor ===
v1385 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1051  <|@  <|@
f <@~|@floating>@ <|@
tid v1206 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1380 v1374 
=== Succesors ===
=== Usages ===
v1051 v1071 v1061 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1380 v1374  <|@  <|@
f <@~|@floating>@ <|@
tid v1702 <|@
result [v67|DWORD + v19|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i320 
index: a1665 
=== Succesors ===
=== Usages ===
v1051 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i320 index: a1665  <|@  <|@
f <@~|@floating>@ <|@
tid i359 <|@
result int[12|0xc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 425]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
rawvalue: 12
stableDimension: 0
stamp: i32 [12] ⇊000000000000000c ⇈000000000000000c
stampKind: i32
value: int[12|0xc]
=== Inputs ===
=== Succesors ===
=== Usages ===
i360 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i360 <|@
result v80|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 427]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: i32 [0 - 15] ⇈000000000000000f
=== Inputs ===
x: i1018 
y: i359 
=== Succesors ===
=== Usages ===
i361 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i1018 y: i359  <|@  <|@
f <@~|@floating>@ <|@
tid i358 <|@
result int[224|0xe0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 420]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
rawvalue: 224
stableDimension: 0
stamp: i32 [224] ⇊00000000000000e0 ⇈00000000000000e0
stampKind: i32
value: int[224|0xe0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i361 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i361 <|@
result v81|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 428]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: i32 [224 - 239] ⇊00000000000000e0 ⇈00000000000000ef
=== Inputs ===
x: i360 
y: i358 
=== Succesors ===
=== Usages ===
i362 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i360 y: i358  <|@  <|@
f <@~|@floating>@ <|@
tid i362 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 429]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
resultBits: 8
stamp: i8 [-32 - -17] ⇊00000000000000e0 ⇈00000000000000ef
=== Inputs ===
value: i361 
=== Succesors ===
=== Usages ===
v1051 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i361  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1051 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1206 
address: v1702 
value: i362 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1061 
=== Usages ===
=== Predecessor ===
v1380 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1206 address: v1702 value: i362 stateAfter: - lastLocationAccess: - #next: v1061  <|@  <|@
f <@~|@floating>@ <|@
tid v1703 <|@
result [v72|DWORD + v19|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i341 
index: a1665 
=== Succesors ===
=== Usages ===
v1061 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i341 index: a1665  <|@  <|@
f <@~|@floating>@ <|@
tid i366 <|@
result int[6|0x6] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 443]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
rawvalue: 6
stableDimension: 0
stamp: i32 [6] ⇊0000000000000006 ⇈0000000000000006
stampKind: i32
value: int[6|0x6]
=== Inputs ===
=== Succesors ===
=== Usages ===
i367 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i367 <|@
result v82|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 445]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: i32 [0 - 1023] ⇈00000000000003ff
=== Inputs ===
x: i1018 
y: i366 
=== Succesors ===
=== Usages ===
i369 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i1018 y: i366  <|@  <|@
f <@~|@floating>@ <|@
tid i368 <|@
result int[63|0x3f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 446]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
rawvalue: 63
stableDimension: 0
stamp: i32 [63] ⇊000000000000003f ⇈000000000000003f
stampKind: i32
value: int[63|0x3f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i369 i375 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i369 <|@
result v83|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 448]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: i32 [0 - 63] ⇈000000000000003f
=== Inputs ===
x: i367 
y: i368 
=== Succesors ===
=== Usages ===
i370 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i367 y: i368  <|@  <|@
f <@~|@floating>@ <|@
tid i370 <|@
result v84|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 449]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: i32 [128 - 191] ⇊0000000000000080 ⇈00000000000000bf
=== Inputs ===
x: i369 
y: i295 
=== Succesors ===
=== Usages ===
i371 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i369 y: i295  <|@  <|@
f <@~|@floating>@ <|@
tid i371 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 450]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
resultBits: 8
stamp: i8 [-128 - -65] ⇊0000000000000080 ⇈00000000000000bf
=== Inputs ===
value: i370 
=== Succesors ===
=== Usages ===
v1061 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i370  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1061 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 451]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1206 
address: v1703 
value: i371 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1071 
=== Usages ===
=== Predecessor ===
v1051 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1206 address: v1703 value: i371 stateAfter: - lastLocationAccess: - #next: v1071  <|@  <|@
f <@~|@floating>@ <|@
tid v1704 <|@
result [v79|DWORD + v19|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i394 
index: a1665 
=== Succesors ===
=== Usages ===
v1071 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i394 index: a1665  <|@  <|@
f <@~|@floating>@ <|@
tid i375 <|@
result v85|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 466]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: i32 [0 - 63] ⇈000000000000003f
=== Inputs ===
x: i1018 
y: i368 
=== Succesors ===
=== Usages ===
i376 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i1018 y: i368  <|@  <|@
f <@~|@floating>@ <|@
tid i376 <|@
result v86|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 467]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: i32 [128 - 191] ⇊0000000000000080 ⇈00000000000000bf
=== Inputs ===
x: i375 
y: i295 
=== Succesors ===
=== Usages ===
i377 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i375 y: i295  <|@  <|@
f <@~|@floating>@ <|@
tid i377 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 468]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
resultBits: 8
stamp: i8 [-128 - -65] ⇊0000000000000080 ⇈00000000000000bf
=== Inputs ===
value: i376 
=== Succesors ===
=== Usages ===
v1071 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i376  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1071 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 469]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1206 
address: v1704 
value: i377 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v396 
=== Usages ===
=== Predecessor ===
v1061 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1206 address: v1704 value: i377 stateAfter: - lastLocationAccess: - #next: v396  <|@  <|@
f <@~|@floating>@ <|@
tid i395 <|@
result v87|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 456]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: i32
=== Inputs ===
x: i320 
y: i355 
=== Succesors ===
=== Usages ===
i320 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i320 y: i355  <|@  <|@
f <@*|@fixed>@ <|@
tid v396 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 1
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:634) [bci: 470]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
loopBegin: v318 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1071 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v318  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = SHR v70|DWORD y: 12 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v81|DWORD = OR v80|DWORD y: 224 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v67|DWORD + v19|DWORD[.] * 8 + 16], y: v81|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v82|DWORD = SHR v70|DWORD y: 6 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v83|DWORD = AND v82|DWORD y: 63 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v84|DWORD = OR v83|DWORD y: 128 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v72|DWORD + v19|DWORD[.] * 8 + 16], y: v84|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = AND v70|DWORD y: 63 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = OR v85|DWORD y: 128 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v79|DWORD + v19|DWORD[.] * 8 + 16], y: v86|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = LEA [v67|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v71|DWORD, v87|DWORD] destination: B88 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1383 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 469]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v318 
=== Succesors ===
next: v1384 
=== Usages ===
=== Predecessor ===
v1385 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v318 #next: v1384  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B107" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1384 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 469]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v1506 
=== Usages ===
=== Predecessor ===
v1383 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v1506  <|@  <|@
f <@~|@floating>@ <|@
tid i1507 <|@
result int[-272411|0xfffffffffffbd7e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -272411
stableDimension: 0
stamp: i32 [-272411] ⇊00000000fffbd7e5 ⇈00000000fffbd7e5
stampKind: i32
value: int[-272411|0xfffffffffffbd7e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1495 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1506 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1492 
=== Predecessor ===
v1384 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-272411|0xfffffffffffbd7e5]] destination: B90 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1377 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v318 
=== Succesors ===
next: v1378 
=== Usages ===
=== Predecessor ===
v1379 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v318 #next: v1378  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B91 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B107" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1378 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v1504 
=== Usages ===
=== Predecessor ===
v1377 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v1504  <|@  <|@
f <@~|@floating>@ <|@
tid i1505 <|@
result int[-267291|0xfffffffffffbebe5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -267291
stableDimension: 0
stamp: i32 [-267291] ⇊00000000fffbebe5 ⇈00000000fffbebe5
stampKind: i32
value: int[-267291|0xfffffffffffbebe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1495 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1504 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1492 
=== Predecessor ===
v1378 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-267291|0xfffffffffffbebe5]] destination: B92 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1365 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 3]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 229]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v318 
=== Succesors ===
next: v1366 
=== Usages ===
=== Predecessor ===
v1367 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v318 #next: v1366  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B93 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B107" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1366 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 3]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 229]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v1500 
=== Usages ===
=== Predecessor ===
v1365 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v1500  <|@  <|@
f <@~|@floating>@ <|@
tid i1501 <|@
result int[-266259|0xfffffffffffbefed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -266259
stableDimension: 0
stamp: i32 [-266259] ⇊00000000fffbefed ⇈00000000fffbefed
stampKind: i32
value: int[-266259|0xfffffffffffbefed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1495 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1500 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1492 
=== Predecessor ===
v1366 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-266259|0xfffffffffffbefed]] destination: B94 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B96" "B97" 
    xhandlers
    flags 
    probability 4607182422079717084
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v324 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 476]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v318 
=== Succesors ===
next: v1390 
=== Usages ===
=== Predecessor ===
v328 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v318 #next: v1390  <|@  <|@
f <@~|@floating>@ <|@
tid i469 <|@
result v88|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 6]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: i32
=== Inputs ===
x: i319 
y: i1675 
=== Succesors ===
=== Usages ===
v503 v495 v497 v1074 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i319 y: i1675  <|@  <|@
f <@~|@floating>@ <|@
tid v495 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1667 
y: i469 
=== Succesors ===
=== Usages ===
v1390 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1667 y: i469  <|@  <|@
f <@*|@fixed>@ <|@
tid v1390 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v495 
=== Succesors ===
trueSuccessor: v1389 
falseSuccessor: v1386 
=== Usages ===
=== Predecessor ===
v324 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v495 #trueSuccessor: v1389 #falseSuccessor: v1386  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = SUB (x: v66|DWORD, ~y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v88|DWORD, y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B95 -> B96 falseDestination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B107" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1389 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v1508 
=== Usages ===
=== Predecessor ===
v1390 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v1508  <|@  <|@
f <@~|@floating>@ <|@
tid i1509 <|@
result int[-274451|0xfffffffffffbcfed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -274451
stableDimension: 0
stamp: i32 [-274451] ⇊00000000fffbcfed ⇈00000000fffbcfed
stampKind: i32
value: int[-274451|0xfffffffffffbcfed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1495 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1508 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1492 
=== Predecessor ===
v1389 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-274451|0xfffffffffffbcfed]] destination: B96 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B98" "B99" 
    xhandlers
    flags 
    probability 4607182422079717084
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1386 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1395 
=== Usages ===
=== Predecessor ===
v1390 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1395  <|@  <|@
f <@~|@floating>@ <|@
tid v497 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i469 
y: i10 
=== Succesors ===
=== Usages ===
v1395 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i469 y: i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v1395 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v497 
=== Succesors ===
trueSuccessor: v1394 
falseSuccessor: v1391 
=== Usages ===
=== Predecessor ===
v1386 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v497 #trueSuccessor: v1394 #falseSuccessor: v1391  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v88|DWORD, y: v88|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B97 -> B98 falseDestination: B97 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B107" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1394 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v1510 
=== Usages ===
=== Predecessor ===
v1395 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v1510  <|@  <|@
f <@~|@floating>@ <|@
tid i1511 <|@
result int[-274707|0xfffffffffffbceed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -274707
stableDimension: 0
stamp: i32 [-274707] ⇊00000000fffbceed ⇈00000000fffbceed
stampKind: i32
value: int[-274707|0xfffffffffffbceed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1495 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1510 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1492 
=== Predecessor ===
v1394 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-274707|0xfffffffffffbceed]] destination: B98 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B100" "B101" 
    xhandlers
    flags 
    probability 4607182422079717084
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1391 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1684 
=== Usages ===
=== Predecessor ===
v1395 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1684  <|@  <|@
f <@~|@floating>@ <|@
tid v1705 <|@
result [v12|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1429 
index: - 
=== Succesors ===
=== Usages ===
i1684 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1429 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1684 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.mark
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 26]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1705 
=== Succesors ===
next: v1400 
=== Usages ===
v503 
=== Predecessor ===
v1391 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1705 #next: v1400  <|@  <|@
f <@~|@floating>@ <|@
tid v503 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i469 
y: i1684 
=== Succesors ===
=== Usages ===
v1400 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i469 y: i1684  <|@  <|@
f <@*|@fixed>@ <|@
tid v1400 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v503 
=== Succesors ===
trueSuccessor: v1399 
falseSuccessor: v1396 
=== Usages ===
=== Predecessor ===
i1684 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v503 #trueSuccessor: v1399 #falseSuccessor: v1396  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v88|DWORD, y: [v12|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B99 -> B100 falseDestination: B99 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B107" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1399 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v1512 
=== Usages ===
=== Predecessor ===
v1400 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v1512  <|@  <|@
f <@~|@floating>@ <|@
tid i1513 <|@
result int[-275731|0xfffffffffffbcaed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -275731
stableDimension: 0
stamp: i32 [-275731] ⇊00000000fffbcaed ⇈00000000fffbcaed
stampKind: i32
value: int[-275731|0xfffffffffffbcaed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1495 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1512 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1492 
=== Predecessor ===
v1399 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-275731|0xfffffffffffbcaed]] destination: B100 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B102" "B103" 
    xhandlers
    flags 
    probability 4607182422079717084
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1396 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1405 
=== Usages ===
=== Predecessor ===
v1400 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1405  <|@  <|@
f <@~|@floating>@ <|@
tid i476 <|@
result v89|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 17]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: i32
=== Inputs ===
x: i320 
y: i1672 
=== Succesors ===
=== Usages ===
?525 v520 v522 v1081 v528 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i320 y: i1672  <|@  <|@
f <@~|@floating>@ <|@
tid v520 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1673 
y: i476 
=== Succesors ===
=== Usages ===
v1405 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1673 y: i476  <|@  <|@
f <@*|@fixed>@ <|@
tid v1405 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v520 
=== Succesors ===
trueSuccessor: v1404 
falseSuccessor: v1401 
=== Usages ===
=== Predecessor ===
v1396 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v520 #trueSuccessor: v1404 #falseSuccessor: v1401  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = SUB (x: v67|DWORD, ~y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v89|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B101 -> B102 falseDestination: B101 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B107" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1404 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v1514 
=== Usages ===
=== Predecessor ===
v1405 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v1514  <|@  <|@
f <@~|@floating>@ <|@
tid i1515 <|@
result int[-275987|0xfffffffffffbc9ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -275987
stableDimension: 0
stamp: i32 [-275987] ⇊00000000fffbc9ed ⇈00000000fffbc9ed
stampKind: i32
value: int[-275987|0xfffffffffffbc9ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1495 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1514 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1492 
=== Predecessor ===
v1404 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-275987|0xfffffffffffbc9ed]] destination: B102 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" "B105" 
    xhandlers
    flags 
    probability 4607182422079717084
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1401 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1410 
=== Usages ===
=== Predecessor ===
v1405 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1410  <|@  <|@
f <@~|@floating>@ <|@
tid v522 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i476 
y: i10 
=== Succesors ===
=== Usages ===
v1410 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i476 y: i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v1410 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v522 
=== Succesors ===
trueSuccessor: v1409 
falseSuccessor: v1406 
=== Usages ===
=== Predecessor ===
v1401 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v522 #trueSuccessor: v1409 #falseSuccessor: v1406  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v89|DWORD, y: v89|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B103 -> B104 falseDestination: B103 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B107" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1409 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v1516 
=== Usages ===
=== Predecessor ===
v1410 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v1516  <|@  <|@
f <@~|@floating>@ <|@
tid i1517 <|@
result int[-276243|0xfffffffffffbc8ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -276243
stableDimension: 0
stamp: i32 [-276243] ⇊00000000fffbc8ed ⇈00000000fffbc8ed
stampKind: i32
value: int[-276243|0xfffffffffffbc8ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1495 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1516 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1492 
=== Predecessor ===
v1409 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-276243|0xfffffffffffbc8ed]] destination: B104 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" "B108" 
    xhandlers
    flags 
    probability 4607182422079717084
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1406 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1685 
=== Usages ===
=== Predecessor ===
v1410 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1685  <|@  <|@
f <@~|@floating>@ <|@
tid v1706 <|@
result [v18|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1664 
=== Succesors ===
=== Usages ===
i1685 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1664  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1685 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.mark
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 26]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1706 
=== Succesors ===
next: v1415 
=== Usages ===
v528 
=== Predecessor ===
v1406 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1706 #next: v1415  <|@  <|@
f <@~|@floating>@ <|@
tid v528 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i476 
y: i1685 
=== Succesors ===
=== Usages ===
v1415 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i476 y: i1685  <|@  <|@
f <@*|@fixed>@ <|@
tid v1415 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v528 
=== Succesors ===
trueSuccessor: v1414 
falseSuccessor: v1411 
=== Usages ===
=== Predecessor ===
i1685 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v528 #trueSuccessor: v1414 #falseSuccessor: v1411  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v89|DWORD, y: [v18|DWORD[.] * 8 + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B105 -> B106 falseDestination: B105 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B107" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1414 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v1518 
=== Usages ===
=== Predecessor ===
v1415 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v1518  <|@  <|@
f <@~|@floating>@ <|@
tid i1519 <|@
result int[-277523|0xfffffffffffbc3ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -277523
stableDimension: 0
stamp: i32 [-277523] ⇊00000000fffbc3ed ⇈00000000fffbc3ed
stampKind: i32
value: int[-277523|0xfffffffffffbc3ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1495 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1518 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1492 
=== Predecessor ===
v1414 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-277523|0xfffffffffffbc3ed]] destination: B106 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B65" "B81" "B94" "B85" "B92" "B90" "B96" "B98" "B100" "B102" "B104" "B106" 
    successors 
    xhandlers
    flags 
    probability 2371145203810566144
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1495 <|@
result v90|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-277523 - -261403] ⇊00000000fff800e5 ⇈00000000ffffffed
valueDescription: i32
=== Inputs ===
merge: v1492 
values: i1494 i1499 i1501 i1503 i1505 i1507 i1509 i1511 i1513 i1515 i1517 i1519 
=== Succesors ===
=== Usages ===
v1497 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1492 values: i1494 i1499 i1501 i1503 i1505 i1507 i1509 i1511 i1513 i1515 i1517 i1519  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1492 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1493 v1498 v1500 v1502 v1504 v1506 v1508 v1510 v1512 v1514 v1516 v1518 
=== Succesors ===
next: v1497 
=== Usages ===
i1495 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1493 v1498 v1500 v1502 v1504 v1506 v1508 v1510 v1512 v1514 v1516 v1518 #next: v1497  <|@  <|@
tid ?321 <|@
d <@d|@=== Debug Properties ===
bci: 109
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)>
duringCall: false
localsSize: 12
locksSize: 0
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 597
stackSize: 0
=== Inputs ===
outerFrameState: ?397 
values: a1668 a133 a971 a1119 i319 i733 a1665 i320 i737 - - - 
virtualObjectMappings: ?866 
=== Succesors ===
=== Usages ===
v1497 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?397 values: a1668 a133 a971 a1119 i319 i733 a1665 i320 i737 - - - virtualObjectMappings: ?866  <|@  <|@
f <@*|@fixed>@ <|@
tid v1497 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?321 
actionAndReason: i1495 
speculation: a1441 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1492 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?321 actionAndReason: i1495 speculation: a1441  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v90|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v90|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: v22|DWORD[.] v12|QWORD[.] v45|QWORD[.] v46|QWORD[.] v66|DWORD v33|DWORD v19|DWORD[.] v67|DWORD v30|DWORD - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: v22|DWORD[.] v12|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
locals: v0|QWORD[.] - - - v12|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:109, 17, 57, 41] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B109" 
    xhandlers
    flags 
    probability 4607182422079717084
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1411 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1074 
=== Usages ===
=== Predecessor ===
v1415 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1074  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1074 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Buffer.position
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:245) [bci: 22]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1690 
value: i469 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1081 
=== Usages ===
=== Predecessor ===
v1411 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1690 value: i469 stateAfter: - lastLocationAccess: - #next: v1081  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1081 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Buffer.position
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:245) [bci: 22]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1713 
value: i476 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v834 
=== Usages ===
=== Predecessor ===
v1074 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1713 value: i476 stateAfter: - lastLocationAccess: - #next: v834  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v12|QWORD[.] + 24], y: v88|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|DWORD[.] * 8 + 24], y: v89|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B108 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B110" "B111" 
    xhandlers
    flags 
    probability 4607182422079717084
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v834 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:273) [bci: 54]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: i1686 
=== Usages ===
=== Predecessor ===
v1081 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: i1686  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1686 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.position
nodeSourcePosition: at java.nio.Buffer.remaining(Buffer.java:391) [bci: 5]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:274) [bci: 84]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1690 
=== Succesors ===
next: v1419 
=== Usages ===
i893 
=== Predecessor ===
v834 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1690 #next: v1419  <|@  <|@
f <@~|@floating>@ <|@
tid i893 <|@
result v91|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.nio.Buffer.remaining(Buffer.java:391) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:274) [bci: 84]
stamp: i32
=== Inputs ===
x: i1667 
y: i1686 
=== Succesors ===
=== Usages ===
v894 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i1667 y: i1686  <|@  <|@
f <@~|@floating>@ <|@
tid v894 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:274) [bci: 88]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i893 
y: i41 
=== Succesors ===
=== Usages ===
v1419 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i893 y: i41  <|@  <|@
f <@*|@fixed>@ <|@
tid v1419 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:274) [bci: 88]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v894 
=== Succesors ===
trueSuccessor: v1418 
falseSuccessor: v1416 
=== Usages ===
=== Predecessor ===
i1686 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v894 #trueSuccessor: v1418 #falseSuccessor: v1416  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = SUB (x: v21|DWORD, ~y: [v12|QWORD[.] + 24]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v91|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B109 -> B110 falseDestination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1418 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:274) [bci: 88]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1417 
=== Usages ===
=== Predecessor ===
v1419 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1417  <|@  <|@
tid ?389 <|@
d <@d|@=== Debug Properties ===
bci: 482
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)>
duringCall: true
localsSize: 12
locksSize: 0
nodeSourcePosition: at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 636
stackSize: 0
=== Inputs ===
outerFrameState: ?397 
values: - a133 a971 - i319 - - i320 - - - - 
=== Succesors ===
=== Usages ===
?481 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?397 values: - a133 a971 - i319 - - i320 - - - -  <|@  <|@
tid ?481 <|@
d <@d|@=== Debug Properties ===
bci: 4
code: ResolvedJavaMethodBytecode<UTF_8.access$200(Buffer, int, Buffer, int)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 57
stackSize: 0
=== Inputs ===
outerFrameState: ?389 
values: - - - - 
=== Succesors ===
=== Usages ===
?531 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?389 values: - - - -  <|@  <|@
tid ?531 <|@
d <@d|@=== Debug Properties ===
bci: 18
code: ResolvedJavaMethodBytecode<UTF_8.updatePositions(Buffer, int, Buffer, int)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 78
stackSize: 0
=== Inputs ===
outerFrameState: ?481 
values: - - - - 
=== Succesors ===
=== Usages ===
?525 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?481 values: - - - -  <|@  <|@
tid ?525 <|@
d <@d|@=== Debug Properties ===
bci: 25
code: ResolvedJavaMethodBytecode<Buffer.position(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:245) [bci: 22]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
rethrowException: false
sourceFile: Buffer.java
sourceLine: 246
stackSize: 0
=== Inputs ===
outerFrameState: ?531 
values: a971 i476 
virtualObjectMappings: ?866 
=== Succesors ===
=== Usages ===
v1417 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?531 values: a971 i476 virtualObjectMappings: ?866  <|@  <|@
f <@*|@fixed>@ <|@
tid v1417 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1086
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:274) [bci: 88]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?525 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1418 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?525  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -278035 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.Buffer.position(Buffer.java:246) [bci: 25]
locals: v45|QWORD[.] v89|DWORD 
sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
locals: - - - - 
sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
locals: - - - - 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
locals: - v12|QWORD[.] v45|QWORD[.] - v66|DWORD - - v67|DWORD - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: v22|DWORD[.] v12|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
locals: v0|QWORD[.] - - - v12|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:25, 18, 4, 482, 17, 57, 41] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors 
    xhandlers
    flags 
    probability 4607182422079717084
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1416 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:274) [bci: 88]
stamp: void
=== Inputs ===
=== Succesors ===
next: v896 
=== Usages ===
=== Predecessor ===
v1419 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v896  <|@  <|@
f <@*|@fixed>@ <|@
tid v896 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:287) [bci: 155]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1416 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B116" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1314 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:570) [bci: 23]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v1473 
=== Usages ===
=== Predecessor ===
v76 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v1473  <|@  <|@
f <@~|@floating>@ <|@
tid i1474 <|@
result int[-285715|0xfffffffffffba3ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -285715
stableDimension: 0
stamp: i32 [-285715] ⇊00000000fffba3ed ⇈00000000fffba3ed
stampKind: i32
value: int[-285715|0xfffffffffffba3ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1458 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1473 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1455 
=== Predecessor ===
v1314 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-285715|0xfffffffffffba3ed]] destination: B112 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B116" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1309 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.ByteBuffer.hasArray(ByteBuffer.java:970) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 8]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v1471 
=== Usages ===
=== Predecessor ===
v1310 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v1471  <|@  <|@
f <@~|@floating>@ <|@
tid i1472 <|@
result int[-306707|0xfffffffffffb51ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -306707
stableDimension: 0
stamp: i32 [-306707] ⇊00000000fffb51ed ⇈00000000fffb51ed
stampKind: i32
value: int[-306707|0xfffffffffffb51ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1458 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1471 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1455 
=== Predecessor ===
v1309 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-306707|0xfffffffffffb51ed]] destination: B113 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B116" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1304 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:970) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v1469 
=== Usages ===
=== Predecessor ===
v1305 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v1469  <|@  <|@
f <@~|@floating>@ <|@
tid i1470 <|@
result int[-306195|0xfffffffffffb53ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -306195
stableDimension: 0
stamp: i32 [-306195] ⇊00000000fffb53ed ⇈00000000fffb53ed
stampKind: i32
value: int[-306195|0xfffffffffffb53ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1458 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1469 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1455 
=== Predecessor ===
v1304 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-306195|0xfffffffffffb53ed]] destination: B114 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B116" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1294 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 27]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v1465 
=== Usages ===
=== Predecessor ===
v1295 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v1465  <|@  <|@
f <@~|@floating>@ <|@
tid i1466 <|@
result int[-246803|0xfffffffffffc3bed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -246803
stableDimension: 0
stamp: i32 [-246803] ⇊00000000fffc3bed ⇈00000000fffc3bed
stampKind: i32
value: int[-246803|0xfffffffffffc3bed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1458 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1465 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1455 
=== Predecessor ===
v1294 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-246803|0xfffffffffffc3bed]] destination: B115 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" "B114" "B113" "B112" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1458 <|@
result v92|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-306963 - -246803] ⇊00000000fff800e5 ⇈00000000fffffffd
valueDescription: i32
=== Inputs ===
merge: v1455 
values: i1466 i1470 i1472 i1474 
=== Succesors ===
=== Usages ===
v1460 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1455 values: i1466 i1470 i1472 i1474  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1455 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1465 v1469 v1471 v1473 
=== Succesors ===
next: v1460 
=== Usages ===
i1458 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1465 v1469 v1471 v1473 #next: v1460  <|@  <|@
f <@*|@fixed>@ <|@
tid v1460 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?16 
actionAndReason: i1458 
speculation: a1441 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1455 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?16 actionAndReason: i1458 speculation: a1441  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v92|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v92|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22]
locals: v0|QWORD[.] - - - v12|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:22] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1274 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:267) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1453 
=== Usages ===
=== Predecessor ===
v1275 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1453  <|@  <|@
f <@~|@floating>@ <|@
tid i1454 <|@
result int[-245011|0xfffffffffffc42ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -245011
stableDimension: 0
stamp: i32 [-245011] ⇊00000000fffc42ed ⇈00000000fffc42ed
stampKind: i32
value: int[-245011|0xfffffffffffc42ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1442 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1453 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1438 
=== Predecessor ===
v1274 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-245011|0xfffffffffffc42ed]] destination: B117 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" "B7" "B117" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1442 <|@
result v93|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-245011 - -241675] ⇊00000000fffc40e5 ⇈00000000fffc4ffd
valueDescription: i32
=== Inputs ===
merge: v1438 
values: i1446 i1448 i1450 i1452 i1454 
=== Succesors ===
=== Usages ===
v1444 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1438 values: i1446 i1448 i1450 i1452 i1454  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1438 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1445 v1447 v1449 v1451 v1453 
=== Succesors ===
next: v1444 
=== Usages ===
i1442 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1445 v1447 v1449 v1451 v1453 #next: v1444  <|@  <|@
f <@*|@fixed>@ <|@
tid v1444 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?5 
actionAndReason: i1442 
speculation: a1441 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1438 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?5 actionAndReason: i1442 speculation: a1441  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v93|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v93|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@46383ced slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v4|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = ADD (x: v2|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B117" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVZXB [v0|QWORD[.] + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v6|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = LEA [v7|QWORD + 48] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v8|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v7|QWORD + 240] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v7|QWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = MOVE v11|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOV [v13|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD[*]], y: v14|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v11|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOVE input: long[4294967295|0xffffffff] <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD[*] + 12], y: v15|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD[*] + 24], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD[*] + 28], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD[*] + 32], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD[*] + 36], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v11|QWORD[*] + 40], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v16|DWORD[.] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1032c7c7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD[*] + 44], y: v16|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B114" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182529020635733
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v22|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22]
locals: v0|QWORD[.] - - - v12|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v22|DWORD[.] * 8] state [bci:22] <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = MOVZXB [v12|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v23|DWORD, y: v23|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B113" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182529020635733
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOVZXB [v18|DWORD[.] * 8 + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v24|DWORD, y: v24|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182529020635733
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = MOV [v22|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOV [v18|DWORD[.] * 8 + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = MOV [v18|DWORD[.] * 8 + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = MOV [v18|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOV [v12|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = ADD (x: v26|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = ADD (x: v28|DWORD, y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = SUB (x: v30|DWORD, ~y: v31|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = ADD (x: v21|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = ADD (x: v20|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = SUB (x: v33|DWORD, ~y: v34|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v25|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9977260532612405 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607162156848611752
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v22|DWORD[.] * 8 + 20] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v35|DWORD, y: v32|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5358952359076989 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602991276431535006
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v32|DWORD, v30|DWORD] destination: B18 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B22" "B18" "B19" 
    successors "B25" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182529020635733
    begin_IR
      LIR
      nr   -1  <|@ instruction [v38|DWORD, v39|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = MOV [v17|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOV v40|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = SUB (x: v39|DWORD, ~y: v31|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOVSXD v42|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = DEC v43|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.] = UNCOMPRESSPOINTER (input: v18|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1032c7c7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v17|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1032c7c7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v39|DWORD, y: v31|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B33" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678929393265237
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B27" 
    successors "B34" "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182529020635733
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v39|DWORD, y: v31|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678929393265237
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B36" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182529020635733
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v34|DWORD, v31|DWORD] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4628357001361009421
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = MOVSX [v46|QWORD[.] + v55|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v57|DWORD y: 128 size: WORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9998116902024854 condition: |<| trueDestination: B45 -> B46 falseDestination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4628355558195456655
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v56|DWORD + v19|DWORD[.] * 8 + 16], y: v57|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = INC v56|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = INC v55|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v59|DWORD, v58|DWORD] destination: B46 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B46" 
    successors "B45" "B48" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4628637040060955957
    begin_IR
      LIR
      nr   -1  <|@ instruction [v55|DWORD, v56|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v39|DWORD, y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9647476131021091 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B49" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607136457943565555
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B47" 
    successors "B50" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182529020635733
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v33|DWORD, y: v55|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B49 -> B50 falseDestination: B49 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678929393265237
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B52" 
    successors "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182529020635733
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v55|DWORD, v56|DWORD] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B63" "B88" 
    successors "B60" "B95" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4607879356046553365
    begin_IR
      LIR
      nr   -1  <|@ instruction [v66|DWORD, v67|DWORD] = LABEL numbPhis: 2 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v33|DWORD, y: v66|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.13401192679415996 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B79" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4594743492025225673
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = MOVSX [v46|QWORD[.] + v66|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = MOV [v19|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = MOVZX v68|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = INC v66|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = INC v67|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v70|DWORD y: 128 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9444529691575878 condition: |<| trueDestination: B60 -> B61 falseDestination: B60 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B66" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4594433791124817836
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v30|DWORD, y: v67|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9998375304630381 condition: > trueDestination: B61 -> B62 falseDestination: B61 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" "B64" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4594432935597468643
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v69|DWORD, y: v67|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B62 -> B63 falseDestination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B59" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4594432935597468643
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v67|DWORD + v19|DWORD[.] * 8 + 16], y: v70|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v71|DWORD, v72|DWORD] destination: B63 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B80" "B82" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4576108836187578827
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v70|DWORD y: 2048 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B79 -> B80 falseDestination: B79 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B83" "B93" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4576108836187578827
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v70|DWORD y: 55296 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B82 -> B83 falseDestination: B82 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B84" "B86" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4576108836187578827
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = SUB (x: v30|DWORD, ~y: v67|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v78|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B83 -> B84 falseDestination: B83 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B87" "B91" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4576108836187578827
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v69|DWORD, y: v67|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B86 -> B87 falseDestination: B86 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4576108836187578827
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = LEA [v67|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v69|DWORD, y: v79|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B87 -> B88 falseDestination: B87 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B59" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4576108836187578827
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = SHR v70|DWORD y: 12 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v81|DWORD = OR v80|DWORD y: 224 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v67|DWORD + v19|DWORD[.] * 8 + 16], y: v81|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v82|DWORD = SHR v70|DWORD y: 6 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v83|DWORD = AND v82|DWORD y: 63 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v84|DWORD = OR v83|DWORD y: 128 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v72|DWORD + v19|DWORD[.] * 8 + 16], y: v84|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = AND v70|DWORD y: 63 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = OR v85|DWORD y: 128 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v79|DWORD + v19|DWORD[.] * 8 + 16], y: v86|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = LEA [v67|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v71|DWORD, v87|DWORD] destination: B88 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B38" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678929393265237
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = MOV [v19|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = MOVSXD v31|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = ADD (x: v50|QWORD, y: v44|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = MOV v49|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v52|QWORD, y: v51|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678929393265237
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v49|DWORD, y: v31|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678929393265237
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B36 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678929393265237
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = MOVSXD v55|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = SUB (x: v33|DWORD, ~y: v55|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = MOVSXD v61|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = DEC v62|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = ADD (x: v60|QWORD, y: v63|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v41|QWORD, y: v64|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B50 -> B51 falseDestination: B50 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678929393265237
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v40|DWORD, y: v55|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B51 -> B52 falseDestination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678929393265237
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B52 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678929393265237
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = MOVSXD v34|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = ADD (x: v47|QWORD, y: v44|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v41|QWORD, y: v48|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B25 -> B26 falseDestination: B25 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678929393265237
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v40|DWORD, y: v34|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B33" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678929393265237
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B27 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602013380752059413
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = ADD (x: v35|DWORD, y: v31|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v35|DWORD, v36|DWORD] destination: B19 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B49" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572561228257811438
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B21" "B112" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4567389915042742827
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v25|DWORD, y: v25|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4567389915042742827
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v22|DWORD[.] * 8 + 20] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v35|DWORD, y: v32|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5358952359076989 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4563262748217087376
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v32|DWORD, v30|DWORD] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562509882613657286
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = ADD (x: v31|DWORD, y: v35|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v35|DWORD, v37|DWORD] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4537629705179309201
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v66|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v67|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 143]
locals: - - - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: v22|DWORD[.] v12|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
locals: v0|QWORD[.] - - - v12|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD] [] callTarget: HotSpotMethod<UTF_8$Encoder.overflow(CharBuffer, int, ByteBuffer, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:143, 17, 57, 41] <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 146]
stack: v73|QWORD[.] 
locals: - - - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: v22|DWORD[.] v12|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
locals: v0|QWORD[.] - - - v12|QWORD[.] - 
>@ <|@ instruction v74|DWORD = MOV [v73|QWORD[.] + 12] size: DWORD state [bci:146, 17, 57, 41] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v74|DWORD, y: v74|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9999755802164062 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4537629534033743191
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B67 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B67" 
    successors "B71" "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4537629705179309201
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v74|DWORD, y: v74|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9999755267053062 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4468687617662610068
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v74|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4468687617662610068
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:282) [bci: 141]
locals: v0|QWORD[.] - - - v12|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<StreamEncoder.writeBytes()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:141] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B75 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B75" 
    successors "B14" "B115" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607182529020635733
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v17|DWORD[.] = MOV [v12|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22]
locals: v0|QWORD[.] - - - v12|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v17|DWORD[.] * 8] state [bci:22] <|@ <|@
      nr   -1  <|@ instruction v18|DWORD[.] = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22]
locals: v0|QWORD[.] - - - v12|QWORD[.] - 
>@ <|@ instruction v19|DWORD[.] = MOV [v18|DWORD[.] * 8 + 44] size: DWORD state [bci:22] <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22]
locals: v0|QWORD[.] - - - v12|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v19|DWORD[.] * 8] state [bci:22] <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOV [v12|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOV [v12|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v21|DWORD, y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B96" "B97" 
    xhandlers
    flags 
    probability 4607182422079717084
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = SUB (x: v66|DWORD, ~y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v88|DWORD, y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B95 -> B96 falseDestination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B98" "B99" 
    xhandlers
    flags 
    probability 4607182422079717084
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v88|DWORD, y: v88|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B97 -> B98 falseDestination: B97 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B100" "B101" 
    xhandlers
    flags 
    probability 4607182422079717084
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v88|DWORD, y: [v12|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B99 -> B100 falseDestination: B99 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B102" "B103" 
    xhandlers
    flags 
    probability 4607182422079717084
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = SUB (x: v67|DWORD, ~y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v89|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B101 -> B102 falseDestination: B101 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" "B105" 
    xhandlers
    flags 
    probability 4607182422079717084
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v89|DWORD, y: v89|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B103 -> B104 falseDestination: B103 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" "B108" 
    xhandlers
    flags 
    probability 4607182422079717084
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v89|DWORD, y: [v18|DWORD[.] * 8 + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B105 -> B106 falseDestination: B105 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B109" 
    xhandlers
    flags 
    probability 4607182422079717084
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v12|QWORD[.] + 24], y: v88|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|DWORD[.] * 8 + 24], y: v89|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B108 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B110" "B111" 
    xhandlers
    flags 
    probability 4607182422079717084
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = SUB (x: v21|DWORD, ~y: [v12|QWORD[.] + 24]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v91|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B109 -> B110 falseDestination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors 
    xhandlers
    flags 
    probability 4607182422079717084
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v9|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v10|QWORD[.]] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B72" "B73" 
    xhandlers
    flags 
    probability 4537629533658711714
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = MOV [v12|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = SUB (x: v75|DWORD, ~y: [v12|QWORD[.] + 24]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v76|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors 
    xhandlers
    flags 
    probability 4537629533658711714
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4468675328631188685
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v74|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4468675328631188685
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B41" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-250651|0xfffffffffffc2ce5]] destination: B31 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B31" "B40" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v53|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1159422862] <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v53|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v54|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 70]
stack: v31|DWORD v38|DWORD 
locals: v22|DWORD[.] v12|QWORD[.] v45|QWORD[.] v46|QWORD[.] v34|DWORD v33|DWORD v19|DWORD[.] v31|DWORD v30|DWORD - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: v22|DWORD[.] v12|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
locals: v0|QWORD[.] - - - v12|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:70, 17, 57, 41] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-243475|0xfffffffffffc48ed]] destination: B5 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" "B7" "B117" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v93|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v93|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B107" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-276243|0xfffffffffffbc8ed]] destination: B104 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B65" "B81" "B94" "B85" "B92" "B90" "B96" "B98" "B100" "B102" "B104" "B106" 
    successors 
    xhandlers
    flags 
    probability 2371145203810566144
    begin_IR
      LIR
      nr   -1  <|@ instruction [v90|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v90|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: v22|DWORD[.] v12|QWORD[.] v45|QWORD[.] v46|QWORD[.] v66|DWORD v33|DWORD v19|DWORD[.] v67|DWORD v30|DWORD - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: v22|DWORD[.] v12|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
locals: v0|QWORD[.] - - - v12|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:109, 17, 57, 41] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B107" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-277523|0xfffffffffffbc3ed]] destination: B106 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B77" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-264979|0xfffffffffffbf4ed]] destination: B72 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B72" "B76" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v77|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v77|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 44]
stack: v73|QWORD[.] 
locals: v0|QWORD[.] - - - v12|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -265747 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 146]
stack: v73|QWORD[.] 
locals: - - - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: v22|DWORD[.] v12|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
locals: v0|QWORD[.] - - - v12|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:146, 17, 57, 41] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B107" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-275987|0xfffffffffffbc9ed]] destination: B102 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B107" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-275731|0xfffffffffffbcaed]] destination: B100 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -278035 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.Buffer.position(Buffer.java:246) [bci: 25]
locals: v45|QWORD[.] v89|DWORD 
sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
locals: - - - - 
sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
locals: - - - - 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
locals: - v12|QWORD[.] v45|QWORD[.] - v66|DWORD - - v67|DWORD - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: v22|DWORD[.] v12|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
locals: v0|QWORD[.] - - - v12|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:25, 18, 4, 482, 17, 57, 41] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B107" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-274451|0xfffffffffffbcfed]] destination: B96 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B107" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-261403|0xfffffffffffc02e5]] destination: B65 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-242963|0xfffffffffffc4aed]] destination: B1 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-265235|0xfffffffffffbf3ed]] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B91 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B107" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-267291|0xfffffffffffbebe5]] destination: B92 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B107" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-266515|0xfffffffffffbeeed]] destination: B85 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B93 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B107" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-266259|0xfffffffffffbefed]] destination: B94 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1723836758] <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -258843 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v65|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: v22|DWORD[.] v12|QWORD[.] v45|QWORD[.] v46|QWORD[.] v55|DWORD v33|DWORD v19|DWORD[.] v56|DWORD v30|DWORD - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: v22|DWORD[.] v12|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
locals: v0|QWORD[.] - - - v12|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:109, 17, 57, 41] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B116" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-306707|0xfffffffffffb51ed]] destination: B113 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" "B114" "B113" "B112" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v92|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v92|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22]
locals: v0|QWORD[.] - - - v12|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:22] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B116" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-246803|0xfffffffffffc3bed]] destination: B115 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B116" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-306195|0xfffffffffffb53ed]] destination: B114 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B107" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-274707|0xfffffffffffbceed]] destination: B98 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B116" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-285715|0xfffffffffffba3ed]] destination: B112 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-245011|0xfffffffffffc42ed]] destination: B117 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-256283|0xfffffffffffc16e5]] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B107" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-272411|0xfffffffffffbd7e5]] destination: B90 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-243731|0xfffffffffffc47ed]] destination: B7 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-243219|0xfffffffffffc49ed]] destination: B3 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B81" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B80 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B107" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-266003|0xfffffffffffbf0ed]] destination: B81 -> B107 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: iload_2       
     2: iload_3       
     3: invokestatic  #60         // java.nio.CharBuffer.wrap:(char[], int, int)java.nio.CharBuffer
     6: astore        4
     8: aload_0       
     9: getfield      #26         // haveLeftoverChar:boolean
    12: ifeq          22
    15: aload_0       
    16: aload         4
    18: iconst_0      
    19: invokespecial #56         // flushLeftoverChar:(java.nio.CharBuffer, boolean)void
    22: aload         4
    24: invokevirtual #51         // java.nio.Buffer.hasRemaining:()boolean
    27: ifeq          155
    30: aload_0       
    31: getfield      #32         // encoder:java.nio.charset.CharsetEncoder
    34: aload         4
    36: aload_0       
    37: getfield      #34         // bb:java.nio.ByteBuffer
    40: iconst_0      
    41: invokevirtual #54         // java.nio.charset.CharsetEncoder.encode:(java.nio.CharBuffer, java.nio.ByteBuffer, boolean)java.nio.charset.CoderResult
    44: astore        5
    46: aload         5
    48: invokevirtual #55         // java.nio.charset.CoderResult.isUnderflow:()boolean
    51: ifeq          108
    54: getstatic     #39         // $assertionsDisabled:boolean
    57: ifne          82
    60: aload         4
    62: invokevirtual #61         // java.nio.Buffer.remaining:()int
    65: iconst_1      
    66: if_icmple     82
    69: new           #47         // java.lang.AssertionError
    72: dup           
    73: aload         4
    75: invokevirtual #61         // java.nio.Buffer.remaining:()int
    78: invokespecial #42         // java.lang.AssertionError.<init>:(int)void
    81: athrow        
    82: aload         4
    84: invokevirtual #61         // java.nio.Buffer.remaining:()int
    87: iconst_1      
    88: if_icmpne     155
    91: aload_0       
    92: iconst_1      
    93: putfield      #26         // haveLeftoverChar:boolean
    96: aload_0       
    97: aload         4
    99: invokevirtual #52         // java.nio.CharBuffer.get:()char
   102: putfield      #49         // leftoverChar:char
   105: goto          155
   108: aload         5
   110: invokevirtual #57         // java.nio.charset.CoderResult.isOverflow:()boolean
   113: ifeq          147
   116: getstatic     #39         // $assertionsDisabled:boolean
   119: ifne          140
   122: aload_0       
   123: getfield      #34         // bb:java.nio.ByteBuffer
   126: invokevirtual #38         // java.nio.Buffer.position:()int
   129: ifgt          140
   132: new           #47         // java.lang.AssertionError
   135: dup           
   136: invokespecial #40         // java.lang.AssertionError.<init>:()void
   139: athrow        
   140: aload_0       
   141: invokespecial #58         // writeBytes:()void
   144: goto          22
   147: aload         5
   149: invokevirtual #59         // java.nio.charset.CoderResult.throwException:()void
   152: goto          22
   155: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@46383ced slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction r14|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ st <@st|@reference-map: [rsi:0, r13:0, stack:48]
live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 0]
locals: rsi|QWORD[.] r13|QWORD[.] r14|DWORD r8|DWORD - - 
>@ <|@ instruction r10|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   14  <|@ instruction r11|DWORD = ADD (x: r14|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   16  <|@ instruction CMP (x: r11|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   18  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   30  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   40  <|@ instruction CMP (x: r14|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   52  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr   54  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B117" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction rdx|DWORD = MOVZXB [rsi|QWORD[.] + 23] size: DWORD <|@ <|@
      nr   66  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   72  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   74  <|@ instruction rcx|QWORD = LEA [rdx|QWORD + 48] size: QWORD <|@ <|@
      nr   76  <|@ instruction CMP (x: rcx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   78  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  108  <|@ instruction MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  110  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + 240] instr: 0 <|@ <|@
      nr  112  <|@ instruction rdx|QWORD[*] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  118  <|@ instruction r9|QWORD[.] = MOVE rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction stack:56|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>} <|@ <|@
      nr  124  <|@ instruction rcx|QWORD = MOV [rcx|QWORD + 168] size: QWORD <|@ <|@
      nr  126  <|@ instruction MOV (x: [rdx|QWORD[*]], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  128  <|@ instruction MOV [rdx|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed} <|@ <|@
      nr  130  <|@ instruction rcx|QWORD = MOVE input: long[4294967295|0xffffffff] <|@ <|@
      nr  132  <|@ instruction MOV (x: [rdx|QWORD[*] + 12], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  134  <|@ instruction MOV (x: [rdx|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  136  <|@ instruction MOV (x: [rdx|QWORD[*] + 24], y: r14|DWORD) size: DWORD <|@ <|@
      nr  138  <|@ instruction MOV (x: [rdx|QWORD[*] + 28], y: r11|DWORD) size: DWORD <|@ <|@
      nr  140  <|@ instruction MOV (x: [rdx|QWORD[*] + 32], y: r10|DWORD) size: DWORD <|@ <|@
      nr  142  <|@ instruction MOV (x: [rdx|QWORD[*] + 36], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  144  <|@ instruction MOVB (x: [rdx|QWORD[*] + 40], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  146  <|@ instruction r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1032c7c7 encoding: base: 0 shift: 3 <|@ <|@
      nr  148  <|@ instruction MOV (x: [rdx|QWORD[*] + 44], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr  150  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B114" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182529020635733
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  174  <|@ instruction rbx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  176  <|@ instruction stack:40|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD <|@ <|@
      nr  178  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0, r9:0, r10:0, r11:0, stack:24, stack:40, stack:48]
live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22]
locals: rsi|QWORD[.] - - - r9|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rbx|DWORD[.] * 8] state [bci:22] <|@ <|@
      nr  180  <|@ instruction rdi|DWORD = MOVZXB [r9|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  182  <|@ instruction TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  184  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B113" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182529020635733
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  188  <|@ instruction rdi|DWORD = MOVZXB [r10|DWORD[.] * 8 + 40] size: DWORD <|@ <|@
      nr  190  <|@ instruction TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  192  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182529020635733
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  196  <|@ instruction rdi|DWORD = MOV [rbx|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr  198  <|@ instruction rax|DWORD = MOV [r10|DWORD[.] * 8 + 36] size: DWORD <|@ <|@
      nr  200  <|@ instruction rbp|DWORD = MOV [r10|DWORD[.] * 8 + 28] size: DWORD <|@ <|@
      nr  202  <|@ instruction r13|DWORD = MOV [r10|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr  204  <|@ instruction r14|DWORD = MOV [r9|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  206  <|@ instruction r9|DWORD = ADD (x: rax|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  208  <|@ instruction r13|DWORD = ADD (x: r13|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  210  <|@ instruction stack:36|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  212  <|@ instruction rbp|DWORD = SUB (x: r9|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  214  <|@ instruction stack:44|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  216  <|@ instruction rax|DWORD = ADD (x: r8|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  218  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  220  <|@ instruction stack:60|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  222  <|@ instruction r8|DWORD = SUB (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  224  <|@ instruction CMP rdi|DWORD y: 1 size: DWORD <|@ <|@
      nr  226  <|@ instruction BRANCH trueDestinationProbability: 0.9977260532612405 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607162156848611752
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  230  <|@ instruction MOV [rbx|DWORD[.] * 8 + 20] y: 1 size: DWORD <|@ <|@
      nr  232  <|@ instruction CMP (x: r8|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  234  <|@ instruction BRANCH trueDestinationProbability: 0.5358952359076989 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602991276431535006
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  238  <|@ instruction rdi|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  240  <|@ instruction stack:64|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  242  <|@ instruction stack:68|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  244  <|@ instruction JUMP ~[] destination: B18 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B22" "B18" "B19" 
    successors "B25" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182529020635733
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  300  <|@ instruction rbp|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  302  <|@ instruction r8|QWORD = MOV rbp|DWORD size: DWORD <|@ <|@
      nr  304  <|@ instruction r14|DWORD = SUB (x: rdi|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  306  <|@ instruction r14|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr  308  <|@ instruction r14|QWORD = DEC r14|QWORD size: QWORD <|@ <|@
      nr  310  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1032c7c7 encoding: base: 0 shift: 3 <|@ <|@
      nr  312  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1032c7c7 encoding: base: 0 shift: 3 <|@ <|@
      nr  314  <|@ instruction CMP (x: rdi|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  316  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B33" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678929393265237
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  374  <|@ instruction stack:72|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  376  <|@ instruction JUMP ~[] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B27" 
    successors "B34" "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182529020635733
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  380  <|@ instruction CMP (x: rdi|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  382  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678929393265237
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  452  <|@ instruction JUMP ~[] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B36" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182529020635733
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  456  <|@ instruction r10|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  458  <|@ instruction rcx|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  460  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4628357001361009421
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  470  <|@ instruction rbx|DWORD = MOVSX [rdx|QWORD[.] + r10|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  472  <|@ instruction CMP rbx|DWORD y: 128 size: WORD <|@ <|@
      nr  474  <|@ instruction BRANCH trueDestinationProbability: 0.9998116902024854 condition: |<| trueDestination: B45 -> B46 falseDestination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4628355558195456655
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  478  <|@ instruction MOVB (x: [rcx|DWORD + r11|DWORD[.] * 8 + 16], y: rbx|DWORD) size: BYTE <|@ <|@
      nr  480  <|@ instruction rcx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  482  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  484  <|@ instruction JUMP ~[] destination: B46 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B46" 
    successors "B45" "B48" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4628637040060955957
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  464  <|@ instruction CMP (x: rdi|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  466  <|@ instruction BRANCH trueDestinationProbability: 0.9647476131021091 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B49" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607136457943565555
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  492  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B47" 
    successors "B50" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182529020635733
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  496  <|@ instruction CMP (x: rax|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  498  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B49 -> B50 falseDestination: B49 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678929393265237
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  558  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B52" 
    successors "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182529020635733
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  562  <|@ instruction r8|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  564  <|@ instruction JUMP ~[] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B63" "B88" 
    successors "B60" "B95" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4607879356046553365
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL numbPhis: 2 align: true label: ? <|@ <|@
      nr  568  <|@ instruction CMP (x: rax|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  570  <|@ instruction BRANCH trueDestinationProbability: 0.13401192679415996 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B79" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4594743492025225673
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  574  <|@ instruction rcx|DWORD = MOVSX [rdx|QWORD[.] + r10|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  576  <|@ instruction rbx|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  578  <|@ instruction rcx|DWORD = MOVZX rcx|DWORD size: DWORD <|@ <|@
      nr  580  <|@ instruction rdi|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  582  <|@ instruction rbp|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  584  <|@ instruction CMP rcx|DWORD y: 128 size: DWORD <|@ <|@
      nr  586  <|@ instruction BRANCH trueDestinationProbability: 0.9444529691575878 condition: |<| trueDestination: B60 -> B61 falseDestination: B60 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B66" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4594433791124817836
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  590  <|@ instruction CMP (x: r9|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  592  <|@ instruction BRANCH trueDestinationProbability: 0.9998375304630381 condition: > trueDestination: B61 -> B62 falseDestination: B61 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" "B64" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4594432935597468643
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  596  <|@ instruction CMP (x: rbx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  598  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B62 -> B63 falseDestination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B59" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4594432935597468643
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  602  <|@ instruction MOVB (x: [r8|DWORD + r11|DWORD[.] * 8 + 16], y: rcx|DWORD) size: BYTE <|@ <|@
      nr  604  <|@ instruction r8|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  606  <|@ instruction r10|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  608  <|@ instruction JUMP ~[] destination: B63 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B80" "B82" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4576108836187578827
    begin_IR
      LIR
      nr  732  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  734  <|@ instruction CMP rcx|DWORD y: 2048 size: DWORD <|@ <|@
      nr  736  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B79 -> B80 falseDestination: B79 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B83" "B93" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4576108836187578827
    begin_IR
      LIR
      nr  752  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  754  <|@ instruction CMP rcx|DWORD y: 55296 size: DWORD <|@ <|@
      nr  756  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B82 -> B83 falseDestination: B82 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B84" "B86" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4576108836187578827
    begin_IR
      LIR
      nr  758  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  760  <|@ instruction r13|DWORD = SUB (x: r9|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  762  <|@ instruction CMP r13|DWORD y: 3 size: DWORD <|@ <|@
      nr  764  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B83 -> B84 falseDestination: B83 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B87" "B91" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4576108836187578827
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  782  <|@ instruction CMP (x: rbx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  784  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B86 -> B87 falseDestination: B86 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4576108836187578827
    begin_IR
      LIR
      nr  786  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  788  <|@ instruction r13|DWORD = LEA [r8|DWORD + 2] size: DWORD <|@ <|@
      nr  790  <|@ instruction CMP (x: rbx|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  792  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B87 -> B88 falseDestination: B87 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B59" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4576108836187578827
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  796  <|@ instruction r10|DWORD = SHR rcx|DWORD y: 12 size: DWORD <|@ <|@
      nr  798  <|@ instruction r10|DWORD = OR r10|DWORD y: 224 size: DWORD <|@ <|@
      nr  800  <|@ instruction MOVB (x: [r8|DWORD + r11|DWORD[.] * 8 + 16], y: r10|DWORD) size: BYTE <|@ <|@
      nr  802  <|@ instruction r10|DWORD = SHR rcx|DWORD y: 6 size: DWORD <|@ <|@
      nr  804  <|@ instruction r10|DWORD = AND r10|DWORD y: 63 size: DWORD <|@ <|@
      nr  806  <|@ instruction r10|DWORD = OR r10|DWORD y: 128 size: DWORD <|@ <|@
      nr  808  <|@ instruction MOVB (x: [rbp|DWORD + r11|DWORD[.] * 8 + 16], y: r10|DWORD) size: BYTE <|@ <|@
      nr  810  <|@ instruction rcx|DWORD = AND rcx|DWORD y: 63 size: DWORD <|@ <|@
      nr  812  <|@ instruction rcx|DWORD = OR rcx|DWORD y: 128 size: DWORD <|@ <|@
      nr  814  <|@ instruction MOVB (x: [r13|DWORD + r11|DWORD[.] * 8 + 16], y: rcx|DWORD) size: BYTE <|@ <|@
      nr  816  <|@ instruction r8|DWORD = LEA [r8|DWORD + 3] size: DWORD <|@ <|@
      nr  818  <|@ instruction r10|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  820  <|@ instruction JUMP ~[] destination: B88 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B38" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678929393265237
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  386  <|@ instruction r10|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  388  <|@ instruction rbx|QWORD = MOVSXD r13|DWORD size: QWORD <|@ <|@
      nr  390  <|@ instruction rbx|QWORD = ADD (x: rbx|QWORD, y: r14|QWORD) size: QWORD <|@ <|@
      nr  392  <|@ instruction r14|QWORD = MOV r10|DWORD size: DWORD <|@ <|@
      nr  394  <|@ instruction CMP (x: r14|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  396  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678929393265237
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  400  <|@ instruction CMP (x: r10|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  402  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678929393265237
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  406  <|@ instruction JUMP ~[] destination: B36 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678929393265237
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  502  <|@ instruction rbx|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  504  <|@ instruction rdi|DWORD = SUB (x: rax|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  506  <|@ instruction rdi|QWORD = MOVSXD rdi|DWORD size: QWORD <|@ <|@
      nr  508  <|@ instruction rdi|QWORD = DEC rdi|QWORD size: QWORD <|@ <|@
      nr  510  <|@ instruction rbx|QWORD = ADD (x: rbx|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  512  <|@ instruction CMP (x: r8|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  514  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B50 -> B51 falseDestination: B50 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678929393265237
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  518  <|@ instruction CMP (x: rbp|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  520  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B51 -> B52 falseDestination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678929393265237
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  524  <|@ instruction JUMP ~[] destination: B52 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678929393265237
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  320  <|@ instruction stack:72|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  322  <|@ instruction r10|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr  324  <|@ instruction r10|QWORD = ADD (x: r10|QWORD, y: r14|QWORD) size: QWORD <|@ <|@
      nr  326  <|@ instruction CMP (x: r8|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  328  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B25 -> B26 falseDestination: B25 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678929393265237
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  332  <|@ instruction CMP (x: rbp|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  334  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B33" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678929393265237
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  338  <|@ instruction JUMP ~[] destination: B27 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602013380752059413
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  248  <|@ instruction rdi|DWORD = ADD (x: r8|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  250  <|@ instruction stack:64|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  252  <|@ instruction stack:68|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  254  <|@ instruction JUMP ~[] destination: B19 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B49" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572561228257811438
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  488  <|@ instruction JUMP ~[] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B21" "B112" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4567389915042742827
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  258  <|@ instruction stack:68|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  260  <|@ instruction stack:72|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  262  <|@ instruction TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  264  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4567389915042742827
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  268  <|@ instruction rbx|DWORD[.] = MOVE stack:40|DWORD[.] moveKind: DWORD <|@ <|@
      nr  270  <|@ instruction MOV [rbx|DWORD[.] * 8 + 20] y: 1 size: DWORD <|@ <|@
      nr  272  <|@ instruction CMP (x: r8|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  274  <|@ instruction BRANCH trueDestinationProbability: 0.5358952359076989 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4563262748217087376
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  278  <|@ instruction rdi|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  280  <|@ instruction stack:64|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  282  <|@ instruction r10|DWORD[.] = MOVE stack:72|DWORD[.] moveKind: DWORD <|@ <|@
      nr  284  <|@ instruction JUMP ~[] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562509882613657286
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  288  <|@ instruction rsi|DWORD = ADD (x: r13|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  290  <|@ instruction rdi|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  292  <|@ instruction stack:64|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  294  <|@ instruction r10|DWORD[.] = MOVE stack:72|DWORD[.] moveKind: DWORD <|@ <|@
      nr  296  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4537629705179309201
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  626  <|@ instruction r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  628  <|@ instruction rdi|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  630  <|@ instruction rsi|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  632  <|@ instruction rdx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  634  <|@ instruction rcx|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  636  <|@ instruction stack:80|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  638  <|@ st <@st|@reference-map: [stack:0, stack:24, stack:40, stack:48]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 143]
locals: - - - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: stack:40|DWORD[.] stack:56|QWORD[.] stack:80|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
locals: stack:32|QWORD[.] - - - stack:56|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD] [] callTarget: HotSpotMethod<UTF_8$Encoder.overflow(CharBuffer, int, ByteBuffer, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:143, 17, 57, 41] <|@ <|@
      nr  640  <|@ st <@st|@reference-map: [rax:0, stack:0, stack:24, stack:40, stack:48]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 146]
stack: rax|QWORD[.] 
locals: - - - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: stack:40|DWORD[.] stack:56|QWORD[.] stack:80|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
locals: stack:32|QWORD[.] - - - stack:56|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD state [bci:146, 17, 57, 41] <|@ <|@
      nr  642  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  644  <|@ instruction BRANCH trueDestinationProbability: 0.9999755802164062 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4537629534033743191
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  648  <|@ instruction JUMP ~[] destination: B67 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B67" 
    successors "B71" "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4537629705179309201
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  664  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  666  <|@ instruction BRANCH trueDestinationProbability: 0.9999755267053062 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4468687617662610068
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  692  <|@ instruction CMP r10|DWORD y: 1 size: DWORD <|@ <|@
      nr  694  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4468687617662610068
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  698  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  700  <|@ st <@st|@reference-map: [stack:24, stack:48]
live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:282) [bci: 141]
locals: stack:32|QWORD[.] - - - stack:56|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<StreamEncoder.writeBytes()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:141] <|@ <|@
      nr  702  <|@ instruction r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  704  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  706  <|@ instruction JUMP ~[] destination: B75 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B75" 
    successors "B14" "B115" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607182529020635733
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  154  <|@ instruction rdx|DWORD[.] = MOV [r9|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  156  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r9:0, stack:24, stack:48]
live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22]
locals: rsi|QWORD[.] - - - r9|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rdx|DWORD[.] * 8] state [bci:22] <|@ <|@
      nr  158  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  160  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r9:0, r10:0, stack:24, stack:48]
live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22]
locals: rsi|QWORD[.] - - - r9|QWORD[.] - 
>@ <|@ instruction r11|DWORD[.] = MOV [r10|DWORD[.] * 8 + 44] size: DWORD state [bci:22] <|@ <|@
      nr  162  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r9:0, r10:0, r11:0, stack:24, stack:48]
live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22]
locals: rsi|QWORD[.] - - - r9|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r11|DWORD[.] * 8] state [bci:22] <|@ <|@
      nr  164  <|@ instruction rcx|DWORD = MOV [r9|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  166  <|@ instruction r8|DWORD = MOV [r9|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  168  <|@ instruction CMP (x: r8|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  170  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B96" "B97" 
    xhandlers
    flags 
    probability 4607182422079717084
    begin_IR
      LIR
      nr  864  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  866  <|@ instruction stack:80|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  868  <|@ instruction r14|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  870  <|@ instruction rsi|DWORD = SUB (x: r10|DWORD, ~y: r14|DWORD) size: DWORD <|@ <|@
      nr  872  <|@ instruction CMP (x: rsi|DWORD, y: stack:60|DWORD) size: DWORD <|@ <|@
      nr  874  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B95 -> B96 falseDestination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B98" "B99" 
    xhandlers
    flags 
    probability 4607182422079717084
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  886  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  888  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B97 -> B98 falseDestination: B97 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B100" "B101" 
    xhandlers
    flags 
    probability 4607182422079717084
    begin_IR
      LIR
      nr  898  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  900  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  902  <|@ instruction CMP (x: rsi|DWORD, y: [rbx|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  904  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B99 -> B100 falseDestination: B99 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B102" "B103" 
    xhandlers
    flags 
    probability 4607182422079717084
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  914  <|@ instruction rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  916  <|@ instruction rcx|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  918  <|@ instruction rdi|DWORD = SUB (x: r8|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  920  <|@ instruction CMP (x: rdi|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  922  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B101 -> B102 falseDestination: B101 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" "B105" 
    xhandlers
    flags 
    probability 4607182422079717084
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  932  <|@ instruction TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  934  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B103 -> B104 falseDestination: B103 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" "B108" 
    xhandlers
    flags 
    probability 4607182422079717084
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  944  <|@ instruction rcx|DWORD[.] = MOVE stack:72|DWORD[.] moveKind: DWORD <|@ <|@
      nr  946  <|@ instruction CMP (x: rdi|DWORD, y: [rcx|DWORD[.] * 8 + 12]) size: DWORD <|@ <|@
      nr  948  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B105 -> B106 falseDestination: B105 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B109" 
    xhandlers
    flags 
    probability 4607182422079717084
    begin_IR
      LIR
      nr  964  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  966  <|@ instruction MOV (x: [rbx|QWORD[.] + 24], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  968  <|@ instruction MOV (x: [rcx|DWORD[.] * 8 + 24], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  970  <|@ instruction rsi|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  972  <|@ instruction JUMP ~[] destination: B108 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B110" "B111" 
    xhandlers
    flags 
    probability 4607182422079717084
    begin_IR
      LIR
      nr  974  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  976  <|@ instruction rsi|DWORD = SUB (x: rsi|DWORD, ~y: [rbx|QWORD[.] + 24]) size: DWORD <|@ <|@
      nr  978  <|@ instruction CMP rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr  980  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B109 -> B110 falseDestination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors 
    xhandlers
    flags 
    probability 4607182422079717084
    begin_IR
      LIR
      nr  990  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  992  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   82  <|@ instruction stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   86  <|@ instruction stack:44|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   90  <|@ instruction rdx|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr   92  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   94  <|@ st <@st|@reference-map: [r13:0, stack:48]
live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 0]
locals: stack:32|QWORD[.] r13|QWORD[.] r14|DWORD stack:44|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   96  <|@ instruction rdx|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   98  <|@ instruction r11|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction r10|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  102  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction JUMP ~[] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B72" "B73" 
    xhandlers
    flags 
    probability 4537629533658711714
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  670  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  672  <|@ instruction r10|DWORD = MOV [rbx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  674  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: [rbx|QWORD[.] + 24]) size: DWORD <|@ <|@
      nr  676  <|@ instruction CMP r10|DWORD y: 1 size: DWORD <|@ <|@
      nr  678  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors 
    xhandlers
    flags 
    probability 4537629533658711714
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  688  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4468675328631188685
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  652  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  654  <|@ instruction CMP r10|DWORD y: 1 size: DWORD <|@ <|@
      nr  656  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4468675328631188685
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  660  <|@ instruction JUMP ~[] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  342  <|@ instruction stack:80|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction JUMP ~[] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  358  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B41" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  362  <|@ instruction r10|DWORD = MOVE input: int[-250651|0xfffffffffffc2ce5] <|@ <|@
      nr  364  <|@ instruction rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  366  <|@ instruction rdi|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  368  <|@ instruction r8|DWORD[.] = MOVE stack:40|DWORD[.] moveKind: DWORD <|@ <|@
      nr  370  <|@ instruction JUMP ~[] destination: B31 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B31" "B40" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  442  <|@ instruction rbp|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1159422862] <|@ <|@
      nr  444  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  446  <|@ instruction MOV (x: [r15|QWORD + 680], y: rbp|QWORD[.]) size: QWORD <|@ <|@
      nr  448  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0, r8:0, r11:0, stack:48]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 70]
stack: r13|DWORD rdi|DWORD 
locals: r8|DWORD[.] rbx|QWORD[.] rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD rax|DWORD r11|DWORD[.] r13|DWORD r9|DWORD - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: r8|DWORD[.] rbx|QWORD[.] rsi|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
locals: stack:32|QWORD[.] - - - rbx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:70, 17, 57, 41] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   46  <|@ instruction r10|DWORD = MOVE input: int[-243475|0xfffffffffffc48ed] <|@ <|@
      nr   48  <|@ instruction JUMP ~[] destination: B5 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" "B7" "B117" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1044  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1046  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1048  <|@ st <@st|@reference-map: [r13:0, stack:48]
live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 0]
locals: stack:32|QWORD[.] r13|QWORD[.] r14|DWORD r8|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B107" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  936  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  938  <|@ instruction rcx|DWORD = MOVE input: int[-276243|0xfffffffffffbc8ed] <|@ <|@
      nr  940  <|@ instruction JUMP ~[] destination: B104 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B65" "B81" "B94" "B85" "B92" "B90" "B96" "B98" "B100" "B102" "B104" "B106" 
    successors 
    xhandlers
    flags 
    probability 2371145203810566144
    begin_IR
      LIR
      nr  956  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  958  <|@ instruction MOV (x: [r15|QWORD + 668], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  960  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  962  <|@ st <@st|@reference-map: [rdx:0, rbx:0, r11:0, stack:0, stack:40, stack:48]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: stack:40|DWORD[.] rbx|QWORD[.] stack:80|QWORD[.] rdx|QWORD[.] r10|DWORD rax|DWORD r11|DWORD[.] r8|DWORD r9|DWORD - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: stack:40|DWORD[.] rbx|QWORD[.] stack:80|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
locals: stack:32|QWORD[.] - - - rbx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:109, 17, 57, 41] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B107" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  950  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  952  <|@ instruction rcx|DWORD = MOVE input: int[-277523|0xfffffffffffbc3ed] <|@ <|@
      nr  954  <|@ instruction JUMP ~[] destination: B106 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B77" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  682  <|@ instruction r10|DWORD = MOVE input: int[-264979|0xfffffffffffbf4ed] <|@ <|@
      nr  684  <|@ instruction JUMP ~[] destination: B72 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B72" "B76" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  716  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  718  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  720  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  722  <|@ st <@st|@reference-map: [rax:0, rbx:0, stack:48]
live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 44]
stack: rax|QWORD[.] 
locals: stack:32|QWORD[.] - - - rbx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  724  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  726  <|@ instruction MOV [r15|QWORD + 668] y: -265747 size: DWORD <|@ <|@
      nr  728  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  730  <|@ st <@st|@reference-map: [rax:0, rbx:0, stack:0, stack:40, stack:48]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 146]
stack: rax|QWORD[.] 
locals: - - - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: stack:40|DWORD[.] rbx|QWORD[.] stack:80|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
locals: stack:32|QWORD[.] - - - rbx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:146, 17, 57, 41] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B107" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  924  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  926  <|@ instruction rcx|DWORD = MOVE input: int[-275987|0xfffffffffffbc9ed] <|@ <|@
      nr  928  <|@ instruction JUMP ~[] destination: B102 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B107" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  908  <|@ instruction rcx|DWORD = MOVE input: int[-275731|0xfffffffffffbcaed] <|@ <|@
      nr  910  <|@ instruction JUMP ~[] destination: B100 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  982  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  984  <|@ instruction MOV [r15|QWORD + 668] y: -278035 size: DWORD <|@ <|@
      nr  986  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  988  <|@ st <@st|@reference-map: [rbx:0, stack:0, stack:40, stack:48]
live-base-pointers: []
java.nio.Buffer.position(Buffer.java:246) [bci: 25]
locals: stack:80|QWORD[.] rdi|DWORD 
sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
locals: - - - - 
sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
locals: - - - - 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
locals: - rbx|QWORD[.] stack:80|QWORD[.] - r10|DWORD - - r8|DWORD - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: stack:40|DWORD[.] rbx|QWORD[.] stack:80|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
locals: stack:32|QWORD[.] - - - rbx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:25, 18, 4, 482, 17, 57, 41] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B107" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  876  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  878  <|@ instruction rcx|DWORD = MOVE input: int[-274451|0xfffffffffffbcfed] <|@ <|@
      nr  880  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  882  <|@ instruction JUMP ~[] destination: B96 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  612  <|@ instruction stack:80|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  614  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  616  <|@ instruction JUMP ~[] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B107" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  620  <|@ instruction rcx|DWORD = MOVE input: int[-261403|0xfffffffffffc02e5] <|@ <|@
      nr  622  <|@ instruction JUMP ~[] destination: B65 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction r10|DWORD = MOVE input: int[-242963|0xfffffffffffc4aed] <|@ <|@
      nr   24  <|@ instruction JUMP ~[] destination: B1 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  710  <|@ instruction r10|DWORD = MOVE input: int[-265235|0xfffffffffffbf3ed] <|@ <|@
      nr  712  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  714  <|@ instruction JUMP ~[] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  836  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  838  <|@ instruction stack:80|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  840  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  842  <|@ instruction JUMP ~[] destination: B91 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B107" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  844  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  846  <|@ instruction rcx|DWORD = MOVE input: int[-267291|0xfffffffffffbebe5] <|@ <|@
      nr  848  <|@ instruction JUMP ~[] destination: B92 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  768  <|@ instruction stack:80|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  770  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  772  <|@ instruction JUMP ~[] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B107" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  776  <|@ instruction rcx|DWORD = MOVE input: int[-266515|0xfffffffffffbeeed] <|@ <|@
      nr  778  <|@ instruction JUMP ~[] destination: B85 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  852  <|@ instruction stack:80|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  854  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  856  <|@ instruction JUMP ~[] destination: B93 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B107" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  860  <|@ instruction rcx|DWORD = MOVE input: int[-266259|0xfffffffffffbefed] <|@ <|@
      nr  862  <|@ instruction JUMP ~[] destination: B94 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  536  <|@ instruction stack:80|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  538  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  540  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  544  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  548  <|@ instruction r8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1723836758] <|@ <|@
      nr  550  <|@ instruction MOV [r15|QWORD + 668] y: -258843 size: DWORD <|@ <|@
      nr  552  <|@ instruction MOV (x: [r15|QWORD + 680], y: r8|QWORD[.]) size: QWORD <|@ <|@
      nr  554  <|@ st <@st|@reference-map: [rdx:0, rbx:0, r11:0, stack:0, stack:40, stack:48]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: stack:40|DWORD[.] rbx|QWORD[.] stack:80|QWORD[.] rdx|QWORD[.] r10|DWORD rax|DWORD r11|DWORD[.] rcx|DWORD r9|DWORD - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: stack:40|DWORD[.] rbx|QWORD[.] stack:80|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
locals: stack:32|QWORD[.] - - - rbx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:109, 17, 57, 41] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B116" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1004  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1006  <|@ instruction r10|DWORD = MOVE input: int[-306707|0xfffffffffffb51ed] <|@ <|@
      nr 1008  <|@ instruction rbx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1010  <|@ instruction JUMP ~[] destination: B113 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" "B114" "B113" "B112" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1030  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1032  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1034  <|@ st <@st|@reference-map: [rbx:0, rsi:0]
live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22]
locals: rsi|QWORD[.] - - - rbx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:22] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  350  <|@ instruction stack:80|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  352  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  354  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B116" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1022  <|@ instruction r10|DWORD = MOVE input: int[-246803|0xfffffffffffc3bed] <|@ <|@
      nr 1024  <|@ instruction rbx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1026  <|@ instruction JUMP ~[] destination: B115 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B116" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1014  <|@ instruction r10|DWORD = MOVE input: int[-306195|0xfffffffffffb53ed] <|@ <|@
      nr 1016  <|@ instruction rbx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1018  <|@ instruction JUMP ~[] destination: B114 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B107" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  890  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  892  <|@ instruction rcx|DWORD = MOVE input: int[-274707|0xfffffffffffbceed] <|@ <|@
      nr  894  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  896  <|@ instruction JUMP ~[] destination: B98 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  528  <|@ instruction stack:80|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  530  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  532  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B116" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  994  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  996  <|@ instruction r10|DWORD = MOVE input: int[-285715|0xfffffffffffba3ed] <|@ <|@
      nr  998  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1000  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1002  <|@ instruction JUMP ~[] destination: B112 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1038  <|@ instruction r10|DWORD = MOVE input: int[-245011|0xfffffffffffc42ed] <|@ <|@
      nr 1040  <|@ instruction JUMP ~[] destination: B117 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  410  <|@ instruction stack:80|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  412  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  426  <|@ instruction JUMP ~[] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  430  <|@ instruction r10|DWORD = MOVE input: int[-256283|0xfffffffffffc16e5] <|@ <|@
      nr  432  <|@ instruction rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ instruction rdi|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  436  <|@ instruction r8|DWORD[.] = MOVE stack:40|DWORD[.] moveKind: DWORD <|@ <|@
      nr  438  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  824  <|@ instruction stack:80|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  826  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  828  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B107" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  832  <|@ instruction rcx|DWORD = MOVE input: int[-272411|0xfffffffffffbd7e5] <|@ <|@
      nr  834  <|@ instruction JUMP ~[] destination: B90 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ instruction r10|DWORD = MOVE input: int[-243731|0xfffffffffffc47ed] <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B7 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  418  <|@ instruction stack:80|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  420  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  422  <|@ instruction JUMP ~[] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   34  <|@ instruction r10|DWORD = MOVE input: int[-243219|0xfffffffffffc49ed] <|@ <|@
      nr   36  <|@ instruction JUMP ~[] destination: B3 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B81" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  740  <|@ instruction stack:80|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  742  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  744  <|@ instruction JUMP ~[] destination: B80 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B107" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  748  <|@ instruction rcx|DWORD = MOVE input: int[-266003|0xfffffffffffbf0ed] <|@ <|@
      nr  750  <|@ instruction JUMP ~[] destination: B81 -> B107 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: iload_2       
     2: iload_3       
     3: invokestatic  #60         // java.nio.CharBuffer.wrap:(char[], int, int)java.nio.CharBuffer
     6: astore        4
     8: aload_0       
     9: getfield      #26         // haveLeftoverChar:boolean
    12: ifeq          22
    15: aload_0       
    16: aload         4
    18: iconst_0      
    19: invokespecial #56         // flushLeftoverChar:(java.nio.CharBuffer, boolean)void
    22: aload         4
    24: invokevirtual #51         // java.nio.Buffer.hasRemaining:()boolean
    27: ifeq          155
    30: aload_0       
    31: getfield      #32         // encoder:java.nio.charset.CharsetEncoder
    34: aload         4
    36: aload_0       
    37: getfield      #34         // bb:java.nio.ByteBuffer
    40: iconst_0      
    41: invokevirtual #54         // java.nio.charset.CharsetEncoder.encode:(java.nio.CharBuffer, java.nio.ByteBuffer, boolean)java.nio.charset.CoderResult
    44: astore        5
    46: aload         5
    48: invokevirtual #55         // java.nio.charset.CoderResult.isUnderflow:()boolean
    51: ifeq          108
    54: getstatic     #39         // $assertionsDisabled:boolean
    57: ifne          82
    60: aload         4
    62: invokevirtual #61         // java.nio.Buffer.remaining:()int
    65: iconst_1      
    66: if_icmple     82
    69: new           #47         // java.lang.AssertionError
    72: dup           
    73: aload         4
    75: invokevirtual #61         // java.nio.Buffer.remaining:()int
    78: invokespecial #42         // java.lang.AssertionError.<init>:(int)void
    81: athrow        
    82: aload         4
    84: invokevirtual #61         // java.nio.Buffer.remaining:()int
    87: iconst_1      
    88: if_icmpne     155
    91: aload_0       
    92: iconst_1      
    93: putfield      #26         // haveLeftoverChar:boolean
    96: aload_0       
    97: aload         4
    99: invokevirtual #52         // java.nio.CharBuffer.get:()char
   102: putfield      #49         // leftoverChar:char
   105: goto          155
   108: aload         5
   110: invokevirtual #57         // java.nio.charset.CoderResult.isOverflow:()boolean
   113: ifeq          147
   116: getstatic     #39         // $assertionsDisabled:boolean
   119: ifne          140
   122: aload_0       
   123: getfield      #34         // bb:java.nio.ByteBuffer
   126: invokevirtual #38         // java.nio.Buffer.position:()int
   129: ifgt          140
   132: new           #47         // java.lang.AssertionError
   135: dup           
   136: invokespecial #40         // java.lang.AssertionError.<init>:()void
   139: athrow        
   140: aload_0       
   141: invokespecial #58         // writeBytes:()void
   144: goto          22
   147: aload         5
   149: invokevirtual #59         // java.nio.charset.CoderResult.throwException:()void
   152: goto          22
   155: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@46383ced slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction r14|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ st <@st|@reference-map: [rsi:0, r13:0, stack:48]
live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 0]
locals: rsi|QWORD[.] r13|QWORD[.] r14|DWORD r8|DWORD - - 
>@ <|@ instruction r10|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   14  <|@ instruction r11|DWORD = ADD (x: r14|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   16  <|@ instruction CMP (x: r11|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   18  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   30  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   40  <|@ instruction CMP (x: r14|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   52  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr   54  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B117" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction rdx|DWORD = MOVZXB [rsi|QWORD[.] + 23] size: DWORD <|@ <|@
      nr   66  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   72  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   74  <|@ instruction rcx|QWORD = LEA [rdx|QWORD + 48] size: QWORD <|@ <|@
      nr   76  <|@ instruction CMP (x: rcx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   78  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  108  <|@ instruction MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  110  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + 240] instr: 0 <|@ <|@
      nr  112  <|@ instruction rdx|QWORD[*] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  118  <|@ instruction r9|QWORD[.] = MOVE rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction stack:56|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>} <|@ <|@
      nr  124  <|@ instruction rcx|QWORD = MOV [rcx|QWORD + 168] size: QWORD <|@ <|@
      nr  126  <|@ instruction MOV (x: [rdx|QWORD[*]], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  128  <|@ instruction MOV [rdx|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed} <|@ <|@
      nr  130  <|@ instruction rcx|QWORD = MOVE input: long[4294967295|0xffffffff] <|@ <|@
      nr  132  <|@ instruction MOV (x: [rdx|QWORD[*] + 12], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  134  <|@ instruction MOV (x: [rdx|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  136  <|@ instruction MOV (x: [rdx|QWORD[*] + 24], y: r14|DWORD) size: DWORD <|@ <|@
      nr  138  <|@ instruction MOV (x: [rdx|QWORD[*] + 28], y: r11|DWORD) size: DWORD <|@ <|@
      nr  140  <|@ instruction MOV (x: [rdx|QWORD[*] + 32], y: r10|DWORD) size: DWORD <|@ <|@
      nr  142  <|@ instruction MOV (x: [rdx|QWORD[*] + 36], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  144  <|@ instruction MOVB (x: [rdx|QWORD[*] + 40], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  146  <|@ instruction r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1032c7c7 encoding: base: 0 shift: 3 <|@ <|@
      nr  148  <|@ instruction MOV (x: [rdx|QWORD[*] + 44], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr  150  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B114" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182529020635733
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  174  <|@ instruction rbx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  176  <|@ instruction stack:40|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD <|@ <|@
      nr  178  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0, r9:0, r10:0, r11:0, stack:24, stack:40, stack:48]
live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22]
locals: rsi|QWORD[.] - - - r9|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rbx|DWORD[.] * 8] state [bci:22] <|@ <|@
      nr  180  <|@ instruction rdi|DWORD = MOVZXB [r9|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  182  <|@ instruction TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  184  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B113" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182529020635733
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  188  <|@ instruction rdi|DWORD = MOVZXB [r10|DWORD[.] * 8 + 40] size: DWORD <|@ <|@
      nr  190  <|@ instruction TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  192  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182529020635733
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  196  <|@ instruction rdi|DWORD = MOV [rbx|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr  198  <|@ instruction rax|DWORD = MOV [r10|DWORD[.] * 8 + 36] size: DWORD <|@ <|@
      nr  200  <|@ instruction rbp|DWORD = MOV [r10|DWORD[.] * 8 + 28] size: DWORD <|@ <|@
      nr  202  <|@ instruction r13|DWORD = MOV [r10|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr  204  <|@ instruction r14|DWORD = MOV [r9|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  206  <|@ instruction r9|DWORD = ADD (x: rax|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  208  <|@ instruction r13|DWORD = ADD (x: r13|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  210  <|@ instruction stack:36|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  212  <|@ instruction rbp|DWORD = SUB (x: r9|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  214  <|@ instruction stack:44|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  216  <|@ instruction rax|DWORD = ADD (x: r8|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  218  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  220  <|@ instruction stack:60|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  222  <|@ instruction r8|DWORD = SUB (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  224  <|@ instruction CMP rdi|DWORD y: 1 size: DWORD <|@ <|@
      nr  226  <|@ instruction BRANCH trueDestinationProbability: 0.9977260532612405 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607162156848611752
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  230  <|@ instruction MOV [rbx|DWORD[.] * 8 + 20] y: 1 size: DWORD <|@ <|@
      nr  232  <|@ instruction CMP (x: r8|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  234  <|@ instruction BRANCH trueDestinationProbability: 0.5358952359076989 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602991276431535006
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  238  <|@ instruction rdi|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  240  <|@ instruction stack:64|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  242  <|@ instruction stack:68|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  244  <|@ instruction JUMP ~[] destination: B18 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B22" "B18" "B19" 
    successors "B25" "B33" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182529020635733
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  300  <|@ instruction rbp|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  302  <|@ instruction r8|QWORD = MOV rbp|DWORD size: DWORD <|@ <|@
      nr  304  <|@ instruction r14|DWORD = SUB (x: rdi|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  306  <|@ instruction r14|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr  308  <|@ instruction r14|QWORD = DEC r14|QWORD size: QWORD <|@ <|@
      nr  310  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1032c7c7 encoding: base: 0 shift: 3 <|@ <|@
      nr  312  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1032c7c7 encoding: base: 0 shift: 3 <|@ <|@
      nr  314  <|@ instruction CMP (x: rdi|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  320  <|@ instruction stack:72|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  316  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B24" "B26" 
    successors "B34" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182529020635733
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  380  <|@ instruction CMP (x: rdi|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  382  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182529020635733
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  456  <|@ instruction r10|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  458  <|@ instruction rcx|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  460  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B49" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4628357001361009421
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  470  <|@ instruction rbx|DWORD = MOVSX [rdx|QWORD[.] + r10|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  472  <|@ instruction CMP rbx|DWORD y: 128 size: WORD <|@ <|@
      nr  474  <|@ instruction BRANCH trueDestinationProbability: 0.9998116902024854 condition: |<| trueDestination: B45 -> B46 falseDestination: B45 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4628355558195456655
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  478  <|@ instruction MOVB (x: [rcx|DWORD + r11|DWORD[.] * 8 + 16], y: rbx|DWORD) size: BYTE <|@ <|@
      nr  480  <|@ instruction rcx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  482  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  484  <|@ instruction JUMP ~[] destination: B46 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B46" 
    successors "B45" "B49" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4628637040060955957
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  464  <|@ instruction CMP (x: rdi|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  466  <|@ instruction BRANCH trueDestinationProbability: 0.9647476131021091 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B44" "B45" 
    successors "B50" "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182529020635733
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  496  <|@ instruction CMP (x: rax|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  498  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B49 -> B50 falseDestination: B49 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B49" "B51" 
    successors "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182529020635733
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  562  <|@ instruction r8|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  564  <|@ instruction JUMP ~[] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B63" "B88" 
    successors "B60" "B95" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4607879356046553365
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL numbPhis: 2 align: true label: ? <|@ <|@
      nr  568  <|@ instruction CMP (x: rax|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  570  <|@ instruction BRANCH trueDestinationProbability: 0.13401192679415996 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B79" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4594743492025225673
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  574  <|@ instruction rcx|DWORD = MOVSX [rdx|QWORD[.] + r10|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  576  <|@ instruction rbx|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  578  <|@ instruction rcx|DWORD = MOVZX rcx|DWORD size: DWORD <|@ <|@
      nr  580  <|@ instruction rdi|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  582  <|@ instruction rbp|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  584  <|@ instruction CMP rcx|DWORD y: 128 size: DWORD <|@ <|@
      nr  586  <|@ instruction BRANCH trueDestinationProbability: 0.9444529691575878 condition: |<| trueDestination: B60 -> B61 falseDestination: B60 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B66" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4594433791124817836
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  590  <|@ instruction CMP (x: r9|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  592  <|@ instruction BRANCH trueDestinationProbability: 0.9998375304630381 condition: > trueDestination: B61 -> B62 falseDestination: B61 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" "B64" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4594432935597468643
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  596  <|@ instruction CMP (x: rbx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  598  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B62 -> B63 falseDestination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B59" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4594432935597468643
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  602  <|@ instruction MOVB (x: [r8|DWORD + r11|DWORD[.] * 8 + 16], y: rcx|DWORD) size: BYTE <|@ <|@
      nr  604  <|@ instruction r8|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  606  <|@ instruction r10|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  608  <|@ instruction JUMP ~[] destination: B63 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B80" "B82" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4576108836187578827
    begin_IR
      LIR
      nr  732  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  734  <|@ instruction CMP rcx|DWORD y: 2048 size: DWORD <|@ <|@
      nr  736  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B79 -> B80 falseDestination: B79 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B83" "B93" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4576108836187578827
    begin_IR
      LIR
      nr  752  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  754  <|@ instruction CMP rcx|DWORD y: 55296 size: DWORD <|@ <|@
      nr  756  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B82 -> B83 falseDestination: B82 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B84" "B86" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4576108836187578827
    begin_IR
      LIR
      nr  758  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  760  <|@ instruction r13|DWORD = SUB (x: r9|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  762  <|@ instruction CMP r13|DWORD y: 3 size: DWORD <|@ <|@
      nr  764  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B83 -> B84 falseDestination: B83 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B87" "B91" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4576108836187578827
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  782  <|@ instruction CMP (x: rbx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  784  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B86 -> B87 falseDestination: B86 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4576108836187578827
    begin_IR
      LIR
      nr  786  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  788  <|@ instruction r13|DWORD = LEA [r8|DWORD + 2] size: DWORD <|@ <|@
      nr  790  <|@ instruction CMP (x: rbx|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  792  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B87 -> B88 falseDestination: B87 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B59" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4576108836187578827
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  796  <|@ instruction r10|DWORD = SHR rcx|DWORD y: 12 size: DWORD <|@ <|@
      nr  798  <|@ instruction r10|DWORD = OR r10|DWORD y: 224 size: DWORD <|@ <|@
      nr  800  <|@ instruction MOVB (x: [r8|DWORD + r11|DWORD[.] * 8 + 16], y: r10|DWORD) size: BYTE <|@ <|@
      nr  802  <|@ instruction r10|DWORD = SHR rcx|DWORD y: 6 size: DWORD <|@ <|@
      nr  804  <|@ instruction r10|DWORD = AND r10|DWORD y: 63 size: DWORD <|@ <|@
      nr  806  <|@ instruction r10|DWORD = OR r10|DWORD y: 128 size: DWORD <|@ <|@
      nr  808  <|@ instruction MOVB (x: [rbp|DWORD + r11|DWORD[.] * 8 + 16], y: r10|DWORD) size: BYTE <|@ <|@
      nr  810  <|@ instruction rcx|DWORD = AND rcx|DWORD y: 63 size: DWORD <|@ <|@
      nr  812  <|@ instruction rcx|DWORD = OR rcx|DWORD y: 128 size: DWORD <|@ <|@
      nr  814  <|@ instruction MOVB (x: [r13|DWORD + r11|DWORD[.] * 8 + 16], y: rcx|DWORD) size: BYTE <|@ <|@
      nr  816  <|@ instruction r8|DWORD = LEA [r8|DWORD + 3] size: DWORD <|@ <|@
      nr  818  <|@ instruction r10|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  820  <|@ instruction JUMP ~[] destination: B88 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678929393265237
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  386  <|@ instruction r10|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  388  <|@ instruction rbx|QWORD = MOVSXD r13|DWORD size: QWORD <|@ <|@
      nr  390  <|@ instruction rbx|QWORD = ADD (x: rbx|QWORD, y: r14|QWORD) size: QWORD <|@ <|@
      nr  392  <|@ instruction r14|QWORD = MOV r10|DWORD size: DWORD <|@ <|@
      nr  394  <|@ instruction CMP (x: r14|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  396  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B43" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678929393265237
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  400  <|@ instruction CMP (x: r10|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  402  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B35 -> B43 falseDestination: B35 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B55" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678929393265237
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  502  <|@ instruction rbx|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  504  <|@ instruction rdi|DWORD = SUB (x: rax|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  506  <|@ instruction rdi|QWORD = MOVSXD rdi|DWORD size: QWORD <|@ <|@
      nr  508  <|@ instruction rdi|QWORD = DEC rdi|QWORD size: QWORD <|@ <|@
      nr  510  <|@ instruction rbx|QWORD = ADD (x: rbx|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  512  <|@ instruction CMP (x: r8|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  514  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B50 -> B51 falseDestination: B50 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B58" "B55" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678929393265237
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  518  <|@ instruction CMP (x: rbp|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  520  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B51 -> B58 falseDestination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678929393265237
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  322  <|@ instruction r10|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr  324  <|@ instruction r10|QWORD = ADD (x: r10|QWORD, y: r14|QWORD) size: QWORD <|@ <|@
      nr  326  <|@ instruction CMP (x: r8|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  328  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B25 -> B26 falseDestination: B25 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B33" "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678929393265237
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  332  <|@ instruction CMP (x: rbp|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  334  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B26 -> B33 falseDestination: B26 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602013380752059413
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  248  <|@ instruction rdi|DWORD = ADD (x: r8|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  250  <|@ instruction stack:64|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  252  <|@ instruction stack:68|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  254  <|@ instruction JUMP ~[] destination: B19 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B21" "B112" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4567389915042742827
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  258  <|@ instruction stack:68|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  260  <|@ instruction stack:72|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  262  <|@ instruction TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  264  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4567389915042742827
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  268  <|@ instruction rbx|DWORD[.] = MOVE stack:40|DWORD[.] moveKind: DWORD <|@ <|@
      nr  270  <|@ instruction MOV [rbx|DWORD[.] * 8 + 20] y: 1 size: DWORD <|@ <|@
      nr  272  <|@ instruction CMP (x: r8|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  274  <|@ instruction BRANCH trueDestinationProbability: 0.5358952359076989 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4563262748217087376
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  278  <|@ instruction rdi|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  280  <|@ instruction stack:64|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  284  <|@ instruction JUMP ~[] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562509882613657286
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  288  <|@ instruction rsi|DWORD = ADD (x: r13|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  290  <|@ instruction rdi|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  292  <|@ instruction stack:64|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  296  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B70" "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4537629705179309201
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  626  <|@ instruction r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  628  <|@ instruction rdi|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  630  <|@ instruction rsi|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  632  <|@ instruction rdx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  634  <|@ instruction rcx|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  636  <|@ instruction stack:80|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  638  <|@ st <@st|@reference-map: [stack:0, stack:24, stack:40, stack:48]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 143]
locals: - - - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: stack:40|DWORD[.] stack:56|QWORD[.] stack:80|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
locals: stack:32|QWORD[.] - - - stack:56|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD] [] callTarget: HotSpotMethod<UTF_8$Encoder.overflow(CharBuffer, int, ByteBuffer, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:143, 17, 57, 41] <|@ <|@
      nr  640  <|@ st <@st|@reference-map: [rax:0, stack:0, stack:24, stack:40, stack:48]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 146]
stack: rax|QWORD[.] 
locals: - - - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: stack:40|DWORD[.] stack:56|QWORD[.] stack:80|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
locals: stack:32|QWORD[.] - - - stack:56|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD state [bci:146, 17, 57, 41] <|@ <|@
      nr  642  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  644  <|@ instruction BRANCH trueDestinationProbability: 0.9999755802164062 condition: = trueDestination: B66 -> B70 falseDestination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" "B66" 
    successors "B71" "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4537629705179309201
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  664  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  666  <|@ instruction BRANCH trueDestinationProbability: 0.9999755267053062 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4468687617662610068
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  692  <|@ instruction CMP r10|DWORD y: 1 size: DWORD <|@ <|@
      nr  694  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4468687617662610068
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  698  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  700  <|@ st <@st|@reference-map: [stack:24, stack:48]
live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:282) [bci: 141]
locals: stack:32|QWORD[.] - - - stack:56|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<StreamEncoder.writeBytes()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:141] <|@ <|@
      nr  702  <|@ instruction r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  704  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  706  <|@ instruction JUMP ~[] destination: B75 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B75" 
    successors "B14" "B115" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607182529020635733
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  154  <|@ instruction rdx|DWORD[.] = MOV [r9|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  156  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r9:0, stack:24, stack:48]
live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22]
locals: rsi|QWORD[.] - - - r9|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rdx|DWORD[.] * 8] state [bci:22] <|@ <|@
      nr  158  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  160  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r9:0, r10:0, stack:24, stack:48]
live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22]
locals: rsi|QWORD[.] - - - r9|QWORD[.] - 
>@ <|@ instruction r11|DWORD[.] = MOV [r10|DWORD[.] * 8 + 44] size: DWORD state [bci:22] <|@ <|@
      nr  162  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r9:0, r10:0, r11:0, stack:24, stack:48]
live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22]
locals: rsi|QWORD[.] - - - r9|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r11|DWORD[.] * 8] state [bci:22] <|@ <|@
      nr  164  <|@ instruction rcx|DWORD = MOV [r9|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  166  <|@ instruction r8|DWORD = MOV [r9|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  168  <|@ instruction CMP (x: r8|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  170  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B96" "B97" 
    xhandlers
    flags 
    probability 4607182422079717084
    begin_IR
      LIR
      nr  864  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  866  <|@ instruction stack:80|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  868  <|@ instruction r14|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  870  <|@ instruction rsi|DWORD = SUB (x: r10|DWORD, ~y: r14|DWORD) size: DWORD <|@ <|@
      nr  872  <|@ instruction CMP (x: rsi|DWORD, y: stack:60|DWORD) size: DWORD <|@ <|@
      nr  874  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B95 -> B96 falseDestination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B98" "B99" 
    xhandlers
    flags 
    probability 4607182422079717084
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  886  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  888  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B97 -> B98 falseDestination: B97 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B100" "B101" 
    xhandlers
    flags 
    probability 4607182422079717084
    begin_IR
      LIR
      nr  898  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  900  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  902  <|@ instruction CMP (x: rsi|DWORD, y: [rbx|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  904  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B99 -> B100 falseDestination: B99 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B102" "B103" 
    xhandlers
    flags 
    probability 4607182422079717084
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  914  <|@ instruction rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  916  <|@ instruction rcx|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  918  <|@ instruction rdi|DWORD = SUB (x: r8|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  920  <|@ instruction CMP (x: rdi|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  922  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B101 -> B102 falseDestination: B101 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" "B105" 
    xhandlers
    flags 
    probability 4607182422079717084
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  932  <|@ instruction TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  934  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B103 -> B104 falseDestination: B103 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" "B108" 
    xhandlers
    flags 
    probability 4607182422079717084
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  944  <|@ instruction rcx|DWORD[.] = MOVE stack:72|DWORD[.] moveKind: DWORD <|@ <|@
      nr  946  <|@ instruction CMP (x: rdi|DWORD, y: [rcx|DWORD[.] * 8 + 12]) size: DWORD <|@ <|@
      nr  948  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B105 -> B106 falseDestination: B105 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B109" 
    xhandlers
    flags 
    probability 4607182422079717084
    begin_IR
      LIR
      nr  964  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  966  <|@ instruction MOV (x: [rbx|QWORD[.] + 24], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  968  <|@ instruction MOV (x: [rcx|DWORD[.] * 8 + 24], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  970  <|@ instruction rsi|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  972  <|@ instruction JUMP ~[] destination: B108 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B110" "B111" 
    xhandlers
    flags 
    probability 4607182422079717084
    begin_IR
      LIR
      nr  974  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  976  <|@ instruction rsi|DWORD = SUB (x: rsi|DWORD, ~y: [rbx|QWORD[.] + 24]) size: DWORD <|@ <|@
      nr  978  <|@ instruction CMP rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr  980  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B109 -> B110 falseDestination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors 
    xhandlers
    flags 
    probability 4607182422079717084
    begin_IR
      LIR
      nr  990  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  992  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   82  <|@ instruction stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   86  <|@ instruction stack:44|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   90  <|@ instruction rdx|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr   92  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   94  <|@ st <@st|@reference-map: [r13:0, stack:48]
live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 0]
locals: stack:32|QWORD[.] r13|QWORD[.] r14|DWORD stack:44|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   96  <|@ instruction rdx|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   98  <|@ instruction r11|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction r10|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  102  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction JUMP ~[] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B72" "B73" 
    xhandlers
    flags 
    probability 4537629533658711714
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  670  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  672  <|@ instruction r10|DWORD = MOV [rbx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  674  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: [rbx|QWORD[.] + 24]) size: DWORD <|@ <|@
      nr  676  <|@ instruction CMP r10|DWORD y: 1 size: DWORD <|@ <|@
      nr  678  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors 
    xhandlers
    flags 
    probability 4537629533658711714
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  688  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B70" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4468675328631188685
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  652  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  654  <|@ instruction CMP r10|DWORD y: 1 size: DWORD <|@ <|@
      nr  656  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B68 -> B70 falseDestination: B68 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B25" "B26" 
    successors "B31" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  350  <|@ instruction stack:80|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  352  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B41" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  362  <|@ instruction r10|DWORD = MOVE input: int[-250651|0xfffffffffffc2ce5] <|@ <|@
      nr  370  <|@ instruction JUMP ~[] destination: B31 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B31" "B40" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  366  <|@ instruction rdi|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  368  <|@ instruction r8|DWORD[.] = MOVE stack:40|DWORD[.] moveKind: DWORD <|@ <|@
      nr  442  <|@ instruction rbp|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1159422862] <|@ <|@
      nr  444  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  446  <|@ instruction MOV (x: [r15|QWORD + 680], y: rbp|QWORD[.]) size: QWORD <|@ <|@
      nr  448  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0, r8:0, r11:0, stack:48]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 70]
stack: r13|DWORD rdi|DWORD 
locals: r8|DWORD[.] rbx|QWORD[.] rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD rax|DWORD r11|DWORD[.] r13|DWORD r9|DWORD - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: r8|DWORD[.] rbx|QWORD[.] rsi|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
locals: stack:32|QWORD[.] - - - rbx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:70, 17, 57, 41] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   46  <|@ instruction r10|DWORD = MOVE input: int[-243475|0xfffffffffffc48ed] <|@ <|@
      nr   48  <|@ instruction JUMP ~[] destination: B5 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" "B7" "B117" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1044  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1046  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1048  <|@ st <@st|@reference-map: [r13:0, stack:48]
live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 0]
locals: stack:32|QWORD[.] r13|QWORD[.] r14|DWORD r8|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B107" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  936  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  938  <|@ instruction rcx|DWORD = MOVE input: int[-276243|0xfffffffffffbc8ed] <|@ <|@
      nr  940  <|@ instruction JUMP ~[] destination: B104 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B65" "B81" "B94" "B85" "B92" "B90" "B96" "B98" "B100" "B102" "B104" "B106" 
    successors 
    xhandlers
    flags 
    probability 2371145203810566144
    begin_IR
      LIR
      nr  956  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  958  <|@ instruction MOV (x: [r15|QWORD + 668], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  960  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  962  <|@ st <@st|@reference-map: [rdx:0, rbx:0, r11:0, stack:0, stack:40, stack:48]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: stack:40|DWORD[.] rbx|QWORD[.] stack:80|QWORD[.] rdx|QWORD[.] r10|DWORD rax|DWORD r11|DWORD[.] r8|DWORD r9|DWORD - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: stack:40|DWORD[.] rbx|QWORD[.] stack:80|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
locals: stack:32|QWORD[.] - - - rbx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:109, 17, 57, 41] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B107" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  950  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  952  <|@ instruction rcx|DWORD = MOVE input: int[-277523|0xfffffffffffbc3ed] <|@ <|@
      nr  954  <|@ instruction JUMP ~[] destination: B106 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B77" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  682  <|@ instruction r10|DWORD = MOVE input: int[-264979|0xfffffffffffbf4ed] <|@ <|@
      nr  684  <|@ instruction JUMP ~[] destination: B72 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B72" "B76" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  716  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  718  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  720  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  722  <|@ st <@st|@reference-map: [rax:0, rbx:0, stack:48]
live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 44]
stack: rax|QWORD[.] 
locals: stack:32|QWORD[.] - - - rbx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  724  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  726  <|@ instruction MOV [r15|QWORD + 668] y: -265747 size: DWORD <|@ <|@
      nr  728  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  730  <|@ st <@st|@reference-map: [rax:0, rbx:0, stack:0, stack:40, stack:48]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 146]
stack: rax|QWORD[.] 
locals: - - - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: stack:40|DWORD[.] rbx|QWORD[.] stack:80|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
locals: stack:32|QWORD[.] - - - rbx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:146, 17, 57, 41] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B107" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  924  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  926  <|@ instruction rcx|DWORD = MOVE input: int[-275987|0xfffffffffffbc9ed] <|@ <|@
      nr  928  <|@ instruction JUMP ~[] destination: B102 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B107" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  908  <|@ instruction rcx|DWORD = MOVE input: int[-275731|0xfffffffffffbcaed] <|@ <|@
      nr  910  <|@ instruction JUMP ~[] destination: B100 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  982  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  984  <|@ instruction MOV [r15|QWORD + 668] y: -278035 size: DWORD <|@ <|@
      nr  986  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  988  <|@ st <@st|@reference-map: [rbx:0, stack:0, stack:40, stack:48]
live-base-pointers: []
java.nio.Buffer.position(Buffer.java:246) [bci: 25]
locals: stack:80|QWORD[.] rdi|DWORD 
sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
locals: - - - - 
sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
locals: - - - - 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
locals: - rbx|QWORD[.] stack:80|QWORD[.] - r10|DWORD - - r8|DWORD - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: stack:40|DWORD[.] rbx|QWORD[.] stack:80|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
locals: stack:32|QWORD[.] - - - rbx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:25, 18, 4, 482, 17, 57, 41] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B107" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  876  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  878  <|@ instruction rcx|DWORD = MOVE input: int[-274451|0xfffffffffffbcfed] <|@ <|@
      nr  880  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  882  <|@ instruction JUMP ~[] destination: B96 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  612  <|@ instruction stack:80|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  614  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  616  <|@ instruction JUMP ~[] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B107" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  620  <|@ instruction rcx|DWORD = MOVE input: int[-261403|0xfffffffffffc02e5] <|@ <|@
      nr  622  <|@ instruction JUMP ~[] destination: B65 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction r10|DWORD = MOVE input: int[-242963|0xfffffffffffc4aed] <|@ <|@
      nr   24  <|@ instruction JUMP ~[] destination: B1 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  710  <|@ instruction r10|DWORD = MOVE input: int[-265235|0xfffffffffffbf3ed] <|@ <|@
      nr  712  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  714  <|@ instruction JUMP ~[] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  836  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  838  <|@ instruction stack:80|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  840  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  842  <|@ instruction JUMP ~[] destination: B91 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B107" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  844  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  846  <|@ instruction rcx|DWORD = MOVE input: int[-267291|0xfffffffffffbebe5] <|@ <|@
      nr  848  <|@ instruction JUMP ~[] destination: B92 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  768  <|@ instruction stack:80|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  770  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  772  <|@ instruction JUMP ~[] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B107" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  776  <|@ instruction rcx|DWORD = MOVE input: int[-266515|0xfffffffffffbeeed] <|@ <|@
      nr  778  <|@ instruction JUMP ~[] destination: B85 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  852  <|@ instruction stack:80|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  854  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  856  <|@ instruction JUMP ~[] destination: B93 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B107" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  860  <|@ instruction rcx|DWORD = MOVE input: int[-266259|0xfffffffffffbefed] <|@ <|@
      nr  862  <|@ instruction JUMP ~[] destination: B94 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B50" "B51" 
    successors "B56" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  536  <|@ instruction stack:80|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  538  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  544  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  548  <|@ instruction r8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1723836758] <|@ <|@
      nr  550  <|@ instruction MOV [r15|QWORD + 668] y: -258843 size: DWORD <|@ <|@
      nr  552  <|@ instruction MOV (x: [r15|QWORD + 680], y: r8|QWORD[.]) size: QWORD <|@ <|@
      nr  554  <|@ st <@st|@reference-map: [rdx:0, rbx:0, r11:0, stack:0, stack:40, stack:48]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: stack:40|DWORD[.] rbx|QWORD[.] stack:80|QWORD[.] rdx|QWORD[.] r10|DWORD rax|DWORD r11|DWORD[.] rcx|DWORD r9|DWORD - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: stack:40|DWORD[.] rbx|QWORD[.] stack:80|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
locals: stack:32|QWORD[.] - - - rbx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:109, 17, 57, 41] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B116" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1004  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1006  <|@ instruction r10|DWORD = MOVE input: int[-306707|0xfffffffffffb51ed] <|@ <|@
      nr 1008  <|@ instruction rbx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1010  <|@ instruction JUMP ~[] destination: B113 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" "B114" "B113" "B112" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1030  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1032  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1034  <|@ st <@st|@reference-map: [rbx:0, rsi:0]
live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22]
locals: rsi|QWORD[.] - - - rbx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:22] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B116" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1022  <|@ instruction r10|DWORD = MOVE input: int[-246803|0xfffffffffffc3bed] <|@ <|@
      nr 1024  <|@ instruction rbx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1026  <|@ instruction JUMP ~[] destination: B115 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B116" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1014  <|@ instruction r10|DWORD = MOVE input: int[-306195|0xfffffffffffb53ed] <|@ <|@
      nr 1016  <|@ instruction rbx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1018  <|@ instruction JUMP ~[] destination: B114 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B107" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  890  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  892  <|@ instruction rcx|DWORD = MOVE input: int[-274707|0xfffffffffffbceed] <|@ <|@
      nr  894  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  896  <|@ instruction JUMP ~[] destination: B98 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B116" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  994  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  996  <|@ instruction r10|DWORD = MOVE input: int[-285715|0xfffffffffffba3ed] <|@ <|@
      nr  998  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1000  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1002  <|@ instruction JUMP ~[] destination: B112 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1038  <|@ instruction r10|DWORD = MOVE input: int[-245011|0xfffffffffffc42ed] <|@ <|@
      nr 1040  <|@ instruction JUMP ~[] destination: B117 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B34" "B35" 
    successors "B40" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  418  <|@ instruction stack:80|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  420  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  426  <|@ instruction JUMP ~[] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  430  <|@ instruction r10|DWORD = MOVE input: int[-256283|0xfffffffffffc16e5] <|@ <|@
      nr  438  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  824  <|@ instruction stack:80|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  826  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  828  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B107" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  832  <|@ instruction rcx|DWORD = MOVE input: int[-272411|0xfffffffffffbd7e5] <|@ <|@
      nr  834  <|@ instruction JUMP ~[] destination: B90 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ instruction r10|DWORD = MOVE input: int[-243731|0xfffffffffffc47ed] <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B7 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   34  <|@ instruction r10|DWORD = MOVE input: int[-243219|0xfffffffffffc49ed] <|@ <|@
      nr   36  <|@ instruction JUMP ~[] destination: B3 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B81" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  740  <|@ instruction stack:80|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  742  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  744  <|@ instruction JUMP ~[] destination: B80 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B107" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  748  <|@ instruction rcx|DWORD = MOVE input: int[-266003|0xfffffffffffbf0ed] <|@ <|@
      nr  750  <|@ instruction JUMP ~[] destination: B81 -> B107 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: iload_2       
     2: iload_3       
     3: invokestatic  #60         // java.nio.CharBuffer.wrap:(char[], int, int)java.nio.CharBuffer
     6: astore        4
     8: aload_0       
     9: getfield      #26         // haveLeftoverChar:boolean
    12: ifeq          22
    15: aload_0       
    16: aload         4
    18: iconst_0      
    19: invokespecial #56         // flushLeftoverChar:(java.nio.CharBuffer, boolean)void
    22: aload         4
    24: invokevirtual #51         // java.nio.Buffer.hasRemaining:()boolean
    27: ifeq          155
    30: aload_0       
    31: getfield      #32         // encoder:java.nio.charset.CharsetEncoder
    34: aload         4
    36: aload_0       
    37: getfield      #34         // bb:java.nio.ByteBuffer
    40: iconst_0      
    41: invokevirtual #54         // java.nio.charset.CharsetEncoder.encode:(java.nio.CharBuffer, java.nio.ByteBuffer, boolean)java.nio.charset.CoderResult
    44: astore        5
    46: aload         5
    48: invokevirtual #55         // java.nio.charset.CoderResult.isUnderflow:()boolean
    51: ifeq          108
    54: getstatic     #39         // $assertionsDisabled:boolean
    57: ifne          82
    60: aload         4
    62: invokevirtual #61         // java.nio.Buffer.remaining:()int
    65: iconst_1      
    66: if_icmple     82
    69: new           #47         // java.lang.AssertionError
    72: dup           
    73: aload         4
    75: invokevirtual #61         // java.nio.Buffer.remaining:()int
    78: invokespecial #42         // java.lang.AssertionError.<init>:(int)void
    81: athrow        
    82: aload         4
    84: invokevirtual #61         // java.nio.Buffer.remaining:()int
    87: iconst_1      
    88: if_icmpne     155
    91: aload_0       
    92: iconst_1      
    93: putfield      #26         // haveLeftoverChar:boolean
    96: aload_0       
    97: aload         4
    99: invokevirtual #52         // java.nio.CharBuffer.get:()char
   102: putfield      #49         // leftoverChar:char
   105: goto          155
   108: aload         5
   110: invokevirtual #57         // java.nio.charset.CoderResult.isOverflow:()boolean
   113: ifeq          147
   116: getstatic     #39         // $assertionsDisabled:boolean
   119: ifne          140
   122: aload_0       
   123: getfield      #34         // bb:java.nio.ByteBuffer
   126: invokevirtual #38         // java.nio.Buffer.position:()int
   129: ifgt          140
   132: new           #47         // java.lang.AssertionError
   135: dup           
   136: invokespecial #40         // java.lang.AssertionError.<init>:()void
   139: athrow        
   140: aload_0       
   141: invokespecial #58         // writeBytes:()void
   144: goto          22
   147: aload         5
   149: invokevirtual #59         // java.nio.charset.CoderResult.throwException:()void
   152: goto          22
   155: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec4848896c244048897424304c8bea448bf1458b550c458bde4503d8453bda0f8fce0500004585db0f8cd5060000453bf30f8f0b0500004585f60f8cb80600000fb6561785d20f857a060000498b5760488d4a30493b4f700f873004000049894f600f1882f00000004c8bca4c894c241848b9addeaddeaddeadde488b89a800000048890ac74208addeaddeb9ffffffff48894a0c448962144489721844895a1c44895220448962244488622849c1ed0344896a2ce91c0300000f1f8000000000660f1f4400008b5e1c895c2428418504dc410fb6792885ff0f85bb050000420fb63cd52800000085ff0f85820500008b3cdd14000000428b04d524000000428b2cd51c000000468b2cd518000000458b7124448bc84403cd4403e8896c242c418be9412bed89442424418bc04103c64103ce4489442414448bc0442bc183ff010f85f2010000c704dd1400000001000000443bc50f8ec9010000418bf9896c2410448974240c8b2cd50c000000448bc5448bf7452bf54d63f649ffce418bf248c1e60348c1e203413bfd44895424080f8f72010000413bfd0f8f19010000448bd1418bcde9280000000f1f8000000000660f1f440000420fbf5c52106681fb80000f830e00000042885cd910ffc141ffc23bf97fe1413bc20f8f01010000448bc10f1f440000413bc20f8e14020000420fbf4c5210428b1cdd0c0000000fb7c9418bfaffc7418be8ffc581f9800000000f831f000000453bc80f8e61010000413bd80f86b703000043884cd810448bc5448bd7ebb181f9000800000f82cc04000081f900d800000f83e6030000458be9452be84183fd030f8cc3030000413bd80f86a7030000458d6802413bdd0f8671040000448bd141c1ea0c4181cae0000000478854d810448bd141c1ea064183e23f4181ca80000000468854dd1083e13f81c98000000043884cdd10458d4003448bd7e92fffffff468b14dd0c0000004963dd4903de458bf24c3bf30f86ff030000453bd50f87c4feffffe9f10300004963da8bf8412bfa4863ff48ffcf4803df4c3bc30f864d030000413bea0f87dcfeffffe93f0300004c63d14d03d64d3bc20f86f50100003be90f8777feffffe9e8010000418bf84103fd4489442410448974240ce92efeffff448974240c448954240885ff0f85690300008b5c2428c704dd1400000001000000443bc50f8e0c000000418bf9896c2410e9f8fdffff418bf54103f08bfe4489442410e9e6fdffff4c8b4c2418488bfe498bf1418bd2488bcf48893c24e80000000090448b500c4585d20f854f0100004585d20f841c0100004183fa010f8542020000488b7424300f1f440000e800000000904c8b4c2418488b742430418b512c418504d4448b5620468b1cd52c000000438504dc418b4918458b411c443bc10f8fc8fcffffe98b02000048893424448b74240c418bf2412bf63b7424140f8fb701000085f60f8c80020000488b5c24183b730c0f8c820100008b6c242c8b4c2424418bf82bf93bfd0f8f6601000085ff0f8c0c0100008b4c24083b3ccd0c0000000f8c14010000897318893ccd180000008b7424142b731883fe010f8441010000488b6c24404883c448850500000000c5f877c344895c242c4489542428448944242448beaddeaddeaddeaddeba08000000b901000000e80000000090488bd0448b5c242c448b542428488b742430e99bfbffff488b5c2418448b531c442b53184183fa010f8497000000488b6c24404883c448850500000000c5f877c3488b5c24184183fa010f84a2feffffe98a00000048893424488b5c241841bae52cfcff8b7c2410448b44242848bdaddeaddeaddeadde4589979c0200004989afa8020000e8000000009041baed48fcff4589979c0200004d89a7a8020000e80000000090b9edc8fbff41898f9c0200004d89a7a8020000e80000000090b9edc3fbffebe541baedf4fbff4589979c0200004d89a7a8020000e8000000009041c7879c020000edf1fbff4d89a7a8020000e80000000090b9edc9fbffebacb9edcafbffeba541c7879c020000edc1fbff4d89a7a8020000e80000000090b9edcffbff488b5c2418eb8148893424488b5c2418b9e502fcffe96effffff41baed4afcffe94affffff41baedf3fbff488b5c2418e974ffffff48893424488b5c2418b9e5ebfbffe940ffffff48893424488b5c2418b9edeefbffe92dffffff48893424488b5c2418b9edeffbffe91affffff48893424488b5c241849b8addeaddeaddeadde41c7879c020000e50cfcff4d8987a8020000e8000000009041baed51fbff498bd94589979c0200004d89a7a8020000e8000000009041baed3bfcff498bd9ebe141baed53fbff498bd9ebd6b9edcefbff488b5c2418e9adfeffff41baeda3fbff488b5c2418488b742430ebb541baed42fcffe977feffff48893424488b5c241841bae516fcffe936feffff48893424488b5c2418b9e5d7fbffe969feffff41baed47fcffe945feffff41baed49fcffe93afeffff48893424488b5c2418b9edf0fbffe940feffffe80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@46383ced slotKind: QWORD  <||@
  Comment 48 6 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 56 10 r14|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 59 12 r10|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD state [bci:0]  <||@
  Comment 59 [rsi:0, r13:0, stack:48]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3         |4  |5 
     locals:  |rsi|QWORD[.]  |r13|QWORD[.]  |r14|DWORD  |r8|DWORD  |-  |-   <||@
  Comment 59 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 63 14 r11|DWORD = ADD (x: r14|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 69 16 CMP (x: r11|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 72 18 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 78 block B2 null  <||@
  Comment 78 26 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 78 28 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 81 30 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4  <||@
  Comment 87 block B4 null  <||@
  Comment 87 38 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 87 40 CMP (x: r14|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 90 42 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6  <||@
  Comment 96 block B6 null  <||@
  Comment 96 50 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 96 52 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 99 54 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8  <||@
  Comment 105 block B8 null  <||@
  Comment 105 62 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 105 64 rdx|DWORD = MOVZXB [rsi|QWORD[.] + 23] size: DWORD  <||@
  Comment 109 66 TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 111 68 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B117  <||@
  Comment 117 block B9 null  <||@
  Comment 117 70 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 117 72 rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 121 74 rcx|QWORD = LEA [rdx|QWORD + 48] size: QWORD  <||@
  Comment 125 76 CMP (x: rcx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 129 78 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11  <||@
  Comment 135 block B11 null  <||@
  Comment 135 106 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 135 108 MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD  <||@
  Comment 139 110 AMD64PREFETCH ~[rdx|QWORD + 240] instr: 0  <||@
  Comment 146 112 rdx|QWORD[*] = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 146 114 JUMP ~[] destination: B11 -> B12  <||@
  Comment 146 block B12 null  <||@
  Comment 146 116 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 146 118 r9|QWORD[.] = MOVE rdx|QWORD[*] moveKind: QWORD  <||@
  Comment 149 120 stack:56|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 154 122 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>}  <||@
  Comment 154 {meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>}}  <||@
  Comment 164 124 rcx|QWORD = MOV [rcx|QWORD + 168] size: QWORD  <||@
  Comment 171 126 MOV (x: [rdx|QWORD[*]], y: rcx|QWORD) size: QWORD  <||@
  Comment 174 128 MOV [rdx|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed}  <||@
  Comment 174 {meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed}}  <||@
  Comment 181 130 rcx|QWORD = MOVE input: long[4294967295|0xffffffff]  <||@
  Comment 186 132 MOV (x: [rdx|QWORD[*] + 12], y: rcx|QWORD) size: QWORD  <||@
  Comment 190 134 MOV (x: [rdx|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 194 136 MOV (x: [rdx|QWORD[*] + 24], y: r14|DWORD) size: DWORD  <||@
  Comment 198 138 MOV (x: [rdx|QWORD[*] + 28], y: r11|DWORD) size: DWORD  <||@
  Comment 202 140 MOV (x: [rdx|QWORD[*] + 32], y: r10|DWORD) size: DWORD  <||@
  Comment 206 142 MOV (x: [rdx|QWORD[*] + 36], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 210 144 MOVB (x: [rdx|QWORD[*] + 40], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 214 146 r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1032c7c7 encoding: base: 0 shift: 3  <||@
  Comment 218 148 MOV (x: [rdx|QWORD[*] + 44], y: r13|DWORD[.]) size: DWORD  <||@
  Comment 222 150 JUMP ~[] destination: B12 -> B13  <||@
  Comment 227 block B14 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 227 172 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 240 174 rbx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 243 176 stack:40|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD  <||@
  Comment 247 178 NULLCHECK [r12|QWORD[*] + rbx|DWORD[.] * 8] state [bci:22]  <||@
  Comment 247 [rdx:0, rbx:0, rsi:0, r9:0, r10:0, r11:0, stack:24, stack:40, stack:48]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4            |5 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |r9|QWORD[.]  |-   <||@
  Comment 247 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 251 180 rdi|DWORD = MOVZXB [r9|QWORD[.] + 40] size: DWORD  <||@
  Comment 256 182 TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 258 184 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B114  <||@
  Comment 264 block B15 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 264 186 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 264 188 rdi|DWORD = MOVZXB [r10|DWORD[.] * 8 + 40] size: DWORD  <||@
  Comment 273 190 TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 275 192 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B113  <||@
  Comment 281 block B16 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 281 194 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 281 196 rdi|DWORD = MOV [rbx|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 288 198 rax|DWORD = MOV [r10|DWORD[.] * 8 + 36] size: DWORD  <||@
  Comment 296 200 rbp|DWORD = MOV [r10|DWORD[.] * 8 + 28] size: DWORD  <||@
  Comment 304 202 r13|DWORD = MOV [r10|DWORD[.] * 8 + 24] size: DWORD  <||@
  Comment 312 204 r14|DWORD = MOV [r9|QWORD[.] + 36] size: DWORD  <||@
  Comment 316 206 r9|DWORD = ADD (x: rax|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 322 208 r13|DWORD = ADD (x: r13|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 325 210 stack:36|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 329 212 rbp|DWORD = SUB (x: r9|DWORD, ~y: r13|DWORD) size: DWORD  <||@
  Comment 335 214 stack:44|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 339 216 rax|DWORD = ADD (x: r8|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 345 218 rcx|DWORD = ADD (x: rcx|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 348 220 stack:60|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 353 222 r8|DWORD = SUB (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 359 224 CMP rdi|DWORD y: 1 size: DWORD  <||@
  Comment 362 226 BRANCH trueDestinationProbability: 0.9977260532612405 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B20  <||@
  Comment 368 block B17 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 368 228 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 368 230 MOV [rbx|DWORD[.] * 8 + 20] y: 1 size: DWORD  <||@
  Comment 379 232 CMP (x: r8|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 382 234 BRANCH trueDestinationProbability: 0.5358952359076989 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19  <||@
  Comment 388 block B18 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 388 236 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 388 238 rdi|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 391 240 stack:64|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 395 242 stack:68|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 400 244 JUMP ~[] destination: B18 -> B24  <||@
  Comment 400 block B24 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 400 298 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 400 300 rbp|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 407 302 r8|QWORD = MOV rbp|DWORD size: DWORD  <||@
  Comment 410 304 r14|DWORD = SUB (x: rdi|DWORD, ~y: r13|DWORD) size: DWORD  <||@
  Comment 416 306 r14|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 419 308 r14|QWORD = DEC r14|QWORD size: QWORD  <||@
  Comment 422 310 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1032c7c7 encoding: base: 0 shift: 3  <||@
  Comment 429 312 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1032c7c7 encoding: base: 0 shift: 3  <||@
  Comment 433 314 CMP (x: rdi|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 436 320 stack:72|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 441 316 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B33  <||@
  Comment 447 block B33 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 447 378 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 447 380 CMP (x: rdi|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 450 382 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B43  <||@
  Comment 456 block B43 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 456 454 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 456 456 r10|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 459 458 rcx|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 462 460 JUMP ~[] destination: B43 -> B44  <||@
  Comment 467 block B45 loop 1 depth 2 outer 0 header:283|LoopBegin  <||@
  Comment 467 468 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 480 470 rbx|DWORD = MOVSX [rdx|QWORD[.] + r10|DWORD * 2 + 16] size: DWORD  <||@
  Comment 486 472 CMP rbx|DWORD y: 128 size: WORD  <||@
  Comment 491 474 BRANCH trueDestinationProbability: 0.9998116902024854 condition: |<| trueDestination: B45 -> B46 falseDestination: B45 -> B49  <||@
  Comment 497 block B46 loop 1 depth 2 outer 0 header:283|LoopBegin  <||@
  Comment 497 476 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 497 478 MOVB (x: [rcx|DWORD + r11|DWORD[.] * 8 + 16], y: rbx|DWORD) size: BYTE  <||@
  Comment 502 480 rcx|DWORD = INC rcx|DWORD size: DWORD  <||@
  Comment 504 482 r10|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 507 484 JUMP ~[] destination: B46 -> B44  <||@
  Comment 507 block B44 loop 1 depth 2 outer 0 header:283|LoopBegin  <||@
  Comment 507 462 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 507 464 CMP (x: rdi|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 509 466 BRANCH trueDestinationProbability: 0.9647476131021091 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B49  <||@
  Comment 511 block B49 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 511 494 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 511 496 CMP (x: rax|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 514 498 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B49 -> B50 falseDestination: B49 -> B58  <||@
  Comment 520 block B58 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 520 560 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 520 562 r8|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 523 564 JUMP ~[] destination: B58 -> B59  <||@
  Comment 523 block B59 loop 2 depth 2 outer 0 header:318|LoopBegin  <||@
  Comment 523 566 [] = LABEL numbPhis: 2 align: true label: ?  <||@
  Comment 528 568 CMP (x: rax|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 531 570 BRANCH trueDestinationProbability: 0.13401192679415996 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B95  <||@
  Comment 537 block B60 loop 2 depth 2 outer 0 header:318|LoopBegin  <||@
  Comment 537 572 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 537 574 rcx|DWORD = MOVSX [rdx|QWORD[.] + r10|DWORD * 2 + 16] size: DWORD  <||@
  Comment 543 576 rbx|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 551 578 rcx|DWORD = MOVZX rcx|DWORD size: DWORD  <||@
  Comment 554 580 rdi|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 559 582 rbp|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 564 584 CMP rcx|DWORD y: 128 size: DWORD  <||@
  Comment 570 586 BRANCH trueDestinationProbability: 0.9444529691575878 condition: |<| trueDestination: B60 -> B61 falseDestination: B60 -> B79  <||@
  Comment 576 block B61 loop 2 depth 2 outer 0 header:318|LoopBegin  <||@
  Comment 576 588 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 576 590 CMP (x: r9|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 579 592 BRANCH trueDestinationProbability: 0.9998375304630381 condition: > trueDestination: B61 -> B62 falseDestination: B61 -> B66  <||@
  Comment 585 block B62 loop 2 depth 2 outer 0 header:318|LoopBegin  <||@
  Comment 585 594 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 585 596 CMP (x: rbx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 588 598 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B62 -> B63 falseDestination: B62 -> B64  <||@
  Comment 594 block B63 loop 2 depth 2 outer 0 header:318|LoopBegin  <||@
  Comment 594 600 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 594 602 MOVB (x: [r8|DWORD + r11|DWORD[.] * 8 + 16], y: rcx|DWORD) size: BYTE  <||@
  Comment 599 604 r8|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 602 606 r10|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 605 608 JUMP ~[] destination: B63 -> B59  <||@
  Comment 607 block B79 loop 2 depth 2 outer 0 header:318|LoopBegin  <||@
  Comment 607 732 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 607 734 CMP rcx|DWORD y: 2048 size: DWORD  <||@
  Comment 613 736 BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B79 -> B80 falseDestination: B79 -> B82  <||@
  Comment 619 block B82 loop 2 depth 2 outer 0 header:318|LoopBegin  <||@
  Comment 619 752 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 619 754 CMP rcx|DWORD y: 55296 size: DWORD  <||@
  Comment 625 756 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B82 -> B83 falseDestination: B82 -> B93  <||@
  Comment 631 block B83 loop 2 depth 2 outer 0 header:318|LoopBegin  <||@
  Comment 631 758 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 631 760 r13|DWORD = SUB (x: r9|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 637 762 CMP r13|DWORD y: 3 size: DWORD  <||@
  Comment 641 764 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B83 -> B84 falseDestination: B83 -> B86  <||@
  Comment 647 block B86 loop 2 depth 2 outer 0 header:318|LoopBegin  <||@
  Comment 647 780 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 647 782 CMP (x: rbx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 650 784 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B86 -> B87 falseDestination: B86 -> B91  <||@
  Comment 656 block B87 loop 2 depth 2 outer 0 header:318|LoopBegin  <||@
  Comment 656 786 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 656 788 r13|DWORD = LEA [r8|DWORD + 2] size: DWORD  <||@
  Comment 660 790 CMP (x: rbx|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 663 792 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B87 -> B88 falseDestination: B87 -> B89  <||@
  Comment 669 block B88 loop 2 depth 2 outer 0 header:318|LoopBegin  <||@
  Comment 669 794 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 669 796 r10|DWORD = SHR rcx|DWORD y: 12 size: DWORD  <||@
  Comment 676 798 r10|DWORD = OR r10|DWORD y: 224 size: DWORD  <||@
  Comment 683 800 MOVB (x: [r8|DWORD + r11|DWORD[.] * 8 + 16], y: r10|DWORD) size: BYTE  <||@
  Comment 688 802 r10|DWORD = SHR rcx|DWORD y: 6 size: DWORD  <||@
  Comment 695 804 r10|DWORD = AND r10|DWORD y: 63 size: DWORD  <||@
  Comment 699 806 r10|DWORD = OR r10|DWORD y: 128 size: DWORD  <||@
  Comment 706 808 MOVB (x: [rbp|DWORD + r11|DWORD[.] * 8 + 16], y: r10|DWORD) size: BYTE  <||@
  Comment 711 810 rcx|DWORD = AND rcx|DWORD y: 63 size: DWORD  <||@
  Comment 714 812 rcx|DWORD = OR rcx|DWORD y: 128 size: DWORD  <||@
  Comment 720 814 MOVB (x: [r13|DWORD + r11|DWORD[.] * 8 + 16], y: rcx|DWORD) size: BYTE  <||@
  Comment 725 816 r8|DWORD = LEA [r8|DWORD + 3] size: DWORD  <||@
  Comment 729 818 r10|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 732 820 JUMP ~[] destination: B88 -> B59  <||@
  Comment 737 block B34 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 737 384 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 737 386 r10|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 745 388 rbx|QWORD = MOVSXD r13|DWORD size: QWORD  <||@
  Comment 748 390 rbx|QWORD = ADD (x: rbx|QWORD, y: r14|QWORD) size: QWORD  <||@
  Comment 751 392 r14|QWORD = MOV r10|DWORD size: DWORD  <||@
  Comment 754 394 CMP (x: r14|QWORD, y: rbx|QWORD) size: QWORD  <||@
  Comment 757 396 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B39  <||@
  Comment 763 block B35 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 763 398 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 763 400 CMP (x: r10|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 766 402 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B35 -> B43 falseDestination: B35 -> B39  <||@
  Comment 777 block B50 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 777 500 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 777 502 rbx|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 780 504 rdi|DWORD = SUB (x: rax|DWORD, ~y: r10|DWORD) size: DWORD  <||@
  Comment 785 506 rdi|QWORD = MOVSXD rdi|DWORD size: QWORD  <||@
  Comment 788 508 rdi|QWORD = DEC rdi|QWORD size: QWORD  <||@
  Comment 791 510 rbx|QWORD = ADD (x: rbx|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 794 512 CMP (x: r8|QWORD, y: rbx|QWORD) size: QWORD  <||@
  Comment 797 514 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B50 -> B51 falseDestination: B50 -> B55  <||@
  Comment 803 block B51 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 803 516 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 803 518 CMP (x: rbp|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 806 520 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B51 -> B58 falseDestination: B51 -> B55  <||@
  Comment 817 block B25 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 817 318 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 817 322 r10|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 820 324 r10|QWORD = ADD (x: r10|QWORD, y: r14|QWORD) size: QWORD  <||@
  Comment 823 326 CMP (x: r8|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 826 328 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B25 -> B26 falseDestination: B25 -> B30  <||@
  Comment 832 block B26 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 832 330 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 832 332 CMP (x: rbp|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 834 334 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B26 -> B33 falseDestination: B26 -> B30  <||@
  Comment 845 block B19 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 845 246 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 845 248 rdi|DWORD = ADD (x: r8|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 851 250 stack:64|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 856 252 stack:68|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 861 254 JUMP ~[] destination: B19 -> B24  <||@
  Comment 866 block B20 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 866 256 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 866 258 stack:68|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 871 260 stack:72|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 876 262 TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 878 264 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B112  <||@
  Comment 884 block B21 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 884 266 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 884 268 rbx|DWORD[.] = MOVE stack:40|DWORD[.] moveKind: DWORD  <||@
  Comment 888 270 MOV [rbx|DWORD[.] * 8 + 20] y: 1 size: DWORD  <||@
  Comment 899 272 CMP (x: r8|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 902 274 BRANCH trueDestinationProbability: 0.5358952359076989 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23  <||@
  Comment 908 block B22 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 908 276 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 908 278 rdi|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 911 280 stack:64|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 915 284 JUMP ~[] destination: B22 -> B24  <||@
  Comment 920 block B23 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 920 286 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 920 288 rsi|DWORD = ADD (x: r13|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 926 290 rdi|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 928 292 stack:64|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 933 296 JUMP ~[] destination: B23 -> B24  <||@
  Comment 938 block B66 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 938 624 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 938 626 r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 943 628 rdi|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 946 630 rsi|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 949 632 rdx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 952 634 rcx|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 955 636 stack:80|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 959 638 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD] [] callTarget: HotSpotMethod<UTF_8$Encoder.overflow(CharBuffer, int, ByteBuffer, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:143, 17, 57, 41]  <||@
  Comment 959 {HotSpotMethod<UTF_8$Encoder.overflow(CharBuffer, int, ByteBuffer, int)>}  <||@
  Comment 959 8  <||@
  Comment 964 [stack:0, stack:24, stack:40, stack:48]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 143, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8  |9  |10  |11 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-  
  at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3           |4  |5  |6 
     locals:  |stack:40|DWORD[.]  |stack:56|QWORD[.]  |stack:80|QWORD[.]  |int[0|0x0]  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4                  |5 
     locals:  |stack:32|QWORD[.]  |-  |-  |-  |stack:56|QWORD[.]  |-   <||@
  Comment 965 640 r10|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD state [bci:146, 17, 57, 41]  <||@
  Comment 965 [rax:0, stack:0, stack:24, stack:40, stack:48]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 146, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6  |7  |8  |9  |10  |11 
     locals:  |-             |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-  
     stack:   |rax|QWORD[.]  |   |   |   |   |   |   |   |   |   |    |   
  at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3           |4  |5  |6 
     locals:  |stack:40|DWORD[.]  |stack:56|QWORD[.]  |stack:80|QWORD[.]  |int[0|0x0]  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4                  |5 
     locals:  |stack:32|QWORD[.]  |-  |-  |-  |stack:56|QWORD[.]  |-   <||@
  Comment 965 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 969 642 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 972 644 BRANCH trueDestinationProbability: 0.9999755802164062 condition: = trueDestination: B66 -> B70 falseDestination: B66 -> B68  <||@
  Comment 978 block B70 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 978 662 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 978 664 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 981 666 BRANCH trueDestinationProbability: 0.9999755267053062 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B74  <||@
  Comment 987 block B74 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 987 690 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 987 692 CMP r10|DWORD y: 1 size: DWORD  <||@
  Comment 991 694 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76  <||@
  Comment 997 block B75 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 997 696 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 997 698 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1002 700 - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<StreamEncoder.writeBytes()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:141]  <||@
  Comment 1002 9  <||@
  Comment 1007 {HotSpotMethod<StreamEncoder.writeBytes()>}  <||@
  Comment 1012 [stack:24, stack:48]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:282) [bci: 141, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4                  |5 
     locals:  |stack:32|QWORD[.]  |-  |-  |-  |stack:56|QWORD[.]  |-   <||@
  Comment 1013 702 r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1018 704 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1023 706 JUMP ~[] destination: B75 -> B13  <||@
  Comment 1023 block B13 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 1023 152 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1023 154 rdx|DWORD[.] = MOV [r9|QWORD[.] + 44] size: DWORD  <||@
  Comment 1027 156 NULLCHECK [r12|QWORD[*] + rdx|DWORD[.] * 8] state [bci:22]  <||@
  Comment 1027 [rdx:0, rsi:0, r9:0, stack:24, stack:48]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4            |5 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |r9|QWORD[.]  |-   <||@
  Comment 1027 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1031 158 r10|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD  <||@
  Comment 1035 160 r11|DWORD[.] = MOV [r10|DWORD[.] * 8 + 44] size: DWORD state [bci:22]  <||@
  Comment 1035 [rdx:0, rsi:0, r9:0, r10:0, stack:24, stack:48]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4            |5 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |r9|QWORD[.]  |-   <||@
  Comment 1035 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1043 162 NULLCHECK [r12|QWORD[*] + r11|DWORD[.] * 8] state [bci:22]  <||@
  Comment 1043 [rdx:0, rsi:0, r9:0, r10:0, r11:0, stack:24, stack:48]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4            |5 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |r9|QWORD[.]  |-   <||@
  Comment 1043 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1047 164 rcx|DWORD = MOV [r9|QWORD[.] + 24] size: DWORD  <||@
  Comment 1051 166 r8|DWORD = MOV [r9|QWORD[.] + 28] size: DWORD  <||@
  Comment 1055 168 CMP (x: r8|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 1058 170 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B115  <||@
  Comment 1069 block B95 null  <||@
  Comment 1069 864 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1069 866 stack:80|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1073 868 r14|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 1078 870 rsi|DWORD = SUB (x: r10|DWORD, ~y: r14|DWORD) size: DWORD  <||@
  Comment 1084 872 CMP (x: rsi|DWORD, y: stack:60|DWORD) size: DWORD  <||@
  Comment 1088 874 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B95 -> B96 falseDestination: B95 -> B97  <||@
  Comment 1094 block B97 null  <||@
  Comment 1094 884 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1094 886 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 1096 888 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B97 -> B98 falseDestination: B97 -> B99  <||@
  Comment 1102 block B99 null  <||@
  Comment 1102 898 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1102 900 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1107 902 CMP (x: rsi|DWORD, y: [rbx|QWORD[.] + 12]) size: DWORD  <||@
  Comment 1110 904 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B99 -> B100 falseDestination: B99 -> B101  <||@
  Comment 1116 block B101 null  <||@
  Comment 1116 912 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1116 914 rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1120 916 rcx|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1124 918 rdi|DWORD = SUB (x: r8|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 1129 920 CMP (x: rdi|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 1131 922 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B101 -> B102 falseDestination: B101 -> B103  <||@
  Comment 1137 block B103 null  <||@
  Comment 1137 930 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1137 932 TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 1139 934 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B103 -> B104 falseDestination: B103 -> B105  <||@
  Comment 1145 block B105 null  <||@
  Comment 1145 942 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1145 944 rcx|DWORD[.] = MOVE stack:72|DWORD[.] moveKind: DWORD  <||@
  Comment 1149 946 CMP (x: rdi|DWORD, y: [rcx|DWORD[.] * 8 + 12]) size: DWORD  <||@
  Comment 1156 948 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B105 -> B106 falseDestination: B105 -> B108  <||@
  Comment 1162 block B108 null  <||@
  Comment 1162 964 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1162 966 MOV (x: [rbx|QWORD[.] + 24], y: rsi|DWORD) size: DWORD  <||@
  Comment 1165 968 MOV (x: [rcx|DWORD[.] * 8 + 24], y: rdi|DWORD) size: DWORD  <||@
  Comment 1172 970 rsi|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 1176 972 JUMP ~[] destination: B108 -> B109  <||@
  Comment 1176 block B109 null  <||@
  Comment 1176 974 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1176 976 rsi|DWORD = SUB (x: rsi|DWORD, ~y: [rbx|QWORD[.] + 24]) size: DWORD  <||@
  Comment 1179 978 CMP rsi|DWORD y: 1 size: DWORD  <||@
  Comment 1182 980 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B109 -> B110 falseDestination: B109 -> B111  <||@
  Comment 1188 block B111 null  <||@
  Comment 1188 990 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1188 992 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1197 12  <||@
  Comment 1207 block B10 null  <||@
  Comment 1207 80 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1207 82 stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1212 84 stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1217 86 stack:44|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1222 88 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1222 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1232 90 rdx|DWORD = MOVE input: int[8|0x8]  <||@
  Comment 1237 92 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1242 94 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 1242 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1247 [r13:0, stack:48]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1             |2          |3               |4  |5 
     locals:  |stack:32|QWORD[.]  |r13|QWORD[.]  |r14|DWORD  |stack:44|DWORD  |-  |-   <||@
  Comment 1248 96 rdx|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1251 98 r11|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1256 100 r10|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1261 102 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1266 104 JUMP ~[] destination: B10 -> B12  <||@
  Comment 1271 block B71 null  <||@
  Comment 1271 668 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1271 670 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1276 672 r10|DWORD = MOV [rbx|QWORD[.] + 28] size: DWORD  <||@
  Comment 1280 674 r10|DWORD = SUB (x: r10|DWORD, ~y: [rbx|QWORD[.] + 24]) size: DWORD  <||@
  Comment 1284 676 CMP r10|DWORD y: 1 size: DWORD  <||@
  Comment 1288 678 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73  <||@
  Comment 1294 block B73 null  <||@
  Comment 1294 686 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1294 688 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1303 12  <||@
  Comment 1313 block B68 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 1313 650 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1313 652 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1318 654 CMP r10|DWORD y: 1 size: DWORD  <||@
  Comment 1322 656 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B68 -> B70 falseDestination: B68 -> B78  <||@
  Comment 1333 block B30 null  <||@
  Comment 1333 356 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1333 350 stack:80|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1337 352 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1342 358 JUMP ~[] destination: B30 -> B31  <||@
  Comment 1342 block B31 null  <||@
  Comment 1342 360 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1342 362 r10|DWORD = MOVE input: int[-250651|0xfffffffffffc2ce5]  <||@
  Comment 1348 370 JUMP ~[] destination: B31 -> B41  <||@
  Comment 1348 block B41 null  <||@
  Comment 1348 440 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1348 366 rdi|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 1352 368 r8|DWORD[.] = MOVE stack:40|DWORD[.] moveKind: DWORD  <||@
  Comment 1357 442 rbp|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1159422862]  <||@
  Comment 1357 {Object[d.a@1159422862]}  <||@
  Comment 1367 444 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1374 446 MOV (x: [r15|QWORD + 680], y: rbp|QWORD[.]) size: QWORD  <||@
  Comment 1381 448 DEOPT info [bci:70, 17, 57, 41]  <||@
  Comment 1381 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1386 [rdx:0, rbx:0, rsi:0, r8:0, r11:0, stack:48]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 70, duringCall: false, rethrow: false]
              |0            |1             |2             |3             |4          |5          |6             |7          |8         |9  |10  |11 
     locals:  |r8|DWORD[.]  |rbx|QWORD[.]  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |rax|DWORD  |r11|DWORD[.]  |r13|DWORD  |r9|DWORD  |-  |-   |-  
     stack:   |r13|DWORD    |rdi|DWORD     |              |              |           |           |              |           |          |   |    |   
  at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57, duringCall: true, rethrow: false]
              |0            |1             |2             |3           |4  |5  |6 
     locals:  |r8|DWORD[.]  |rbx|QWORD[.]  |rsi|QWORD[.]  |int[0|0x0]  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4             |5 
     locals:  |stack:32|QWORD[.]  |-  |-  |-  |rbx|QWORD[.]  |-   <||@
  Comment 1387 block B5 null  <||@
  Comment 1387 44 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1387 46 r10|DWORD = MOVE input: int[-243475|0xfffffffffffc48ed]  <||@
  Comment 1393 48 JUMP ~[] destination: B5 -> B118  <||@
  Comment 1393 block B118 null  <||@
  Comment 1393 1042 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1393 1044 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1400 1046 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1407 1048 DEOPT info [bci:0]  <||@
  Comment 1407 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1412 [r13:0, stack:48]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1             |2          |3         |4  |5 
     locals:  |stack:32|QWORD[.]  |r13|QWORD[.]  |r14|DWORD  |r8|DWORD  |-  |-   <||@
  Comment 1413 block B104 null  <||@
  Comment 1413 936 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1413 938 rcx|DWORD = MOVE input: int[-276243|0xfffffffffffbc8ed]  <||@
  Comment 1418 940 JUMP ~[] destination: B104 -> B107  <||@
  Comment 1418 block B107 null  <||@
  Comment 1418 956 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1418 958 MOV (x: [r15|QWORD + 668], y: rcx|DWORD) size: DWORD  <||@
  Comment 1425 960 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1432 962 DEOPT info [bci:109, 17, 57, 41]  <||@
  Comment 1432 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1437 [rdx:0, rbx:0, r11:0, stack:0, stack:40, stack:48]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109, duringCall: false, rethrow: false]
              |0                  |1             |2                  |3             |4          |5          |6             |7         |8         |9  |10  |11 
     locals:  |stack:40|DWORD[.]  |rbx|QWORD[.]  |stack:80|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD  |rax|DWORD  |r11|DWORD[.]  |r8|DWORD  |r9|DWORD  |-  |-   |-  
  at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57, duringCall: true, rethrow: false]
              |0                  |1             |2                  |3           |4  |5  |6 
     locals:  |stack:40|DWORD[.]  |rbx|QWORD[.]  |stack:80|QWORD[.]  |int[0|0x0]  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4             |5 
     locals:  |stack:32|QWORD[.]  |-  |-  |-  |rbx|QWORD[.]  |-   <||@
  Comment 1438 block B106 null  <||@
  Comment 1438 950 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1438 952 rcx|DWORD = MOVE input: int[-277523|0xfffffffffffbc3ed]  <||@
  Comment 1443 954 JUMP ~[] destination: B106 -> B107  <||@
  Comment 1445 block B72 null  <||@
  Comment 1445 680 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1445 682 r10|DWORD = MOVE input: int[-264979|0xfffffffffffbf4ed]  <||@
  Comment 1451 684 JUMP ~[] destination: B72 -> B77  <||@
  Comment 1451 block B77 null  <||@
  Comment 1451 716 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1451 718 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1458 720 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1465 722 DEOPT info [bci:44]  <||@
  Comment 1465 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1470 [rax:0, rbx:0, stack:48]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 44, duringCall: false, rethrow: false]
              |0                  |1  |2  |3  |4             |5 
     locals:  |stack:32|QWORD[.]  |-  |-  |-  |rbx|QWORD[.]  |- 
     stack:   |rax|QWORD[.]       |   |   |   |              |    <||@
  Comment 1471 block B78 null  <||@
  Comment 1471 724 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1471 726 MOV [r15|QWORD + 668] y: -265747 size: DWORD  <||@
  Comment 1482 728 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1489 730 DEOPT info [bci:146, 17, 57, 41]  <||@
  Comment 1489 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1494 [rax:0, rbx:0, stack:0, stack:40, stack:48]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 146, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6  |7  |8  |9  |10  |11 
     locals:  |-             |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-  
     stack:   |rax|QWORD[.]  |   |   |   |   |   |   |   |   |   |    |   
  at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57, duringCall: true, rethrow: false]
              |0                  |1             |2                  |3           |4  |5  |6 
     locals:  |stack:40|DWORD[.]  |rbx|QWORD[.]  |stack:80|QWORD[.]  |int[0|0x0]  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4             |5 
     locals:  |stack:32|QWORD[.]  |-  |-  |-  |rbx|QWORD[.]  |-   <||@
  Comment 1495 block B102 null  <||@
  Comment 1495 924 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1495 926 rcx|DWORD = MOVE input: int[-275987|0xfffffffffffbc9ed]  <||@
  Comment 1500 928 JUMP ~[] destination: B102 -> B107  <||@
  Comment 1502 block B100 null  <||@
  Comment 1502 906 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1502 908 rcx|DWORD = MOVE input: int[-275731|0xfffffffffffbcaed]  <||@
  Comment 1507 910 JUMP ~[] destination: B100 -> B107  <||@
  Comment 1509 block B110 null  <||@
  Comment 1509 982 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1509 984 MOV [r15|QWORD + 668] y: -278035 size: DWORD  <||@
  Comment 1520 986 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1527 988 DEOPT info [bci:25, 18, 4, 482, 17, 57, 41]  <||@
  Comment 1527 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1532 [rbx:0, stack:0, stack:40, stack:48]at java.nio.Buffer.position(Buffer.java:246) [bci: 25, duringCall: false, rethrow: false]
              |0                  |1         
     locals:  |stack:80|QWORD[.]  |rdi|DWORD 
  at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482, duringCall: true, rethrow: false]
              |0  |1             |2                  |3  |4          |5  |6  |7         |8  |9  |10  |11 
     locals:  |-  |rbx|QWORD[.]  |stack:80|QWORD[.]  |-  |r10|DWORD  |-  |-  |r8|DWORD  |-  |-  |-   |-  
  at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57, duringCall: true, rethrow: false]
              |0                  |1             |2                  |3           |4  |5  |6 
     locals:  |stack:40|DWORD[.]  |rbx|QWORD[.]  |stack:80|QWORD[.]  |int[0|0x0]  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4             |5 
     locals:  |stack:32|QWORD[.]  |-  |-  |-  |rbx|QWORD[.]  |-   <||@
  Comment 1533 block B96 null  <||@
  Comment 1533 876 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1533 878 rcx|DWORD = MOVE input: int[-274451|0xfffffffffffbcfed]  <||@
  Comment 1538 880 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1543 882 JUMP ~[] destination: B96 -> B107  <||@
  Comment 1545 block B64 null  <||@
  Comment 1545 610 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1545 612 stack:80|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1549 614 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1554 616 JUMP ~[] destination: B64 -> B65  <||@
  Comment 1554 block B65 null  <||@
  Comment 1554 618 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1554 620 rcx|DWORD = MOVE input: int[-261403|0xfffffffffffc02e5]  <||@
  Comment 1559 622 JUMP ~[] destination: B65 -> B107  <||@
  Comment 1564 block B1 null  <||@
  Comment 1564 20 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1564 22 r10|DWORD = MOVE input: int[-242963|0xfffffffffffc4aed]  <||@
  Comment 1570 24 JUMP ~[] destination: B1 -> B118  <||@
  Comment 1575 block B76 null  <||@
  Comment 1575 708 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1575 710 r10|DWORD = MOVE input: int[-265235|0xfffffffffffbf3ed]  <||@
  Comment 1581 712 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1586 714 JUMP ~[] destination: B76 -> B77  <||@
  Comment 1591 block B91 null  <||@
  Comment 1591 836 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1591 838 stack:80|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1595 840 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1600 842 JUMP ~[] destination: B91 -> B92  <||@
  Comment 1600 block B92 null  <||@
  Comment 1600 844 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1600 846 rcx|DWORD = MOVE input: int[-267291|0xfffffffffffbebe5]  <||@
  Comment 1605 848 JUMP ~[] destination: B92 -> B107  <||@
  Comment 1610 block B84 null  <||@
  Comment 1610 766 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1610 768 stack:80|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1614 770 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1619 772 JUMP ~[] destination: B84 -> B85  <||@
  Comment 1619 block B85 null  <||@
  Comment 1619 774 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1619 776 rcx|DWORD = MOVE input: int[-266515|0xfffffffffffbeeed]  <||@
  Comment 1624 778 JUMP ~[] destination: B85 -> B107  <||@
  Comment 1629 block B93 null  <||@
  Comment 1629 850 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1629 852 stack:80|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1633 854 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1638 856 JUMP ~[] destination: B93 -> B94  <||@
  Comment 1638 block B94 null  <||@
  Comment 1638 858 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1638 860 rcx|DWORD = MOVE input: int[-266259|0xfffffffffffbefed]  <||@
  Comment 1643 862 JUMP ~[] destination: B94 -> B107  <||@
  Comment 1648 block B55 null  <||@
  Comment 1648 542 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1648 536 stack:80|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1652 538 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1657 544 JUMP ~[] destination: B55 -> B56  <||@
  Comment 1657 block B56 null  <||@
  Comment 1657 546 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1657 548 r8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1723836758]  <||@
  Comment 1657 {Object[d.a@1723836758]}  <||@
  Comment 1667 550 MOV [r15|QWORD + 668] y: -258843 size: DWORD  <||@
  Comment 1678 552 MOV (x: [r15|QWORD + 680], y: r8|QWORD[.]) size: QWORD  <||@
  Comment 1685 554 DEOPT info [bci:109, 17, 57, 41]  <||@
  Comment 1685 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1690 [rdx:0, rbx:0, r11:0, stack:0, stack:40, stack:48]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109, duringCall: false, rethrow: false]
              |0                  |1             |2                  |3             |4          |5          |6             |7          |8         |9  |10  |11 
     locals:  |stack:40|DWORD[.]  |rbx|QWORD[.]  |stack:80|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD  |rax|DWORD  |r11|DWORD[.]  |rcx|DWORD  |r9|DWORD  |-  |-   |-  
  at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57, duringCall: true, rethrow: false]
              |0                  |1             |2                  |3           |4  |5  |6 
     locals:  |stack:40|DWORD[.]  |rbx|QWORD[.]  |stack:80|QWORD[.]  |int[0|0x0]  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4             |5 
     locals:  |stack:32|QWORD[.]  |-  |-  |-  |rbx|QWORD[.]  |-   <||@
  Comment 1691 block B113 null  <||@
  Comment 1691 1004 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1691 1006 r10|DWORD = MOVE input: int[-306707|0xfffffffffffb51ed]  <||@
  Comment 1697 1008 rbx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 1700 1010 JUMP ~[] destination: B113 -> B116  <||@
  Comment 1700 block B116 null  <||@
  Comment 1700 1028 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1700 1030 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1707 1032 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1714 1034 DEOPT info [bci:22]  <||@
  Comment 1714 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1719 [rbx:0, rsi:0]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4             |5 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |rbx|QWORD[.]  |-   <||@
  Comment 1720 block B115 null  <||@
  Comment 1720 1020 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1720 1022 r10|DWORD = MOVE input: int[-246803|0xfffffffffffc3bed]  <||@
  Comment 1726 1024 rbx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 1729 1026 JUMP ~[] destination: B115 -> B116  <||@
  Comment 1731 block B114 null  <||@
  Comment 1731 1012 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1731 1014 r10|DWORD = MOVE input: int[-306195|0xfffffffffffb53ed]  <||@
  Comment 1737 1016 rbx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 1740 1018 JUMP ~[] destination: B114 -> B116  <||@
  Comment 1742 block B98 null  <||@
  Comment 1742 890 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1742 892 rcx|DWORD = MOVE input: int[-274707|0xfffffffffffbceed]  <||@
  Comment 1747 894 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1752 896 JUMP ~[] destination: B98 -> B107  <||@
  Comment 1757 block B112 null  <||@
  Comment 1757 994 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1757 996 r10|DWORD = MOVE input: int[-285715|0xfffffffffffba3ed]  <||@
  Comment 1763 998 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1768 1000 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1773 1002 JUMP ~[] destination: B112 -> B116  <||@
  Comment 1775 block B117 null  <||@
  Comment 1775 1036 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1775 1038 r10|DWORD = MOVE input: int[-245011|0xfffffffffffc42ed]  <||@
  Comment 1781 1040 JUMP ~[] destination: B117 -> B118  <||@
  Comment 1786 block B39 null  <||@
  Comment 1786 424 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1786 418 stack:80|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1790 420 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1795 426 JUMP ~[] destination: B39 -> B40  <||@
  Comment 1795 block B40 null  <||@
  Comment 1795 428 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1795 430 r10|DWORD = MOVE input: int[-256283|0xfffffffffffc16e5]  <||@
  Comment 1801 438 JUMP ~[] destination: B40 -> B41  <||@
  Comment 1806 block B89 null  <||@
  Comment 1806 822 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1806 824 stack:80|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1810 826 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1815 828 JUMP ~[] destination: B89 -> B90  <||@
  Comment 1815 block B90 null  <||@
  Comment 1815 830 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1815 832 rcx|DWORD = MOVE input: int[-272411|0xfffffffffffbd7e5]  <||@
  Comment 1820 834 JUMP ~[] destination: B90 -> B107  <||@
  Comment 1825 block B7 null  <||@
  Comment 1825 56 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1825 58 r10|DWORD = MOVE input: int[-243731|0xfffffffffffc47ed]  <||@
  Comment 1831 60 JUMP ~[] destination: B7 -> B118  <||@
  Comment 1836 block B3 null  <||@
  Comment 1836 32 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1836 34 r10|DWORD = MOVE input: int[-243219|0xfffffffffffc49ed]  <||@
  Comment 1842 36 JUMP ~[] destination: B3 -> B118  <||@
  Comment 1847 block B80 null  <||@
  Comment 1847 738 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1847 740 stack:80|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1851 742 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1856 744 JUMP ~[] destination: B80 -> B81  <||@
  Comment 1856 block B81 null  <||@
  Comment 1856 746 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1856 748 rcx|DWORD = MOVE input: int[-266003|0xfffffffffffbf0ed]  <||@
  Comment 1861 750 JUMP ~[] destination: B81 -> B107  <||@
  Comment 1866 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1866 4  <||@
  Comment 1872 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 1872 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-3772[sun.nio.cs.StreamEncoder.implWrite(char[], int, int)]"
  method "HotSpotCompilation-3772[sun.nio.cs.StreamEncoder.implWrite(char[], int, int)]"
  date 1527005128165
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 1076a65a0 448b560849c1e203493bc20f85aff815ff900f1f80000000000f1f800000000089842400c0feff4883ec4848896c244048897424304c8bea448bf1458b550c458bde4503d8453bda0f8fce0500004585db0f8cd5060000453bf30f8f0b0500004585f60f8cb80600000fb6561785d20f857a060000498b5760488d4a30493b4f700f873004000049894f600f1882f00000004c8bca4c894c241848b9101e03c007000000488b89a800000048890ac74208c26300f8b9ffffffff48894a0c448962144489721844895a1c44895220448962244488622849c1ed0344896a2ce91c0300000f1f8000000000660f1f4400008b5e1c895c2428418504dc410fb6792885ff0f85bb050000420fb63cd52800000085ff0f85820500008b3cdd14000000428b04d524000000428b2cd51c000000468b2cd518000000458b7124448bc84403cd4403e8896c242c418be9412bed89442424418bc04103c64103ce4489442414448bc0442bc183ff010f85f2010000c704dd1400000001000000443bc50f8ec9010000418bf9896c2410448974240c8b2cd50c000000448bc5448bf7452bf54d63f649ffce418bf248c1e60348c1e203413bfd44895424080f8f72010000413bfd0f8f19010000448bd1418bcde9280000000f1f8000000000660f1f440000420fbf5c52106681fb80000f830e00000042885cd910ffc141ffc23bf97fe1413bc20f8f01010000448bc10f1f440000413bc20f8e14020000420fbf4c5210428b1cdd0c0000000fb7c9418bfaffc7418be8ffc581f9800000000f831f000000453bc80f8e61010000413bd80f86b703000043884cd810448bc5448bd7ebb181f9000800000f82cc04000081f900d800000f83e6030000458be9452be84183fd030f8cc3030000413bd80f86a7030000458d6802413bdd0f8671040000448bd141c1ea0c4181cae0000000478854d810448bd141c1ea064183e23f4181ca80000000468854dd1083e13f81c98000000043884cdd10458d4003448bd7e92fffffff468b14dd0c0000004963dd4903de458bf24c3bf30f86ff030000453bd50f87c4feffffe9f10300004963da8bf8412bfa4863ff48ffcf4803df4c3bc30f864d030000413bea0f87dcfeffffe93f0300004c63d14d03d64d3bc20f86f50100003be90f8777feffffe9e8010000418bf84103fd4489442410448974240ce92efeffff448974240c448954240885ff0f85690300008b5c2428c704dd1400000001000000443bc50f8e0c000000418bf9896c2410e9f8fdffff418bf54103f08bfe4489442410e9e6fdffff4c8b4c2418488bfe498bf1418bd2488bcf48893c24e8bcfb15ff90448b500c4585d20f854f0100004585d20f841c0100004183fa010f8542020000488b7424300f1f440000e80cf715ff904c8b4c2418488b742430418b512c418504d4448b5620468b1cd52c000000438504dc418b4918458b411c443bc10f8fc8fcffffe98b02000048893424448b74240c418bf2412bf63b7424140f8fb701000085f60f8c80020000488b5c24183b730c0f8c820100008b6c242c8b4c2424418bf82bf93bfd0f8f6601000085ff0f8c0c0100008b4c24083b3ccd0c0000000f8c14010000897318893ccd180000008b7424142b731883fe010f8441010000488b6c24404883c4488505b3851efdc5f877c344895c242c4489542428448944242448be680b00c007000000ba08000000b901000000e861038fff90488bd0448b5c242c448b542428488b742430e99bfbffff488b5c2418448b531c442b53184183fa010f8497000000488b6c24404883c448850549851efdc5f877c3488b5c24184183fa010f84a2feffffe98a00000048893424488b5c241841bae52cfcff8b7c2410448b44242848bd7036bfbe070000004589979c0200004989afa8020000e8f40a16ff9041baed48fcff4589979c0200004d89a7a8020000e8da0a16ff90b9edc8fbff41898f9c0200004d89a7a8020000e8c10a16ff90b9edc3fbffebe541baedf4fbff4589979c0200004d89a7a8020000e8a00a16ff9041c7879c020000edf1fbff4d89a7a8020000e8880a16ff90b9edc9fbffebacb9edcafbffeba541c7879c020000edc1fbff4d89a7a8020000e8620a16ff90b9edcffbff488b5c2418eb8148893424488b5c2418b9e502fcffe96effffff41baed4afcffe94affffff41baedf3fbff488b5c2418e974ffffff48893424488b5c2418b9e5ebfbffe940ffffff48893424488b5c2418b9edeefbffe92dffffff48893424488b5c2418b9edeffbffe91affffff48893424488b5c241849b8d891c0be0700000041c7879c020000e50cfcff4d8987a8020000e8c40916ff9041baed51fbff498bd94589979c0200004d89a7a8020000e8a70916ff9041baed3bfcff498bd9ebe141baed53fbff498bd9ebd6b9edcefbff488b5c2418e9adfeffff41baeda3fbff488b5c2418488b742430ebb541baed42fcffe977feffff48893424488b5c241841bae516fcffe936feffff48893424488b5c2418b9e5d7fbffe969feffff41baed47fcffe945feffff41baed49fcffe93afeffff48893424488b5c2418b9edf0fbffe940feffffe831395aff90e80b0816ff90f4f4f4f4f4f4f4f4f4f448bb0000000000000000e9fbffffff48bb0000000000000000e9fbfffffff4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@46383ced slotKind: QWORD  <||@
  Comment 48 6 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 56 10 r14|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 59 12 r10|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD state [bci:0]  <||@
  Comment 59 [rsi:0, r13:0, stack:48]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3         |4  |5 
     locals:  |rsi|QWORD[.]  |r13|QWORD[.]  |r14|DWORD  |r8|DWORD  |-  |-   <||@
  Comment 59 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 63 14 r11|DWORD = ADD (x: r14|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 69 16 CMP (x: r11|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 72 18 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 78 block B2 null  <||@
  Comment 78 26 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 78 28 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 81 30 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4  <||@
  Comment 87 block B4 null  <||@
  Comment 87 38 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 87 40 CMP (x: r14|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 90 42 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6  <||@
  Comment 96 block B6 null  <||@
  Comment 96 50 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 96 52 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 99 54 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8  <||@
  Comment 105 block B8 null  <||@
  Comment 105 62 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 105 64 rdx|DWORD = MOVZXB [rsi|QWORD[.] + 23] size: DWORD  <||@
  Comment 109 66 TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 111 68 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B117  <||@
  Comment 117 block B9 null  <||@
  Comment 117 70 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 117 72 rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 121 74 rcx|QWORD = LEA [rdx|QWORD + 48] size: QWORD  <||@
  Comment 125 76 CMP (x: rcx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 129 78 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11  <||@
  Comment 135 block B11 null  <||@
  Comment 135 106 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 135 108 MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD  <||@
  Comment 139 110 AMD64PREFETCH ~[rdx|QWORD + 240] instr: 0  <||@
  Comment 146 112 rdx|QWORD[*] = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 146 114 JUMP ~[] destination: B11 -> B12  <||@
  Comment 146 block B12 null  <||@
  Comment 146 116 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 146 118 r9|QWORD[.] = MOVE rdx|QWORD[*] moveKind: QWORD  <||@
  Comment 149 120 stack:56|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 154 122 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>}  <||@
  Comment 154 {meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>}}  <||@
  Comment 164 124 rcx|QWORD = MOV [rcx|QWORD + 168] size: QWORD  <||@
  Comment 171 126 MOV (x: [rdx|QWORD[*]], y: rcx|QWORD) size: QWORD  <||@
  Comment 174 128 MOV [rdx|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed}  <||@
  Comment 174 {meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed}}  <||@
  Comment 181 130 rcx|QWORD = MOVE input: long[4294967295|0xffffffff]  <||@
  Comment 186 132 MOV (x: [rdx|QWORD[*] + 12], y: rcx|QWORD) size: QWORD  <||@
  Comment 190 134 MOV (x: [rdx|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 194 136 MOV (x: [rdx|QWORD[*] + 24], y: r14|DWORD) size: DWORD  <||@
  Comment 198 138 MOV (x: [rdx|QWORD[*] + 28], y: r11|DWORD) size: DWORD  <||@
  Comment 202 140 MOV (x: [rdx|QWORD[*] + 32], y: r10|DWORD) size: DWORD  <||@
  Comment 206 142 MOV (x: [rdx|QWORD[*] + 36], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 210 144 MOVB (x: [rdx|QWORD[*] + 40], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 214 146 r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1032c7c7 encoding: base: 0 shift: 3  <||@
  Comment 218 148 MOV (x: [rdx|QWORD[*] + 44], y: r13|DWORD[.]) size: DWORD  <||@
  Comment 222 150 JUMP ~[] destination: B12 -> B13  <||@
  Comment 227 block B14 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 227 172 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 240 174 rbx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 243 176 stack:40|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD  <||@
  Comment 247 178 NULLCHECK [r12|QWORD[*] + rbx|DWORD[.] * 8] state [bci:22]  <||@
  Comment 247 [rdx:0, rbx:0, rsi:0, r9:0, r10:0, r11:0, stack:24, stack:40, stack:48]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4            |5 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |r9|QWORD[.]  |-   <||@
  Comment 247 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 251 180 rdi|DWORD = MOVZXB [r9|QWORD[.] + 40] size: DWORD  <||@
  Comment 256 182 TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 258 184 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B114  <||@
  Comment 264 block B15 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 264 186 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 264 188 rdi|DWORD = MOVZXB [r10|DWORD[.] * 8 + 40] size: DWORD  <||@
  Comment 273 190 TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 275 192 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B113  <||@
  Comment 281 block B16 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 281 194 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 281 196 rdi|DWORD = MOV [rbx|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 288 198 rax|DWORD = MOV [r10|DWORD[.] * 8 + 36] size: DWORD  <||@
  Comment 296 200 rbp|DWORD = MOV [r10|DWORD[.] * 8 + 28] size: DWORD  <||@
  Comment 304 202 r13|DWORD = MOV [r10|DWORD[.] * 8 + 24] size: DWORD  <||@
  Comment 312 204 r14|DWORD = MOV [r9|QWORD[.] + 36] size: DWORD  <||@
  Comment 316 206 r9|DWORD = ADD (x: rax|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 322 208 r13|DWORD = ADD (x: r13|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 325 210 stack:36|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 329 212 rbp|DWORD = SUB (x: r9|DWORD, ~y: r13|DWORD) size: DWORD  <||@
  Comment 335 214 stack:44|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 339 216 rax|DWORD = ADD (x: r8|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 345 218 rcx|DWORD = ADD (x: rcx|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 348 220 stack:60|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 353 222 r8|DWORD = SUB (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 359 224 CMP rdi|DWORD y: 1 size: DWORD  <||@
  Comment 362 226 BRANCH trueDestinationProbability: 0.9977260532612405 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B20  <||@
  Comment 368 block B17 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 368 228 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 368 230 MOV [rbx|DWORD[.] * 8 + 20] y: 1 size: DWORD  <||@
  Comment 379 232 CMP (x: r8|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 382 234 BRANCH trueDestinationProbability: 0.5358952359076989 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19  <||@
  Comment 388 block B18 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 388 236 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 388 238 rdi|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 391 240 stack:64|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 395 242 stack:68|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 400 244 JUMP ~[] destination: B18 -> B24  <||@
  Comment 400 block B24 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 400 298 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 400 300 rbp|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 407 302 r8|QWORD = MOV rbp|DWORD size: DWORD  <||@
  Comment 410 304 r14|DWORD = SUB (x: rdi|DWORD, ~y: r13|DWORD) size: DWORD  <||@
  Comment 416 306 r14|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 419 308 r14|QWORD = DEC r14|QWORD size: QWORD  <||@
  Comment 422 310 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1032c7c7 encoding: base: 0 shift: 3  <||@
  Comment 429 312 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1032c7c7 encoding: base: 0 shift: 3  <||@
  Comment 433 314 CMP (x: rdi|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 436 320 stack:72|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 441 316 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B33  <||@
  Comment 447 block B33 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 447 378 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 447 380 CMP (x: rdi|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 450 382 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B43  <||@
  Comment 456 block B43 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 456 454 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 456 456 r10|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 459 458 rcx|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 462 460 JUMP ~[] destination: B43 -> B44  <||@
  Comment 467 block B45 loop 1 depth 2 outer 0 header:283|LoopBegin  <||@
  Comment 467 468 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 480 470 rbx|DWORD = MOVSX [rdx|QWORD[.] + r10|DWORD * 2 + 16] size: DWORD  <||@
  Comment 486 472 CMP rbx|DWORD y: 128 size: WORD  <||@
  Comment 491 474 BRANCH trueDestinationProbability: 0.9998116902024854 condition: |<| trueDestination: B45 -> B46 falseDestination: B45 -> B49  <||@
  Comment 497 block B46 loop 1 depth 2 outer 0 header:283|LoopBegin  <||@
  Comment 497 476 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 497 478 MOVB (x: [rcx|DWORD + r11|DWORD[.] * 8 + 16], y: rbx|DWORD) size: BYTE  <||@
  Comment 502 480 rcx|DWORD = INC rcx|DWORD size: DWORD  <||@
  Comment 504 482 r10|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 507 484 JUMP ~[] destination: B46 -> B44  <||@
  Comment 507 block B44 loop 1 depth 2 outer 0 header:283|LoopBegin  <||@
  Comment 507 462 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 507 464 CMP (x: rdi|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 509 466 BRANCH trueDestinationProbability: 0.9647476131021091 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B49  <||@
  Comment 511 block B49 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 511 494 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 511 496 CMP (x: rax|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 514 498 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B49 -> B50 falseDestination: B49 -> B58  <||@
  Comment 520 block B58 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 520 560 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 520 562 r8|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 523 564 JUMP ~[] destination: B58 -> B59  <||@
  Comment 523 block B59 loop 2 depth 2 outer 0 header:318|LoopBegin  <||@
  Comment 523 566 [] = LABEL numbPhis: 2 align: true label: ?  <||@
  Comment 528 568 CMP (x: rax|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 531 570 BRANCH trueDestinationProbability: 0.13401192679415996 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B95  <||@
  Comment 537 block B60 loop 2 depth 2 outer 0 header:318|LoopBegin  <||@
  Comment 537 572 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 537 574 rcx|DWORD = MOVSX [rdx|QWORD[.] + r10|DWORD * 2 + 16] size: DWORD  <||@
  Comment 543 576 rbx|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 551 578 rcx|DWORD = MOVZX rcx|DWORD size: DWORD  <||@
  Comment 554 580 rdi|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 559 582 rbp|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 564 584 CMP rcx|DWORD y: 128 size: DWORD  <||@
  Comment 570 586 BRANCH trueDestinationProbability: 0.9444529691575878 condition: |<| trueDestination: B60 -> B61 falseDestination: B60 -> B79  <||@
  Comment 576 block B61 loop 2 depth 2 outer 0 header:318|LoopBegin  <||@
  Comment 576 588 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 576 590 CMP (x: r9|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 579 592 BRANCH trueDestinationProbability: 0.9998375304630381 condition: > trueDestination: B61 -> B62 falseDestination: B61 -> B66  <||@
  Comment 585 block B62 loop 2 depth 2 outer 0 header:318|LoopBegin  <||@
  Comment 585 594 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 585 596 CMP (x: rbx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 588 598 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B62 -> B63 falseDestination: B62 -> B64  <||@
  Comment 594 block B63 loop 2 depth 2 outer 0 header:318|LoopBegin  <||@
  Comment 594 600 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 594 602 MOVB (x: [r8|DWORD + r11|DWORD[.] * 8 + 16], y: rcx|DWORD) size: BYTE  <||@
  Comment 599 604 r8|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 602 606 r10|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 605 608 JUMP ~[] destination: B63 -> B59  <||@
  Comment 607 block B79 loop 2 depth 2 outer 0 header:318|LoopBegin  <||@
  Comment 607 732 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 607 734 CMP rcx|DWORD y: 2048 size: DWORD  <||@
  Comment 613 736 BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B79 -> B80 falseDestination: B79 -> B82  <||@
  Comment 619 block B82 loop 2 depth 2 outer 0 header:318|LoopBegin  <||@
  Comment 619 752 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 619 754 CMP rcx|DWORD y: 55296 size: DWORD  <||@
  Comment 625 756 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B82 -> B83 falseDestination: B82 -> B93  <||@
  Comment 631 block B83 loop 2 depth 2 outer 0 header:318|LoopBegin  <||@
  Comment 631 758 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 631 760 r13|DWORD = SUB (x: r9|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 637 762 CMP r13|DWORD y: 3 size: DWORD  <||@
  Comment 641 764 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B83 -> B84 falseDestination: B83 -> B86  <||@
  Comment 647 block B86 loop 2 depth 2 outer 0 header:318|LoopBegin  <||@
  Comment 647 780 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 647 782 CMP (x: rbx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 650 784 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B86 -> B87 falseDestination: B86 -> B91  <||@
  Comment 656 block B87 loop 2 depth 2 outer 0 header:318|LoopBegin  <||@
  Comment 656 786 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 656 788 r13|DWORD = LEA [r8|DWORD + 2] size: DWORD  <||@
  Comment 660 790 CMP (x: rbx|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 663 792 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B87 -> B88 falseDestination: B87 -> B89  <||@
  Comment 669 block B88 loop 2 depth 2 outer 0 header:318|LoopBegin  <||@
  Comment 669 794 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 669 796 r10|DWORD = SHR rcx|DWORD y: 12 size: DWORD  <||@
  Comment 676 798 r10|DWORD = OR r10|DWORD y: 224 size: DWORD  <||@
  Comment 683 800 MOVB (x: [r8|DWORD + r11|DWORD[.] * 8 + 16], y: r10|DWORD) size: BYTE  <||@
  Comment 688 802 r10|DWORD = SHR rcx|DWORD y: 6 size: DWORD  <||@
  Comment 695 804 r10|DWORD = AND r10|DWORD y: 63 size: DWORD  <||@
  Comment 699 806 r10|DWORD = OR r10|DWORD y: 128 size: DWORD  <||@
  Comment 706 808 MOVB (x: [rbp|DWORD + r11|DWORD[.] * 8 + 16], y: r10|DWORD) size: BYTE  <||@
  Comment 711 810 rcx|DWORD = AND rcx|DWORD y: 63 size: DWORD  <||@
  Comment 714 812 rcx|DWORD = OR rcx|DWORD y: 128 size: DWORD  <||@
  Comment 720 814 MOVB (x: [r13|DWORD + r11|DWORD[.] * 8 + 16], y: rcx|DWORD) size: BYTE  <||@
  Comment 725 816 r8|DWORD = LEA [r8|DWORD + 3] size: DWORD  <||@
  Comment 729 818 r10|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 732 820 JUMP ~[] destination: B88 -> B59  <||@
  Comment 737 block B34 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 737 384 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 737 386 r10|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 745 388 rbx|QWORD = MOVSXD r13|DWORD size: QWORD  <||@
  Comment 748 390 rbx|QWORD = ADD (x: rbx|QWORD, y: r14|QWORD) size: QWORD  <||@
  Comment 751 392 r14|QWORD = MOV r10|DWORD size: DWORD  <||@
  Comment 754 394 CMP (x: r14|QWORD, y: rbx|QWORD) size: QWORD  <||@
  Comment 757 396 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B39  <||@
  Comment 763 block B35 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 763 398 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 763 400 CMP (x: r10|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 766 402 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B35 -> B43 falseDestination: B35 -> B39  <||@
  Comment 777 block B50 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 777 500 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 777 502 rbx|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 780 504 rdi|DWORD = SUB (x: rax|DWORD, ~y: r10|DWORD) size: DWORD  <||@
  Comment 785 506 rdi|QWORD = MOVSXD rdi|DWORD size: QWORD  <||@
  Comment 788 508 rdi|QWORD = DEC rdi|QWORD size: QWORD  <||@
  Comment 791 510 rbx|QWORD = ADD (x: rbx|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 794 512 CMP (x: r8|QWORD, y: rbx|QWORD) size: QWORD  <||@
  Comment 797 514 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B50 -> B51 falseDestination: B50 -> B55  <||@
  Comment 803 block B51 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 803 516 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 803 518 CMP (x: rbp|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 806 520 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B51 -> B58 falseDestination: B51 -> B55  <||@
  Comment 817 block B25 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 817 318 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 817 322 r10|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 820 324 r10|QWORD = ADD (x: r10|QWORD, y: r14|QWORD) size: QWORD  <||@
  Comment 823 326 CMP (x: r8|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 826 328 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B25 -> B26 falseDestination: B25 -> B30  <||@
  Comment 832 block B26 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 832 330 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 832 332 CMP (x: rbp|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 834 334 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B26 -> B33 falseDestination: B26 -> B30  <||@
  Comment 845 block B19 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 845 246 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 845 248 rdi|DWORD = ADD (x: r8|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 851 250 stack:64|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 856 252 stack:68|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 861 254 JUMP ~[] destination: B19 -> B24  <||@
  Comment 866 block B20 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 866 256 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 866 258 stack:68|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 871 260 stack:72|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 876 262 TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 878 264 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B112  <||@
  Comment 884 block B21 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 884 266 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 884 268 rbx|DWORD[.] = MOVE stack:40|DWORD[.] moveKind: DWORD  <||@
  Comment 888 270 MOV [rbx|DWORD[.] * 8 + 20] y: 1 size: DWORD  <||@
  Comment 899 272 CMP (x: r8|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 902 274 BRANCH trueDestinationProbability: 0.5358952359076989 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23  <||@
  Comment 908 block B22 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 908 276 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 908 278 rdi|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 911 280 stack:64|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 915 284 JUMP ~[] destination: B22 -> B24  <||@
  Comment 920 block B23 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 920 286 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 920 288 rsi|DWORD = ADD (x: r13|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 926 290 rdi|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 928 292 stack:64|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 933 296 JUMP ~[] destination: B23 -> B24  <||@
  Comment 938 block B66 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 938 624 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 938 626 r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 943 628 rdi|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 946 630 rsi|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 949 632 rdx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 952 634 rcx|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 955 636 stack:80|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 959 638 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD] [] callTarget: HotSpotMethod<UTF_8$Encoder.overflow(CharBuffer, int, ByteBuffer, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:143, 17, 57, 41]  <||@
  Comment 959 {HotSpotMethod<UTF_8$Encoder.overflow(CharBuffer, int, ByteBuffer, int)>}  <||@
  Comment 959 8  <||@
  Comment 964 [stack:0, stack:24, stack:40, stack:48]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 143, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8  |9  |10  |11 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-  
  at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3           |4  |5  |6 
     locals:  |stack:40|DWORD[.]  |stack:56|QWORD[.]  |stack:80|QWORD[.]  |int[0|0x0]  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4                  |5 
     locals:  |stack:32|QWORD[.]  |-  |-  |-  |stack:56|QWORD[.]  |-   <||@
  Comment 965 640 r10|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD state [bci:146, 17, 57, 41]  <||@
  Comment 965 [rax:0, stack:0, stack:24, stack:40, stack:48]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 146, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6  |7  |8  |9  |10  |11 
     locals:  |-             |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-  
     stack:   |rax|QWORD[.]  |   |   |   |   |   |   |   |   |   |    |   
  at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3           |4  |5  |6 
     locals:  |stack:40|DWORD[.]  |stack:56|QWORD[.]  |stack:80|QWORD[.]  |int[0|0x0]  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4                  |5 
     locals:  |stack:32|QWORD[.]  |-  |-  |-  |stack:56|QWORD[.]  |-   <||@
  Comment 965 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 969 642 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 972 644 BRANCH trueDestinationProbability: 0.9999755802164062 condition: = trueDestination: B66 -> B70 falseDestination: B66 -> B68  <||@
  Comment 978 block B70 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 978 662 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 978 664 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 981 666 BRANCH trueDestinationProbability: 0.9999755267053062 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B74  <||@
  Comment 987 block B74 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 987 690 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 987 692 CMP r10|DWORD y: 1 size: DWORD  <||@
  Comment 991 694 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76  <||@
  Comment 997 block B75 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 997 696 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 997 698 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1002 700 - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<StreamEncoder.writeBytes()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:141]  <||@
  Comment 1002 9  <||@
  Comment 1007 {HotSpotMethod<StreamEncoder.writeBytes()>}  <||@
  Comment 1012 [stack:24, stack:48]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:282) [bci: 141, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4                  |5 
     locals:  |stack:32|QWORD[.]  |-  |-  |-  |stack:56|QWORD[.]  |-   <||@
  Comment 1013 702 r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1018 704 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1023 706 JUMP ~[] destination: B75 -> B13  <||@
  Comment 1023 block B13 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 1023 152 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1023 154 rdx|DWORD[.] = MOV [r9|QWORD[.] + 44] size: DWORD  <||@
  Comment 1027 156 NULLCHECK [r12|QWORD[*] + rdx|DWORD[.] * 8] state [bci:22]  <||@
  Comment 1027 [rdx:0, rsi:0, r9:0, stack:24, stack:48]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4            |5 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |r9|QWORD[.]  |-   <||@
  Comment 1027 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1031 158 r10|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD  <||@
  Comment 1035 160 r11|DWORD[.] = MOV [r10|DWORD[.] * 8 + 44] size: DWORD state [bci:22]  <||@
  Comment 1035 [rdx:0, rsi:0, r9:0, r10:0, stack:24, stack:48]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4            |5 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |r9|QWORD[.]  |-   <||@
  Comment 1035 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1043 162 NULLCHECK [r12|QWORD[*] + r11|DWORD[.] * 8] state [bci:22]  <||@
  Comment 1043 [rdx:0, rsi:0, r9:0, r10:0, r11:0, stack:24, stack:48]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4            |5 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |r9|QWORD[.]  |-   <||@
  Comment 1043 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1047 164 rcx|DWORD = MOV [r9|QWORD[.] + 24] size: DWORD  <||@
  Comment 1051 166 r8|DWORD = MOV [r9|QWORD[.] + 28] size: DWORD  <||@
  Comment 1055 168 CMP (x: r8|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 1058 170 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B115  <||@
  Comment 1069 block B95 null  <||@
  Comment 1069 864 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1069 866 stack:80|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1073 868 r14|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 1078 870 rsi|DWORD = SUB (x: r10|DWORD, ~y: r14|DWORD) size: DWORD  <||@
  Comment 1084 872 CMP (x: rsi|DWORD, y: stack:60|DWORD) size: DWORD  <||@
  Comment 1088 874 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B95 -> B96 falseDestination: B95 -> B97  <||@
  Comment 1094 block B97 null  <||@
  Comment 1094 884 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1094 886 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 1096 888 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B97 -> B98 falseDestination: B97 -> B99  <||@
  Comment 1102 block B99 null  <||@
  Comment 1102 898 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1102 900 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1107 902 CMP (x: rsi|DWORD, y: [rbx|QWORD[.] + 12]) size: DWORD  <||@
  Comment 1110 904 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B99 -> B100 falseDestination: B99 -> B101  <||@
  Comment 1116 block B101 null  <||@
  Comment 1116 912 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1116 914 rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1120 916 rcx|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1124 918 rdi|DWORD = SUB (x: r8|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 1129 920 CMP (x: rdi|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 1131 922 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B101 -> B102 falseDestination: B101 -> B103  <||@
  Comment 1137 block B103 null  <||@
  Comment 1137 930 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1137 932 TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 1139 934 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B103 -> B104 falseDestination: B103 -> B105  <||@
  Comment 1145 block B105 null  <||@
  Comment 1145 942 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1145 944 rcx|DWORD[.] = MOVE stack:72|DWORD[.] moveKind: DWORD  <||@
  Comment 1149 946 CMP (x: rdi|DWORD, y: [rcx|DWORD[.] * 8 + 12]) size: DWORD  <||@
  Comment 1156 948 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B105 -> B106 falseDestination: B105 -> B108  <||@
  Comment 1162 block B108 null  <||@
  Comment 1162 964 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1162 966 MOV (x: [rbx|QWORD[.] + 24], y: rsi|DWORD) size: DWORD  <||@
  Comment 1165 968 MOV (x: [rcx|DWORD[.] * 8 + 24], y: rdi|DWORD) size: DWORD  <||@
  Comment 1172 970 rsi|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 1176 972 JUMP ~[] destination: B108 -> B109  <||@
  Comment 1176 block B109 null  <||@
  Comment 1176 974 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1176 976 rsi|DWORD = SUB (x: rsi|DWORD, ~y: [rbx|QWORD[.] + 24]) size: DWORD  <||@
  Comment 1179 978 CMP rsi|DWORD y: 1 size: DWORD  <||@
  Comment 1182 980 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B109 -> B110 falseDestination: B109 -> B111  <||@
  Comment 1188 block B111 null  <||@
  Comment 1188 990 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1188 992 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1197 12  <||@
  Comment 1207 block B10 null  <||@
  Comment 1207 80 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1207 82 stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1212 84 stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1217 86 stack:44|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1222 88 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1222 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1232 90 rdx|DWORD = MOVE input: int[8|0x8]  <||@
  Comment 1237 92 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1242 94 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 1242 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1247 [r13:0, stack:48]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1             |2          |3               |4  |5 
     locals:  |stack:32|QWORD[.]  |r13|QWORD[.]  |r14|DWORD  |stack:44|DWORD  |-  |-   <||@
  Comment 1248 96 rdx|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1251 98 r11|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1256 100 r10|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1261 102 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1266 104 JUMP ~[] destination: B10 -> B12  <||@
  Comment 1271 block B71 null  <||@
  Comment 1271 668 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1271 670 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1276 672 r10|DWORD = MOV [rbx|QWORD[.] + 28] size: DWORD  <||@
  Comment 1280 674 r10|DWORD = SUB (x: r10|DWORD, ~y: [rbx|QWORD[.] + 24]) size: DWORD  <||@
  Comment 1284 676 CMP r10|DWORD y: 1 size: DWORD  <||@
  Comment 1288 678 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73  <||@
  Comment 1294 block B73 null  <||@
  Comment 1294 686 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1294 688 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1303 12  <||@
  Comment 1313 block B68 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 1313 650 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1313 652 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1318 654 CMP r10|DWORD y: 1 size: DWORD  <||@
  Comment 1322 656 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B68 -> B70 falseDestination: B68 -> B78  <||@
  Comment 1333 block B30 null  <||@
  Comment 1333 356 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1333 350 stack:80|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1337 352 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1342 358 JUMP ~[] destination: B30 -> B31  <||@
  Comment 1342 block B31 null  <||@
  Comment 1342 360 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1342 362 r10|DWORD = MOVE input: int[-250651|0xfffffffffffc2ce5]  <||@
  Comment 1348 370 JUMP ~[] destination: B31 -> B41  <||@
  Comment 1348 block B41 null  <||@
  Comment 1348 440 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1348 366 rdi|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 1352 368 r8|DWORD[.] = MOVE stack:40|DWORD[.] moveKind: DWORD  <||@
  Comment 1357 442 rbp|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1159422862]  <||@
  Comment 1357 {Object[d.a@1159422862]}  <||@
  Comment 1367 444 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1374 446 MOV (x: [r15|QWORD + 680], y: rbp|QWORD[.]) size: QWORD  <||@
  Comment 1381 448 DEOPT info [bci:70, 17, 57, 41]  <||@
  Comment 1381 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1386 [rdx:0, rbx:0, rsi:0, r8:0, r11:0, stack:48]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 70, duringCall: false, rethrow: false]
              |0            |1             |2             |3             |4          |5          |6             |7          |8         |9  |10  |11 
     locals:  |r8|DWORD[.]  |rbx|QWORD[.]  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |rax|DWORD  |r11|DWORD[.]  |r13|DWORD  |r9|DWORD  |-  |-   |-  
     stack:   |r13|DWORD    |rdi|DWORD     |              |              |           |           |              |           |          |   |    |   
  at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57, duringCall: true, rethrow: false]
              |0            |1             |2             |3           |4  |5  |6 
     locals:  |r8|DWORD[.]  |rbx|QWORD[.]  |rsi|QWORD[.]  |int[0|0x0]  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4             |5 
     locals:  |stack:32|QWORD[.]  |-  |-  |-  |rbx|QWORD[.]  |-   <||@
  Comment 1387 block B5 null  <||@
  Comment 1387 44 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1387 46 r10|DWORD = MOVE input: int[-243475|0xfffffffffffc48ed]  <||@
  Comment 1393 48 JUMP ~[] destination: B5 -> B118  <||@
  Comment 1393 block B118 null  <||@
  Comment 1393 1042 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1393 1044 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1400 1046 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1407 1048 DEOPT info [bci:0]  <||@
  Comment 1407 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1412 [r13:0, stack:48]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1             |2          |3         |4  |5 
     locals:  |stack:32|QWORD[.]  |r13|QWORD[.]  |r14|DWORD  |r8|DWORD  |-  |-   <||@
  Comment 1413 block B104 null  <||@
  Comment 1413 936 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1413 938 rcx|DWORD = MOVE input: int[-276243|0xfffffffffffbc8ed]  <||@
  Comment 1418 940 JUMP ~[] destination: B104 -> B107  <||@
  Comment 1418 block B107 null  <||@
  Comment 1418 956 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1418 958 MOV (x: [r15|QWORD + 668], y: rcx|DWORD) size: DWORD  <||@
  Comment 1425 960 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1432 962 DEOPT info [bci:109, 17, 57, 41]  <||@
  Comment 1432 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1437 [rdx:0, rbx:0, r11:0, stack:0, stack:40, stack:48]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109, duringCall: false, rethrow: false]
              |0                  |1             |2                  |3             |4          |5          |6             |7         |8         |9  |10  |11 
     locals:  |stack:40|DWORD[.]  |rbx|QWORD[.]  |stack:80|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD  |rax|DWORD  |r11|DWORD[.]  |r8|DWORD  |r9|DWORD  |-  |-   |-  
  at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57, duringCall: true, rethrow: false]
              |0                  |1             |2                  |3           |4  |5  |6 
     locals:  |stack:40|DWORD[.]  |rbx|QWORD[.]  |stack:80|QWORD[.]  |int[0|0x0]  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4             |5 
     locals:  |stack:32|QWORD[.]  |-  |-  |-  |rbx|QWORD[.]  |-   <||@
  Comment 1438 block B106 null  <||@
  Comment 1438 950 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1438 952 rcx|DWORD = MOVE input: int[-277523|0xfffffffffffbc3ed]  <||@
  Comment 1443 954 JUMP ~[] destination: B106 -> B107  <||@
  Comment 1445 block B72 null  <||@
  Comment 1445 680 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1445 682 r10|DWORD = MOVE input: int[-264979|0xfffffffffffbf4ed]  <||@
  Comment 1451 684 JUMP ~[] destination: B72 -> B77  <||@
  Comment 1451 block B77 null  <||@
  Comment 1451 716 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1451 718 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1458 720 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1465 722 DEOPT info [bci:44]  <||@
  Comment 1465 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1470 [rax:0, rbx:0, stack:48]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 44, duringCall: false, rethrow: false]
              |0                  |1  |2  |3  |4             |5 
     locals:  |stack:32|QWORD[.]  |-  |-  |-  |rbx|QWORD[.]  |- 
     stack:   |rax|QWORD[.]       |   |   |   |              |    <||@
  Comment 1471 block B78 null  <||@
  Comment 1471 724 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1471 726 MOV [r15|QWORD + 668] y: -265747 size: DWORD  <||@
  Comment 1482 728 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1489 730 DEOPT info [bci:146, 17, 57, 41]  <||@
  Comment 1489 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1494 [rax:0, rbx:0, stack:0, stack:40, stack:48]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 146, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6  |7  |8  |9  |10  |11 
     locals:  |-             |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-  
     stack:   |rax|QWORD[.]  |   |   |   |   |   |   |   |   |   |    |   
  at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57, duringCall: true, rethrow: false]
              |0                  |1             |2                  |3           |4  |5  |6 
     locals:  |stack:40|DWORD[.]  |rbx|QWORD[.]  |stack:80|QWORD[.]  |int[0|0x0]  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4             |5 
     locals:  |stack:32|QWORD[.]  |-  |-  |-  |rbx|QWORD[.]  |-   <||@
  Comment 1495 block B102 null  <||@
  Comment 1495 924 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1495 926 rcx|DWORD = MOVE input: int[-275987|0xfffffffffffbc9ed]  <||@
  Comment 1500 928 JUMP ~[] destination: B102 -> B107  <||@
  Comment 1502 block B100 null  <||@
  Comment 1502 906 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1502 908 rcx|DWORD = MOVE input: int[-275731|0xfffffffffffbcaed]  <||@
  Comment 1507 910 JUMP ~[] destination: B100 -> B107  <||@
  Comment 1509 block B110 null  <||@
  Comment 1509 982 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1509 984 MOV [r15|QWORD + 668] y: -278035 size: DWORD  <||@
  Comment 1520 986 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1527 988 DEOPT info [bci:25, 18, 4, 482, 17, 57, 41]  <||@
  Comment 1527 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1532 [rbx:0, stack:0, stack:40, stack:48]at java.nio.Buffer.position(Buffer.java:246) [bci: 25, duringCall: false, rethrow: false]
              |0                  |1         
     locals:  |stack:80|QWORD[.]  |rdi|DWORD 
  at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482, duringCall: true, rethrow: false]
              |0  |1             |2                  |3  |4          |5  |6  |7         |8  |9  |10  |11 
     locals:  |-  |rbx|QWORD[.]  |stack:80|QWORD[.]  |-  |r10|DWORD  |-  |-  |r8|DWORD  |-  |-  |-   |-  
  at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57, duringCall: true, rethrow: false]
              |0                  |1             |2                  |3           |4  |5  |6 
     locals:  |stack:40|DWORD[.]  |rbx|QWORD[.]  |stack:80|QWORD[.]  |int[0|0x0]  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4             |5 
     locals:  |stack:32|QWORD[.]  |-  |-  |-  |rbx|QWORD[.]  |-   <||@
  Comment 1533 block B96 null  <||@
  Comment 1533 876 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1533 878 rcx|DWORD = MOVE input: int[-274451|0xfffffffffffbcfed]  <||@
  Comment 1538 880 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1543 882 JUMP ~[] destination: B96 -> B107  <||@
  Comment 1545 block B64 null  <||@
  Comment 1545 610 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1545 612 stack:80|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1549 614 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1554 616 JUMP ~[] destination: B64 -> B65  <||@
  Comment 1554 block B65 null  <||@
  Comment 1554 618 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1554 620 rcx|DWORD = MOVE input: int[-261403|0xfffffffffffc02e5]  <||@
  Comment 1559 622 JUMP ~[] destination: B65 -> B107  <||@
  Comment 1564 block B1 null  <||@
  Comment 1564 20 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1564 22 r10|DWORD = MOVE input: int[-242963|0xfffffffffffc4aed]  <||@
  Comment 1570 24 JUMP ~[] destination: B1 -> B118  <||@
  Comment 1575 block B76 null  <||@
  Comment 1575 708 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1575 710 r10|DWORD = MOVE input: int[-265235|0xfffffffffffbf3ed]  <||@
  Comment 1581 712 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1586 714 JUMP ~[] destination: B76 -> B77  <||@
  Comment 1591 block B91 null  <||@
  Comment 1591 836 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1591 838 stack:80|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1595 840 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1600 842 JUMP ~[] destination: B91 -> B92  <||@
  Comment 1600 block B92 null  <||@
  Comment 1600 844 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1600 846 rcx|DWORD = MOVE input: int[-267291|0xfffffffffffbebe5]  <||@
  Comment 1605 848 JUMP ~[] destination: B92 -> B107  <||@
  Comment 1610 block B84 null  <||@
  Comment 1610 766 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1610 768 stack:80|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1614 770 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1619 772 JUMP ~[] destination: B84 -> B85  <||@
  Comment 1619 block B85 null  <||@
  Comment 1619 774 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1619 776 rcx|DWORD = MOVE input: int[-266515|0xfffffffffffbeeed]  <||@
  Comment 1624 778 JUMP ~[] destination: B85 -> B107  <||@
  Comment 1629 block B93 null  <||@
  Comment 1629 850 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1629 852 stack:80|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1633 854 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1638 856 JUMP ~[] destination: B93 -> B94  <||@
  Comment 1638 block B94 null  <||@
  Comment 1638 858 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1638 860 rcx|DWORD = MOVE input: int[-266259|0xfffffffffffbefed]  <||@
  Comment 1643 862 JUMP ~[] destination: B94 -> B107  <||@
  Comment 1648 block B55 null  <||@
  Comment 1648 542 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1648 536 stack:80|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1652 538 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1657 544 JUMP ~[] destination: B55 -> B56  <||@
  Comment 1657 block B56 null  <||@
  Comment 1657 546 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1657 548 r8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1723836758]  <||@
  Comment 1657 {Object[d.a@1723836758]}  <||@
  Comment 1667 550 MOV [r15|QWORD + 668] y: -258843 size: DWORD  <||@
  Comment 1678 552 MOV (x: [r15|QWORD + 680], y: r8|QWORD[.]) size: QWORD  <||@
  Comment 1685 554 DEOPT info [bci:109, 17, 57, 41]  <||@
  Comment 1685 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1690 [rdx:0, rbx:0, r11:0, stack:0, stack:40, stack:48]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109, duringCall: false, rethrow: false]
              |0                  |1             |2                  |3             |4          |5          |6             |7          |8         |9  |10  |11 
     locals:  |stack:40|DWORD[.]  |rbx|QWORD[.]  |stack:80|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD  |rax|DWORD  |r11|DWORD[.]  |rcx|DWORD  |r9|DWORD  |-  |-   |-  
  at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57, duringCall: true, rethrow: false]
              |0                  |1             |2                  |3           |4  |5  |6 
     locals:  |stack:40|DWORD[.]  |rbx|QWORD[.]  |stack:80|QWORD[.]  |int[0|0x0]  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4             |5 
     locals:  |stack:32|QWORD[.]  |-  |-  |-  |rbx|QWORD[.]  |-   <||@
  Comment 1691 block B113 null  <||@
  Comment 1691 1004 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1691 1006 r10|DWORD = MOVE input: int[-306707|0xfffffffffffb51ed]  <||@
  Comment 1697 1008 rbx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 1700 1010 JUMP ~[] destination: B113 -> B116  <||@
  Comment 1700 block B116 null  <||@
  Comment 1700 1028 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1700 1030 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1707 1032 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1714 1034 DEOPT info [bci:22]  <||@
  Comment 1714 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1719 [rbx:0, rsi:0]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4             |5 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |rbx|QWORD[.]  |-   <||@
  Comment 1720 block B115 null  <||@
  Comment 1720 1020 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1720 1022 r10|DWORD = MOVE input: int[-246803|0xfffffffffffc3bed]  <||@
  Comment 1726 1024 rbx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 1729 1026 JUMP ~[] destination: B115 -> B116  <||@
  Comment 1731 block B114 null  <||@
  Comment 1731 1012 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1731 1014 r10|DWORD = MOVE input: int[-306195|0xfffffffffffb53ed]  <||@
  Comment 1737 1016 rbx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 1740 1018 JUMP ~[] destination: B114 -> B116  <||@
  Comment 1742 block B98 null  <||@
  Comment 1742 890 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1742 892 rcx|DWORD = MOVE input: int[-274707|0xfffffffffffbceed]  <||@
  Comment 1747 894 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1752 896 JUMP ~[] destination: B98 -> B107  <||@
  Comment 1757 block B112 null  <||@
  Comment 1757 994 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1757 996 r10|DWORD = MOVE input: int[-285715|0xfffffffffffba3ed]  <||@
  Comment 1763 998 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1768 1000 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1773 1002 JUMP ~[] destination: B112 -> B116  <||@
  Comment 1775 block B117 null  <||@
  Comment 1775 1036 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1775 1038 r10|DWORD = MOVE input: int[-245011|0xfffffffffffc42ed]  <||@
  Comment 1781 1040 JUMP ~[] destination: B117 -> B118  <||@
  Comment 1786 block B39 null  <||@
  Comment 1786 424 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1786 418 stack:80|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1790 420 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1795 426 JUMP ~[] destination: B39 -> B40  <||@
  Comment 1795 block B40 null  <||@
  Comment 1795 428 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1795 430 r10|DWORD = MOVE input: int[-256283|0xfffffffffffc16e5]  <||@
  Comment 1801 438 JUMP ~[] destination: B40 -> B41  <||@
  Comment 1806 block B89 null  <||@
  Comment 1806 822 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1806 824 stack:80|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1810 826 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1815 828 JUMP ~[] destination: B89 -> B90  <||@
  Comment 1815 block B90 null  <||@
  Comment 1815 830 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1815 832 rcx|DWORD = MOVE input: int[-272411|0xfffffffffffbd7e5]  <||@
  Comment 1820 834 JUMP ~[] destination: B90 -> B107  <||@
  Comment 1825 block B7 null  <||@
  Comment 1825 56 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1825 58 r10|DWORD = MOVE input: int[-243731|0xfffffffffffc47ed]  <||@
  Comment 1831 60 JUMP ~[] destination: B7 -> B118  <||@
  Comment 1836 block B3 null  <||@
  Comment 1836 32 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1836 34 r10|DWORD = MOVE input: int[-243219|0xfffffffffffc49ed]  <||@
  Comment 1842 36 JUMP ~[] destination: B3 -> B118  <||@
  Comment 1847 block B80 null  <||@
  Comment 1847 738 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1847 740 stack:80|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1851 742 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1856 744 JUMP ~[] destination: B80 -> B81  <||@
  Comment 1856 block B81 null  <||@
  Comment 1856 746 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1856 748 rcx|DWORD = MOVE input: int[-266003|0xfffffffffffbf0ed]  <||@
  Comment 1861 750 JUMP ~[] destination: B81 -> B107  <||@
  Comment 1866 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1866 4  <||@
  Comment 1872 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 1872 5  <||@
  HexCodeFile>>> <|@
end_nmethod
