begin_compilation
  name " HotSpotCompilation-9535[java.lang.Short.toString()]"
  method "HotSpotCompilation-9535[java.lang.Short.toString()]"
  date 1527005213847
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i794 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: i794  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/lang/Short;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v799 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v799 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i794 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i794 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Short.value
nodeSourcePosition: at java.lang.Short.toString(Short.java:388) [bci: 1]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: - 
address: v799 
=== Succesors ===
next: v14 
=== Usages ===
i168 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v799 #next: v14  <|@  <|@
f <@~|@floating>@ <|@
tid i168 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 16
nodeSourcePosition: at java.lang.Short.toString(Short.java:388) [bci: 1]
resultBits: 32
stamp: i32 [-32768 - 32767]
=== Inputs ===
value: i794 
=== Succesors ===
=== Usages ===
?43 i78 v73 ?72 v46 ?56 i82 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i794  <|@  <|@
f <@~|@floating>@ <|@
tid i10 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.toString(Integer.java:400) [bci: 10]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v113 i42 i59 v73 i83 v516 v474 a335 a396 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:438) [bci: 7]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i168 
y: i10 
=== Succesors ===
=== Usages ===
v14 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i168 y: i10  <|@  <|@
f <@~|@floating>@ <|@
tid i222 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
rawvalue: 0
stableDimension: 0
stamp: i16 [0] ⇈0000000000000000
stampKind: i16
value: short[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i286 v777 v785 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j719 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j720 j771 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j671 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j681 j738 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v791 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16>
value: SIMD<0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v779 v786 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j715 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j716 j768 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j687 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j676 j733 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v792 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v781 v787 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j711 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j712 j765 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j364 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j739 j682 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v793 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v783 v788 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j707 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j708 j762 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j266 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v763 j739 v709 j682 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
rawvalue: meta{HotSpotType<[C, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[C, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v366 v419 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j310 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v362 v416 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v309 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
rawvalue: meta{HotSpotType<[C, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[C, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a335 a396 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i126 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.toString(Integer.java:400) [bci: 19]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i127 a486 a442 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i19 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.toString(Integer.java:400) [bci: 18]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i97 a486 i54 i68 i374 a442 i311 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i342 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i343 i403 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i312 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i313 i375 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?39 <|@
d <@d|@=== Debug Properties ===
bci: 4
code: ResolvedJavaMethodBytecode<Short.toString()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: Short.java
sourceLine: 388
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - 
=== Succesors ===
=== Usages ===
?72 ?56 ?122 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: -  <|@  <|@
f <@~|@floating>@ <|@
tid a44 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 3]
at java.lang.Integer.toString(Integer.java:400) [bci: 24]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
rawvalue: int[10]{9, 99, 999, 9999, 99999, ...}
stableDimension: 0
stamp: a!# [I
stampKind: a -
value: Object[int[10]{9, 99, 999, 9999, 99999, ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v801 v800 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i169 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.Integer.toString(Integer.java:400) [bci: 15]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
rawvalue: 10
stableDimension: 0
stamp: i32 [10] ⇊000000000000000a ⇈000000000000000a
stampKind: i32
value: int[10|0xa]
=== Inputs ===
=== Succesors ===
=== Usages ===
v170 v181 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.toString(Integer.java:400) [bci: 10]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
trueSuccessorProbability: 0.02853574332885067
=== Inputs ===
condition: v73 
=== Succesors ===
trueSuccessor: v12 
falseSuccessor: v13 
=== Usages ===
=== Predecessor ===
i794 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v73 #trueSuccessor: v12 #falseSuccessor: v13  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4583882089441867264
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.toString(Integer.java:400) [bci: 13]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v57 
=== Usages ===
=== Predecessor ===
v14 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v57  <|@  <|@
tid ?72 <|@
d <@d|@=== Debug Properties ===
bci: 15
code: ResolvedJavaMethodBytecode<Integer.toString(int)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Integer.java
sourceLine: 400
stackSize: 0
=== Inputs ===
outerFrameState: ?39 
values: i168 - - 
=== Succesors ===
=== Usages ===
?60 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?39 values: i168 - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
at java.lang.Integer.toString(Integer.java:400) [bci: 15]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v58 
=== Predecessor ===
v12 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" 
    successors "B3" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4590251137622047965
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i59 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v58 
values: i10 i68 
=== Succesors ===
=== Usages ===
?60 v800 i127 i68 v170 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v58 values: i10 i68  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 2.7169880105877717
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
at java.lang.Integer.toString(Integer.java:400) [bci: 15]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v57 
=== Succesors ===
next: v245 
=== Usages ===
i59 v64 v69 v244 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v57 #next: v245  <|@  <|@
f <@~|@floating>@ <|@
tid i78 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NegateNode$$Lambda$180/1857180762@4b0ec103
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:440) [bci: 15]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: i32 [-32767 - 32768]
=== Inputs ===
value: i168 
=== Succesors ===
=== Usages ===
i82 v62 ?60 
=== Predecessor ===
- >@ <|@
instruction <@Negate|@org.graalvm.compiler.nodes.calc.NegateNode>@ value: i168  <|@  <|@
tid ?60 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<Integer.stringSize(int)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Integer.java
sourceLine: 473
stackSize: 0
=== Inputs ===
outerFrameState: ?72 
values: i78 i59 
=== Succesors ===
=== Usages ===
v235 a335 v242 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?72 values: i78 i59  <|@  <|@
f <@~|@floating>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.Integer.toString(Integer.java:400) [bci: 15]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i59 
y: i169 
=== Succesors ===
=== Usages ===
v245 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i59 y: i169  <|@  <|@
f <@*|@fixed>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.Integer.toString(Integer.java:400) [bci: 15]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v170 
=== Succesors ===
trueSuccessor: v241 
falseSuccessor: v244 
=== Usages ===
=== Predecessor ===
v58 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v170 #trueSuccessor: v241 #falseSuccessor: v244  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590251137622047965
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v241 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.Integer.toString(Integer.java:400) [bci: 15]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: i795 
=== Usages ===
i795 
=== Predecessor ===
v245 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i795  <|@  <|@
f <@~|@floating>@ <|@
tid v800 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a44 
index: i59 
=== Succesors ===
=== Usages ===
i795 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a44 index: i59  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i795 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.Integer.toString(Integer.java:400) [bci: 15]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v241 
address: v800 
=== Succesors ===
next: v67 
=== Usages ===
v62 
=== Predecessor ===
v241 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v241 address: v800 #next: v67  <|@  <|@
f <@~|@floating>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 8]
at java.lang.Integer.toString(Integer.java:400) [bci: 15]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i795 
y: i78 
=== Succesors ===
=== Usages ===
v67 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i795 y: i78  <|@  <|@
f <@*|@fixed>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 8]
at java.lang.Integer.toString(Integer.java:400) [bci: 15]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
trueSuccessorProbability: 0.6319453762390111
=== Inputs ===
condition: v62 
=== Succesors ===
trueSuccessor: v63 
falseSuccessor: v64 
=== Usages ===
=== Predecessor ===
i795 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v62 #trueSuccessor: v63 #falseSuccessor: v64  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4587221820936838842
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:472) [bci: 15]
at java.lang.Integer.toString(Integer.java:400) [bci: 15]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v235 
=== Usages ===
=== Predecessor ===
v67 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v235  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v235 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?60 
=== Succesors ===
next: v69 
=== Usages ===
=== Predecessor ===
v63 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?60 #next: v69  <|@  <|@
f <@~|@floating>@ <|@
tid i68 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:472) [bci: 15]
at java.lang.Integer.toString(Integer.java:400) [bci: 15]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: i32
=== Inputs ===
x: i59 
y: i19 
=== Succesors ===
=== Usages ===
i59 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i59 y: i19  <|@  <|@
f <@*|@fixed>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
at java.lang.Integer.toString(Integer.java:400) [bci: 15]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
=== Inputs ===
loopBegin: v58 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v235 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v58  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4583882089441867264
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:474) [bci: 11]
at java.lang.Integer.toString(Integer.java:400) [bci: 15]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v58 
=== Succesors ===
next: j314 
=== Usages ===
=== Predecessor ===
v67 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v58 #next: j314  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j314 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j358 
=== Usages ===
v808 v809 
=== Predecessor ===
v64 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j358  <|@  <|@
f <@~|@floating>@ <|@
tid v808 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j314 
index: - 
=== Succesors ===
=== Usages ===
j358 v360 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j314 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j358 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v808 
=== Succesors ===
next: j359 
=== Usages ===
j318 v810 v811 a334 v816 v812 v813 v814 v815 
=== Predecessor ===
j314 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v808 #next: j359  <|@  <|@
f <@~|@floating>@ <|@
tid v809 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j314 
index: - 
=== Succesors ===
=== Usages ===
j359 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j314 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j359 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v809 
=== Succesors ===
next: v330 
=== Usages ===
v324 
=== Predecessor ===
j358 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v809 #next: v330  <|@  <|@
f <@~|@floating>@ <|@
tid i127 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.Integer.toString(Integer.java:400) [bci: 19]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: i32
=== Inputs ===
x: i59 
y: i126 
=== Succesors ===
=== Usages ===
j532 i155 v361 i311 a335 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i59 y: i126  <|@  <|@
f <@~|@floating>@ <|@
tid i311 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i127 
y: i19 
=== Succesors ===
=== Usages ===
i343 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i127 y: i19  <|@  <|@
f <@~|@floating>@ <|@
tid i343 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i311 
y: i342 
=== Succesors ===
=== Usages ===
i313 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i311 y: i342  <|@  <|@
f <@~|@floating>@ <|@
tid i313 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i343 
y: i312 
=== Succesors ===
=== Usages ===
j317 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i343 y: i312  <|@  <|@
f <@~|@floating>@ <|@
tid j317 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i313 
=== Succesors ===
=== Usages ===
j318 v812 v813 v814 v815 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i313  <|@  <|@
f <@~|@floating>@ <|@
tid j318 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: i64
=== Inputs ===
x: j317 
y: j358 
=== Succesors ===
=== Usages ===
v324 v360 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j317 y: j358  <|@  <|@
f <@~|@floating>@ <|@
tid v324 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j359 
y: j318 
=== Succesors ===
=== Usages ===
v330 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j359 y: j318  <|@  <|@
f <@*|@fixed>@ <|@
tid v330 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v324 
=== Succesors ===
trueSuccessor: v329 
falseSuccessor: v328 
=== Usages ===
=== Predecessor ===
j359 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v324 #trueSuccessor: v329 #falseSuccessor: v328  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4553899539185604695
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v329 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: a335 
=== Usages ===
=== Predecessor ===
v330 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a335  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a335 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?60 
arguments: v309 i127 i10 
=== Succesors ===
next: v338 
=== Usages ===
a339 
=== Predecessor ===
v329 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?60 arguments: v309 i127 i10 #next: v338  <|@  <|@
f <@*|@fixed>@ <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v337 
=== Predecessor ===
a335 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4583799840761532831
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v328 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v360 
=== Usages ===
=== Predecessor ===
v330 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v360  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v360 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v808 
value: j318 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v347 
=== Usages ===
=== Predecessor ===
v328 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v808 value: j318 stateAfter: - lastLocationAccess: - #next: v347  <|@  <|@
f <@~|@floating>@ <|@
tid v812 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j317 
index: j358 
=== Succesors ===
=== Usages ===
v347 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j317 index: j358  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v347 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
=== Inputs ===
address: v812 
=== Succesors ===
next: v350 
=== Usages ===
=== Predecessor ===
v360 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v812 #next: v350  <|@  <|@
f <@~|@floating>@ <|@
tid v813 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j317 
index: j358 
=== Succesors ===
=== Usages ===
v350 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j317 index: j358  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v350 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
=== Inputs ===
address: v813 
=== Succesors ===
next: v353 
=== Usages ===
=== Predecessor ===
v347 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v813 #next: v353  <|@  <|@
f <@~|@floating>@ <|@
tid v814 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j317 
index: j358 
=== Succesors ===
=== Usages ===
v353 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j317 index: j358  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v353 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
=== Inputs ===
address: v814 
=== Succesors ===
next: v356 
=== Usages ===
=== Predecessor ===
v350 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v814 #next: v356  <|@  <|@
f <@~|@floating>@ <|@
tid v815 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j317 
index: j358 
=== Succesors ===
=== Usages ===
v356 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j317 index: j358  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v356 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
=== Inputs ===
address: v815 
=== Succesors ===
next: v361 
=== Usages ===
=== Predecessor ===
v353 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v815 #next: v361  <|@  <|@
f <@~|@floating>@ <|@
tid v810 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j358 
index: - 
=== Succesors ===
=== Usages ===
v361 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j358 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v361 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v810 
value: i127 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v362 
=== Usages ===
=== Predecessor ===
v356 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v810 value: i127 stateAfter: - lastLocationAccess: - #next: v362  <|@  <|@
f <@~|@floating>@ <|@
tid v811 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j358 
index: - 
=== Succesors ===
=== Usages ===
v362 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j358 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v362 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v811 
value: j310 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v366 
=== Usages ===
=== Predecessor ===
v361 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v811 value: j310 stateAfter: - lastLocationAccess: - #next: v366  <|@  <|@
f <@~|@floating>@ <|@
tid v816 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j358 
index: - 
=== Succesors ===
=== Usages ===
v366 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j358 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v366 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v816 
value: v517 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v333 
=== Usages ===
=== Predecessor ===
v362 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v816 value: v517 stateAfter: - lastLocationAccess: - #next: v333  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v333 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: a334 
=== Usages ===
=== Predecessor ===
v366 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a334  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a334 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j358 
=== Succesors ===
next: v336 
=== Usages ===
a339 
=== Predecessor ===
v333 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j358 #next: v336  <|@  <|@
f <@*|@fixed>@ <|@
tid v336 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v337 
=== Predecessor ===
a334 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4583882089441867264
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a339 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v337 
values: a334 a335 
=== Succesors ===
=== Usages ===
v806 a294 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v337 values: a334 a335  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v337 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v336 v338 
=== Succesors ===
next: v666 
=== Usages ===
a339 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v336 v338 #next: v666  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v666 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v577 
=== Usages ===
j668 
=== Predecessor ===
v337 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v577  <|@  <|@
f <@~|@floating>@ <|@
tid v806 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a339 
index: - 
=== Succesors ===
=== Usages ===
j668 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a339 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j668 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v666 
address: v806 
=== Succesors ===
=== Usages ===
v841 v842 v843 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v666 address: v806  <|@  <|@
f <@~|@floating>@ <|@
tid v843 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j668 
index: - 
=== Succesors ===
=== Usages ===
v781 v783 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j668 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j532 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i127 
=== Succesors ===
=== Usages ===
j720 j716 j708 j712 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i127  <|@  <|@
f <@~|@floating>@ <|@
tid j708 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j532 
y: j707 
=== Succesors ===
=== Usages ===
v709 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j532 y: j707  <|@  <|@
f <@~|@floating>@ <|@
tid v709 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j708 
y: j266 
=== Succesors ===
=== Usages ===
v577 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j708 y: j266  <|@  <|@
f <@*|@fixed>@ <|@
tid v577 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v709 
=== Succesors ===
trueSuccessor: v576 
falseSuccessor: v575 
=== Usages ===
=== Predecessor ===
v666 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v709 #trueSuccessor: v576 #falseSuccessor: v575  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4574874890187126272
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v576 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v580 
=== Usages ===
=== Predecessor ===
v577 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v580  <|@  <|@
f <@*|@fixed>@ <|@
tid v580 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v565 
=== Predecessor ===
v576 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4581825872433506432
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v575 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v783 
=== Usages ===
=== Predecessor ===
v577 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v783  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v783 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v843 
value: v793 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v564 
=== Usages ===
=== Predecessor ===
v575 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v843 value: v793 stateAfter: - lastLocationAccess: - #next: v564  <|@  <|@
f <@*|@fixed>@ <|@
tid v564 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v565 
=== Predecessor ===
v783 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4583882089441867264
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j682 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [0 - 8] ⇈0000000000000008
valueDescription: i64
=== Inputs ===
merge: v565 
values: j364 j266 
=== Succesors ===
=== Usages ===
v713 j676 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v565 values: j364 j266  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v565 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v564 v580 
=== Succesors ===
next: v583 
=== Usages ===
j682 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v564 v580 #next: v583  <|@  <|@
f <@~|@floating>@ <|@
tid j712 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j532 
y: j711 
=== Succesors ===
=== Usages ===
v713 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j532 y: j711  <|@  <|@
f <@~|@floating>@ <|@
tid v713 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j712 
y: j682 
=== Succesors ===
=== Usages ===
v583 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j712 y: j682  <|@  <|@
f <@*|@fixed>@ <|@
tid v583 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v713 
=== Succesors ===
trueSuccessor: v582 
falseSuccessor: v581 
=== Usages ===
=== Predecessor ===
v565 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v713 #trueSuccessor: v582 #falseSuccessor: v581  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4574874890187126272
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v582 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v586 
=== Usages ===
=== Predecessor ===
v583 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v586  <|@  <|@
f <@*|@fixed>@ <|@
tid v586 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v569 
=== Predecessor ===
v582 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4581825872433506432
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v581 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v781 
=== Usages ===
=== Predecessor ===
v583 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v781  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v781 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v843 
value: v792 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v568 
=== Usages ===
=== Predecessor ===
v581 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v843 value: v792 stateAfter: - lastLocationAccess: - #next: v568  <|@  <|@
f <@*|@fixed>@ <|@
tid v568 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v569 
=== Predecessor ===
v781 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4583882089441867264
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j676 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [0 - 8] ⇈000000000000000c
valueDescription: i64
=== Inputs ===
merge: v569 
values: j687 j682 
=== Succesors ===
=== Usages ===
v842 j681 j669 v717 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v569 values: j687 j682  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v569 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v568 v586 
=== Succesors ===
next: v589 
=== Usages ===
j676 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v568 v586 #next: v589  <|@  <|@
f <@~|@floating>@ <|@
tid j716 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j532 
y: j715 
=== Succesors ===
=== Usages ===
v717 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j532 y: j715  <|@  <|@
f <@~|@floating>@ <|@
tid v717 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j716 
y: j676 
=== Succesors ===
=== Usages ===
v589 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j716 y: j676  <|@  <|@
f <@*|@fixed>@ <|@
tid v589 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v717 
=== Succesors ===
trueSuccessor: v588 
falseSuccessor: v587 
=== Usages ===
=== Predecessor ===
v569 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v717 #trueSuccessor: v588 #falseSuccessor: v587  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4574874890187126272
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v588 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v592 
=== Usages ===
=== Predecessor ===
v589 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v592  <|@  <|@
f <@*|@fixed>@ <|@
tid v592 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v572 
=== Predecessor ===
v588 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4581825872433506432
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v587 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v779 
=== Usages ===
=== Predecessor ===
v589 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v779  <|@  <|@
f <@~|@floating>@ <|@
tid v842 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j668 
index: j676 
=== Succesors ===
=== Usages ===
v779 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j668 index: j676  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v779 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v842 
value: v791 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v571 
=== Usages ===
=== Predecessor ===
v587 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v842 value: v791 stateAfter: - lastLocationAccess: - #next: v571  <|@  <|@
f <@~|@floating>@ <|@
tid j681 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [2 - 10] ⇊0000000000000002 ⇈000000000000000e
=== Inputs ===
x: j676 
y: j671 
=== Succesors ===
=== Usages ===
j669 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j676 y: j671  <|@  <|@
f <@*|@fixed>@ <|@
tid v571 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v572 
=== Predecessor ===
v779 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4583882089441867264
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j669 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [0 - 10] ⇈000000000000000e
valueDescription: i64
=== Inputs ===
merge: v572 
values: j681 j676 
=== Succesors ===
=== Usages ===
v841 v721 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v572 values: j681 j676  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v572 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v571 v592 
=== Succesors ===
next: v595 
=== Usages ===
j669 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v571 v592 #next: v595  <|@  <|@
f <@~|@floating>@ <|@
tid j720 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j532 
y: j719 
=== Succesors ===
=== Usages ===
v721 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j532 y: j719  <|@  <|@
f <@~|@floating>@ <|@
tid v721 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j720 
y: j669 
=== Succesors ===
=== Usages ===
v595 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j720 y: j669  <|@  <|@
f <@*|@fixed>@ <|@
tid v595 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v721 
=== Succesors ===
trueSuccessor: v594 
falseSuccessor: v593 
=== Usages ===
=== Predecessor ===
v572 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v721 #trueSuccessor: v594 #falseSuccessor: v593  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4574874890187126272
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v594 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v598 
=== Usages ===
=== Predecessor ===
v595 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v598  <|@  <|@
f <@*|@fixed>@ <|@
tid v598 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v558 
=== Predecessor ===
v594 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4581825872433506432
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v593 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v777 
=== Usages ===
=== Predecessor ===
v595 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v777  <|@  <|@
f <@~|@floating>@ <|@
tid v841 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j668 
index: j669 
=== Succesors ===
=== Usages ===
v777 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j668 index: j669  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v777 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v841 
value: i222 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v574 
=== Usages ===
=== Predecessor ===
v593 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v841 value: i222 stateAfter: - lastLocationAccess: - #next: v574  <|@  <|@
f <@*|@fixed>@ <|@
tid v574 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v558 
=== Predecessor ===
v777 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" 
    successors "B42" 
    xhandlers
    flags 
    probability 4583882089441867264
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v558 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v574 v598 
=== Succesors ===
next: a294 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v574 v598 #next: a294  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a294 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a339 
=== Succesors ===
next: v81 
=== Usages ===
a143 
=== Predecessor ===
v558 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a339 #next: v81  <|@  <|@
f <@~|@floating>@ <|@
tid i285 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 45
stableDimension: 0
stamp: i16 [45] ⇊000000000000002d ⇈000000000000002d
stampKind: i16
value: short[45|0x2d]
=== Inputs ===
=== Succesors ===
=== Usages ===
i286 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i77 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:439) [bci: 10]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
rawvalue: 45
stableDimension: 0
stamp: i32 [45] ⇊000000000000002d ⇈000000000000002d
stampKind: i32
value: int[45|0x2d]
=== Inputs ===
=== Succesors ===
=== Usages ===
i83 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:444) [bci: 17]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v80 
=== Predecessor ===
a294 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.Integer.toString(Integer.java:400) [bci: 15]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v58 
=== Succesors ===
next: v242 
=== Usages ===
=== Predecessor ===
v245 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v58 #next: v242  <|@  <|@
f <@*|@fixed>@ <|@
tid v242 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 171
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.Integer.toString(Integer.java:400) [bci: 15]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
reason: BoundsCheckException
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?60 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v244 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?60  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B23" 
    xhandlers
    flags 
    probability 4606925391673972304
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.toString(Integer.java:400) [bci: 23]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v40 
=== Usages ===
=== Predecessor ===
v14 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v40  <|@  <|@
tid ?56 <|@
d <@d|@=== Debug Properties ===
bci: 24
code: ResolvedJavaMethodBytecode<Integer.toString(int)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Integer.java
sourceLine: 400
stackSize: 0
=== Inputs ===
outerFrameState: ?39 
values: i168 - - 
=== Succesors ===
=== Usages ===
?43 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?39 values: i168 - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
at java.lang.Integer.toString(Integer.java:400) [bci: 24]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v41 
=== Predecessor ===
v13 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B25" 
    successors "B24" "B61" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4613125946991078910
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i42 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v41 
values: i10 i54 
=== Succesors ===
=== Usages ===
?43 v801 i54 v181 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v41 values: i10 i54  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 2.7169880105877717
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
at java.lang.Integer.toString(Integer.java:400) [bci: 24]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v40 
=== Succesors ===
next: v250 
=== Usages ===
i42 v48 v53 v249 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v40 #next: v250  <|@  <|@
tid ?43 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<Integer.stringSize(int)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Integer.java
sourceLine: 473
stackSize: 0
=== Inputs ===
outerFrameState: ?56 
values: i168 i42 
=== Succesors ===
=== Usages ===
v234 a396 v247 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?56 values: i168 i42  <|@  <|@
f <@~|@floating>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.Integer.toString(Integer.java:400) [bci: 24]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i42 
y: i169 
=== Succesors ===
=== Usages ===
v250 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i42 y: i169  <|@  <|@
f <@*|@fixed>@ <|@
tid v250 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.Integer.toString(Integer.java:400) [bci: 24]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v181 
=== Succesors ===
trueSuccessor: v246 
falseSuccessor: v249 
=== Usages ===
=== Predecessor ===
v41 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v181 #trueSuccessor: v246 #falseSuccessor: v249  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613125946991078910
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v246 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.Integer.toString(Integer.java:400) [bci: 24]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: i796 
=== Usages ===
i796 
=== Predecessor ===
v250 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i796  <|@  <|@
f <@~|@floating>@ <|@
tid v801 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a44 
index: i42 
=== Succesors ===
=== Usages ===
i796 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a44 index: i42  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i796 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.Integer.toString(Integer.java:400) [bci: 24]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v246 
address: v801 
=== Succesors ===
next: v51 
=== Usages ===
v46 
=== Predecessor ===
v246 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v246 address: v801 #next: v51  <|@  <|@
f <@~|@floating>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 8]
at java.lang.Integer.toString(Integer.java:400) [bci: 24]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i796 
y: i168 
=== Succesors ===
=== Usages ===
v51 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i796 y: i168  <|@  <|@
f <@~|@floating>@ <|@
tid i54 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:474) [bci: 13]
at java.lang.Integer.toString(Integer.java:400) [bci: 24]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: i32
=== Inputs ===
x: i42 
y: i19 
=== Succesors ===
=== Usages ===
i155 j599 i42 v415 i374 a396 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i42 y: i19  <|@  <|@
f <@*|@fixed>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 8]
at java.lang.Integer.toString(Integer.java:400) [bci: 24]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
trueSuccessorProbability: 0.6319453762390111
=== Inputs ===
condition: v46 
=== Succesors ===
trueSuccessor: v47 
falseSuccessor: v48 
=== Usages ===
=== Predecessor ===
i796 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v46 #trueSuccessor: v47 #falseSuccessor: v48  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4610190789490421972
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:472) [bci: 15]
at java.lang.Integer.toString(Integer.java:400) [bci: 24]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v234 
=== Usages ===
=== Predecessor ===
v51 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v234  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v234 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?43 
=== Succesors ===
next: v53 
=== Usages ===
=== Predecessor ===
v47 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?43 #next: v53  <|@  <|@
f <@*|@fixed>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
at java.lang.Integer.toString(Integer.java:400) [bci: 24]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
=== Inputs ===
loopBegin: v41 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v234 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v41  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4606925391673972303
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:474) [bci: 11]
at java.lang.Integer.toString(Integer.java:400) [bci: 24]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v41 
=== Succesors ===
next: j376 
=== Usages ===
=== Predecessor ===
v51 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v41 #next: j376  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j376 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j412 
=== Usages ===
v817 v818 
=== Predecessor ===
v48 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j412  <|@  <|@
f <@~|@floating>@ <|@
tid v817 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j376 
index: - 
=== Succesors ===
=== Usages ===
j412 v414 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j376 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j412 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v817 
=== Succesors ===
next: j413 
=== Usages ===
j380 v819 v820 a395 v825 v821 v822 v823 v824 
=== Predecessor ===
j376 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v817 #next: j413  <|@  <|@
f <@~|@floating>@ <|@
tid v818 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j376 
index: - 
=== Succesors ===
=== Usages ===
j413 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j376 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j413 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v818 
=== Succesors ===
next: v391 
=== Usages ===
v385 
=== Predecessor ===
j412 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v818 #next: v391  <|@  <|@
f <@~|@floating>@ <|@
tid i374 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i54 
y: i19 
=== Succesors ===
=== Usages ===
i403 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i54 y: i19  <|@  <|@
f <@~|@floating>@ <|@
tid i403 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i374 
y: i342 
=== Succesors ===
=== Usages ===
i375 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i374 y: i342  <|@  <|@
f <@~|@floating>@ <|@
tid i375 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i403 
y: i312 
=== Succesors ===
=== Usages ===
j379 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i403 y: i312  <|@  <|@
f <@~|@floating>@ <|@
tid j379 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i375 
=== Succesors ===
=== Usages ===
j380 v821 v822 v823 v824 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i375  <|@  <|@
f <@~|@floating>@ <|@
tid j380 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: i64
=== Inputs ===
x: j379 
y: j412 
=== Succesors ===
=== Usages ===
v385 v414 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j379 y: j412  <|@  <|@
f <@~|@floating>@ <|@
tid v385 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j413 
y: j380 
=== Succesors ===
=== Usages ===
v391 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j413 y: j380  <|@  <|@
f <@*|@fixed>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v385 
=== Succesors ===
trueSuccessor: v390 
falseSuccessor: v389 
=== Usages ===
=== Predecessor ===
j413 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v385 #trueSuccessor: v390 #falseSuccessor: v389  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4576753731943418813
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v390 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: a396 
=== Usages ===
=== Predecessor ===
v391 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a396  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a396 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?43 
arguments: v309 i54 i10 
=== Succesors ===
next: v399 
=== Usages ===
a400 
=== Predecessor ===
v390 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?43 arguments: v309 i54 i10 #next: v399  <|@  <|@
f <@*|@fixed>@ <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v398 
=== Predecessor ===
a396 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4606837889952685344
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v389 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v414 
=== Usages ===
=== Predecessor ===
v391 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v414  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v817 
value: j380 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v405 
=== Usages ===
=== Predecessor ===
v389 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v817 value: j380 stateAfter: - lastLocationAccess: - #next: v405  <|@  <|@
f <@~|@floating>@ <|@
tid v821 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j379 
index: j412 
=== Succesors ===
=== Usages ===
v405 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j379 index: j412  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
=== Inputs ===
address: v821 
=== Succesors ===
next: v407 
=== Usages ===
=== Predecessor ===
v414 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v821 #next: v407  <|@  <|@
f <@~|@floating>@ <|@
tid v822 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j379 
index: j412 
=== Succesors ===
=== Usages ===
v407 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j379 index: j412  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v407 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
=== Inputs ===
address: v822 
=== Succesors ===
next: v409 
=== Usages ===
=== Predecessor ===
v405 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v822 #next: v409  <|@  <|@
f <@~|@floating>@ <|@
tid v823 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j379 
index: j412 
=== Succesors ===
=== Usages ===
v409 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j379 index: j412  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v409 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
=== Inputs ===
address: v823 
=== Succesors ===
next: v411 
=== Usages ===
=== Predecessor ===
v407 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v823 #next: v411  <|@  <|@
f <@~|@floating>@ <|@
tid v824 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j379 
index: j412 
=== Succesors ===
=== Usages ===
v411 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j379 index: j412  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v411 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
=== Inputs ===
address: v824 
=== Succesors ===
next: v415 
=== Usages ===
=== Predecessor ===
v409 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v824 #next: v415  <|@  <|@
f <@~|@floating>@ <|@
tid v819 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j412 
index: - 
=== Succesors ===
=== Usages ===
v415 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j412 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v819 
value: i54 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v416 
=== Usages ===
=== Predecessor ===
v411 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v819 value: i54 stateAfter: - lastLocationAccess: - #next: v416  <|@  <|@
f <@~|@floating>@ <|@
tid v820 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j412 
index: - 
=== Succesors ===
=== Usages ===
v416 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j412 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v416 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v820 
value: j310 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v419 
=== Usages ===
=== Predecessor ===
v415 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v820 value: j310 stateAfter: - lastLocationAccess: - #next: v419  <|@  <|@
f <@~|@floating>@ <|@
tid v825 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j412 
index: - 
=== Succesors ===
=== Usages ===
v419 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j412 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v825 
value: v517 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v394 
=== Usages ===
=== Predecessor ===
v416 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v825 value: v517 stateAfter: - lastLocationAccess: - #next: v394  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v394 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: a395 
=== Usages ===
=== Predecessor ===
v419 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a395  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a395 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j412 
=== Succesors ===
next: v397 
=== Usages ===
a400 
=== Predecessor ===
v394 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j412 #next: v397  <|@  <|@
f <@*|@fixed>@ <|@
tid v397 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v398 
=== Predecessor ===
a395 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4606925391673972303
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a400 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v398 
values: a395 a396 
=== Succesors ===
=== Usages ===
v807 a298 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v398 values: a395 a396  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v397 v399 
=== Succesors ===
next: v724 
=== Usages ===
a400 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v397 v399 #next: v724  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v724 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v641 
=== Usages ===
j726 
=== Predecessor ===
v398 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v641  <|@  <|@
f <@~|@floating>@ <|@
tid v807 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a400 
index: - 
=== Succesors ===
=== Usages ===
j726 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a400 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j726 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v724 
address: v807 
=== Succesors ===
=== Usages ===
v844 v845 v846 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v724 address: v807  <|@  <|@
f <@~|@floating>@ <|@
tid v846 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j726 
index: - 
=== Succesors ===
=== Usages ===
v787 v788 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j726 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j599 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i54 
=== Succesors ===
=== Usages ===
j771 j768 j762 j765 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i54  <|@  <|@
f <@~|@floating>@ <|@
tid j762 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j599 
y: j707 
=== Succesors ===
=== Usages ===
v763 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j599 y: j707  <|@  <|@
f <@~|@floating>@ <|@
tid v763 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j762 
y: j266 
=== Succesors ===
=== Usages ===
v641 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j762 y: j266  <|@  <|@
f <@*|@fixed>@ <|@
tid v641 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v763 
=== Succesors ===
trueSuccessor: v640 
falseSuccessor: v639 
=== Usages ===
=== Predecessor ===
v724 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v763 #trueSuccessor: v640 #falseSuccessor: v639  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4597918192419231311
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v640 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v644 
=== Usages ===
=== Predecessor ===
v641 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v644  <|@  <|@
f <@*|@fixed>@ <|@
tid v644 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v630 
=== Predecessor ===
v640 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4604737848641798331
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v639 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v788 
=== Usages ===
=== Predecessor ===
v641 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v788  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v788 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v846 
value: v793 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v629 
=== Usages ===
=== Predecessor ===
v639 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v846 value: v793 stateAfter: - lastLocationAccess: - #next: v629  <|@  <|@
f <@*|@fixed>@ <|@
tid v629 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v630 
=== Predecessor ===
v788 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4606925391673972303
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j739 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [0 - 8] ⇈0000000000000008
valueDescription: i64
=== Inputs ===
merge: v630 
values: j364 j266 
=== Succesors ===
=== Usages ===
v766 j733 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v630 values: j364 j266  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v630 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v629 v644 
=== Succesors ===
next: v647 
=== Usages ===
j739 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v629 v644 #next: v647  <|@  <|@
f <@~|@floating>@ <|@
tid j765 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j599 
y: j711 
=== Succesors ===
=== Usages ===
v766 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j599 y: j711  <|@  <|@
f <@~|@floating>@ <|@
tid v766 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j765 
y: j739 
=== Succesors ===
=== Usages ===
v647 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j765 y: j739  <|@  <|@
f <@*|@fixed>@ <|@
tid v647 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v766 
=== Succesors ===
trueSuccessor: v646 
falseSuccessor: v645 
=== Usages ===
=== Predecessor ===
v630 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v766 #trueSuccessor: v646 #falseSuccessor: v645  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4597918192419231311
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v646 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v650 
=== Usages ===
=== Predecessor ===
v647 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v650  <|@  <|@
f <@*|@fixed>@ <|@
tid v650 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v633 
=== Predecessor ===
v646 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4604737848641798331
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v645 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v787 
=== Usages ===
=== Predecessor ===
v647 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v787  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v787 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v846 
value: v792 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v632 
=== Usages ===
=== Predecessor ===
v645 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v846 value: v792 stateAfter: - lastLocationAccess: - #next: v632  <|@  <|@
f <@*|@fixed>@ <|@
tid v632 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v633 
=== Predecessor ===
v787 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4606925391673972303
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j733 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [0 - 8] ⇈000000000000000c
valueDescription: i64
=== Inputs ===
merge: v633 
values: j687 j739 
=== Succesors ===
=== Usages ===
v845 j738 j727 v769 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v633 values: j687 j739  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v633 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v632 v650 
=== Succesors ===
next: v653 
=== Usages ===
j733 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v632 v650 #next: v653  <|@  <|@
f <@~|@floating>@ <|@
tid j768 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j599 
y: j715 
=== Succesors ===
=== Usages ===
v769 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j599 y: j715  <|@  <|@
f <@~|@floating>@ <|@
tid v769 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j768 
y: j733 
=== Succesors ===
=== Usages ===
v653 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j768 y: j733  <|@  <|@
f <@*|@fixed>@ <|@
tid v653 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v769 
=== Succesors ===
trueSuccessor: v652 
falseSuccessor: v651 
=== Usages ===
=== Predecessor ===
v633 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v769 #trueSuccessor: v652 #falseSuccessor: v651  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4597918192419231311
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v652 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v656 
=== Usages ===
=== Predecessor ===
v653 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v656  <|@  <|@
f <@*|@fixed>@ <|@
tid v656 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v636 
=== Predecessor ===
v652 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4604737848641798331
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v651 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v786 
=== Usages ===
=== Predecessor ===
v653 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v786  <|@  <|@
f <@~|@floating>@ <|@
tid v845 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j726 
index: j733 
=== Succesors ===
=== Usages ===
v786 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j726 index: j733  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v786 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v845 
value: v791 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v635 
=== Usages ===
=== Predecessor ===
v651 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v845 value: v791 stateAfter: - lastLocationAccess: - #next: v635  <|@  <|@
f <@~|@floating>@ <|@
tid j738 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [2 - 10] ⇊0000000000000002 ⇈000000000000000e
=== Inputs ===
x: j733 
y: j671 
=== Succesors ===
=== Usages ===
j727 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j733 y: j671  <|@  <|@
f <@*|@fixed>@ <|@
tid v635 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v636 
=== Predecessor ===
v786 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4606925391673972303
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j727 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [0 - 10] ⇈000000000000000e
valueDescription: i64
=== Inputs ===
merge: v636 
values: j738 j733 
=== Succesors ===
=== Usages ===
v844 v772 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v636 values: j738 j733  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v636 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v635 v656 
=== Succesors ===
next: v659 
=== Usages ===
j727 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v635 v656 #next: v659  <|@  <|@
f <@~|@floating>@ <|@
tid j771 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j599 
y: j719 
=== Succesors ===
=== Usages ===
v772 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j599 y: j719  <|@  <|@
f <@~|@floating>@ <|@
tid v772 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j771 
y: j727 
=== Succesors ===
=== Usages ===
v659 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j771 y: j727  <|@  <|@
f <@*|@fixed>@ <|@
tid v659 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v772 
=== Succesors ===
trueSuccessor: v658 
falseSuccessor: v657 
=== Usages ===
=== Predecessor ===
v636 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v772 #trueSuccessor: v658 #falseSuccessor: v657  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4597918192419231311
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v658 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v662 
=== Usages ===
=== Predecessor ===
v659 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v662  <|@  <|@
f <@*|@fixed>@ <|@
tid v662 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v623 
=== Predecessor ===
v658 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4604737848641798331
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v657 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v785 
=== Usages ===
=== Predecessor ===
v659 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v785  <|@  <|@
f <@~|@floating>@ <|@
tid v844 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j726 
index: j727 
=== Succesors ===
=== Usages ===
v785 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j726 index: j727  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v785 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v844 
value: i222 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v638 
=== Usages ===
=== Predecessor ===
v657 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v844 value: i222 stateAfter: - lastLocationAccess: - #next: v638  <|@  <|@
f <@*|@fixed>@ <|@
tid v638 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v623 
=== Predecessor ===
v785 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4606925391673972303
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v623 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v638 v662 
=== Succesors ===
next: a298 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v638 v662 #next: a298  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a298 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a400 
=== Succesors ===
next: v164 
=== Usages ===
a143 
=== Predecessor ===
v623 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a400 #next: v164  <|@  <|@
f <@*|@fixed>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v80 
=== Predecessor ===
a298 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B20" "B41" 
    successors "B43" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i82 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:444) [bci: 17]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: i32 [-32768 - 32768]
valueDescription: i32
=== Inputs ===
merge: v80 
values: i78 i168 
=== Succesors ===
=== Usages ===
i88 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v80 values: i78 i168  <|@  <|@
f <@~|@floating>@ <|@
tid i83 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:444) [bci: 17]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: i32 [0 - 45] ⇈000000000000002d
valueDescription: i32
=== Inputs ===
merge: v80 
values: i77 i10 
=== Succesors ===
=== Usages ===
v113 ?90 ?104 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v80 values: i77 i10  <|@  <|@
f <@~|@floating>@ <|@
tid a143 <|@
d <@d|@=== Debug Properties ===
stamp: a!# [C
valueDescription: a -
=== Inputs ===
merge: v80 
values: a294 a298 
=== Succesors ===
=== Usages ===
?122 ?104 v803 v805 a271 v804 ?90 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v80 values: a294 a298  <|@  <|@
f <@~|@floating>@ <|@
tid i155 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v80 
values: i127 i54 
=== Succesors ===
=== Usages ===
i89 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v80 values: i127 i54  <|@  <|@
f <@~|@floating>@ <|@
tid i286 <|@
d <@d|@=== Debug Properties ===
stamp: i16 [0 - 45] ⇈000000000000002d
valueDescription: i16
=== Inputs ===
merge: v80 
values: i285 i222 
=== Succesors ===
=== Usages ===
v220 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v80 values: i285 i222  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:444) [bci: 17]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v81 v164 
=== Succesors ===
next: i797 
=== Usages ===
i82 i83 a143 i155 i286 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v81 v164 #next: i797  <|@  <|@
f <@~|@floating>@ <|@
tid v803 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a143 
index: - 
=== Succesors ===
=== Usages ===
i797 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a143 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i797 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 106]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v803 
=== Succesors ===
next: v86 
=== Usages ===
v202 v212 
=== Predecessor ===
v80 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v803 #next: v86  <|@  <|@
tid ?122 <|@
d <@d|@=== Debug Properties ===
bci: 35
code: ResolvedJavaMethodBytecode<Integer.toString(int)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Integer.java
sourceLine: 402
stackSize: 0
=== Inputs ===
outerFrameState: ?39 
values: - - a143 
=== Succesors ===
=== Usages ===
?119 ?90 ?104 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?39 values: - - a143  <|@  <|@
f <@~|@floating>@ <|@
tid i105 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:460) [bci: 110]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
rawvalue: -524288
stableDimension: 0
stamp: i32 [-524288] ⇊00000000fff80000 ⇈00000000fff80000
stampKind: i32
value: int[-524288|0xfffffffffff80000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v106 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a101 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 100]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
rawvalue: char[36]{0, 1, 2, 3, 4, ...}
stableDimension: 0
stamp: a!# [C
stampKind: a -
value: Object[char[36]{0, 1, 2, 3, 4, ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v802 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i85 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 47]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i100 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i95 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:457) [bci: 85]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
rawvalue: 3
stableDimension: 0
stamp: i32 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
i96 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i91 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:456) [bci: 76]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
rawvalue: 52429
stableDimension: 0
stamp: i32 [52429] ⇊000000000000cccd ⇈000000000000cccd
stampKind: i32
value: int[52429|0xcccd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i92 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i93 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:456) [bci: 79]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
rawvalue: 19
stableDimension: 0
stamp: i32 [19] ⇊0000000000000013 ⇈0000000000000013
stampKind: i32
value: int[19|0x13]
=== Inputs ===
=== Succesors ===
=== Usages ===
i94 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i190 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 105]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
rawvalue: 36
stableDimension: 0
stamp: i32 [36] ⇊0000000000000024 ⇈0000000000000024
stampKind: i32
value: int[36|0x24]
=== Inputs ===
=== Succesors ===
=== Usages ===
v191 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:456) [bci: 75]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v87 
=== Predecessor ===
i797 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B57" 
    successors "B44" "B59" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4612307203293370227
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i88 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-32768 - 32768]
valueDescription: i32
=== Inputs ===
merge: v87 
values: i82 i94 
=== Succesors ===
=== Usages ===
?90 i92 i99 ?104 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v87 values: i82 i94  <|@  <|@
f <@~|@floating>@ <|@
tid i89 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v87 
values: i155 i100 
=== Succesors ===
=== Usages ===
?90 i100 i240 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v87 values: i155 i100  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 2.2758614963049073
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:456) [bci: 75]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v86 
=== Succesors ===
next: v255 
=== Usages ===
i88 i89 v107 v110 v259 v254 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v86 #next: v255  <|@  <|@
f <@~|@floating>@ <|@
tid i92 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$125/271184744@39a592fe
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:456) [bci: 78]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: i32 [-1717993472 - 1717993472]
=== Inputs ===
x: i88 
y: i91 
=== Succesors ===
=== Usages ===
i94 v106 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: i88 y: i91  <|@  <|@
f <@~|@floating>@ <|@
tid i94 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:456) [bci: 81]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: i32 [0 - 8191] ⇈0000000000001fff
=== Inputs ===
x: i92 
y: i93 
=== Succesors ===
=== Usages ===
i88 i96 i97 ?104 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i92 y: i93  <|@  <|@
f <@~|@floating>@ <|@
tid i96 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:457) [bci: 86]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: i32 [0 - 65528] ⇈000000000000fff8
=== Inputs ===
x: i94 
y: i95 
=== Succesors ===
=== Usages ===
i98 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i94 y: i95  <|@  <|@
f <@~|@floating>@ <|@
tid i97 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:457) [bci: 89]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: i32 [0 - 16382] ⇈0000000000003ffe
=== Inputs ===
x: i94 
y: i19 
=== Succesors ===
=== Usages ===
i98 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i94 y: i19  <|@  <|@
f <@~|@floating>@ <|@
tid i98 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:457) [bci: 90]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: i32 [0 - 81910] ⇈000000000001fffe
=== Inputs ===
x: i96 
y: i97 
=== Succesors ===
=== Usages ===
i99 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i96 y: i97  <|@  <|@
f <@~|@floating>@ <|@
tid i99 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:457) [bci: 91]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: i32 [-114678 - 32768]
=== Inputs ===
x: i88 
y: i98 
=== Succesors ===
=== Usages ===
v802 ?104 v191 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i88 y: i98  <|@  <|@
f <@~|@floating>@ <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 105]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i99 
y: i190 
=== Succesors ===
=== Usages ===
v255 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i99 y: i190  <|@  <|@
f <@*|@fixed>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 105]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v191 
=== Succesors ===
trueSuccessor: v251 
falseSuccessor: v254 
=== Usages ===
=== Predecessor ===
v87 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v191 #trueSuccessor: v251 #falseSuccessor: v254  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B58" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4612307203293370227
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v251 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 105]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v260 
=== Usages ===
i798 
=== Predecessor ===
v255 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v260  <|@  <|@
f <@~|@floating>@ <|@
tid i100 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 95]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: i32
=== Inputs ===
x: i89 
y: i85 
=== Succesors ===
=== Usages ===
i89 v804 ?104 v202 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i89 y: i85  <|@  <|@
f <@~|@floating>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 106]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i100 
y: i797 
=== Succesors ===
=== Usages ===
v260 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i100 y: i797  <|@  <|@
f <@*|@fixed>@ <|@
tid v260 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 106]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v202 
=== Succesors ===
trueSuccessor: v256 
falseSuccessor: v259 
=== Usages ===
=== Predecessor ===
v251 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v202 #trueSuccessor: v256 #falseSuccessor: v259  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B57" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4612307203293370227
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v256 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 106]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: i798 
=== Usages ===
v210 
=== Predecessor ===
v260 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i798  <|@  <|@
f <@~|@floating>@ <|@
tid v802 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a101 
index: i99 
=== Succesors ===
=== Usages ===
i798 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a101 index: i99  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i798 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 105]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v251 
address: v802 
=== Succesors ===
next: v210 
=== Usages ===
v210 
=== Predecessor ===
v256 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v251 address: v802 #next: v210  <|@  <|@
f <@~|@floating>@ <|@
tid v804 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a143 
index: i100 
=== Succesors ===
=== Usages ===
v210 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a143 index: i100  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 106]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v256 
address: v804 
value: i798 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v112 
=== Usages ===
=== Predecessor ===
i798 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v256 address: v804 value: i798 stateAfter: - lastLocationAccess: - #next: v112  <|@  <|@
tid ?104 <|@
d <@d|@=== Debug Properties ===
bci: 107
code: ResolvedJavaMethodBytecode<Integer.getChars(int, int, char[])>
duringCall: false
localsSize: 7
locksSize: 0
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 106]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
rethrowException: false
sourceFile: Integer.java
sourceLine: 459
stackSize: 0
=== Inputs ===
outerFrameState: ?122 
values: i88 - a143 i94 i99 i100 i83 
=== Succesors ===
=== Usages ===
v236 a442 v262 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?122 values: i88 - a143 i94 i99 i100 i83  <|@  <|@
f <@~|@floating>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:460) [bci: 110]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
=== Inputs ===
x: i92 
y: i105 
=== Succesors ===
=== Usages ===
v112 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: i92 y: i105  <|@  <|@
f <@*|@fixed>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:460) [bci: 110]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
trueSuccessorProbability: 0.43939404995585263
=== Inputs ===
condition: v106 
=== Succesors ===
trueSuccessor: v107 
falseSuccessor: v111 
=== Usages ===
=== Predecessor ===
v210 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v106 #trueSuccessor: v107 #falseSuccessor: v111  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B51" 
    xhandlers
    flags 
    probability 4607182418800017406
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:460) [bci: 113]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v87 
=== Succesors ===
next: v116 
=== Usages ===
=== Predecessor ===
v112 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v87 #next: v116  <|@  <|@
f <@~|@floating>@ <|@
tid a271 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n!# [C
=== Inputs ===
value: a143 
=== Succesors ===
=== Usages ===
v472 v514 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a143  <|@  <|@
f <@~|@floating>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:462) [bci: 118]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i83 
y: i10 
=== Succesors ===
=== Usages ===
v116 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i83 y: i10  <|@  <|@
f <@~|@floating>@ <|@
tid v523 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v468 v510 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v458 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/lang/String;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j502 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j502 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v458 
=== Succesors ===
=== Usages ===
v832 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v458  <|@  <|@
f <@~|@floating>@ <|@
tid v832 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j502 
index: - 
=== Succesors ===
=== Usages ===
j506 j464 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j502 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v428 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a442 a486 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j518 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j519 j526 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:462) [bci: 118]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
trueSuccessorProbability: 0.9779119300489093
=== Inputs ===
condition: v113 
=== Succesors ===
trueSuccessor: v114 
falseSuccessor: v115 
=== Usages ===
=== Predecessor ===
v107 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v113 #trueSuccessor: v114 #falseSuccessor: v115  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4606983467152815275
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:465) [bci: 130]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: j430 
=== Usages ===
=== Predecessor ===
v116 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j430  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j430 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j446 
=== Usages ===
v826 v827 
=== Predecessor ===
v114 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j446  <|@  <|@
f <@~|@floating>@ <|@
tid v826 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j430 
index: - 
=== Succesors ===
=== Usages ===
j446 v448 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j430 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j446 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v826 
=== Succesors ===
next: j447 
=== Usages ===
j519 j452 v835 
=== Predecessor ===
j430 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v826 #next: j447  <|@  <|@
f <@~|@floating>@ <|@
tid v827 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j430 
index: - 
=== Succesors ===
=== Usages ===
j447 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j430 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j447 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v827 
=== Succesors ===
next: v438 
=== Usages ===
v435 
=== Predecessor ===
j446 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v827 #next: v438  <|@  <|@
f <@~|@floating>@ <|@
tid j519 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j446 
y: j518 
=== Succesors ===
=== Usages ===
v435 v448 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j446 y: j518  <|@  <|@
f <@~|@floating>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j447 
y: j519 
=== Succesors ===
=== Usages ===
v438 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j447 y: j519  <|@  <|@
f <@*|@fixed>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v435 
=== Succesors ===
trueSuccessor: v436 
falseSuccessor: v437 
=== Usages ===
=== Predecessor ===
j447 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v435 #trueSuccessor: v436 #falseSuccessor: v437  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4576790900249878315
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v436 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a442 
=== Usages ===
=== Predecessor ===
v438 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a442  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a442 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?104 
arguments: v428 i126 i19 
=== Succesors ===
next: j443 
=== Usages ===
j443 
=== Predecessor ===
v436 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?104 arguments: v428 i126 i19 #next: j443  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j443 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a442 
=== Succesors ===
next: v453 
=== Usages ===
j452 
=== Predecessor ===
a442 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a442 #next: v453  <|@  <|@
f <@*|@fixed>@ <|@
tid v453 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v450 
=== Predecessor ===
j443 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4606895384676739886
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v437 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v448 
=== Usages ===
=== Predecessor ===
v438 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v448  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v448 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v826 
value: j519 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v445 
=== Usages ===
=== Predecessor ===
v437 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v826 value: j519 stateAfter: - lastLocationAccess: - #next: v445  <|@  <|@
f <@~|@floating>@ <|@
tid v835 <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j446 
index: - 
=== Succesors ===
=== Usages ===
v445 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j446 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v445 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v835 
=== Succesors ===
next: v451 
=== Usages ===
=== Predecessor ===
v448 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v835 #next: v451  <|@  <|@
f <@*|@fixed>@ <|@
tid v451 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v450 
=== Predecessor ===
v445 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B48" 
    successors 
    xhandlers
    flags 
    probability 4606983467152815275
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j452 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v450 
values: j446 j443 
=== Succesors ===
=== Usages ===
v829 v828 a268 v836 v837 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v450 values: j446 j443  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v450 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v451 v453 
=== Succesors ===
next: a268 
=== Usages ===
j452 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v451 v453 #next: a268  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a268 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j452 
=== Succesors ===
next: j464 
=== Usages ===
a274 
=== Predecessor ===
v450 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j452 #next: j464  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j464 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v832 
=== Succesors ===
next: v465 
=== Usages ===
v465 
=== Predecessor ===
a268 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v832 #next: v465  <|@  <|@
f <@~|@floating>@ <|@
tid v828 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j452 
index: - 
=== Succesors ===
=== Usages ===
v465 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j452 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v465 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v828 
value: j464 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v468 
=== Usages ===
=== Predecessor ===
j464 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v828 value: j464 stateAfter: - lastLocationAccess: - #next: v468  <|@  <|@
f <@~|@floating>@ <|@
tid v829 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j452 
index: - 
=== Succesors ===
=== Usages ===
v468 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j452 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v468 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v829 
value: v523 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v472 
=== Usages ===
=== Predecessor ===
v465 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v829 value: v523 stateAfter: - lastLocationAccess: - #next: v472  <|@  <|@
f <@~|@floating>@ <|@
tid v836 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j452 
index: - 
=== Succesors ===
=== Usages ===
v472 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j452 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v472 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v836 
value: a271 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v474 
=== Usages ===
=== Predecessor ===
v468 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v836 value: a271 stateAfter: - lastLocationAccess: - #next: v474  <|@  <|@
f <@~|@floating>@ <|@
tid v837 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j452 
index: - 
=== Succesors ===
=== Usages ===
v474 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j452 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v474 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v837 
value: i10 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a274 
=== Usages ===
=== Predecessor ===
v472 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v837 value: i10 stateAfter: - lastLocationAccess: - #next: a274  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a274 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a268 
=== Succesors ===
next: v275 
=== Usages ===
v133 
=== Predecessor ===
v474 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a268 #next: v275  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v275 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v133 
=== Usages ===
=== Predecessor ===
a274 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v133  <|@  <|@
f <@*|@fixed>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Short.toString(Short.java:388) [bci: 7]
stamp: void
=== Inputs ===
result: a274 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v275 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a274 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B52" "B56" 
    xhandlers
    flags 
    probability 4582023674118892127
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:463) [bci: 121]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v264 
=== Usages ===
=== Predecessor ===
v116 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v264  <|@  <|@
f <@~|@floating>@ <|@
tid i239 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:463) [bci: 122]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
rawvalue: -2
stableDimension: 0
stamp: i32 [-2] ⇊00000000fffffffe ⇈00000000fffffffe
stampKind: i32
value: int[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
i240 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i240 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:463) [bci: 122]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: i32
=== Inputs ===
x: i89 
y: i239 
=== Succesors ===
=== Usages ===
v805 v212 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i89 y: i239  <|@  <|@
f <@~|@floating>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:463) [bci: 129]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i240 
y: i797 
=== Succesors ===
=== Usages ===
v264 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i240 y: i797  <|@  <|@
f <@*|@fixed>@ <|@
tid v264 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:463) [bci: 129]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v212 
=== Succesors ===
trueSuccessor: v261 
falseSuccessor: v263 
=== Usages ===
=== Predecessor ===
v115 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v212 #trueSuccessor: v261 #falseSuccessor: v263  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4582023674118892127
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v261 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:463) [bci: 129]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v220 
=== Usages ===
v220 
=== Predecessor ===
v264 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v220  <|@  <|@
f <@~|@floating>@ <|@
tid v805 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a143 
index: i240 
=== Succesors ===
=== Usages ===
v220 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a143 index: i240  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v220 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:463) [bci: 129]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v261 
address: v805 
value: i286 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j475 
=== Usages ===
=== Predecessor ===
v261 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v261 address: v805 value: i286 stateAfter: - lastLocationAccess: - #next: j475  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j475 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j490 
=== Usages ===
v830 v831 
=== Predecessor ===
v220 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j490  <|@  <|@
f <@~|@floating>@ <|@
tid v830 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j475 
index: - 
=== Succesors ===
=== Usages ===
j490 v492 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j475 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j490 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v830 
=== Succesors ===
next: j491 
=== Usages ===
j526 j496 v838 
=== Predecessor ===
j475 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v830 #next: j491  <|@  <|@
f <@~|@floating>@ <|@
tid v831 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j475 
index: - 
=== Succesors ===
=== Usages ===
j491 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j475 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j491 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v831 
=== Succesors ===
next: v483 
=== Usages ===
v480 
=== Predecessor ===
j490 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v831 #next: v483  <|@  <|@
f <@~|@floating>@ <|@
tid j526 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j490 
y: j518 
=== Succesors ===
=== Usages ===
v480 v492 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j490 y: j518  <|@  <|@
f <@~|@floating>@ <|@
tid v480 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j491 
y: j526 
=== Succesors ===
=== Usages ===
v483 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j491 y: j526  <|@  <|@
f <@*|@fixed>@ <|@
tid v483 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v480 
=== Succesors ===
trueSuccessor: v481 
falseSuccessor: v482 
=== Usages ===
=== Predecessor ===
j491 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v480 #trueSuccessor: v481 #falseSuccessor: v482  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4552281083486229756
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v481 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a486 
=== Usages ===
=== Predecessor ===
v483 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a486  <|@  <|@
tid ?119 <|@
d <@d|@=== Debug Properties ===
bci: 130
code: ResolvedJavaMethodBytecode<Integer.getChars(int, int, char[])>
duringCall: false
localsSize: 7
locksSize: 0
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:463) [bci: 129]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
rethrowException: false
sourceFile: Integer.java
sourceLine: 465
stackSize: 0
=== Inputs ===
outerFrameState: ?122 
values: - - - - - - - 
=== Succesors ===
=== Usages ===
a486 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?122 values: - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a486 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?119 
arguments: v428 i126 i19 
=== Succesors ===
next: j487 
=== Usages ===
j487 
=== Predecessor ===
v481 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?119 arguments: v428 i126 i19 #next: j487  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j487 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a486 
=== Succesors ===
next: v497 
=== Usages ===
j496 
=== Predecessor ===
a486 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a486 #next: v497  <|@  <|@
f <@*|@fixed>@ <|@
tid v497 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v494 
=== Predecessor ===
j487 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4581960009591787445
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v482 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v492 
=== Usages ===
=== Predecessor ===
v483 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v492  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v492 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v830 
value: j526 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v489 
=== Usages ===
=== Predecessor ===
v482 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v830 value: j526 stateAfter: - lastLocationAccess: - #next: v489  <|@  <|@
f <@~|@floating>@ <|@
tid v838 <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j490 
index: - 
=== Succesors ===
=== Usages ===
v489 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j490 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v489 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v838 
=== Succesors ===
next: v495 
=== Usages ===
=== Predecessor ===
v492 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v838 #next: v495  <|@  <|@
f <@*|@fixed>@ <|@
tid v495 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v494 
=== Predecessor ===
v489 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B53" 
    successors 
    xhandlers
    flags 
    probability 4582023674118892127
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j496 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v494 
values: j490 j487 
=== Succesors ===
=== Usages ===
v834 v833 a278 v839 v840 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v494 values: j490 j487  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v494 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v495 v497 
=== Succesors ===
next: a278 
=== Usages ===
j496 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v495 v497 #next: a278  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a278 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j496 
=== Succesors ===
next: j506 
=== Usages ===
a283 
=== Predecessor ===
v494 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j496 #next: j506  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j506 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v832 
=== Succesors ===
next: v507 
=== Usages ===
v507 
=== Predecessor ===
a278 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v832 #next: v507  <|@  <|@
f <@~|@floating>@ <|@
tid v833 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j496 
index: - 
=== Succesors ===
=== Usages ===
v507 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j496 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v507 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v833 
value: j506 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v510 
=== Usages ===
=== Predecessor ===
j506 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v833 value: j506 stateAfter: - lastLocationAccess: - #next: v510  <|@  <|@
f <@~|@floating>@ <|@
tid v834 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j496 
index: - 
=== Succesors ===
=== Usages ===
v510 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j496 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v510 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v834 
value: v523 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v514 
=== Usages ===
=== Predecessor ===
v507 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v834 value: v523 stateAfter: - lastLocationAccess: - #next: v514  <|@  <|@
f <@~|@floating>@ <|@
tid v839 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j496 
index: - 
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j496 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v839 
value: a271 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v516 
=== Usages ===
=== Predecessor ===
v510 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v839 value: a271 stateAfter: - lastLocationAccess: - #next: v516  <|@  <|@
f <@~|@floating>@ <|@
tid v840 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j496 
index: - 
=== Succesors ===
=== Usages ===
v516 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j496 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v516 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v840 
value: i10 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a283 
=== Usages ===
=== Predecessor ===
v514 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v840 value: i10 stateAfter: - lastLocationAccess: - #next: a283  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a283 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a278 
=== Succesors ===
next: v284 
=== Usages ===
v6 
=== Predecessor ===
v516 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a278 #next: v284  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v284 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v6 
=== Usages ===
=== Predecessor ===
a283 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v6  <|@  <|@
f <@*|@fixed>@ <|@
tid v6 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Short.toString(Short.java:388) [bci: 7]
stamp: void
=== Inputs ===
result: a283 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v284 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a283 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v263 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:463) [bci: 129]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v262 
=== Usages ===
=== Predecessor ===
v264 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v262  <|@  <|@
f <@*|@fixed>@ <|@
tid v262 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 213
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:463) [bci: 129]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
reason: BoundsCheckException
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?104 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v263 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?104  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B43" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4608424788531982055
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:456) [bci: 75]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v236 
=== Usages ===
=== Predecessor ===
v112 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v236  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v236 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?104 
=== Succesors ===
next: v110 
=== Usages ===
=== Predecessor ===
v111 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?104 #next: v110  <|@  <|@
f <@*|@fixed>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:456) [bci: 75]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
=== Inputs ===
loopBegin: v87 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v236 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v87  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v259 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 106]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v87 
=== Succesors ===
next: v307 
=== Usages ===
=== Predecessor ===
v260 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v87 #next: v307  <|@  <|@
f <@~|@floating>@ <|@
tid i308 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -51995
stableDimension: 0
stamp: i32 [-51995] ⇊00000000ffff34e5 ⇈00000000ffff34e5
stampKind: i32
value: int[-51995|0xffffffffffff34e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i304 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v307 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v300 
=== Predecessor ===
v259 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v254 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 105]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v87 
=== Succesors ===
next: v301 
=== Usages ===
=== Predecessor ===
v255 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v87 #next: v301  <|@  <|@
f <@~|@floating>@ <|@
tid i302 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -49179
stableDimension: 0
stamp: i32 [-49179] ⇊00000000ffff3fe5 ⇈00000000ffff3fe5
stampKind: i32
value: int[-49179|0xffffffffffff3fe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i304 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v301 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v300 
=== Predecessor ===
v254 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B58" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i304 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-51995 - -49179] ⇊00000000ffff34e5 ⇈00000000ffff3fe5
valueDescription: i32
=== Inputs ===
merge: v300 
values: i302 i308 
=== Succesors ===
=== Usages ===
v306 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v300 values: i302 i308  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v301 v307 
=== Succesors ===
next: v306 
=== Usages ===
i304 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v301 v307 #next: v306  <|@  <|@
tid ?90 <|@
d <@d|@=== Debug Properties ===
bci: 75
code: ResolvedJavaMethodBytecode<Integer.getChars(int, int, char[])>
duringCall: false
localsSize: 7
locksSize: 0
rethrowException: false
sourceFile: Integer.java
sourceLine: 456
stackSize: 0
=== Inputs ===
outerFrameState: ?122 
values: i88 - a143 - - i89 i83 
=== Succesors ===
=== Usages ===
v306 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?122 values: i88 - a143 - - i89 i83  <|@  <|@
f <@~|@floating>@ <|@
tid a303 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v306 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v306 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?90 
actionAndReason: i304 
speculation: a303 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v300 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?90 actionAndReason: i304 speculation: a303  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v249 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.Integer.toString(Integer.java:400) [bci: 24]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v41 
=== Succesors ===
next: v247 
=== Usages ===
=== Predecessor ===
v250 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v41 #next: v247  <|@  <|@
f <@*|@fixed>@ <|@
tid v247 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 182
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.Integer.toString(Integer.java:400) [bci: 24]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
reason: BoundsCheckException
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?43 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v249 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?43  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i794 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: i794  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/lang/Short;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v799 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v799 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i794 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i794 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Short.value
nodeSourcePosition: at java.lang.Short.toString(Short.java:388) [bci: 1]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: - 
address: v799 
=== Succesors ===
next: v14 
=== Usages ===
i168 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v799 #next: v14  <|@  <|@
f <@~|@floating>@ <|@
tid i168 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 16
nodeSourcePosition: at java.lang.Short.toString(Short.java:388) [bci: 1]
resultBits: 32
stamp: i32 [-32768 - 32767]
=== Inputs ===
value: i794 
=== Succesors ===
=== Usages ===
?43 i78 v73 ?72 v46 ?56 i82 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i794  <|@  <|@
f <@~|@floating>@ <|@
tid i10 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.toString(Integer.java:400) [bci: 10]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v113 i42 i59 v73 i83 v516 v474 a335 a396 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:438) [bci: 7]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i168 
y: i10 
=== Succesors ===
=== Usages ===
v14 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i168 y: i10  <|@  <|@
f <@~|@floating>@ <|@
tid i222 <|@
result short[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
rawvalue: 0
stableDimension: 0
stamp: i16 [0] ⇈0000000000000000
stampKind: i16
value: short[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i286 v777 v785 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j719 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j720 j771 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j671 <|@
result long[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j681 j738 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v791 <|@
result v2|V32_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16>
value: SIMD<0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v779 v786 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j715 <|@
result long[-2|0xfffffffffffffffe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j716 j768 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j687 <|@
result long[4|0x4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j676 j733 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v792 <|@
result v3|V64_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v781 v787 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j711 <|@
result long[-4|0xfffffffffffffffc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j712 j765 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j364 <|@
result long[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j739 j682 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v793 <|@
result v4|V128_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v783 v788 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j707 <|@
result long[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j708 j762 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j266 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v763 j739 v709 j682 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v517 <|@
result meta{HotSpotType<[C, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
rawvalue: meta{HotSpotType<[C, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[C, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v366 v419 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j310 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v362 v416 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v309 <|@
result v5|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
rawvalue: meta{HotSpotType<[C, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[C, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a335 a396 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i126 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.toString(Integer.java:400) [bci: 19]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i127 a486 a442 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i19 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.toString(Integer.java:400) [bci: 18]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i97 a486 i54 i68 i374 a442 i311 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i342 <|@
result int[23|0x17] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i343 i403 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i312 <|@
result int[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i313 i375 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?39 <|@
d <@d|@=== Debug Properties ===
bci: 4
code: ResolvedJavaMethodBytecode<Short.toString()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: Short.java
sourceLine: 388
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - 
=== Succesors ===
=== Usages ===
?72 ?56 ?122 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: -  <|@  <|@
f <@~|@floating>@ <|@
tid a44 <|@
result v6|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 3]
at java.lang.Integer.toString(Integer.java:400) [bci: 24]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
rawvalue: int[10]{9, 99, 999, 9999, 99999, ...}
stableDimension: 0
stamp: a!# [I
stampKind: a -
value: Object[int[10]{9, 99, 999, 9999, 99999, ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v801 v800 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i169 <|@
result int[10|0xa] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.Integer.toString(Integer.java:400) [bci: 15]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
rawvalue: 10
stableDimension: 0
stamp: i32 [10] ⇊000000000000000a ⇈000000000000000a
stampKind: i32
value: int[10|0xa]
=== Inputs ===
=== Succesors ===
=== Usages ===
v170 v181 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.toString(Integer.java:400) [bci: 10]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
trueSuccessorProbability: 0.02853574332885067
=== Inputs ===
condition: v73 
=== Succesors ===
trueSuccessor: v12 
falseSuccessor: v13 
=== Usages ===
=== Predecessor ===
i794 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v73 #trueSuccessor: v12 #falseSuccessor: v13  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@3a0c784e slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVSX [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr   -1  <|@ instruction v3|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction v4|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[10]{9, 99, 999, 9999, 99999, ...}] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.02853574332885067 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4583882089441867264
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.toString(Integer.java:400) [bci: 13]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v57 
=== Usages ===
=== Predecessor ===
v14 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v57  <|@  <|@
tid ?72 <|@
d <@d|@=== Debug Properties ===
bci: 15
code: ResolvedJavaMethodBytecode<Integer.toString(int)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Integer.java
sourceLine: 400
stackSize: 0
=== Inputs ===
outerFrameState: ?39 
values: i168 - - 
=== Succesors ===
=== Usages ===
?60 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?39 values: i168 - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
at java.lang.Integer.toString(Integer.java:400) [bci: 15]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v58 
=== Predecessor ===
v12 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" 
    successors "B3" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4590251137622047965
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i59 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v58 
values: i10 i68 
=== Succesors ===
=== Usages ===
?60 v800 i127 i68 v170 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v58 values: i10 i68  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 2.7169880105877717
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
at java.lang.Integer.toString(Integer.java:400) [bci: 15]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v57 
=== Succesors ===
next: v245 
=== Usages ===
i59 v64 v69 v244 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v57 #next: v245  <|@  <|@
f <@~|@floating>@ <|@
tid i78 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NegateNode$$Lambda$180/1857180762@4b0ec103
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:440) [bci: 15]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: i32 [-32767 - 32768]
=== Inputs ===
value: i168 
=== Succesors ===
=== Usages ===
i82 v62 ?60 
=== Predecessor ===
- >@ <|@
instruction <@Negate|@org.graalvm.compiler.nodes.calc.NegateNode>@ value: i168  <|@  <|@
tid ?60 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<Integer.stringSize(int)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Integer.java
sourceLine: 473
stackSize: 0
=== Inputs ===
outerFrameState: ?72 
values: i78 i59 
=== Succesors ===
=== Usages ===
v235 a335 v242 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?72 values: i78 i59  <|@  <|@
f <@~|@floating>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.Integer.toString(Integer.java:400) [bci: 15]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i59 
y: i169 
=== Succesors ===
=== Usages ===
v245 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i59 y: i169  <|@  <|@
f <@*|@fixed>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.Integer.toString(Integer.java:400) [bci: 15]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v170 
=== Succesors ===
trueSuccessor: v241 
falseSuccessor: v244 
=== Usages ===
=== Predecessor ===
v58 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v170 #trueSuccessor: v241 #falseSuccessor: v244  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v7|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = NEG v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v7|DWORD y: 10 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590251137622047965
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v241 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.Integer.toString(Integer.java:400) [bci: 15]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: i795 
=== Usages ===
i795 
=== Predecessor ===
v245 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i795  <|@  <|@
f <@~|@floating>@ <|@
tid v800 <|@
result [v6|QWORD[.] + v7|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a44 
index: i59 
=== Succesors ===
=== Usages ===
i795 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a44 index: i59  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i795 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.Integer.toString(Integer.java:400) [bci: 15]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v241 
address: v800 
=== Succesors ===
next: v67 
=== Usages ===
v62 
=== Predecessor ===
v241 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v241 address: v800 #next: v67  <|@  <|@
f <@~|@floating>@ <|@
tid v62 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 8]
at java.lang.Integer.toString(Integer.java:400) [bci: 15]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i795 
y: i78 
=== Succesors ===
=== Usages ===
v67 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i795 y: i78  <|@  <|@
f <@*|@fixed>@ <|@
tid v67 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 8]
at java.lang.Integer.toString(Integer.java:400) [bci: 15]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
trueSuccessorProbability: 0.6319453762390111
=== Inputs ===
condition: v62 
=== Succesors ===
trueSuccessor: v63 
falseSuccessor: v64 
=== Usages ===
=== Predecessor ===
i795 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v62 #trueSuccessor: v63 #falseSuccessor: v64  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v8|DWORD, y: [v6|QWORD[.] + v7|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6319453762390111 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4587221820936838842
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:472) [bci: 15]
at java.lang.Integer.toString(Integer.java:400) [bci: 15]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v235 
=== Usages ===
=== Predecessor ===
v67 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v235  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v235 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?60 
=== Succesors ===
next: v69 
=== Usages ===
=== Predecessor ===
v63 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?60 #next: v69  <|@  <|@
f <@~|@floating>@ <|@
tid i68 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:472) [bci: 15]
at java.lang.Integer.toString(Integer.java:400) [bci: 15]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: i32
=== Inputs ===
x: i59 
y: i19 
=== Succesors ===
=== Usages ===
i59 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i59 y: i19  <|@  <|@
f <@*|@fixed>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
at java.lang.Integer.toString(Integer.java:400) [bci: 15]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
=== Inputs ===
loopBegin: v58 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v235 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v58  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
locals: v8|DWORD v7|DWORD 
java.lang.Integer.toString(Integer.java:400) [bci: 15]
locals: v1|DWORD - - 
java.lang.Short.toString(Short.java:388) [bci: 4]
locals: - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:2, 15, 4] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = INC v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v9|DWORD] destination: B4 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4583882089441867264
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:474) [bci: 11]
at java.lang.Integer.toString(Integer.java:400) [bci: 15]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v58 
=== Succesors ===
next: j314 
=== Usages ===
=== Predecessor ===
v67 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v58 #next: j314  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j314 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j358 
=== Usages ===
v808 v809 
=== Predecessor ===
v64 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j358  <|@  <|@
f <@~|@floating>@ <|@
tid v808 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j314 
index: - 
=== Succesors ===
=== Usages ===
j358 v360 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j314 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j358 <|@
result v10|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v808 
=== Succesors ===
next: j359 
=== Usages ===
j318 v810 v811 a334 v816 v812 v813 v814 v815 
=== Predecessor ===
j314 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v808 #next: j359  <|@  <|@
f <@~|@floating>@ <|@
tid v809 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j314 
index: - 
=== Succesors ===
=== Usages ===
j359 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j314 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j359 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v809 
=== Succesors ===
next: v330 
=== Usages ===
v324 
=== Predecessor ===
j358 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v809 #next: v330  <|@  <|@
f <@~|@floating>@ <|@
tid i127 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.Integer.toString(Integer.java:400) [bci: 19]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: i32
=== Inputs ===
x: i59 
y: i126 
=== Succesors ===
=== Usages ===
j532 i155 v361 i311 a335 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i59 y: i126  <|@  <|@
f <@~|@floating>@ <|@
tid i311 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i127 
y: i19 
=== Succesors ===
=== Usages ===
i343 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i127 y: i19  <|@  <|@
f <@~|@floating>@ <|@
tid i343 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i311 
y: i342 
=== Succesors ===
=== Usages ===
i313 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i311 y: i342  <|@  <|@
f <@~|@floating>@ <|@
tid i313 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i343 
y: i312 
=== Succesors ===
=== Usages ===
j317 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i343 y: i312  <|@  <|@
f <@~|@floating>@ <|@
tid j317 <|@
result v15|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i313 
=== Succesors ===
=== Usages ===
j318 v812 v813 v814 v815 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i313  <|@  <|@
f <@~|@floating>@ <|@
tid j318 <|@
result v16|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: i64
=== Inputs ===
x: j317 
y: j358 
=== Succesors ===
=== Usages ===
v324 v360 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j317 y: j358  <|@  <|@
f <@~|@floating>@ <|@
tid v324 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j359 
y: j318 
=== Succesors ===
=== Usages ===
v330 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j359 y: j318  <|@  <|@
f <@*|@fixed>@ <|@
tid v330 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v324 
=== Succesors ===
trueSuccessor: v329 
falseSuccessor: v328 
=== Usages ===
=== Predecessor ===
j359 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v324 #trueSuccessor: v329 #falseSuccessor: v328  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = LEA [v7|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = SHL v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = LEA [v12|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = AND v13|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOVSXD v14|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = ADD (x: v15|QWORD, y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v16|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4553899539185604695
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v329 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: a335 
=== Usages ===
=== Predecessor ===
v330 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a335  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a335 <|@
result v17|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?60 
arguments: v309 i127 i10 
=== Succesors ===
next: v338 
=== Usages ===
a339 
=== Predecessor ===
v329 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?60 arguments: v309 i127 i10 #next: v338  <|@  <|@
f <@*|@fixed>@ <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v337 
=== Predecessor ===
a335 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v5|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
locals: v8|DWORD v7|DWORD 
java.lang.Integer.toString(Integer.java:400) [bci: 15]
locals: v1|DWORD - - 
java.lang.Short.toString(Short.java:388) [bci: 4]
locals: - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:2, 15, 4] <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v17|QWORD[.]] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4583799840761532831
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v328 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v360 
=== Usages ===
=== Predecessor ===
v330 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v360  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v360 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v808 
value: j318 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v347 
=== Usages ===
=== Predecessor ===
v328 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v808 value: j318 stateAfter: - lastLocationAccess: - #next: v347  <|@  <|@
f <@~|@floating>@ <|@
tid v812 <|@
result [v15|QWORD + v10|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j317 
index: j358 
=== Succesors ===
=== Usages ===
v347 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j317 index: j358  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v347 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
=== Inputs ===
address: v812 
=== Succesors ===
next: v350 
=== Usages ===
=== Predecessor ===
v360 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v812 #next: v350  <|@  <|@
f <@~|@floating>@ <|@
tid v813 <|@
result [v15|QWORD + v10|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j317 
index: j358 
=== Succesors ===
=== Usages ===
v350 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j317 index: j358  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v350 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
=== Inputs ===
address: v813 
=== Succesors ===
next: v353 
=== Usages ===
=== Predecessor ===
v347 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v813 #next: v353  <|@  <|@
f <@~|@floating>@ <|@
tid v814 <|@
result [v15|QWORD + v10|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j317 
index: j358 
=== Succesors ===
=== Usages ===
v353 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j317 index: j358  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v353 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
=== Inputs ===
address: v814 
=== Succesors ===
next: v356 
=== Usages ===
=== Predecessor ===
v350 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v814 #next: v356  <|@  <|@
f <@~|@floating>@ <|@
tid v815 <|@
result [v15|QWORD + v10|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j317 
index: j358 
=== Succesors ===
=== Usages ===
v356 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j317 index: j358  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v356 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
=== Inputs ===
address: v815 
=== Succesors ===
next: v361 
=== Usages ===
=== Predecessor ===
v353 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v815 #next: v361  <|@  <|@
f <@~|@floating>@ <|@
tid v810 <|@
result [v10|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j358 
index: - 
=== Succesors ===
=== Usages ===
v361 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j358 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v361 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v810 
value: i127 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v362 
=== Usages ===
=== Predecessor ===
v356 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v810 value: i127 stateAfter: - lastLocationAccess: - #next: v362  <|@  <|@
f <@~|@floating>@ <|@
tid v811 <|@
result [v10|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j358 
index: - 
=== Succesors ===
=== Usages ===
v362 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j358 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v362 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v811 
value: j310 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v366 
=== Usages ===
=== Predecessor ===
v361 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v811 value: j310 stateAfter: - lastLocationAccess: - #next: v366  <|@  <|@
f <@~|@floating>@ <|@
tid v816 <|@
result [v10|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j358 
index: - 
=== Succesors ===
=== Usages ===
v366 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j358 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v366 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v816 
value: v517 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v333 
=== Usages ===
=== Predecessor ===
v362 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v816 value: v517 stateAfter: - lastLocationAccess: - #next: v333  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v333 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: a334 
=== Usages ===
=== Predecessor ===
v366 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a334  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a334 <|@
result v18|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j358 
=== Succesors ===
next: v336 
=== Usages ===
a339 
=== Predecessor ===
v333 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j358 #next: v336  <|@  <|@
f <@*|@fixed>@ <|@
tid v336 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v337 
=== Predecessor ===
a334 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v16|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v15|QWORD + v10|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v15|QWORD + v10|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v15|QWORD + v10|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v15|QWORD + v10|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v10|QWORD + 12], y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = MOVE v10|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v18|QWORD[.]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4583882089441867264
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a339 <|@
result v19|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v337 
values: a334 a335 
=== Succesors ===
=== Usages ===
v806 a294 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v337 values: a334 a335  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v337 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v336 v338 
=== Succesors ===
next: v666 
=== Usages ===
a339 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v336 v338 #next: v666  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v666 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v577 
=== Usages ===
j668 
=== Predecessor ===
v337 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v577  <|@  <|@
f <@~|@floating>@ <|@
tid v806 <|@
result [v19|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a339 
index: - 
=== Succesors ===
=== Usages ===
j668 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a339 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j668 <|@
result v20|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v666 
address: v806 
=== Succesors ===
=== Usages ===
v841 v842 v843 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v666 address: v806  <|@  <|@
f <@~|@floating>@ <|@
tid v843 <|@
result [v20|QWORD[.]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j668 
index: - 
=== Succesors ===
=== Usages ===
v781 v783 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j668 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j532 <|@
result v21|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i127 
=== Succesors ===
=== Usages ===
j720 j716 j708 j712 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i127  <|@  <|@
f <@~|@floating>@ <|@
tid j708 <|@
result v22|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j532 
y: j707 
=== Succesors ===
=== Usages ===
v709 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j532 y: j707  <|@  <|@
f <@~|@floating>@ <|@
tid v709 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j708 
y: j266 
=== Succesors ===
=== Usages ===
v577 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j708 y: j266  <|@  <|@
f <@*|@fixed>@ <|@
tid v577 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v709 
=== Succesors ===
trueSuccessor: v576 
falseSuccessor: v575 
=== Usages ===
=== Predecessor ===
v666 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v709 #trueSuccessor: v576 #falseSuccessor: v575  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v19|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = LEA [v19|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = MOVSXD v11|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = LEA [v21|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v22|QWORD, y: v22|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4574874890187126272
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v576 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v580 
=== Usages ===
=== Predecessor ===
v577 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v580  <|@  <|@
f <@*|@fixed>@ <|@
tid v580 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v565 
=== Predecessor ===
v576 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4581825872433506432
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v575 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v783 
=== Usages ===
=== Predecessor ===
v577 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v783  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v783 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v843 
value: v793 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v564 
=== Usages ===
=== Predecessor ===
v575 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v843 value: v793 stateAfter: - lastLocationAccess: - #next: v564  <|@  <|@
f <@*|@fixed>@ <|@
tid v564 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v565 
=== Predecessor ===
v783 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v20|QWORD[.]], input: v4|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[8|0x8]] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4583882089441867264
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j682 <|@
result v23|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [0 - 8] ⇈0000000000000008
valueDescription: i64
=== Inputs ===
merge: v565 
values: j364 j266 
=== Succesors ===
=== Usages ===
v713 j676 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v565 values: j364 j266  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v565 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v564 v580 
=== Succesors ===
next: v583 
=== Usages ===
j682 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v564 v580 #next: v583  <|@  <|@
f <@~|@floating>@ <|@
tid j712 <|@
result v24|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j532 
y: j711 
=== Succesors ===
=== Usages ===
v713 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j532 y: j711  <|@  <|@
f <@~|@floating>@ <|@
tid v713 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j712 
y: j682 
=== Succesors ===
=== Usages ===
v583 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j712 y: j682  <|@  <|@
f <@*|@fixed>@ <|@
tid v583 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v713 
=== Succesors ===
trueSuccessor: v582 
falseSuccessor: v581 
=== Usages ===
=== Predecessor ===
v565 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v713 #trueSuccessor: v582 #falseSuccessor: v581  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v23|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = LEA [v21|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v23|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4574874890187126272
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v582 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v586 
=== Usages ===
=== Predecessor ===
v583 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v586  <|@  <|@
f <@*|@fixed>@ <|@
tid v586 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v569 
=== Predecessor ===
v582 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v23|QWORD] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4581825872433506432
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v581 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v781 
=== Usages ===
=== Predecessor ===
v583 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v781  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v781 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v843 
value: v792 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v568 
=== Usages ===
=== Predecessor ===
v581 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v843 value: v792 stateAfter: - lastLocationAccess: - #next: v568  <|@  <|@
f <@*|@fixed>@ <|@
tid v568 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v569 
=== Predecessor ===
v781 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v20|QWORD[.]], input: v3|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[4|0x4]] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4583882089441867264
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j676 <|@
result v25|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [0 - 8] ⇈000000000000000c
valueDescription: i64
=== Inputs ===
merge: v569 
values: j687 j682 
=== Succesors ===
=== Usages ===
v842 j681 j669 v717 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v569 values: j687 j682  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v569 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v568 v586 
=== Succesors ===
next: v589 
=== Usages ===
j676 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v568 v586 #next: v589  <|@  <|@
f <@~|@floating>@ <|@
tid j716 <|@
result v26|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j532 
y: j715 
=== Succesors ===
=== Usages ===
v717 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j532 y: j715  <|@  <|@
f <@~|@floating>@ <|@
tid v717 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j716 
y: j676 
=== Succesors ===
=== Usages ===
v589 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j716 y: j676  <|@  <|@
f <@*|@fixed>@ <|@
tid v589 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v717 
=== Succesors ===
trueSuccessor: v588 
falseSuccessor: v587 
=== Usages ===
=== Predecessor ===
v569 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v717 #trueSuccessor: v588 #falseSuccessor: v587  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v25|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = LEA [v21|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v25|QWORD, y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4574874890187126272
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v588 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v592 
=== Usages ===
=== Predecessor ===
v589 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v592  <|@  <|@
f <@*|@fixed>@ <|@
tid v592 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v572 
=== Predecessor ===
v588 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v25|QWORD] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4581825872433506432
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v587 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v779 
=== Usages ===
=== Predecessor ===
v589 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v779  <|@  <|@
f <@~|@floating>@ <|@
tid v842 <|@
result [v20|QWORD[.] + v25|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j668 
index: j676 
=== Succesors ===
=== Usages ===
v779 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j668 index: j676  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v779 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v842 
value: v791 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v571 
=== Usages ===
=== Predecessor ===
v587 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v842 value: v791 stateAfter: - lastLocationAccess: - #next: v571  <|@  <|@
f <@~|@floating>@ <|@
tid j681 <|@
result v27|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [2 - 10] ⇊0000000000000002 ⇈000000000000000e
=== Inputs ===
x: j676 
y: j671 
=== Succesors ===
=== Usages ===
j669 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j676 y: j671  <|@  <|@
f <@*|@fixed>@ <|@
tid v571 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v572 
=== Predecessor ===
v779 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v20|QWORD[.] + v25|QWORD * 2], input: v2|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = LEA [v25|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v27|QWORD] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4583882089441867264
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j669 <|@
result v28|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [0 - 10] ⇈000000000000000e
valueDescription: i64
=== Inputs ===
merge: v572 
values: j681 j676 
=== Succesors ===
=== Usages ===
v841 v721 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v572 values: j681 j676  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v572 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v571 v592 
=== Succesors ===
next: v595 
=== Usages ===
j669 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v571 v592 #next: v595  <|@  <|@
f <@~|@floating>@ <|@
tid j720 <|@
result v29|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j532 
y: j719 
=== Succesors ===
=== Usages ===
v721 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j532 y: j719  <|@  <|@
f <@~|@floating>@ <|@
tid v721 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j720 
y: j669 
=== Succesors ===
=== Usages ===
v595 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j720 y: j669  <|@  <|@
f <@*|@fixed>@ <|@
tid v595 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v721 
=== Succesors ===
trueSuccessor: v594 
falseSuccessor: v593 
=== Usages ===
=== Predecessor ===
v572 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v721 #trueSuccessor: v594 #falseSuccessor: v593  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v28|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = DEC v21|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v28|QWORD, y: v29|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4574874890187126272
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v594 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v598 
=== Usages ===
=== Predecessor ===
v595 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v598  <|@  <|@
f <@*|@fixed>@ <|@
tid v598 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v558 
=== Predecessor ===
v594 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4581825872433506432
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v593 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v777 
=== Usages ===
=== Predecessor ===
v595 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v777  <|@  <|@
f <@~|@floating>@ <|@
tid v841 <|@
result [v20|QWORD[.] + v28|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j668 
index: j669 
=== Succesors ===
=== Usages ===
v777 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j668 index: j669  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v777 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v841 
value: i222 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v574 
=== Usages ===
=== Predecessor ===
v593 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v841 value: i222 stateAfter: - lastLocationAccess: - #next: v574  <|@  <|@
f <@*|@fixed>@ <|@
tid v574 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v558 
=== Predecessor ===
v777 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v20|QWORD[.] + v28|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" 
    successors "B42" 
    xhandlers
    flags 
    probability 4583882089441867264
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v558 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v574 v598 
=== Succesors ===
next: a294 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v574 v598 #next: a294  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a294 <|@
result v19|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a339 
=== Succesors ===
next: v81 
=== Usages ===
a143 
=== Predecessor ===
v558 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a339 #next: v81  <|@  <|@
f <@~|@floating>@ <|@
tid i285 <|@
result short[45|0x2d] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 45
stableDimension: 0
stamp: i16 [45] ⇊000000000000002d ⇈000000000000002d
stampKind: i16
value: short[45|0x2d]
=== Inputs ===
=== Succesors ===
=== Usages ===
i286 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i77 <|@
result int[45|0x2d] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:439) [bci: 10]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
rawvalue: 45
stableDimension: 0
stamp: i32 [45] ⇊000000000000002d ⇈000000000000002d
stampKind: i32
value: int[45|0x2d]
=== Inputs ===
=== Succesors ===
=== Usages ===
i83 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:444) [bci: 17]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v80 
=== Predecessor ===
a294 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v8|DWORD, int[45|0x2d], v19|QWORD[.], v11|DWORD, short[45|0x2d]] destination: B20 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.Integer.toString(Integer.java:400) [bci: 15]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v58 
=== Succesors ===
next: v242 
=== Usages ===
=== Predecessor ===
v245 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v58 #next: v242  <|@  <|@
f <@*|@fixed>@ <|@
tid v242 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 171
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.Integer.toString(Integer.java:400) [bci: 15]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
reason: BoundsCheckException
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?60 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v244 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?60  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -43803 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
locals: v8|DWORD v7|DWORD 
java.lang.Integer.toString(Integer.java:400) [bci: 15]
locals: v1|DWORD - - 
java.lang.Short.toString(Short.java:388) [bci: 4]
locals: - 
>@ <|@ instruction DEOPT info [bci:2, 15, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B23" 
    xhandlers
    flags 
    probability 4606925391673972304
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.toString(Integer.java:400) [bci: 23]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v40 
=== Usages ===
=== Predecessor ===
v14 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v40  <|@  <|@
tid ?56 <|@
d <@d|@=== Debug Properties ===
bci: 24
code: ResolvedJavaMethodBytecode<Integer.toString(int)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Integer.java
sourceLine: 400
stackSize: 0
=== Inputs ===
outerFrameState: ?39 
values: i168 - - 
=== Succesors ===
=== Usages ===
?43 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?39 values: i168 - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
at java.lang.Integer.toString(Integer.java:400) [bci: 24]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v41 
=== Predecessor ===
v13 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B25" 
    successors "B24" "B61" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4613125946991078910
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i42 <|@
result v30|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v41 
values: i10 i54 
=== Succesors ===
=== Usages ===
?43 v801 i54 v181 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v41 values: i10 i54  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 2.7169880105877717
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
at java.lang.Integer.toString(Integer.java:400) [bci: 24]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v40 
=== Succesors ===
next: v250 
=== Usages ===
i42 v48 v53 v249 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v40 #next: v250  <|@  <|@
tid ?43 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<Integer.stringSize(int)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Integer.java
sourceLine: 473
stackSize: 0
=== Inputs ===
outerFrameState: ?56 
values: i168 i42 
=== Succesors ===
=== Usages ===
v234 a396 v247 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?56 values: i168 i42  <|@  <|@
f <@~|@floating>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.Integer.toString(Integer.java:400) [bci: 24]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i42 
y: i169 
=== Succesors ===
=== Usages ===
v250 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i42 y: i169  <|@  <|@
f <@*|@fixed>@ <|@
tid v250 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.Integer.toString(Integer.java:400) [bci: 24]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v181 
=== Succesors ===
trueSuccessor: v246 
falseSuccessor: v249 
=== Usages ===
=== Predecessor ===
v41 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v181 #trueSuccessor: v246 #falseSuccessor: v249  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v30|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v30|DWORD y: 10 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B23 -> B24 falseDestination: B23 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613125946991078910
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v246 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.Integer.toString(Integer.java:400) [bci: 24]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: i796 
=== Usages ===
i796 
=== Predecessor ===
v250 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i796  <|@  <|@
f <@~|@floating>@ <|@
tid v801 <|@
result [v6|QWORD[.] + v30|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a44 
index: i42 
=== Succesors ===
=== Usages ===
i796 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a44 index: i42  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i796 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.Integer.toString(Integer.java:400) [bci: 24]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v246 
address: v801 
=== Succesors ===
next: v51 
=== Usages ===
v46 
=== Predecessor ===
v246 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v246 address: v801 #next: v51  <|@  <|@
f <@~|@floating>@ <|@
tid v46 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 8]
at java.lang.Integer.toString(Integer.java:400) [bci: 24]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i796 
y: i168 
=== Succesors ===
=== Usages ===
v51 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i796 y: i168  <|@  <|@
f <@~|@floating>@ <|@
tid i54 <|@
result v31|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:474) [bci: 13]
at java.lang.Integer.toString(Integer.java:400) [bci: 24]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: i32
=== Inputs ===
x: i42 
y: i19 
=== Succesors ===
=== Usages ===
i155 j599 i42 v415 i374 a396 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i42 y: i19  <|@  <|@
f <@*|@fixed>@ <|@
tid v51 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 8]
at java.lang.Integer.toString(Integer.java:400) [bci: 24]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
trueSuccessorProbability: 0.6319453762390111
=== Inputs ===
condition: v46 
=== Succesors ===
trueSuccessor: v47 
falseSuccessor: v48 
=== Usages ===
=== Predecessor ===
i796 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v46 #trueSuccessor: v47 #falseSuccessor: v48  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = INC v30|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v1|DWORD, y: [v6|QWORD[.] + v30|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6319453762390111 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4610190789490421972
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:472) [bci: 15]
at java.lang.Integer.toString(Integer.java:400) [bci: 24]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v234 
=== Usages ===
=== Predecessor ===
v51 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v234  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v234 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?43 
=== Succesors ===
next: v53 
=== Usages ===
=== Predecessor ===
v47 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?43 #next: v53  <|@  <|@
f <@*|@fixed>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
at java.lang.Integer.toString(Integer.java:400) [bci: 24]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
=== Inputs ===
loopBegin: v41 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v234 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v41  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
locals: v1|DWORD v30|DWORD 
java.lang.Integer.toString(Integer.java:400) [bci: 24]
locals: v1|DWORD - - 
java.lang.Short.toString(Short.java:388) [bci: 4]
locals: - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:2, 24, 4] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v31|DWORD] destination: B25 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4606925391673972303
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:474) [bci: 11]
at java.lang.Integer.toString(Integer.java:400) [bci: 24]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v41 
=== Succesors ===
next: j376 
=== Usages ===
=== Predecessor ===
v51 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v41 #next: j376  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j376 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j412 
=== Usages ===
v817 v818 
=== Predecessor ===
v48 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j412  <|@  <|@
f <@~|@floating>@ <|@
tid v817 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j376 
index: - 
=== Succesors ===
=== Usages ===
j412 v414 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j376 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j412 <|@
result v32|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v817 
=== Succesors ===
next: j413 
=== Usages ===
j380 v819 v820 a395 v825 v821 v822 v823 v824 
=== Predecessor ===
j376 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v817 #next: j413  <|@  <|@
f <@~|@floating>@ <|@
tid v818 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j376 
index: - 
=== Succesors ===
=== Usages ===
j413 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j376 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j413 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v818 
=== Succesors ===
next: v391 
=== Usages ===
v385 
=== Predecessor ===
j412 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v818 #next: v391  <|@  <|@
f <@~|@floating>@ <|@
tid i374 <|@
result v33|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i54 
y: i19 
=== Succesors ===
=== Usages ===
i403 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i54 y: i19  <|@  <|@
f <@~|@floating>@ <|@
tid i403 <|@
result v34|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i374 
y: i342 
=== Succesors ===
=== Usages ===
i375 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i374 y: i342  <|@  <|@
f <@~|@floating>@ <|@
tid i375 <|@
result v35|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i403 
y: i312 
=== Succesors ===
=== Usages ===
j379 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i403 y: i312  <|@  <|@
f <@~|@floating>@ <|@
tid j379 <|@
result v36|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i375 
=== Succesors ===
=== Usages ===
j380 v821 v822 v823 v824 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i375  <|@  <|@
f <@~|@floating>@ <|@
tid j380 <|@
result v37|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: i64
=== Inputs ===
x: j379 
y: j412 
=== Succesors ===
=== Usages ===
v385 v414 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j379 y: j412  <|@  <|@
f <@~|@floating>@ <|@
tid v385 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j413 
y: j380 
=== Succesors ===
=== Usages ===
v391 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j413 y: j380  <|@  <|@
f <@*|@fixed>@ <|@
tid v391 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v385 
=== Succesors ===
trueSuccessor: v390 
falseSuccessor: v389 
=== Usages ===
=== Predecessor ===
j413 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v385 #trueSuccessor: v390 #falseSuccessor: v389  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = SHL v31|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = LEA [v33|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = AND v34|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = MOVSXD v35|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = ADD (x: v36|QWORD, y: v32|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v37|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4576753731943418813
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v390 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: a396 
=== Usages ===
=== Predecessor ===
v391 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a396  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a396 <|@
result v38|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?43 
arguments: v309 i54 i10 
=== Succesors ===
next: v399 
=== Usages ===
a400 
=== Predecessor ===
v390 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?43 arguments: v309 i54 i10 #next: v399  <|@  <|@
f <@*|@fixed>@ <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v398 
=== Predecessor ===
a396 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v5|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v31|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
locals: v1|DWORD v30|DWORD 
java.lang.Integer.toString(Integer.java:400) [bci: 24]
locals: v1|DWORD - - 
java.lang.Short.toString(Short.java:388) [bci: 4]
locals: - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:2, 24, 4] <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v38|QWORD[.]] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4606837889952685344
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v389 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v414 
=== Usages ===
=== Predecessor ===
v391 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v414  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v817 
value: j380 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v405 
=== Usages ===
=== Predecessor ===
v389 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v817 value: j380 stateAfter: - lastLocationAccess: - #next: v405  <|@  <|@
f <@~|@floating>@ <|@
tid v821 <|@
result [v36|QWORD + v32|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j379 
index: j412 
=== Succesors ===
=== Usages ===
v405 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j379 index: j412  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
=== Inputs ===
address: v821 
=== Succesors ===
next: v407 
=== Usages ===
=== Predecessor ===
v414 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v821 #next: v407  <|@  <|@
f <@~|@floating>@ <|@
tid v822 <|@
result [v36|QWORD + v32|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j379 
index: j412 
=== Succesors ===
=== Usages ===
v407 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j379 index: j412  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v407 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
=== Inputs ===
address: v822 
=== Succesors ===
next: v409 
=== Usages ===
=== Predecessor ===
v405 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v822 #next: v409  <|@  <|@
f <@~|@floating>@ <|@
tid v823 <|@
result [v36|QWORD + v32|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j379 
index: j412 
=== Succesors ===
=== Usages ===
v409 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j379 index: j412  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v409 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
=== Inputs ===
address: v823 
=== Succesors ===
next: v411 
=== Usages ===
=== Predecessor ===
v407 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v823 #next: v411  <|@  <|@
f <@~|@floating>@ <|@
tid v824 <|@
result [v36|QWORD + v32|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j379 
index: j412 
=== Succesors ===
=== Usages ===
v411 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j379 index: j412  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v411 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
=== Inputs ===
address: v824 
=== Succesors ===
next: v415 
=== Usages ===
=== Predecessor ===
v409 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v824 #next: v415  <|@  <|@
f <@~|@floating>@ <|@
tid v819 <|@
result [v32|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j412 
index: - 
=== Succesors ===
=== Usages ===
v415 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j412 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v819 
value: i54 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v416 
=== Usages ===
=== Predecessor ===
v411 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v819 value: i54 stateAfter: - lastLocationAccess: - #next: v416  <|@  <|@
f <@~|@floating>@ <|@
tid v820 <|@
result [v32|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j412 
index: - 
=== Succesors ===
=== Usages ===
v416 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j412 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v416 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v820 
value: j310 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v419 
=== Usages ===
=== Predecessor ===
v415 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v820 value: j310 stateAfter: - lastLocationAccess: - #next: v419  <|@  <|@
f <@~|@floating>@ <|@
tid v825 <|@
result [v32|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j412 
index: - 
=== Succesors ===
=== Usages ===
v419 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j412 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v825 
value: v517 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v394 
=== Usages ===
=== Predecessor ===
v416 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v825 value: v517 stateAfter: - lastLocationAccess: - #next: v394  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v394 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: a395 
=== Usages ===
=== Predecessor ===
v419 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a395  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a395 <|@
result v39|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j412 
=== Succesors ===
next: v397 
=== Usages ===
a400 
=== Predecessor ===
v394 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j412 #next: v397  <|@  <|@
f <@*|@fixed>@ <|@
tid v397 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v398 
=== Predecessor ===
a395 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v36|QWORD + v32|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v36|QWORD + v32|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v36|QWORD + v32|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v36|QWORD + v32|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v32|QWORD + 12], y: v31|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v32|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v32|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = MOVE v32|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v39|QWORD[.]] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4606925391673972303
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a400 <|@
result v40|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v398 
values: a395 a396 
=== Succesors ===
=== Usages ===
v807 a298 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v398 values: a395 a396  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v397 v399 
=== Succesors ===
next: v724 
=== Usages ===
a400 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v397 v399 #next: v724  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v724 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v641 
=== Usages ===
j726 
=== Predecessor ===
v398 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v641  <|@  <|@
f <@~|@floating>@ <|@
tid v807 <|@
result [v40|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a400 
index: - 
=== Succesors ===
=== Usages ===
j726 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a400 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j726 <|@
result v41|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v724 
address: v807 
=== Succesors ===
=== Usages ===
v844 v845 v846 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v724 address: v807  <|@  <|@
f <@~|@floating>@ <|@
tid v846 <|@
result [v41|QWORD[.]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j726 
index: - 
=== Succesors ===
=== Usages ===
v787 v788 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j726 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j599 <|@
result v42|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i54 
=== Succesors ===
=== Usages ===
j771 j768 j762 j765 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i54  <|@  <|@
f <@~|@floating>@ <|@
tid j762 <|@
result v43|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j599 
y: j707 
=== Succesors ===
=== Usages ===
v763 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j599 y: j707  <|@  <|@
f <@~|@floating>@ <|@
tid v763 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j762 
y: j266 
=== Succesors ===
=== Usages ===
v641 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j762 y: j266  <|@  <|@
f <@*|@fixed>@ <|@
tid v641 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v763 
=== Succesors ===
trueSuccessor: v640 
falseSuccessor: v639 
=== Usages ===
=== Predecessor ===
v724 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v763 #trueSuccessor: v640 #falseSuccessor: v639  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v40|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.] = LEA [v40|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = MOVSXD v31|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = LEA [v42|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v43|QWORD, y: v43|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4597918192419231311
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v640 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v644 
=== Usages ===
=== Predecessor ===
v641 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v644  <|@  <|@
f <@*|@fixed>@ <|@
tid v644 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v630 
=== Predecessor ===
v640 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4604737848641798331
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v639 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v788 
=== Usages ===
=== Predecessor ===
v641 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v788  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v788 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v846 
value: v793 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v629 
=== Usages ===
=== Predecessor ===
v639 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v846 value: v793 stateAfter: - lastLocationAccess: - #next: v629  <|@  <|@
f <@*|@fixed>@ <|@
tid v629 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v630 
=== Predecessor ===
v788 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v41|QWORD[.]], input: v4|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[8|0x8]] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4606925391673972303
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j739 <|@
result v44|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [0 - 8] ⇈0000000000000008
valueDescription: i64
=== Inputs ===
merge: v630 
values: j364 j266 
=== Succesors ===
=== Usages ===
v766 j733 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v630 values: j364 j266  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v630 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v629 v644 
=== Succesors ===
next: v647 
=== Usages ===
j739 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v629 v644 #next: v647  <|@  <|@
f <@~|@floating>@ <|@
tid j765 <|@
result v45|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j599 
y: j711 
=== Succesors ===
=== Usages ===
v766 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j599 y: j711  <|@  <|@
f <@~|@floating>@ <|@
tid v766 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j765 
y: j739 
=== Succesors ===
=== Usages ===
v647 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j765 y: j739  <|@  <|@
f <@*|@fixed>@ <|@
tid v647 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v766 
=== Succesors ===
trueSuccessor: v646 
falseSuccessor: v645 
=== Usages ===
=== Predecessor ===
v630 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v766 #trueSuccessor: v646 #falseSuccessor: v645  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v44|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = LEA [v42|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v44|QWORD, y: v45|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4597918192419231311
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v646 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v650 
=== Usages ===
=== Predecessor ===
v647 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v650  <|@  <|@
f <@*|@fixed>@ <|@
tid v650 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v633 
=== Predecessor ===
v646 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v44|QWORD] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4604737848641798331
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v645 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v787 
=== Usages ===
=== Predecessor ===
v647 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v787  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v787 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v846 
value: v792 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v632 
=== Usages ===
=== Predecessor ===
v645 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v846 value: v792 stateAfter: - lastLocationAccess: - #next: v632  <|@  <|@
f <@*|@fixed>@ <|@
tid v632 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v633 
=== Predecessor ===
v787 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v41|QWORD[.]], input: v3|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[4|0x4]] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4606925391673972303
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j733 <|@
result v46|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [0 - 8] ⇈000000000000000c
valueDescription: i64
=== Inputs ===
merge: v633 
values: j687 j739 
=== Succesors ===
=== Usages ===
v845 j738 j727 v769 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v633 values: j687 j739  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v633 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v632 v650 
=== Succesors ===
next: v653 
=== Usages ===
j733 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v632 v650 #next: v653  <|@  <|@
f <@~|@floating>@ <|@
tid j768 <|@
result v47|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j599 
y: j715 
=== Succesors ===
=== Usages ===
v769 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j599 y: j715  <|@  <|@
f <@~|@floating>@ <|@
tid v769 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j768 
y: j733 
=== Succesors ===
=== Usages ===
v653 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j768 y: j733  <|@  <|@
f <@*|@fixed>@ <|@
tid v653 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v769 
=== Succesors ===
trueSuccessor: v652 
falseSuccessor: v651 
=== Usages ===
=== Predecessor ===
v633 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v769 #trueSuccessor: v652 #falseSuccessor: v651  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v46|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = LEA [v42|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v46|QWORD, y: v47|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4597918192419231311
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v652 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v656 
=== Usages ===
=== Predecessor ===
v653 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v656  <|@  <|@
f <@*|@fixed>@ <|@
tid v656 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v636 
=== Predecessor ===
v652 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v46|QWORD] destination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4604737848641798331
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v651 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v786 
=== Usages ===
=== Predecessor ===
v653 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v786  <|@  <|@
f <@~|@floating>@ <|@
tid v845 <|@
result [v41|QWORD[.] + v46|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j726 
index: j733 
=== Succesors ===
=== Usages ===
v786 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j726 index: j733  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v786 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v845 
value: v791 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v635 
=== Usages ===
=== Predecessor ===
v651 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v845 value: v791 stateAfter: - lastLocationAccess: - #next: v635  <|@  <|@
f <@~|@floating>@ <|@
tid j738 <|@
result v48|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [2 - 10] ⇊0000000000000002 ⇈000000000000000e
=== Inputs ===
x: j733 
y: j671 
=== Succesors ===
=== Usages ===
j727 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j733 y: j671  <|@  <|@
f <@*|@fixed>@ <|@
tid v635 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v636 
=== Predecessor ===
v786 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v41|QWORD[.] + v46|QWORD * 2], input: v2|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = LEA [v46|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v48|QWORD] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4606925391673972303
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j727 <|@
result v49|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [0 - 10] ⇈000000000000000e
valueDescription: i64
=== Inputs ===
merge: v636 
values: j738 j733 
=== Succesors ===
=== Usages ===
v844 v772 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v636 values: j738 j733  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v636 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v635 v656 
=== Succesors ===
next: v659 
=== Usages ===
j727 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v635 v656 #next: v659  <|@  <|@
f <@~|@floating>@ <|@
tid j771 <|@
result v50|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j599 
y: j719 
=== Succesors ===
=== Usages ===
v772 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j599 y: j719  <|@  <|@
f <@~|@floating>@ <|@
tid v772 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j771 
y: j727 
=== Succesors ===
=== Usages ===
v659 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j771 y: j727  <|@  <|@
f <@*|@fixed>@ <|@
tid v659 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v772 
=== Succesors ===
trueSuccessor: v658 
falseSuccessor: v657 
=== Usages ===
=== Predecessor ===
v636 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v772 #trueSuccessor: v658 #falseSuccessor: v657  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v49|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = DEC v42|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v49|QWORD, y: v50|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4597918192419231311
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v658 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v662 
=== Usages ===
=== Predecessor ===
v659 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v662  <|@  <|@
f <@*|@fixed>@ <|@
tid v662 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v623 
=== Predecessor ===
v658 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4604737848641798331
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v657 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v785 
=== Usages ===
=== Predecessor ===
v659 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v785  <|@  <|@
f <@~|@floating>@ <|@
tid v844 <|@
result [v41|QWORD[.] + v49|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j726 
index: j727 
=== Succesors ===
=== Usages ===
v785 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j726 index: j727  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v785 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v844 
value: i222 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v638 
=== Usages ===
=== Predecessor ===
v657 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v844 value: i222 stateAfter: - lastLocationAccess: - #next: v638  <|@  <|@
f <@*|@fixed>@ <|@
tid v638 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v623 
=== Predecessor ===
v785 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v41|QWORD[.] + v49|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4606925391673972303
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v623 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v638 v662 
=== Succesors ===
next: a298 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v638 v662 #next: a298  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a298 <|@
result v40|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.toString(Integer.java:401) [bci: 29]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a400 
=== Succesors ===
next: v164 
=== Usages ===
a143 
=== Predecessor ===
v623 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a400 #next: v164  <|@  <|@
f <@*|@fixed>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v80 
=== Predecessor ===
a298 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v1|DWORD, int[0|0x0], v40|QWORD[.], v31|DWORD, short[0|0x0]] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B20" "B41" 
    successors "B43" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i82 <|@
result v51|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:444) [bci: 17]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: i32 [-32768 - 32768]
valueDescription: i32
=== Inputs ===
merge: v80 
values: i78 i168 
=== Succesors ===
=== Usages ===
i88 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v80 values: i78 i168  <|@  <|@
f <@~|@floating>@ <|@
tid i83 <|@
result v52|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:444) [bci: 17]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: i32 [0 - 45] ⇈000000000000002d
valueDescription: i32
=== Inputs ===
merge: v80 
values: i77 i10 
=== Succesors ===
=== Usages ===
v113 ?90 ?104 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v80 values: i77 i10  <|@  <|@
f <@~|@floating>@ <|@
tid a143 <|@
result v53|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a!# [C
valueDescription: a -
=== Inputs ===
merge: v80 
values: a294 a298 
=== Succesors ===
=== Usages ===
?122 ?104 v803 v805 a271 v804 ?90 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v80 values: a294 a298  <|@  <|@
f <@~|@floating>@ <|@
tid i155 <|@
result v54|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v80 
values: i127 i54 
=== Succesors ===
=== Usages ===
i89 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v80 values: i127 i54  <|@  <|@
f <@~|@floating>@ <|@
tid i286 <|@
result v55|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i16 [0 - 45] ⇈000000000000002d
valueDescription: i16
=== Inputs ===
merge: v80 
values: i285 i222 
=== Succesors ===
=== Usages ===
v220 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v80 values: i285 i222  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:444) [bci: 17]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v81 v164 
=== Succesors ===
next: i797 
=== Usages ===
i82 i83 a143 i155 i286 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v81 v164 #next: i797  <|@  <|@
f <@~|@floating>@ <|@
tid v803 <|@
result [v53|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a143 
index: - 
=== Succesors ===
=== Usages ===
i797 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a143 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i797 <|@
result v56|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 106]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v803 
=== Succesors ===
next: v86 
=== Usages ===
v202 v212 
=== Predecessor ===
v80 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v803 #next: v86  <|@  <|@
tid ?122 <|@
d <@d|@=== Debug Properties ===
bci: 35
code: ResolvedJavaMethodBytecode<Integer.toString(int)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Integer.java
sourceLine: 402
stackSize: 0
=== Inputs ===
outerFrameState: ?39 
values: - - a143 
=== Succesors ===
=== Usages ===
?119 ?90 ?104 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?39 values: - - a143  <|@  <|@
f <@~|@floating>@ <|@
tid i105 <|@
result int[-524288|0xfffffffffff80000] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:460) [bci: 110]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
rawvalue: -524288
stableDimension: 0
stamp: i32 [-524288] ⇊00000000fff80000 ⇈00000000fff80000
stampKind: i32
value: int[-524288|0xfffffffffff80000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v106 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a101 <|@
result v57|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 100]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
rawvalue: char[36]{0, 1, 2, 3, 4, ...}
stableDimension: 0
stamp: a!# [C
stampKind: a -
value: Object[char[36]{0, 1, 2, 3, 4, ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v802 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i85 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 47]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i100 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i95 <|@
result int[3|0x3] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:457) [bci: 85]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
rawvalue: 3
stableDimension: 0
stamp: i32 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
i96 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i91 <|@
result int[52429|0xcccd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:456) [bci: 76]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
rawvalue: 52429
stableDimension: 0
stamp: i32 [52429] ⇊000000000000cccd ⇈000000000000cccd
stampKind: i32
value: int[52429|0xcccd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i92 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i93 <|@
result int[19|0x13] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:456) [bci: 79]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
rawvalue: 19
stableDimension: 0
stamp: i32 [19] ⇊0000000000000013 ⇈0000000000000013
stampKind: i32
value: int[19|0x13]
=== Inputs ===
=== Succesors ===
=== Usages ===
i94 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i190 <|@
result int[36|0x24] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 105]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
rawvalue: 36
stableDimension: 0
stamp: i32 [36] ⇊0000000000000024 ⇈0000000000000024
stampKind: i32
value: int[36|0x24]
=== Inputs ===
=== Succesors ===
=== Usages ===
v191 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:456) [bci: 75]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v87 
=== Predecessor ===
i797 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v51|DWORD, v52|DWORD, v53|QWORD[.], v54|DWORD, v55|DWORD] = LABEL numbPhis: 5 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOV [v53|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[36]{0, 1, 2, 3, 4, ...}] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v51|DWORD, v54|DWORD] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B57" 
    successors "B44" "B59" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4612307203293370227
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i88 <|@
result v58|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-32768 - 32768]
valueDescription: i32
=== Inputs ===
merge: v87 
values: i82 i94 
=== Succesors ===
=== Usages ===
?90 i92 i99 ?104 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v87 values: i82 i94  <|@  <|@
f <@~|@floating>@ <|@
tid i89 <|@
result v59|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v87 
values: i155 i100 
=== Succesors ===
=== Usages ===
?90 i100 i240 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v87 values: i155 i100  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 2.2758614963049073
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:456) [bci: 75]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v86 
=== Succesors ===
next: v255 
=== Usages ===
i88 i89 v107 v110 v259 v254 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v86 #next: v255  <|@  <|@
f <@~|@floating>@ <|@
tid i92 <|@
result v60|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$125/271184744@39a592fe
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:456) [bci: 78]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: i32 [-1717993472 - 1717993472]
=== Inputs ===
x: i88 
y: i91 
=== Succesors ===
=== Usages ===
i94 v106 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: i88 y: i91  <|@  <|@
f <@~|@floating>@ <|@
tid i94 <|@
result v61|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:456) [bci: 81]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: i32 [0 - 8191] ⇈0000000000001fff
=== Inputs ===
x: i92 
y: i93 
=== Succesors ===
=== Usages ===
i88 i96 i97 ?104 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i92 y: i93  <|@  <|@
f <@~|@floating>@ <|@
tid i96 <|@
result v62|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:457) [bci: 86]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: i32 [0 - 65528] ⇈000000000000fff8
=== Inputs ===
x: i94 
y: i95 
=== Succesors ===
=== Usages ===
i98 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i94 y: i95  <|@  <|@
f <@~|@floating>@ <|@
tid i97 <|@
result v63|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:457) [bci: 89]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: i32 [0 - 16382] ⇈0000000000003ffe
=== Inputs ===
x: i94 
y: i19 
=== Succesors ===
=== Usages ===
i98 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i94 y: i19  <|@  <|@
f <@~|@floating>@ <|@
tid i98 <|@
result v64|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:457) [bci: 90]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: i32 [0 - 81910] ⇈000000000001fffe
=== Inputs ===
x: i96 
y: i97 
=== Succesors ===
=== Usages ===
i99 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i96 y: i97  <|@  <|@
f <@~|@floating>@ <|@
tid i99 <|@
result v65|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:457) [bci: 91]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: i32 [-114678 - 32768]
=== Inputs ===
x: i88 
y: i98 
=== Succesors ===
=== Usages ===
v802 ?104 v191 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i88 y: i98  <|@  <|@
f <@~|@floating>@ <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 105]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i99 
y: i190 
=== Succesors ===
=== Usages ===
v255 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i99 y: i190  <|@  <|@
f <@*|@fixed>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 105]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v191 
=== Succesors ===
trueSuccessor: v251 
falseSuccessor: v254 
=== Usages ===
=== Predecessor ===
v87 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v191 #trueSuccessor: v251 #falseSuccessor: v254  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v58|DWORD, v59|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = IMUL v58|DWORD y: 52429 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = SHR v60|DWORD y: 19 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = SHL v61|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = SHL v61|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = ADD (x: v62|DWORD, y: v63|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = SUB (x: v58|DWORD, ~y: v64|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v65|DWORD y: 36 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B43 -> B44 falseDestination: B43 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B58" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4612307203293370227
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v251 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 105]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v260 
=== Usages ===
i798 
=== Predecessor ===
v255 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v260  <|@  <|@
f <@~|@floating>@ <|@
tid i100 <|@
result v66|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 95]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: i32
=== Inputs ===
x: i89 
y: i85 
=== Succesors ===
=== Usages ===
i89 v804 ?104 v202 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i89 y: i85  <|@  <|@
f <@~|@floating>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 106]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i100 
y: i797 
=== Succesors ===
=== Usages ===
v260 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i100 y: i797  <|@  <|@
f <@*|@fixed>@ <|@
tid v260 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 106]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v202 
=== Succesors ===
trueSuccessor: v256 
falseSuccessor: v259 
=== Usages ===
=== Predecessor ===
v251 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v202 #trueSuccessor: v256 #falseSuccessor: v259  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = DEC v59|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v56|DWORD, y: v66|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B57" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4612307203293370227
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v256 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 106]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: i798 
=== Usages ===
v210 
=== Predecessor ===
v260 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i798  <|@  <|@
f <@~|@floating>@ <|@
tid v802 <|@
result [v57|QWORD[.] + v65|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a101 
index: i99 
=== Succesors ===
=== Usages ===
i798 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a101 index: i99  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i798 <|@
result v67|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 105]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v251 
address: v802 
=== Succesors ===
next: v210 
=== Usages ===
v210 
=== Predecessor ===
v256 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v251 address: v802 #next: v210  <|@  <|@
f <@~|@floating>@ <|@
tid v804 <|@
result [v53|QWORD[.] + v66|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a143 
index: i100 
=== Succesors ===
=== Usages ===
v210 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a143 index: i100  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 106]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v256 
address: v804 
value: i798 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v112 
=== Usages ===
=== Predecessor ===
i798 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v256 address: v804 value: i798 stateAfter: - lastLocationAccess: - #next: v112  <|@  <|@
tid ?104 <|@
d <@d|@=== Debug Properties ===
bci: 107
code: ResolvedJavaMethodBytecode<Integer.getChars(int, int, char[])>
duringCall: false
localsSize: 7
locksSize: 0
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 106]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
rethrowException: false
sourceFile: Integer.java
sourceLine: 459
stackSize: 0
=== Inputs ===
outerFrameState: ?122 
values: i88 - a143 i94 i99 i100 i83 
=== Succesors ===
=== Usages ===
v236 a442 v262 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?122 values: i88 - a143 i94 i99 i100 i83  <|@  <|@
f <@~|@floating>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:460) [bci: 110]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
=== Inputs ===
x: i92 
y: i105 
=== Succesors ===
=== Usages ===
v112 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: i92 y: i105  <|@  <|@
f <@*|@fixed>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:460) [bci: 110]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
trueSuccessorProbability: 0.43939404995585263
=== Inputs ===
condition: v106 
=== Succesors ===
trueSuccessor: v107 
falseSuccessor: v111 
=== Usages ===
=== Predecessor ===
v210 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v106 #trueSuccessor: v107 #falseSuccessor: v111  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v67|DWORD = MOVSX [v57|QWORD[.] + v65|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v53|QWORD[.] + v66|DWORD * 2 + 16], y: v67|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction TEST v60|DWORD y: -524288 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.43939404995585263 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B51" 
    xhandlers
    flags 
    probability 4607182418800017406
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:460) [bci: 113]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v87 
=== Succesors ===
next: v116 
=== Usages ===
=== Predecessor ===
v112 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v87 #next: v116  <|@  <|@
f <@~|@floating>@ <|@
tid a271 <|@
result v68|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n!# [C
=== Inputs ===
value: a143 
=== Succesors ===
=== Usages ===
v472 v514 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a143  <|@  <|@
f <@~|@floating>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:462) [bci: 118]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i83 
y: i10 
=== Succesors ===
=== Usages ===
v116 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i83 y: i10  <|@  <|@
f <@~|@floating>@ <|@
tid v523 <|@
result meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v468 v510 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v458 <|@
result v69|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/lang/String;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j502 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j502 <|@
result v69|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v458 
=== Succesors ===
=== Usages ===
v832 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v458  <|@  <|@
f <@~|@floating>@ <|@
tid v832 <|@
result [v69|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j502 
index: - 
=== Succesors ===
=== Usages ===
j506 j464 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j502 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v428 <|@
result v70|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a442 a486 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j518 <|@
result long[24|0x18] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j519 j526 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:462) [bci: 118]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
trueSuccessorProbability: 0.9779119300489093
=== Inputs ===
condition: v113 
=== Succesors ===
trueSuccessor: v114 
falseSuccessor: v115 
=== Usages ===
=== Predecessor ===
v107 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v113 #trueSuccessor: v114 #falseSuccessor: v115  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v68|DWORD[.] = COMPRESSPOINTER (input: v53|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@16c0e5e9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction TEST (x: v52|DWORD, y: v52|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9779119300489093 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4606983467152815275
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:465) [bci: 130]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: j430 
=== Usages ===
=== Predecessor ===
v116 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j430  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j430 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j446 
=== Usages ===
v826 v827 
=== Predecessor ===
v114 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j446  <|@  <|@
f <@~|@floating>@ <|@
tid v826 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j430 
index: - 
=== Succesors ===
=== Usages ===
j446 v448 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j430 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j446 <|@
result v71|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v826 
=== Succesors ===
next: j447 
=== Usages ===
j519 j452 v835 
=== Predecessor ===
j430 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v826 #next: j447  <|@  <|@
f <@~|@floating>@ <|@
tid v827 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j430 
index: - 
=== Succesors ===
=== Usages ===
j447 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j430 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j447 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v827 
=== Succesors ===
next: v438 
=== Usages ===
v435 
=== Predecessor ===
j446 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v827 #next: v438  <|@  <|@
f <@~|@floating>@ <|@
tid j519 <|@
result v72|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j446 
y: j518 
=== Succesors ===
=== Usages ===
v435 v448 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j446 y: j518  <|@  <|@
f <@~|@floating>@ <|@
tid v435 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j447 
y: j519 
=== Succesors ===
=== Usages ===
v438 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j447 y: j519  <|@  <|@
f <@*|@fixed>@ <|@
tid v438 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v435 
=== Succesors ===
trueSuccessor: v436 
falseSuccessor: v437 
=== Usages ===
=== Predecessor ===
j447 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v435 #trueSuccessor: v436 #falseSuccessor: v437  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = LEA [v71|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v72|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B47 -> B48 falseDestination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4576790900249878315
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v436 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a442 
=== Usages ===
=== Predecessor ===
v438 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a442  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a442 <|@
result v73|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?104 
arguments: v428 i126 i19 
=== Succesors ===
next: j443 
=== Usages ===
j443 
=== Predecessor ===
v436 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?104 arguments: v428 i126 i19 #next: j443  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j443 <|@
result v73|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a442 
=== Succesors ===
next: v453 
=== Usages ===
j452 
=== Predecessor ===
a442 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a442 #next: v453  <|@  <|@
f <@*|@fixed>@ <|@
tid v453 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v450 
=== Predecessor ===
j443 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v70|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.getChars(Integer.java:459) [bci: 107]
locals: v58|DWORD - v53|QWORD[.] v61|DWORD v65|DWORD v66|DWORD v52|DWORD 
java.lang.Integer.toString(Integer.java:402) [bci: 35]
locals: - - v53|QWORD[.] 
java.lang.Short.toString(Short.java:388) [bci: 4]
locals: - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:107, 35, 4] <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v73|QWORD[.]] destination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4606895384676739886
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v437 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v448 
=== Usages ===
=== Predecessor ===
v438 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v448  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v448 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v826 
value: j519 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v445 
=== Usages ===
=== Predecessor ===
v437 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v826 value: j519 stateAfter: - lastLocationAccess: - #next: v445  <|@  <|@
f <@~|@floating>@ <|@
tid v835 <|@
result [v71|QWORD + 216] <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j446 
index: - 
=== Succesors ===
=== Usages ===
v445 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j446 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v445 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v835 
=== Succesors ===
next: v451 
=== Usages ===
=== Predecessor ===
v448 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v835 #next: v451  <|@  <|@
f <@*|@fixed>@ <|@
tid v451 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v450 
=== Predecessor ===
v445 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v72|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v71|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v71|QWORD] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B48" 
    successors 
    xhandlers
    flags 
    probability 4606983467152815275
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j452 <|@
result v74|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v450 
values: j446 j443 
=== Succesors ===
=== Usages ===
v829 v828 a268 v836 v837 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v450 values: j446 j443  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v450 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v451 v453 
=== Succesors ===
next: a268 
=== Usages ===
j452 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v451 v453 #next: a268  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a268 <|@
result v75|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j452 
=== Succesors ===
next: j464 
=== Usages ===
a274 
=== Predecessor ===
v450 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j452 #next: j464  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j464 <|@
result v76|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v832 
=== Succesors ===
next: v465 
=== Usages ===
v465 
=== Predecessor ===
a268 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v832 #next: v465  <|@  <|@
f <@~|@floating>@ <|@
tid v828 <|@
result [v74|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j452 
index: - 
=== Succesors ===
=== Usages ===
v465 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j452 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v465 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v828 
value: j464 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v468 
=== Usages ===
=== Predecessor ===
j464 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v828 value: j464 stateAfter: - lastLocationAccess: - #next: v468  <|@  <|@
f <@~|@floating>@ <|@
tid v829 <|@
result [v74|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j452 
index: - 
=== Succesors ===
=== Usages ===
v468 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j452 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v468 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v829 
value: v523 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v472 
=== Usages ===
=== Predecessor ===
v465 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v829 value: v523 stateAfter: - lastLocationAccess: - #next: v472  <|@  <|@
f <@~|@floating>@ <|@
tid v836 <|@
result [v74|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j452 
index: - 
=== Succesors ===
=== Usages ===
v472 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j452 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v472 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v836 
value: a271 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v474 
=== Usages ===
=== Predecessor ===
v468 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v836 value: a271 stateAfter: - lastLocationAccess: - #next: v474  <|@  <|@
f <@~|@floating>@ <|@
tid v837 <|@
result [v74|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j452 
index: - 
=== Succesors ===
=== Usages ===
v474 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j452 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v474 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v837 
value: i10 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a274 
=== Usages ===
=== Predecessor ===
v472 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v837 value: i10 stateAfter: - lastLocationAccess: - #next: a274  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a274 <|@
result v75|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a268 
=== Succesors ===
next: v275 
=== Usages ===
v133 
=== Predecessor ===
v474 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a268 #next: v275  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v275 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v133 
=== Usages ===
=== Predecessor ===
a274 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v133  <|@  <|@
f <@*|@fixed>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Short.toString(Short.java:388) [bci: 7]
stamp: void
=== Inputs ===
result: a274 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v275 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a274 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v74|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = MOVE v74|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD = MOV [v69|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v74|QWORD[*]], y: v76|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v74|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v74|QWORD[*] + 12], y: v68|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v74|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v75|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B52" "B56" 
    xhandlers
    flags 
    probability 4582023674118892127
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:463) [bci: 121]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v264 
=== Usages ===
=== Predecessor ===
v116 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v264  <|@  <|@
f <@~|@floating>@ <|@
tid i239 <|@
result int[-2|0xfffffffffffffffe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:463) [bci: 122]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
rawvalue: -2
stableDimension: 0
stamp: i32 [-2] ⇊00000000fffffffe ⇈00000000fffffffe
stampKind: i32
value: int[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
i240 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i240 <|@
result v77|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:463) [bci: 122]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: i32
=== Inputs ===
x: i89 
y: i239 
=== Succesors ===
=== Usages ===
v805 v212 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i89 y: i239  <|@  <|@
f <@~|@floating>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:463) [bci: 129]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i240 
y: i797 
=== Succesors ===
=== Usages ===
v264 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i240 y: i797  <|@  <|@
f <@*|@fixed>@ <|@
tid v264 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:463) [bci: 129]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v212 
=== Succesors ===
trueSuccessor: v261 
falseSuccessor: v263 
=== Usages ===
=== Predecessor ===
v115 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v212 #trueSuccessor: v261 #falseSuccessor: v263  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v77|DWORD = LEA [v59|DWORD - 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v56|DWORD, y: v77|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B51 -> B52 falseDestination: B51 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4582023674118892127
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v261 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:463) [bci: 129]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v220 
=== Usages ===
v220 
=== Predecessor ===
v264 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v220  <|@  <|@
f <@~|@floating>@ <|@
tid v805 <|@
result [v53|QWORD[.] + v77|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a143 
index: i240 
=== Succesors ===
=== Usages ===
v220 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a143 index: i240  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v220 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:463) [bci: 129]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v261 
address: v805 
value: i286 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j475 
=== Usages ===
=== Predecessor ===
v261 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v261 address: v805 value: i286 stateAfter: - lastLocationAccess: - #next: j475  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j475 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j490 
=== Usages ===
v830 v831 
=== Predecessor ===
v220 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j490  <|@  <|@
f <@~|@floating>@ <|@
tid v830 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j475 
index: - 
=== Succesors ===
=== Usages ===
j490 v492 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j475 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j490 <|@
result v78|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v830 
=== Succesors ===
next: j491 
=== Usages ===
j526 j496 v838 
=== Predecessor ===
j475 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v830 #next: j491  <|@  <|@
f <@~|@floating>@ <|@
tid v831 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j475 
index: - 
=== Succesors ===
=== Usages ===
j491 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j475 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j491 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v831 
=== Succesors ===
next: v483 
=== Usages ===
v480 
=== Predecessor ===
j490 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v831 #next: v483  <|@  <|@
f <@~|@floating>@ <|@
tid j526 <|@
result v79|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j490 
y: j518 
=== Succesors ===
=== Usages ===
v480 v492 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j490 y: j518  <|@  <|@
f <@~|@floating>@ <|@
tid v480 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j491 
y: j526 
=== Succesors ===
=== Usages ===
v483 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j491 y: j526  <|@  <|@
f <@*|@fixed>@ <|@
tid v483 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v480 
=== Succesors ===
trueSuccessor: v481 
falseSuccessor: v482 
=== Usages ===
=== Predecessor ===
j491 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v480 #trueSuccessor: v481 #falseSuccessor: v482  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v53|QWORD[.] + v77|DWORD * 2 + 16], y: v55|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v78|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v79|QWORD = LEA [v78|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v79|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4552281083486229756
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v481 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a486 
=== Usages ===
=== Predecessor ===
v483 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a486  <|@  <|@
tid ?119 <|@
d <@d|@=== Debug Properties ===
bci: 130
code: ResolvedJavaMethodBytecode<Integer.getChars(int, int, char[])>
duringCall: false
localsSize: 7
locksSize: 0
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:463) [bci: 129]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
rethrowException: false
sourceFile: Integer.java
sourceLine: 465
stackSize: 0
=== Inputs ===
outerFrameState: ?122 
values: - - - - - - - 
=== Succesors ===
=== Usages ===
a486 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?122 values: - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a486 <|@
result v80|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?119 
arguments: v428 i126 i19 
=== Succesors ===
next: j487 
=== Usages ===
j487 
=== Predecessor ===
v481 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?119 arguments: v428 i126 i19 #next: j487  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j487 <|@
result v80|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a486 
=== Succesors ===
next: v497 
=== Usages ===
j496 
=== Predecessor ===
a486 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a486 #next: v497  <|@  <|@
f <@*|@fixed>@ <|@
tid v497 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v494 
=== Predecessor ===
j487 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v70|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.getChars(Integer.java:465) [bci: 130]
locals: - - - - - - - 
java.lang.Integer.toString(Integer.java:402) [bci: 35]
locals: - - v53|QWORD[.] 
java.lang.Short.toString(Short.java:388) [bci: 4]
locals: - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:130, 35, 4] <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v80|QWORD[.]] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4581960009591787445
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v482 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v492 
=== Usages ===
=== Predecessor ===
v483 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v492  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v492 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v830 
value: j526 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v489 
=== Usages ===
=== Predecessor ===
v482 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v830 value: j526 stateAfter: - lastLocationAccess: - #next: v489  <|@  <|@
f <@~|@floating>@ <|@
tid v838 <|@
result [v78|QWORD + 216] <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j490 
index: - 
=== Succesors ===
=== Usages ===
v489 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j490 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v489 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v838 
=== Succesors ===
next: v495 
=== Usages ===
=== Predecessor ===
v492 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v838 #next: v495  <|@  <|@
f <@*|@fixed>@ <|@
tid v495 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v494 
=== Predecessor ===
v489 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v79|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v78|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v78|QWORD] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B53" 
    successors 
    xhandlers
    flags 
    probability 4582023674118892127
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j496 <|@
result v81|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v494 
values: j490 j487 
=== Succesors ===
=== Usages ===
v834 v833 a278 v839 v840 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v494 values: j490 j487  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v494 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v495 v497 
=== Succesors ===
next: a278 
=== Usages ===
j496 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v495 v497 #next: a278  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a278 <|@
result v82|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j496 
=== Succesors ===
next: j506 
=== Usages ===
a283 
=== Predecessor ===
v494 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j496 #next: j506  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j506 <|@
result v83|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v832 
=== Succesors ===
next: v507 
=== Usages ===
v507 
=== Predecessor ===
a278 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v832 #next: v507  <|@  <|@
f <@~|@floating>@ <|@
tid v833 <|@
result [v81|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j496 
index: - 
=== Succesors ===
=== Usages ===
v507 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j496 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v507 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v833 
value: j506 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v510 
=== Usages ===
=== Predecessor ===
j506 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v833 value: j506 stateAfter: - lastLocationAccess: - #next: v510  <|@  <|@
f <@~|@floating>@ <|@
tid v834 <|@
result [v81|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j496 
index: - 
=== Succesors ===
=== Usages ===
v510 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j496 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v510 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v834 
value: v523 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v514 
=== Usages ===
=== Predecessor ===
v507 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v834 value: v523 stateAfter: - lastLocationAccess: - #next: v514  <|@  <|@
f <@~|@floating>@ <|@
tid v839 <|@
result [v81|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j496 
index: - 
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j496 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v839 
value: a271 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v516 
=== Usages ===
=== Predecessor ===
v510 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v839 value: a271 stateAfter: - lastLocationAccess: - #next: v516  <|@  <|@
f <@~|@floating>@ <|@
tid v840 <|@
result [v81|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j496 
index: - 
=== Succesors ===
=== Usages ===
v516 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j496 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v516 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v840 
value: i10 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a283 
=== Usages ===
=== Predecessor ===
v514 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v840 value: i10 stateAfter: - lastLocationAccess: - #next: a283  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a283 <|@
result v82|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a278 
=== Succesors ===
next: v284 
=== Usages ===
v6 
=== Predecessor ===
v516 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a278 #next: v284  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v284 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v6 
=== Usages ===
=== Predecessor ===
a283 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v6  <|@  <|@
f <@*|@fixed>@ <|@
tid v6 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Short.toString(Short.java:388) [bci: 7]
stamp: void
=== Inputs ===
result: a283 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v284 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a283 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v81|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v82|QWORD[.] = MOVE v81|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = MOV [v69|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v81|QWORD[*]], y: v83|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v81|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v81|QWORD[*] + 12], y: v68|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v81|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v82|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v263 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:463) [bci: 129]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v262 
=== Usages ===
=== Predecessor ===
v264 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v262  <|@  <|@
f <@*|@fixed>@ <|@
tid v262 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 213
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:463) [bci: 129]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
reason: BoundsCheckException
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?104 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v263 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?104  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -54555 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.getChars(Integer.java:459) [bci: 107]
locals: v58|DWORD - v53|QWORD[.] v61|DWORD v65|DWORD v66|DWORD v52|DWORD 
java.lang.Integer.toString(Integer.java:402) [bci: 35]
locals: - - v53|QWORD[.] 
java.lang.Short.toString(Short.java:388) [bci: 4]
locals: - 
>@ <|@ instruction DEOPT info [bci:107, 35, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B43" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4608424788531982055
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:456) [bci: 75]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v236 
=== Usages ===
=== Predecessor ===
v112 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v236  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v236 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?104 
=== Succesors ===
next: v110 
=== Usages ===
=== Predecessor ===
v111 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?104 #next: v110  <|@  <|@
f <@*|@fixed>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:456) [bci: 75]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
=== Inputs ===
loopBegin: v87 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v236 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v87  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.getChars(Integer.java:459) [bci: 107]
locals: v58|DWORD - v53|QWORD[.] v61|DWORD v65|DWORD v66|DWORD v52|DWORD 
java.lang.Integer.toString(Integer.java:402) [bci: 35]
locals: - - v53|QWORD[.] 
java.lang.Short.toString(Short.java:388) [bci: 4]
locals: - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:107, 35, 4] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v61|DWORD, v66|DWORD] destination: B57 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v259 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 106]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v87 
=== Succesors ===
next: v307 
=== Usages ===
=== Predecessor ===
v260 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v87 #next: v307  <|@  <|@
f <@~|@floating>@ <|@
tid i308 <|@
result int[-51995|0xffffffffffff34e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -51995
stableDimension: 0
stamp: i32 [-51995] ⇊00000000ffff34e5 ⇈00000000ffff34e5
stampKind: i32
value: int[-51995|0xffffffffffff34e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i304 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v307 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v300 
=== Predecessor ===
v259 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-51995|0xffffffffffff34e5]] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v254 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 105]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v87 
=== Succesors ===
next: v301 
=== Usages ===
=== Predecessor ===
v255 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v87 #next: v301  <|@  <|@
f <@~|@floating>@ <|@
tid i302 <|@
result int[-49179|0xffffffffffff3fe5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -49179
stableDimension: 0
stamp: i32 [-49179] ⇊00000000ffff3fe5 ⇈00000000ffff3fe5
stampKind: i32
value: int[-49179|0xffffffffffff3fe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i304 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v301 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v300 
=== Predecessor ===
v254 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-49179|0xffffffffffff3fe5]] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B58" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i304 <|@
result v84|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-51995 - -49179] ⇊00000000ffff34e5 ⇈00000000ffff3fe5
valueDescription: i32
=== Inputs ===
merge: v300 
values: i302 i308 
=== Succesors ===
=== Usages ===
v306 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v300 values: i302 i308  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v301 v307 
=== Succesors ===
next: v306 
=== Usages ===
i304 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v301 v307 #next: v306  <|@  <|@
tid ?90 <|@
d <@d|@=== Debug Properties ===
bci: 75
code: ResolvedJavaMethodBytecode<Integer.getChars(int, int, char[])>
duringCall: false
localsSize: 7
locksSize: 0
rethrowException: false
sourceFile: Integer.java
sourceLine: 456
stackSize: 0
=== Inputs ===
outerFrameState: ?122 
values: i88 - a143 - - i89 i83 
=== Succesors ===
=== Usages ===
v306 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?122 values: i88 - a143 - - i89 i83  <|@  <|@
f <@~|@floating>@ <|@
tid a303 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v306 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v306 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?90 
actionAndReason: i304 
speculation: a303 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v300 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?90 actionAndReason: i304 speculation: a303  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v84|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v84|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.getChars(Integer.java:456) [bci: 75]
locals: v58|DWORD - v53|QWORD[.] - - v59|DWORD v52|DWORD 
java.lang.Integer.toString(Integer.java:402) [bci: 35]
locals: - - v53|QWORD[.] 
java.lang.Short.toString(Short.java:388) [bci: 4]
locals: - 
>@ <|@ instruction DEOPT info [bci:75, 35, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v249 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.Integer.toString(Integer.java:400) [bci: 24]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v41 
=== Succesors ===
next: v247 
=== Usages ===
=== Predecessor ===
v250 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v41 #next: v247  <|@  <|@
f <@*|@fixed>@ <|@
tid v247 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 182
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.Integer.toString(Integer.java:400) [bci: 24]
at java.lang.Integer.toString(int) [bci: -1]
at java.lang.Short.toString(Short.java:388) [bci: 4]
reason: BoundsCheckException
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?43 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v249 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?43  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -46619 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
locals: v1|DWORD v30|DWORD 
java.lang.Integer.toString(Integer.java:400) [bci: 24]
locals: v1|DWORD - - 
java.lang.Short.toString(Short.java:388) [bci: 4]
locals: - 
>@ <|@ instruction DEOPT info [bci:2, 24, 4] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@3a0c784e slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVSX [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[10]{9, 99, 999, 9999, 99999, ...}] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.02853574332885067 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B23" 
    xhandlers
    flags 
    probability 4606925391673972304
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613125946991078910
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = INC v30|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v1|DWORD, y: [v6|QWORD[.] + v30|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6319453762390111 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4610190789490421972
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
locals: v1|DWORD v30|DWORD 
java.lang.Integer.toString(Integer.java:400) [bci: 24]
locals: v1|DWORD - - 
java.lang.Short.toString(Short.java:388) [bci: 4]
locals: - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:2, 24, 4] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v31|DWORD] destination: B25 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B25" 
    successors "B24" "B61" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4613125946991078910
    begin_IR
      LIR
      nr   -1  <|@ instruction [v30|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v30|DWORD y: 10 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B23 -> B24 falseDestination: B23 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4606925391673972303
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = SHL v31|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = LEA [v33|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = AND v34|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = MOVSXD v35|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = ADD (x: v36|QWORD, y: v32|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v37|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4606837889952685344
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v36|QWORD + v32|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v36|QWORD + v32|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v36|QWORD + v32|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v36|QWORD + v32|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v32|QWORD + 12], y: v31|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v32|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v32|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = MOVE v32|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v39|QWORD[.]] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4606925391673972303
    begin_IR
      LIR
      nr   -1  <|@ instruction [v40|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.] = LEA [v40|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = MOVSXD v31|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = LEA [v42|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v43|QWORD, y: v43|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4604737848641798331
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v89|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v41|QWORD[.]], input: v89|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[8|0x8]] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4606925391673972303
    begin_IR
      LIR
      nr   -1  <|@ instruction [v44|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = LEA [v42|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v44|QWORD, y: v45|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4604737848641798331
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v87|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v41|QWORD[.]], input: v87|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[4|0x4]] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4606925391673972303
    begin_IR
      LIR
      nr   -1  <|@ instruction [v46|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = LEA [v42|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v46|QWORD, y: v47|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4604737848641798331
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v85|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v41|QWORD[.] + v46|QWORD * 2], input: v85|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = LEA [v46|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v48|QWORD] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4606925391673972303
    begin_IR
      LIR
      nr   -1  <|@ instruction [v49|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = DEC v42|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v49|QWORD, y: v50|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4604737848641798331
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v41|QWORD[.] + v49|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4606925391673972303
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v1|DWORD, int[0|0x0], v40|QWORD[.], v31|DWORD, short[0|0x0]] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B20" "B41" 
    successors "B43" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   -1  <|@ instruction [v51|DWORD, v52|DWORD, v53|QWORD[.], v54|DWORD, v55|DWORD] = LABEL numbPhis: 5 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOV [v53|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[36]{0, 1, 2, 3, 4, ...}] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v51|DWORD, v54|DWORD] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B58" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4612307203293370227
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = DEC v59|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v56|DWORD, y: v66|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B57" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4612307203293370227
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v67|DWORD = MOVSX [v57|QWORD[.] + v65|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v53|QWORD[.] + v66|DWORD * 2 + 16], y: v67|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction TEST v60|DWORD y: -524288 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.43939404995585263 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B43" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4608424788531982055
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.getChars(Integer.java:459) [bci: 107]
locals: v58|DWORD - v53|QWORD[.] v61|DWORD v65|DWORD v66|DWORD v52|DWORD 
java.lang.Integer.toString(Integer.java:402) [bci: 35]
locals: - - v53|QWORD[.] 
java.lang.Short.toString(Short.java:388) [bci: 4]
locals: - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:107, 35, 4] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v61|DWORD, v66|DWORD] destination: B57 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B57" 
    successors "B44" "B59" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4612307203293370227
    begin_IR
      LIR
      nr   -1  <|@ instruction [v58|DWORD, v59|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = IMUL v58|DWORD y: 52429 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = SHR v60|DWORD y: 19 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = SHL v61|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = SHL v61|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = ADD (x: v62|DWORD, y: v63|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = SUB (x: v58|DWORD, ~y: v64|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v65|DWORD y: 36 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B43 -> B44 falseDestination: B43 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B51" 
    xhandlers
    flags 
    probability 4607182418800017406
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v68|DWORD[.] = COMPRESSPOINTER (input: v53|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@16c0e5e9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   -1  <|@ instruction TEST (x: v52|DWORD, y: v52|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9779119300489093 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4606983467152815275
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = LEA [v71|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v72|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B47 -> B48 falseDestination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4606895384676739886
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v72|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v71|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v71|QWORD] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B48" 
    successors 
    xhandlers
    flags 
    probability 4606983467152815275
    begin_IR
      LIR
      nr   -1  <|@ instruction [v74|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = MOVE v74|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD = MOV [v69|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v74|QWORD[*]], y: v76|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v74|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v74|QWORD[*] + 12], y: v68|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v74|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v75|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4597918192419231311
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v46|QWORD] destination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4597918192419231311
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4597918192419231311
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4597918192419231311
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v44|QWORD] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4583882089441867264
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590251137622047965
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v8|DWORD, y: [v6|QWORD[.] + v7|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6319453762390111 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4587221820936838842
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
locals: v8|DWORD v7|DWORD 
java.lang.Integer.toString(Integer.java:400) [bci: 15]
locals: v1|DWORD - - 
java.lang.Short.toString(Short.java:388) [bci: 4]
locals: - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:2, 15, 4] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = INC v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v9|DWORD] destination: B4 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" 
    successors "B3" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4590251137622047965
    begin_IR
      LIR
      nr   -1  <|@ instruction [v7|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = NEG v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v7|DWORD y: 10 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4583882089441867264
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = LEA [v7|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = SHL v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = LEA [v12|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = AND v13|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOVSXD v14|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = ADD (x: v15|QWORD, y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v16|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4583799840761532831
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v16|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v15|QWORD + v10|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v15|QWORD + v10|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v15|QWORD + v10|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v15|QWORD + v10|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v10|QWORD + 12], y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = MOVE v10|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v18|QWORD[.]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4583882089441867264
    begin_IR
      LIR
      nr   -1  <|@ instruction [v19|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = LEA [v19|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = MOVSXD v11|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = LEA [v21|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v22|QWORD, y: v22|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4581825872433506432
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v90|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v20|QWORD[.]], input: v90|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[8|0x8]] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4583882089441867264
    begin_IR
      LIR
      nr   -1  <|@ instruction [v23|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = LEA [v21|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v23|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4581825872433506432
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v88|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v20|QWORD[.]], input: v88|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[4|0x4]] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4583882089441867264
    begin_IR
      LIR
      nr   -1  <|@ instruction [v25|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = LEA [v21|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v25|QWORD, y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4581825872433506432
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v86|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v20|QWORD[.] + v25|QWORD * 2], input: v86|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = LEA [v25|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v27|QWORD] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4583882089441867264
    begin_IR
      LIR
      nr   -1  <|@ instruction [v28|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = DEC v21|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v28|QWORD, y: v29|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4581825872433506432
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v20|QWORD[.] + v28|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" 
    successors "B42" 
    xhandlers
    flags 
    probability 4583882089441867264
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v8|DWORD, int[45|0x2d], v19|QWORD[.], v11|DWORD, short[45|0x2d]] destination: B20 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B52" "B56" 
    xhandlers
    flags 
    probability 4582023674118892127
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v77|DWORD = LEA [v59|DWORD - 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v56|DWORD, y: v77|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B51 -> B52 falseDestination: B51 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4582023674118892127
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v53|QWORD[.] + v77|DWORD * 2 + 16], y: v55|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v78|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v79|QWORD = LEA [v78|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v79|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4581960009591787445
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v79|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v78|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v78|QWORD] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B53" 
    successors 
    xhandlers
    flags 
    probability 4582023674118892127
    begin_IR
      LIR
      nr   -1  <|@ instruction [v81|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v82|QWORD[.] = MOVE v81|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = MOV [v69|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v81|QWORD[*]], y: v83|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v81|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v81|QWORD[*] + 12], y: v68|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v81|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v82|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4576790900249878315
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v94|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v94|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.getChars(Integer.java:459) [bci: 107]
locals: v58|DWORD - v53|QWORD[.] v61|DWORD v65|DWORD v66|DWORD v52|DWORD 
java.lang.Integer.toString(Integer.java:402) [bci: 35]
locals: - - v53|QWORD[.] 
java.lang.Short.toString(Short.java:388) [bci: 4]
locals: - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:107, 35, 4] <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v73|QWORD[.]] destination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4576753731943418813
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v91|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v91|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v31|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
locals: v1|DWORD v30|DWORD 
java.lang.Integer.toString(Integer.java:400) [bci: 24]
locals: v1|DWORD - - 
java.lang.Short.toString(Short.java:388) [bci: 4]
locals: - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:2, 24, 4] <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v38|QWORD[.]] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4574874890187126272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4574874890187126272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4574874890187126272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v23|QWORD] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4574874890187126272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v25|QWORD] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4553899539185604695
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v92|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v92|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
locals: v8|DWORD v7|DWORD 
java.lang.Integer.toString(Integer.java:400) [bci: 15]
locals: v1|DWORD - - 
java.lang.Short.toString(Short.java:388) [bci: 4]
locals: - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:2, 15, 4] <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v17|QWORD[.]] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4552281083486229756
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v93|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v93|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.getChars(Integer.java:465) [bci: 130]
locals: - - - - - - - 
java.lang.Integer.toString(Integer.java:402) [bci: 35]
locals: - - v53|QWORD[.] 
java.lang.Short.toString(Short.java:388) [bci: 4]
locals: - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:130, 35, 4] <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v80|QWORD[.]] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -54555 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.getChars(Integer.java:459) [bci: 107]
locals: v58|DWORD - v53|QWORD[.] v61|DWORD v65|DWORD v66|DWORD v52|DWORD 
java.lang.Integer.toString(Integer.java:402) [bci: 35]
locals: - - v53|QWORD[.] 
java.lang.Short.toString(Short.java:388) [bci: 4]
locals: - 
>@ <|@ instruction DEOPT info [bci:107, 35, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -43803 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
locals: v8|DWORD v7|DWORD 
java.lang.Integer.toString(Integer.java:400) [bci: 15]
locals: v1|DWORD - - 
java.lang.Short.toString(Short.java:388) [bci: 4]
locals: - 
>@ <|@ instruction DEOPT info [bci:2, 15, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-49179|0xffffffffffff3fe5]] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B58" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v84|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v84|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.getChars(Integer.java:456) [bci: 75]
locals: v58|DWORD - v53|QWORD[.] - - v59|DWORD v52|DWORD 
java.lang.Integer.toString(Integer.java:402) [bci: 35]
locals: - - v53|QWORD[.] 
java.lang.Short.toString(Short.java:388) [bci: 4]
locals: - 
>@ <|@ instruction DEOPT info [bci:75, 35, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -46619 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
locals: v1|DWORD v30|DWORD 
java.lang.Integer.toString(Integer.java:400) [bci: 24]
locals: v1|DWORD - - 
java.lang.Short.toString(Short.java:388) [bci: 4]
locals: - 
>@ <|@ instruction DEOPT info [bci:2, 24, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-51995|0xffffffffffff34e5]] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #15         // value:short
     4: invokestatic  #16         // java.lang.Integer.toString:(int)java.lang.String
     7: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@3a0c784e slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|DWORD = MOVSX [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr    8  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[10]{9, 99, 999, 9999, 99999, ...}] <|@ <|@
      nr   10  <|@ instruction TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 0.02853574332885067 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B23" 
    xhandlers
    flags 
    probability 4606925391673972304
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  216  <|@ instruction r14|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613125946991078910
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  228  <|@ instruction r10|DWORD = INC r14|DWORD size: DWORD <|@ <|@
      nr  230  <|@ instruction CMP (x: r13|DWORD, y: [rsi|QWORD[.] + r14|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  232  <|@ instruction BRANCH trueDestinationProbability: 0.6319453762390111 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4610190789490421972
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  236  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
locals: r13|DWORD r14|DWORD 
java.lang.Integer.toString(Integer.java:400) [bci: 24]
locals: r13|DWORD - - 
java.lang.Short.toString(Short.java:388) [bci: 4]
locals: - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:2, 24, 4] <|@ <|@
      nr  238  <|@ instruction r14|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  240  <|@ instruction JUMP ~[] destination: B25 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B25" 
    successors "B24" "B61" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4613125946991078910
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  222  <|@ instruction CMP r14|DWORD y: 10 size: DWORD <|@ <|@
      nr  224  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B23 -> B24 falseDestination: B23 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4606925391673972303
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  244  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  246  <|@ instruction rsi|DWORD = SHL r10|DWORD size: DWORD <|@ <|@
      nr  248  <|@ instruction rsi|DWORD = LEA [rsi|DWORD + 23] size: DWORD <|@ <|@
      nr  250  <|@ instruction rsi|DWORD = AND rsi|DWORD y: -8 size: DWORD <|@ <|@
      nr  252  <|@ instruction rsi|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr  254  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  256  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  258  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4606837889952685344
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  278  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  280  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + rax|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  282  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + rax|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  284  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + rax|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  286  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + rax|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  288  <|@ instruction MOV (x: [rax|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  290  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  292  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr  294  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  296  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4606925391673972303
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  300  <|@ instruction rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  302  <|@ instruction rdx|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  304  <|@ instruction rcx|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  306  <|@ instruction TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  308  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4604737848641798331
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  318  <|@ instruction xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr  320  <|@ instruction J (address: [rsi|QWORD[.]], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  322  <|@ instruction rcx|QWORD = MOVE input: long[8|0x8] <|@ <|@
      nr  324  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4606925391673972303
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  328  <|@ instruction r11|QWORD = LEA [rdx|QWORD - 4] size: QWORD <|@ <|@
      nr  330  <|@ instruction CMP (x: rcx|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  332  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4604737848641798331
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  340  <|@ instruction xmm0|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  342  <|@ instruction J (address: [rsi|QWORD[.]], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  344  <|@ instruction rcx|QWORD = MOVE input: long[4|0x4] <|@ <|@
      nr  346  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4606925391673972303
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  350  <|@ instruction r11|QWORD = LEA [rdx|QWORD - 2] size: QWORD <|@ <|@
      nr  352  <|@ instruction CMP (x: rcx|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  354  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4604737848641798331
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  362  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr  364  <|@ instruction J (address: [rsi|QWORD[.] + rcx|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  366  <|@ instruction rcx|QWORD = LEA [rcx|QWORD + 2] size: QWORD <|@ <|@
      nr  368  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4606925391673972303
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  372  <|@ instruction rdx|QWORD = DEC rdx|QWORD size: QWORD <|@ <|@
      nr  374  <|@ instruction CMP (x: rcx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  376  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4604737848641798331
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  384  <|@ instruction MOV (x: [rsi|QWORD[.] + rcx|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr  386  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4606925391673972303
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  390  <|@ instruction rsi|DWORD = MOVE input: short[0|0x0] <|@ <|@
      nr  392  <|@ instruction r14|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  394  <|@ instruction JUMP ~[] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B20" "B41" 
    successors "B43" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL numbPhis: 5 align: false label: ? <|@ <|@
      nr  398  <|@ instruction rdx|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  400  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[36]{0, 1, 2, 3, 4, ...}] <|@ <|@
      nr  402  <|@ instruction JUMP ~[] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B58" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4612307203293370227
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  424  <|@ instruction r9|DWORD = DEC r10|DWORD size: DWORD <|@ <|@
      nr  426  <|@ instruction CMP (x: rdx|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  428  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B57" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4612307203293370227
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  432  <|@ instruction rdi|DWORD = MOVSX [rcx|QWORD[.] + rbx|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  434  <|@ instruction MOV (x: [rax|QWORD[.] + r9|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  436  <|@ instruction TEST r11|DWORD y: -524288 size: DWORD <|@ <|@
      nr  438  <|@ instruction BRANCH trueDestinationProbability: 0.43939404995585263 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B43" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4608424788531982055
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  596  <|@ st <@st|@reference-map: [rax:0, rcx:0]
live-base-pointers: []
java.lang.Integer.getChars(Integer.java:459) [bci: 107]
locals: r13|DWORD - rax|QWORD[.] r8|DWORD rbx|DWORD r9|DWORD r14|DWORD 
java.lang.Integer.toString(Integer.java:402) [bci: 35]
locals: - - rax|QWORD[.] 
java.lang.Short.toString(Short.java:388) [bci: 4]
locals: - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:107, 35, 4] <|@ <|@
      nr  598  <|@ instruction r10|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  600  <|@ instruction r13|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  602  <|@ instruction JUMP ~[] destination: B57 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B57" 
    successors "B44" "B59" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4612307203293370227
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  406  <|@ instruction r11|DWORD = IMUL r13|DWORD y: 52429 size: DWORD <|@ <|@
      nr  408  <|@ instruction r8|DWORD = SHR r11|DWORD y: 19 size: DWORD <|@ <|@
      nr  410  <|@ instruction r9|DWORD = SHL r8|DWORD y: 3 size: DWORD <|@ <|@
      nr  412  <|@ instruction rbx|DWORD = SHL r8|DWORD size: DWORD <|@ <|@
      nr  414  <|@ instruction r9|DWORD = ADD (x: r9|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  416  <|@ instruction rbx|DWORD = SUB (x: r13|DWORD, ~y: r9|DWORD) size: DWORD <|@ <|@
      nr  418  <|@ instruction CMP rbx|DWORD y: 36 size: DWORD <|@ <|@
      nr  420  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B43 -> B44 falseDestination: B43 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B51" 
    xhandlers
    flags 
    probability 4607182418800017406
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  442  <|@ instruction r11|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@16c0e5e9 encoding: base: 0 shift: 3 <|@ <|@
      nr  444  <|@ instruction rdi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  446  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  448  <|@ instruction BRANCH trueDestinationProbability: 0.9779119300489093 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4606983467152815275
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  452  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  454  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  456  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  458  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B47 -> B48 falseDestination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4606895384676739886
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  490  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  492  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0 <|@ <|@
      nr  494  <|@ instruction rax|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  496  <|@ instruction JUMP ~[] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B48" 
    successors 
    xhandlers
    flags 
    probability 4606983467152815275
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  500  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr  502  <|@ instruction rdx|QWORD = MOV [rdi|QWORD + 168] size: QWORD <|@ <|@
      nr  504  <|@ instruction MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  506  <|@ instruction MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  508  <|@ instruction MOV (x: [rax|QWORD[*] + 12], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr  510  <|@ instruction MOV (x: [rax|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  512  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  514  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4597918192419231311
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  358  <|@ instruction JUMP ~[] destination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4597918192419231311
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  380  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4597918192419231311
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  312  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  314  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4597918192419231311
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4583882089441867264
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction r14|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   18  <|@ instruction JUMP ~[] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590251137622047965
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   30  <|@ instruction CMP (x: r10|DWORD, y: [rsi|QWORD[.] + r14|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   32  <|@ instruction BRANCH trueDestinationProbability: 0.6319453762390111 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4587221820936838842
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
locals: r10|DWORD r14|DWORD 
java.lang.Integer.toString(Integer.java:400) [bci: 15]
locals: r13|DWORD - - 
java.lang.Short.toString(Short.java:388) [bci: 4]
locals: - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:2, 15, 4] <|@ <|@
      nr   38  <|@ instruction r14|DWORD = INC r14|DWORD size: DWORD <|@ <|@
      nr   40  <|@ instruction JUMP ~[] destination: B4 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" 
    successors "B3" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4590251137622047965
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   22  <|@ instruction r10|DWORD = NEG r13|DWORD size: DWORD <|@ <|@
      nr   24  <|@ instruction CMP r14|DWORD y: 10 size: DWORD <|@ <|@
      nr   26  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4583882089441867264
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   46  <|@ instruction r11|DWORD = LEA [r14|DWORD + 2] size: DWORD <|@ <|@
      nr   48  <|@ instruction rsi|DWORD = SHL r11|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction rsi|DWORD = LEA [rsi|DWORD + 23] size: DWORD <|@ <|@
      nr   52  <|@ instruction rsi|DWORD = AND rsi|DWORD y: -8 size: DWORD <|@ <|@
      nr   54  <|@ instruction rsi|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr   56  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr   58  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   60  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4583799840761532831
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   84  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr   86  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + rax|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   88  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + rax|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   90  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + rax|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   92  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + rax|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   94  <|@ instruction MOV (x: [rax|QWORD + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr   96  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr   98  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr  100  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4583882089441867264
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  106  <|@ instruction r8|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  108  <|@ instruction r9|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  110  <|@ instruction rsi|QWORD = LEA [r9|QWORD - 8] size: QWORD <|@ <|@
      nr  112  <|@ instruction TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  114  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4581825872433506432
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  124  <|@ instruction xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr  126  <|@ instruction J (address: [r8|QWORD[.]], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  128  <|@ instruction rsi|QWORD = MOVE input: long[8|0x8] <|@ <|@
      nr  130  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4583882089441867264
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  134  <|@ instruction rdx|QWORD = LEA [r9|QWORD - 4] size: QWORD <|@ <|@
      nr  136  <|@ instruction CMP (x: rsi|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  138  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4581825872433506432
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  146  <|@ instruction xmm0|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  148  <|@ instruction J (address: [r8|QWORD[.]], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  150  <|@ instruction rsi|QWORD = MOVE input: long[4|0x4] <|@ <|@
      nr  152  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4583882089441867264
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  156  <|@ instruction rdx|QWORD = LEA [r9|QWORD - 2] size: QWORD <|@ <|@
      nr  158  <|@ instruction CMP (x: rsi|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  160  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4581825872433506432
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  168  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr  170  <|@ instruction J (address: [r8|QWORD[.] + rsi|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  172  <|@ instruction rsi|QWORD = LEA [rsi|QWORD + 2] size: QWORD <|@ <|@
      nr  174  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4583882089441867264
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  178  <|@ instruction r9|QWORD = DEC r9|QWORD size: QWORD <|@ <|@
      nr  180  <|@ instruction CMP (x: rsi|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  182  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4581825872433506432
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  190  <|@ instruction MOV (x: [r8|QWORD[.] + rsi|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr  192  <|@ instruction JUMP ~[] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" 
    successors "B42" 
    xhandlers
    flags 
    probability 4583882089441867264
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  196  <|@ instruction rsi|DWORD = MOVE input: short[45|0x2d] <|@ <|@
      nr  198  <|@ instruction r14|DWORD = MOVE input: int[45|0x2d] <|@ <|@
      nr  200  <|@ instruction r13|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  202  <|@ instruction r10|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  204  <|@ instruction JUMP ~[] destination: B20 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B52" "B56" 
    xhandlers
    flags 
    probability 4582023674118892127
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  518  <|@ instruction rcx|DWORD = LEA [r10|DWORD - 2] size: DWORD <|@ <|@
      nr  520  <|@ instruction CMP (x: rdx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  522  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B51 -> B52 falseDestination: B51 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4582023674118892127
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  526  <|@ instruction MOV (x: [rax|QWORD[.] + rcx|DWORD * 2 + 16], y: rsi|DWORD) size: WORD <|@ <|@
      nr  528  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  530  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  532  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  534  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4581960009591787445
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  560  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  562  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0 <|@ <|@
      nr  564  <|@ instruction rax|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  566  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B53" 
    successors 
    xhandlers
    flags 
    probability 4582023674118892127
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  570  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr  572  <|@ instruction rdx|QWORD = MOV [rdi|QWORD + 168] size: QWORD <|@ <|@
      nr  574  <|@ instruction MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  576  <|@ instruction MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  578  <|@ instruction MOV (x: [rax|QWORD[*] + 12], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr  580  <|@ instruction MOV (x: [rax|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  582  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  584  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4576790900249878315
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  462  <|@ instruction stack:28|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr  464  <|@ instruction stack:32|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  466  <|@ instruction stack:36|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  468  <|@ instruction stack:40|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  470  <|@ instruction stack:48|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  474  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  476  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  478  <|@ st <@st|@reference-map: [stack:0, stack:20]
live-base-pointers: []
java.lang.Integer.getChars(Integer.java:459) [bci: 107]
locals: r13|DWORD - stack:48|QWORD[.] stack:40|DWORD stack:36|DWORD stack:32|DWORD r14|DWORD 
java.lang.Integer.toString(Integer.java:402) [bci: 35]
locals: - - stack:48|QWORD[.] 
java.lang.Short.toString(Short.java:388) [bci: 4]
locals: - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:107, 35, 4] <|@ <|@
      nr  480  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  482  <|@ instruction rdi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  484  <|@ instruction r11|DWORD[.] = MOVE stack:28|DWORD[.] moveKind: DWORD <|@ <|@
      nr  486  <|@ instruction JUMP ~[] destination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4576753731943418813
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  262  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr  264  <|@ instruction rdx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  266  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  268  <|@ instruction stack:28|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  270  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
locals: r13|DWORD r14|DWORD 
java.lang.Integer.toString(Integer.java:400) [bci: 24]
locals: r13|DWORD - - 
java.lang.Short.toString(Short.java:388) [bci: 4]
locals: - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:2, 24, 4] <|@ <|@
      nr  272  <|@ instruction r10|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  274  <|@ instruction JUMP ~[] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4574874890187126272
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  186  <|@ instruction JUMP ~[] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4574874890187126272
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  118  <|@ instruction rsi|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  120  <|@ instruction JUMP ~[] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4574874890187126272
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  142  <|@ instruction JUMP ~[] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4574874890187126272
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  164  <|@ instruction JUMP ~[] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4553899539185604695
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction stack:28|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr   68  <|@ instruction rdx|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   72  <|@ instruction stack:32|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   74  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
locals: stack:28|DWORD r14|DWORD 
java.lang.Integer.toString(Integer.java:400) [bci: 15]
locals: r13|DWORD - - 
java.lang.Short.toString(Short.java:388) [bci: 4]
locals: - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:2, 15, 4] <|@ <|@
      nr   76  <|@ instruction r11|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction r10|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4552281083486229756
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  538  <|@ instruction stack:28|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr  540  <|@ instruction stack:48|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  542  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  544  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  546  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  548  <|@ st <@st|@reference-map: [stack:0, stack:20]
live-base-pointers: []
java.lang.Integer.getChars(Integer.java:465) [bci: 130]
locals: - - - - - - - 
java.lang.Integer.toString(Integer.java:402) [bci: 35]
locals: - - stack:48|QWORD[.] 
java.lang.Short.toString(Short.java:388) [bci: 4]
locals: - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:130, 35, 4] <|@ <|@
      nr  550  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  552  <|@ instruction rdi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  554  <|@ instruction r11|DWORD[.] = MOVE stack:28|DWORD[.] moveKind: DWORD <|@ <|@
      nr  556  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  588  <|@ instruction MOV [r15|QWORD + 668] y: -54555 size: DWORD <|@ <|@
      nr  590  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  592  <|@ st <@st|@reference-map: [rax:0]
live-base-pointers: []
java.lang.Integer.getChars(Integer.java:459) [bci: 107]
locals: r13|DWORD - rax|QWORD[.] r8|DWORD rbx|DWORD r9|DWORD r14|DWORD 
java.lang.Integer.toString(Integer.java:402) [bci: 35]
locals: - - rax|QWORD[.] 
java.lang.Short.toString(Short.java:388) [bci: 4]
locals: - 
>@ <|@ instruction DEOPT info [bci:107, 35, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  208  <|@ instruction MOV [r15|QWORD + 668] y: -43803 size: DWORD <|@ <|@
      nr  210  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  212  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
locals: r10|DWORD r14|DWORD 
java.lang.Integer.toString(Integer.java:400) [bci: 15]
locals: r13|DWORD - - 
java.lang.Short.toString(Short.java:388) [bci: 4]
locals: - 
>@ <|@ instruction DEOPT info [bci:2, 15, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  614  <|@ instruction r11|DWORD = MOVE input: int[-49179|0xffffffffffff3fe5] <|@ <|@
      nr  616  <|@ instruction stack:48|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  618  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B58" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  622  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr  624  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  626  <|@ st <@st|@reference-map: [stack:0]
live-base-pointers: []
java.lang.Integer.getChars(Integer.java:456) [bci: 75]
locals: r13|DWORD - stack:48|QWORD[.] - - r10|DWORD r14|DWORD 
java.lang.Integer.toString(Integer.java:402) [bci: 35]
locals: - - stack:48|QWORD[.] 
java.lang.Short.toString(Short.java:388) [bci: 4]
locals: - 
>@ <|@ instruction DEOPT info [bci:75, 35, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  630  <|@ instruction MOV [r15|QWORD + 668] y: -46619 size: DWORD <|@ <|@
      nr  632  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  634  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
locals: r13|DWORD r14|DWORD 
java.lang.Integer.toString(Integer.java:400) [bci: 24]
locals: r13|DWORD - - 
java.lang.Short.toString(Short.java:388) [bci: 4]
locals: - 
>@ <|@ instruction DEOPT info [bci:2, 24, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  606  <|@ instruction r11|DWORD = MOVE input: int[-51995|0xffffffffffff34e5] <|@ <|@
      nr  608  <|@ instruction stack:48|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  610  <|@ instruction JUMP ~[] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #15         // value:short
     4: invokestatic  #16         // java.lang.Integer.toString:(int)java.lang.String
     7: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@3a0c784e slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|DWORD = MOVSX [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr    8  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[10]{9, 99, 999, 9999, 99999, ...}] <|@ <|@
      nr   10  <|@ instruction TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 0.02853574332885067 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B23" 
    xhandlers
    flags 
    probability 4606925391673972304
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  216  <|@ instruction r14|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613125946991078910
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  228  <|@ instruction r10|DWORD = INC r14|DWORD size: DWORD <|@ <|@
      nr  230  <|@ instruction CMP (x: r13|DWORD, y: [rsi|QWORD[.] + r14|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  232  <|@ instruction BRANCH trueDestinationProbability: 0.6319453762390111 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4610190789490421972
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  236  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
locals: r13|DWORD r14|DWORD 
java.lang.Integer.toString(Integer.java:400) [bci: 24]
locals: r13|DWORD - - 
java.lang.Short.toString(Short.java:388) [bci: 4]
locals: - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:2, 24, 4] <|@ <|@
      nr  238  <|@ instruction r14|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  240  <|@ instruction JUMP ~[] destination: B25 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B25" 
    successors "B24" "B61" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4613125946991078910
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  222  <|@ instruction CMP r14|DWORD y: 10 size: DWORD <|@ <|@
      nr  224  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B23 -> B24 falseDestination: B23 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4606925391673972303
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  244  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  246  <|@ instruction rsi|DWORD = SHL r10|DWORD size: DWORD <|@ <|@
      nr  248  <|@ instruction rsi|DWORD = LEA [rsi|DWORD + 23] size: DWORD <|@ <|@
      nr  250  <|@ instruction rsi|DWORD = AND rsi|DWORD y: -8 size: DWORD <|@ <|@
      nr  252  <|@ instruction rsi|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr  254  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  256  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  258  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4606837889952685344
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  278  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  280  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + rax|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  282  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + rax|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  284  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + rax|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  286  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + rax|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  288  <|@ instruction MOV (x: [rax|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  290  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  292  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr  294  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  296  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4606925391673972303
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  300  <|@ instruction rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  302  <|@ instruction rdx|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  304  <|@ instruction rcx|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  306  <|@ instruction TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  308  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4604737848641798331
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  318  <|@ instruction xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr  320  <|@ instruction J (address: [rsi|QWORD[.]], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  322  <|@ instruction rcx|QWORD = MOVE input: long[8|0x8] <|@ <|@
      nr  324  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B35" "B34" 
    xhandlers
    flags 
    probability 4606925391673972303
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  328  <|@ instruction r11|QWORD = LEA [rdx|QWORD - 4] size: QWORD <|@ <|@
      nr  330  <|@ instruction CMP (x: rcx|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  332  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B32 -> B35 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4604737848641798331
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  340  <|@ instruction xmm0|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  342  <|@ instruction J (address: [rsi|QWORD[.]], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  344  <|@ instruction rcx|QWORD = MOVE input: long[4|0x4] <|@ <|@
      nr  346  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B32" 
    successors "B38" "B37" 
    xhandlers
    flags 
    probability 4606925391673972303
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  350  <|@ instruction r11|QWORD = LEA [rdx|QWORD - 2] size: QWORD <|@ <|@
      nr  352  <|@ instruction CMP (x: rcx|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  354  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B35 -> B38 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4604737848641798331
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  362  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr  364  <|@ instruction J (address: [rsi|QWORD[.] + rcx|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  366  <|@ instruction rcx|QWORD = LEA [rcx|QWORD + 2] size: QWORD <|@ <|@
      nr  368  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B35" 
    successors "B41" "B40" 
    xhandlers
    flags 
    probability 4606925391673972303
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  372  <|@ instruction rdx|QWORD = DEC rdx|QWORD size: QWORD <|@ <|@
      nr  374  <|@ instruction CMP (x: rcx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  376  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B38 -> B41 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4604737848641798331
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  384  <|@ instruction MOV (x: [rsi|QWORD[.] + rcx|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr  386  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B38" 
    successors "B42" 
    xhandlers
    flags 
    probability 4606925391673972303
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  390  <|@ instruction rsi|DWORD = MOVE input: short[0|0x0] <|@ <|@
      nr  392  <|@ instruction r14|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  394  <|@ instruction JUMP ~[] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B20" "B41" 
    successors "B43" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL numbPhis: 5 align: false label: ? <|@ <|@
      nr  398  <|@ instruction rdx|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  400  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[36]{0, 1, 2, 3, 4, ...}] <|@ <|@
      nr  402  <|@ instruction JUMP ~[] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B58" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4612307203293370227
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  424  <|@ instruction r9|DWORD = DEC r10|DWORD size: DWORD <|@ <|@
      nr  426  <|@ instruction CMP (x: rdx|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  428  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B57" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4612307203293370227
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  432  <|@ instruction rdi|DWORD = MOVSX [rcx|QWORD[.] + rbx|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  434  <|@ instruction MOV (x: [rax|QWORD[.] + r9|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  436  <|@ instruction TEST r11|DWORD y: -524288 size: DWORD <|@ <|@
      nr  438  <|@ instruction BRANCH trueDestinationProbability: 0.43939404995585263 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B43" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4608424788531982055
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  596  <|@ st <@st|@reference-map: [rax:0, rcx:0]
live-base-pointers: []
java.lang.Integer.getChars(Integer.java:459) [bci: 107]
locals: r13|DWORD - rax|QWORD[.] r8|DWORD rbx|DWORD r9|DWORD r14|DWORD 
java.lang.Integer.toString(Integer.java:402) [bci: 35]
locals: - - rax|QWORD[.] 
java.lang.Short.toString(Short.java:388) [bci: 4]
locals: - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:107, 35, 4] <|@ <|@
      nr  598  <|@ instruction r10|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  600  <|@ instruction r13|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  602  <|@ instruction JUMP ~[] destination: B57 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B57" 
    successors "B44" "B59" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4612307203293370227
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  406  <|@ instruction r11|DWORD = IMUL r13|DWORD y: 52429 size: DWORD <|@ <|@
      nr  408  <|@ instruction r8|DWORD = SHR r11|DWORD y: 19 size: DWORD <|@ <|@
      nr  410  <|@ instruction r9|DWORD = SHL r8|DWORD y: 3 size: DWORD <|@ <|@
      nr  412  <|@ instruction rbx|DWORD = SHL r8|DWORD size: DWORD <|@ <|@
      nr  414  <|@ instruction r9|DWORD = ADD (x: r9|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  416  <|@ instruction rbx|DWORD = SUB (x: r13|DWORD, ~y: r9|DWORD) size: DWORD <|@ <|@
      nr  418  <|@ instruction CMP rbx|DWORD y: 36 size: DWORD <|@ <|@
      nr  420  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B43 -> B44 falseDestination: B43 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B51" 
    xhandlers
    flags 
    probability 4607182418800017406
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  442  <|@ instruction r11|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@16c0e5e9 encoding: base: 0 shift: 3 <|@ <|@
      nr  444  <|@ instruction rdi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  446  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  448  <|@ instruction BRANCH trueDestinationProbability: 0.9779119300489093 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4606983467152815275
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  452  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  454  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  456  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  458  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B47 -> B48 falseDestination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4606895384676739886
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  490  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  492  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0 <|@ <|@
      nr  494  <|@ instruction rax|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  496  <|@ instruction JUMP ~[] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B48" 
    successors 
    xhandlers
    flags 
    probability 4606983467152815275
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  500  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr  502  <|@ instruction rdx|QWORD = MOV [rdi|QWORD + 168] size: QWORD <|@ <|@
      nr  504  <|@ instruction MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  506  <|@ instruction MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  508  <|@ instruction MOV (x: [rax|QWORD[*] + 12], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr  510  <|@ instruction MOV (x: [rax|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  512  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  514  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4597918192419231311
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  312  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  314  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4583882089441867264
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction r14|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   18  <|@ instruction JUMP ~[] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590251137622047965
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   30  <|@ instruction CMP (x: r10|DWORD, y: [rsi|QWORD[.] + r14|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   32  <|@ instruction BRANCH trueDestinationProbability: 0.6319453762390111 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4587221820936838842
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
locals: r10|DWORD r14|DWORD 
java.lang.Integer.toString(Integer.java:400) [bci: 15]
locals: r13|DWORD - - 
java.lang.Short.toString(Short.java:388) [bci: 4]
locals: - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:2, 15, 4] <|@ <|@
      nr   38  <|@ instruction r14|DWORD = INC r14|DWORD size: DWORD <|@ <|@
      nr   40  <|@ instruction JUMP ~[] destination: B4 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" 
    successors "B3" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4590251137622047965
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   22  <|@ instruction r10|DWORD = NEG r13|DWORD size: DWORD <|@ <|@
      nr   24  <|@ instruction CMP r14|DWORD y: 10 size: DWORD <|@ <|@
      nr   26  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4583882089441867264
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   46  <|@ instruction r11|DWORD = LEA [r14|DWORD + 2] size: DWORD <|@ <|@
      nr   48  <|@ instruction rsi|DWORD = SHL r11|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction rsi|DWORD = LEA [rsi|DWORD + 23] size: DWORD <|@ <|@
      nr   52  <|@ instruction rsi|DWORD = AND rsi|DWORD y: -8 size: DWORD <|@ <|@
      nr   54  <|@ instruction rsi|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr   56  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr   58  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   60  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4583799840761532831
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   84  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr   86  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + rax|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   88  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + rax|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   90  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + rax|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   92  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + rax|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   94  <|@ instruction MOV (x: [rax|QWORD + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr   96  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr   98  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr  100  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4583882089441867264
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  106  <|@ instruction r8|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  108  <|@ instruction r9|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  110  <|@ instruction rsi|QWORD = LEA [r9|QWORD - 8] size: QWORD <|@ <|@
      nr  112  <|@ instruction TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  114  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4581825872433506432
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  124  <|@ instruction xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr  126  <|@ instruction J (address: [r8|QWORD[.]], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  128  <|@ instruction rsi|QWORD = MOVE input: long[8|0x8] <|@ <|@
      nr  130  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors "B14" "B13" 
    xhandlers
    flags 
    probability 4583882089441867264
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  134  <|@ instruction rdx|QWORD = LEA [r9|QWORD - 4] size: QWORD <|@ <|@
      nr  136  <|@ instruction CMP (x: rsi|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  138  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B11 -> B14 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4581825872433506432
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  146  <|@ instruction xmm0|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  148  <|@ instruction J (address: [r8|QWORD[.]], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  150  <|@ instruction rsi|QWORD = MOVE input: long[4|0x4] <|@ <|@
      nr  152  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B11" 
    successors "B17" "B16" 
    xhandlers
    flags 
    probability 4583882089441867264
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  156  <|@ instruction rdx|QWORD = LEA [r9|QWORD - 2] size: QWORD <|@ <|@
      nr  158  <|@ instruction CMP (x: rsi|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  160  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B14 -> B17 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4581825872433506432
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  168  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr  170  <|@ instruction J (address: [r8|QWORD[.] + rsi|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  172  <|@ instruction rsi|QWORD = LEA [rsi|QWORD + 2] size: QWORD <|@ <|@
      nr  174  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B14" 
    successors "B20" "B19" 
    xhandlers
    flags 
    probability 4583882089441867264
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  178  <|@ instruction r9|QWORD = DEC r9|QWORD size: QWORD <|@ <|@
      nr  180  <|@ instruction CMP (x: rsi|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  182  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B17 -> B20 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4581825872433506432
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  190  <|@ instruction MOV (x: [r8|QWORD[.] + rsi|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr  192  <|@ instruction JUMP ~[] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B17" 
    successors "B42" 
    xhandlers
    flags 
    probability 4583882089441867264
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  196  <|@ instruction rsi|DWORD = MOVE input: short[45|0x2d] <|@ <|@
      nr  198  <|@ instruction r14|DWORD = MOVE input: int[45|0x2d] <|@ <|@
      nr  200  <|@ instruction r13|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  202  <|@ instruction r10|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  204  <|@ instruction JUMP ~[] destination: B20 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B52" "B56" 
    xhandlers
    flags 
    probability 4582023674118892127
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  518  <|@ instruction rcx|DWORD = LEA [r10|DWORD - 2] size: DWORD <|@ <|@
      nr  520  <|@ instruction CMP (x: rdx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  522  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B51 -> B52 falseDestination: B51 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4582023674118892127
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  526  <|@ instruction MOV (x: [rax|QWORD[.] + rcx|DWORD * 2 + 16], y: rsi|DWORD) size: WORD <|@ <|@
      nr  528  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  530  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  532  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  534  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4581960009591787445
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  560  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  562  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0 <|@ <|@
      nr  564  <|@ instruction rax|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  566  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B53" 
    successors 
    xhandlers
    flags 
    probability 4582023674118892127
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  570  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr  572  <|@ instruction rdx|QWORD = MOV [rdi|QWORD + 168] size: QWORD <|@ <|@
      nr  574  <|@ instruction MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  576  <|@ instruction MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  578  <|@ instruction MOV (x: [rax|QWORD[*] + 12], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr  580  <|@ instruction MOV (x: [rax|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  582  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  584  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4576790900249878315
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  462  <|@ instruction stack:28|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr  464  <|@ instruction stack:32|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  466  <|@ instruction stack:36|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  468  <|@ instruction stack:40|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  470  <|@ instruction stack:48|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  474  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  476  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  478  <|@ st <@st|@reference-map: [stack:0, stack:20]
live-base-pointers: []
java.lang.Integer.getChars(Integer.java:459) [bci: 107]
locals: r13|DWORD - stack:48|QWORD[.] stack:40|DWORD stack:36|DWORD stack:32|DWORD r14|DWORD 
java.lang.Integer.toString(Integer.java:402) [bci: 35]
locals: - - stack:48|QWORD[.] 
java.lang.Short.toString(Short.java:388) [bci: 4]
locals: - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:107, 35, 4] <|@ <|@
      nr  480  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  482  <|@ instruction rdi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  484  <|@ instruction r11|DWORD[.] = MOVE stack:28|DWORD[.] moveKind: DWORD <|@ <|@
      nr  486  <|@ instruction JUMP ~[] destination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4576753731943418813
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  262  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr  264  <|@ instruction rdx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  266  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  268  <|@ instruction stack:28|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  270  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
locals: r13|DWORD r14|DWORD 
java.lang.Integer.toString(Integer.java:400) [bci: 24]
locals: r13|DWORD - - 
java.lang.Short.toString(Short.java:388) [bci: 4]
locals: - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:2, 24, 4] <|@ <|@
      nr  272  <|@ instruction r10|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  274  <|@ instruction JUMP ~[] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4574874890187126272
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  118  <|@ instruction rsi|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  120  <|@ instruction JUMP ~[] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4553899539185604695
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction stack:28|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr   68  <|@ instruction rdx|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   72  <|@ instruction stack:32|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   74  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
locals: stack:28|DWORD r14|DWORD 
java.lang.Integer.toString(Integer.java:400) [bci: 15]
locals: r13|DWORD - - 
java.lang.Short.toString(Short.java:388) [bci: 4]
locals: - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:2, 15, 4] <|@ <|@
      nr   76  <|@ instruction r11|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction r10|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4552281083486229756
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  538  <|@ instruction stack:28|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr  540  <|@ instruction stack:48|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  542  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  544  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  546  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  548  <|@ st <@st|@reference-map: [stack:0, stack:20]
live-base-pointers: []
java.lang.Integer.getChars(Integer.java:465) [bci: 130]
locals: - - - - - - - 
java.lang.Integer.toString(Integer.java:402) [bci: 35]
locals: - - stack:48|QWORD[.] 
java.lang.Short.toString(Short.java:388) [bci: 4]
locals: - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:130, 35, 4] <|@ <|@
      nr  550  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  552  <|@ instruction rdi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  554  <|@ instruction r11|DWORD[.] = MOVE stack:28|DWORD[.] moveKind: DWORD <|@ <|@
      nr  556  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  588  <|@ instruction MOV [r15|QWORD + 668] y: -54555 size: DWORD <|@ <|@
      nr  590  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  592  <|@ st <@st|@reference-map: [rax:0]
live-base-pointers: []
java.lang.Integer.getChars(Integer.java:459) [bci: 107]
locals: r13|DWORD - rax|QWORD[.] r8|DWORD rbx|DWORD r9|DWORD r14|DWORD 
java.lang.Integer.toString(Integer.java:402) [bci: 35]
locals: - - rax|QWORD[.] 
java.lang.Short.toString(Short.java:388) [bci: 4]
locals: - 
>@ <|@ instruction DEOPT info [bci:107, 35, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  208  <|@ instruction MOV [r15|QWORD + 668] y: -43803 size: DWORD <|@ <|@
      nr  210  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  212  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
locals: r10|DWORD r14|DWORD 
java.lang.Integer.toString(Integer.java:400) [bci: 15]
locals: r13|DWORD - - 
java.lang.Short.toString(Short.java:388) [bci: 4]
locals: - 
>@ <|@ instruction DEOPT info [bci:2, 15, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  614  <|@ instruction r11|DWORD = MOVE input: int[-49179|0xffffffffffff3fe5] <|@ <|@
      nr  618  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B58" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  616  <|@ instruction stack:48|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr  624  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  626  <|@ st <@st|@reference-map: [stack:0]
live-base-pointers: []
java.lang.Integer.getChars(Integer.java:456) [bci: 75]
locals: r13|DWORD - stack:48|QWORD[.] - - r10|DWORD r14|DWORD 
java.lang.Integer.toString(Integer.java:402) [bci: 35]
locals: - - stack:48|QWORD[.] 
java.lang.Short.toString(Short.java:388) [bci: 4]
locals: - 
>@ <|@ instruction DEOPT info [bci:75, 35, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  630  <|@ instruction MOV [r15|QWORD + 668] y: -46619 size: DWORD <|@ <|@
      nr  632  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  634  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
locals: r13|DWORD r14|DWORD 
java.lang.Integer.toString(Integer.java:400) [bci: 24]
locals: r13|DWORD - - 
java.lang.Short.toString(Short.java:388) [bci: 4]
locals: - 
>@ <|@ instruction DEOPT info [bci:2, 24, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  606  <|@ instruction r11|DWORD = MOVE input: int[-51995|0xffffffffffff34e5] <|@ <|@
      nr  610  <|@ instruction JUMP ~[] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #15         // value:short
     4: invokestatic  #16         // java.lang.Integer.toString:(int)java.lang.String
     7: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec2848896c2420440fbf6e0c48beaddeaddeaddeadde4585ed0f8c0002000041be00000000e9270000000f1f8000000000660f1f440000458bd641ffc2463b6cb6100f8e14000000850500000000458bf24183fe0a72e0e970040000498b4760418bf2d1e68d761783e6f84863f6488bd64803d0493b57700f8765030000498957600f188406c00000000f188406000100000f188406400100000f188406800100004489500c48c70001000000c74008addeadde488d70104963d2488d4af84885c90f8c4b010000c5f9efc0c5fa7f0648c7c1080000004c8d5afc493bcb0f8f10000000c5f9efc0c4e1f97e0648c7c1040000004c8d5afe493bcb0f8f0d000000c5f9efc0c5f97e044e488d490248ffca483bca0f8f05000000664489244ebe0000000041be000000008b500c48b9addeaddeaddeaddee93e0000006666660f1f840000000000458bca41ffc9413bd10f868e0300000fbf7c59106642897c481041f7c30000f8ff0f8439000000850500000000458bd1458be84569ddcdcc0000458bc341c1e813458bc841c1e103418bd8d1e34403cb418bdd412bd983fb2472a5e9070300004c8bd849c1eb0348bfaddeaddeaddeadde4585f60f857a010000498b7760488d5618493b57700f87cb010000498957600f1886d8000000488bc6488bf0488b97a8000000488910c74008addeadde4489580c44896010488bc6488b6c24204883c428850500000000c5f877c348c7c100000000e9b8feffff41be00000000e9210000000f1f8000000000660f1f440000463b54b6100f8e1a00000085050000000041ffc6458bd541f7da4183fe0a72e0e93a020000498b4760458d5e02418bf3d1e68d761783e6f84863f6488bd64803d0493b57700f8794010000498957600f188406c00000000f188406000100000f188406400100000f188406800100004489580c48c70001000000c74008addeadde4c8d40104d63cb498d71f84885f60f8c3e010000c5f9efc0c4c17a7f0048c7c608000000498d51fc483bf20f8f10000000c5f9efc0c4c1f97e0048c7c604000000498d51fe483bf20f8f0e000000c5f9efc0c4c1797e0470488d760249ffc9493bf10f8f050000006645892470be2d00000041be2d000000458bea458bd3e9effdffff418d4afe3bd10f86370100006689744810498b7760488d5618493b57700f87e9000000498957600f1886d8000000488bc6488bf0488b97a8000000488910c74008addeadde4489580c44896010488bc6488b6c24204883c428850500000000c5f877c344895c241444894c2410895c240c44894424084889042448beaddeaddeaddeaddeba02000000b901000000e8000000009048bfaddeaddeaddeadde448b5c2414e9fefdffff48beaddeaddeaddeadde418bd2b9000000004489542414e80000000090448b542414e9aafcffff48c7c600000000e9c6feffff448954241448beaddeaddeaddeadde418bd3b90000000044895c2410e80000000090448b5c2410448b542414e971feffff44895c24144889042448beaddeaddeaddeaddeba02000000b901000000e8000000009048bfaddeaddeaddeadde448b5c2414e9eefeffff41c7879c020000e52affff4d89a7a8020000e8000000009041c7879c020000e554ffff4d89a7a8020000e8000000009041bbe53fffff4889042445899f9c0200004d89a7a8020000e8000000009041c7879c020000e549ffff4d89a7a8020000e8000000009041bbe534ffffebc8e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@3a0c784e slotKind: QWORD  <||@
  Comment 48 6 r13|DWORD = MOVSX [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 53 8 rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[10]{9, 99, 999, 9999, 99999, ...}]  <||@
  Comment 53 {Object[int[10]{9, 99, 999, 9999, 99999, ...}]}  <||@
  Comment 63 10 TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 66 12 BRANCH trueDestinationProbability: 0.02853574332885067 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B22  <||@
  Comment 72 block B22 null  <||@
  Comment 72 214 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 72 216 r14|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 78 218 JUMP ~[] destination: B22 -> B23  <||@
  Comment 83 block B24 loop 1 depth 1 header:41|LoopBegin  <||@
  Comment 83 226 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 96 228 r10|DWORD = INC r14|DWORD size: DWORD  <||@
  Comment 102 230 CMP (x: r13|DWORD, y: [rsi|QWORD[.] + r14|DWORD * 4 + 16]) size: DWORD  <||@
  Comment 107 232 BRANCH trueDestinationProbability: 0.6319453762390111 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B26  <||@
  Comment 113 block B25 loop 1 depth 1 header:41|LoopBegin  <||@
  Comment 113 234 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 113 236 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:2, 24, 4]  <||@
  Comment 113 [rsi:0]at java.lang.Integer.stringSize(Integer.java:473) [bci: 2, duringCall: false, rethrow: false]
              |0          |1         
     locals:  |r13|DWORD  |r14|DWORD 
  at java.lang.Integer.toString(Integer.java:400) [bci: 24, duringCall: true, rethrow: false]
              |0          |1  |2 
     locals:  |r13|DWORD  |-  |- 
  at java.lang.Short.toString(Short.java:388) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 113 {infopoint: SAFEPOINT}  <||@
  Comment 113 11  <||@
  Comment 119 238 r14|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 122 240 JUMP ~[] destination: B25 -> B23  <||@
  Comment 122 block B23 loop 1 depth 1 header:41|LoopBegin  <||@
  Comment 122 220 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 122 222 CMP r14|DWORD y: 10 size: DWORD  <||@
  Comment 126 224 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B23 -> B24 falseDestination: B23 -> B61  <||@
  Comment 133 block B26 null  <||@
  Comment 133 242 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 133 244 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 137 246 rsi|DWORD = SHL r10|DWORD size: DWORD  <||@
  Comment 142 248 rsi|DWORD = LEA [rsi|DWORD + 23] size: DWORD  <||@
  Comment 145 250 rsi|DWORD = AND rsi|DWORD y: -8 size: DWORD  <||@
  Comment 148 252 rsi|QWORD = MOVSXD rsi|DWORD size: QWORD  <||@
  Comment 151 254 rdx|QWORD = ADD (x: rsi|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 157 256 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 161 258 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B26 -> B27 falseDestination: B26 -> B28  <||@
  Comment 167 block B28 null  <||@
  Comment 167 276 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 167 278 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 171 280 AMD64PREFETCH ~[rsi|QWORD + rax|QWORD * 1 + 192] instr: 0  <||@
  Comment 179 282 AMD64PREFETCH ~[rsi|QWORD + rax|QWORD * 1 + 256] instr: 0  <||@
  Comment 187 284 AMD64PREFETCH ~[rsi|QWORD + rax|QWORD * 1 + 320] instr: 0  <||@
  Comment 195 286 AMD64PREFETCH ~[rsi|QWORD + rax|QWORD * 1 + 384] instr: 0  <||@
  Comment 203 288 MOV (x: [rax|QWORD + 12], y: r10|DWORD) size: DWORD  <||@
  Comment 207 290 MOV [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 214 292 MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 214 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 221 294 rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 221 296 JUMP ~[] destination: B28 -> B29  <||@
  Comment 221 block B29 null  <||@
  Comment 221 298 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 221 300 rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 225 302 rdx|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 228 304 rcx|QWORD = LEA [rdx|QWORD - 8] size: QWORD  <||@
  Comment 232 306 TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 235 308 BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B29 -> B30 falseDestination: B29 -> B31  <||@
  Comment 241 block B31 null  <||@
  Comment 241 316 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 241 318 xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 245 320 J (address: [rsi|QWORD[.]], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 249 322 rcx|QWORD = MOVE input: long[8|0x8]  <||@
  Comment 256 324 JUMP ~[] destination: B31 -> B32  <||@
  Comment 256 block B32 null  <||@
  Comment 256 326 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 256 328 r11|QWORD = LEA [rdx|QWORD - 4] size: QWORD  <||@
  Comment 260 330 CMP (x: rcx|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 263 332 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B32 -> B35 falseDestination: B32 -> B34  <||@
  Comment 269 block B34 null  <||@
  Comment 269 338 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 269 340 xmm0|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 273 342 J (address: [rsi|QWORD[.]], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 278 344 rcx|QWORD = MOVE input: long[4|0x4]  <||@
  Comment 285 346 JUMP ~[] destination: B34 -> B35  <||@
  Comment 285 block B35 null  <||@
  Comment 285 348 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 285 350 r11|QWORD = LEA [rdx|QWORD - 2] size: QWORD  <||@
  Comment 289 352 CMP (x: rcx|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 292 354 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B35 -> B38 falseDestination: B35 -> B37  <||@
  Comment 298 block B37 null  <||@
  Comment 298 360 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 298 362 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 302 364 J (address: [rsi|QWORD[.] + rcx|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 307 366 rcx|QWORD = LEA [rcx|QWORD + 2] size: QWORD  <||@
  Comment 311 368 JUMP ~[] destination: B37 -> B38  <||@
  Comment 311 block B38 null  <||@
  Comment 311 370 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 311 372 rdx|QWORD = DEC rdx|QWORD size: QWORD  <||@
  Comment 314 374 CMP (x: rcx|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 317 376 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B38 -> B41 falseDestination: B38 -> B40  <||@
  Comment 323 block B40 null  <||@
  Comment 323 382 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 323 384 MOV (x: [rsi|QWORD[.] + rcx|QWORD * 2], y: r12|ILLEGAL) size: WORD  <||@
  Comment 328 386 JUMP ~[] destination: B40 -> B41  <||@
  Comment 328 block B41 null  <||@
  Comment 328 388 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 328 390 rsi|DWORD = MOVE input: short[0|0x0]  <||@
  Comment 333 392 r14|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 339 394 JUMP ~[] destination: B41 -> B42  <||@
  Comment 339 block B42 null  <||@
  Comment 339 396 [] = LABEL numbPhis: 5 align: false label: ?  <||@
  Comment 339 398 rdx|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD  <||@
  Comment 342 400 rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[36]{0, 1, 2, 3, 4, ...}]  <||@
  Comment 342 {Object[char[36]{0, 1, 2, 3, 4, ...}]}  <||@
  Comment 352 402 JUMP ~[] destination: B42 -> B43  <||@
  Comment 357 block B44 loop 2 depth 1 header:87|LoopBegin  <||@
  Comment 357 422 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 368 424 r9|DWORD = DEC r10|DWORD size: DWORD  <||@
  Comment 374 426 CMP (x: rdx|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 377 428 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B58  <||@
  Comment 383 block B45 loop 2 depth 1 header:87|LoopBegin  <||@
  Comment 383 430 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 383 432 rdi|DWORD = MOVSX [rcx|QWORD[.] + rbx|DWORD * 2 + 16] size: DWORD  <||@
  Comment 388 434 MOV (x: [rax|QWORD[.] + r9|DWORD * 2 + 16], y: rdi|DWORD) size: WORD  <||@
  Comment 394 436 TEST r11|DWORD y: -524288 size: DWORD  <||@
  Comment 401 438 BRANCH trueDestinationProbability: 0.43939404995585263 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B57  <||@
  Comment 407 block B57 loop 2 depth 1 header:87|LoopBegin  <||@
  Comment 407 594 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 407 596 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:107, 35, 4]  <||@
  Comment 407 [rax:0, rcx:0]at java.lang.Integer.getChars(Integer.java:459) [bci: 107, duringCall: false, rethrow: false]
              |0          |1  |2             |3         |4          |5         |6         
     locals:  |r13|DWORD  |-  |rax|QWORD[.]  |r8|DWORD  |rbx|DWORD  |r9|DWORD  |r14|DWORD 
  at java.lang.Integer.toString(Integer.java:402) [bci: 35, duringCall: true, rethrow: false]
              |0  |1  |2            
     locals:  |-  |-  |rax|QWORD[.] 
  at java.lang.Short.toString(Short.java:388) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 407 {infopoint: SAFEPOINT}  <||@
  Comment 407 11  <||@
  Comment 413 598 r10|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 416 600 r13|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 419 602 JUMP ~[] destination: B57 -> B43  <||@
  Comment 419 block B43 loop 2 depth 1 header:87|LoopBegin  <||@
  Comment 419 404 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 419 406 r11|DWORD = IMUL r13|DWORD y: 52429 size: DWORD  <||@
  Comment 426 408 r8|DWORD = SHR r11|DWORD y: 19 size: DWORD  <||@
  Comment 433 410 r9|DWORD = SHL r8|DWORD y: 3 size: DWORD  <||@
  Comment 440 412 rbx|DWORD = SHL r8|DWORD size: DWORD  <||@
  Comment 445 414 r9|DWORD = ADD (x: r9|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 448 416 rbx|DWORD = SUB (x: r13|DWORD, ~y: r9|DWORD) size: DWORD  <||@
  Comment 454 418 CMP rbx|DWORD y: 36 size: DWORD  <||@
  Comment 457 420 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B43 -> B44 falseDestination: B43 -> B59  <||@
  Comment 464 block B46 null  <||@
  Comment 464 440 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 464 442 r11|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@16c0e5e9 encoding: base: 0 shift: 3  <||@
  Comment 471 444 rdi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 471 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 481 446 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 484 448 BRANCH trueDestinationProbability: 0.9779119300489093 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B51  <||@
  Comment 490 block B47 null  <||@
  Comment 490 450 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 490 452 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 494 454 rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD  <||@
  Comment 498 456 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 502 458 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B47 -> B48 falseDestination: B47 -> B49  <||@
  Comment 508 block B49 null  <||@
  Comment 508 488 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 508 490 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 512 492 AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0  <||@
  Comment 519 494 rax|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 522 496 JUMP ~[] destination: B49 -> B50  <||@
  Comment 522 block B50 null  <||@
  Comment 522 498 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 522 500 rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 525 502 rdx|QWORD = MOV [rdi|QWORD + 168] size: QWORD  <||@
  Comment 532 504 MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD  <||@
  Comment 535 506 MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 535 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 542 508 MOV (x: [rax|QWORD[*] + 12], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 546 510 MOV (x: [rax|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 550 512 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 553 514 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 562 12  <||@
  Comment 572 block B30 null  <||@
  Comment 572 310 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 572 312 rcx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 579 314 JUMP ~[] destination: B30 -> B32  <||@
  Comment 584 block B1 null  <||@
  Comment 584 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 584 16 r14|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 590 18 JUMP ~[] destination: B1 -> B2  <||@
  Comment 595 block B3 loop 0 depth 1 header:58|LoopBegin  <||@
  Comment 595 28 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 608 30 CMP (x: r10|DWORD, y: [rsi|QWORD[.] + r14|DWORD * 4 + 16]) size: DWORD  <||@
  Comment 613 32 BRANCH trueDestinationProbability: 0.6319453762390111 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5  <||@
  Comment 619 block B4 loop 0 depth 1 header:58|LoopBegin  <||@
  Comment 619 34 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 619 36 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:2, 15, 4]  <||@
  Comment 619 [rsi:0]at java.lang.Integer.stringSize(Integer.java:473) [bci: 2, duringCall: false, rethrow: false]
              |0          |1         
     locals:  |r10|DWORD  |r14|DWORD 
  at java.lang.Integer.toString(Integer.java:400) [bci: 15, duringCall: true, rethrow: false]
              |0          |1  |2 
     locals:  |r13|DWORD  |-  |- 
  at java.lang.Short.toString(Short.java:388) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 619 {infopoint: SAFEPOINT}  <||@
  Comment 619 11  <||@
  Comment 625 38 r14|DWORD = INC r14|DWORD size: DWORD  <||@
  Comment 628 40 JUMP ~[] destination: B4 -> B2  <||@
  Comment 628 block B2 loop 0 depth 1 header:58|LoopBegin  <||@
  Comment 628 20 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 628 22 r10|DWORD = NEG r13|DWORD size: DWORD  <||@
  Comment 634 24 CMP r14|DWORD y: 10 size: DWORD  <||@
  Comment 638 26 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B21  <||@
  Comment 645 block B5 null  <||@
  Comment 645 42 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 645 44 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 649 46 r11|DWORD = LEA [r14|DWORD + 2] size: DWORD  <||@
  Comment 653 48 rsi|DWORD = SHL r11|DWORD size: DWORD  <||@
  Comment 658 50 rsi|DWORD = LEA [rsi|DWORD + 23] size: DWORD  <||@
  Comment 661 52 rsi|DWORD = AND rsi|DWORD y: -8 size: DWORD  <||@
  Comment 664 54 rsi|QWORD = MOVSXD rsi|DWORD size: QWORD  <||@
  Comment 667 56 rdx|QWORD = ADD (x: rsi|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 673 58 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 677 60 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7  <||@
  Comment 683 block B7 null  <||@
  Comment 683 82 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 683 84 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 687 86 AMD64PREFETCH ~[rsi|QWORD + rax|QWORD * 1 + 192] instr: 0  <||@
  Comment 695 88 AMD64PREFETCH ~[rsi|QWORD + rax|QWORD * 1 + 256] instr: 0  <||@
  Comment 703 90 AMD64PREFETCH ~[rsi|QWORD + rax|QWORD * 1 + 320] instr: 0  <||@
  Comment 711 92 AMD64PREFETCH ~[rsi|QWORD + rax|QWORD * 1 + 384] instr: 0  <||@
  Comment 719 94 MOV (x: [rax|QWORD + 12], y: r11|DWORD) size: DWORD  <||@
  Comment 723 96 MOV [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 730 98 MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 730 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 737 100 rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 737 102 JUMP ~[] destination: B7 -> B8  <||@
  Comment 737 block B8 null  <||@
  Comment 737 104 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 737 106 r8|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 741 108 r9|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 744 110 rsi|QWORD = LEA [r9|QWORD - 8] size: QWORD  <||@
  Comment 748 112 TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 751 114 BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B10  <||@
  Comment 757 block B10 null  <||@
  Comment 757 122 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 757 124 xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 761 126 J (address: [r8|QWORD[.]], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 766 128 rsi|QWORD = MOVE input: long[8|0x8]  <||@
  Comment 773 130 JUMP ~[] destination: B10 -> B11  <||@
  Comment 773 block B11 null  <||@
  Comment 773 132 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 773 134 rdx|QWORD = LEA [r9|QWORD - 4] size: QWORD  <||@
  Comment 777 136 CMP (x: rsi|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 780 138 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B11 -> B14 falseDestination: B11 -> B13  <||@
  Comment 786 block B13 null  <||@
  Comment 786 144 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 786 146 xmm0|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 790 148 J (address: [r8|QWORD[.]], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 795 150 rsi|QWORD = MOVE input: long[4|0x4]  <||@
  Comment 802 152 JUMP ~[] destination: B13 -> B14  <||@
  Comment 802 block B14 null  <||@
  Comment 802 154 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 802 156 rdx|QWORD = LEA [r9|QWORD - 2] size: QWORD  <||@
  Comment 806 158 CMP (x: rsi|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 809 160 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B14 -> B17 falseDestination: B14 -> B16  <||@
  Comment 815 block B16 null  <||@
  Comment 815 166 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 815 168 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 819 170 J (address: [r8|QWORD[.] + rsi|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 825 172 rsi|QWORD = LEA [rsi|QWORD + 2] size: QWORD  <||@
  Comment 829 174 JUMP ~[] destination: B16 -> B17  <||@
  Comment 829 block B17 null  <||@
  Comment 829 176 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 829 178 r9|QWORD = DEC r9|QWORD size: QWORD  <||@
  Comment 832 180 CMP (x: rsi|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 835 182 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B17 -> B20 falseDestination: B17 -> B19  <||@
  Comment 841 block B19 null  <||@
  Comment 841 188 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 841 190 MOV (x: [r8|QWORD[.] + rsi|QWORD * 2], y: r12|ILLEGAL) size: WORD  <||@
  Comment 846 192 JUMP ~[] destination: B19 -> B20  <||@
  Comment 846 block B20 null  <||@
  Comment 846 194 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 846 196 rsi|DWORD = MOVE input: short[45|0x2d]  <||@
  Comment 851 198 r14|DWORD = MOVE input: int[45|0x2d]  <||@
  Comment 857 200 r13|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 860 202 r10|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 863 204 JUMP ~[] destination: B20 -> B42  <||@
  Comment 868 block B51 null  <||@
  Comment 868 516 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 868 518 rcx|DWORD = LEA [r10|DWORD - 2] size: DWORD  <||@
  Comment 872 520 CMP (x: rdx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 874 522 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B51 -> B52 falseDestination: B51 -> B56  <||@
  Comment 880 block B52 null  <||@
  Comment 880 524 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 880 526 MOV (x: [rax|QWORD[.] + rcx|DWORD * 2 + 16], y: rsi|DWORD) size: WORD  <||@
  Comment 885 528 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 889 530 rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD  <||@
  Comment 893 532 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 897 534 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B52 -> B53 falseDestination: B52 -> B54  <||@
  Comment 903 block B54 null  <||@
  Comment 903 558 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 903 560 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 907 562 AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0  <||@
  Comment 914 564 rax|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 917 566 JUMP ~[] destination: B54 -> B55  <||@
  Comment 917 block B55 null  <||@
  Comment 917 568 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 917 570 rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 920 572 rdx|QWORD = MOV [rdi|QWORD + 168] size: QWORD  <||@
  Comment 927 574 MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD  <||@
  Comment 930 576 MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 930 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 937 578 MOV (x: [rax|QWORD[*] + 12], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 941 580 MOV (x: [rax|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 945 582 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 948 584 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 957 12  <||@
  Comment 967 block B48 null  <||@
  Comment 967 460 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 967 462 stack:28|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 972 464 stack:32|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 977 466 stack:36|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 981 468 stack:40|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 986 470 stack:48|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 990 472 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 990 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1000 474 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 1005 476 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1010 478 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:107, 35, 4]  <||@
  Comment 1010 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1015 [stack:0, stack:20]at java.lang.Integer.getChars(Integer.java:459) [bci: 107, duringCall: false, rethrow: false]
              |0          |1  |2                  |3               |4               |5               |6         
     locals:  |r13|DWORD  |-  |stack:48|QWORD[.]  |stack:40|DWORD  |stack:36|DWORD  |stack:32|DWORD  |r14|DWORD 
  at java.lang.Integer.toString(Integer.java:402) [bci: 35, duringCall: true, rethrow: false]
              |0  |1  |2                 
     locals:  |-  |-  |stack:48|QWORD[.] 
  at java.lang.Short.toString(Short.java:388) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 1016 480 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1016 482 rdi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 1016 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 1026 484 r11|DWORD[.] = MOVE stack:28|DWORD[.] moveKind: DWORD  <||@
  Comment 1031 486 JUMP ~[] destination: B48 -> B50  <||@
  Comment 1036 block B27 null  <||@
  Comment 1036 260 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1036 262 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 1036 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 1046 264 rdx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1049 266 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1054 268 stack:28|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1059 270 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:2, 24, 4]  <||@
  Comment 1059 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1064 []at java.lang.Integer.stringSize(Integer.java:473) [bci: 2, duringCall: false, rethrow: false]
              |0          |1         
     locals:  |r13|DWORD  |r14|DWORD 
  at java.lang.Integer.toString(Integer.java:400) [bci: 24, duringCall: true, rethrow: false]
              |0          |1  |2 
     locals:  |r13|DWORD  |-  |- 
  at java.lang.Short.toString(Short.java:388) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 1065 272 r10|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 1070 274 JUMP ~[] destination: B27 -> B29  <||@
  Comment 1075 block B9 null  <||@
  Comment 1075 116 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1075 118 rsi|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1082 120 JUMP ~[] destination: B9 -> B11  <||@
  Comment 1087 block B6 null  <||@
  Comment 1087 62 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1087 64 stack:28|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1092 66 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 1092 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 1102 68 rdx|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1105 70 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1110 72 stack:32|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1115 74 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:2, 15, 4]  <||@
  Comment 1115 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1120 []at java.lang.Integer.stringSize(Integer.java:473) [bci: 2, duringCall: false, rethrow: false]
              |0               |1         
     locals:  |stack:28|DWORD  |r14|DWORD 
  at java.lang.Integer.toString(Integer.java:400) [bci: 15, duringCall: true, rethrow: false]
              |0          |1  |2 
     locals:  |r13|DWORD  |-  |- 
  at java.lang.Short.toString(Short.java:388) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 1121 76 r11|DWORD = MOVE stack:32|DWORD moveKind: DWORD  <||@
  Comment 1126 78 r10|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 1131 80 JUMP ~[] destination: B6 -> B8  <||@
  Comment 1136 block B53 null  <||@
  Comment 1136 536 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1136 538 stack:28|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 1141 540 stack:48|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1145 542 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1145 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1155 544 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 1160 546 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1165 548 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:130, 35, 4]  <||@
  Comment 1165 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1170 [stack:0, stack:20]at java.lang.Integer.getChars(Integer.java:465) [bci: 130, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6 
     locals:  |-  |-  |-  |-  |-  |-  |- 
  at java.lang.Integer.toString(Integer.java:402) [bci: 35, duringCall: true, rethrow: false]
              |0  |1  |2                 
     locals:  |-  |-  |stack:48|QWORD[.] 
  at java.lang.Short.toString(Short.java:388) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 1171 550 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1171 552 rdi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 1171 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 1181 554 r11|DWORD[.] = MOVE stack:28|DWORD[.] moveKind: DWORD  <||@
  Comment 1186 556 JUMP ~[] destination: B53 -> B55  <||@
  Comment 1191 block B56 null  <||@
  Comment 1191 586 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1191 588 MOV [r15|QWORD + 668] y: -54555 size: DWORD  <||@
  Comment 1202 590 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1209 592 DEOPT info [bci:107, 35, 4]  <||@
  Comment 1209 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1214 [rax:0]at java.lang.Integer.getChars(Integer.java:459) [bci: 107, duringCall: false, rethrow: false]
              |0          |1  |2             |3         |4          |5         |6         
     locals:  |r13|DWORD  |-  |rax|QWORD[.]  |r8|DWORD  |rbx|DWORD  |r9|DWORD  |r14|DWORD 
  at java.lang.Integer.toString(Integer.java:402) [bci: 35, duringCall: true, rethrow: false]
              |0  |1  |2            
     locals:  |-  |-  |rax|QWORD[.] 
  at java.lang.Short.toString(Short.java:388) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 1215 block B21 null  <||@
  Comment 1215 206 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1215 208 MOV [r15|QWORD + 668] y: -43803 size: DWORD  <||@
  Comment 1226 210 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1233 212 DEOPT info [bci:2, 15, 4]  <||@
  Comment 1233 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1238 []at java.lang.Integer.stringSize(Integer.java:473) [bci: 2, duringCall: false, rethrow: false]
              |0          |1         
     locals:  |r10|DWORD  |r14|DWORD 
  at java.lang.Integer.toString(Integer.java:400) [bci: 15, duringCall: true, rethrow: false]
              |0          |1  |2 
     locals:  |r13|DWORD  |-  |- 
  at java.lang.Short.toString(Short.java:388) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 1239 block B59 null  <||@
  Comment 1239 612 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1239 614 r11|DWORD = MOVE input: int[-49179|0xffffffffffff3fe5]  <||@
  Comment 1245 618 JUMP ~[] destination: B59 -> B60  <||@
  Comment 1245 block B60 null  <||@
  Comment 1245 620 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1245 616 stack:48|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1249 622 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 1256 624 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1263 626 DEOPT info [bci:75, 35, 4]  <||@
  Comment 1263 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1268 [stack:0]at java.lang.Integer.getChars(Integer.java:456) [bci: 75, duringCall: false, rethrow: false]
              |0          |1  |2                  |3  |4  |5          |6         
     locals:  |r13|DWORD  |-  |stack:48|QWORD[.]  |-  |-  |r10|DWORD  |r14|DWORD 
  at java.lang.Integer.toString(Integer.java:402) [bci: 35, duringCall: true, rethrow: false]
              |0  |1  |2                 
     locals:  |-  |-  |stack:48|QWORD[.] 
  at java.lang.Short.toString(Short.java:388) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 1269 block B61 null  <||@
  Comment 1269 628 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1269 630 MOV [r15|QWORD + 668] y: -46619 size: DWORD  <||@
  Comment 1280 632 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1287 634 DEOPT info [bci:2, 24, 4]  <||@
  Comment 1287 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1292 []at java.lang.Integer.stringSize(Integer.java:473) [bci: 2, duringCall: false, rethrow: false]
              |0          |1         
     locals:  |r13|DWORD  |r14|DWORD 
  at java.lang.Integer.toString(Integer.java:400) [bci: 24, duringCall: true, rethrow: false]
              |0          |1  |2 
     locals:  |r13|DWORD  |-  |- 
  at java.lang.Short.toString(Short.java:388) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 1293 block B58 null  <||@
  Comment 1293 604 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1293 606 r11|DWORD = MOVE input: int[-51995|0xffffffffffff34e5]  <||@
  Comment 1299 610 JUMP ~[] destination: B58 -> B60  <||@
  Comment 1301 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1301 4  <||@
  Comment 1307 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 1307 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-9535[java.lang.Short.toString()]"
  method "HotSpotCompilation-9535[java.lang.Short.toString()]"
  date 1527005214130
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 107bded60 448b560849c1e203493bc20f85ef70c2fe900f1f80000000000f1f800000000089842400c0feff4883ec2848896c2420440fbf6e0c48bef8310ac0060000004585ed0f8c0002000041be00000000e9270000000f1f8000000000660f1f440000458bd641ffc2463b6cb6100f8e1400000085052f02cbfc458bf24183fe0a72e0e970040000498b4760418bf2d1e68d761783e6f84863f6488bd64803d0493b57700f8765030000498957600f188406c00000000f188406000100000f188406400100000f188406800100004489500c48c70001000000c74008410000f8488d70104963d2488d4af84885c90f8c4b010000c5f9efc0c5fa7f0648c7c1080000004c8d5afc493bcb0f8f10000000c5f9efc0c4e1f97e0648c7c1040000004c8d5afe493bcb0f8f0d000000c5f9efc0c5f97e044e488d490248ffca483bca0f8f05000000664489244ebe0000000041be000000008b500c48b9e0330ac006000000e93e0000006666660f1f840000000000458bca41ffc9413bd10f868e0300000fbf7c59106642897c481041f7c30000f8ff0f843900000085050901cbfc458bd1458be84569ddcdcc0000458bc341c1e813458bc841c1e103418bd8d1e34403cb418bdd412bd983fb2472a5e9070300004c8bd849c1eb0348bfd01600c0070000004585f60f857a010000498b7760488d5618493b57700f87cb010000498957600f1886d8000000488bc6488bf0488b97a8000000488910c74008da0200f84489580c44896010488bc6488b6c24204883c42885056e00cbfcc5f877c348c7c100000000e9b8feffff41be00000000e9210000000f1f8000000000660f1f440000463b54b6100f8e1a00000085053500cbfc41ffc6458bd541f7da4183fe0a72e0e93a020000498b4760458d5e02418bf3d1e68d761783e6f84863f6488bd64803d0493b57700f8794010000498957600f188406c00000000f188406000100000f188406400100000f188406800100004489580c48c70001000000c74008410000f84c8d40104d63cb498d71f84885f60f8c3e010000c5f9efc0c4c17a7f0048c7c608000000498d51fc483bf20f8f10000000c5f9efc0c4c1f97e0048c7c604000000498d51fe483bf20f8f0e000000c5f9efc0c4c1797e0470488d760249ffc9493bf10f8f050000006645892470be2d00000041be2d000000458bea458bd3e9effdffff418d4afe3bd10f86370100006689744810498b7760488d5618493b57700f87e9000000498957600f1886d8000000488bc6488bf0488b97a8000000488910c74008da0200f84489580c44896010488bc6488b6c24204883c4288505e3fecafcc5f877c344895c241444894c2410895c240c44894424084889042448be680b00c007000000ba02000000b901000000e8897c3bff9048bfd01600c007000000448b5c2414e9fefdffff48be080200c007000000418bd2b9000000004489542414e8587c3bff90448b542414e9aafcffff48c7c600000000e9c6feffff448954241448be080200c007000000418bd3b90000000044895c2410e8207c3bff90448b5c2410448b542414e971feffff44895c24144889042448be680b00c007000000ba02000000b901000000e8ee7b3bff9048bfd01600c007000000448b5c2414e9eefeffff41c7879c020000e52affff4d89a7a8020000e8e083c2fe9041c7879c020000e554ffff4d89a7a8020000e8c883c2fe9041bbe53fffff4889042445899f9c0200004d89a7a8020000e8aa83c2fe9041c7879c020000e549ffff4d89a7a8020000e89283c2fe9041bbe534ffffebc8e8a6b306ff90e88082c2fe90f4f4f4f4f4f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@3a0c784e slotKind: QWORD  <||@
  Comment 48 6 r13|DWORD = MOVSX [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 53 8 rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[10]{9, 99, 999, 9999, 99999, ...}]  <||@
  Comment 53 {Object[int[10]{9, 99, 999, 9999, 99999, ...}]}  <||@
  Comment 63 10 TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 66 12 BRANCH trueDestinationProbability: 0.02853574332885067 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B22  <||@
  Comment 72 block B22 null  <||@
  Comment 72 214 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 72 216 r14|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 78 218 JUMP ~[] destination: B22 -> B23  <||@
  Comment 83 block B24 loop 1 depth 1 header:41|LoopBegin  <||@
  Comment 83 226 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 96 228 r10|DWORD = INC r14|DWORD size: DWORD  <||@
  Comment 102 230 CMP (x: r13|DWORD, y: [rsi|QWORD[.] + r14|DWORD * 4 + 16]) size: DWORD  <||@
  Comment 107 232 BRANCH trueDestinationProbability: 0.6319453762390111 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B26  <||@
  Comment 113 block B25 loop 1 depth 1 header:41|LoopBegin  <||@
  Comment 113 234 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 113 236 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:2, 24, 4]  <||@
  Comment 113 [rsi:0]at java.lang.Integer.stringSize(Integer.java:473) [bci: 2, duringCall: false, rethrow: false]
              |0          |1         
     locals:  |r13|DWORD  |r14|DWORD 
  at java.lang.Integer.toString(Integer.java:400) [bci: 24, duringCall: true, rethrow: false]
              |0          |1  |2 
     locals:  |r13|DWORD  |-  |- 
  at java.lang.Short.toString(Short.java:388) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 113 {infopoint: SAFEPOINT}  <||@
  Comment 113 11  <||@
  Comment 119 238 r14|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 122 240 JUMP ~[] destination: B25 -> B23  <||@
  Comment 122 block B23 loop 1 depth 1 header:41|LoopBegin  <||@
  Comment 122 220 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 122 222 CMP r14|DWORD y: 10 size: DWORD  <||@
  Comment 126 224 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B23 -> B24 falseDestination: B23 -> B61  <||@
  Comment 133 block B26 null  <||@
  Comment 133 242 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 133 244 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 137 246 rsi|DWORD = SHL r10|DWORD size: DWORD  <||@
  Comment 142 248 rsi|DWORD = LEA [rsi|DWORD + 23] size: DWORD  <||@
  Comment 145 250 rsi|DWORD = AND rsi|DWORD y: -8 size: DWORD  <||@
  Comment 148 252 rsi|QWORD = MOVSXD rsi|DWORD size: QWORD  <||@
  Comment 151 254 rdx|QWORD = ADD (x: rsi|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 157 256 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 161 258 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B26 -> B27 falseDestination: B26 -> B28  <||@
  Comment 167 block B28 null  <||@
  Comment 167 276 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 167 278 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 171 280 AMD64PREFETCH ~[rsi|QWORD + rax|QWORD * 1 + 192] instr: 0  <||@
  Comment 179 282 AMD64PREFETCH ~[rsi|QWORD + rax|QWORD * 1 + 256] instr: 0  <||@
  Comment 187 284 AMD64PREFETCH ~[rsi|QWORD + rax|QWORD * 1 + 320] instr: 0  <||@
  Comment 195 286 AMD64PREFETCH ~[rsi|QWORD + rax|QWORD * 1 + 384] instr: 0  <||@
  Comment 203 288 MOV (x: [rax|QWORD + 12], y: r10|DWORD) size: DWORD  <||@
  Comment 207 290 MOV [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 214 292 MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 214 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 221 294 rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 221 296 JUMP ~[] destination: B28 -> B29  <||@
  Comment 221 block B29 null  <||@
  Comment 221 298 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 221 300 rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 225 302 rdx|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 228 304 rcx|QWORD = LEA [rdx|QWORD - 8] size: QWORD  <||@
  Comment 232 306 TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 235 308 BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B29 -> B30 falseDestination: B29 -> B31  <||@
  Comment 241 block B31 null  <||@
  Comment 241 316 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 241 318 xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 245 320 J (address: [rsi|QWORD[.]], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 249 322 rcx|QWORD = MOVE input: long[8|0x8]  <||@
  Comment 256 324 JUMP ~[] destination: B31 -> B32  <||@
  Comment 256 block B32 null  <||@
  Comment 256 326 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 256 328 r11|QWORD = LEA [rdx|QWORD - 4] size: QWORD  <||@
  Comment 260 330 CMP (x: rcx|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 263 332 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B32 -> B35 falseDestination: B32 -> B34  <||@
  Comment 269 block B34 null  <||@
  Comment 269 338 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 269 340 xmm0|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 273 342 J (address: [rsi|QWORD[.]], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 278 344 rcx|QWORD = MOVE input: long[4|0x4]  <||@
  Comment 285 346 JUMP ~[] destination: B34 -> B35  <||@
  Comment 285 block B35 null  <||@
  Comment 285 348 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 285 350 r11|QWORD = LEA [rdx|QWORD - 2] size: QWORD  <||@
  Comment 289 352 CMP (x: rcx|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 292 354 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B35 -> B38 falseDestination: B35 -> B37  <||@
  Comment 298 block B37 null  <||@
  Comment 298 360 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 298 362 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 302 364 J (address: [rsi|QWORD[.] + rcx|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 307 366 rcx|QWORD = LEA [rcx|QWORD + 2] size: QWORD  <||@
  Comment 311 368 JUMP ~[] destination: B37 -> B38  <||@
  Comment 311 block B38 null  <||@
  Comment 311 370 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 311 372 rdx|QWORD = DEC rdx|QWORD size: QWORD  <||@
  Comment 314 374 CMP (x: rcx|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 317 376 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B38 -> B41 falseDestination: B38 -> B40  <||@
  Comment 323 block B40 null  <||@
  Comment 323 382 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 323 384 MOV (x: [rsi|QWORD[.] + rcx|QWORD * 2], y: r12|ILLEGAL) size: WORD  <||@
  Comment 328 386 JUMP ~[] destination: B40 -> B41  <||@
  Comment 328 block B41 null  <||@
  Comment 328 388 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 328 390 rsi|DWORD = MOVE input: short[0|0x0]  <||@
  Comment 333 392 r14|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 339 394 JUMP ~[] destination: B41 -> B42  <||@
  Comment 339 block B42 null  <||@
  Comment 339 396 [] = LABEL numbPhis: 5 align: false label: ?  <||@
  Comment 339 398 rdx|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD  <||@
  Comment 342 400 rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[36]{0, 1, 2, 3, 4, ...}]  <||@
  Comment 342 {Object[char[36]{0, 1, 2, 3, 4, ...}]}  <||@
  Comment 352 402 JUMP ~[] destination: B42 -> B43  <||@
  Comment 357 block B44 loop 2 depth 1 header:87|LoopBegin  <||@
  Comment 357 422 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 368 424 r9|DWORD = DEC r10|DWORD size: DWORD  <||@
  Comment 374 426 CMP (x: rdx|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 377 428 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B58  <||@
  Comment 383 block B45 loop 2 depth 1 header:87|LoopBegin  <||@
  Comment 383 430 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 383 432 rdi|DWORD = MOVSX [rcx|QWORD[.] + rbx|DWORD * 2 + 16] size: DWORD  <||@
  Comment 388 434 MOV (x: [rax|QWORD[.] + r9|DWORD * 2 + 16], y: rdi|DWORD) size: WORD  <||@
  Comment 394 436 TEST r11|DWORD y: -524288 size: DWORD  <||@
  Comment 401 438 BRANCH trueDestinationProbability: 0.43939404995585263 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B57  <||@
  Comment 407 block B57 loop 2 depth 1 header:87|LoopBegin  <||@
  Comment 407 594 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 407 596 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:107, 35, 4]  <||@
  Comment 407 [rax:0, rcx:0]at java.lang.Integer.getChars(Integer.java:459) [bci: 107, duringCall: false, rethrow: false]
              |0          |1  |2             |3         |4          |5         |6         
     locals:  |r13|DWORD  |-  |rax|QWORD[.]  |r8|DWORD  |rbx|DWORD  |r9|DWORD  |r14|DWORD 
  at java.lang.Integer.toString(Integer.java:402) [bci: 35, duringCall: true, rethrow: false]
              |0  |1  |2            
     locals:  |-  |-  |rax|QWORD[.] 
  at java.lang.Short.toString(Short.java:388) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 407 {infopoint: SAFEPOINT}  <||@
  Comment 407 11  <||@
  Comment 413 598 r10|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 416 600 r13|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 419 602 JUMP ~[] destination: B57 -> B43  <||@
  Comment 419 block B43 loop 2 depth 1 header:87|LoopBegin  <||@
  Comment 419 404 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 419 406 r11|DWORD = IMUL r13|DWORD y: 52429 size: DWORD  <||@
  Comment 426 408 r8|DWORD = SHR r11|DWORD y: 19 size: DWORD  <||@
  Comment 433 410 r9|DWORD = SHL r8|DWORD y: 3 size: DWORD  <||@
  Comment 440 412 rbx|DWORD = SHL r8|DWORD size: DWORD  <||@
  Comment 445 414 r9|DWORD = ADD (x: r9|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 448 416 rbx|DWORD = SUB (x: r13|DWORD, ~y: r9|DWORD) size: DWORD  <||@
  Comment 454 418 CMP rbx|DWORD y: 36 size: DWORD  <||@
  Comment 457 420 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B43 -> B44 falseDestination: B43 -> B59  <||@
  Comment 464 block B46 null  <||@
  Comment 464 440 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 464 442 r11|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@16c0e5e9 encoding: base: 0 shift: 3  <||@
  Comment 471 444 rdi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 471 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 481 446 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 484 448 BRANCH trueDestinationProbability: 0.9779119300489093 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B51  <||@
  Comment 490 block B47 null  <||@
  Comment 490 450 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 490 452 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 494 454 rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD  <||@
  Comment 498 456 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 502 458 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B47 -> B48 falseDestination: B47 -> B49  <||@
  Comment 508 block B49 null  <||@
  Comment 508 488 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 508 490 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 512 492 AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0  <||@
  Comment 519 494 rax|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 522 496 JUMP ~[] destination: B49 -> B50  <||@
  Comment 522 block B50 null  <||@
  Comment 522 498 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 522 500 rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 525 502 rdx|QWORD = MOV [rdi|QWORD + 168] size: QWORD  <||@
  Comment 532 504 MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD  <||@
  Comment 535 506 MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 535 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 542 508 MOV (x: [rax|QWORD[*] + 12], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 546 510 MOV (x: [rax|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 550 512 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 553 514 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 562 12  <||@
  Comment 572 block B30 null  <||@
  Comment 572 310 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 572 312 rcx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 579 314 JUMP ~[] destination: B30 -> B32  <||@
  Comment 584 block B1 null  <||@
  Comment 584 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 584 16 r14|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 590 18 JUMP ~[] destination: B1 -> B2  <||@
  Comment 595 block B3 loop 0 depth 1 header:58|LoopBegin  <||@
  Comment 595 28 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 608 30 CMP (x: r10|DWORD, y: [rsi|QWORD[.] + r14|DWORD * 4 + 16]) size: DWORD  <||@
  Comment 613 32 BRANCH trueDestinationProbability: 0.6319453762390111 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5  <||@
  Comment 619 block B4 loop 0 depth 1 header:58|LoopBegin  <||@
  Comment 619 34 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 619 36 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:2, 15, 4]  <||@
  Comment 619 [rsi:0]at java.lang.Integer.stringSize(Integer.java:473) [bci: 2, duringCall: false, rethrow: false]
              |0          |1         
     locals:  |r10|DWORD  |r14|DWORD 
  at java.lang.Integer.toString(Integer.java:400) [bci: 15, duringCall: true, rethrow: false]
              |0          |1  |2 
     locals:  |r13|DWORD  |-  |- 
  at java.lang.Short.toString(Short.java:388) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 619 {infopoint: SAFEPOINT}  <||@
  Comment 619 11  <||@
  Comment 625 38 r14|DWORD = INC r14|DWORD size: DWORD  <||@
  Comment 628 40 JUMP ~[] destination: B4 -> B2  <||@
  Comment 628 block B2 loop 0 depth 1 header:58|LoopBegin  <||@
  Comment 628 20 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 628 22 r10|DWORD = NEG r13|DWORD size: DWORD  <||@
  Comment 634 24 CMP r14|DWORD y: 10 size: DWORD  <||@
  Comment 638 26 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B21  <||@
  Comment 645 block B5 null  <||@
  Comment 645 42 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 645 44 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 649 46 r11|DWORD = LEA [r14|DWORD + 2] size: DWORD  <||@
  Comment 653 48 rsi|DWORD = SHL r11|DWORD size: DWORD  <||@
  Comment 658 50 rsi|DWORD = LEA [rsi|DWORD + 23] size: DWORD  <||@
  Comment 661 52 rsi|DWORD = AND rsi|DWORD y: -8 size: DWORD  <||@
  Comment 664 54 rsi|QWORD = MOVSXD rsi|DWORD size: QWORD  <||@
  Comment 667 56 rdx|QWORD = ADD (x: rsi|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 673 58 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 677 60 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7  <||@
  Comment 683 block B7 null  <||@
  Comment 683 82 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 683 84 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 687 86 AMD64PREFETCH ~[rsi|QWORD + rax|QWORD * 1 + 192] instr: 0  <||@
  Comment 695 88 AMD64PREFETCH ~[rsi|QWORD + rax|QWORD * 1 + 256] instr: 0  <||@
  Comment 703 90 AMD64PREFETCH ~[rsi|QWORD + rax|QWORD * 1 + 320] instr: 0  <||@
  Comment 711 92 AMD64PREFETCH ~[rsi|QWORD + rax|QWORD * 1 + 384] instr: 0  <||@
  Comment 719 94 MOV (x: [rax|QWORD + 12], y: r11|DWORD) size: DWORD  <||@
  Comment 723 96 MOV [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 730 98 MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 730 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 737 100 rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 737 102 JUMP ~[] destination: B7 -> B8  <||@
  Comment 737 block B8 null  <||@
  Comment 737 104 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 737 106 r8|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 741 108 r9|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 744 110 rsi|QWORD = LEA [r9|QWORD - 8] size: QWORD  <||@
  Comment 748 112 TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 751 114 BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B10  <||@
  Comment 757 block B10 null  <||@
  Comment 757 122 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 757 124 xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 761 126 J (address: [r8|QWORD[.]], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 766 128 rsi|QWORD = MOVE input: long[8|0x8]  <||@
  Comment 773 130 JUMP ~[] destination: B10 -> B11  <||@
  Comment 773 block B11 null  <||@
  Comment 773 132 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 773 134 rdx|QWORD = LEA [r9|QWORD - 4] size: QWORD  <||@
  Comment 777 136 CMP (x: rsi|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 780 138 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B11 -> B14 falseDestination: B11 -> B13  <||@
  Comment 786 block B13 null  <||@
  Comment 786 144 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 786 146 xmm0|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 790 148 J (address: [r8|QWORD[.]], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 795 150 rsi|QWORD = MOVE input: long[4|0x4]  <||@
  Comment 802 152 JUMP ~[] destination: B13 -> B14  <||@
  Comment 802 block B14 null  <||@
  Comment 802 154 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 802 156 rdx|QWORD = LEA [r9|QWORD - 2] size: QWORD  <||@
  Comment 806 158 CMP (x: rsi|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 809 160 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B14 -> B17 falseDestination: B14 -> B16  <||@
  Comment 815 block B16 null  <||@
  Comment 815 166 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 815 168 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 819 170 J (address: [r8|QWORD[.] + rsi|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 825 172 rsi|QWORD = LEA [rsi|QWORD + 2] size: QWORD  <||@
  Comment 829 174 JUMP ~[] destination: B16 -> B17  <||@
  Comment 829 block B17 null  <||@
  Comment 829 176 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 829 178 r9|QWORD = DEC r9|QWORD size: QWORD  <||@
  Comment 832 180 CMP (x: rsi|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 835 182 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B17 -> B20 falseDestination: B17 -> B19  <||@
  Comment 841 block B19 null  <||@
  Comment 841 188 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 841 190 MOV (x: [r8|QWORD[.] + rsi|QWORD * 2], y: r12|ILLEGAL) size: WORD  <||@
  Comment 846 192 JUMP ~[] destination: B19 -> B20  <||@
  Comment 846 block B20 null  <||@
  Comment 846 194 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 846 196 rsi|DWORD = MOVE input: short[45|0x2d]  <||@
  Comment 851 198 r14|DWORD = MOVE input: int[45|0x2d]  <||@
  Comment 857 200 r13|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 860 202 r10|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 863 204 JUMP ~[] destination: B20 -> B42  <||@
  Comment 868 block B51 null  <||@
  Comment 868 516 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 868 518 rcx|DWORD = LEA [r10|DWORD - 2] size: DWORD  <||@
  Comment 872 520 CMP (x: rdx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 874 522 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B51 -> B52 falseDestination: B51 -> B56  <||@
  Comment 880 block B52 null  <||@
  Comment 880 524 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 880 526 MOV (x: [rax|QWORD[.] + rcx|DWORD * 2 + 16], y: rsi|DWORD) size: WORD  <||@
  Comment 885 528 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 889 530 rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD  <||@
  Comment 893 532 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 897 534 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B52 -> B53 falseDestination: B52 -> B54  <||@
  Comment 903 block B54 null  <||@
  Comment 903 558 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 903 560 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 907 562 AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0  <||@
  Comment 914 564 rax|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 917 566 JUMP ~[] destination: B54 -> B55  <||@
  Comment 917 block B55 null  <||@
  Comment 917 568 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 917 570 rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 920 572 rdx|QWORD = MOV [rdi|QWORD + 168] size: QWORD  <||@
  Comment 927 574 MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD  <||@
  Comment 930 576 MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 930 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 937 578 MOV (x: [rax|QWORD[*] + 12], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 941 580 MOV (x: [rax|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 945 582 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 948 584 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 957 12  <||@
  Comment 967 block B48 null  <||@
  Comment 967 460 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 967 462 stack:28|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 972 464 stack:32|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 977 466 stack:36|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 981 468 stack:40|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 986 470 stack:48|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 990 472 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 990 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1000 474 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 1005 476 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1010 478 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:107, 35, 4]  <||@
  Comment 1010 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1015 [stack:0, stack:20]at java.lang.Integer.getChars(Integer.java:459) [bci: 107, duringCall: false, rethrow: false]
              |0          |1  |2                  |3               |4               |5               |6         
     locals:  |r13|DWORD  |-  |stack:48|QWORD[.]  |stack:40|DWORD  |stack:36|DWORD  |stack:32|DWORD  |r14|DWORD 
  at java.lang.Integer.toString(Integer.java:402) [bci: 35, duringCall: true, rethrow: false]
              |0  |1  |2                 
     locals:  |-  |-  |stack:48|QWORD[.] 
  at java.lang.Short.toString(Short.java:388) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 1016 480 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1016 482 rdi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 1016 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 1026 484 r11|DWORD[.] = MOVE stack:28|DWORD[.] moveKind: DWORD  <||@
  Comment 1031 486 JUMP ~[] destination: B48 -> B50  <||@
  Comment 1036 block B27 null  <||@
  Comment 1036 260 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1036 262 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 1036 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 1046 264 rdx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1049 266 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1054 268 stack:28|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1059 270 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:2, 24, 4]  <||@
  Comment 1059 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1064 []at java.lang.Integer.stringSize(Integer.java:473) [bci: 2, duringCall: false, rethrow: false]
              |0          |1         
     locals:  |r13|DWORD  |r14|DWORD 
  at java.lang.Integer.toString(Integer.java:400) [bci: 24, duringCall: true, rethrow: false]
              |0          |1  |2 
     locals:  |r13|DWORD  |-  |- 
  at java.lang.Short.toString(Short.java:388) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 1065 272 r10|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 1070 274 JUMP ~[] destination: B27 -> B29  <||@
  Comment 1075 block B9 null  <||@
  Comment 1075 116 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1075 118 rsi|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1082 120 JUMP ~[] destination: B9 -> B11  <||@
  Comment 1087 block B6 null  <||@
  Comment 1087 62 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1087 64 stack:28|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1092 66 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 1092 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 1102 68 rdx|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1105 70 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1110 72 stack:32|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1115 74 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:2, 15, 4]  <||@
  Comment 1115 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1120 []at java.lang.Integer.stringSize(Integer.java:473) [bci: 2, duringCall: false, rethrow: false]
              |0               |1         
     locals:  |stack:28|DWORD  |r14|DWORD 
  at java.lang.Integer.toString(Integer.java:400) [bci: 15, duringCall: true, rethrow: false]
              |0          |1  |2 
     locals:  |r13|DWORD  |-  |- 
  at java.lang.Short.toString(Short.java:388) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 1121 76 r11|DWORD = MOVE stack:32|DWORD moveKind: DWORD  <||@
  Comment 1126 78 r10|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 1131 80 JUMP ~[] destination: B6 -> B8  <||@
  Comment 1136 block B53 null  <||@
  Comment 1136 536 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1136 538 stack:28|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 1141 540 stack:48|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1145 542 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1145 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1155 544 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 1160 546 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1165 548 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:130, 35, 4]  <||@
  Comment 1165 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1170 [stack:0, stack:20]at java.lang.Integer.getChars(Integer.java:465) [bci: 130, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6 
     locals:  |-  |-  |-  |-  |-  |-  |- 
  at java.lang.Integer.toString(Integer.java:402) [bci: 35, duringCall: true, rethrow: false]
              |0  |1  |2                 
     locals:  |-  |-  |stack:48|QWORD[.] 
  at java.lang.Short.toString(Short.java:388) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 1171 550 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1171 552 rdi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 1171 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 1181 554 r11|DWORD[.] = MOVE stack:28|DWORD[.] moveKind: DWORD  <||@
  Comment 1186 556 JUMP ~[] destination: B53 -> B55  <||@
  Comment 1191 block B56 null  <||@
  Comment 1191 586 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1191 588 MOV [r15|QWORD + 668] y: -54555 size: DWORD  <||@
  Comment 1202 590 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1209 592 DEOPT info [bci:107, 35, 4]  <||@
  Comment 1209 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1214 [rax:0]at java.lang.Integer.getChars(Integer.java:459) [bci: 107, duringCall: false, rethrow: false]
              |0          |1  |2             |3         |4          |5         |6         
     locals:  |r13|DWORD  |-  |rax|QWORD[.]  |r8|DWORD  |rbx|DWORD  |r9|DWORD  |r14|DWORD 
  at java.lang.Integer.toString(Integer.java:402) [bci: 35, duringCall: true, rethrow: false]
              |0  |1  |2            
     locals:  |-  |-  |rax|QWORD[.] 
  at java.lang.Short.toString(Short.java:388) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 1215 block B21 null  <||@
  Comment 1215 206 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1215 208 MOV [r15|QWORD + 668] y: -43803 size: DWORD  <||@
  Comment 1226 210 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1233 212 DEOPT info [bci:2, 15, 4]  <||@
  Comment 1233 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1238 []at java.lang.Integer.stringSize(Integer.java:473) [bci: 2, duringCall: false, rethrow: false]
              |0          |1         
     locals:  |r10|DWORD  |r14|DWORD 
  at java.lang.Integer.toString(Integer.java:400) [bci: 15, duringCall: true, rethrow: false]
              |0          |1  |2 
     locals:  |r13|DWORD  |-  |- 
  at java.lang.Short.toString(Short.java:388) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 1239 block B59 null  <||@
  Comment 1239 612 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1239 614 r11|DWORD = MOVE input: int[-49179|0xffffffffffff3fe5]  <||@
  Comment 1245 618 JUMP ~[] destination: B59 -> B60  <||@
  Comment 1245 block B60 null  <||@
  Comment 1245 620 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1245 616 stack:48|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1249 622 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 1256 624 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1263 626 DEOPT info [bci:75, 35, 4]  <||@
  Comment 1263 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1268 [stack:0]at java.lang.Integer.getChars(Integer.java:456) [bci: 75, duringCall: false, rethrow: false]
              |0          |1  |2                  |3  |4  |5          |6         
     locals:  |r13|DWORD  |-  |stack:48|QWORD[.]  |-  |-  |r10|DWORD  |r14|DWORD 
  at java.lang.Integer.toString(Integer.java:402) [bci: 35, duringCall: true, rethrow: false]
              |0  |1  |2                 
     locals:  |-  |-  |stack:48|QWORD[.] 
  at java.lang.Short.toString(Short.java:388) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 1269 block B61 null  <||@
  Comment 1269 628 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1269 630 MOV [r15|QWORD + 668] y: -46619 size: DWORD  <||@
  Comment 1280 632 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1287 634 DEOPT info [bci:2, 24, 4]  <||@
  Comment 1287 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1292 []at java.lang.Integer.stringSize(Integer.java:473) [bci: 2, duringCall: false, rethrow: false]
              |0          |1         
     locals:  |r13|DWORD  |r14|DWORD 
  at java.lang.Integer.toString(Integer.java:400) [bci: 24, duringCall: true, rethrow: false]
              |0          |1  |2 
     locals:  |r13|DWORD  |-  |- 
  at java.lang.Short.toString(Short.java:388) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 1293 block B58 null  <||@
  Comment 1293 604 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1293 606 r11|DWORD = MOVE input: int[-51995|0xffffffffffff34e5]  <||@
  Comment 1299 610 JUMP ~[] destination: B58 -> B60  <||@
  Comment 1301 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1301 4  <||@
  Comment 1307 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 1307 5  <||@
  HexCodeFile>>> <|@
end_nmethod
