begin_compilation
  name " HotSpotCompilation-9127[java.util.ArrayDeque.clear()]"
  method "HotSpotCompilation-9127[java.util.ArrayDeque.clear()]"
  date 1527005202271
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i88 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: i88  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! Ljava/util/ArrayDeque;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v92 v93 ?27 ?23 v94 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i88 v50 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i88 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayDeque.head
nodeSourcePosition: at java.util.ArrayDeque.clear(ArrayDeque.java:760) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v92 
=== Succesors ===
next: i89 
=== Usages ===
v5 i22 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v92 #next: i89  <|@  <|@
f <@~|@floating>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i89 v49 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i89 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayDeque.tail
nodeSourcePosition: at java.util.ArrayDeque.clear(ArrayDeque.java:761) [bci: 6]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v93 
=== Succesors ===
next: v8 
=== Usages ===
v5 v30 ?27 ?23 
=== Predecessor ===
i88 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v93 #next: v8  <|@  <|@
f <@~|@floating>@ <|@
tid v5 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayDeque.clear(ArrayDeque.java:762) [bci: 12]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i88 
y: i89 
=== Succesors ===
=== Usages ===
v8 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i88 y: i89  <|@  <|@
f <@*|@fixed>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.clear(ArrayDeque.java:762) [bci: 12]
stamp: void
trueSuccessorProbability: 0.8107587173646399
=== Inputs ===
condition: v5 
=== Succesors ===
trueSuccessor: v6 
falseSuccessor: v7 
=== Usages ===
=== Predecessor ===
i89 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5 #trueSuccessor: v6 #falseSuccessor: v7  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4605477884860097963
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v6 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.clear(ArrayDeque.java:771) [bci: 55]
stamp: void
=== Inputs ===
=== Succesors ===
next: v41 
=== Usages ===
=== Predecessor ===
v8 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v41  <|@  <|@
f <@*|@fixed>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.clear(ArrayDeque.java:771) [bci: 55]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v6 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4595986156050213204
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.clear(ArrayDeque.java:763) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: a90 
=== Usages ===
=== Predecessor ===
v8 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a90  <|@  <|@
f <@~|@floating>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a90 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a90 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayDeque.elements
nodeSourcePosition: at java.util.ArrayDeque.clear(ArrayDeque.java:765) [bci: 28]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v94 
=== Succesors ===
next: i91 
=== Usages ===
a54 v95 
=== Predecessor ===
v7 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v94 #next: i91  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<ArrayDeque.clear()>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: ArrayDeque.java
sourceLine: 760
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - 
=== Succesors ===
=== Usages ===
i91 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a90 
=== Succesors ===
=== Usages ===
i91 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a90  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i91 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.ArrayDeque.clear(ArrayDeque.java:765) [bci: 31]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v95 
=== Succesors ===
next: v49 
=== Usages ===
i18 v61 
=== Predecessor ===
a90 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v95 #next: v49  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayDeque.clear(ArrayDeque.java:763) [bci: 17]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v49 v50 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ArrayDeque.tail
nodeSourcePosition: at java.util.ArrayDeque.clear(ArrayDeque.java:763) [bci: 19]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v93 
value: i9 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v50 
=== Usages ===
=== Predecessor ===
i91 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v93 value: i9 stateAfter: - lastLocationAccess: - #next: v50  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ArrayDeque.head
nodeSourcePosition: at java.util.ArrayDeque.clear(ArrayDeque.java:763) [bci: 22]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v92 
value: i9 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v20 
=== Usages ===
=== Predecessor ===
v49 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v92 value: i9 stateAfter: - lastLocationAccess: - #next: v20  <|@  <|@
f <@~|@floating>@ <|@
tid i17 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayDeque.clear(ArrayDeque.java:765) [bci: 33]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i18 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i18 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.ArrayDeque.clear(ArrayDeque.java:765) [bci: 33]
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i91 
y: i17 
=== Succesors ===
=== Usages ===
?23 ?27 i29 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i91 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid a54 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayDeque.clear(ArrayDeque.java:765) [bci: 28]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a90 
=== Succesors ===
=== Usages ===
v96 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a90  <|@  <|@
f <@~|@floating>@ <|@
tid i16 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayDeque.clear(ArrayDeque.java:765) [bci: 32]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i28 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a72 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayDeque.clear(ArrayDeque.java:767) [bci: 42]
rawvalue: null
stableDimension: 0
stamp: n - NULL
stampKind: n -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v70 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.clear(ArrayDeque.java:767) [bci: 36]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v21 
=== Predecessor ===
v50 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B6" 
    successors "B4" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4600306011570609928
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i22 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v21 
values: i88 i29 
=== Succesors ===
=== Usages ===
?23 v96 ?27 i28 v61 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v21 values: i88 i29  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 1.9461013645224172
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.ArrayDeque.clear(ArrayDeque.java:767) [bci: 36]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v20 
=== Succesors ===
next: v87 
=== Usages ===
i22 v34 v36 v86 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v20 #next: v87  <|@  <|@
f <@~|@floating>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.ArrayDeque.clear(ArrayDeque.java:767) [bci: 42]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i22 
y: i91 
=== Succesors ===
=== Usages ===
v87 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i22 y: i91  <|@  <|@
f <@*|@fixed>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.clear(ArrayDeque.java:767) [bci: 42]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v61 
=== Succesors ===
trueSuccessor: v83 
falseSuccessor: v86 
=== Usages ===
=== Predecessor ===
v21 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v61 #trueSuccessor: v83 #falseSuccessor: v86  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4600306011570609928
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.clear(ArrayDeque.java:767) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v70 
=== Usages ===
v70 
=== Predecessor ===
v87 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v70  <|@  <|@
f <@~|@floating>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a54 
index: i22 
=== Succesors ===
=== Usages ===
v70 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a54 index: i22  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at java.util.ArrayDeque.clear(ArrayDeque.java:767) [bci: 42]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v83 
address: v96 
value: a72 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v38 
=== Usages ===
=== Predecessor ===
v83 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v83 address: v96 value: a72 stateAfter: - lastLocationAccess: - #next: v38  <|@  <|@
f <@~|@floating>@ <|@
tid i28 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.ArrayDeque.clear(ArrayDeque.java:768) [bci: 45]
stamp: i32
=== Inputs ===
x: i22 
y: i16 
=== Succesors ===
=== Usages ===
i29 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i22 y: i16  <|@  <|@
f <@~|@floating>@ <|@
tid i29 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at java.util.ArrayDeque.clear(ArrayDeque.java:768) [bci: 48]
stamp: i32
=== Inputs ===
x: i18 
y: i28 
=== Succesors ===
=== Usages ===
v30 i22 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i18 y: i28  <|@  <|@
f <@~|@floating>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayDeque.clear(ArrayDeque.java:769) [bci: 52]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i29 
y: i89 
=== Succesors ===
=== Usages ===
v38 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i29 y: i89  <|@  <|@
f <@*|@fixed>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.clear(ArrayDeque.java:769) [bci: 52]
stamp: void
trueSuccessorProbability: 0.5138478489507687
=== Inputs ===
condition: v30 
=== Succesors ===
trueSuccessor: v34 
falseSuccessor: v37 
=== Usages ===
=== Predecessor ===
v70 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v30 #trueSuccessor: v34 #falseSuccessor: v37  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4595986156050213204
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.clear(ArrayDeque.java:771) [bci: 55]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v21 
=== Succesors ===
next: v42 
=== Usages ===
=== Predecessor ===
v38 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v21 #next: v42  <|@  <|@
f <@*|@fixed>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.clear(ArrayDeque.java:771) [bci: 55]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v34 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4595618667836265660
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.clear(ArrayDeque.java:767) [bci: 36]
stamp: void
=== Inputs ===
=== Succesors ===
next: v78 
=== Usages ===
=== Predecessor ===
v38 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v78  <|@  <|@
tid ?27 <|@
d <@d|@=== Debug Properties ===
bci: 43
code: ResolvedJavaMethodBytecode<ArrayDeque.clear()>
duringCall: false
localsSize: 5
locksSize: 0
nodeSourcePosition: at java.util.ArrayDeque.clear(ArrayDeque.java:767) [bci: 42]
rethrowException: false
sourceFile: ArrayDeque.java
sourceLine: 768
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - i89 i22 i18 
=== Succesors ===
=== Usages ===
v78 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - i89 i22 i18  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?27 
=== Succesors ===
next: v36 
=== Usages ===
=== Predecessor ===
v37 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?27 #next: v36  <|@  <|@
f <@*|@fixed>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.util.ArrayDeque.clear(ArrayDeque.java:767) [bci: 36]
stamp: void
=== Inputs ===
loopBegin: v21 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v78 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v21  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.clear(ArrayDeque.java:767) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v21 
=== Succesors ===
next: v84 
=== Usages ===
=== Predecessor ===
v87 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v21 #next: v84  <|@  <|@
tid ?23 <|@
d <@d|@=== Debug Properties ===
bci: 36
code: ResolvedJavaMethodBytecode<ArrayDeque.clear()>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: ArrayDeque.java
sourceLine: 767
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - i89 i22 i18 
=== Succesors ===
=== Usages ===
v84 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - i89 i22 i18  <|@  <|@
f <@*|@fixed>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 62
nodeSourcePosition: at java.util.ArrayDeque.clear(ArrayDeque.java:767) [bci: 42]
reason: BoundsCheckException
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?23 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v86 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?23  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i88 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: i88  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! Ljava/util/ArrayDeque;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v92 v93 ?27 ?23 v94 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v92 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i88 v50 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i88 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayDeque.head
nodeSourcePosition: at java.util.ArrayDeque.clear(ArrayDeque.java:760) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v92 
=== Succesors ===
next: i89 
=== Usages ===
v5 i22 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v92 #next: i89  <|@  <|@
f <@~|@floating>@ <|@
tid v93 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i89 v49 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i89 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayDeque.tail
nodeSourcePosition: at java.util.ArrayDeque.clear(ArrayDeque.java:761) [bci: 6]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v93 
=== Succesors ===
next: v8 
=== Usages ===
v5 v30 ?27 ?23 
=== Predecessor ===
i88 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v93 #next: v8  <|@  <|@
f <@~|@floating>@ <|@
tid v5 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayDeque.clear(ArrayDeque.java:762) [bci: 12]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i88 
y: i89 
=== Succesors ===
=== Usages ===
v8 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i88 y: i89  <|@  <|@
f <@*|@fixed>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.clear(ArrayDeque.java:762) [bci: 12]
stamp: void
trueSuccessorProbability: 0.8107587173646399
=== Inputs ===
condition: v5 
=== Succesors ===
trueSuccessor: v6 
falseSuccessor: v7 
=== Usages ===
=== Predecessor ===
i89 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5 #trueSuccessor: v6 #falseSuccessor: v7  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@478f9fe slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8107587173646399 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4605477884860097963
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v6 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.clear(ArrayDeque.java:771) [bci: 55]
stamp: void
=== Inputs ===
=== Succesors ===
next: v41 
=== Usages ===
=== Predecessor ===
v8 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v41  <|@  <|@
f <@*|@fixed>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.clear(ArrayDeque.java:771) [bci: 55]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v6 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4595986156050213204
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.clear(ArrayDeque.java:763) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: a90 
=== Usages ===
=== Predecessor ===
v8 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a90  <|@  <|@
f <@~|@floating>@ <|@
tid v94 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a90 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a90 <|@
result v3|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayDeque.elements
nodeSourcePosition: at java.util.ArrayDeque.clear(ArrayDeque.java:765) [bci: 28]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v94 
=== Succesors ===
next: i91 
=== Usages ===
a54 v95 
=== Predecessor ===
v7 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v94 #next: i91  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<ArrayDeque.clear()>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: ArrayDeque.java
sourceLine: 760
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - 
=== Succesors ===
=== Usages ===
i91 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v95 <|@
result [v3|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a90 
=== Succesors ===
=== Usages ===
i91 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a90  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i91 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.ArrayDeque.clear(ArrayDeque.java:765) [bci: 31]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v95 
=== Succesors ===
next: v49 
=== Usages ===
i18 v61 
=== Predecessor ===
a90 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v95 #next: v49  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayDeque.clear(ArrayDeque.java:763) [bci: 17]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v49 v50 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ArrayDeque.tail
nodeSourcePosition: at java.util.ArrayDeque.clear(ArrayDeque.java:763) [bci: 19]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v93 
value: i9 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v50 
=== Usages ===
=== Predecessor ===
i91 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v93 value: i9 stateAfter: - lastLocationAccess: - #next: v50  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ArrayDeque.head
nodeSourcePosition: at java.util.ArrayDeque.clear(ArrayDeque.java:763) [bci: 22]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v92 
value: i9 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v20 
=== Usages ===
=== Predecessor ===
v49 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v92 value: i9 stateAfter: - lastLocationAccess: - #next: v20  <|@  <|@
f <@~|@floating>@ <|@
tid i17 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayDeque.clear(ArrayDeque.java:765) [bci: 33]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i18 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i18 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.ArrayDeque.clear(ArrayDeque.java:765) [bci: 33]
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i91 
y: i17 
=== Succesors ===
=== Usages ===
?23 ?27 i29 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i91 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid a54 <|@
result v6|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayDeque.clear(ArrayDeque.java:765) [bci: 28]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a90 
=== Succesors ===
=== Usages ===
v96 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a90  <|@  <|@
f <@~|@floating>@ <|@
tid i16 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayDeque.clear(ArrayDeque.java:765) [bci: 32]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i28 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a72 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayDeque.clear(ArrayDeque.java:767) [bci: 42]
rawvalue: null
stableDimension: 0
stamp: n - NULL
stampKind: n -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v70 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.clear(ArrayDeque.java:767) [bci: 36]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v21 
=== Predecessor ===
v50 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque.clear(ArrayDeque.java:760) [bci: 0]
locals: v0|QWORD[.] - - - - 
>@ <|@ instruction v4|DWORD = MOV [v3|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = DEC v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@297d73e3 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v1|DWORD] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B6" 
    successors "B4" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4600306011570609928
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i22 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v21 
values: i88 i29 
=== Succesors ===
=== Usages ===
?23 v96 ?27 i28 v61 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v21 values: i88 i29  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 1.9461013645224172
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.ArrayDeque.clear(ArrayDeque.java:767) [bci: 36]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v20 
=== Succesors ===
next: v87 
=== Usages ===
i22 v34 v36 v86 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v20 #next: v87  <|@  <|@
f <@~|@floating>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.ArrayDeque.clear(ArrayDeque.java:767) [bci: 42]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i22 
y: i91 
=== Succesors ===
=== Usages ===
v87 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i22 y: i91  <|@  <|@
f <@*|@fixed>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.clear(ArrayDeque.java:767) [bci: 42]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v61 
=== Succesors ===
trueSuccessor: v83 
falseSuccessor: v86 
=== Usages ===
=== Predecessor ===
v21 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v61 #trueSuccessor: v83 #falseSuccessor: v86  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v7|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v4|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4600306011570609928
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.clear(ArrayDeque.java:767) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v70 
=== Usages ===
v70 
=== Predecessor ===
v87 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v70  <|@  <|@
f <@~|@floating>@ <|@
tid v96 <|@
result [v6|QWORD[.] + v7|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a54 
index: i22 
=== Succesors ===
=== Usages ===
v70 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a54 index: i22  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at java.util.ArrayDeque.clear(ArrayDeque.java:767) [bci: 42]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v83 
address: v96 
value: a72 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v38 
=== Usages ===
=== Predecessor ===
v83 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v83 address: v96 value: a72 stateAfter: - lastLocationAccess: - #next: v38  <|@  <|@
f <@~|@floating>@ <|@
tid i28 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.ArrayDeque.clear(ArrayDeque.java:768) [bci: 45]
stamp: i32
=== Inputs ===
x: i22 
y: i16 
=== Succesors ===
=== Usages ===
i29 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i22 y: i16  <|@  <|@
f <@~|@floating>@ <|@
tid i29 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at java.util.ArrayDeque.clear(ArrayDeque.java:768) [bci: 48]
stamp: i32
=== Inputs ===
x: i18 
y: i28 
=== Succesors ===
=== Usages ===
v30 i22 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i18 y: i28  <|@  <|@
f <@~|@floating>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayDeque.clear(ArrayDeque.java:769) [bci: 52]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i29 
y: i89 
=== Succesors ===
=== Usages ===
v38 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i29 y: i89  <|@  <|@
f <@*|@fixed>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.clear(ArrayDeque.java:769) [bci: 52]
stamp: void
trueSuccessorProbability: 0.5138478489507687
=== Inputs ===
condition: v30 
=== Succesors ===
trueSuccessor: v34 
falseSuccessor: v37 
=== Usages ===
=== Predecessor ===
v70 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v30 #trueSuccessor: v34 #falseSuccessor: v37  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD[.] + v7|DWORD * 4 + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = INC v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = AND (x: v5|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD, y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5138478489507687 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4595986156050213204
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.clear(ArrayDeque.java:771) [bci: 55]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v21 
=== Succesors ===
next: v42 
=== Usages ===
=== Predecessor ===
v38 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v21 #next: v42  <|@  <|@
f <@*|@fixed>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.clear(ArrayDeque.java:771) [bci: 55]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v34 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4595618667836265660
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.clear(ArrayDeque.java:767) [bci: 36]
stamp: void
=== Inputs ===
=== Succesors ===
next: v78 
=== Usages ===
=== Predecessor ===
v38 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v78  <|@  <|@
tid ?27 <|@
d <@d|@=== Debug Properties ===
bci: 43
code: ResolvedJavaMethodBytecode<ArrayDeque.clear()>
duringCall: false
localsSize: 5
locksSize: 0
nodeSourcePosition: at java.util.ArrayDeque.clear(ArrayDeque.java:767) [bci: 42]
rethrowException: false
sourceFile: ArrayDeque.java
sourceLine: 768
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - i89 i22 i18 
=== Succesors ===
=== Usages ===
v78 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - i89 i22 i18  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?27 
=== Succesors ===
next: v36 
=== Usages ===
=== Predecessor ===
v37 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?27 #next: v36  <|@  <|@
f <@*|@fixed>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.util.ArrayDeque.clear(ArrayDeque.java:767) [bci: 36]
stamp: void
=== Inputs ===
loopBegin: v21 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v78 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v21  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque.clear(ArrayDeque.java:768) [bci: 43]
locals: v0|QWORD[.] - v2|DWORD v7|DWORD v5|DWORD 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:43] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v9|DWORD] destination: B6 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.clear(ArrayDeque.java:767) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v21 
=== Succesors ===
next: v84 
=== Usages ===
=== Predecessor ===
v87 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v21 #next: v84  <|@  <|@
tid ?23 <|@
d <@d|@=== Debug Properties ===
bci: 36
code: ResolvedJavaMethodBytecode<ArrayDeque.clear()>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: ArrayDeque.java
sourceLine: 767
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - i89 i22 i18 
=== Succesors ===
=== Usages ===
v84 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - i89 i22 i18  <|@  <|@
f <@*|@fixed>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 62
nodeSourcePosition: at java.util.ArrayDeque.clear(ArrayDeque.java:767) [bci: 42]
reason: BoundsCheckException
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?23 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v86 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?23  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -15899 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque.clear(ArrayDeque.java:767) [bci: 36]
locals: v0|QWORD[.] - v2|DWORD v7|DWORD v5|DWORD 
>@ <|@ instruction DEOPT info [bci:36] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@478f9fe slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8107587173646399 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4605477884860097963
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4595986156050213204
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque.clear(ArrayDeque.java:760) [bci: 0]
locals: v0|QWORD[.] - - - - 
>@ <|@ instruction v4|DWORD = MOV [v3|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = DEC v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@297d73e3 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v1|DWORD] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4600306011570609928
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD[.] + v7|DWORD * 4 + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = INC v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = AND (x: v5|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD, y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5138478489507687 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4595618667836265660
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque.clear(ArrayDeque.java:768) [bci: 43]
locals: v0|QWORD[.] - v2|DWORD v7|DWORD v5|DWORD 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:43] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v9|DWORD] destination: B6 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B6" 
    successors "B4" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4600306011570609928
    begin_IR
      LIR
      nr   -1  <|@ instruction [v7|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v4|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4595986156050213204
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -15899 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque.clear(ArrayDeque.java:767) [bci: 36]
locals: v0|QWORD[.] - v2|DWORD v7|DWORD v5|DWORD 
>@ <|@ instruction DEOPT info [bci:36] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #4          // head:int
     4: istore_1      
     5: aload_0       
     6: getfield      #5          // tail:int
     9: istore_2      
    10: iload_1       
    11: iload_2       
    12: if_icmpeq     55
    15: aload_0       
    16: aload_0       
    17: iconst_0      
    18: dup_x1        
    19: putfield      #5          // tail:int
    22: putfield      #4          // head:int
    25: iload_1       
    26: istore_3      
    27: aload_0       
    28: getfield      #2          // elements:java.lang.Object[]
    31: arraylength   
    32: iconst_1      
    33: isub          
    34: istore        4
    36: aload_0       
    37: getfield      #2          // elements:java.lang.Object[]
    40: iload_3       
    41: aconst_null   
    42: aastore       
    43: iload_3       
    44: iconst_1      
    45: iadd          
    46: iload         4
    48: iand          
    49: istore_3      
    50: iload_3       
    51: iload_2       
    52: if_icmpne     36
    55: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@478f9fe slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   10  <|@ instruction r11|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   12  <|@ instruction CMP (x: r11|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   14  <|@ instruction BRANCH trueDestinationProbability: 0.8107587173646399 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4605477884860097963
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4595986156050213204
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction r8|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   24  <|@ st <@st|@reference-map: [rsi:0, r8:0]
live-base-pointers: []
java.util.ArrayDeque.clear(ArrayDeque.java:760) [bci: 0]
locals: rsi|QWORD[.] - - - - 
>@ <|@ instruction r9|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   28  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   30  <|@ instruction rcx|DWORD = DEC r9|DWORD size: DWORD <|@ <|@
      nr   32  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@297d73e3 encoding: base: 0 shift: 3 <|@ <|@
      nr   34  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4600306011570609928
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   44  <|@ instruction MOV (x: [r8|QWORD[.] + r10|DWORD * 4 + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   46  <|@ instruction rbx|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr   48  <|@ instruction rbx|DWORD = AND (x: rcx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr   50  <|@ instruction CMP (x: r11|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr   52  <|@ instruction BRANCH trueDestinationProbability: 0.5138478489507687 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4595618667836265660
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   56  <|@ st <@st|@reference-map: [rsi:0, r8:0]
live-base-pointers: []
java.util.ArrayDeque.clear(ArrayDeque.java:768) [bci: 43]
locals: rsi|QWORD[.] - r11|DWORD r10|DWORD rcx|DWORD 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:43] <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   58  <|@ instruction JUMP ~[] destination: B6 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B6" 
    successors "B4" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4600306011570609928
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   38  <|@ instruction CMP (x: r9|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   40  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4595986156050213204
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   62  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   66  <|@ instruction MOV [r15|QWORD + 668] y: -15899 size: DWORD <|@ <|@
      nr   68  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   70  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.ArrayDeque.clear(ArrayDeque.java:767) [bci: 36]
locals: rsi|QWORD[.] - r11|DWORD r10|DWORD rcx|DWORD 
>@ <|@ instruction DEOPT info [bci:36] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #4          // head:int
     4: istore_1      
     5: aload_0       
     6: getfield      #5          // tail:int
     9: istore_2      
    10: iload_1       
    11: iload_2       
    12: if_icmpeq     55
    15: aload_0       
    16: aload_0       
    17: iconst_0      
    18: dup_x1        
    19: putfield      #5          // tail:int
    22: putfield      #4          // head:int
    25: iload_1       
    26: istore_3      
    27: aload_0       
    28: getfield      #2          // elements:java.lang.Object[]
    31: arraylength   
    32: iconst_1      
    33: isub          
    34: istore        4
    36: aload_0       
    37: getfield      #2          // elements:java.lang.Object[]
    40: iload_3       
    41: aconst_null   
    42: aastore       
    43: iload_3       
    44: iconst_1      
    45: iadd          
    46: iload         4
    48: iand          
    49: istore_3      
    50: iload_3       
    51: iload_2       
    52: if_icmpne     36
    55: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@478f9fe slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   10  <|@ instruction r11|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   12  <|@ instruction CMP (x: r11|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   14  <|@ instruction BRANCH trueDestinationProbability: 0.8107587173646399 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4605477884860097963
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4595986156050213204
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction r8|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   24  <|@ st <@st|@reference-map: [rsi:0, r8:0]
live-base-pointers: []
java.util.ArrayDeque.clear(ArrayDeque.java:760) [bci: 0]
locals: rsi|QWORD[.] - - - - 
>@ <|@ instruction r9|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   28  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   30  <|@ instruction rcx|DWORD = DEC r9|DWORD size: DWORD <|@ <|@
      nr   32  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@297d73e3 encoding: base: 0 shift: 3 <|@ <|@
      nr   34  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4600306011570609928
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   44  <|@ instruction MOV (x: [r8|QWORD[.] + r10|DWORD * 4 + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   46  <|@ instruction rbx|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr   48  <|@ instruction rbx|DWORD = AND (x: rcx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr   50  <|@ instruction CMP (x: r11|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr   52  <|@ instruction BRANCH trueDestinationProbability: 0.5138478489507687 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4595618667836265660
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   56  <|@ st <@st|@reference-map: [rsi:0, r8:0]
live-base-pointers: []
java.util.ArrayDeque.clear(ArrayDeque.java:768) [bci: 43]
locals: rsi|QWORD[.] - r11|DWORD r10|DWORD rcx|DWORD 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:43] <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   58  <|@ instruction JUMP ~[] destination: B6 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B6" 
    successors "B4" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4600306011570609928
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   38  <|@ instruction CMP (x: r9|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   40  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4595986156050213204
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   62  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   66  <|@ instruction MOV [r15|QWORD + 668] y: -15899 size: DWORD <|@ <|@
      nr   68  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   70  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.ArrayDeque.clear(ArrayDeque.java:767) [bci: 36]
locals: rsi|QWORD[.] - r11|DWORD r10|DWORD rcx|DWORD 
>@ <|@ instruction DEOPT info [bci:36] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #4          // head:int
     4: istore_1      
     5: aload_0       
     6: getfield      #5          // tail:int
     9: istore_2      
    10: iload_1       
    11: iload_2       
    12: if_icmpeq     55
    15: aload_0       
    16: aload_0       
    17: iconst_0      
    18: dup_x1        
    19: putfield      #5          // tail:int
    22: putfield      #4          // head:int
    25: iload_1       
    26: istore_3      
    27: aload_0       
    28: getfield      #2          // elements:java.lang.Object[]
    31: arraylength   
    32: iconst_1      
    33: isub          
    34: istore        4
    36: aload_0       
    37: getfield      #2          // elements:java.lang.Object[]
    40: iload_3       
    41: aconst_null   
    42: aastore       
    43: iload_3       
    44: iconst_1      
    45: iadd          
    46: iload         4
    48: iand          
    49: istore_3      
    50: iload_3       
    51: iload_2       
    52: if_icmpne     36
    55: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c2410448b560c448b5e10453bda0f8513000000488b6c24104883c418850500000000c5f877c3448b4614468b0cc50c000000448966104489660c418bc9ffc949c1e003e92800000066660f1f8400000000004789649010418bdaffc323d9443bdb0f8413000000850500000000448bd3453bca77dde913000000488b6c24104883c418850500000000c5f877c341c7879c020000e5c1ffff4d89a7a8020000e80000000090e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@478f9fe slotKind: QWORD  <||@
  Comment 48 8 r10|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 52 10 r11|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 56 12 CMP (x: r11|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 59 14 BRANCH trueDestinationProbability: 0.8107587173646399 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 65 block B1 null  <||@
  Comment 65 16 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 65 18 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 74 12  <||@
  Comment 84 block B2 null  <||@
  Comment 84 20 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 84 22 r8|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 88 24 r9|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 88 [rsi:0, r8:0]at java.util.ArrayDeque.clear(ArrayDeque.java:760) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 88 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 96 26 MOV (x: [rsi|QWORD[.] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 100 28 MOV (x: [rsi|QWORD[.] + 12], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 104 30 rcx|DWORD = DEC r9|DWORD size: DWORD  <||@
  Comment 109 32 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@297d73e3 encoding: base: 0 shift: 3  <||@
  Comment 113 34 JUMP ~[] destination: B2 -> B3  <||@
  Comment 118 block B4 loop 0 depth 1 header:21|LoopBegin  <||@
  Comment 118 42 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 128 44 MOV (x: [r8|QWORD[.] + r10|DWORD * 4 + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 133 46 rbx|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 138 48 rbx|DWORD = AND (x: rcx|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 140 50 CMP (x: r11|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 143 52 BRANCH trueDestinationProbability: 0.5138478489507687 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6  <||@
  Comment 149 block B6 loop 0 depth 1 header:21|LoopBegin  <||@
  Comment 149 54 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 149 56 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:43]  <||@
  Comment 149 [rsi:0, r8:0]at java.util.ArrayDeque.clear(ArrayDeque.java:768) [bci: 43, duringCall: false, rethrow: false]
              |0             |1  |2          |3          |4         
     locals:  |rsi|QWORD[.]  |-  |r11|DWORD  |r10|DWORD  |rcx|DWORD   <||@
  Comment 149 {infopoint: SAFEPOINT}  <||@
  Comment 149 11  <||@
  Comment 155 -1 r10|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 158 58 JUMP ~[] destination: B6 -> B3  <||@
  Comment 158 block B3 loop 0 depth 1 header:21|LoopBegin  <||@
  Comment 158 36 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 158 38 CMP (x: r9|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 161 40 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B7  <||@
  Comment 168 block B5 null  <||@
  Comment 168 60 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 168 62 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 177 12  <||@
  Comment 187 block B7 null  <||@
  Comment 187 64 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 187 66 MOV [r15|QWORD + 668] y: -15899 size: DWORD  <||@
  Comment 198 68 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 205 70 DEOPT info [bci:36]  <||@
  Comment 205 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 210 [rsi:0]at java.util.ArrayDeque.clear(ArrayDeque.java:767) [bci: 36, duringCall: false, rethrow: false]
              |0             |1  |2          |3          |4         
     locals:  |rsi|QWORD[.]  |-  |r11|DWORD  |r10|DWORD  |rcx|DWORD   <||@
  Comment 211 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 211 4  <||@
  Comment 217 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 217 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-9127[java.util.ArrayDeque.clear()]"
  method "HotSpotCompilation-9127[java.util.ArrayDeque.clear()]"
  date 1527005202314
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 1069e64e0 448b560849c1e203493bc20f856ff9e1ff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c2410448b560c448b5e10453bda0f8513000000488b6c24104883c4188505d68aeafdc5f877c3448b4614468b0cc50c000000448966104489660c418bc9ffc949c1e003e92800000066660f1f8400000000004789649010418bdaffc323d9443bdb0f841300000085058b8aeafd448bd3453bca77dde913000000488b6c24104883c41885056f8aeafdc5f877c341c7879c020000e5c1ffff4d89a7a8020000e84c10e2ff90e86840260090e8420fe2ff90f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@478f9fe slotKind: QWORD  <||@
  Comment 48 8 r10|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 52 10 r11|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 56 12 CMP (x: r11|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 59 14 BRANCH trueDestinationProbability: 0.8107587173646399 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 65 block B1 null  <||@
  Comment 65 16 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 65 18 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 74 12  <||@
  Comment 84 block B2 null  <||@
  Comment 84 20 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 84 22 r8|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 88 24 r9|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 88 [rsi:0, r8:0]at java.util.ArrayDeque.clear(ArrayDeque.java:760) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 88 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 96 26 MOV (x: [rsi|QWORD[.] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 100 28 MOV (x: [rsi|QWORD[.] + 12], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 104 30 rcx|DWORD = DEC r9|DWORD size: DWORD  <||@
  Comment 109 32 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@297d73e3 encoding: base: 0 shift: 3  <||@
  Comment 113 34 JUMP ~[] destination: B2 -> B3  <||@
  Comment 118 block B4 loop 0 depth 1 header:21|LoopBegin  <||@
  Comment 118 42 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 128 44 MOV (x: [r8|QWORD[.] + r10|DWORD * 4 + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 133 46 rbx|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 138 48 rbx|DWORD = AND (x: rcx|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 140 50 CMP (x: r11|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 143 52 BRANCH trueDestinationProbability: 0.5138478489507687 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6  <||@
  Comment 149 block B6 loop 0 depth 1 header:21|LoopBegin  <||@
  Comment 149 54 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 149 56 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:43]  <||@
  Comment 149 [rsi:0, r8:0]at java.util.ArrayDeque.clear(ArrayDeque.java:768) [bci: 43, duringCall: false, rethrow: false]
              |0             |1  |2          |3          |4         
     locals:  |rsi|QWORD[.]  |-  |r11|DWORD  |r10|DWORD  |rcx|DWORD   <||@
  Comment 149 {infopoint: SAFEPOINT}  <||@
  Comment 149 11  <||@
  Comment 155 -1 r10|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 158 58 JUMP ~[] destination: B6 -> B3  <||@
  Comment 158 block B3 loop 0 depth 1 header:21|LoopBegin  <||@
  Comment 158 36 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 158 38 CMP (x: r9|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 161 40 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B7  <||@
  Comment 168 block B5 null  <||@
  Comment 168 60 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 168 62 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 177 12  <||@
  Comment 187 block B7 null  <||@
  Comment 187 64 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 187 66 MOV [r15|QWORD + 668] y: -15899 size: DWORD  <||@
  Comment 198 68 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 205 70 DEOPT info [bci:36]  <||@
  Comment 205 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 210 [rsi:0]at java.util.ArrayDeque.clear(ArrayDeque.java:767) [bci: 36, duringCall: false, rethrow: false]
              |0             |1  |2          |3          |4         
     locals:  |rsi|QWORD[.]  |-  |r11|DWORD  |r10|DWORD  |rcx|DWORD   <||@
  Comment 211 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 211 4  <||@
  Comment 217 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 217 5  <||@
  HexCodeFile>>> <|@
end_nmethod
