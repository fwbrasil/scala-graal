begin_compilation
  name " HotSpotCompilation-1381[java.util.HashMap.getNode(int, Object)]"
  method "HotSpotCompilation-1381[java.util.HashMap.getNode(int, Object)]"
  date 1527005058276
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a828 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a828  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! Ljava/util/HashMap;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v852 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v852 <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a828 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a828 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap.table
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 1]
nullCheck: false
stamp: n [Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v852 
=== Succesors ===
next: v10 
=== Usages ===
a477 v478 v853 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v852 #next: v10  <|@  <|@
f <@~|@floating>@ <|@
tid v478 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 10]
stamp: void
=== Inputs ===
value: a828 
=== Succesors ===
=== Usages ===
v10 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a828  <|@  <|@
f <@~|@floating>@ <|@
tid a6 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 6]
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v123 v120 v121 v273 v272 v282 v772 v760 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 6]
stamp: void
trueSuccessorProbability: 0.02293902936868141
=== Inputs ===
condition: v478 
=== Succesors ===
trueSuccessor: v8 
falseSuccessor: v9 
=== Usages ===
=== Predecessor ===
a828 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v478 #trueSuccessor: v8 #falseSuccessor: v9  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4582268946471914142
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:584) [bci: 146]
stamp: void
=== Inputs ===
=== Succesors ===
next: v120 
=== Usages ===
=== Predecessor ===
v10 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v120  <|@  <|@
f <@*|@fixed>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:584) [bci: 146]
stamp: void
=== Inputs ===
result: a6 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v8 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a6 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B72" 
    xhandlers
    flags 
    probability 4606975802391783339
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: i829 
=== Usages ===
=== Predecessor ===
v10 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i829  <|@  <|@
f <@~|@floating>@ <|@
tid v853 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a828 
=== Succesors ===
=== Usages ===
i829 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a828  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i829 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 10]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v853 
=== Succesors ===
next: v616 
=== Usages ===
v605 i17 
=== Predecessor ===
v9 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v853 #next: v616  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 i18 v28 ?751 ?341 v537 ?75 v77 ?750 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i16 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 21]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i17 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i17 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 21]
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i829 
y: i16 
=== Succesors ===
=== Usages ===
i18 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i829 y: i16  <|@  <|@
f <@~|@floating>@ <|@
tid i18 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 23]
stamp: i32
=== Inputs ===
x: i2 
y: i17 
=== Succesors ===
=== Usages ===
v854 v605 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i2 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid v605 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 24]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i18 
y: i829 
=== Succesors ===
=== Usages ===
v616 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i18 y: i829  <|@  <|@
f <@~|@floating>@ <|@
tid a3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: a Ljava/lang/Object;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v33 v37 v143 ?751 ?341 v537 ?75 v82 v207 ?750 v568 v529 v872 v857 v882 v883 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v616 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 14]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v605 
=== Succesors ===
trueSuccessor: v613 
falseSuccessor: v615 
=== Usages ===
=== Predecessor ===
i829 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v605 #trueSuccessor: v613 #falseSuccessor: v615  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606975802391783339
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v613 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: a830 
=== Usages ===
a830 
=== Predecessor ===
v616 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a830  <|@  <|@
f <@~|@floating>@ <|@
tid a477 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 1]
op: Uncompress
stamp: a [Ljava/util/HashMap$Node;
=== Inputs ===
value: a828 
=== Succesors ===
=== Usages ===
v854 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a828  <|@  <|@
f <@~|@floating>@ <|@
tid v854 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a477 
index: i18 
=== Succesors ===
=== Usages ===
a830 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a477 index: i18  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a830 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 24]
nullCheck: false
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: v613 
address: v854 
=== Succesors ===
next: v26 
=== Usages ===
a496 v497 v855 v856 v863 v875 v880 a881 
=== Predecessor ===
v613 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v613 address: v854 #next: v26  <|@  <|@
f <@~|@floating>@ <|@
tid v497 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 33]
stamp: void
=== Inputs ===
value: a830 
=== Succesors ===
=== Usages ===
v26 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a830  <|@  <|@
f <@*|@fixed>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 28]
stamp: void
trueSuccessorProbability: 0.0762231274461013
=== Inputs ===
condition: v497 
=== Succesors ===
trueSuccessor: v25 
falseSuccessor: v24 
=== Usages ===
=== Predecessor ===
a830 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v497 #trueSuccessor: v25 #falseSuccessor: v24  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4590030884246439089
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:584) [bci: 146]
stamp: void
=== Inputs ===
=== Succesors ===
next: v121 
=== Usages ===
=== Predecessor ===
v26 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v121  <|@  <|@
f <@*|@fixed>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:584) [bci: 146]
stamp: void
=== Inputs ===
result: a6 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v25 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a6 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B36" 
    xhandlers
    flags 
    probability 4606304994443874069
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v831 
=== Usages ===
=== Predecessor ===
v26 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v831  <|@  <|@
f <@~|@floating>@ <|@
tid v875 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a830 
=== Succesors ===
=== Usages ===
v831 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a830  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v831 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.HashMap.getNode(HashMap.java:575) [bci: 81]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v875 
=== Succesors ===
next: i832 
=== Usages ===
v823 v879 
=== Predecessor ===
v24 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v875 #next: i832  <|@  <|@
f <@~|@floating>@ <|@
tid v855 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a830 
=== Succesors ===
=== Usages ===
i832 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a830  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i832 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.hash
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 33]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v855 
=== Succesors ===
next: v31 
=== Usages ===
v28 
=== Predecessor ===
v831 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v855 #next: v31  <|@  <|@
f <@~|@floating>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 37]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i832 
=== Succesors ===
=== Usages ===
v31 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2 y: i832  <|@  <|@
f <@~|@floating>@ <|@
tid v822 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.HashMap.getNode(HashMap.java:575) [bci: 81]
rawvalue: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v823 v879 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i12 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 14]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v42 v93 v441 v234 ?341 v171 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v817 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v818 v819 v820 v821 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 37]
stamp: void
trueSuccessorProbability: 0.8156496292108676
=== Inputs ===
condition: v28 
=== Succesors ===
trueSuccessor: v29 
falseSuccessor: v30 
=== Usages ===
=== Predecessor ===
i832 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v28 #trueSuccessor: v29 #falseSuccessor: v30  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4604806267426885410
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 40]
stamp: void
=== Inputs ===
=== Succesors ===
next: a833 
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a833  <|@  <|@
f <@~|@floating>@ <|@
tid v856 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a830 
=== Succesors ===
=== Usages ===
a833 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a830  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a833 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.key
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 42]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v856 
=== Succesors ===
next: v36 
=== Usages ===
a504 v741 v859 v873 
=== Predecessor ===
v29 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v856 #next: v36  <|@  <|@
f <@~|@floating>@ <|@
tid a504 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 42]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a833 
=== Succesors ===
=== Usages ===
v33 v529 v143 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a833  <|@  <|@
f <@~|@floating>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 49]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a3 
y: a504 
=== Succesors ===
=== Usages ===
v36 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a3 y: a504  <|@  <|@
f <@~|@floating>@ <|@
tid a496 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 24]
op: Uncompress
stamp: a Ljava/util/HashMap$Node;
=== Inputs ===
value: a830 
=== Succesors ===
=== Usages ===
v300 v403 v445 ?750 v372 v124 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a830  <|@  <|@
f <@*|@fixed>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 49]
stamp: void
trueSuccessorProbability: 0.9040067186327908
=== Inputs ===
condition: v33 
=== Succesors ===
trueSuccessor: v34 
falseSuccessor: v35 
=== Usages ===
=== Predecessor ===
a833 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v33 #trueSuccessor: v34 #falseSuccessor: v35  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4604169731381826681
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:573) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
next: v124 
=== Usages ===
=== Predecessor ===
v36 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v124  <|@  <|@
f <@*|@fixed>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:573) [bci: 65]
stamp: void
=== Inputs ===
result: a496 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v34 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a496 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4589756709023634757
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
next: v620 
=== Usages ===
=== Predecessor ===
v36 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v620  <|@  <|@
f <@~|@floating>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 53]
stamp: void
=== Inputs ===
value: a3 
=== Succesors ===
=== Usages ===
v620 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a3  <|@  <|@
f <@*|@fixed>@ <|@
tid v620 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 53]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v37 
=== Succesors ===
trueSuccessor: v619 
falseSuccessor: v617 
=== Usages ===
=== Predecessor ===
v35 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v37 #trueSuccessor: v619 #falseSuccessor: v617  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v619 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 53]
stamp: void
=== Inputs ===
=== Succesors ===
next: v761 
=== Usages ===
=== Predecessor ===
v620 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v761  <|@  <|@
f <@~|@floating>@ <|@
tid i762 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -129299
stableDimension: 0
stamp: i32 [-129299] ⇊00000000fffe06ed ⇈00000000fffe06ed
stampKind: i32
value: int[-129299|0xfffffffffffe06ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i758 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v761 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v755 
=== Predecessor ===
v619 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B28" 
    xhandlers
    flags 
    probability 4589756709023634757
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v617 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 53]
stamp: void
=== Inputs ===
=== Succesors ===
next: v834 
=== Usages ===
=== Predecessor ===
v620 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v834  <|@  <|@
f <@~|@floating>@ <|@
tid v872 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
v834 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v834 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v872 
=== Succesors ===
next: v141 
=== Usages ===
v861 v818 
=== Predecessor ===
v617 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v872 #next: v141  <|@  <|@
f <@~|@floating>@ <|@
tid v818 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v834 
y: v817 
=== Succesors ===
=== Usages ===
v141 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v834 y: v817  <|@  <|@
f <@*|@fixed>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=equals target_method_class=Ljava/lang/String; position=at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
trueSuccessorProbability: 0.5841828066598709
=== Inputs ===
condition: v818 
=== Succesors ===
trueSuccessor: v135 
falseSuccessor: v140 
=== Usages ===
=== Predecessor ===
v834 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v818 #trueSuccessor: v135 #falseSuccessor: v140  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4586110475649275746
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v135 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=equals target_method_class=Ljava/lang/String; position=at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v146 
=== Usages ===
=== Predecessor ===
v141 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v146  <|@  <|@
f <@~|@floating>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:43) [bci: 2]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a3 
y: a504 
=== Succesors ===
=== Usages ===
v146 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a3 y: a504  <|@  <|@
f <@*|@fixed>@ <|@
tid v146 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:43) [bci: 2]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v143 
=== Succesors ===
trueSuccessor: v144 
falseSuccessor: v145 
=== Usages ===
=== Predecessor ===
v135 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v143 #trueSuccessor: v144 #falseSuccessor: v145  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 4581606876021905250
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v144 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:44) [bci: 5]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v300 
=== Usages ===
=== Predecessor ===
v146 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v300  <|@  <|@
f <@*|@fixed>@ <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:573) [bci: 65]
stamp: void
=== Inputs ===
result: a496 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v144 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a496 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4581606876021905250
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v145 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 7]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v688 
=== Usages ===
=== Predecessor ===
v146 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v688  <|@  <|@
f <@~|@floating>@ <|@
tid v741 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
value: a833 
=== Succesors ===
=== Usages ===
v688 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a833  <|@  <|@
f <@*|@fixed>@ <|@
tid v688 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 15]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v741 
=== Succesors ===
trueSuccessor: v687 
falseSuccessor: v686 
=== Usages ===
=== Predecessor ===
v145 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v741 #trueSuccessor: v687 #falseSuccessor: v686  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B30" 
    xhandlers
    flags 
    probability 4566906146217097498
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v687 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 18]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v324 
=== Usages ===
=== Predecessor ===
v688 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v324  <|@  <|@
f <@*|@fixed>@ <|@
tid v324 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v321 
=== Predecessor ===
v687 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B27" 
    xhandlers
    flags 
    probability 4581011910560557119
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v686 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:141) [bci: 28]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v835 
=== Usages ===
=== Predecessor ===
v688 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v835  <|@  <|@
f <@~|@floating>@ <|@
tid v873 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a833 
=== Succesors ===
=== Usages ===
v835 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a833  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v835 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v873 
=== Succesors ===
next: v784 
=== Usages ===
v819 
=== Predecessor ===
v686 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v873 #next: v784  <|@  <|@
f <@~|@floating>@ <|@
tid v819 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v835 
y: v817 
=== Succesors ===
=== Usages ===
v784 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v835 y: v817  <|@  <|@
f <@*|@fixed>@ <|@
tid v784 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v819 
=== Succesors ===
trueSuccessor: v782 
falseSuccessor: v781 
=== Usages ===
=== Predecessor ===
v835 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v819 #trueSuccessor: v782 #falseSuccessor: v781  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4576508310933186623
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v782 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: a836 
=== Usages ===
=== Predecessor ===
v784 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a836  <|@  <|@
f <@~|@floating>@ <|@
tid v857 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
a836 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a836 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 22]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v857 
=== Succesors ===
next: v624 
=== Usages ===
a508 v509 v858 
=== Predecessor ===
v782 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v857 #next: v624  <|@  <|@
f <@~|@floating>@ <|@
tid v509 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 22]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
value: a836 
=== Succesors ===
=== Usages ===
v624 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a836  <|@  <|@
f <@*|@fixed>@ <|@
tid v624 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 22]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v509 
=== Succesors ===
trueSuccessor: v623 
falseSuccessor: v621 
=== Usages ===
=== Predecessor ===
a836 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v509 #trueSuccessor: v623 #falseSuccessor: v621  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v623 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 22]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v763 
=== Usages ===
=== Predecessor ===
v624 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v763  <|@  <|@
f <@~|@floating>@ <|@
tid i764 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -130571
stableDimension: 0
stamp: i32 [-130571] ⇊00000000fffe01f5 ⇈00000000fffe01f5
stampKind: i32
value: int[-130571|0xfffffffffffe01f5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i758 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v763 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v755 
=== Predecessor ===
v623 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4576508310933186623
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v621 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 22]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: a837 
=== Usages ===
=== Predecessor ===
v624 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a837  <|@  <|@
f <@~|@floating>@ <|@
tid v859 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a833 
=== Succesors ===
=== Usages ===
a837 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a833  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a837 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 26]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v859 
=== Succesors ===
next: v628 
=== Usages ===
a516 v517 v860 
=== Predecessor ===
v621 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v859 #next: v628  <|@  <|@
f <@~|@floating>@ <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 26]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
value: a837 
=== Succesors ===
=== Usages ===
v628 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a837  <|@  <|@
f <@*|@fixed>@ <|@
tid v628 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 26]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v517 
=== Succesors ===
trueSuccessor: v627 
falseSuccessor: v625 
=== Usages ===
=== Predecessor ===
a837 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v517 #trueSuccessor: v627 #falseSuccessor: v625  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v627 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 26]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v765 
=== Usages ===
=== Predecessor ===
v628 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v765  <|@  <|@
f <@~|@floating>@ <|@
tid i766 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -132619
stableDimension: 0
stamp: i32 [-132619] ⇊00000000fffdf9f5 ⇈00000000fffdf9f5
stampKind: i32
value: int[-132619|0xfffffffffffdf9f5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i758 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v765 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v755 
=== Predecessor ===
v627 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B26" 
    xhandlers
    flags 
    probability 4576508310933186623
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v625 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 26]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: i838 
=== Usages ===
=== Predecessor ===
v628 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i838  <|@  <|@
f <@~|@floating>@ <|@
tid v860 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a837 
=== Succesors ===
=== Usages ===
i838 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a837  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i838 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 26]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v860 
=== Succesors ===
next: i839 
=== Usages ===
v164 
=== Predecessor ===
v625 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v860 #next: i839  <|@  <|@
f <@~|@floating>@ <|@
tid v858 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a836 
=== Succesors ===
=== Usages ===
i839 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a836  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i839 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 22]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v858 
=== Succesors ===
next: v167 
=== Usages ===
v164 v171 i179 
=== Predecessor ===
i838 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v858 #next: v167  <|@  <|@
f <@~|@floating>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 29]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i838 
y: i839 
=== Succesors ===
=== Usages ===
v167 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i838 y: i839  <|@  <|@
f <@*|@fixed>@ <|@
tid v167 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 29]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v164 
=== Succesors ===
trueSuccessor: v165 
falseSuccessor: v166 
=== Usages ===
=== Predecessor ===
i839 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v164 #trueSuccessor: v165 #falseSuccessor: v166  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4572004711305816127
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:53) [bci: 34]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v174 
=== Usages ===
=== Predecessor ===
v167 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v174  <|@  <|@
f <@~|@floating>@ <|@
tid v171 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:53) [bci: 38]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i839 
y: i12 
=== Succesors ===
=== Usages ===
v174 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i839 y: i12  <|@  <|@
f <@*|@fixed>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:53) [bci: 38]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v171 
=== Succesors ===
trueSuccessor: v172 
falseSuccessor: v173 
=== Usages ===
=== Predecessor ===
v165 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v171 #trueSuccessor: v172 #falseSuccessor: v173  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors 
    xhandlers
    flags 
    probability 4567501111678445631
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v172 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:54) [bci: 41]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v403 
=== Usages ===
=== Predecessor ===
v174 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v403  <|@  <|@
f <@*|@fixed>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a496 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v172 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a496 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4567501111678445631
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:57) [bci: 43]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: i179 
=== Usages ===
=== Predecessor ===
v174 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i179  <|@  <|@
f <@~|@floating>@ <|@
tid a508 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 22]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a836 
=== Succesors ===
=== Usages ===
i179 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a836  <|@  <|@
f <@~|@floating>@ <|@
tid a516 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 26]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a837 
=== Succesors ===
=== Usages ===
i179 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a837  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i179 <|@
d <@d|@=== Debug Properties ===
kind: char
nodeSourcePosition: at org.graalvm.compiler.replacements.nodes.ArrayEqualsNode.equals(Object, Object, int, JavaKind) [bci: -1]
at org.graalvm.compiler.replacements.nodes.ArrayEqualsNode.equals(ArrayEqualsNode.java:202) [bci: 6]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:60) [bci: 59]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
array1: a508 
array2: a516 
length: i839 
lastLocationAccess: - 
=== Succesors ===
next: v51 
=== Usages ===
v42 
=== Predecessor ===
v173 >@ <|@
instruction <@ArrayEquals|@org.graalvm.compiler.replacements.nodes.ArrayEqualsNode>@ array1: a508 array2: a516 length: i839 lastLocationAccess: - #next: v51  <|@  <|@
f <@~|@floating>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:572) [bci: 62]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i179 
y: i12 
=== Succesors ===
=== Usages ===
v51 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i179 y: i12  <|@  <|@
f <@*|@fixed>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:572) [bci: 62]
stamp: void
trueSuccessorProbability: 0.06693849813115868
=== Inputs ===
condition: v42 
=== Succesors ===
trueSuccessor: v49 
falseSuccessor: v50 
=== Usages ===
=== Predecessor ===
i179 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v42 #trueSuccessor: v49 #falseSuccessor: v50  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B30" 
    xhandlers
    flags 
    probability 4549866981613678508
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:574) [bci: 68]
stamp: void
=== Inputs ===
=== Succesors ===
next: v322 
=== Usages ===
=== Predecessor ===
v51 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v322  <|@  <|@
f <@*|@fixed>@ <|@
tid v322 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v321 
=== Predecessor ===
v49 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors 
    xhandlers
    flags 
    probability 4567142676828642628
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:573) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
next: v372 
=== Usages ===
=== Predecessor ===
v51 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v372  <|@  <|@
f <@*|@fixed>@ <|@
tid v372 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a496 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v50 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a496 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B30" 
    xhandlers
    flags 
    probability 4572004711305816127
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:51) [bci: 32]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v371 
=== Usages ===
=== Predecessor ===
v167 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v371  <|@  <|@
f <@*|@fixed>@ <|@
tid v371 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v321 
=== Predecessor ===
v166 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B30" 
    xhandlers
    flags 
    probability 4576508310933186623
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v781 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v799 
=== Usages ===
=== Predecessor ===
v784 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v799  <|@  <|@
f <@*|@fixed>@ <|@
tid v799 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v321 
=== Predecessor ===
v781 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B29" "B35" 
    xhandlers
    flags 
    probability 4584127065623340624
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v525 
=== Usages ===
=== Predecessor ===
v141 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v525  <|@  <|@
f <@~|@floating>@ <|@
tid v861 <|@
d <@d|@=== Debug Properties ===
displacement: 448
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v834 
=== Succesors ===
=== Usages ===
v525 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v834  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v525 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
nullCheck: false
stamp: Method*!
=== Inputs ===
stateBefore: - 
guard: - 
address: v861 
=== Succesors ===
next: j528 
=== Usages ===
v862 v529 
=== Predecessor ===
v140 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v861 #next: j528  <|@  <|@
f <@~|@floating>@ <|@
tid v862 <|@
d <@d|@=== Debug Properties ===
displacement: 64
scale: Times1
stamp: void*
=== Inputs ===
base: v525 
index: - 
=== Succesors ===
=== Usages ===
j528 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v525 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j528 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v862 
=== Succesors ===
next: i40 
=== Usages ===
v529 
=== Predecessor ===
v525 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v862 #next: i40  <|@  <|@
tid v529 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@1eb5d7f9
stamp: void
targetMethod: HotSpotMethod<Object.equals(Object)>
=== Inputs ===
computedAddress: j528 
metaspaceMethod: v525 
arguments: a3 a504 
=== Succesors ===
=== Usages ===
i40 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j528 metaspaceMethod: v525 arguments: a3 a504  <|@  <|@
tid ?750 <|@
d <@d|@=== Debug Properties ===
bci: 59
code: ResolvedJavaMethodBytecode<HashMap.getNode(int, Object)>
duringCall: true
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 572
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - i2 a3 - a496 - - - 
=== Succesors ===
=== Usages ===
i40 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - i2 a3 - a496 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i40 <|@
d <@d|@=== Debug Properties ===
bci: 59
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
polymorphic: true
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Indirect#Object.equals
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v529 
stateDuring: ?750 
=== Succesors ===
next: v444 
=== Usages ===
v441 
=== Predecessor ===
j528 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v529 stateDuring: ?750 #next: v444  <|@  <|@
f <@~|@floating>@ <|@
tid v441 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:572) [bci: 62]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i40 
y: i12 
=== Succesors ===
=== Usages ===
v444 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i40 y: i12  <|@  <|@
f <@*|@fixed>@ <|@
tid v444 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:572) [bci: 62]
stamp: void
trueSuccessorProbability: 0.06693849813115868
=== Inputs ===
condition: v441 
=== Succesors ===
trueSuccessor: v442 
falseSuccessor: v443 
=== Usages ===
=== Predecessor ===
i40 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v441 #trueSuccessor: v442 #falseSuccessor: v443  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" 
    xhandlers
    flags 
    probability 4566682091735523695
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v442 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:574) [bci: 68]
stamp: void
=== Inputs ===
=== Succesors ===
next: v446 
=== Usages ===
=== Predecessor ===
v444 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v446  <|@  <|@
f <@*|@fixed>@ <|@
tid v446 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v321 
=== Predecessor ===
v442 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B24" "B14" "B26" "B29" "B27" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4580879966741248736
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v321 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v322 v324 v371 v446 v799 
=== Succesors ===
next: a840 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v322 v324 v371 v446 v799 #next: a840  <|@  <|@
f <@~|@floating>@ <|@
tid v863 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a830 
=== Succesors ===
=== Usages ===
a840 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a830  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a840 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.next
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:574) [bci: 70]
nullCheck: false
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v863 
=== Succesors ===
next: v60 
=== Usages ===
a753 v575 
=== Predecessor ===
v321 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v863 #next: v60  <|@  <|@
f <@~|@floating>@ <|@
tid v575 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:574) [bci: 76]
stamp: void
=== Inputs ===
value: a840 
=== Succesors ===
=== Usages ===
v60 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a840  <|@  <|@
f <@*|@fixed>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:574) [bci: 76]
stamp: void
trueSuccessorProbability: 0.1533361397600505
=== Inputs ===
condition: v575 
=== Succesors ===
trueSuccessor: v59 
falseSuccessor: v58 
=== Usages ===
=== Predecessor ===
a840 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v575 #trueSuccessor: v59 #falseSuccessor: v58  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors 
    xhandlers
    flags 
    probability 4568553107392593848
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:584) [bci: 146]
stamp: void
=== Inputs ===
=== Succesors ===
next: v272 
=== Usages ===
=== Predecessor ===
v60 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v272  <|@  <|@
f <@*|@fixed>@ <|@
tid v272 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a6 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v59 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a6 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4579997441230132689
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:575) [bci: 79]
stamp: void
=== Inputs ===
=== Succesors ===
next: v64 
=== Usages ===
=== Predecessor ===
v60 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v64  <|@  <|@
f <@~|@floating>@ <|@
tid v823 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.HashMap.getNode(HashMap.java:575) [bci: 81]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v831 
y: v822 
=== Succesors ===
=== Usages ===
v64 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v831 y: v822  <|@  <|@
f <@*|@fixed>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:575) [bci: 81]
stamp: void
trueSuccessorProbability: 0.0011187072715972413
=== Inputs ===
condition: v823 
=== Succesors ===
trueSuccessor: v62 
falseSuccessor: v63 
=== Usages ===
=== Predecessor ===
v58 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v823 #trueSuccessor: v62 #falseSuccessor: v63  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B40" 
    xhandlers
    flags 
    probability 4535686771439424545
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:576) [bci: 87]
stamp: void
=== Inputs ===
=== Succesors ===
next: v448 
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v448  <|@  <|@
f <@*|@fixed>@ <|@
tid v448 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v447 
=== Predecessor ===
v62 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B42" 
    xhandlers
    flags 
    probability 4579987547585006311
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
stamp: void
=== Inputs ===
=== Succesors ===
next: v451 
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v451  <|@  <|@
f <@*|@fixed>@ <|@
tid v451 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v450 
=== Predecessor ===
v63 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors 
    xhandlers
    flags 
    probability 4583560106972189218
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v443 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:573) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
next: v445 
=== Usages ===
=== Predecessor ===
v444 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v445  <|@  <|@
f <@*|@fixed>@ <|@
tid v445 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a496 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v443 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a496 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4595162928358490059
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:574) [bci: 68]
stamp: void
=== Inputs ===
=== Succesors ===
next: a841 
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a841  <|@  <|@
f <@~|@floating>@ <|@
tid v880 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a830 
=== Succesors ===
=== Usages ===
a841 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a830  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a841 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.next
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:574) [bci: 70]
nullCheck: false
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v880 
=== Succesors ===
next: v271 
=== Usages ===
a753 v576 
=== Predecessor ===
v30 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v880 #next: v271  <|@  <|@
f <@~|@floating>@ <|@
tid v576 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:574) [bci: 76]
stamp: void
=== Inputs ===
value: a841 
=== Succesors ===
=== Usages ===
v271 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a841  <|@  <|@
f <@*|@fixed>@ <|@
tid v271 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:574) [bci: 76]
stamp: void
trueSuccessorProbability: 0.1533361397600505
=== Inputs ===
condition: v576 
=== Succesors ===
trueSuccessor: v270 
falseSuccessor: v269 
=== Usages ===
=== Predecessor ===
a841 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v576 #trueSuccessor: v270 #falseSuccessor: v269  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 4583011109899276306
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v270 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:584) [bci: 146]
stamp: void
=== Inputs ===
=== Succesors ===
next: v273 
=== Usages ===
=== Predecessor ===
v271 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v273  <|@  <|@
f <@*|@fixed>@ <|@
tid v273 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a6 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v270 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a6 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B41" 
    xhandlers
    flags 
    probability 4594243692297133512
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v269 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:575) [bci: 79]
stamp: void
=== Inputs ===
=== Succesors ===
next: v459 
=== Usages ===
=== Predecessor ===
v271 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v459  <|@  <|@
f <@~|@floating>@ <|@
tid v879 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.HashMap.getNode(HashMap.java:575) [bci: 81]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v831 
y: v822 
=== Succesors ===
=== Usages ===
v459 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v831 y: v822  <|@  <|@
f <@*|@fixed>@ <|@
tid v459 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:575) [bci: 81]
stamp: void
trueSuccessorProbability: 0.0011187072715972413
=== Inputs ===
condition: v879 
=== Succesors ===
trueSuccessor: v457 
falseSuccessor: v458 
=== Usages ===
=== Predecessor ===
v269 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v879 #trueSuccessor: v457 #falseSuccessor: v458  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 4549946491787222878
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v457 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:576) [bci: 87]
stamp: void
=== Inputs ===
=== Succesors ===
next: v449 
=== Usages ===
=== Predecessor ===
v459 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v449  <|@  <|@
f <@*|@fixed>@ <|@
tid v449 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v447 
=== Predecessor ===
v457 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B33" "B39" 
    successors 
    xhandlers
    flags 
    probability 4550579685075311074
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v447 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v448 v449 
=== Succesors ===
next: a69 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v448 v449 #next: a69  <|@  <|@
f <@~|@floating>@ <|@
tid a881 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 24]
op: Uncompress
stamp: a Ljava/util/HashMap$Node;
=== Inputs ===
value: a830 
=== Succesors ===
=== Usages ===
v537 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a830  <|@  <|@
tid v537 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:576) [bci: 94]
returnStamp: a# Ljava/util/HashMap$TreeNode;
signature: [Ljdk.vm.ci.meta.JavaType;@5f505f3
stamp: void
targetMethod: HotSpotMethod<HashMap$TreeNode.getTreeNode(int, Object)>
=== Inputs ===
arguments: a881 i2 a3 
=== Succesors ===
=== Usages ===
a69 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a881 i2 a3  <|@  <|@
tid ?752 <|@
d <@d|@=== Debug Properties ===
bci: 94
code: ResolvedJavaMethodBytecode<HashMap.getNode(int, Object)>
duringCall: true
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 576
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - - - - - 
=== Succesors ===
=== Usages ===
a69 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a69 <|@
d <@d|@=== Debug Properties ===
bci: 94
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:576) [bci: 94]
polymorphic: false
stamp: a# Ljava/util/HashMap$TreeNode;
targetMethod: Direct#HashMap$TreeNode.getTreeNode
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v537 
stateDuring: ?752 
=== Succesors ===
next: v71 
=== Usages ===
v71 
=== Predecessor ===
v447 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v537 stateDuring: ?752 #next: v71  <|@  <|@
f <@*|@fixed>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:576) [bci: 97]
stamp: void
=== Inputs ===
result: a69 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a69 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a69 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B42" 
    xhandlers
    flags 
    probability 4594238014105951488
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v458 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
stamp: void
=== Inputs ===
=== Succesors ===
next: v453 
=== Usages ===
=== Predecessor ===
v459 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v453  <|@  <|@
f <@*|@fixed>@ <|@
tid v453 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v450 
=== Predecessor ===
v458 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B34" "B41" 
    successors "B43" 
    xhandlers
    flags 
    probability 4594790134468698542
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a753 <|@
d <@d|@=== Debug Properties ===
stamp: n Ljava/util/HashMap$Node;
valueDescription: n -
=== Inputs ===
merge: v450 
values: a840 a841 
=== Succesors ===
=== Usages ===
a754 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v450 values: a840 a841  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v450 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v451 v453 
=== Succesors ===
next: v72 
=== Usages ===
a753 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v451 v453 #next: v72  <|@  <|@
f <@~|@floating>@ <|@
tid a754 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:574) [bci: 70]
op: Uncompress
stamp: a Ljava/util/HashMap$Node;
=== Inputs ===
value: a753 
=== Succesors ===
=== Usages ===
a74 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a753  <|@  <|@
f <@*|@fixed>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v73 
=== Predecessor ===
v450 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B65" "B71" 
    successors "B44" "B69" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4595670214891295398
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a74 <|@
d <@d|@=== Debug Properties ===
stamp: a Ljava/util/HashMap$Node;
valueDescription: a -
=== Inputs ===
merge: v73 
values: a754 a571 a573 
=== Succesors ===
=== Usages ===
?75 v871 v865 v126 ?751 v127 ?341 v864 v878 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v73 values: a754 a571 a573  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 1.1565390518063794
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 2
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v72 
=== Succesors ===
next: i842 
=== Usages ===
a74 v84 v100 v110 v112 v274 v279 v647 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v72 #next: i842  <|@  <|@
tid ?75 <|@
d <@d|@=== Debug Properties ===
bci: 98
code: ResolvedJavaMethodBytecode<HashMap.getNode(int, Object)>
duringCall: false
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 578
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - i2 a3 - - a74 - - 
=== Succesors ===
=== Usages ===
v612 v772 i842 v844 v877 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - i2 a3 - - a74 - -  <|@  <|@
f <@~|@floating>@ <|@
tid v864 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a74 
index: - 
=== Succesors ===
=== Usages ===
i842 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a74 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i842 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.hash
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 100]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?75 
guard: - 
address: v864 
=== Succesors ===
next: v80 
=== Usages ===
v77 
=== Predecessor ===
v73 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?75 guard: - address: v864 #next: v80  <|@  <|@
f <@~|@floating>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 104]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i842 
=== Succesors ===
=== Usages ===
v80 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2 y: i842  <|@  <|@
f <@*|@fixed>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 104]
stamp: void
trueSuccessorProbability: 0.8091668758741886
=== Inputs ===
condition: v77 
=== Succesors ===
trueSuccessor: v78 
falseSuccessor: v79 
=== Usages ===
=== Predecessor ===
i842 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v77 #trueSuccessor: v78 #falseSuccessor: v79  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594429380781958389
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 107]
stamp: void
=== Inputs ===
=== Succesors ===
next: a843 
=== Usages ===
=== Predecessor ===
v80 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a843  <|@  <|@
f <@~|@floating>@ <|@
tid v865 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a74 
index: - 
=== Succesors ===
=== Usages ===
a843 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a74 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a843 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.key
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 109]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v865 
=== Succesors ===
next: v88 
=== Usages ===
a545 v746 v867 v874 
=== Predecessor ===
v78 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v865 #next: v88  <|@  <|@
f <@~|@floating>@ <|@
tid a545 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 109]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a843 
=== Succesors ===
=== Usages ===
v82 v568 v207 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a843  <|@  <|@
f <@~|@floating>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 116]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a3 
y: a545 
=== Succesors ===
=== Usages ===
v88 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a3 y: a545  <|@  <|@
f <@*|@fixed>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 116]
stamp: void
trueSuccessorProbability: 0.7707650031025618
=== Inputs ===
condition: v82 
=== Succesors ===
trueSuccessor: v84 
falseSuccessor: v87 
=== Usages ===
=== Predecessor ===
a843 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v82 #trueSuccessor: v84 #falseSuccessor: v87  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 4592774965734155563
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:580) [bci: 132]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v73 
=== Succesors ===
next: v126 
=== Usages ===
=== Predecessor ===
v88 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v73 #next: v126  <|@  <|@
f <@*|@fixed>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:580) [bci: 132]
stamp: void
=== Inputs ===
result: a74 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v84 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a74 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B60" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584985172859505021
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
next: v844 
=== Usages ===
=== Predecessor ===
v88 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v844  <|@  <|@
f <@~|@floating>@ <|@
tid v883 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
v844 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v844 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?75 
guard: - 
address: v883 
=== Succesors ===
next: v205 
=== Usages ===
v869 v820 
=== Predecessor ===
v87 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?75 guard: - address: v883 #next: v205  <|@  <|@
f <@~|@floating>@ <|@
tid v820 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v844 
y: v817 
=== Succesors ===
=== Usages ===
v205 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v844 y: v817  <|@  <|@
f <@*|@fixed>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=equals target_method_class=Ljava/lang/String; position=at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
trueSuccessorProbability: 0.31013147718484146
=== Inputs ===
condition: v820 
=== Succesors ===
trueSuccessor: v199 
falseSuccessor: v204 
=== Usages ===
=== Predecessor ===
v844 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v820 #trueSuccessor: v199 #falseSuccessor: v204  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B49" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577138355211240435
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=equals target_method_class=Ljava/lang/String; position=at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
=== Inputs ===
=== Succesors ===
next: v210 
=== Usages ===
=== Predecessor ===
v205 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v210  <|@  <|@
f <@~|@floating>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:43) [bci: 2]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a3 
y: a545 
=== Succesors ===
=== Usages ===
v210 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a3 y: a545  <|@  <|@
f <@*|@fixed>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:43) [bci: 2]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v207 
=== Succesors ===
trueSuccessor: v208 
falseSuccessor: v209 
=== Usages ===
=== Predecessor ===
v199 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v207 #trueSuccessor: v208 #falseSuccessor: v209  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B67" 
    xhandlers
    flags 
    probability 4572634755583869939
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v208 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:44) [bci: 5]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
=== Inputs ===
=== Succesors ===
next: v312 
=== Usages ===
=== Predecessor ===
v210 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v312  <|@  <|@
f <@*|@fixed>@ <|@
tid v312 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v309 
=== Predecessor ===
v208 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572634755583869939
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 7]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
=== Inputs ===
=== Succesors ===
next: v722 
=== Usages ===
=== Predecessor ===
v210 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v722  <|@  <|@
f <@~|@floating>@ <|@
tid v746 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
=== Inputs ===
value: a843 
=== Succesors ===
=== Usages ===
v722 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a843  <|@  <|@
f <@*|@fixed>@ <|@
tid v722 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 15]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v746 
=== Succesors ===
trueSuccessor: v721 
falseSuccessor: v720 
=== Usages ===
=== Predecessor ===
v209 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v746 #trueSuccessor: v721 #falseSuccessor: v720  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4557927010015721051
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v721 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 18]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
=== Inputs ===
=== Succesors ===
next: v342 
=== Usages ===
=== Predecessor ===
v722 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v342  <|@  <|@
f <@*|@fixed>@ <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v339 
=== Predecessor ===
v721 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572036282240851240
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v720 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:141) [bci: 28]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
=== Inputs ===
=== Succesors ===
next: v845 
=== Usages ===
=== Predecessor ===
v722 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v845  <|@  <|@
f <@~|@floating>@ <|@
tid v874 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a843 
=== Succesors ===
=== Usages ===
v845 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a843  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v845 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v874 
=== Succesors ===
next: v794 
=== Usages ===
v821 
=== Predecessor ===
v720 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v874 #next: v794  <|@  <|@
f <@~|@floating>@ <|@
tid v821 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v845 
y: v817 
=== Succesors ===
=== Usages ===
v794 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v845 y: v817  <|@  <|@
f <@*|@fixed>@ <|@
tid v794 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v821 
=== Succesors ===
trueSuccessor: v792 
falseSuccessor: v791 
=== Usages ===
=== Predecessor ===
v845 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v821 #trueSuccessor: v792 #falseSuccessor: v791  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4567532682613480744
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v792 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
=== Inputs ===
=== Succesors ===
next: a846 
=== Usages ===
=== Predecessor ===
v794 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a846  <|@  <|@
f <@~|@floating>@ <|@
tid v882 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
a846 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a846 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 22]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v882 
=== Succesors ===
next: v877 
=== Usages ===
a549 v877 v866 
=== Predecessor ===
v792 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v882 #next: v877  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v877 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?75 
object: a846 
=== Succesors ===
next: a847 
=== Usages ===
=== Predecessor ===
a846 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?75 object: a846 #next: a847  <|@  <|@
f <@~|@floating>@ <|@
tid v867 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a843 
=== Succesors ===
=== Usages ===
a847 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a843  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a847 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 26]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v867 
=== Succesors ===
next: v648 
=== Usages ===
a557 v558 v868 
=== Predecessor ===
v877 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v867 #next: v648  <|@  <|@
f <@~|@floating>@ <|@
tid v558 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 26]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
=== Inputs ===
value: a847 
=== Succesors ===
=== Usages ===
v648 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a847  <|@  <|@
f <@*|@fixed>@ <|@
tid v648 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 26]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v558 
=== Succesors ===
trueSuccessor: v647 
falseSuccessor: v644 
=== Usages ===
=== Predecessor ===
a847 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v558 #trueSuccessor: v647 #falseSuccessor: v644  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v647 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 26]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v73 
=== Succesors ===
next: v772 
=== Usages ===
=== Predecessor ===
v648 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v73 #next: v772  <|@  <|@
f <@~|@floating>@ <|@
tid i778 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -143115
stableDimension: 0
stamp: i32 [-143115] ⇊00000000fffdd0f5 ⇈00000000fffdd0f5
stampKind: i32
value: int[-143115|0xfffffffffffdd0f5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v772 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v772 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?75 
actionAndReason: i778 
speculation: a6 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v647 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?75 actionAndReason: i778 speculation: a6  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4567532682613480744
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v644 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 26]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
=== Inputs ===
=== Succesors ===
next: i848 
=== Usages ===
=== Predecessor ===
v648 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i848  <|@  <|@
f <@~|@floating>@ <|@
tid v868 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a847 
=== Succesors ===
=== Usages ===
i848 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a847  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i848 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 26]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v868 
=== Succesors ===
next: i849 
=== Usages ===
v227 
=== Predecessor ===
v644 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v868 #next: i849  <|@  <|@
f <@~|@floating>@ <|@
tid v866 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a846 
=== Succesors ===
=== Usages ===
i849 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a846  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i849 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 22]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v866 
=== Succesors ===
next: v230 
=== Usages ===
v227 v234 i242 
=== Predecessor ===
i848 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v866 #next: v230  <|@  <|@
f <@~|@floating>@ <|@
tid v227 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 29]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i848 
y: i849 
=== Succesors ===
=== Usages ===
v230 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i848 y: i849  <|@  <|@
f <@*|@fixed>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 29]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v227 
=== Succesors ===
trueSuccessor: v228 
falseSuccessor: v229 
=== Usages ===
=== Predecessor ===
i849 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v227 #trueSuccessor: v228 #falseSuccessor: v229  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4563029082986110248
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:53) [bci: 34]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
=== Inputs ===
=== Succesors ===
next: v237 
=== Usages ===
=== Predecessor ===
v230 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v237  <|@  <|@
f <@~|@floating>@ <|@
tid v234 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:53) [bci: 38]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i849 
y: i12 
=== Succesors ===
=== Usages ===
v237 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i849 y: i12  <|@  <|@
f <@*|@fixed>@ <|@
tid v237 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:53) [bci: 38]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v234 
=== Succesors ===
trueSuccessor: v235 
falseSuccessor: v236 
=== Usages ===
=== Predecessor ===
v228 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v234 #trueSuccessor: v235 #falseSuccessor: v236  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B67" 
    xhandlers
    flags 
    probability 4558525483358739752
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v235 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:54) [bci: 41]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
=== Inputs ===
=== Succesors ===
next: v422 
=== Usages ===
=== Predecessor ===
v237 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v422  <|@  <|@
f <@*|@fixed>@ <|@
tid v422 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v309 
=== Predecessor ===
v235 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4558525483358739752
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v236 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:57) [bci: 43]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
=== Inputs ===
=== Succesors ===
next: i242 
=== Usages ===
=== Predecessor ===
v237 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i242  <|@  <|@
f <@~|@floating>@ <|@
tid a549 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 22]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a846 
=== Succesors ===
=== Usages ===
i242 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a846  <|@  <|@
f <@~|@floating>@ <|@
tid a557 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 26]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a847 
=== Succesors ===
=== Usages ===
i242 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a847  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i242 <|@
d <@d|@=== Debug Properties ===
kind: char
nodeSourcePosition: at org.graalvm.compiler.replacements.nodes.ArrayEqualsNode.equals(Object, Object, int, JavaKind) [bci: -1]
at org.graalvm.compiler.replacements.nodes.ArrayEqualsNode.equals(ArrayEqualsNode.java:202) [bci: 6]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:60) [bci: 59]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
array1: a549 
array2: a557 
length: i849 
lastLocationAccess: - 
=== Succesors ===
next: v251 
=== Usages ===
i195 
=== Predecessor ===
v236 >@ <|@
instruction <@ArrayEquals|@org.graalvm.compiler.replacements.nodes.ArrayEqualsNode>@ array1: a549 array2: a557 length: i849 lastLocationAccess: - #next: v251  <|@  <|@
f <@*|@fixed>@ <|@
tid v251 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v192 
=== Predecessor ===
i242 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4563029082986110248
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v229 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:51) [bci: 32]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
=== Inputs ===
=== Succesors ===
next: v390 
=== Usages ===
=== Predecessor ===
v230 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v390  <|@  <|@
f <@*|@fixed>@ <|@
tid v390 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v339 
=== Predecessor ===
v229 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4567532682613480744
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v791 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
=== Inputs ===
=== Succesors ===
next: v800 
=== Usages ===
=== Predecessor ===
v794 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v800  <|@  <|@
f <@*|@fixed>@ <|@
tid v800 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v339 
=== Predecessor ===
v791 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582313558340751616
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v204 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
=== Inputs ===
=== Succesors ===
next: v565 
=== Usages ===
=== Predecessor ===
v205 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v565  <|@  <|@
f <@~|@floating>@ <|@
tid v869 <|@
d <@d|@=== Debug Properties ===
displacement: 448
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v844 
=== Succesors ===
=== Usages ===
v565 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v844  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v565 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
nullCheck: false
stamp: Method*!
=== Inputs ===
stateBefore: - 
guard: - 
address: v869 
=== Succesors ===
next: j567 
=== Usages ===
v870 v568 
=== Predecessor ===
v204 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v869 #next: j567  <|@  <|@
f <@~|@floating>@ <|@
tid v870 <|@
d <@d|@=== Debug Properties ===
displacement: 64
scale: Times1
stamp: void*
=== Inputs ===
base: v565 
index: - 
=== Succesors ===
=== Usages ===
j567 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v565 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j567 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v870 
=== Succesors ===
next: i91 
=== Usages ===
v568 
=== Predecessor ===
v565 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v870 #next: i91  <|@  <|@
tid v568 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@7f026738
stamp: void
targetMethod: HotSpotMethod<Object.equals(Object)>
=== Inputs ===
computedAddress: j567 
metaspaceMethod: v565 
arguments: a3 a545 
=== Succesors ===
=== Usages ===
i91 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j567 metaspaceMethod: v565 arguments: a3 a545  <|@  <|@
tid ?751 <|@
d <@d|@=== Debug Properties ===
bci: 126
code: ResolvedJavaMethodBytecode<HashMap.getNode(int, Object)>
duringCall: true
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 579
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - i2 a3 - - a74 - - 
=== Succesors ===
=== Usages ===
i91 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - i2 a3 - - a74 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i91 <|@
d <@d|@=== Debug Properties ===
bci: 126
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
polymorphic: true
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Indirect#Object.equals
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v568 
stateDuring: ?751 
=== Succesors ===
next: v194 
=== Usages ===
i195 
=== Predecessor ===
j567 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v568 stateDuring: ?751 #next: v194  <|@  <|@
f <@*|@fixed>@ <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v192 
=== Predecessor ===
i91 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B57" 
    successors "B62" "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582481878968475625
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i195 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v192 
values: i91 i242 
=== Succesors ===
=== Usages ===
v93 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v192 values: i91 i242  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v194 v251 
=== Succesors ===
next: v105 
=== Usages ===
i195 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v194 v251 #next: v105  <|@  <|@
f <@~|@floating>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:579) [bci: 129]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i195 
y: i12 
=== Succesors ===
=== Usages ===
v105 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i195 y: i12  <|@  <|@
f <@*|@fixed>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:579) [bci: 129]
stamp: void
trueSuccessorProbability: 0.03480278422273782
=== Inputs ===
condition: v93 
=== Succesors ===
trueSuccessor: v104 
falseSuccessor: v308 
=== Usages ===
=== Predecessor ===
v192 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v93 #trueSuccessor: v104 #falseSuccessor: v308  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4560739769974181225
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:581) [bci: 135]
stamp: void
=== Inputs ===
=== Succesors ===
next: v340 
=== Usages ===
=== Predecessor ===
v105 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v340  <|@  <|@
f <@*|@fixed>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v339 
=== Predecessor ===
v104 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" "B50" "B58" "B59" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572238258899904086
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v340 v342 v390 v800 
=== Succesors ===
next: a850 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v340 v342 v390 v800 #next: a850  <|@  <|@
f <@~|@floating>@ <|@
tid v871 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a74 
index: - 
=== Succesors ===
=== Usages ===
a850 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a74 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a850 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.next
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:581) [bci: 137]
nullCheck: false
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v871 
=== Succesors ===
next: v114 
=== Usages ===
a571 v577 
=== Predecessor ===
v339 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v871 #next: v114  <|@  <|@
f <@~|@floating>@ <|@
tid v577 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:581) [bci: 143]
stamp: void
=== Inputs ===
value: a850 
=== Succesors ===
=== Usages ===
v114 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a850  <|@  <|@
f <@*|@fixed>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:581) [bci: 143]
stamp: void
trueSuccessorProbability: 0.3139429194691874
=== Inputs ===
condition: v577 
=== Succesors ===
trueSuccessor: v110 
falseSuccessor: v113 
=== Usages ===
=== Predecessor ===
a850 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v577 #trueSuccessor: v110 #falseSuccessor: v113  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors 
    xhandlers
    flags 
    probability 4564660372334116583
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:584) [bci: 146]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v73 
=== Succesors ===
next: v123 
=== Usages ===
=== Predecessor ===
v114 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v73 #next: v123  <|@  <|@
f <@*|@fixed>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:584) [bci: 146]
stamp: void
=== Inputs ===
result: a6 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v110 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a6 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B43" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4569814121301167416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
stamp: void
=== Inputs ===
=== Succesors ===
next: v611 
=== Usages ===
=== Predecessor ===
v114 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v611  <|@  <|@
tid ?341 <|@
d <@d|@=== Debug Properties ===
bci: 129
code: ResolvedJavaMethodBytecode<HashMap.getNode(int, Object)>
duringCall: false
localsSize: 8
locksSize: 0
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
rethrowException: false
sourceFile: HashMap.java
sourceLine: 579
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - i2 a3 - - a74 - - i12 
=== Succesors ===
=== Usages ===
v611 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - i2 a3 - - a74 - - i12  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v611 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?341 
=== Succesors ===
next: v112 
=== Usages ===
=== Predecessor ===
v113 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?341 #next: v112  <|@  <|@
f <@~|@floating>@ <|@
tid a571 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:581) [bci: 137]
op: Uncompress
stamp: a Ljava/util/HashMap$Node;
=== Inputs ===
value: a850 
=== Succesors ===
=== Usages ===
a74 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a850  <|@  <|@
f <@*|@fixed>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
stamp: void
=== Inputs ===
loopBegin: v73 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v611 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v73  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B67" 
    xhandlers
    flags 
    probability 4582244361884019069
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v308 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:580) [bci: 132]
stamp: void
=== Inputs ===
=== Succesors ===
next: v310 
=== Usages ===
=== Predecessor ===
v105 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v310  <|@  <|@
f <@*|@fixed>@ <|@
tid v310 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v309 
=== Predecessor ===
v308 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B48" "B56" 
    successors "B68" 
    xhandlers
    flags 
    probability 4583908865869289827
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v309 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v310 v312 v422 
=== Succesors ===
next: v100 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v310 v312 v422 #next: v100  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors 
    xhandlers
    flags 
    probability 4583908865869289827
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:580) [bci: 132]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v73 
=== Succesors ===
next: v127 
=== Usages ===
=== Predecessor ===
v309 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v73 #next: v127  <|@  <|@
f <@*|@fixed>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:580) [bci: 132]
stamp: void
=== Inputs ===
result: a74 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v100 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a74 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585124157473142468
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:581) [bci: 135]
stamp: void
=== Inputs ===
=== Succesors ===
next: a851 
=== Usages ===
=== Predecessor ===
v80 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a851  <|@  <|@
f <@~|@floating>@ <|@
tid v878 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a74 
index: - 
=== Succesors ===
=== Usages ===
a851 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a74 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a851 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.next
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:581) [bci: 137]
nullCheck: false
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v878 
=== Succesors ===
next: v281 
=== Usages ===
a573 v578 
=== Predecessor ===
v79 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v878 #next: v281  <|@  <|@
f <@~|@floating>@ <|@
tid v578 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:581) [bci: 143]
stamp: void
=== Inputs ===
value: a851 
=== Succesors ===
=== Usages ===
v281 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a851  <|@  <|@
f <@*|@fixed>@ <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:581) [bci: 143]
stamp: void
trueSuccessorProbability: 0.3139429194691874
=== Inputs ===
condition: v578 
=== Succesors ===
trueSuccessor: v279 
falseSuccessor: v280 
=== Usages ===
=== Predecessor ===
a851 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v578 #trueSuccessor: v279 #falseSuccessor: v280  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors 
    xhandlers
    flags 
    probability 4577386439106848792
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v279 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:584) [bci: 146]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v73 
=== Succesors ===
next: v282 
=== Usages ===
=== Predecessor ===
v281 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v73 #next: v282  <|@  <|@
f <@*|@fixed>@ <|@
tid v282 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:584) [bci: 146]
stamp: void
=== Inputs ===
result: a6 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v279 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a6 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B43" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4582467485620222332
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v280 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
stamp: void
=== Inputs ===
=== Succesors ===
next: v612 
=== Usages ===
=== Predecessor ===
v281 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v612  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v612 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?75 
=== Succesors ===
next: v274 
=== Usages ===
=== Predecessor ===
v280 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?75 #next: v274  <|@  <|@
f <@~|@floating>@ <|@
tid a573 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:581) [bci: 137]
op: Uncompress
stamp: a Ljava/util/HashMap$Node;
=== Inputs ===
value: a851 
=== Succesors ===
=== Usages ===
a74 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a851  <|@  <|@
f <@*|@fixed>@ <|@
tid v274 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 1
stamp: void
=== Inputs ===
loopBegin: v73 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v612 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v73  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v615 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v756 
=== Usages ===
=== Predecessor ===
v616 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v756  <|@  <|@
f <@~|@floating>@ <|@
tid i757 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -123931
stableDimension: 0
stamp: i32 [-123931] ⇊00000000fffe1be5 ⇈00000000fffe1be5
stampKind: i32
value: int[-123931|0xfffffffffffe1be5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i758 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v756 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v755 
=== Predecessor ===
v615 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" "B9" "B17" "B19" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i758 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-132619 - -123931] ⇊00000000fffc00e5 ⇈00000000fffffffd
valueDescription: i32
=== Inputs ===
merge: v755 
values: i757 i762 i764 i766 
=== Succesors ===
=== Usages ===
v760 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v755 values: i757 i762 i764 i766  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v755 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v756 v761 v763 v765 
=== Succesors ===
next: v760 
=== Usages ===
i758 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v756 v761 v763 v765 #next: v760  <|@  <|@
tid ?4 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<HashMap.getNode(int, Object)>
duringCall: false
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 569
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 a3 - - - - - 
=== Succesors ===
=== Usages ===
v760 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 a3 - - - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v760 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?4 
actionAndReason: i758 
speculation: a6 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v755 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?4 actionAndReason: i758 speculation: a6  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a828 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a828  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! Ljava/util/HashMap;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v852 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v852 <|@
result [v0|QWORD[.] + 36] <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a828 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a828 <|@
result v3|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap.table
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 1]
nullCheck: false
stamp: n [Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v852 
=== Succesors ===
next: v10 
=== Usages ===
a477 v478 v853 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v852 #next: v10  <|@  <|@
f <@~|@floating>@ <|@
tid v478 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 10]
stamp: void
=== Inputs ===
value: a828 
=== Succesors ===
=== Usages ===
v10 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a828  <|@  <|@
f <@~|@floating>@ <|@
tid a6 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 6]
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v123 v120 v121 v273 v272 v282 v772 v760 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 6]
stamp: void
trueSuccessorProbability: 0.02293902936868141
=== Inputs ===
condition: v478 
=== Succesors ===
trueSuccessor: v8 
falseSuccessor: v9 
=== Usages ===
=== Predecessor ===
a828 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v478 #trueSuccessor: v8 #falseSuccessor: v9  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@28eeb4db slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = MOV [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|DWORD[.], y: v3|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.02293902936868141 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4582268946471914142
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:584) [bci: 146]
stamp: void
=== Inputs ===
=== Succesors ===
next: v120 
=== Usages ===
=== Predecessor ===
v10 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v120  <|@  <|@
f <@*|@fixed>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:584) [bci: 146]
stamp: void
=== Inputs ===
result: a6 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v8 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a6 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B72" 
    xhandlers
    flags 
    probability 4606975802391783339
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: i829 
=== Usages ===
=== Predecessor ===
v10 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i829  <|@  <|@
f <@~|@floating>@ <|@
tid v853 <|@
result [v3|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a828 
=== Succesors ===
=== Usages ===
i829 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a828  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i829 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 10]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v853 
=== Succesors ===
next: v616 
=== Usages ===
v605 i17 
=== Predecessor ===
v9 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v853 #next: v616  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 i18 v28 ?751 ?341 v537 ?75 v77 ?750 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i16 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 21]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i17 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i17 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 21]
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i829 
y: i16 
=== Succesors ===
=== Usages ===
i18 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i829 y: i16  <|@  <|@
f <@~|@floating>@ <|@
tid i18 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 23]
stamp: i32
=== Inputs ===
x: i2 
y: i17 
=== Succesors ===
=== Usages ===
v854 v605 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i2 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid v605 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 24]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i18 
y: i829 
=== Succesors ===
=== Usages ===
v616 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i18 y: i829  <|@  <|@
f <@~|@floating>@ <|@
tid a3 <|@
result v2|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: a Ljava/lang/Object;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v33 v37 v143 ?751 ?341 v537 ?75 v82 v207 ?750 v568 v529 v872 v857 v882 v883 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v616 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 14]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v605 
=== Succesors ===
trueSuccessor: v613 
falseSuccessor: v615 
=== Usages ===
=== Predecessor ===
i829 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v605 #trueSuccessor: v613 #falseSuccessor: v615  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV [v3|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = DEC v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = AND (x: v1|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v4|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606975802391783339
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v613 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: a830 
=== Usages ===
a830 
=== Predecessor ===
v616 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a830  <|@  <|@
f <@~|@floating>@ <|@
tid a477 <|@
result v7|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 1]
op: Uncompress
stamp: a [Ljava/util/HashMap$Node;
=== Inputs ===
value: a828 
=== Succesors ===
=== Usages ===
v854 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a828  <|@  <|@
f <@~|@floating>@ <|@
tid v854 <|@
result [v7|QWORD[.] + v6|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a477 
index: i18 
=== Succesors ===
=== Usages ===
a830 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a477 index: i18  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a830 <|@
result v8|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 24]
nullCheck: false
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: v613 
address: v854 
=== Succesors ===
next: v26 
=== Usages ===
a496 v497 v855 v856 v863 v875 v880 a881 
=== Predecessor ===
v613 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v613 address: v854 #next: v26  <|@  <|@
f <@~|@floating>@ <|@
tid v497 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 33]
stamp: void
=== Inputs ===
value: a830 
=== Succesors ===
=== Usages ===
v26 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a830  <|@  <|@
f <@*|@fixed>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 28]
stamp: void
trueSuccessorProbability: 0.0762231274461013
=== Inputs ===
condition: v497 
=== Succesors ===
trueSuccessor: v25 
falseSuccessor: v24 
=== Usages ===
=== Predecessor ===
a830 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v497 #trueSuccessor: v25 #falseSuccessor: v24  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@44b93d59 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[.] = MOV [v7|QWORD[.] + v6|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v8|DWORD[.], y: v8|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0762231274461013 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4590030884246439089
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:584) [bci: 146]
stamp: void
=== Inputs ===
=== Succesors ===
next: v121 
=== Usages ===
=== Predecessor ===
v26 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v121  <|@  <|@
f <@*|@fixed>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:584) [bci: 146]
stamp: void
=== Inputs ===
result: a6 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v25 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a6 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B36" 
    xhandlers
    flags 
    probability 4606304994443874069
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v831 
=== Usages ===
=== Predecessor ===
v26 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v831  <|@  <|@
f <@~|@floating>@ <|@
tid v875 <|@
result [v8|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a830 
=== Succesors ===
=== Usages ===
v831 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a830  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v831 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.HashMap.getNode(HashMap.java:575) [bci: 81]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v875 
=== Succesors ===
next: i832 
=== Usages ===
v823 v879 
=== Predecessor ===
v24 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v875 #next: i832  <|@  <|@
f <@~|@floating>@ <|@
tid v855 <|@
result [v8|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a830 
=== Succesors ===
=== Usages ===
i832 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a830  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i832 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.hash
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 33]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v855 
=== Succesors ===
next: v31 
=== Usages ===
v28 
=== Predecessor ===
v831 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v855 #next: v31  <|@  <|@
f <@~|@floating>@ <|@
tid v28 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 37]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i832 
=== Succesors ===
=== Usages ===
v31 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2 y: i832  <|@  <|@
f <@~|@floating>@ <|@
tid v822 <|@
result meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.HashMap.getNode(HashMap.java:575) [bci: 81]
rawvalue: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v823 v879 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i12 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 14]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v42 v93 v441 v234 ?341 v171 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v817 <|@
result meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v818 v819 v820 v821 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v31 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 37]
stamp: void
trueSuccessorProbability: 0.8156496292108676
=== Inputs ===
condition: v28 
=== Succesors ===
trueSuccessor: v29 
falseSuccessor: v30 
=== Usages ===
=== Predecessor ===
i832 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v28 #trueSuccessor: v29 #falseSuccessor: v30  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOV [v8|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v1|DWORD, y: [v8|DWORD[.] * 8 + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8156496292108676 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4604806267426885410
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 40]
stamp: void
=== Inputs ===
=== Succesors ===
next: a833 
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a833  <|@  <|@
f <@~|@floating>@ <|@
tid v856 <|@
result [v8|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a830 
=== Succesors ===
=== Usages ===
a833 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a830  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a833 <|@
result v10|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.key
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 42]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v856 
=== Succesors ===
next: v36 
=== Usages ===
a504 v741 v859 v873 
=== Predecessor ===
v29 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v856 #next: v36  <|@  <|@
f <@~|@floating>@ <|@
tid a504 <|@
result v11|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 42]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a833 
=== Succesors ===
=== Usages ===
v33 v529 v143 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a833  <|@  <|@
f <@~|@floating>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 49]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a3 
y: a504 
=== Succesors ===
=== Usages ===
v36 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a3 y: a504  <|@  <|@
f <@~|@floating>@ <|@
tid a496 <|@
result v12|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 24]
op: Uncompress
stamp: a Ljava/util/HashMap$Node;
=== Inputs ===
value: a830 
=== Succesors ===
=== Usages ===
v300 v403 v445 ?750 v372 v124 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a830  <|@  <|@
f <@*|@fixed>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 49]
stamp: void
trueSuccessorProbability: 0.9040067186327908
=== Inputs ===
condition: v33 
=== Succesors ===
trueSuccessor: v34 
falseSuccessor: v35 
=== Usages ===
=== Predecessor ===
a833 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v33 #trueSuccessor: v34 #falseSuccessor: v35  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[.] = MOV [v8|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@44b93d59 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@44b93d59 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v11|QWORD[.], y: v2|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9040067186327908 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4604169731381826681
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:573) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
next: v124 
=== Usages ===
=== Predecessor ===
v36 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v124  <|@  <|@
f <@*|@fixed>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:573) [bci: 65]
stamp: void
=== Inputs ===
result: a496 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v34 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a496 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4589756709023634757
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
next: v620 
=== Usages ===
=== Predecessor ===
v36 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v620  <|@  <|@
f <@~|@floating>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 53]
stamp: void
=== Inputs ===
value: a3 
=== Succesors ===
=== Usages ===
v620 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a3  <|@  <|@
f <@*|@fixed>@ <|@
tid v620 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 53]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v37 
=== Succesors ===
trueSuccessor: v619 
falseSuccessor: v617 
=== Usages ===
=== Predecessor ===
v35 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v37 #trueSuccessor: v619 #falseSuccessor: v617  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|QWORD[.], y: v2|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v619 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 53]
stamp: void
=== Inputs ===
=== Succesors ===
next: v761 
=== Usages ===
=== Predecessor ===
v620 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v761  <|@  <|@
f <@~|@floating>@ <|@
tid i762 <|@
result int[-129299|0xfffffffffffe06ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -129299
stableDimension: 0
stamp: i32 [-129299] ⇊00000000fffe06ed ⇈00000000fffe06ed
stampKind: i32
value: int[-129299|0xfffffffffffe06ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i758 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v761 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v755 
=== Predecessor ===
v619 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-129299|0xfffffffffffe06ed]] destination: B9 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B28" 
    xhandlers
    flags 
    probability 4589756709023634757
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v617 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 53]
stamp: void
=== Inputs ===
=== Succesors ===
next: v834 
=== Usages ===
=== Predecessor ===
v620 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v834  <|@  <|@
f <@~|@floating>@ <|@
tid v872 <|@
result [v2|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
v834 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v834 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v872 
=== Succesors ===
next: v141 
=== Usages ===
v861 v818 
=== Predecessor ===
v617 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v872 #next: v141  <|@  <|@
f <@~|@floating>@ <|@
tid v818 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v834 
y: v817 
=== Succesors ===
=== Usages ===
v141 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v834 y: v817  <|@  <|@
f <@*|@fixed>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=equals target_method_class=Ljava/lang/String; position=at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
trueSuccessorProbability: 0.5841828066598709
=== Inputs ===
condition: v818 
=== Succesors ===
trueSuccessor: v135 
falseSuccessor: v140 
=== Usages ===
=== Predecessor ===
v834 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v818 #trueSuccessor: v135 #falseSuccessor: v140  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v13|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5841828066598709 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4586110475649275746
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v135 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=equals target_method_class=Ljava/lang/String; position=at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v146 
=== Usages ===
=== Predecessor ===
v141 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v146  <|@  <|@
f <@~|@floating>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:43) [bci: 2]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a3 
y: a504 
=== Succesors ===
=== Usages ===
v146 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a3 y: a504  <|@  <|@
f <@*|@fixed>@ <|@
tid v146 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:43) [bci: 2]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v143 
=== Succesors ===
trueSuccessor: v144 
falseSuccessor: v145 
=== Usages ===
=== Predecessor ===
v135 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v143 #trueSuccessor: v144 #falseSuccessor: v145  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v11|QWORD[.], y: v2|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 4581606876021905250
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v144 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:44) [bci: 5]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v300 
=== Usages ===
=== Predecessor ===
v146 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v300  <|@  <|@
f <@*|@fixed>@ <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:573) [bci: 65]
stamp: void
=== Inputs ===
result: a496 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v144 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a496 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4581606876021905250
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v145 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 7]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v688 
=== Usages ===
=== Predecessor ===
v146 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v688  <|@  <|@
f <@~|@floating>@ <|@
tid v741 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
value: a833 
=== Succesors ===
=== Usages ===
v688 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a833  <|@  <|@
f <@*|@fixed>@ <|@
tid v688 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 15]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v741 
=== Succesors ===
trueSuccessor: v687 
falseSuccessor: v686 
=== Usages ===
=== Predecessor ===
v145 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v741 #trueSuccessor: v687 #falseSuccessor: v686  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v10|DWORD[.], y: v10|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B30" 
    xhandlers
    flags 
    probability 4566906146217097498
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v687 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 18]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v324 
=== Usages ===
=== Predecessor ===
v688 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v324  <|@  <|@
f <@*|@fixed>@ <|@
tid v324 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v321 
=== Predecessor ===
v687 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B14 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B27" 
    xhandlers
    flags 
    probability 4581011910560557119
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v686 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:141) [bci: 28]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v835 
=== Usages ===
=== Predecessor ===
v688 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v835  <|@  <|@
f <@~|@floating>@ <|@
tid v873 <|@
result [v10|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a833 
=== Succesors ===
=== Usages ===
v835 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a833  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v835 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v873 
=== Succesors ===
next: v784 
=== Usages ===
v819 
=== Predecessor ===
v686 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v873 #next: v784  <|@  <|@
f <@~|@floating>@ <|@
tid v819 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v835 
y: v817 
=== Succesors ===
=== Usages ===
v784 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v835 y: v817  <|@  <|@
f <@*|@fixed>@ <|@
tid v784 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v819 
=== Succesors ===
trueSuccessor: v782 
falseSuccessor: v781 
=== Usages ===
=== Predecessor ===
v835 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v819 #trueSuccessor: v782 #falseSuccessor: v781  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v10|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4576508310933186623
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v782 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: a836 
=== Usages ===
=== Predecessor ===
v784 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a836  <|@  <|@
f <@~|@floating>@ <|@
tid v857 <|@
result [v2|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
a836 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a836 <|@
result v14|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 22]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v857 
=== Succesors ===
next: v624 
=== Usages ===
a508 v509 v858 
=== Predecessor ===
v782 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v857 #next: v624  <|@  <|@
f <@~|@floating>@ <|@
tid v509 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 22]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
value: a836 
=== Succesors ===
=== Usages ===
v624 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a836  <|@  <|@
f <@*|@fixed>@ <|@
tid v624 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 22]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v509 
=== Succesors ===
trueSuccessor: v623 
falseSuccessor: v621 
=== Usages ===
=== Predecessor ===
a836 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v509 #trueSuccessor: v623 #falseSuccessor: v621  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v14|DWORD[.] = MOV [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v14|DWORD[.], y: v14|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v623 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 22]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v763 
=== Usages ===
=== Predecessor ===
v624 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v763  <|@  <|@
f <@~|@floating>@ <|@
tid i764 <|@
result int[-130571|0xfffffffffffe01f5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -130571
stableDimension: 0
stamp: i32 [-130571] ⇊00000000fffe01f5 ⇈00000000fffe01f5
stampKind: i32
value: int[-130571|0xfffffffffffe01f5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i758 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v763 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v755 
=== Predecessor ===
v623 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-130571|0xfffffffffffe01f5]] destination: B17 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4576508310933186623
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v621 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 22]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: a837 
=== Usages ===
=== Predecessor ===
v624 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a837  <|@  <|@
f <@~|@floating>@ <|@
tid v859 <|@
result [v10|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a833 
=== Succesors ===
=== Usages ===
a837 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a833  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a837 <|@
result v15|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 26]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v859 
=== Succesors ===
next: v628 
=== Usages ===
a516 v517 v860 
=== Predecessor ===
v621 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v859 #next: v628  <|@  <|@
f <@~|@floating>@ <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 26]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
value: a837 
=== Succesors ===
=== Usages ===
v628 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a837  <|@  <|@
f <@*|@fixed>@ <|@
tid v628 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 26]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v517 
=== Succesors ===
trueSuccessor: v627 
falseSuccessor: v625 
=== Usages ===
=== Predecessor ===
a837 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v517 #trueSuccessor: v627 #falseSuccessor: v625  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v15|DWORD[.] = MOV [v10|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v15|DWORD[.], y: v15|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v627 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 26]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v765 
=== Usages ===
=== Predecessor ===
v628 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v765  <|@  <|@
f <@~|@floating>@ <|@
tid i766 <|@
result int[-132619|0xfffffffffffdf9f5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -132619
stableDimension: 0
stamp: i32 [-132619] ⇊00000000fffdf9f5 ⇈00000000fffdf9f5
stampKind: i32
value: int[-132619|0xfffffffffffdf9f5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i758 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v765 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v755 
=== Predecessor ===
v627 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-132619|0xfffffffffffdf9f5]] destination: B19 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B26" 
    xhandlers
    flags 
    probability 4576508310933186623
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v625 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 26]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: i838 
=== Usages ===
=== Predecessor ===
v628 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i838  <|@  <|@
f <@~|@floating>@ <|@
tid v860 <|@
result [v15|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a837 
=== Succesors ===
=== Usages ===
i838 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a837  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i838 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 26]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v860 
=== Succesors ===
next: i839 
=== Usages ===
v164 
=== Predecessor ===
v625 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v860 #next: i839  <|@  <|@
f <@~|@floating>@ <|@
tid v858 <|@
result [v14|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a836 
=== Succesors ===
=== Usages ===
i839 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a836  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i839 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 22]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v858 
=== Succesors ===
next: v167 
=== Usages ===
v164 v171 i179 
=== Predecessor ===
i838 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v858 #next: v167  <|@  <|@
f <@~|@floating>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 29]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i838 
y: i839 
=== Succesors ===
=== Usages ===
v167 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i838 y: i839  <|@  <|@
f <@*|@fixed>@ <|@
tid v167 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 29]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v164 
=== Succesors ===
trueSuccessor: v165 
falseSuccessor: v166 
=== Usages ===
=== Predecessor ===
i839 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v164 #trueSuccessor: v165 #falseSuccessor: v166  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOV [v15|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOV [v14|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v17|DWORD, y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4572004711305816127
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:53) [bci: 34]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v174 
=== Usages ===
=== Predecessor ===
v167 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v174  <|@  <|@
f <@~|@floating>@ <|@
tid v171 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:53) [bci: 38]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i839 
y: i12 
=== Succesors ===
=== Usages ===
v174 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i839 y: i12  <|@  <|@
f <@*|@fixed>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:53) [bci: 38]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v171 
=== Succesors ===
trueSuccessor: v172 
falseSuccessor: v173 
=== Usages ===
=== Predecessor ===
v165 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v171 #trueSuccessor: v172 #falseSuccessor: v173  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v17|DWORD, y: v17|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors 
    xhandlers
    flags 
    probability 4567501111678445631
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v172 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:54) [bci: 41]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v403 
=== Usages ===
=== Predecessor ===
v174 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v403  <|@  <|@
f <@*|@fixed>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a496 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v172 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a496 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4567501111678445631
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:57) [bci: 43]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: i179 
=== Usages ===
=== Predecessor ===
v174 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i179  <|@  <|@
f <@~|@floating>@ <|@
tid a508 <|@
result v18|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 22]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a836 
=== Succesors ===
=== Usages ===
i179 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a836  <|@  <|@
f <@~|@floating>@ <|@
tid a516 <|@
result v19|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 26]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a837 
=== Succesors ===
=== Usages ===
i179 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a837  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i179 <|@
result v20|DWORD <|@
d <@d|@=== Debug Properties ===
kind: char
nodeSourcePosition: at org.graalvm.compiler.replacements.nodes.ArrayEqualsNode.equals(Object, Object, int, JavaKind) [bci: -1]
at org.graalvm.compiler.replacements.nodes.ArrayEqualsNode.equals(ArrayEqualsNode.java:202) [bci: 6]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:60) [bci: 59]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
array1: a508 
array2: a516 
length: i839 
lastLocationAccess: - 
=== Succesors ===
next: v51 
=== Usages ===
v42 
=== Predecessor ===
v173 >@ <|@
instruction <@ArrayEquals|@org.graalvm.compiler.replacements.nodes.ArrayEqualsNode>@ array1: a508 array2: a516 length: i839 lastLocationAccess: - #next: v51  <|@  <|@
f <@~|@floating>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:572) [bci: 62]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i179 
y: i12 
=== Succesors ===
=== Usages ===
v51 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i179 y: i12  <|@  <|@
f <@*|@fixed>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:572) [bci: 62]
stamp: void
trueSuccessorProbability: 0.06693849813115868
=== Inputs ===
condition: v42 
=== Succesors ===
trueSuccessor: v49 
falseSuccessor: v50 
=== Usages ===
=== Predecessor ===
i179 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v42 #trueSuccessor: v49 #falseSuccessor: v50  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v14|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@44b93d59 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v15|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@44b93d59 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = ARRAY_EQUALS (~array1Value: v18|QWORD[.], ~array2Value: v19|QWORD[.], ~lengthValue: v17|DWORD) {temp1: v21|QWORD[*], temp2: v22|QWORD[*], temp3: v23|QWORD, temp4: v24|QWORD, temp5: -, tempXMM: -, vectorTemp1: v25|DOUBLE, vectorTemp2: v26|DOUBLE} arrayBaseOffset: 16 arrayIndexScale: 2 kind: char <|@ <|@
      nr   -1  <|@ instruction TEST (x: v20|DWORD, y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.06693849813115868 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B30" 
    xhandlers
    flags 
    probability 4549866981613678508
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:574) [bci: 68]
stamp: void
=== Inputs ===
=== Succesors ===
next: v322 
=== Usages ===
=== Predecessor ===
v51 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v322  <|@  <|@
f <@*|@fixed>@ <|@
tid v322 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v321 
=== Predecessor ===
v49 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B24 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors 
    xhandlers
    flags 
    probability 4567142676828642628
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:573) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
next: v372 
=== Usages ===
=== Predecessor ===
v51 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v372  <|@  <|@
f <@*|@fixed>@ <|@
tid v372 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a496 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v50 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a496 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B30" 
    xhandlers
    flags 
    probability 4572004711305816127
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:51) [bci: 32]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v371 
=== Usages ===
=== Predecessor ===
v167 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v371  <|@  <|@
f <@*|@fixed>@ <|@
tid v371 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v321 
=== Predecessor ===
v166 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B26 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B30" 
    xhandlers
    flags 
    probability 4576508310933186623
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v781 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v799 
=== Usages ===
=== Predecessor ===
v784 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v799  <|@  <|@
f <@*|@fixed>@ <|@
tid v799 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v321 
=== Predecessor ===
v781 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B27 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B29" "B35" 
    xhandlers
    flags 
    probability 4584127065623340624
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v525 
=== Usages ===
=== Predecessor ===
v141 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v525  <|@  <|@
f <@~|@floating>@ <|@
tid v861 <|@
result [v13|DWORD * 8 + 448] <|@
d <@d|@=== Debug Properties ===
displacement: 448
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v834 
=== Succesors ===
=== Usages ===
v525 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v834  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v525 <|@
result v27|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
nullCheck: false
stamp: Method*!
=== Inputs ===
stateBefore: - 
guard: - 
address: v861 
=== Succesors ===
next: j528 
=== Usages ===
v862 v529 
=== Predecessor ===
v140 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v861 #next: j528  <|@  <|@
f <@~|@floating>@ <|@
tid v862 <|@
result [v27|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
scale: Times1
stamp: void*
=== Inputs ===
base: v525 
index: - 
=== Succesors ===
=== Usages ===
j528 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v525 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j528 <|@
result v28|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v862 
=== Succesors ===
next: i40 
=== Usages ===
v529 
=== Predecessor ===
v525 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v862 #next: i40  <|@  <|@
tid v529 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@1eb5d7f9
stamp: void
targetMethod: HotSpotMethod<Object.equals(Object)>
=== Inputs ===
computedAddress: j528 
metaspaceMethod: v525 
arguments: a3 a504 
=== Succesors ===
=== Usages ===
i40 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j528 metaspaceMethod: v525 arguments: a3 a504  <|@  <|@
tid ?750 <|@
d <@d|@=== Debug Properties ===
bci: 59
code: ResolvedJavaMethodBytecode<HashMap.getNode(int, Object)>
duringCall: true
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 572
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - i2 a3 - a496 - - - 
=== Succesors ===
=== Usages ===
i40 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - i2 a3 - a496 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i40 <|@
result v29|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 59
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
polymorphic: true
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Indirect#Object.equals
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v529 
stateDuring: ?750 
=== Succesors ===
next: v444 
=== Usages ===
v441 
=== Predecessor ===
j528 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v529 stateDuring: ?750 #next: v444  <|@  <|@
f <@~|@floating>@ <|@
tid v441 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:572) [bci: 62]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i40 
y: i12 
=== Succesors ===
=== Usages ===
v444 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i40 y: i12  <|@  <|@
f <@*|@fixed>@ <|@
tid v444 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:572) [bci: 62]
stamp: void
trueSuccessorProbability: 0.06693849813115868
=== Inputs ===
condition: v441 
=== Succesors ===
trueSuccessor: v442 
falseSuccessor: v443 
=== Usages ===
=== Predecessor ===
i40 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v441 #trueSuccessor: v442 #falseSuccessor: v443  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOV [v13|DWORD * 8 + 448] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOV [v27|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v27|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v28|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
locals: - v1|DWORD v2|QWORD[.] - v12|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:59] <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v29|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.06693849813115868 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" 
    xhandlers
    flags 
    probability 4566682091735523695
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v442 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:574) [bci: 68]
stamp: void
=== Inputs ===
=== Succesors ===
next: v446 
=== Usages ===
=== Predecessor ===
v444 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v446  <|@  <|@
f <@*|@fixed>@ <|@
tid v446 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v321 
=== Predecessor ===
v442 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B24" "B14" "B26" "B29" "B27" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4580879966741248736
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v321 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v322 v324 v371 v446 v799 
=== Succesors ===
next: a840 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v322 v324 v371 v446 v799 #next: a840  <|@  <|@
f <@~|@floating>@ <|@
tid v863 <|@
result [v8|DWORD[.] * 8 + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a830 
=== Succesors ===
=== Usages ===
a840 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a830  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a840 <|@
result v30|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.next
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:574) [bci: 70]
nullCheck: false
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v863 
=== Succesors ===
next: v60 
=== Usages ===
a753 v575 
=== Predecessor ===
v321 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v863 #next: v60  <|@  <|@
f <@~|@floating>@ <|@
tid v575 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:574) [bci: 76]
stamp: void
=== Inputs ===
value: a840 
=== Succesors ===
=== Usages ===
v60 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a840  <|@  <|@
f <@*|@fixed>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:574) [bci: 76]
stamp: void
trueSuccessorProbability: 0.1533361397600505
=== Inputs ===
condition: v575 
=== Succesors ===
trueSuccessor: v59 
falseSuccessor: v58 
=== Usages ===
=== Predecessor ===
a840 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v575 #trueSuccessor: v59 #falseSuccessor: v58  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v30|DWORD[.] = MOV [v8|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v30|DWORD[.], y: v30|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.1533361397600505 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors 
    xhandlers
    flags 
    probability 4568553107392593848
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:584) [bci: 146]
stamp: void
=== Inputs ===
=== Succesors ===
next: v272 
=== Usages ===
=== Predecessor ===
v60 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v272  <|@  <|@
f <@*|@fixed>@ <|@
tid v272 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a6 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v59 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a6 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4579997441230132689
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:575) [bci: 79]
stamp: void
=== Inputs ===
=== Succesors ===
next: v64 
=== Usages ===
=== Predecessor ===
v60 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v64  <|@  <|@
f <@~|@floating>@ <|@
tid v823 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.HashMap.getNode(HashMap.java:575) [bci: 81]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v831 
y: v822 
=== Succesors ===
=== Usages ===
v64 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v831 y: v822  <|@  <|@
f <@*|@fixed>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:575) [bci: 81]
stamp: void
trueSuccessorProbability: 0.0011187072715972413
=== Inputs ===
condition: v823 
=== Succesors ===
trueSuccessor: v62 
falseSuccessor: v63 
=== Usages ===
=== Predecessor ===
v58 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v823 #trueSuccessor: v62 #falseSuccessor: v63  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0011187072715972413 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B40" 
    xhandlers
    flags 
    probability 4535686771439424545
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:576) [bci: 87]
stamp: void
=== Inputs ===
=== Succesors ===
next: v448 
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v448  <|@  <|@
f <@*|@fixed>@ <|@
tid v448 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v447 
=== Predecessor ===
v62 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B42" 
    xhandlers
    flags 
    probability 4579987547585006311
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
stamp: void
=== Inputs ===
=== Succesors ===
next: v451 
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v451  <|@  <|@
f <@*|@fixed>@ <|@
tid v451 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v450 
=== Predecessor ===
v63 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v30|DWORD[.]] destination: B34 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors 
    xhandlers
    flags 
    probability 4583560106972189218
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v443 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:573) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
next: v445 
=== Usages ===
=== Predecessor ===
v444 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v445  <|@  <|@
f <@*|@fixed>@ <|@
tid v445 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a496 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v443 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a496 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4595162928358490059
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:574) [bci: 68]
stamp: void
=== Inputs ===
=== Succesors ===
next: a841 
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a841  <|@  <|@
f <@~|@floating>@ <|@
tid v880 <|@
result [v8|DWORD[.] * 8 + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a830 
=== Succesors ===
=== Usages ===
a841 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a830  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a841 <|@
result v31|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.next
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:574) [bci: 70]
nullCheck: false
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v880 
=== Succesors ===
next: v271 
=== Usages ===
a753 v576 
=== Predecessor ===
v30 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v880 #next: v271  <|@  <|@
f <@~|@floating>@ <|@
tid v576 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:574) [bci: 76]
stamp: void
=== Inputs ===
value: a841 
=== Succesors ===
=== Usages ===
v271 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a841  <|@  <|@
f <@*|@fixed>@ <|@
tid v271 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:574) [bci: 76]
stamp: void
trueSuccessorProbability: 0.1533361397600505
=== Inputs ===
condition: v576 
=== Succesors ===
trueSuccessor: v270 
falseSuccessor: v269 
=== Usages ===
=== Predecessor ===
a841 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v576 #trueSuccessor: v270 #falseSuccessor: v269  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD[.] = MOV [v8|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v31|DWORD[.], y: v31|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.1533361397600505 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 4583011109899276306
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v270 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:584) [bci: 146]
stamp: void
=== Inputs ===
=== Succesors ===
next: v273 
=== Usages ===
=== Predecessor ===
v271 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v273  <|@  <|@
f <@*|@fixed>@ <|@
tid v273 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a6 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v270 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a6 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B41" 
    xhandlers
    flags 
    probability 4594243692297133512
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v269 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:575) [bci: 79]
stamp: void
=== Inputs ===
=== Succesors ===
next: v459 
=== Usages ===
=== Predecessor ===
v271 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v459  <|@  <|@
f <@~|@floating>@ <|@
tid v879 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.HashMap.getNode(HashMap.java:575) [bci: 81]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v831 
y: v822 
=== Succesors ===
=== Usages ===
v459 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v831 y: v822  <|@  <|@
f <@*|@fixed>@ <|@
tid v459 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:575) [bci: 81]
stamp: void
trueSuccessorProbability: 0.0011187072715972413
=== Inputs ===
condition: v879 
=== Succesors ===
trueSuccessor: v457 
falseSuccessor: v458 
=== Usages ===
=== Predecessor ===
v269 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v879 #trueSuccessor: v457 #falseSuccessor: v458  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0011187072715972413 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 4549946491787222878
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v457 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:576) [bci: 87]
stamp: void
=== Inputs ===
=== Succesors ===
next: v449 
=== Usages ===
=== Predecessor ===
v459 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v449  <|@  <|@
f <@*|@fixed>@ <|@
tid v449 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v447 
=== Predecessor ===
v457 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B33" "B39" 
    successors 
    xhandlers
    flags 
    probability 4550579685075311074
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v447 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v448 v449 
=== Succesors ===
next: a69 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v448 v449 #next: a69  <|@  <|@
f <@~|@floating>@ <|@
tid a881 <|@
result v32|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 24]
op: Uncompress
stamp: a Ljava/util/HashMap$Node;
=== Inputs ===
value: a830 
=== Succesors ===
=== Usages ===
v537 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a830  <|@  <|@
tid v537 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:576) [bci: 94]
returnStamp: a# Ljava/util/HashMap$TreeNode;
signature: [Ljdk.vm.ci.meta.JavaType;@5f505f3
stamp: void
targetMethod: HotSpotMethod<HashMap$TreeNode.getTreeNode(int, Object)>
=== Inputs ===
arguments: a881 i2 a3 
=== Succesors ===
=== Usages ===
a69 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a881 i2 a3  <|@  <|@
tid ?752 <|@
d <@d|@=== Debug Properties ===
bci: 94
code: ResolvedJavaMethodBytecode<HashMap.getNode(int, Object)>
duringCall: true
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 576
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - - - - - 
=== Succesors ===
=== Usages ===
a69 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a69 <|@
result v33|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 94
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:576) [bci: 94]
polymorphic: false
stamp: a# Ljava/util/HashMap$TreeNode;
targetMethod: Direct#HashMap$TreeNode.getTreeNode
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v537 
stateDuring: ?752 
=== Succesors ===
next: v71 
=== Usages ===
v71 
=== Predecessor ===
v447 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v537 stateDuring: ?752 #next: v71  <|@  <|@
f <@*|@fixed>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:576) [bci: 97]
stamp: void
=== Inputs ===
result: a69 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a69 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a69 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@44b93d59 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.getNode(HashMap.java:576) [bci: 94]
locals: - - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$TreeNode.getTreeNode(int, Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:94] <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v33|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B42" 
    xhandlers
    flags 
    probability 4594238014105951488
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v458 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
stamp: void
=== Inputs ===
=== Succesors ===
next: v453 
=== Usages ===
=== Predecessor ===
v459 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v453  <|@  <|@
f <@*|@fixed>@ <|@
tid v453 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v450 
=== Predecessor ===
v458 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v31|DWORD[.]] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B34" "B41" 
    successors "B43" 
    xhandlers
    flags 
    probability 4594790134468698542
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a753 <|@
result v34|DWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: n Ljava/util/HashMap$Node;
valueDescription: n -
=== Inputs ===
merge: v450 
values: a840 a841 
=== Succesors ===
=== Usages ===
a754 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v450 values: a840 a841  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v450 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v451 v453 
=== Succesors ===
next: v72 
=== Usages ===
a753 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v451 v453 #next: v72  <|@  <|@
f <@~|@floating>@ <|@
tid a754 <|@
result v35|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:574) [bci: 70]
op: Uncompress
stamp: a Ljava/util/HashMap$Node;
=== Inputs ===
value: a753 
=== Succesors ===
=== Usages ===
a74 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a753  <|@  <|@
f <@*|@fixed>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v73 
=== Predecessor ===
v450 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v34|DWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@44b93d59 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v35|QWORD[.]] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B65" "B71" 
    successors "B44" "B69" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4595670214891295398
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a74 <|@
result v36|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a Ljava/util/HashMap$Node;
valueDescription: a -
=== Inputs ===
merge: v73 
values: a754 a571 a573 
=== Succesors ===
=== Usages ===
?75 v871 v865 v126 ?751 v127 ?341 v864 v878 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v73 values: a754 a571 a573  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 1.1565390518063794
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 2
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v72 
=== Succesors ===
next: i842 
=== Usages ===
a74 v84 v100 v110 v112 v274 v279 v647 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v72 #next: i842  <|@  <|@
tid ?75 <|@
d <@d|@=== Debug Properties ===
bci: 98
code: ResolvedJavaMethodBytecode<HashMap.getNode(int, Object)>
duringCall: false
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 578
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - i2 a3 - - a74 - - 
=== Succesors ===
=== Usages ===
v612 v772 i842 v844 v877 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - i2 a3 - - a74 - -  <|@  <|@
f <@~|@floating>@ <|@
tid v864 <|@
result [v36|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a74 
index: - 
=== Succesors ===
=== Usages ===
i842 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a74 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i842 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.hash
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 100]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?75 
guard: - 
address: v864 
=== Succesors ===
next: v80 
=== Usages ===
v77 
=== Predecessor ===
v73 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?75 guard: - address: v864 #next: v80  <|@  <|@
f <@~|@floating>@ <|@
tid v77 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 104]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i842 
=== Succesors ===
=== Usages ===
v80 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2 y: i842  <|@  <|@
f <@*|@fixed>@ <|@
tid v80 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 104]
stamp: void
trueSuccessorProbability: 0.8091668758741886
=== Inputs ===
condition: v77 
=== Succesors ===
trueSuccessor: v78 
falseSuccessor: v79 
=== Usages ===
=== Predecessor ===
i842 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v77 #trueSuccessor: v78 #falseSuccessor: v79  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v36|QWORD[.]] = LABEL numbPhis: 1 align: true label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
locals: - v1|DWORD v2|QWORD[.] - - v36|QWORD[.] - - 
>@ <|@ instruction CMP (x: v1|DWORD, y: [v36|QWORD[.] + 12]) size: DWORD state [bci:98] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8091668758741886 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594429380781958389
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 107]
stamp: void
=== Inputs ===
=== Succesors ===
next: a843 
=== Usages ===
=== Predecessor ===
v80 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a843  <|@  <|@
f <@~|@floating>@ <|@
tid v865 <|@
result [v36|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a74 
index: - 
=== Succesors ===
=== Usages ===
a843 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a74 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a843 <|@
result v37|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.key
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 109]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v865 
=== Succesors ===
next: v88 
=== Usages ===
a545 v746 v867 v874 
=== Predecessor ===
v78 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v865 #next: v88  <|@  <|@
f <@~|@floating>@ <|@
tid a545 <|@
result v38|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 109]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a843 
=== Succesors ===
=== Usages ===
v82 v568 v207 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a843  <|@  <|@
f <@~|@floating>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 116]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a3 
y: a545 
=== Succesors ===
=== Usages ===
v88 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a3 y: a545  <|@  <|@
f <@*|@fixed>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 116]
stamp: void
trueSuccessorProbability: 0.7707650031025618
=== Inputs ===
condition: v82 
=== Succesors ===
trueSuccessor: v84 
falseSuccessor: v87 
=== Usages ===
=== Predecessor ===
a843 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v82 #trueSuccessor: v84 #falseSuccessor: v87  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|DWORD[.] = MOV [v36|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = UNCOMPRESSPOINTER (input: v37|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@44b93d59 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v38|QWORD[.], y: v2|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7707650031025618 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 4592774965734155563
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:580) [bci: 132]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v73 
=== Succesors ===
next: v126 
=== Usages ===
=== Predecessor ===
v88 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v73 #next: v126  <|@  <|@
f <@*|@fixed>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:580) [bci: 132]
stamp: void
=== Inputs ===
result: a74 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v84 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a74 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v36|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B60" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584985172859505021
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
next: v844 
=== Usages ===
=== Predecessor ===
v88 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v844  <|@  <|@
f <@~|@floating>@ <|@
tid v883 <|@
result [v2|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
v844 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v844 <|@
result v39|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?75 
guard: - 
address: v883 
=== Succesors ===
next: v205 
=== Usages ===
v869 v820 
=== Predecessor ===
v87 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?75 guard: - address: v883 #next: v205  <|@  <|@
f <@~|@floating>@ <|@
tid v820 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v844 
y: v817 
=== Succesors ===
=== Usages ===
v205 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v844 y: v817  <|@  <|@
f <@*|@fixed>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=equals target_method_class=Ljava/lang/String; position=at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
trueSuccessorProbability: 0.31013147718484146
=== Inputs ===
condition: v820 
=== Succesors ===
trueSuccessor: v199 
falseSuccessor: v204 
=== Usages ===
=== Predecessor ===
v844 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v820 #trueSuccessor: v199 #falseSuccessor: v204  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
locals: - v1|DWORD v2|QWORD[.] - - v36|QWORD[.] - - 
>@ <|@ instruction v39|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD state [bci:98] <|@ <|@
      nr   -1  <|@ instruction CMP v39|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.31013147718484146 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B49" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577138355211240435
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=equals target_method_class=Ljava/lang/String; position=at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
=== Inputs ===
=== Succesors ===
next: v210 
=== Usages ===
=== Predecessor ===
v205 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v210  <|@  <|@
f <@~|@floating>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:43) [bci: 2]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a3 
y: a545 
=== Succesors ===
=== Usages ===
v210 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a3 y: a545  <|@  <|@
f <@*|@fixed>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:43) [bci: 2]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v207 
=== Succesors ===
trueSuccessor: v208 
falseSuccessor: v209 
=== Usages ===
=== Predecessor ===
v199 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v207 #trueSuccessor: v208 #falseSuccessor: v209  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v38|QWORD[.], y: v2|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B67" 
    xhandlers
    flags 
    probability 4572634755583869939
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v208 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:44) [bci: 5]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
=== Inputs ===
=== Succesors ===
next: v312 
=== Usages ===
=== Predecessor ===
v210 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v312  <|@  <|@
f <@*|@fixed>@ <|@
tid v312 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v309 
=== Predecessor ===
v208 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B48 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572634755583869939
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 7]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
=== Inputs ===
=== Succesors ===
next: v722 
=== Usages ===
=== Predecessor ===
v210 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v722  <|@  <|@
f <@~|@floating>@ <|@
tid v746 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
=== Inputs ===
value: a843 
=== Succesors ===
=== Usages ===
v722 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a843  <|@  <|@
f <@*|@fixed>@ <|@
tid v722 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 15]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v746 
=== Succesors ===
trueSuccessor: v721 
falseSuccessor: v720 
=== Usages ===
=== Predecessor ===
v209 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v746 #trueSuccessor: v721 #falseSuccessor: v720  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v37|DWORD[.], y: v37|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4557927010015721051
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v721 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 18]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
=== Inputs ===
=== Succesors ===
next: v342 
=== Usages ===
=== Predecessor ===
v722 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v342  <|@  <|@
f <@*|@fixed>@ <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v339 
=== Predecessor ===
v721 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B50 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572036282240851240
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v720 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:141) [bci: 28]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
=== Inputs ===
=== Succesors ===
next: v845 
=== Usages ===
=== Predecessor ===
v722 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v845  <|@  <|@
f <@~|@floating>@ <|@
tid v874 <|@
result [v37|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a843 
=== Succesors ===
=== Usages ===
v845 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a843  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v845 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v874 
=== Succesors ===
next: v794 
=== Usages ===
v821 
=== Predecessor ===
v720 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v874 #next: v794  <|@  <|@
f <@~|@floating>@ <|@
tid v821 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v845 
y: v817 
=== Succesors ===
=== Usages ===
v794 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v845 y: v817  <|@  <|@
f <@*|@fixed>@ <|@
tid v794 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v821 
=== Succesors ===
trueSuccessor: v792 
falseSuccessor: v791 
=== Usages ===
=== Predecessor ===
v845 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v821 #trueSuccessor: v792 #falseSuccessor: v791  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v37|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4567532682613480744
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v792 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
=== Inputs ===
=== Succesors ===
next: a846 
=== Usages ===
=== Predecessor ===
v794 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a846  <|@  <|@
f <@~|@floating>@ <|@
tid v882 <|@
result [v2|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
a846 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a846 <|@
result v40|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 22]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v882 
=== Succesors ===
next: v877 
=== Usages ===
a549 v877 v866 
=== Predecessor ===
v792 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v882 #next: v877  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v877 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?75 
object: a846 
=== Succesors ===
next: a847 
=== Usages ===
=== Predecessor ===
a846 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?75 object: a846 #next: a847  <|@  <|@
f <@~|@floating>@ <|@
tid v867 <|@
result [v37|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a843 
=== Succesors ===
=== Usages ===
a847 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a843  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a847 <|@
result v41|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 26]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v867 
=== Succesors ===
next: v648 
=== Usages ===
a557 v558 v868 
=== Predecessor ===
v877 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v867 #next: v648  <|@  <|@
f <@~|@floating>@ <|@
tid v558 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 26]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
=== Inputs ===
value: a847 
=== Succesors ===
=== Usages ===
v648 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a847  <|@  <|@
f <@*|@fixed>@ <|@
tid v648 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 26]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v558 
=== Succesors ===
trueSuccessor: v647 
falseSuccessor: v644 
=== Usages ===
=== Predecessor ===
a847 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v558 #trueSuccessor: v647 #falseSuccessor: v644  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|DWORD[.] = MOV [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
locals: - v1|DWORD v2|QWORD[.] - - v36|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v40|DWORD[.] * 8] state [bci:98] <|@ <|@
      nr   -1  <|@ instruction v41|DWORD[.] = MOV [v37|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v41|DWORD[.], y: v41|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v647 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 26]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v73 
=== Succesors ===
next: v772 
=== Usages ===
=== Predecessor ===
v648 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v73 #next: v772  <|@  <|@
f <@~|@floating>@ <|@
tid i778 <|@
result int[-143115|0xfffffffffffdd0f5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -143115
stableDimension: 0
stamp: i32 [-143115] ⇊00000000fffdd0f5 ⇈00000000fffdd0f5
stampKind: i32
value: int[-143115|0xfffffffffffdd0f5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v772 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v772 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?75 
actionAndReason: i778 
speculation: a6 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v647 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?75 actionAndReason: i778 speculation: a6  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -143115 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
locals: - v1|DWORD v2|QWORD[.] - - v36|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:98] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4567532682613480744
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v644 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 26]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
=== Inputs ===
=== Succesors ===
next: i848 
=== Usages ===
=== Predecessor ===
v648 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i848  <|@  <|@
f <@~|@floating>@ <|@
tid v868 <|@
result [v41|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a847 
=== Succesors ===
=== Usages ===
i848 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a847  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i848 <|@
result v42|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 26]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v868 
=== Succesors ===
next: i849 
=== Usages ===
v227 
=== Predecessor ===
v644 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v868 #next: i849  <|@  <|@
f <@~|@floating>@ <|@
tid v866 <|@
result [v40|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a846 
=== Succesors ===
=== Usages ===
i849 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a846  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i849 <|@
result v43|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 22]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v866 
=== Succesors ===
next: v230 
=== Usages ===
v227 v234 i242 
=== Predecessor ===
i848 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v866 #next: v230  <|@  <|@
f <@~|@floating>@ <|@
tid v227 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 29]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i848 
y: i849 
=== Succesors ===
=== Usages ===
v230 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i848 y: i849  <|@  <|@
f <@*|@fixed>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 29]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v227 
=== Succesors ===
trueSuccessor: v228 
falseSuccessor: v229 
=== Usages ===
=== Predecessor ===
i849 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v227 #trueSuccessor: v228 #falseSuccessor: v229  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOV [v41|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = MOV [v40|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v43|DWORD, y: v42|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4563029082986110248
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:53) [bci: 34]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
=== Inputs ===
=== Succesors ===
next: v237 
=== Usages ===
=== Predecessor ===
v230 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v237  <|@  <|@
f <@~|@floating>@ <|@
tid v234 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:53) [bci: 38]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i849 
y: i12 
=== Succesors ===
=== Usages ===
v237 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i849 y: i12  <|@  <|@
f <@*|@fixed>@ <|@
tid v237 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:53) [bci: 38]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v234 
=== Succesors ===
trueSuccessor: v235 
falseSuccessor: v236 
=== Usages ===
=== Predecessor ===
v228 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v234 #trueSuccessor: v235 #falseSuccessor: v236  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v43|DWORD, y: v43|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B67" 
    xhandlers
    flags 
    probability 4558525483358739752
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v235 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:54) [bci: 41]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
=== Inputs ===
=== Succesors ===
next: v422 
=== Usages ===
=== Predecessor ===
v237 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v422  <|@  <|@
f <@*|@fixed>@ <|@
tid v422 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v309 
=== Predecessor ===
v235 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B56 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4558525483358739752
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v236 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:57) [bci: 43]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
=== Inputs ===
=== Succesors ===
next: i242 
=== Usages ===
=== Predecessor ===
v237 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i242  <|@  <|@
f <@~|@floating>@ <|@
tid a549 <|@
result v44|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 22]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a846 
=== Succesors ===
=== Usages ===
i242 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a846  <|@  <|@
f <@~|@floating>@ <|@
tid a557 <|@
result v45|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 26]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a847 
=== Succesors ===
=== Usages ===
i242 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a847  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i242 <|@
result v46|DWORD <|@
d <@d|@=== Debug Properties ===
kind: char
nodeSourcePosition: at org.graalvm.compiler.replacements.nodes.ArrayEqualsNode.equals(Object, Object, int, JavaKind) [bci: -1]
at org.graalvm.compiler.replacements.nodes.ArrayEqualsNode.equals(ArrayEqualsNode.java:202) [bci: 6]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:60) [bci: 59]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
array1: a549 
array2: a557 
length: i849 
lastLocationAccess: - 
=== Succesors ===
next: v251 
=== Usages ===
i195 
=== Predecessor ===
v236 >@ <|@
instruction <@ArrayEquals|@org.graalvm.compiler.replacements.nodes.ArrayEqualsNode>@ array1: a549 array2: a557 length: i849 lastLocationAccess: - #next: v251  <|@  <|@
f <@*|@fixed>@ <|@
tid v251 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v192 
=== Predecessor ===
i242 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = UNCOMPRESSPOINTER (input: v40|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@44b93d59 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.] = UNCOMPRESSPOINTER (input: v41|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@44b93d59 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = ARRAY_EQUALS (~array1Value: v44|QWORD[.], ~array2Value: v45|QWORD[.], ~lengthValue: v43|DWORD) {temp1: v47|QWORD[*], temp2: v48|QWORD[*], temp3: v49|QWORD, temp4: v50|QWORD, temp5: -, tempXMM: -, vectorTemp1: v51|DOUBLE, vectorTemp2: v52|DOUBLE} arrayBaseOffset: 16 arrayIndexScale: 2 kind: char <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v46|DWORD] destination: B57 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4563029082986110248
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v229 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:51) [bci: 32]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
=== Inputs ===
=== Succesors ===
next: v390 
=== Usages ===
=== Predecessor ===
v230 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v390  <|@  <|@
f <@*|@fixed>@ <|@
tid v390 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v339 
=== Predecessor ===
v229 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B58 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4567532682613480744
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v791 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
=== Inputs ===
=== Succesors ===
next: v800 
=== Usages ===
=== Predecessor ===
v794 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v800  <|@  <|@
f <@*|@fixed>@ <|@
tid v800 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v339 
=== Predecessor ===
v791 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B59 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582313558340751616
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v204 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
=== Inputs ===
=== Succesors ===
next: v565 
=== Usages ===
=== Predecessor ===
v205 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v565  <|@  <|@
f <@~|@floating>@ <|@
tid v869 <|@
result [v39|DWORD * 8 + 448] <|@
d <@d|@=== Debug Properties ===
displacement: 448
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v844 
=== Succesors ===
=== Usages ===
v565 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v844  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v565 <|@
result v53|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
nullCheck: false
stamp: Method*!
=== Inputs ===
stateBefore: - 
guard: - 
address: v869 
=== Succesors ===
next: j567 
=== Usages ===
v870 v568 
=== Predecessor ===
v204 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v869 #next: j567  <|@  <|@
f <@~|@floating>@ <|@
tid v870 <|@
result [v53|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
scale: Times1
stamp: void*
=== Inputs ===
base: v565 
index: - 
=== Succesors ===
=== Usages ===
j567 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v565 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j567 <|@
result v54|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v870 
=== Succesors ===
next: i91 
=== Usages ===
v568 
=== Predecessor ===
v565 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v870 #next: i91  <|@  <|@
tid v568 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@7f026738
stamp: void
targetMethod: HotSpotMethod<Object.equals(Object)>
=== Inputs ===
computedAddress: j567 
metaspaceMethod: v565 
arguments: a3 a545 
=== Succesors ===
=== Usages ===
i91 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j567 metaspaceMethod: v565 arguments: a3 a545  <|@  <|@
tid ?751 <|@
d <@d|@=== Debug Properties ===
bci: 126
code: ResolvedJavaMethodBytecode<HashMap.getNode(int, Object)>
duringCall: true
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 579
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - i2 a3 - - a74 - - 
=== Succesors ===
=== Usages ===
i91 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - i2 a3 - - a74 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i91 <|@
result v55|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 126
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
polymorphic: true
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Indirect#Object.equals
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v568 
stateDuring: ?751 
=== Succesors ===
next: v194 
=== Usages ===
i195 
=== Predecessor ===
j567 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v568 stateDuring: ?751 #next: v194  <|@  <|@
f <@*|@fixed>@ <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v192 
=== Predecessor ===
i91 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = MOV [v39|DWORD * 8 + 448] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = MOV [v53|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v53|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v54|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
locals: - v1|DWORD v2|QWORD[.] - - v36|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:126] <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v55|DWORD] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B57" 
    successors "B62" "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582481878968475625
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i195 <|@
result v56|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v192 
values: i91 i242 
=== Succesors ===
=== Usages ===
v93 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v192 values: i91 i242  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v194 v251 
=== Succesors ===
next: v105 
=== Usages ===
i195 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v194 v251 #next: v105  <|@  <|@
f <@~|@floating>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:579) [bci: 129]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i195 
y: i12 
=== Succesors ===
=== Usages ===
v105 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i195 y: i12  <|@  <|@
f <@*|@fixed>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:579) [bci: 129]
stamp: void
trueSuccessorProbability: 0.03480278422273782
=== Inputs ===
condition: v93 
=== Succesors ===
trueSuccessor: v104 
falseSuccessor: v308 
=== Usages ===
=== Predecessor ===
v192 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v93 #trueSuccessor: v104 #falseSuccessor: v308  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v56|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v56|DWORD, y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.03480278422273782 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4560739769974181225
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:581) [bci: 135]
stamp: void
=== Inputs ===
=== Succesors ===
next: v340 
=== Usages ===
=== Predecessor ===
v105 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v340  <|@  <|@
f <@*|@fixed>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v339 
=== Predecessor ===
v104 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" "B50" "B58" "B59" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572238258899904086
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v340 v342 v390 v800 
=== Succesors ===
next: a850 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v340 v342 v390 v800 #next: a850  <|@  <|@
f <@~|@floating>@ <|@
tid v871 <|@
result [v36|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a74 
index: - 
=== Succesors ===
=== Usages ===
a850 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a74 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a850 <|@
result v57|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.next
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:581) [bci: 137]
nullCheck: false
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v871 
=== Succesors ===
next: v114 
=== Usages ===
a571 v577 
=== Predecessor ===
v339 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v871 #next: v114  <|@  <|@
f <@~|@floating>@ <|@
tid v577 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:581) [bci: 143]
stamp: void
=== Inputs ===
value: a850 
=== Succesors ===
=== Usages ===
v114 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a850  <|@  <|@
f <@*|@fixed>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:581) [bci: 143]
stamp: void
trueSuccessorProbability: 0.3139429194691874
=== Inputs ===
condition: v577 
=== Succesors ===
trueSuccessor: v110 
falseSuccessor: v113 
=== Usages ===
=== Predecessor ===
a850 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v577 #trueSuccessor: v110 #falseSuccessor: v113  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v57|DWORD[.] = MOV [v36|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v57|DWORD[.], y: v57|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.3139429194691874 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors 
    xhandlers
    flags 
    probability 4564660372334116583
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:584) [bci: 146]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v73 
=== Succesors ===
next: v123 
=== Usages ===
=== Predecessor ===
v114 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v73 #next: v123  <|@  <|@
f <@*|@fixed>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:584) [bci: 146]
stamp: void
=== Inputs ===
result: a6 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v110 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a6 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B43" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4569814121301167416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
stamp: void
=== Inputs ===
=== Succesors ===
next: v611 
=== Usages ===
=== Predecessor ===
v114 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v611  <|@  <|@
tid ?341 <|@
d <@d|@=== Debug Properties ===
bci: 129
code: ResolvedJavaMethodBytecode<HashMap.getNode(int, Object)>
duringCall: false
localsSize: 8
locksSize: 0
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
rethrowException: false
sourceFile: HashMap.java
sourceLine: 579
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - i2 a3 - - a74 - - i12 
=== Succesors ===
=== Usages ===
v611 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - i2 a3 - - a74 - - i12  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v611 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?341 
=== Succesors ===
next: v112 
=== Usages ===
=== Predecessor ===
v113 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?341 #next: v112  <|@  <|@
f <@~|@floating>@ <|@
tid a571 <|@
result v58|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:581) [bci: 137]
op: Uncompress
stamp: a Ljava/util/HashMap$Node;
=== Inputs ===
value: a850 
=== Succesors ===
=== Usages ===
a74 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a850  <|@  <|@
f <@*|@fixed>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
stamp: void
=== Inputs ===
loopBegin: v73 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v611 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v73  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.getNode(HashMap.java:579) [bci: 129]
stack: int[0|0x0] 
locals: - v1|DWORD v2|QWORD[.] - - v36|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:129] <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = UNCOMPRESSPOINTER (input: v57|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@44b93d59 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v58|QWORD[.]] destination: B65 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B67" 
    xhandlers
    flags 
    probability 4582244361884019069
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v308 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:580) [bci: 132]
stamp: void
=== Inputs ===
=== Succesors ===
next: v310 
=== Usages ===
=== Predecessor ===
v105 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v310  <|@  <|@
f <@*|@fixed>@ <|@
tid v310 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v309 
=== Predecessor ===
v308 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B48" "B56" 
    successors "B68" 
    xhandlers
    flags 
    probability 4583908865869289827
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v309 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v310 v312 v422 
=== Succesors ===
next: v100 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v310 v312 v422 #next: v100  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors 
    xhandlers
    flags 
    probability 4583908865869289827
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:580) [bci: 132]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v73 
=== Succesors ===
next: v127 
=== Usages ===
=== Predecessor ===
v309 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v73 #next: v127  <|@  <|@
f <@*|@fixed>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:580) [bci: 132]
stamp: void
=== Inputs ===
result: a74 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v100 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a74 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v36|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585124157473142468
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:581) [bci: 135]
stamp: void
=== Inputs ===
=== Succesors ===
next: a851 
=== Usages ===
=== Predecessor ===
v80 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a851  <|@  <|@
f <@~|@floating>@ <|@
tid v878 <|@
result [v36|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a74 
index: - 
=== Succesors ===
=== Usages ===
a851 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a74 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a851 <|@
result v59|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.next
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:581) [bci: 137]
nullCheck: false
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v878 
=== Succesors ===
next: v281 
=== Usages ===
a573 v578 
=== Predecessor ===
v79 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v878 #next: v281  <|@  <|@
f <@~|@floating>@ <|@
tid v578 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:581) [bci: 143]
stamp: void
=== Inputs ===
value: a851 
=== Succesors ===
=== Usages ===
v281 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a851  <|@  <|@
f <@*|@fixed>@ <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:581) [bci: 143]
stamp: void
trueSuccessorProbability: 0.3139429194691874
=== Inputs ===
condition: v578 
=== Succesors ===
trueSuccessor: v279 
falseSuccessor: v280 
=== Usages ===
=== Predecessor ===
a851 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v578 #trueSuccessor: v279 #falseSuccessor: v280  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v59|DWORD[.] = MOV [v36|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v59|DWORD[.], y: v59|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.3139429194691874 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors 
    xhandlers
    flags 
    probability 4577386439106848792
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v279 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:584) [bci: 146]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v73 
=== Succesors ===
next: v282 
=== Usages ===
=== Predecessor ===
v281 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v73 #next: v282  <|@  <|@
f <@*|@fixed>@ <|@
tid v282 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:584) [bci: 146]
stamp: void
=== Inputs ===
result: a6 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v279 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a6 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B43" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4582467485620222332
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v280 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
stamp: void
=== Inputs ===
=== Succesors ===
next: v612 
=== Usages ===
=== Predecessor ===
v281 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v612  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v612 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?75 
=== Succesors ===
next: v274 
=== Usages ===
=== Predecessor ===
v280 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?75 #next: v274  <|@  <|@
f <@~|@floating>@ <|@
tid a573 <|@
result v60|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:581) [bci: 137]
op: Uncompress
stamp: a Ljava/util/HashMap$Node;
=== Inputs ===
value: a851 
=== Succesors ===
=== Usages ===
a74 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a851  <|@  <|@
f <@*|@fixed>@ <|@
tid v274 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 1
stamp: void
=== Inputs ===
loopBegin: v73 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v612 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v73  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
locals: - v1|DWORD v2|QWORD[.] - - v36|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:98] <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v59|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@44b93d59 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v60|QWORD[.]] destination: B71 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v615 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v756 
=== Usages ===
=== Predecessor ===
v616 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v756  <|@  <|@
f <@~|@floating>@ <|@
tid i757 <|@
result int[-123931|0xfffffffffffe1be5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -123931
stableDimension: 0
stamp: i32 [-123931] ⇊00000000fffe1be5 ⇈00000000fffe1be5
stampKind: i32
value: int[-123931|0xfffffffffffe1be5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i758 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v756 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v755 
=== Predecessor ===
v615 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-123931|0xfffffffffffe1be5]] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" "B9" "B17" "B19" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i758 <|@
result v61|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-132619 - -123931] ⇊00000000fffc00e5 ⇈00000000fffffffd
valueDescription: i32
=== Inputs ===
merge: v755 
values: i757 i762 i764 i766 
=== Succesors ===
=== Usages ===
v760 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v755 values: i757 i762 i764 i766  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v755 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v756 v761 v763 v765 
=== Succesors ===
next: v760 
=== Usages ===
i758 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v756 v761 v763 v765 #next: v760  <|@  <|@
tid ?4 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<HashMap.getNode(int, Object)>
duringCall: false
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 569
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 a3 - - - - - 
=== Succesors ===
=== Usages ===
v760 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 a3 - - - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v760 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?4 
actionAndReason: i758 
speculation: a6 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v755 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?4 actionAndReason: i758 speculation: a6  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v61|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v61|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.getNode(HashMap.java:569) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@28eeb4db slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = MOV [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|DWORD[.], y: v3|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.02293902936868141 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B72" 
    xhandlers
    flags 
    probability 4606975802391783339
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV [v3|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = DEC v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = AND (x: v1|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v4|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606975802391783339
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@44b93d59 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[.] = MOV [v7|QWORD[.] + v6|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v8|DWORD[.], y: v8|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0762231274461013 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B36" 
    xhandlers
    flags 
    probability 4606304994443874069
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOV [v8|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v1|DWORD, y: [v8|DWORD[.] * 8 + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8156496292108676 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4604806267426885410
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[.] = MOV [v8|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@44b93d59 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@44b93d59 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v11|QWORD[.], y: v2|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9040067186327908 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4604169731381826681
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4595162928358490059
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD[.] = MOV [v8|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v31|DWORD[.], y: v31|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.1533361397600505 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B41" 
    xhandlers
    flags 
    probability 4594243692297133512
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0011187072715972413 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B42" 
    xhandlers
    flags 
    probability 4594238014105951488
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v31|DWORD[.]] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B34" "B41" 
    successors "B43" 
    xhandlers
    flags 
    probability 4594790134468698542
    begin_IR
      LIR
      nr   -1  <|@ instruction [v34|DWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@44b93d59 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v35|QWORD[.]] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B65" "B71" 
    successors "B44" "B69" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4595670214891295398
    begin_IR
      LIR
      nr   -1  <|@ instruction [v36|QWORD[.]] = LABEL numbPhis: 1 align: true label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
locals: - v1|DWORD v2|QWORD[.] - - v36|QWORD[.] - - 
>@ <|@ instruction CMP (x: v1|DWORD, y: [v36|QWORD[.] + 12]) size: DWORD state [bci:98] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8091668758741886 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594429380781958389
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|DWORD[.] = MOV [v36|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = UNCOMPRESSPOINTER (input: v37|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@44b93d59 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v38|QWORD[.], y: v2|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7707650031025618 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B60" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584985172859505021
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
locals: - v1|DWORD v2|QWORD[.] - - v36|QWORD[.] - - 
>@ <|@ instruction v39|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD state [bci:98] <|@ <|@
      nr   -1  <|@ instruction CMP v39|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.31013147718484146 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582313558340751616
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = MOV [v39|DWORD * 8 + 448] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = MOV [v53|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v53|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v54|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
locals: - v1|DWORD v2|QWORD[.] - - v36|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:126] <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v55|DWORD] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B57" 
    successors "B62" "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582481878968475625
    begin_IR
      LIR
      nr   -1  <|@ instruction [v56|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v56|DWORD, y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.03480278422273782 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4560739769974181225
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" "B50" "B58" "B59" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572238258899904086
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v57|DWORD[.] = MOV [v36|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v57|DWORD[.], y: v57|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.3139429194691874 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B43" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4569814121301167416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.getNode(HashMap.java:579) [bci: 129]
stack: int[0|0x0] 
locals: - v1|DWORD v2|QWORD[.] - - v36|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:129] <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = UNCOMPRESSPOINTER (input: v57|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@44b93d59 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v58|QWORD[.]] destination: B65 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585124157473142468
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v59|DWORD[.] = MOV [v36|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v59|DWORD[.], y: v59|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.3139429194691874 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B43" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4582467485620222332
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
locals: - v1|DWORD v2|QWORD[.] - - v36|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:98] <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v59|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@44b93d59 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v60|QWORD[.]] destination: B71 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B49" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577138355211240435
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v38|QWORD[.], y: v2|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572634755583869939
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v37|DWORD[.], y: v37|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572036282240851240
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v37|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4567532682613480744
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B59 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4567532682613480744
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|DWORD[.] = MOV [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
locals: - v1|DWORD v2|QWORD[.] - - v36|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v40|DWORD[.] * 8] state [bci:98] <|@ <|@
      nr   -1  <|@ instruction v41|DWORD[.] = MOV [v37|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v41|DWORD[.], y: v41|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4567532682613480744
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOV [v41|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = MOV [v40|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v43|DWORD, y: v42|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4563029082986110248
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B58 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4563029082986110248
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v43|DWORD, y: v43|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4558525483358739752
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = UNCOMPRESSPOINTER (input: v40|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@44b93d59 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.] = UNCOMPRESSPOINTER (input: v41|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@44b93d59 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = ARRAY_EQUALS (~array1Value: v44|QWORD[.], ~array2Value: v45|QWORD[.], ~lengthValue: v43|DWORD) {temp1: v47|QWORD[*], temp2: v48|QWORD[*], temp3: v49|QWORD, temp4: v50|QWORD, temp5: -, tempXMM: -, vectorTemp1: v51|DOUBLE, vectorTemp2: v52|DOUBLE} arrayBaseOffset: 16 arrayIndexScale: 2 kind: char <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v46|DWORD] destination: B57 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4557927010015721051
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B50 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 4592774965734155563
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v36|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4590030884246439089
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4589756709023634757
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|QWORD[.], y: v2|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B28" 
    xhandlers
    flags 
    probability 4589756709023634757
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v13|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5841828066598709 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4586110475649275746
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v11|QWORD[.], y: v2|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4581606876021905250
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v10|DWORD[.], y: v10|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B27" 
    xhandlers
    flags 
    probability 4581011910560557119
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v10|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B30" 
    xhandlers
    flags 
    probability 4576508310933186623
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B27 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B24" "B14" "B26" "B29" "B27" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4580879966741248736
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v30|DWORD[.] = MOV [v8|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v30|DWORD[.], y: v30|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.1533361397600505 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4579997441230132689
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0011187072715972413 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B42" 
    xhandlers
    flags 
    probability 4579987547585006311
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v30|DWORD[.]] destination: B34 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B29" "B35" 
    xhandlers
    flags 
    probability 4584127065623340624
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOV [v13|DWORD * 8 + 448] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOV [v27|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v27|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v28|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
locals: - v1|DWORD v2|QWORD[.] - v12|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:59] <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v29|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.06693849813115868 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors 
    xhandlers
    flags 
    probability 4583560106972189218
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 4583011109899276306
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4582268946471914142
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B67" 
    xhandlers
    flags 
    probability 4582244361884019069
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B48" "B56" 
    successors "B68" 
    xhandlers
    flags 
    probability 4583908865869289827
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors 
    xhandlers
    flags 
    probability 4583908865869289827
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v36|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 4581606876021905250
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors 
    xhandlers
    flags 
    probability 4577386439106848792
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4576508310933186623
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v14|DWORD[.] = MOV [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v14|DWORD[.], y: v14|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4576508310933186623
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v15|DWORD[.] = MOV [v10|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v15|DWORD[.], y: v15|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B26" 
    xhandlers
    flags 
    probability 4576508310933186623
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOV [v15|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOV [v14|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v17|DWORD, y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B30" 
    xhandlers
    flags 
    probability 4572004711305816127
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B26 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B67" 
    xhandlers
    flags 
    probability 4572634755583869939
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B48 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4572004711305816127
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v17|DWORD, y: v17|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4567501111678445631
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v14|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@44b93d59 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v15|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@44b93d59 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = ARRAY_EQUALS (~array1Value: v18|QWORD[.], ~array2Value: v19|QWORD[.], ~lengthValue: v17|DWORD) {temp1: v21|QWORD[*], temp2: v22|QWORD[*], temp3: v23|QWORD, temp4: v24|QWORD, temp5: -, tempXMM: -, vectorTemp1: v25|DOUBLE, vectorTemp2: v26|DOUBLE} arrayBaseOffset: 16 arrayIndexScale: 2 kind: char <|@ <|@
      nr   -1  <|@ instruction TEST (x: v20|DWORD, y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.06693849813115868 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors 
    xhandlers
    flags 
    probability 4567142676828642628
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors 
    xhandlers
    flags 
    probability 4568553107392593848
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors 
    xhandlers
    flags 
    probability 4567501111678445631
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B30" 
    xhandlers
    flags 
    probability 4566906146217097498
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B14 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" 
    xhandlers
    flags 
    probability 4566682091735523695
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors 
    xhandlers
    flags 
    probability 4564660372334116583
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B67" 
    xhandlers
    flags 
    probability 4558525483358739752
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B56 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 4549946491787222878
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B33" "B39" 
    successors 
    xhandlers
    flags 
    probability 4550579685075311074
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@44b93d59 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.getNode(HashMap.java:576) [bci: 94]
locals: - - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$TreeNode.getTreeNode(int, Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:94] <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v33|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B30" 
    xhandlers
    flags 
    probability 4549866981613678508
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B24 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B40" 
    xhandlers
    flags 
    probability 4535686771439424545
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-123931|0xfffffffffffe1be5]] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" "B9" "B17" "B19" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v61|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v61|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.getNode(HashMap.java:569) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-130571|0xfffffffffffe01f5]] destination: B17 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-129299|0xfffffffffffe06ed]] destination: B9 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -143115 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
locals: - v1|DWORD v2|QWORD[.] - - v36|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:98] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-132619|0xfffffffffffdf9f5]] destination: B19 -> B73 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #20         // table:java.util.HashMap$Node[]
     4: dup           
     5: astore_3      
     6: ifnull        146
     9: aload_3       
    10: arraylength   
    11: dup           
    12: istore        6
    14: ifle          146
    17: aload_3       
    18: iload         6
    20: iconst_1      
    21: isub          
    22: iload_1       
    23: iand          
    24: aaload        
    25: dup           
    26: astore        4
    28: ifnull        146
    31: aload         4
    33: getfield      #33         // java.util.HashMap$Node.hash:int
    36: iload_1       
    37: if_icmpne     68
    40: aload         4
    42: getfield      #34         // java.util.HashMap$Node.key:java.lang.Object
    45: dup           
    46: astore        7
    48: aload_2       
    49: if_acmpeq     65
    52: aload_2       
    53: ifnull        68
    56: aload_2       
    57: aload         7
    59: invokevirtual #35         // java.lang.Object.equals:(java.lang.Object)boolean
    62: ifeq          68
    65: aload         4
    67: areturn       
    68: aload         4
    70: getfield      #36         // java.util.HashMap$Node.next:java.util.HashMap$Node
    73: dup           
    74: astore        5
    76: ifnull        146
    79: aload         4
    81: instanceof    #50         // java.util.HashMap$TreeNode
    84: ifeq          98
    87: aload         4
    89: checkcast     #50         // java.util.HashMap$TreeNode
    92: iload_1       
    93: aload_2       
    94: invokevirtual #37         // java.util.HashMap$TreeNode.getTreeNode:(int, java.lang.Object)java.util.HashMap$TreeNode
    97: areturn       
    98: aload         5
   100: getfield      #33         // java.util.HashMap$Node.hash:int
   103: iload_1       
   104: if_icmpne     135
   107: aload         5
   109: getfield      #34         // java.util.HashMap$Node.key:java.lang.Object
   112: dup           
   113: astore        7
   115: aload_2       
   116: if_acmpeq     132
   119: aload_2       
   120: ifnull        135
   123: aload_2       
   124: aload         7
   126: invokevirtual #35         // java.lang.Object.equals:(java.lang.Object)boolean
   129: ifeq          135
   132: aload         5
   134: areturn       
   135: aload         5
   137: getfield      #36         // java.util.HashMap$Node.next:java.util.HashMap$Node
   140: dup           
   141: astore        5
   143: ifnonnull     98
   146: aconst_null   
   147: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@28eeb4db slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction rax|DWORD[.] = MOV [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr    8  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr   10  <|@ instruction BRANCH trueDestinationProbability: 0.02293902936868141 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B72" 
    xhandlers
    flags 
    probability 4606975802391783339
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction stack:28|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   22  <|@ instruction rbx|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   24  <|@ instruction r10|DWORD = DEC rbx|DWORD size: DWORD <|@ <|@
      nr   26  <|@ instruction r10|DWORD = AND (x: rdx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   28  <|@ instruction CMP (x: rbx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   30  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606975802391783339
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   34  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@44b93d59 encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction r10|DWORD[.] = MOV [rax|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   38  <|@ instruction TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr   40  <|@ instruction BRANCH trueDestinationProbability: 0.0762231274461013 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B36" 
    xhandlers
    flags 
    probability 4606304994443874069
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction stack:40|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction r11|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   54  <|@ instruction CMP (x: rdx|DWORD, y: [r10|DWORD[.] * 8 + 12]) size: DWORD <|@ <|@
      nr   56  <|@ instruction BRANCH trueDestinationProbability: 0.8156496292108676 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4604806267426885410
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   60  <|@ instruction r8|DWORD[.] = MOV [r10|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   62  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@44b93d59 encoding: base: 0 shift: 3 <|@ <|@
      nr   64  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@44b93d59 encoding: base: 0 shift: 3 <|@ <|@
      nr   66  <|@ instruction CMP (x: rbx|QWORD[.], y: rcx|QWORD[.]) size: QWORD <|@ <|@
      nr   68  <|@ instruction BRANCH trueDestinationProbability: 0.9040067186327908 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4604169731381826681
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   72  <|@ instruction rax|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4595162928358490059
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  298  <|@ instruction rax|DWORD[.] = MOV [r10|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr  300  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  302  <|@ instruction BRANCH trueDestinationProbability: 0.1533361397600505 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B41" 
    xhandlers
    flags 
    probability 4594243692297133512
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  312  <|@ instruction CMP r11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
      nr  314  <|@ instruction BRANCH trueDestinationProbability: 0.0011187072715972413 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B42" 
    xhandlers
    flags 
    probability 4594238014105951488
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  334  <|@ instruction JUMP ~[] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B34" "B41" 
    successors "B43" 
    xhandlers
    flags 
    probability 4594790134468698542
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  338  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@44b93d59 encoding: base: 0 shift: 3 <|@ <|@
      nr  340  <|@ instruction r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  342  <|@ instruction rdx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  344  <|@ instruction JUMP ~[] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B65" "B71" 
    successors "B44" "B69" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4595670214891295398
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL numbPhis: 1 align: true label: ? <|@ <|@
      nr  348  <|@ st <@st|@reference-map: [rcx:0, r10:0, stack:24]
live-base-pointers: []
java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
locals: - rdx|DWORD rcx|QWORD[.] - - r10|QWORD[.] - - 
>@ <|@ instruction CMP (x: rdx|DWORD, y: [r10|QWORD[.] + 12]) size: DWORD state [bci:98] <|@ <|@
      nr  350  <|@ instruction BRANCH trueDestinationProbability: 0.8091668758741886 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594429380781958389
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  354  <|@ instruction r11|DWORD[.] = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  356  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@44b93d59 encoding: base: 0 shift: 3 <|@ <|@
      nr  358  <|@ instruction CMP (x: r8|QWORD[.], y: rcx|QWORD[.]) size: QWORD <|@ <|@
      nr  360  <|@ instruction BRANCH trueDestinationProbability: 0.7707650031025618 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B60" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584985172859505021
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  370  <|@ st <@st|@reference-map: [rcx:0, r8:0, r10:0, r11:0, stack:24]
live-base-pointers: []
java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
locals: - rdx|DWORD rcx|QWORD[.] - - r10|QWORD[.] - - 
>@ <|@ instruction rsi|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:98] <|@ <|@
      nr  372  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  374  <|@ instruction BRANCH trueDestinationProbability: 0.31013147718484146 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582313558340751616
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  472  <|@ instruction stack:48|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction rbx|QWORD = MOV [rsi|DWORD * 8 + 448] size: QWORD <|@ <|@
      nr  476  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  478  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  480  <|@ instruction rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  482  <|@ st <@st|@reference-map: [stack:16, stack:24]
live-base-pointers: []
java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
locals: - stack:28|DWORD stack:40|QWORD[.] - - stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:126] <|@ <|@
      nr  484  <|@ instruction JUMP ~[] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B57" 
    successors "B62" "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582481878968475625
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  488  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  490  <|@ instruction BRANCH trueDestinationProbability: 0.03480278422273782 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4560739769974181225
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  494  <|@ instruction r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ instruction rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  498  <|@ instruction JUMP ~[] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" "B50" "B58" "B59" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572238258899904086
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  502  <|@ instruction rax|DWORD[.] = MOV [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  504  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  506  <|@ instruction BRANCH trueDestinationProbability: 0.3139429194691874 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B43" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4569814121301167416
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  516  <|@ st <@st|@reference-map: [rax:0, rcx:0, r10:0, stack:24]
live-base-pointers: []
java.util.HashMap.getNode(HashMap.java:579) [bci: 129]
stack: int[0|0x0] 
locals: - stack:28|DWORD rcx|QWORD[.] - - r10|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:129] <|@ <|@
      nr  518  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@44b93d59 encoding: base: 0 shift: 3 <|@ <|@
      nr  520  <|@ instruction r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  522  <|@ instruction rdx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  524  <|@ instruction JUMP ~[] destination: B65 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585124157473142468
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  544  <|@ instruction rax|DWORD[.] = MOV [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  546  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  548  <|@ instruction BRANCH trueDestinationProbability: 0.3139429194691874 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B43" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4582467485620222332
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  558  <|@ st <@st|@reference-map: [rax:0, r10:0, stack:24]
live-base-pointers: []
java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
locals: - stack:28|DWORD stack:40|QWORD[.] - - r10|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:98] <|@ <|@
      nr  560  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@44b93d59 encoding: base: 0 shift: 3 <|@ <|@
      nr  562  <|@ instruction r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  564  <|@ instruction rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  566  <|@ instruction rdx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  568  <|@ instruction JUMP ~[] destination: B71 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B49" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577138355211240435
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  378  <|@ instruction CMP (x: r8|QWORD[.], y: stack:40|QWORD[.]) size: QWORD <|@ <|@
      nr  380  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572634755583869939
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  388  <|@ instruction TEST (x: r11|DWORD[.], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr  390  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572036282240851240
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  400  <|@ instruction CMP [r11|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  402  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4567532682613480744
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  466  <|@ instruction rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction JUMP ~[] destination: B59 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4567532682613480744
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  406  <|@ instruction rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  408  <|@ instruction rax|DWORD[.] = MOV [rcx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  410  <|@ st <@st|@reference-map: [rax:0, rcx:0, r10:0, r11:0, stack:24]
live-base-pointers: []
java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
locals: - stack:28|DWORD rcx|QWORD[.] - - r10|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rax|DWORD[.] * 8] state [bci:98] <|@ <|@
      nr  412  <|@ instruction rsi|DWORD[.] = MOV [r11|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  414  <|@ instruction TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  416  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4567532682613480744
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  428  <|@ instruction rdx|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  430  <|@ instruction r11|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  432  <|@ instruction CMP (x: r11|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  434  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4563029082986110248
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  462  <|@ instruction JUMP ~[] destination: B58 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4563029082986110248
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  438  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  440  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4558525483358739752
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  448  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@44b93d59 encoding: base: 0 shift: 3 <|@ <|@
      nr  450  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@44b93d59 encoding: base: 0 shift: 3 <|@ <|@
      nr  452  <|@ instruction rdx|DWORD = ARRAY_EQUALS (~array1Value: rax|QWORD[.], ~array2Value: rsi|QWORD[.], ~lengthValue: r11|DWORD) {temp1: r8|QWORD[*], temp2: r9|QWORD[*], temp3: rbx|QWORD, temp4: rdi|QWORD, temp5: -, tempXMM: -, vectorTemp1: xmm0|DOUBLE, vectorTemp2: xmm1|DOUBLE} arrayBaseOffset: 16 arrayIndexScale: 2 kind: char <|@ <|@
      nr  454  <|@ instruction rax|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  456  <|@ instruction stack:48|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ instruction JUMP ~[] destination: B57 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4557927010015721051
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  394  <|@ instruction rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  396  <|@ instruction JUMP ~[] destination: B50 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 4592774965734155563
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  364  <|@ instruction rax|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  366  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4590030884246439089
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   46  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4589756709023634757
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   78  <|@ instruction TEST (x: rcx|QWORD[.], y: rcx|QWORD[.]) size: QWORD <|@ <|@
      nr   80  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B28" 
    xhandlers
    flags 
    probability 4589756709023634757
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   90  <|@ instruction rax|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   92  <|@ instruction CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   94  <|@ instruction BRANCH trueDestinationProbability: 0.5841828066598709 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4586110475649275746
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   98  <|@ instruction CMP (x: rbx|QWORD[.], y: rcx|QWORD[.]) size: QWORD <|@ <|@
      nr  100  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4581606876021905250
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  112  <|@ instruction TEST (x: r8|DWORD[.], y: r8|DWORD[.]) size: DWORD <|@ <|@
      nr  114  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B27" 
    xhandlers
    flags 
    probability 4581011910560557119
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  124  <|@ instruction CMP [r8|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  126  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B30" 
    xhandlers
    flags 
    probability 4576508310933186623
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  222  <|@ instruction stack:52|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  224  <|@ instruction JUMP ~[] destination: B27 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B24" "B14" "B26" "B29" "B27" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4580879966741248736
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  262  <|@ instruction rsi|DWORD[.] = MOV [r10|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr  264  <|@ instruction TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  266  <|@ instruction BRANCH trueDestinationProbability: 0.1533361397600505 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4579997441230132689
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  276  <|@ instruction CMP stack:52|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
      nr  278  <|@ instruction BRANCH trueDestinationProbability: 0.0011187072715972413 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B42" 
    xhandlers
    flags 
    probability 4579987547585006311
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  286  <|@ instruction rax|DWORD[.] = MOVE rsi|DWORD[.] moveKind: DWORD <|@ <|@
      nr  288  <|@ instruction JUMP ~[] destination: B34 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B29" "B35" 
    xhandlers
    flags 
    probability 4584127065623340624
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  228  <|@ instruction stack:48|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction stack:52|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  232  <|@ instruction stack:56|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction rax|QWORD = MOV [rax|DWORD * 8 + 448] size: QWORD <|@ <|@
      nr  236  <|@ instruction r8|QWORD = MOV [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  238  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction rdx|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction rbx|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction rax|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  246  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24]
live-base-pointers: []
java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
locals: - stack:28|DWORD stack:40|QWORD[.] - stack:48|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:59] <|@ <|@
      nr  248  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  250  <|@ instruction BRANCH trueDestinationProbability: 0.06693849813115868 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors 
    xhandlers
    flags 
    probability 4583560106972189218
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  292  <|@ instruction rax|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 4583011109899276306
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  306  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  308  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4582268946471914142
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   14  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   16  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B67" 
    xhandlers
    flags 
    probability 4582244361884019069
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  528  <|@ instruction r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  530  <|@ instruction JUMP ~[] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B48" "B56" 
    successors "B68" 
    xhandlers
    flags 
    probability 4583908865869289827
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  534  <|@ instruction JUMP ~[] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors 
    xhandlers
    flags 
    probability 4583908865869289827
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  538  <|@ instruction rax|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  540  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 4581606876021905250
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  104  <|@ instruction stack:48|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  106  <|@ instruction rax|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors 
    xhandlers
    flags 
    probability 4577386439106848792
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  552  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  554  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4576508310933186623
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  130  <|@ instruction stack:48|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  132  <|@ instruction stack:52|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  134  <|@ instruction stack:56|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  136  <|@ instruction rax|DWORD[.] = MOV [rcx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  138  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  140  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4576508310933186623
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  152  <|@ instruction rdx|DWORD[.] = MOV [r8|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  154  <|@ instruction TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr  156  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B26" 
    xhandlers
    flags 
    probability 4576508310933186623
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  168  <|@ instruction rsi|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  170  <|@ instruction rbx|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  172  <|@ instruction CMP (x: rbx|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  174  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B30" 
    xhandlers
    flags 
    probability 4572004711305816127
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  216  <|@ instruction r10|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B26 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B67" 
    xhandlers
    flags 
    probability 4572634755583869939
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  384  <|@ instruction JUMP ~[] destination: B48 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4572004711305816127
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  178  <|@ instruction TEST (x: rbx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  180  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4567501111678445631
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  192  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@44b93d59 encoding: base: 0 shift: 3 <|@ <|@
      nr  194  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@44b93d59 encoding: base: 0 shift: 3 <|@ <|@
      nr  196  <|@ instruction rsi|DWORD = ARRAY_EQUALS (~array1Value: rax|QWORD[.], ~array2Value: rdx|QWORD[.], ~lengthValue: rbx|DWORD) {temp1: r10|QWORD[*], temp2: r11|QWORD[*], temp3: r8|QWORD, temp4: r9|QWORD, temp5: -, tempXMM: -, vectorTemp1: xmm0|DOUBLE, vectorTemp2: xmm1|DOUBLE} arrayBaseOffset: 16 arrayIndexScale: 2 kind: char <|@ <|@
      nr  198  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  200  <|@ instruction BRANCH trueDestinationProbability: 0.06693849813115868 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors 
    xhandlers
    flags 
    probability 4567142676828642628
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  210  <|@ instruction rax|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors 
    xhandlers
    flags 
    probability 4568553107392593848
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  270  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  272  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors 
    xhandlers
    flags 
    probability 4567501111678445631
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  184  <|@ instruction r9|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction rax|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  188  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B30" 
    xhandlers
    flags 
    probability 4566906146217097498
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  118  <|@ instruction stack:52|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  120  <|@ instruction JUMP ~[] destination: B14 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" 
    xhandlers
    flags 
    probability 4566682091735523695
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  254  <|@ instruction r10|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD <|@ <|@
      nr  256  <|@ instruction rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors 
    xhandlers
    flags 
    probability 4564660372334116583
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  510  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  512  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B67" 
    xhandlers
    flags 
    probability 4558525483358739752
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  444  <|@ instruction JUMP ~[] destination: B56 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 4549946491787222878
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  318  <|@ instruction JUMP ~[] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B33" "B39" 
    successors 
    xhandlers
    flags 
    probability 4550579685075311074
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  322  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@44b93d59 encoding: base: 0 shift: 3 <|@ <|@
      nr  324  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction rdx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.util.HashMap.getNode(HashMap.java:576) [bci: 94]
locals: - - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$TreeNode.getTreeNode(int, Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:94] <|@ <|@
      nr  330  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B30" 
    xhandlers
    flags 
    probability 4549866981613678508
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  204  <|@ instruction r10|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD <|@ <|@
      nr  206  <|@ instruction JUMP ~[] destination: B24 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B40" 
    xhandlers
    flags 
    probability 4535686771439424545
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  282  <|@ instruction JUMP ~[] destination: B33 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  572  <|@ instruction r10|DWORD = MOVE input: int[-123931|0xfffffffffffe1be5] <|@ <|@
      nr  574  <|@ instruction JUMP ~[] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" "B9" "B17" "B19" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  578  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  580  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  582  <|@ st <@st|@reference-map: [rcx:0, rsi:0]
live-base-pointers: []
java.util.HashMap.getNode(HashMap.java:569) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  144  <|@ instruction r10|DWORD = MOVE input: int[-130571|0xfffffffffffe01f5] <|@ <|@
      nr  146  <|@ instruction rdx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction JUMP ~[] destination: B17 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   84  <|@ instruction r10|DWORD = MOVE input: int[-129299|0xfffffffffffe06ed] <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B9 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  420  <|@ instruction MOV [r15|QWORD + 668] y: -143115 size: DWORD <|@ <|@
      nr  422  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  424  <|@ st <@st|@reference-map: [rcx:0, r10:0]
live-base-pointers: []
java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
locals: - stack:28|DWORD rcx|QWORD[.] - - r10|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:98] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  160  <|@ instruction r10|DWORD = MOVE input: int[-132619|0xfffffffffffdf9f5] <|@ <|@
      nr  162  <|@ instruction rdx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  164  <|@ instruction JUMP ~[] destination: B19 -> B73 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #20         // table:java.util.HashMap$Node[]
     4: dup           
     5: astore_3      
     6: ifnull        146
     9: aload_3       
    10: arraylength   
    11: dup           
    12: istore        6
    14: ifle          146
    17: aload_3       
    18: iload         6
    20: iconst_1      
    21: isub          
    22: iload_1       
    23: iand          
    24: aaload        
    25: dup           
    26: astore        4
    28: ifnull        146
    31: aload         4
    33: getfield      #33         // java.util.HashMap$Node.hash:int
    36: iload_1       
    37: if_icmpne     68
    40: aload         4
    42: getfield      #34         // java.util.HashMap$Node.key:java.lang.Object
    45: dup           
    46: astore        7
    48: aload_2       
    49: if_acmpeq     65
    52: aload_2       
    53: ifnull        68
    56: aload_2       
    57: aload         7
    59: invokevirtual #35         // java.lang.Object.equals:(java.lang.Object)boolean
    62: ifeq          68
    65: aload         4
    67: areturn       
    68: aload         4
    70: getfield      #36         // java.util.HashMap$Node.next:java.util.HashMap$Node
    73: dup           
    74: astore        5
    76: ifnull        146
    79: aload         4
    81: instanceof    #50         // java.util.HashMap$TreeNode
    84: ifeq          98
    87: aload         4
    89: checkcast     #50         // java.util.HashMap$TreeNode
    92: iload_1       
    93: aload_2       
    94: invokevirtual #37         // java.util.HashMap$TreeNode.getTreeNode:(int, java.lang.Object)java.util.HashMap$TreeNode
    97: areturn       
    98: aload         5
   100: getfield      #33         // java.util.HashMap$Node.hash:int
   103: iload_1       
   104: if_icmpne     135
   107: aload         5
   109: getfield      #34         // java.util.HashMap$Node.key:java.lang.Object
   112: dup           
   113: astore        7
   115: aload_2       
   116: if_acmpeq     132
   119: aload_2       
   120: ifnull        135
   123: aload_2       
   124: aload         7
   126: invokevirtual #35         // java.lang.Object.equals:(java.lang.Object)boolean
   129: ifeq          135
   132: aload         5
   134: areturn       
   135: aload         5
   137: getfield      #36         // java.util.HashMap$Node.next:java.util.HashMap$Node
   140: dup           
   141: astore        5
   143: ifnonnull     98
   146: aconst_null   
   147: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@28eeb4db slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction rax|DWORD[.] = MOV [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr    8  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr   10  <|@ instruction BRANCH trueDestinationProbability: 0.02293902936868141 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B72" 
    xhandlers
    flags 
    probability 4606975802391783339
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction stack:28|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   22  <|@ instruction rbx|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   24  <|@ instruction r10|DWORD = DEC rbx|DWORD size: DWORD <|@ <|@
      nr   26  <|@ instruction r10|DWORD = AND (x: rdx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   28  <|@ instruction CMP (x: rbx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   30  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606975802391783339
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   34  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@44b93d59 encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction r10|DWORD[.] = MOV [rax|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   38  <|@ instruction TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr   40  <|@ instruction BRANCH trueDestinationProbability: 0.0762231274461013 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B36" 
    xhandlers
    flags 
    probability 4606304994443874069
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction stack:40|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction r11|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   54  <|@ instruction CMP (x: rdx|DWORD, y: [r10|DWORD[.] * 8 + 12]) size: DWORD <|@ <|@
      nr   56  <|@ instruction BRANCH trueDestinationProbability: 0.8156496292108676 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4604806267426885410
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   60  <|@ instruction r8|DWORD[.] = MOV [r10|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   62  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@44b93d59 encoding: base: 0 shift: 3 <|@ <|@
      nr   64  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@44b93d59 encoding: base: 0 shift: 3 <|@ <|@
      nr   66  <|@ instruction CMP (x: rbx|QWORD[.], y: rcx|QWORD[.]) size: QWORD <|@ <|@
      nr   68  <|@ instruction BRANCH trueDestinationProbability: 0.9040067186327908 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4604169731381826681
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   72  <|@ instruction rax|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4595162928358490059
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  298  <|@ instruction rax|DWORD[.] = MOV [r10|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr  300  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  302  <|@ instruction BRANCH trueDestinationProbability: 0.1533361397600505 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" "B42" 
    xhandlers
    flags 
    probability 4594243692297133512
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  312  <|@ instruction CMP r11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
      nr  314  <|@ instruction BRANCH trueDestinationProbability: 0.0011187072715972413 condition: = trueDestination: B38 -> B40 falseDestination: B38 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B34" "B38" 
    successors "B43" 
    xhandlers
    flags 
    probability 4594790134468698542
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  338  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@44b93d59 encoding: base: 0 shift: 3 <|@ <|@
      nr  340  <|@ instruction r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction JUMP ~[] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B65" "B71" 
    successors "B44" "B69" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4595670214891295398
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL numbPhis: 1 align: true label: ? <|@ <|@
      nr  342  <|@ instruction rdx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ st <@st|@reference-map: [rcx:0, r10:0, stack:24]
live-base-pointers: []
java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
locals: - rdx|DWORD rcx|QWORD[.] - - r10|QWORD[.] - - 
>@ <|@ instruction CMP (x: rdx|DWORD, y: [r10|QWORD[.] + 12]) size: DWORD state [bci:98] <|@ <|@
      nr  350  <|@ instruction BRANCH trueDestinationProbability: 0.8091668758741886 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594429380781958389
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  354  <|@ instruction r11|DWORD[.] = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  356  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@44b93d59 encoding: base: 0 shift: 3 <|@ <|@
      nr  358  <|@ instruction CMP (x: r8|QWORD[.], y: rcx|QWORD[.]) size: QWORD <|@ <|@
      nr  360  <|@ instruction BRANCH trueDestinationProbability: 0.7707650031025618 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B60" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584985172859505021
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  370  <|@ st <@st|@reference-map: [rcx:0, r8:0, r10:0, r11:0, stack:24]
live-base-pointers: []
java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
locals: - rdx|DWORD rcx|QWORD[.] - - r10|QWORD[.] - - 
>@ <|@ instruction rsi|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:98] <|@ <|@
      nr  372  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  374  <|@ instruction BRANCH trueDestinationProbability: 0.31013147718484146 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582313558340751616
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  472  <|@ instruction stack:48|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction rbx|QWORD = MOV [rsi|DWORD * 8 + 448] size: QWORD <|@ <|@
      nr  476  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  478  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  480  <|@ instruction rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  482  <|@ st <@st|@reference-map: [stack:16, stack:24]
live-base-pointers: []
java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
locals: - stack:28|DWORD stack:40|QWORD[.] - - stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:126] <|@ <|@
      nr  484  <|@ instruction JUMP ~[] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B57" 
    successors "B62" "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582481878968475625
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  488  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  494  <|@ instruction r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  490  <|@ instruction BRANCH trueDestinationProbability: 0.03480278422273782 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4560739769974181225
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  496  <|@ instruction rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  498  <|@ instruction JUMP ~[] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" "B50" "B54" "B51" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572238258899904086
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  502  <|@ instruction rax|DWORD[.] = MOV [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  504  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  506  <|@ instruction BRANCH trueDestinationProbability: 0.3139429194691874 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B43" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4569814121301167416
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  516  <|@ st <@st|@reference-map: [rax:0, rcx:0, r10:0, stack:24]
live-base-pointers: []
java.util.HashMap.getNode(HashMap.java:579) [bci: 129]
stack: int[0|0x0] 
locals: - stack:28|DWORD rcx|QWORD[.] - - r10|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:129] <|@ <|@
      nr  518  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@44b93d59 encoding: base: 0 shift: 3 <|@ <|@
      nr  520  <|@ instruction r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  524  <|@ instruction JUMP ~[] destination: B65 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585124157473142468
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  544  <|@ instruction rax|DWORD[.] = MOV [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  546  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  548  <|@ instruction BRANCH trueDestinationProbability: 0.3139429194691874 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B43" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4582467485620222332
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  558  <|@ st <@st|@reference-map: [rax:0, r10:0, stack:24]
live-base-pointers: []
java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
locals: - stack:28|DWORD stack:40|QWORD[.] - - r10|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:98] <|@ <|@
      nr  560  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@44b93d59 encoding: base: 0 shift: 3 <|@ <|@
      nr  562  <|@ instruction r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  564  <|@ instruction rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  568  <|@ instruction JUMP ~[] destination: B71 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B68" "B49" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577138355211240435
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  378  <|@ instruction CMP (x: r8|QWORD[.], y: stack:40|QWORD[.]) size: QWORD <|@ <|@
      nr  380  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B47 -> B68 falseDestination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572634755583869939
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  388  <|@ instruction TEST (x: r11|DWORD[.], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr  390  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572036282240851240
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  400  <|@ instruction CMP [r11|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  406  <|@ instruction rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4567532682613480744
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  408  <|@ instruction rax|DWORD[.] = MOV [rcx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  410  <|@ st <@st|@reference-map: [rax:0, rcx:0, r10:0, r11:0, stack:24]
live-base-pointers: []
java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
locals: - stack:28|DWORD rcx|QWORD[.] - - r10|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rax|DWORD[.] * 8] state [bci:98] <|@ <|@
      nr  412  <|@ instruction rsi|DWORD[.] = MOV [r11|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  414  <|@ instruction TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  416  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4567532682613480744
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  428  <|@ instruction rdx|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  430  <|@ instruction r11|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  432  <|@ instruction CMP (x: r11|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  434  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B68" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4563029082986110248
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  438  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  440  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B55 -> B68 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4558525483358739752
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  448  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@44b93d59 encoding: base: 0 shift: 3 <|@ <|@
      nr  450  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@44b93d59 encoding: base: 0 shift: 3 <|@ <|@
      nr  452  <|@ instruction rdx|DWORD = ARRAY_EQUALS (~array1Value: rax|QWORD[.], ~array2Value: rsi|QWORD[.], ~lengthValue: r11|DWORD) {temp1: r8|QWORD[*], temp2: r9|QWORD[*], temp3: rbx|QWORD, temp4: rdi|QWORD, temp5: -, tempXMM: -, vectorTemp1: xmm0|DOUBLE, vectorTemp2: xmm1|DOUBLE} arrayBaseOffset: 16 arrayIndexScale: 2 kind: char <|@ <|@
      nr  454  <|@ instruction rax|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  456  <|@ instruction stack:48|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ instruction JUMP ~[] destination: B57 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4557927010015721051
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  394  <|@ instruction rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  396  <|@ instruction JUMP ~[] destination: B50 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 4592774965734155563
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  364  <|@ instruction rax|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  366  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4590030884246439089
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   46  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4589756709023634757
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   78  <|@ instruction TEST (x: rcx|QWORD[.], y: rcx|QWORD[.]) size: QWORD <|@ <|@
      nr   80  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B28" 
    xhandlers
    flags 
    probability 4589756709023634757
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   90  <|@ instruction rax|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   92  <|@ instruction CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   94  <|@ instruction BRANCH trueDestinationProbability: 0.5841828066598709 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4586110475649275746
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   98  <|@ instruction CMP (x: rbx|QWORD[.], y: rcx|QWORD[.]) size: QWORD <|@ <|@
      nr  100  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4581606876021905250
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  112  <|@ instruction TEST (x: r8|DWORD[.], y: r8|DWORD[.]) size: DWORD <|@ <|@
      nr  114  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B27" 
    xhandlers
    flags 
    probability 4581011910560557119
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  124  <|@ instruction CMP [r8|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  126  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B30" 
    xhandlers
    flags 
    probability 4576508310933186623
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  222  <|@ instruction stack:52|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  224  <|@ instruction JUMP ~[] destination: B27 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B24" "B14" "B26" "B29" "B27" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4580879966741248736
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  262  <|@ instruction rsi|DWORD[.] = MOV [r10|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr  264  <|@ instruction TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  266  <|@ instruction BRANCH trueDestinationProbability: 0.1533361397600505 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B40" "B34" 
    xhandlers
    flags 
    probability 4579997441230132689
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  276  <|@ instruction CMP stack:52|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
      nr  278  <|@ instruction BRANCH trueDestinationProbability: 0.0011187072715972413 condition: = trueDestination: B32 -> B40 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B42" 
    xhandlers
    flags 
    probability 4579987547585006311
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  286  <|@ instruction rax|DWORD[.] = MOVE rsi|DWORD[.] moveKind: DWORD <|@ <|@
      nr  288  <|@ instruction JUMP ~[] destination: B34 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B29" "B35" 
    xhandlers
    flags 
    probability 4584127065623340624
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  228  <|@ instruction stack:48|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction stack:52|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  232  <|@ instruction stack:56|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction rax|QWORD = MOV [rax|DWORD * 8 + 448] size: QWORD <|@ <|@
      nr  236  <|@ instruction r8|QWORD = MOV [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  238  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction rdx|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction rbx|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction rax|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  246  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24]
live-base-pointers: []
java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
locals: - stack:28|DWORD stack:40|QWORD[.] - stack:48|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:59] <|@ <|@
      nr  248  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  250  <|@ instruction BRANCH trueDestinationProbability: 0.06693849813115868 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors 
    xhandlers
    flags 
    probability 4583560106972189218
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  292  <|@ instruction rax|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 4583011109899276306
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  306  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  308  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4582268946471914142
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   14  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   16  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B61" "B47" "B55" 
    successors 
    xhandlers
    flags 
    probability 4583908865869289827
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  538  <|@ instruction rax|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  540  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 4581606876021905250
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  104  <|@ instruction stack:48|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  106  <|@ instruction rax|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors 
    xhandlers
    flags 
    probability 4577386439106848792
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  552  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  554  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4576508310933186623
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  130  <|@ instruction stack:48|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  132  <|@ instruction stack:52|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  134  <|@ instruction stack:56|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  136  <|@ instruction rax|DWORD[.] = MOV [rcx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  138  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  140  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4576508310933186623
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  152  <|@ instruction rdx|DWORD[.] = MOV [r8|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  154  <|@ instruction TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr  156  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B26" 
    xhandlers
    flags 
    probability 4576508310933186623
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  168  <|@ instruction rsi|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  170  <|@ instruction rbx|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  172  <|@ instruction CMP (x: rbx|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  174  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B30" 
    xhandlers
    flags 
    probability 4572004711305816127
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B26 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4572004711305816127
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  178  <|@ instruction TEST (x: rbx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  180  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4567501111678445631
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  192  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@44b93d59 encoding: base: 0 shift: 3 <|@ <|@
      nr  194  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@44b93d59 encoding: base: 0 shift: 3 <|@ <|@
      nr  196  <|@ instruction rsi|DWORD = ARRAY_EQUALS (~array1Value: rax|QWORD[.], ~array2Value: rdx|QWORD[.], ~lengthValue: rbx|DWORD) {temp1: r10|QWORD[*], temp2: r11|QWORD[*], temp3: r8|QWORD, temp4: r9|QWORD, temp5: -, tempXMM: -, vectorTemp1: xmm0|DOUBLE, vectorTemp2: xmm1|DOUBLE} arrayBaseOffset: 16 arrayIndexScale: 2 kind: char <|@ <|@
      nr  198  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  200  <|@ instruction BRANCH trueDestinationProbability: 0.06693849813115868 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors 
    xhandlers
    flags 
    probability 4567142676828642628
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  210  <|@ instruction rax|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors 
    xhandlers
    flags 
    probability 4568553107392593848
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  270  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  272  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors 
    xhandlers
    flags 
    probability 4567501111678445631
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  186  <|@ instruction rax|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  188  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B30" 
    xhandlers
    flags 
    probability 4566906146217097498
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  118  <|@ instruction stack:52|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  120  <|@ instruction JUMP ~[] destination: B14 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" 
    xhandlers
    flags 
    probability 4566682091735523695
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  254  <|@ instruction r10|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD <|@ <|@
      nr  256  <|@ instruction rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors 
    xhandlers
    flags 
    probability 4564660372334116583
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  510  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  512  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B32" "B38" 
    successors 
    xhandlers
    flags 
    probability 4550579685075311074
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  322  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@44b93d59 encoding: base: 0 shift: 3 <|@ <|@
      nr  324  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction rdx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.util.HashMap.getNode(HashMap.java:576) [bci: 94]
locals: - - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$TreeNode.getTreeNode(int, Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:94] <|@ <|@
      nr  330  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B30" 
    xhandlers
    flags 
    probability 4549866981613678508
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  204  <|@ instruction r10|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD <|@ <|@
      nr  206  <|@ instruction JUMP ~[] destination: B24 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  572  <|@ instruction r10|DWORD = MOVE input: int[-123931|0xfffffffffffe1be5] <|@ <|@
      nr  574  <|@ instruction JUMP ~[] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" "B9" "B17" "B19" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  578  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  580  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  582  <|@ st <@st|@reference-map: [rcx:0, rsi:0]
live-base-pointers: []
java.util.HashMap.getNode(HashMap.java:569) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  144  <|@ instruction r10|DWORD = MOVE input: int[-130571|0xfffffffffffe01f5] <|@ <|@
      nr  148  <|@ instruction JUMP ~[] destination: B17 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   84  <|@ instruction r10|DWORD = MOVE input: int[-129299|0xfffffffffffe06ed] <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B9 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  420  <|@ instruction MOV [r15|QWORD + 668] y: -143115 size: DWORD <|@ <|@
      nr  422  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  424  <|@ st <@st|@reference-map: [rcx:0, r10:0]
live-base-pointers: []
java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
locals: - stack:28|DWORD rcx|QWORD[.] - - r10|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:98] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  160  <|@ instruction r10|DWORD = MOVE input: int[-132619|0xfffffffffffdf9f5] <|@ <|@
      nr  162  <|@ instruction rdx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  164  <|@ instruction JUMP ~[] destination: B19 -> B73 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #20         // table:java.util.HashMap$Node[]
     4: dup           
     5: astore_3      
     6: ifnull        146
     9: aload_3       
    10: arraylength   
    11: dup           
    12: istore        6
    14: ifle          146
    17: aload_3       
    18: iload         6
    20: iconst_1      
    21: isub          
    22: iload_1       
    23: iand          
    24: aaload        
    25: dup           
    26: astore        4
    28: ifnull        146
    31: aload         4
    33: getfield      #33         // java.util.HashMap$Node.hash:int
    36: iload_1       
    37: if_icmpne     68
    40: aload         4
    42: getfield      #34         // java.util.HashMap$Node.key:java.lang.Object
    45: dup           
    46: astore        7
    48: aload_2       
    49: if_acmpeq     65
    52: aload_2       
    53: ifnull        68
    56: aload_2       
    57: aload         7
    59: invokevirtual #35         // java.lang.Object.equals:(java.lang.Object)boolean
    62: ifeq          68
    65: aload         4
    67: areturn       
    68: aload         4
    70: getfield      #36         // java.util.HashMap$Node.next:java.util.HashMap$Node
    73: dup           
    74: astore        5
    76: ifnull        146
    79: aload         4
    81: instanceof    #50         // java.util.HashMap$TreeNode
    84: ifeq          98
    87: aload         4
    89: checkcast     #50         // java.util.HashMap$TreeNode
    92: iload_1       
    93: aload_2       
    94: invokevirtual #37         // java.util.HashMap$TreeNode.getTreeNode:(int, java.lang.Object)java.util.HashMap$TreeNode
    97: areturn       
    98: aload         5
   100: getfield      #33         // java.util.HashMap$Node.hash:int
   103: iload_1       
   104: if_icmpne     135
   107: aload         5
   109: getfield      #34         // java.util.HashMap$Node.key:java.lang.Object
   112: dup           
   113: astore        7
   115: aload_2       
   116: if_acmpeq     132
   119: aload_2       
   120: ifnull        135
   123: aload_2       
   124: aload         7
   126: invokevirtual #35         // java.lang.Object.equals:(java.lang.Object)boolean
   129: ifeq          135
   132: aload         5
   134: areturn       
   135: aload         5
   137: getfield      #36         // java.util.HashMap$Node.next:java.util.HashMap$Node
   140: dup           
   141: astore        5
   143: ifnonnull     98
   146: aconst_null   
   147: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec3848896c24308b462485c00f84bc030000895424248b1cc50c000000448bd341ffca4423d2413bda0f862206000048c1e003468b5490104585d20f84a302000048894c2418468b1cd508000000423b14d50c0000000f8535000000468b04d510000000418bd848c1e303458bca49c1e103483bd90f8586020000498bc1488b6c24304883c438850500000000c5f877c3428b04d51800000085c00f84100300004181fbaddeadde0f847505000048c1e0034c8bd066908b542424413b520c0f856a000000458b5a10458bc349c1e0034c3bc10f84f50100008b710881feaddeadde0f846a0000004c89542410488b1cf5c0010000488b4340488bf1498bd0ffd09085c04c8b5424100f85dc020000488b4c2418418b421885c00f84e604000085050000000048c1e0034c8bd0eb88418b421885c00f84e302000085050000000048c1e0034c8bd0488b4c2418e965ffffff4c3b4424180f848e0200004585db0f845e01000042813cdd08000000addeadde488b4c2418759b8b410c418504c4428b34dd0c00000085f60f84eb0400008b14f50c000000448b1cc50c000000443bda0f856cffffff4585db0f843a02000048c1e00348c1e6034c8d40104c8d4e10418bdbd1e38bd383e21f83e3e00f845e0000004d8d04184d8d0c1948f7db0f1f840000000000c4c17e6f0418c4c17e6f0c19c5fdefc1c4e27d17c00f85b40000004883c32075df85d20f849f000000c4c17e6f4410e0c4c17e6f4c11e0c5fdefc1c4e27d17c00f8589000000e97d0000008bda83e20783e3f80f84410000004d8d04184d8d0c1948f7db660f1f440000660f1f440000498b3c18493b3c190f85510000004883c30875ec85d20f843c000000498b7c10f8493b7c11f87537eb2e8bdaf7c2040000007410418b38413b3975234d8d40044d8d4904f7c202000000740c410fb738410fb7193bfb7507ba01000000eb0233d28bc24c89542410e93efeffff488b4c2418e946feffff498bc2488b6c24304883c438850500000000c5f877c348b80000000000000000488b6c24304883c438850500000000c5f877c34885c90f84690300008b410881f8addeadde0f854e000000483bd90f84df0000004585c00f84c202000042813cc508000000addeadde0f84fe00000044895c240c428b34d51800000085f60f8468020000817c240caddeadde0f84c30200008bc6e947fdffff4c894c241044895c240c4489542408488b04c5c00100004c8b4040488bf1488bd3488bd8498bc0ffd09085c00f845e020000488b442410488b6c24304883c438850500000000c5f877c348b80000000000000000488b6c24304883c438850500000000c5f877c348b80000000000000000488b6c24304883c438850500000000c5f877c3498bc2488b6c24304883c438850500000000c5f877c34c894c2410488b442410488b6c24304883c438850500000000c5f877c348b80000000000000000488b6c24304883c438850500000000c5f877c34c894c241044895c240c44895424088b410c85c00f8416020000428b14c50c00000085d20f842e0200008b34d50c0000008b1cc50c0000003bde0f8405000000e9c2feffff85db0f844f01000048c1e00348c1e2034c8d50104c8d5a10448bc341d1e0418bf083e61f4183e0e00f84640000004f8d14024f8d1c0349f7d80f1f80000000000f1f8000000000c4817e6f0402c4817e6f0c03c5fdefc1c4e27d17c00f85b60000004983c02075df85f60f84a1000000c4c17e6f4432e0c4c17e6f4c33e0c5fdefc1c4e27d17c00f858b000000e97f000000448bc683e6074183e0f80f843f0000004f8d14024f8d1c0349f7d866660f1f8400000000004f8b0c024f3b0c030f85530000004983c00875ec85f60f843e0000004d8b4c32f84d3b4c33f87539eb30448bc6f7c6040000007410458b0a453b0b75244d8d52044d8d5b04f7c602000000740d450fb70a450fb703453bc87507be01000000eb0233f685f60f84a5000000488b442410488b6c24304883c438850500000000c5f877c348b80000000000000000488b6c24304883c438850500000000c5f877c3498bc1488b6c24304883c438850500000000c5f877c344895c240ce94bfdffff448b542408488b4c2418e93cfdffff48b80000000000000000488b6c24304883c438850500000000c5f877c349c1e203498bf28b542424e80000000090488b6c24304883c438850500000000c5f877c3448b542408e9f1fcffff41bae51bfeff4589979c0200004d89a7a8020000e8000000009041baf501feffebe441baed06feffebdc41c7879c020000f5d0fdff4d89a7a8020000e8000000009041baf5f9fdff8b542424ebb8e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@28eeb4db slotKind: QWORD  <||@
  Comment 48 6 rax|DWORD[.] = MOV [rsi|QWORD[.] + 36] size: DWORD  <||@
  Comment 51 8 TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 53 10 BRANCH trueDestinationProbability: 0.02293902936868141 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 59 block B2 null  <||@
  Comment 59 18 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 59 20 stack:28|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 63 22 rbx|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 70 24 r10|DWORD = DEC rbx|DWORD size: DWORD  <||@
  Comment 76 26 r10|DWORD = AND (x: rdx|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 79 28 CMP (x: rbx|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 82 30 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B72  <||@
  Comment 88 block B3 null  <||@
  Comment 88 32 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 88 34 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@44b93d59 encoding: base: 0 shift: 3  <||@
  Comment 92 36 r10|DWORD[.] = MOV [rax|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD  <||@
  Comment 97 38 TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 100 40 BRANCH trueDestinationProbability: 0.0762231274461013 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5  <||@
  Comment 106 block B5 null  <||@
  Comment 106 48 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 106 50 stack:40|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 111 52 r11|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 119 54 CMP (x: rdx|DWORD, y: [r10|DWORD[.] * 8 + 12]) size: DWORD  <||@
  Comment 127 56 BRANCH trueDestinationProbability: 0.8156496292108676 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B36  <||@
  Comment 133 block B6 null  <||@
  Comment 133 58 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 133 60 r8|DWORD[.] = MOV [r10|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 141 62 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@44b93d59 encoding: base: 0 shift: 3  <||@
  Comment 148 64 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@44b93d59 encoding: base: 0 shift: 3  <||@
  Comment 155 66 CMP (x: rbx|QWORD[.], y: rcx|QWORD[.]) size: QWORD  <||@
  Comment 158 68 BRANCH trueDestinationProbability: 0.9040067186327908 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8  <||@
  Comment 164 block B7 null  <||@
  Comment 164 70 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 164 72 rax|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 167 74 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 176 12  <||@
  Comment 186 block B36 null  <||@
  Comment 186 296 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 186 298 rax|DWORD[.] = MOV [r10|DWORD[.] * 8 + 24] size: DWORD  <||@
  Comment 194 300 TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 196 302 BRANCH trueDestinationProbability: 0.1533361397600505 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38  <||@
  Comment 202 block B38 null  <||@
  Comment 202 310 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 202 312 CMP r11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed}  <||@
  Comment 202 {meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed}}  <||@
  Comment 209 314 BRANCH trueDestinationProbability: 0.0011187072715972413 condition: = trueDestination: B38 -> B40 falseDestination: B38 -> B42  <||@
  Comment 215 block B42 null  <||@
  Comment 215 336 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 215 338 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@44b93d59 encoding: base: 0 shift: 3  <||@
  Comment 219 340 r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 222 344 JUMP ~[] destination: B42 -> B43  <||@
  Comment 222 block B43 loop 0 depth 1 header:73|LoopBegin  <||@
  Comment 222 346 [] = LABEL numbPhis: 1 align: true label: ?  <||@
  Comment 224 342 rdx|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 228 348 CMP (x: rdx|DWORD, y: [r10|QWORD[.] + 12]) size: DWORD state [bci:98]  <||@
  Comment 228 [rcx:0, r10:0, stack:24]at java.util.HashMap.getNode(HashMap.java:578) [bci: 98, duringCall: false, rethrow: false]
              |0  |1          |2             |3  |4  |5             |6  |7 
     locals:  |-  |rdx|DWORD  |rcx|QWORD[.]  |-  |-  |r10|QWORD[.]  |-  |-   <||@
  Comment 228 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 232 350 BRANCH trueDestinationProbability: 0.8091668758741886 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B69  <||@
  Comment 238 block B44 loop 0 depth 1 header:73|LoopBegin  <||@
  Comment 238 352 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 238 354 r11|DWORD[.] = MOV [r10|QWORD[.] + 16] size: DWORD  <||@
  Comment 242 356 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@44b93d59 encoding: base: 0 shift: 3  <||@
  Comment 249 358 CMP (x: r8|QWORD[.], y: rcx|QWORD[.]) size: QWORD  <||@
  Comment 252 360 BRANCH trueDestinationProbability: 0.7707650031025618 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46  <||@
  Comment 258 block B46 loop 0 depth 1 header:73|LoopBegin  <||@
  Comment 258 368 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 258 370 rsi|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:98]  <||@
  Comment 258 [rcx:0, r8:0, r10:0, r11:0, stack:24]at java.util.HashMap.getNode(HashMap.java:578) [bci: 98, duringCall: false, rethrow: false]
              |0  |1          |2             |3  |4  |5             |6  |7 
     locals:  |-  |rdx|DWORD  |rcx|QWORD[.]  |-  |-  |r10|QWORD[.]  |-  |-   <||@
  Comment 258 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 261 372 CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 261 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 267 374 BRANCH trueDestinationProbability: 0.31013147718484146 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B60  <||@
  Comment 273 block B60 loop 0 depth 1 header:73|LoopBegin  <||@
  Comment 273 470 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 273 472 stack:48|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 278 474 rbx|QWORD = MOV [rsi|DWORD * 8 + 448] size: QWORD  <||@
  Comment 286 476 rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD  <||@
  Comment 290 478 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 293 480 rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 296 482 rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:126]  <||@
  Comment 296 {HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 296 10  <||@
  Comment 298 [stack:16, stack:24]at java.util.HashMap.getNode(HashMap.java:579) [bci: 126, duringCall: true, rethrow: false]
              |0  |1               |2                  |3  |4  |5                  |6  |7 
     locals:  |-  |stack:28|DWORD  |stack:40|QWORD[.]  |-  |-  |stack:48|QWORD[.]  |-  |-   <||@
  Comment 299 484 JUMP ~[] destination: B60 -> B61  <||@
  Comment 299 block B61 loop 0 depth 1 header:73|LoopBegin  <||@
  Comment 299 486 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 299 488 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 301 494 r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 306 490 BRANCH trueDestinationProbability: 0.03480278422273782 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B68  <||@
  Comment 312 block B62 loop 0 depth 1 header:73|LoopBegin  <||@
  Comment 312 492 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 312 496 rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 317 498 JUMP ~[] destination: B62 -> B63  <||@
  Comment 317 block B63 loop 0 depth 1 header:73|LoopBegin  <||@
  Comment 317 500 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 317 502 rax|DWORD[.] = MOV [r10|QWORD[.] + 24] size: DWORD  <||@
  Comment 321 504 TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 323 506 BRANCH trueDestinationProbability: 0.3139429194691874 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65  <||@
  Comment 329 block B65 loop 0 depth 1 header:73|LoopBegin  <||@
  Comment 329 514 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 329 516 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:129]  <||@
  Comment 329 [rax:0, rcx:0, r10:0, stack:24]at java.util.HashMap.getNode(HashMap.java:579) [bci: 129, duringCall: false, rethrow: false]
              |0           |1               |2             |3  |4  |5             |6  |7 
     locals:  |-           |stack:28|DWORD  |rcx|QWORD[.]  |-  |-  |r10|QWORD[.]  |-  |- 
     stack:   |int[0|0x0]  |                |              |   |   |              |   |    <||@
  Comment 329 {infopoint: SAFEPOINT}  <||@
  Comment 329 11  <||@
  Comment 335 518 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@44b93d59 encoding: base: 0 shift: 3  <||@
  Comment 339 520 r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 342 524 JUMP ~[] destination: B65 -> B43  <||@
  Comment 344 block B69 loop 0 depth 1 header:73|LoopBegin  <||@
  Comment 344 542 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 344 544 rax|DWORD[.] = MOV [r10|QWORD[.] + 24] size: DWORD  <||@
  Comment 348 546 TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 350 548 BRANCH trueDestinationProbability: 0.3139429194691874 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71  <||@
  Comment 356 block B71 loop 0 depth 1 header:73|LoopBegin  <||@
  Comment 356 556 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 356 558 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:98]  <||@
  Comment 356 [rax:0, r10:0, stack:24]at java.util.HashMap.getNode(HashMap.java:578) [bci: 98, duringCall: false, rethrow: false]
              |0  |1               |2                  |3  |4  |5             |6  |7 
     locals:  |-  |stack:28|DWORD  |stack:40|QWORD[.]  |-  |-  |r10|QWORD[.]  |-  |-   <||@
  Comment 356 {infopoint: SAFEPOINT}  <||@
  Comment 356 11  <||@
  Comment 362 560 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@44b93d59 encoding: base: 0 shift: 3  <||@
  Comment 366 562 r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 369 564 rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 374 568 JUMP ~[] destination: B71 -> B43  <||@
  Comment 379 block B47 loop 0 depth 1 header:73|LoopBegin  <||@
  Comment 379 376 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 379 378 CMP (x: r8|QWORD[.], y: stack:40|QWORD[.]) size: QWORD  <||@
  Comment 384 380 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B47 -> B68 falseDestination: B47 -> B49  <||@
  Comment 390 block B49 loop 0 depth 1 header:73|LoopBegin  <||@
  Comment 390 386 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 390 388 TEST (x: r11|DWORD[.], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 393 390 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51  <||@
  Comment 399 block B51 loop 0 depth 1 header:73|LoopBegin  <||@
  Comment 399 398 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 399 400 CMP [r11|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 399 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 411 406 rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 416 402 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B63  <||@
  Comment 418 block B52 loop 0 depth 1 header:73|LoopBegin  <||@
  Comment 418 404 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 418 408 rax|DWORD[.] = MOV [rcx|QWORD[.] + 12] size: DWORD  <||@
  Comment 421 410 NULLCHECK [r12|QWORD[*] + rax|DWORD[.] * 8] state [bci:98]  <||@
  Comment 421 [rax:0, rcx:0, r10:0, r11:0, stack:24]at java.util.HashMap.getNode(HashMap.java:578) [bci: 98, duringCall: false, rethrow: false]
              |0  |1               |2             |3  |4  |5             |6  |7 
     locals:  |-  |stack:28|DWORD  |rcx|QWORD[.]  |-  |-  |r10|QWORD[.]  |-  |-   <||@
  Comment 421 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 425 412 rsi|DWORD[.] = MOV [r11|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 433 414 TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 435 416 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54  <||@
  Comment 441 block B54 loop 0 depth 1 header:73|LoopBegin  <||@
  Comment 441 426 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 441 428 rdx|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 448 430 r11|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 456 432 CMP (x: r11|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 459 434 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B63  <||@
  Comment 465 block B55 loop 0 depth 1 header:73|LoopBegin  <||@
  Comment 465 436 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 465 438 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 468 440 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B55 -> B68 falseDestination: B55 -> B57  <||@
  Comment 474 block B57 loop 0 depth 1 header:73|LoopBegin  <||@
  Comment 474 446 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 474 448 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@44b93d59 encoding: base: 0 shift: 3  <||@
  Comment 478 450 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@44b93d59 encoding: base: 0 shift: 3  <||@
  Comment 482 452 rdx|DWORD = ARRAY_EQUALS (~array1Value: rax|QWORD[.], ~array2Value: rsi|QWORD[.], ~lengthValue: r11|DWORD) {temp1: r8|QWORD[*], temp2: r9|QWORD[*], temp3: rbx|QWORD, temp4: rdi|QWORD, temp5: -, tempXMM: -, vectorTemp1: xmm0|DOUBLE, vectorTemp2: xmm1|DOUBLE} arrayBaseOffset: 16 arrayIndexScale: 2 kind: char  <||@
  Comment 737 454 rax|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 739 456 stack:48|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 744 458 JUMP ~[] destination: B57 -> B61  <||@
  Comment 749 block B50 loop 0 depth 1 header:73|LoopBegin  <||@
  Comment 749 392 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 749 394 rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 754 396 JUMP ~[] destination: B50 -> B63  <||@
  Comment 759 block B45 null  <||@
  Comment 759 362 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 759 364 rax|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 762 366 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 771 12  <||@
  Comment 781 block B4 null  <||@
  Comment 781 42 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 781 44 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 791 46 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 800 12  <||@
  Comment 810 block B8 null  <||@
  Comment 810 76 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 810 78 TEST (x: rcx|QWORD[.], y: rcx|QWORD[.]) size: QWORD  <||@
  Comment 813 80 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10  <||@
  Comment 819 block B10 null  <||@
  Comment 819 88 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 819 90 rax|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD  <||@
  Comment 822 92 CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 822 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 828 94 BRANCH trueDestinationProbability: 0.5841828066598709 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B28  <||@
  Comment 834 block B11 null  <||@
  Comment 834 96 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 834 98 CMP (x: rbx|QWORD[.], y: rcx|QWORD[.]) size: QWORD  <||@
  Comment 837 100 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13  <||@
  Comment 843 block B13 null  <||@
  Comment 843 110 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 843 112 TEST (x: r8|DWORD[.], y: r8|DWORD[.]) size: DWORD  <||@
  Comment 846 114 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15  <||@
  Comment 852 block B15 null  <||@
  Comment 852 122 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 852 124 CMP [r8|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 852 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 864 126 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B27  <||@
  Comment 870 block B27 null  <||@
  Comment 870 220 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 870 222 stack:52|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 875 224 JUMP ~[] destination: B27 -> B30  <||@
  Comment 875 block B30 null  <||@
  Comment 875 260 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 875 262 rsi|DWORD[.] = MOV [r10|DWORD[.] * 8 + 24] size: DWORD  <||@
  Comment 883 264 TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 885 266 BRANCH trueDestinationProbability: 0.1533361397600505 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32  <||@
  Comment 891 block B32 null  <||@
  Comment 891 274 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 891 276 CMP stack:52|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed}  <||@
  Comment 891 {meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed}}  <||@
  Comment 899 278 BRANCH trueDestinationProbability: 0.0011187072715972413 condition: = trueDestination: B32 -> B40 falseDestination: B32 -> B34  <||@
  Comment 905 block B34 null  <||@
  Comment 905 284 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 905 286 rax|DWORD[.] = MOVE rsi|DWORD[.] moveKind: DWORD  <||@
  Comment 907 288 JUMP ~[] destination: B34 -> B42  <||@
  Comment 912 block B28 null  <||@
  Comment 912 226 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 912 228 stack:48|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 917 230 stack:52|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 922 232 stack:56|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 927 234 rax|QWORD = MOV [rax|DWORD * 8 + 448] size: QWORD  <||@
  Comment 935 236 r8|QWORD = MOV [rax|QWORD + 64] size: QWORD  <||@
  Comment 939 238 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 942 240 rdx|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 945 242 rbx|QWORD = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 948 244 rax|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 951 246 rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:59]  <||@
  Comment 951 {HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 951 10  <||@
  Comment 953 [stack:8, stack:16, stack:24]at java.util.HashMap.getNode(HashMap.java:572) [bci: 59, duringCall: true, rethrow: false]
              |0  |1               |2                  |3  |4                  |5  |6  |7 
     locals:  |-  |stack:28|DWORD  |stack:40|QWORD[.]  |-  |stack:48|QWORD[.]  |-  |-  |-   <||@
  Comment 954 248 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 956 250 BRANCH trueDestinationProbability: 0.06693849813115868 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B35  <||@
  Comment 962 block B35 null  <||@
  Comment 962 290 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 962 292 rax|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 967 294 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 976 12  <||@
  Comment 986 block B37 null  <||@
  Comment 986 304 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 986 306 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 996 308 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1005 12  <||@
  Comment 1015 block B1 null  <||@
  Comment 1015 12 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1015 14 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1025 16 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1034 12  <||@
  Comment 1044 block B68 null  <||@
  Comment 1044 536 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1044 538 rax|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1047 540 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1056 12  <||@
  Comment 1066 block B12 null  <||@
  Comment 1066 102 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1066 104 stack:48|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 1071 106 rax|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1076 108 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1085 12  <||@
  Comment 1095 block B70 null  <||@
  Comment 1095 550 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1095 552 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1105 554 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1114 12  <||@
  Comment 1124 block B16 null  <||@
  Comment 1124 128 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1124 130 stack:48|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 1129 132 stack:52|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1134 134 stack:56|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 1139 136 rax|DWORD[.] = MOV [rcx|QWORD[.] + 12] size: DWORD  <||@
  Comment 1142 138 TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 1144 140 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18  <||@
  Comment 1150 block B18 null  <||@
  Comment 1150 150 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1150 152 rdx|DWORD[.] = MOV [r8|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 1158 154 TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 1160 156 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20  <||@
  Comment 1166 block B20 null  <||@
  Comment 1166 166 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1166 168 rsi|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 1173 170 rbx|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 1180 172 CMP (x: rbx|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 1182 174 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B26  <||@
  Comment 1188 block B26 null  <||@
  Comment 1188 214 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1188 218 JUMP ~[] destination: B26 -> B30  <||@
  Comment 1193 block B21 null  <||@
  Comment 1193 176 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1193 178 TEST (x: rbx|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 1195 180 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23  <||@
  Comment 1201 block B23 null  <||@
  Comment 1201 190 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1201 192 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@44b93d59 encoding: base: 0 shift: 3  <||@
  Comment 1205 194 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@44b93d59 encoding: base: 0 shift: 3  <||@
  Comment 1209 196 rsi|DWORD = ARRAY_EQUALS (~array1Value: rax|QWORD[.], ~array2Value: rdx|QWORD[.], ~lengthValue: rbx|DWORD) {temp1: r10|QWORD[*], temp2: r11|QWORD[*], temp3: r8|QWORD, temp4: r9|QWORD, temp5: -, tempXMM: -, vectorTemp1: xmm0|DOUBLE, vectorTemp2: xmm1|DOUBLE} arrayBaseOffset: 16 arrayIndexScale: 2 kind: char  <||@
  Comment 1475 198 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 1477 200 BRANCH trueDestinationProbability: 0.06693849813115868 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25  <||@
  Comment 1483 block B25 null  <||@
  Comment 1483 208 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1483 210 rax|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1488 212 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1497 12  <||@
  Comment 1507 block B31 null  <||@
  Comment 1507 268 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1507 270 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1517 272 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1526 12  <||@
  Comment 1536 block B22 null  <||@
  Comment 1536 182 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1536 186 rax|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 1539 188 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1548 12  <||@
  Comment 1558 block B14 null  <||@
  Comment 1558 116 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1558 118 stack:52|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1563 120 JUMP ~[] destination: B14 -> B30  <||@
  Comment 1568 block B29 null  <||@
  Comment 1568 252 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1568 254 r10|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD  <||@
  Comment 1573 256 rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1578 258 JUMP ~[] destination: B29 -> B30  <||@
  Comment 1583 block B64 null  <||@
  Comment 1583 508 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1583 510 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1593 512 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1602 12  <||@
  Comment 1612 block B40 null  <||@
  Comment 1612 320 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1612 322 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@44b93d59 encoding: base: 0 shift: 3  <||@
  Comment 1616 324 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1619 326 rdx|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 1623 328 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$TreeNode.getTreeNode(int, Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:94]  <||@
  Comment 1623 {HotSpotMethod<HashMap$TreeNode.getTreeNode(int, Object)>}  <||@
  Comment 1623 9  <||@
  Comment 1628 []at java.util.HashMap.getNode(HashMap.java:576) [bci: 94, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-   <||@
  Comment 1629 330 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1638 12  <||@
  Comment 1648 block B24 null  <||@
  Comment 1648 202 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1648 204 r10|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD  <||@
  Comment 1653 206 JUMP ~[] destination: B24 -> B30  <||@
  Comment 1658 block B72 null  <||@
  Comment 1658 570 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1658 572 r10|DWORD = MOVE input: int[-123931|0xfffffffffffe1be5]  <||@
  Comment 1664 574 JUMP ~[] destination: B72 -> B73  <||@
  Comment 1664 block B73 null  <||@
  Comment 1664 576 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1664 578 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1671 580 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1678 582 DEOPT info [bci:0]  <||@
  Comment 1678 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1683 [rcx:0, rsi:0]at java.util.HashMap.getNode(HashMap.java:569) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2             |3  |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |rcx|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 1684 block B17 null  <||@
  Comment 1684 142 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1684 144 r10|DWORD = MOVE input: int[-130571|0xfffffffffffe01f5]  <||@
  Comment 1690 148 JUMP ~[] destination: B17 -> B73  <||@
  Comment 1692 block B9 null  <||@
  Comment 1692 82 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1692 84 r10|DWORD = MOVE input: int[-129299|0xfffffffffffe06ed]  <||@
  Comment 1698 86 JUMP ~[] destination: B9 -> B73  <||@
  Comment 1700 block B53 null  <||@
  Comment 1700 418 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1700 420 MOV [r15|QWORD + 668] y: -143115 size: DWORD  <||@
  Comment 1711 422 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1718 424 DEOPT info [bci:98]  <||@
  Comment 1718 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1723 [rcx:0, r10:0]at java.util.HashMap.getNode(HashMap.java:578) [bci: 98, duringCall: false, rethrow: false]
              |0  |1               |2             |3  |4  |5             |6  |7 
     locals:  |-  |stack:28|DWORD  |rcx|QWORD[.]  |-  |-  |r10|QWORD[.]  |-  |-   <||@
  Comment 1724 block B19 null  <||@
  Comment 1724 158 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1724 160 r10|DWORD = MOVE input: int[-132619|0xfffffffffffdf9f5]  <||@
  Comment 1730 162 rdx|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 1734 164 JUMP ~[] destination: B19 -> B73  <||@
  Comment 1736 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1736 4  <||@
  Comment 1742 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 1742 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-1381[java.util.HashMap.getNode(int, Object)]"
  method "HotSpotCompilation-1381[java.util.HashMap.getNode(int, Object)]"
  date 1527005058674
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 1071ecca0 448b560849c1e203493bc20f85af9161ff900f1f80000000000f1f800000000089842400c0feff4883ec3848896c24308b462485c00f84bc030000895424248b1cc50c000000448bd341ffca4423d2413bda0f862206000048c1e003468b5490104585d20f84a302000048894c2418468b1cd508000000423b14d50c0000000f8535000000468b04d510000000418bd848c1e303458bca49c1e103483bd90f8586020000498bc1488b6c24304883c4388505b0226afdc5f877c3428b04d51800000085c00f84100300004181fb826500f80f847505000048c1e0034c8bd066908b542424413b520c0f856a000000458b5a10458bc349c1e0034c3bc10f84f50100008b710881feda0200f80f846a0000004c89542410488b1cf5c0010000488b4340488bf1498bd0ffd09085c04c8b5424100f85dc020000488b4c2418418b421885c00f84e6040000850517226afd48c1e0034c8bd0eb88418b421885c00f84e30200008505fc216afd48c1e0034c8bd0488b4c2418e965ffffff4c3b4424180f848e0200004585db0f845e01000042813cdd08000000da0200f8488b4c2418759b8b410c418504c4428b34dd0c00000085f60f84eb0400008b14f50c000000448b1cc50c000000443bda0f856cffffff4585db0f843a02000048c1e00348c1e6034c8d40104c8d4e10418bdbd1e38bd383e21f83e3e00f845e0000004d8d04184d8d0c1948f7db0f1f840000000000c4c17e6f0418c4c17e6f0c19c5fdefc1c4e27d17c00f85b40000004883c32075df85d20f849f000000c4c17e6f4410e0c4c17e6f4c11e0c5fdefc1c4e27d17c00f8589000000e97d0000008bda83e20783e3f80f84410000004d8d04184d8d0c1948f7db660f1f440000660f1f440000498b3c18493b3c190f85510000004883c30875ec85d20f843c000000498b7c10f8493b7c11f87537eb2e8bdaf7c2040000007410418b38413b3975234d8d40044d8d4904f7c202000000740c410fb738410fb7193bfb7507ba01000000eb0233d28bc24c89542410e93efeffff488b4c2418e946feffff498bc2488b6c24304883c43885055d206afdc5f877c348b80000000000000000488b6c24304883c438850540206afdc5f877c34885c90f84690300008b410881f8da0200f80f854e000000483bd90f84df0000004585c00f84c202000042813cc508000000da0200f80f84fe00000044895c240c428b34d51800000085f60f8468020000817c240c826500f80f84c30200008bc6e947fdffff4c894c241044895c240c4489542408488b04c5c00100004c8b4040488bf1488bd3488bd8498bc0ffd09085c00f845e020000488b442410488b6c24304883c4388505901f6afdc5f877c348b80000000000000000488b6c24304883c4388505731f6afdc5f877c348b80000000000000000488b6c24304883c4388505561f6afdc5f877c3498bc2488b6c24304883c4388505401f6afdc5f877c34c894c2410488b442410488b6c24304883c4388505231f6afdc5f877c348b80000000000000000488b6c24304883c4388505061f6afdc5f877c34c894c241044895c240c44895424088b410c85c00f8416020000428b14c50c00000085d20f842e0200008b34d50c0000008b1cc50c0000003bde0f8405000000e9c2feffff85db0f844f01000048c1e00348c1e2034c8d50104c8d5a10448bc341d1e0418bf083e61f4183e0e00f84640000004f8d14024f8d1c0349f7d80f1f80000000000f1f8000000000c4817e6f0402c4817e6f0c03c5fdefc1c4e27d17c00f85b60000004983c02075df85f60f84a1000000c4c17e6f4432e0c4c17e6f4c33e0c5fdefc1c4e27d17c00f858b000000e97f000000448bc683e6074183e0f80f843f0000004f8d14024f8d1c0349f7d866660f1f8400000000004f8b0c024f3b0c030f85530000004983c00875ec85f60f843e0000004d8b4c32f84d3b4c33f87539eb30448bc6f7c6040000007410458b0a453b0b75244d8d52044d8d5b04f7c602000000740d450fb70a450fb703453bc87507be01000000eb0233f685f60f84a5000000488b442410488b6c24304883c4388505871d6afdc5f877c348b80000000000000000488b6c24304883c43885056a1d6afdc5f877c3498bc1488b6c24304883c4388505541d6afdc5f877c344895c240ce94bfdffff448b542408488b4c2418e93cfdffff48b80000000000000000488b6c24304883c43885051e1d6afdc5f877c349c1e203498bf28b542424e8a48d61ff90488b6c24304883c4388505fa1c6afdc5f877c3448b542408e9f1fcffff41bae51bfeff4589979c0200004d89a7a8020000e8cba261ff9041baf501feffebe441baed06feffebdc41c7879c020000f5d0fdff4d89a7a8020000e8a3a261ff9041baf5f9fdff8b542424ebb8e8b3d2a5ff90e88da161ff90f4f4f4f4f4f4f4f4f4f4f4f448bb0000000000000000e9fbfffffff4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@28eeb4db slotKind: QWORD  <||@
  Comment 48 6 rax|DWORD[.] = MOV [rsi|QWORD[.] + 36] size: DWORD  <||@
  Comment 51 8 TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 53 10 BRANCH trueDestinationProbability: 0.02293902936868141 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 59 block B2 null  <||@
  Comment 59 18 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 59 20 stack:28|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 63 22 rbx|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 70 24 r10|DWORD = DEC rbx|DWORD size: DWORD  <||@
  Comment 76 26 r10|DWORD = AND (x: rdx|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 79 28 CMP (x: rbx|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 82 30 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B72  <||@
  Comment 88 block B3 null  <||@
  Comment 88 32 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 88 34 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@44b93d59 encoding: base: 0 shift: 3  <||@
  Comment 92 36 r10|DWORD[.] = MOV [rax|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD  <||@
  Comment 97 38 TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 100 40 BRANCH trueDestinationProbability: 0.0762231274461013 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5  <||@
  Comment 106 block B5 null  <||@
  Comment 106 48 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 106 50 stack:40|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 111 52 r11|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 119 54 CMP (x: rdx|DWORD, y: [r10|DWORD[.] * 8 + 12]) size: DWORD  <||@
  Comment 127 56 BRANCH trueDestinationProbability: 0.8156496292108676 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B36  <||@
  Comment 133 block B6 null  <||@
  Comment 133 58 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 133 60 r8|DWORD[.] = MOV [r10|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 141 62 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@44b93d59 encoding: base: 0 shift: 3  <||@
  Comment 148 64 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@44b93d59 encoding: base: 0 shift: 3  <||@
  Comment 155 66 CMP (x: rbx|QWORD[.], y: rcx|QWORD[.]) size: QWORD  <||@
  Comment 158 68 BRANCH trueDestinationProbability: 0.9040067186327908 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8  <||@
  Comment 164 block B7 null  <||@
  Comment 164 70 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 164 72 rax|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 167 74 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 176 12  <||@
  Comment 186 block B36 null  <||@
  Comment 186 296 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 186 298 rax|DWORD[.] = MOV [r10|DWORD[.] * 8 + 24] size: DWORD  <||@
  Comment 194 300 TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 196 302 BRANCH trueDestinationProbability: 0.1533361397600505 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38  <||@
  Comment 202 block B38 null  <||@
  Comment 202 310 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 202 312 CMP r11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed}  <||@
  Comment 202 {meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed}}  <||@
  Comment 209 314 BRANCH trueDestinationProbability: 0.0011187072715972413 condition: = trueDestination: B38 -> B40 falseDestination: B38 -> B42  <||@
  Comment 215 block B42 null  <||@
  Comment 215 336 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 215 338 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@44b93d59 encoding: base: 0 shift: 3  <||@
  Comment 219 340 r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 222 344 JUMP ~[] destination: B42 -> B43  <||@
  Comment 222 block B43 loop 0 depth 1 header:73|LoopBegin  <||@
  Comment 222 346 [] = LABEL numbPhis: 1 align: true label: ?  <||@
  Comment 224 342 rdx|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 228 348 CMP (x: rdx|DWORD, y: [r10|QWORD[.] + 12]) size: DWORD state [bci:98]  <||@
  Comment 228 [rcx:0, r10:0, stack:24]at java.util.HashMap.getNode(HashMap.java:578) [bci: 98, duringCall: false, rethrow: false]
              |0  |1          |2             |3  |4  |5             |6  |7 
     locals:  |-  |rdx|DWORD  |rcx|QWORD[.]  |-  |-  |r10|QWORD[.]  |-  |-   <||@
  Comment 228 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 232 350 BRANCH trueDestinationProbability: 0.8091668758741886 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B69  <||@
  Comment 238 block B44 loop 0 depth 1 header:73|LoopBegin  <||@
  Comment 238 352 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 238 354 r11|DWORD[.] = MOV [r10|QWORD[.] + 16] size: DWORD  <||@
  Comment 242 356 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@44b93d59 encoding: base: 0 shift: 3  <||@
  Comment 249 358 CMP (x: r8|QWORD[.], y: rcx|QWORD[.]) size: QWORD  <||@
  Comment 252 360 BRANCH trueDestinationProbability: 0.7707650031025618 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46  <||@
  Comment 258 block B46 loop 0 depth 1 header:73|LoopBegin  <||@
  Comment 258 368 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 258 370 rsi|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:98]  <||@
  Comment 258 [rcx:0, r8:0, r10:0, r11:0, stack:24]at java.util.HashMap.getNode(HashMap.java:578) [bci: 98, duringCall: false, rethrow: false]
              |0  |1          |2             |3  |4  |5             |6  |7 
     locals:  |-  |rdx|DWORD  |rcx|QWORD[.]  |-  |-  |r10|QWORD[.]  |-  |-   <||@
  Comment 258 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 261 372 CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 261 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 267 374 BRANCH trueDestinationProbability: 0.31013147718484146 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B60  <||@
  Comment 273 block B60 loop 0 depth 1 header:73|LoopBegin  <||@
  Comment 273 470 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 273 472 stack:48|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 278 474 rbx|QWORD = MOV [rsi|DWORD * 8 + 448] size: QWORD  <||@
  Comment 286 476 rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD  <||@
  Comment 290 478 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 293 480 rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 296 482 rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:126]  <||@
  Comment 296 {HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 296 10  <||@
  Comment 298 [stack:16, stack:24]at java.util.HashMap.getNode(HashMap.java:579) [bci: 126, duringCall: true, rethrow: false]
              |0  |1               |2                  |3  |4  |5                  |6  |7 
     locals:  |-  |stack:28|DWORD  |stack:40|QWORD[.]  |-  |-  |stack:48|QWORD[.]  |-  |-   <||@
  Comment 299 484 JUMP ~[] destination: B60 -> B61  <||@
  Comment 299 block B61 loop 0 depth 1 header:73|LoopBegin  <||@
  Comment 299 486 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 299 488 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 301 494 r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 306 490 BRANCH trueDestinationProbability: 0.03480278422273782 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B68  <||@
  Comment 312 block B62 loop 0 depth 1 header:73|LoopBegin  <||@
  Comment 312 492 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 312 496 rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 317 498 JUMP ~[] destination: B62 -> B63  <||@
  Comment 317 block B63 loop 0 depth 1 header:73|LoopBegin  <||@
  Comment 317 500 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 317 502 rax|DWORD[.] = MOV [r10|QWORD[.] + 24] size: DWORD  <||@
  Comment 321 504 TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 323 506 BRANCH trueDestinationProbability: 0.3139429194691874 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65  <||@
  Comment 329 block B65 loop 0 depth 1 header:73|LoopBegin  <||@
  Comment 329 514 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 329 516 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:129]  <||@
  Comment 329 [rax:0, rcx:0, r10:0, stack:24]at java.util.HashMap.getNode(HashMap.java:579) [bci: 129, duringCall: false, rethrow: false]
              |0           |1               |2             |3  |4  |5             |6  |7 
     locals:  |-           |stack:28|DWORD  |rcx|QWORD[.]  |-  |-  |r10|QWORD[.]  |-  |- 
     stack:   |int[0|0x0]  |                |              |   |   |              |   |    <||@
  Comment 329 {infopoint: SAFEPOINT}  <||@
  Comment 329 11  <||@
  Comment 335 518 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@44b93d59 encoding: base: 0 shift: 3  <||@
  Comment 339 520 r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 342 524 JUMP ~[] destination: B65 -> B43  <||@
  Comment 344 block B69 loop 0 depth 1 header:73|LoopBegin  <||@
  Comment 344 542 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 344 544 rax|DWORD[.] = MOV [r10|QWORD[.] + 24] size: DWORD  <||@
  Comment 348 546 TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 350 548 BRANCH trueDestinationProbability: 0.3139429194691874 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71  <||@
  Comment 356 block B71 loop 0 depth 1 header:73|LoopBegin  <||@
  Comment 356 556 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 356 558 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:98]  <||@
  Comment 356 [rax:0, r10:0, stack:24]at java.util.HashMap.getNode(HashMap.java:578) [bci: 98, duringCall: false, rethrow: false]
              |0  |1               |2                  |3  |4  |5             |6  |7 
     locals:  |-  |stack:28|DWORD  |stack:40|QWORD[.]  |-  |-  |r10|QWORD[.]  |-  |-   <||@
  Comment 356 {infopoint: SAFEPOINT}  <||@
  Comment 356 11  <||@
  Comment 362 560 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@44b93d59 encoding: base: 0 shift: 3  <||@
  Comment 366 562 r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 369 564 rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 374 568 JUMP ~[] destination: B71 -> B43  <||@
  Comment 379 block B47 loop 0 depth 1 header:73|LoopBegin  <||@
  Comment 379 376 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 379 378 CMP (x: r8|QWORD[.], y: stack:40|QWORD[.]) size: QWORD  <||@
  Comment 384 380 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B47 -> B68 falseDestination: B47 -> B49  <||@
  Comment 390 block B49 loop 0 depth 1 header:73|LoopBegin  <||@
  Comment 390 386 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 390 388 TEST (x: r11|DWORD[.], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 393 390 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51  <||@
  Comment 399 block B51 loop 0 depth 1 header:73|LoopBegin  <||@
  Comment 399 398 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 399 400 CMP [r11|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 399 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 411 406 rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 416 402 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B63  <||@
  Comment 418 block B52 loop 0 depth 1 header:73|LoopBegin  <||@
  Comment 418 404 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 418 408 rax|DWORD[.] = MOV [rcx|QWORD[.] + 12] size: DWORD  <||@
  Comment 421 410 NULLCHECK [r12|QWORD[*] + rax|DWORD[.] * 8] state [bci:98]  <||@
  Comment 421 [rax:0, rcx:0, r10:0, r11:0, stack:24]at java.util.HashMap.getNode(HashMap.java:578) [bci: 98, duringCall: false, rethrow: false]
              |0  |1               |2             |3  |4  |5             |6  |7 
     locals:  |-  |stack:28|DWORD  |rcx|QWORD[.]  |-  |-  |r10|QWORD[.]  |-  |-   <||@
  Comment 421 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 425 412 rsi|DWORD[.] = MOV [r11|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 433 414 TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 435 416 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54  <||@
  Comment 441 block B54 loop 0 depth 1 header:73|LoopBegin  <||@
  Comment 441 426 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 441 428 rdx|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 448 430 r11|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 456 432 CMP (x: r11|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 459 434 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B63  <||@
  Comment 465 block B55 loop 0 depth 1 header:73|LoopBegin  <||@
  Comment 465 436 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 465 438 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 468 440 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B55 -> B68 falseDestination: B55 -> B57  <||@
  Comment 474 block B57 loop 0 depth 1 header:73|LoopBegin  <||@
  Comment 474 446 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 474 448 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@44b93d59 encoding: base: 0 shift: 3  <||@
  Comment 478 450 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@44b93d59 encoding: base: 0 shift: 3  <||@
  Comment 482 452 rdx|DWORD = ARRAY_EQUALS (~array1Value: rax|QWORD[.], ~array2Value: rsi|QWORD[.], ~lengthValue: r11|DWORD) {temp1: r8|QWORD[*], temp2: r9|QWORD[*], temp3: rbx|QWORD, temp4: rdi|QWORD, temp5: -, tempXMM: -, vectorTemp1: xmm0|DOUBLE, vectorTemp2: xmm1|DOUBLE} arrayBaseOffset: 16 arrayIndexScale: 2 kind: char  <||@
  Comment 737 454 rax|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 739 456 stack:48|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 744 458 JUMP ~[] destination: B57 -> B61  <||@
  Comment 749 block B50 loop 0 depth 1 header:73|LoopBegin  <||@
  Comment 749 392 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 749 394 rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 754 396 JUMP ~[] destination: B50 -> B63  <||@
  Comment 759 block B45 null  <||@
  Comment 759 362 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 759 364 rax|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 762 366 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 771 12  <||@
  Comment 781 block B4 null  <||@
  Comment 781 42 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 781 44 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 791 46 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 800 12  <||@
  Comment 810 block B8 null  <||@
  Comment 810 76 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 810 78 TEST (x: rcx|QWORD[.], y: rcx|QWORD[.]) size: QWORD  <||@
  Comment 813 80 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10  <||@
  Comment 819 block B10 null  <||@
  Comment 819 88 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 819 90 rax|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD  <||@
  Comment 822 92 CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 822 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 828 94 BRANCH trueDestinationProbability: 0.5841828066598709 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B28  <||@
  Comment 834 block B11 null  <||@
  Comment 834 96 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 834 98 CMP (x: rbx|QWORD[.], y: rcx|QWORD[.]) size: QWORD  <||@
  Comment 837 100 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13  <||@
  Comment 843 block B13 null  <||@
  Comment 843 110 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 843 112 TEST (x: r8|DWORD[.], y: r8|DWORD[.]) size: DWORD  <||@
  Comment 846 114 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15  <||@
  Comment 852 block B15 null  <||@
  Comment 852 122 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 852 124 CMP [r8|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 852 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 864 126 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B27  <||@
  Comment 870 block B27 null  <||@
  Comment 870 220 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 870 222 stack:52|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 875 224 JUMP ~[] destination: B27 -> B30  <||@
  Comment 875 block B30 null  <||@
  Comment 875 260 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 875 262 rsi|DWORD[.] = MOV [r10|DWORD[.] * 8 + 24] size: DWORD  <||@
  Comment 883 264 TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 885 266 BRANCH trueDestinationProbability: 0.1533361397600505 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32  <||@
  Comment 891 block B32 null  <||@
  Comment 891 274 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 891 276 CMP stack:52|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed}  <||@
  Comment 891 {meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed}}  <||@
  Comment 899 278 BRANCH trueDestinationProbability: 0.0011187072715972413 condition: = trueDestination: B32 -> B40 falseDestination: B32 -> B34  <||@
  Comment 905 block B34 null  <||@
  Comment 905 284 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 905 286 rax|DWORD[.] = MOVE rsi|DWORD[.] moveKind: DWORD  <||@
  Comment 907 288 JUMP ~[] destination: B34 -> B42  <||@
  Comment 912 block B28 null  <||@
  Comment 912 226 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 912 228 stack:48|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 917 230 stack:52|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 922 232 stack:56|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 927 234 rax|QWORD = MOV [rax|DWORD * 8 + 448] size: QWORD  <||@
  Comment 935 236 r8|QWORD = MOV [rax|QWORD + 64] size: QWORD  <||@
  Comment 939 238 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 942 240 rdx|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 945 242 rbx|QWORD = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 948 244 rax|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 951 246 rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:59]  <||@
  Comment 951 {HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 951 10  <||@
  Comment 953 [stack:8, stack:16, stack:24]at java.util.HashMap.getNode(HashMap.java:572) [bci: 59, duringCall: true, rethrow: false]
              |0  |1               |2                  |3  |4                  |5  |6  |7 
     locals:  |-  |stack:28|DWORD  |stack:40|QWORD[.]  |-  |stack:48|QWORD[.]  |-  |-  |-   <||@
  Comment 954 248 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 956 250 BRANCH trueDestinationProbability: 0.06693849813115868 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B35  <||@
  Comment 962 block B35 null  <||@
  Comment 962 290 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 962 292 rax|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 967 294 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 976 12  <||@
  Comment 986 block B37 null  <||@
  Comment 986 304 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 986 306 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 996 308 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1005 12  <||@
  Comment 1015 block B1 null  <||@
  Comment 1015 12 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1015 14 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1025 16 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1034 12  <||@
  Comment 1044 block B68 null  <||@
  Comment 1044 536 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1044 538 rax|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1047 540 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1056 12  <||@
  Comment 1066 block B12 null  <||@
  Comment 1066 102 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1066 104 stack:48|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 1071 106 rax|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1076 108 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1085 12  <||@
  Comment 1095 block B70 null  <||@
  Comment 1095 550 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1095 552 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1105 554 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1114 12  <||@
  Comment 1124 block B16 null  <||@
  Comment 1124 128 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1124 130 stack:48|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 1129 132 stack:52|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1134 134 stack:56|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 1139 136 rax|DWORD[.] = MOV [rcx|QWORD[.] + 12] size: DWORD  <||@
  Comment 1142 138 TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 1144 140 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18  <||@
  Comment 1150 block B18 null  <||@
  Comment 1150 150 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1150 152 rdx|DWORD[.] = MOV [r8|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 1158 154 TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 1160 156 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20  <||@
  Comment 1166 block B20 null  <||@
  Comment 1166 166 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1166 168 rsi|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 1173 170 rbx|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 1180 172 CMP (x: rbx|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 1182 174 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B26  <||@
  Comment 1188 block B26 null  <||@
  Comment 1188 214 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1188 218 JUMP ~[] destination: B26 -> B30  <||@
  Comment 1193 block B21 null  <||@
  Comment 1193 176 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1193 178 TEST (x: rbx|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 1195 180 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23  <||@
  Comment 1201 block B23 null  <||@
  Comment 1201 190 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1201 192 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@44b93d59 encoding: base: 0 shift: 3  <||@
  Comment 1205 194 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@44b93d59 encoding: base: 0 shift: 3  <||@
  Comment 1209 196 rsi|DWORD = ARRAY_EQUALS (~array1Value: rax|QWORD[.], ~array2Value: rdx|QWORD[.], ~lengthValue: rbx|DWORD) {temp1: r10|QWORD[*], temp2: r11|QWORD[*], temp3: r8|QWORD, temp4: r9|QWORD, temp5: -, tempXMM: -, vectorTemp1: xmm0|DOUBLE, vectorTemp2: xmm1|DOUBLE} arrayBaseOffset: 16 arrayIndexScale: 2 kind: char  <||@
  Comment 1475 198 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 1477 200 BRANCH trueDestinationProbability: 0.06693849813115868 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25  <||@
  Comment 1483 block B25 null  <||@
  Comment 1483 208 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1483 210 rax|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1488 212 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1497 12  <||@
  Comment 1507 block B31 null  <||@
  Comment 1507 268 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1507 270 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1517 272 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1526 12  <||@
  Comment 1536 block B22 null  <||@
  Comment 1536 182 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1536 186 rax|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 1539 188 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1548 12  <||@
  Comment 1558 block B14 null  <||@
  Comment 1558 116 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1558 118 stack:52|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1563 120 JUMP ~[] destination: B14 -> B30  <||@
  Comment 1568 block B29 null  <||@
  Comment 1568 252 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1568 254 r10|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD  <||@
  Comment 1573 256 rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1578 258 JUMP ~[] destination: B29 -> B30  <||@
  Comment 1583 block B64 null  <||@
  Comment 1583 508 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1583 510 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1593 512 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1602 12  <||@
  Comment 1612 block B40 null  <||@
  Comment 1612 320 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1612 322 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@44b93d59 encoding: base: 0 shift: 3  <||@
  Comment 1616 324 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1619 326 rdx|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 1623 328 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$TreeNode.getTreeNode(int, Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:94]  <||@
  Comment 1623 {HotSpotMethod<HashMap$TreeNode.getTreeNode(int, Object)>}  <||@
  Comment 1623 9  <||@
  Comment 1628 []at java.util.HashMap.getNode(HashMap.java:576) [bci: 94, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-   <||@
  Comment 1629 330 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1638 12  <||@
  Comment 1648 block B24 null  <||@
  Comment 1648 202 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1648 204 r10|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD  <||@
  Comment 1653 206 JUMP ~[] destination: B24 -> B30  <||@
  Comment 1658 block B72 null  <||@
  Comment 1658 570 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1658 572 r10|DWORD = MOVE input: int[-123931|0xfffffffffffe1be5]  <||@
  Comment 1664 574 JUMP ~[] destination: B72 -> B73  <||@
  Comment 1664 block B73 null  <||@
  Comment 1664 576 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1664 578 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1671 580 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1678 582 DEOPT info [bci:0]  <||@
  Comment 1678 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1683 [rcx:0, rsi:0]at java.util.HashMap.getNode(HashMap.java:569) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2             |3  |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |rcx|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 1684 block B17 null  <||@
  Comment 1684 142 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1684 144 r10|DWORD = MOVE input: int[-130571|0xfffffffffffe01f5]  <||@
  Comment 1690 148 JUMP ~[] destination: B17 -> B73  <||@
  Comment 1692 block B9 null  <||@
  Comment 1692 82 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1692 84 r10|DWORD = MOVE input: int[-129299|0xfffffffffffe06ed]  <||@
  Comment 1698 86 JUMP ~[] destination: B9 -> B73  <||@
  Comment 1700 block B53 null  <||@
  Comment 1700 418 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1700 420 MOV [r15|QWORD + 668] y: -143115 size: DWORD  <||@
  Comment 1711 422 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1718 424 DEOPT info [bci:98]  <||@
  Comment 1718 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1723 [rcx:0, r10:0]at java.util.HashMap.getNode(HashMap.java:578) [bci: 98, duringCall: false, rethrow: false]
              |0  |1               |2             |3  |4  |5             |6  |7 
     locals:  |-  |stack:28|DWORD  |rcx|QWORD[.]  |-  |-  |r10|QWORD[.]  |-  |-   <||@
  Comment 1724 block B19 null  <||@
  Comment 1724 158 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1724 160 r10|DWORD = MOVE input: int[-132619|0xfffffffffffdf9f5]  <||@
  Comment 1730 162 rdx|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 1734 164 JUMP ~[] destination: B19 -> B73  <||@
  Comment 1736 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1736 4  <||@
  Comment 1742 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 1742 5  <||@
  HexCodeFile>>> <|@
end_nmethod
