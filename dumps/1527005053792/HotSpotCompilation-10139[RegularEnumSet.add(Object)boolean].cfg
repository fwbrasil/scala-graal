begin_compilation
  name " HotSpotCompilation-10139[java.util.RegularEnumSet.add(Object)]"
  method "HotSpotCompilation-10139[java.util.RegularEnumSet.add(Object)]"
  date 1527005241237
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v111 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v111  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/RegularEnumSet;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v119 v118 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a Ljava/lang/Object;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v123 v120 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<RegularEnumSet.add(Object)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: RegularEnumSet.java
sourceLine: 36
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 
=== Succesors ===
=== Usages ===
v99 v111 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2  <|@  <|@
f <@~|@floating>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v111 v114 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:161) [bci: 40]
at java.util.RegularEnumSet.add(RegularEnumSet.java:36) [bci: 2]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v123 
=== Succesors ===
next: v112 
=== Usages ===
v121 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v123 #next: v112  <|@  <|@
f <@~|@floating>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v111 
=== Succesors ===
=== Usages ===
v112 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v111  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: PrimarySupers:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:162) [bci: 54]
at java.util.RegularEnumSet.add(RegularEnumSet.java:36) [bci: 2]
nullCheck: false
stamp: Klass*
=== Inputs ===
stateBefore: - 
guard: - 
address: v121 
=== Succesors ===
next: v62 
=== Usages ===
v75 
=== Predecessor ===
v111 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v121 #next: v62  <|@  <|@
f <@~|@floating>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.RegularEnumSet.add(RegularEnumSet.java:36) [bci: 2]
rawvalue: meta{HotSpotType<Ljava/lang/Enum;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/lang/Enum;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
v75 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:162) [bci: 58]
at java.util.RegularEnumSet.add(RegularEnumSet.java:36) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v112 
y: v67 
=== Succesors ===
=== Usages ===
v62 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v112 y: v67  <|@  <|@
f <@*|@fixed>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.RegularEnumSet.add(RegularEnumSet.java:36) [bci: 2]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v75 
=== Succesors ===
trueSuccessor: v59 
falseSuccessor: v61 
=== Usages ===
=== Predecessor ===
v112 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v75 #trueSuccessor: v59 #falseSuccessor: v61  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.RegularEnumSet.add(RegularEnumSet.java:36) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: a113 
=== Usages ===
=== Predecessor ===
v62 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a113  <|@  <|@
f <@~|@floating>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a113 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a113 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EnumSet.elementType
nodeSourcePosition: at java.util.EnumSet.typeCheck(EnumSet.java:397) [bci: 7]
at java.util.RegularEnumSet.add(RegularEnumSet.java:161) [bci: 2]
at java.util.RegularEnumSet.add(RegularEnumSet.java:36) [bci: 5]
nullCheck: false
stamp: n# Ljava/lang/Class;
=== Inputs ===
stateBefore: - 
guard: - 
address: v118 
=== Succesors ===
next: v114 
=== Usages ===
a42 
=== Predecessor ===
v59 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v118 #next: v114  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at java.lang.Object.getClass() [bci: -1]
at java.util.EnumSet.typeCheck(EnumSet.java:396) [bci: 1]
at java.util.RegularEnumSet.add(RegularEnumSet.java:161) [bci: 2]
at java.util.RegularEnumSet.add(RegularEnumSet.java:36) [bci: 5]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v123 
=== Succesors ===
next: a115 
=== Usages ===
v122 
=== Predecessor ===
a113 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v123 #next: a115  <|@  <|@
f <@~|@floating>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
displacement: 104
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v114 
=== Succesors ===
=== Usages ===
a115 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v114  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a115 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Klass::_java_mirror:final
nodeSourcePosition: at java.lang.Object.getClass() [bci: -1]
at java.util.EnumSet.typeCheck(EnumSet.java:396) [bci: 1]
at java.util.RegularEnumSet.add(RegularEnumSet.java:161) [bci: 2]
at java.util.RegularEnumSet.add(RegularEnumSet.java:36) [bci: 5]
nullCheck: false
stamp: a!# Ljava/lang/Class;
=== Inputs ===
stateBefore: - 
guard: - 
address: v122 
=== Succesors ===
next: v66 
=== Usages ===
v34 
=== Predecessor ===
v114 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v122 #next: v66  <|@  <|@
f <@~|@floating>@ <|@
tid a42 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.EnumSet.typeCheck(EnumSet.java:397) [bci: 7]
at java.util.RegularEnumSet.add(RegularEnumSet.java:161) [bci: 2]
at java.util.RegularEnumSet.add(RegularEnumSet.java:36) [bci: 5]
op: Uncompress
stamp: a# Ljava/lang/Class;
=== Inputs ===
value: a113 
=== Succesors ===
=== Usages ===
v34 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a113  <|@  <|@
f <@~|@floating>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.EnumSet.typeCheck(EnumSet.java:397) [bci: 10]
at java.util.RegularEnumSet.add(RegularEnumSet.java:161) [bci: 2]
at java.util.RegularEnumSet.add(RegularEnumSet.java:36) [bci: 5]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a42 
y: a115 
=== Succesors ===
=== Usages ===
v66 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a42 y: a115  <|@  <|@
f <@*|@fixed>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.EnumSet.typeCheck(EnumSet.java:397) [bci: 10]
at java.util.RegularEnumSet.add(RegularEnumSet.java:161) [bci: 2]
at java.util.RegularEnumSet.add(RegularEnumSet.java:36) [bci: 5]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v34 
=== Succesors ===
trueSuccessor: v63 
falseSuccessor: v65 
=== Usages ===
=== Predecessor ===
a115 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v34 #trueSuccessor: v63 #falseSuccessor: v65  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.EnumSet.typeCheck(EnumSet.java:397) [bci: 10]
at java.util.RegularEnumSet.add(RegularEnumSet.java:161) [bci: 2]
at java.util.RegularEnumSet.add(RegularEnumSet.java:36) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: j116 
=== Usages ===
=== Predecessor ===
v66 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j116  <|@  <|@
f <@~|@floating>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
j116 v51 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j116 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: RegularEnumSet.elements
nodeSourcePosition: at java.util.RegularEnumSet.add(RegularEnumSet.java:163) [bci: 6]
at java.util.RegularEnumSet.add(RegularEnumSet.java:36) [bci: 5]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v119 
=== Succesors ===
next: i117 
=== Usages ===
j22 v27 
=== Predecessor ===
v63 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v119 #next: i117  <|@  <|@
f <@~|@floating>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i117 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i117 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Enum.ordinal
nodeSourcePosition: at java.lang.Enum.ordinal(Enum.java:103) [bci: 1]
at java.util.RegularEnumSet.add(RegularEnumSet.java:164) [bci: 17]
at java.util.RegularEnumSet.add(RegularEnumSet.java:36) [bci: 5]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v120 
=== Succesors ===
next: v51 
=== Usages ===
j21 
=== Predecessor ===
j116 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v120 #next: v51  <|@  <|@
f <@~|@floating>@ <|@
tid j19 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.RegularEnumSet.add(RegularEnumSet.java:164) [bci: 15]
at java.util.RegularEnumSet.add(RegularEnumSet.java:36) [bci: 5]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
j21 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j21 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at java.util.RegularEnumSet.add(RegularEnumSet.java:164) [bci: 20]
at java.util.RegularEnumSet.add(RegularEnumSet.java:36) [bci: 5]
stamp: i64
=== Inputs ===
x: j19 
y: i117 
=== Succesors ===
=== Usages ===
j22 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j19 y: i117  <|@  <|@
f <@~|@floating>@ <|@
tid j22 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at java.util.RegularEnumSet.add(RegularEnumSet.java:164) [bci: 21]
at java.util.RegularEnumSet.add(RegularEnumSet.java:36) [bci: 5]
stamp: i64
=== Inputs ===
x: j21 
y: j116 
=== Succesors ===
=== Usages ===
v51 v27 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: j21 y: j116  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: RegularEnumSet.elements
nodeSourcePosition: at java.util.RegularEnumSet.add(RegularEnumSet.java:164) [bci: 22]
at java.util.RegularEnumSet.add(RegularEnumSet.java:36) [bci: 5]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v119 
value: j22 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v13 
=== Usages ===
=== Predecessor ===
i117 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v119 value: j22 stateAfter: - lastLocationAccess: - #next: v13  <|@  <|@
f <@~|@floating>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.RegularEnumSet.add(RegularEnumSet.java:165) [bci: 31]
at java.util.RegularEnumSet.add(RegularEnumSet.java:36) [bci: 5]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j22 
y: j116 
=== Succesors ===
=== Usages ===
i29 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j22 y: j116  <|@  <|@
f <@~|@floating>@ <|@
tid i26 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.RegularEnumSet.add(RegularEnumSet.java:165) [bci: 31]
at java.util.RegularEnumSet.add(RegularEnumSet.java:36) [bci: 5]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i29 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i28 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.RegularEnumSet.add(RegularEnumSet.java:165) [bci: 31]
at java.util.RegularEnumSet.add(RegularEnumSet.java:36) [bci: 5]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i29 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.RegularEnumSet.add(RegularEnumSet.java:165) [bci: 31]
at java.util.RegularEnumSet.add(RegularEnumSet.java:36) [bci: 5]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v27 
trueValue: i26 
falseValue: i28 
=== Succesors ===
=== Usages ===
v13 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v27 trueValue: i26 falseValue: i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.RegularEnumSet.add(RegularEnumSet.java:36) [bci: 8]
stamp: void
=== Inputs ===
result: i29 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v51 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i29 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.EnumSet.typeCheck(EnumSet.java:397) [bci: 10]
at java.util.RegularEnumSet.add(RegularEnumSet.java:161) [bci: 2]
at java.util.RegularEnumSet.add(RegularEnumSet.java:36) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v102 
=== Usages ===
=== Predecessor ===
v66 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v102  <|@  <|@
f <@~|@floating>@ <|@
tid i103 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -11539
stableDimension: 0
stamp: i32 [-11539] ⇊00000000ffffd2ed ⇈00000000ffffd2ed
stampKind: i32
value: int[-11539|0xffffffffffffd2ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i97 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v93 
=== Predecessor ===
v65 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.RegularEnumSet.add(RegularEnumSet.java:36) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v100 
=== Usages ===
=== Predecessor ===
v62 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v100  <|@  <|@
f <@~|@floating>@ <|@
tid i101 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -9763
stableDimension: 0
stamp: i32 [-9763] ⇊00000000ffffd9dd ⇈00000000ffffd9dd
stampKind: i32
value: int[-9763|0xffffffffffffd9dd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i97 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v93 
=== Predecessor ===
v61 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i97 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-11539 - -9483] ⇊00000000ffffd0c5 ⇈00000000ffffdbfd
valueDescription: i32
=== Inputs ===
merge: v93 
values: i101 i103 
=== Succesors ===
=== Usages ===
v99 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v93 values: i101 i103  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v100 v102 
=== Succesors ===
next: v99 
=== Usages ===
i97 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v100 v102 #next: v99  <|@  <|@
f <@~|@floating>@ <|@
tid a96 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v99 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i97 
speculation: a96 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v93 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i97 speculation: a96  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v111 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v111  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/RegularEnumSet;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v119 v118 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a Ljava/lang/Object;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v123 v120 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<RegularEnumSet.add(Object)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: RegularEnumSet.java
sourceLine: 36
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 
=== Succesors ===
=== Usages ===
v99 v111 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2  <|@  <|@
f <@~|@floating>@ <|@
tid v123 <|@
result [v1|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v111 v114 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v111 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:161) [bci: 40]
at java.util.RegularEnumSet.add(RegularEnumSet.java:36) [bci: 2]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v123 
=== Succesors ===
next: v112 
=== Usages ===
v121 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v123 #next: v112  <|@  <|@
f <@~|@floating>@ <|@
tid v121 <|@
result [v2|DWORD * 8 + 48] <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v111 
=== Succesors ===
=== Usages ===
v112 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v111  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v112 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: PrimarySupers:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:162) [bci: 54]
at java.util.RegularEnumSet.add(RegularEnumSet.java:36) [bci: 2]
nullCheck: false
stamp: Klass*
=== Inputs ===
stateBefore: - 
guard: - 
address: v121 
=== Succesors ===
next: v62 
=== Usages ===
v75 
=== Predecessor ===
v111 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v121 #next: v62  <|@  <|@
f <@~|@floating>@ <|@
tid v67 <|@
result v3|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.RegularEnumSet.add(RegularEnumSet.java:36) [bci: 2]
rawvalue: meta{HotSpotType<Ljava/lang/Enum;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/lang/Enum;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
v75 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v75 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:162) [bci: 58]
at java.util.RegularEnumSet.add(RegularEnumSet.java:36) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v112 
y: v67 
=== Succesors ===
=== Usages ===
v62 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v112 y: v67  <|@  <|@
f <@*|@fixed>@ <|@
tid v62 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.RegularEnumSet.add(RegularEnumSet.java:36) [bci: 2]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v75 
=== Succesors ===
trueSuccessor: v59 
falseSuccessor: v61 
=== Usages ===
=== Predecessor ===
v112 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v75 #trueSuccessor: v59 #falseSuccessor: v61  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7983752e slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.RegularEnumSet.add(RegularEnumSet.java:36) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v2|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Enum;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|QWORD, y: [v2|DWORD * 8 + 48]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.RegularEnumSet.add(RegularEnumSet.java:36) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: a113 
=== Usages ===
=== Predecessor ===
v62 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a113  <|@  <|@
f <@~|@floating>@ <|@
tid v118 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a113 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a113 <|@
result v4|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EnumSet.elementType
nodeSourcePosition: at java.util.EnumSet.typeCheck(EnumSet.java:397) [bci: 7]
at java.util.RegularEnumSet.add(RegularEnumSet.java:161) [bci: 2]
at java.util.RegularEnumSet.add(RegularEnumSet.java:36) [bci: 5]
nullCheck: false
stamp: n# Ljava/lang/Class;
=== Inputs ===
stateBefore: - 
guard: - 
address: v118 
=== Succesors ===
next: v114 
=== Usages ===
a42 
=== Predecessor ===
v59 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v118 #next: v114  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v114 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at java.lang.Object.getClass() [bci: -1]
at java.util.EnumSet.typeCheck(EnumSet.java:396) [bci: 1]
at java.util.RegularEnumSet.add(RegularEnumSet.java:161) [bci: 2]
at java.util.RegularEnumSet.add(RegularEnumSet.java:36) [bci: 5]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v123 
=== Succesors ===
next: a115 
=== Usages ===
v122 
=== Predecessor ===
a113 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v123 #next: a115  <|@  <|@
f <@~|@floating>@ <|@
tid v122 <|@
result [v5|DWORD * 8 + 104] <|@
d <@d|@=== Debug Properties ===
displacement: 104
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v114 
=== Succesors ===
=== Usages ===
a115 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v114  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a115 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Klass::_java_mirror:final
nodeSourcePosition: at java.lang.Object.getClass() [bci: -1]
at java.util.EnumSet.typeCheck(EnumSet.java:396) [bci: 1]
at java.util.RegularEnumSet.add(RegularEnumSet.java:161) [bci: 2]
at java.util.RegularEnumSet.add(RegularEnumSet.java:36) [bci: 5]
nullCheck: false
stamp: a!# Ljava/lang/Class;
=== Inputs ===
stateBefore: - 
guard: - 
address: v122 
=== Succesors ===
next: v66 
=== Usages ===
v34 
=== Predecessor ===
v114 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v122 #next: v66  <|@  <|@
f <@~|@floating>@ <|@
tid a42 <|@
result v6|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.EnumSet.typeCheck(EnumSet.java:397) [bci: 7]
at java.util.RegularEnumSet.add(RegularEnumSet.java:161) [bci: 2]
at java.util.RegularEnumSet.add(RegularEnumSet.java:36) [bci: 5]
op: Uncompress
stamp: a# Ljava/lang/Class;
=== Inputs ===
value: a113 
=== Succesors ===
=== Usages ===
v34 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a113  <|@  <|@
f <@~|@floating>@ <|@
tid v34 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.EnumSet.typeCheck(EnumSet.java:397) [bci: 10]
at java.util.RegularEnumSet.add(RegularEnumSet.java:161) [bci: 2]
at java.util.RegularEnumSet.add(RegularEnumSet.java:36) [bci: 5]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a42 
y: a115 
=== Succesors ===
=== Usages ===
v66 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a42 y: a115  <|@  <|@
f <@*|@fixed>@ <|@
tid v66 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.EnumSet.typeCheck(EnumSet.java:397) [bci: 10]
at java.util.RegularEnumSet.add(RegularEnumSet.java:161) [bci: 2]
at java.util.RegularEnumSet.add(RegularEnumSet.java:36) [bci: 5]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v34 
=== Succesors ===
trueSuccessor: v63 
falseSuccessor: v65 
=== Usages ===
=== Predecessor ===
a115 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v34 #trueSuccessor: v63 #falseSuccessor: v65  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[.] = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@59c52d8b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v6|QWORD[.], y: [v5|DWORD * 8 + 104]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.EnumSet.typeCheck(EnumSet.java:397) [bci: 10]
at java.util.RegularEnumSet.add(RegularEnumSet.java:161) [bci: 2]
at java.util.RegularEnumSet.add(RegularEnumSet.java:36) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: j116 
=== Usages ===
=== Predecessor ===
v66 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j116  <|@  <|@
f <@~|@floating>@ <|@
tid v119 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
j116 v51 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j116 <|@
result v7|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: RegularEnumSet.elements
nodeSourcePosition: at java.util.RegularEnumSet.add(RegularEnumSet.java:163) [bci: 6]
at java.util.RegularEnumSet.add(RegularEnumSet.java:36) [bci: 5]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v119 
=== Succesors ===
next: i117 
=== Usages ===
j22 v27 
=== Predecessor ===
v63 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v119 #next: i117  <|@  <|@
f <@~|@floating>@ <|@
tid v120 <|@
result [v1|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i117 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i117 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Enum.ordinal
nodeSourcePosition: at java.lang.Enum.ordinal(Enum.java:103) [bci: 1]
at java.util.RegularEnumSet.add(RegularEnumSet.java:164) [bci: 17]
at java.util.RegularEnumSet.add(RegularEnumSet.java:36) [bci: 5]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v120 
=== Succesors ===
next: v51 
=== Usages ===
j21 
=== Predecessor ===
j116 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v120 #next: v51  <|@  <|@
f <@~|@floating>@ <|@
tid j19 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.RegularEnumSet.add(RegularEnumSet.java:164) [bci: 15]
at java.util.RegularEnumSet.add(RegularEnumSet.java:36) [bci: 5]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
j21 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j21 <|@
result v9|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at java.util.RegularEnumSet.add(RegularEnumSet.java:164) [bci: 20]
at java.util.RegularEnumSet.add(RegularEnumSet.java:36) [bci: 5]
stamp: i64
=== Inputs ===
x: j19 
y: i117 
=== Succesors ===
=== Usages ===
j22 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j19 y: i117  <|@  <|@
f <@~|@floating>@ <|@
tid j22 <|@
result v11|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at java.util.RegularEnumSet.add(RegularEnumSet.java:164) [bci: 21]
at java.util.RegularEnumSet.add(RegularEnumSet.java:36) [bci: 5]
stamp: i64
=== Inputs ===
x: j21 
y: j116 
=== Succesors ===
=== Usages ===
v51 v27 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: j21 y: j116  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: RegularEnumSet.elements
nodeSourcePosition: at java.util.RegularEnumSet.add(RegularEnumSet.java:164) [bci: 22]
at java.util.RegularEnumSet.add(RegularEnumSet.java:36) [bci: 5]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v119 
value: j22 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v13 
=== Usages ===
=== Predecessor ===
i117 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v119 value: j22 stateAfter: - lastLocationAccess: - #next: v13  <|@  <|@
f <@~|@floating>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.RegularEnumSet.add(RegularEnumSet.java:165) [bci: 31]
at java.util.RegularEnumSet.add(RegularEnumSet.java:36) [bci: 5]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j22 
y: j116 
=== Succesors ===
=== Usages ===
i29 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j22 y: j116  <|@  <|@
f <@~|@floating>@ <|@
tid i26 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.RegularEnumSet.add(RegularEnumSet.java:165) [bci: 31]
at java.util.RegularEnumSet.add(RegularEnumSet.java:36) [bci: 5]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i29 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i28 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.RegularEnumSet.add(RegularEnumSet.java:165) [bci: 31]
at java.util.RegularEnumSet.add(RegularEnumSet.java:36) [bci: 5]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i29 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i29 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.RegularEnumSet.add(RegularEnumSet.java:165) [bci: 31]
at java.util.RegularEnumSet.add(RegularEnumSet.java:36) [bci: 5]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v27 
trueValue: i26 
falseValue: i28 
=== Succesors ===
=== Usages ===
v13 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v27 trueValue: i26 falseValue: i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.RegularEnumSet.add(RegularEnumSet.java:36) [bci: 8]
stamp: void
=== Inputs ===
result: i29 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v51 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i29 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOV [v0|QWORD[.] + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOVE input: long[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = SHL (x: v10|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = OR (x: v9|QWORD, y: v7|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v11|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|QWORD, y: v11|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = SETCC condition: != <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v12|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.EnumSet.typeCheck(EnumSet.java:397) [bci: 10]
at java.util.RegularEnumSet.add(RegularEnumSet.java:161) [bci: 2]
at java.util.RegularEnumSet.add(RegularEnumSet.java:36) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v102 
=== Usages ===
=== Predecessor ===
v66 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v102  <|@  <|@
f <@~|@floating>@ <|@
tid i103 <|@
result int[-11539|0xffffffffffffd2ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -11539
stableDimension: 0
stamp: i32 [-11539] ⇊00000000ffffd2ed ⇈00000000ffffd2ed
stampKind: i32
value: int[-11539|0xffffffffffffd2ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i97 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v93 
=== Predecessor ===
v65 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-11539|0xffffffffffffd2ed]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.RegularEnumSet.add(RegularEnumSet.java:36) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v100 
=== Usages ===
=== Predecessor ===
v62 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v100  <|@  <|@
f <@~|@floating>@ <|@
tid i101 <|@
result int[-9763|0xffffffffffffd9dd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -9763
stableDimension: 0
stamp: i32 [-9763] ⇊00000000ffffd9dd ⇈00000000ffffd9dd
stampKind: i32
value: int[-9763|0xffffffffffffd9dd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i97 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v93 
=== Predecessor ===
v61 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-9763|0xffffffffffffd9dd]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i97 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-11539 - -9483] ⇊00000000ffffd0c5 ⇈00000000ffffdbfd
valueDescription: i32
=== Inputs ===
merge: v93 
values: i101 i103 
=== Succesors ===
=== Usages ===
v99 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v93 values: i101 i103  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v100 v102 
=== Succesors ===
next: v99 
=== Usages ===
i97 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v100 v102 #next: v99  <|@  <|@
f <@~|@floating>@ <|@
tid a96 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v99 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i97 
speculation: a96 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v93 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i97 speculation: a96  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v13|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.RegularEnumSet.add(RegularEnumSet.java:36) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7983752e slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.RegularEnumSet.add(RegularEnumSet.java:36) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v2|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Enum;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|QWORD, y: [v2|DWORD * 8 + 48]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[.] = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@59c52d8b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v6|QWORD[.], y: [v5|DWORD * 8 + 104]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOV [v0|QWORD[.] + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOVE input: long[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = SHL (x: v10|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = OR (x: v9|QWORD, y: v7|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v11|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|QWORD, y: v11|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = SETCC condition: != <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v12|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-9763|0xffffffffffffd9dd]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v13|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.RegularEnumSet.add(RegularEnumSet.java:36) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-11539|0xffffffffffffd2ed]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: checkcast     #13         // java.lang.Enum
     5: invokevirtual #21         // add:(java.lang.Enum)boolean
     8: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7983752e slotKind: QWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
java.util.RegularEnumSet.add(RegularEnumSet.java:36) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction rcx|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Enum;, resolved>} <|@ <|@
      nr   14  <|@ instruction CMP (x: rax|QWORD, y: [rcx|DWORD * 8 + 48]) size: QWORD <|@ <|@
      nr   16  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction rcx|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   22  <|@ instruction rax|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   24  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@59c52d8b encoding: base: 0 shift: 3 <|@ <|@
      nr   26  <|@ instruction CMP (x: rcx|QWORD[.], y: [rax|DWORD * 8 + 104]) size: QWORD <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction rax|QWORD = MOV [rsi|QWORD[.] + 24] size: QWORD <|@ <|@
      nr   34  <|@ instruction rcx|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   36  <|@ instruction r10|QWORD = MOVE input: long[1|0x1] <|@ <|@
      nr   40  <|@ instruction r10|QWORD = SHL (x: r10|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   42  <|@ instruction r10|QWORD = OR (x: r10|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr   44  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: r10|QWORD) size: QWORD <|@ <|@
      nr   46  <|@ instruction CMP (x: rax|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr   48  <|@ instruction rax|DWORD = SETCC condition: != <|@ <|@
      nr   52  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-9763|0xffffffffffffd9dd] // MoveResolver resolve mapping <|@ <|@
      nr   56  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   64  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr   66  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   68  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
java.util.RegularEnumSet.add(RegularEnumSet.java:36) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-11539|0xffffffffffffd2ed] // MoveResolver resolve mapping <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: checkcast     #13         // java.lang.Enum
     5: invokevirtual #21         // add:(java.lang.Enum)boolean
     8: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7983752e slotKind: QWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
java.util.RegularEnumSet.add(RegularEnumSet.java:36) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction rcx|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Enum;, resolved>} <|@ <|@
      nr   14  <|@ instruction CMP (x: rax|QWORD, y: [rcx|DWORD * 8 + 48]) size: QWORD <|@ <|@
      nr   16  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction rcx|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   22  <|@ instruction rax|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   24  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@59c52d8b encoding: base: 0 shift: 3 <|@ <|@
      nr   26  <|@ instruction CMP (x: rcx|QWORD[.], y: [rax|DWORD * 8 + 104]) size: QWORD <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction rax|QWORD = MOV [rsi|QWORD[.] + 24] size: QWORD <|@ <|@
      nr   34  <|@ instruction rcx|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   36  <|@ instruction r10|QWORD = MOVE input: long[1|0x1] <|@ <|@
      nr   40  <|@ instruction r10|QWORD = SHL (x: r10|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   42  <|@ instruction r10|QWORD = OR (x: r10|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr   44  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: r10|QWORD) size: QWORD <|@ <|@
      nr   46  <|@ instruction CMP (x: rax|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr   48  <|@ instruction rax|DWORD = SETCC condition: != <|@ <|@
      nr   52  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-9763|0xffffffffffffd9dd] // MoveResolver resolve mapping <|@ <|@
      nr   56  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   64  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr   66  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   68  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
java.util.RegularEnumSet.add(RegularEnumSet.java:36) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-11539|0xffffffffffffd2ed] // MoveResolver resolve mapping <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: checkcast     #13         // java.lang.Enum
     5: invokevirtual #21         // add:(java.lang.Enum)boolean
     8: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c24108b4a0848b8addeaddeaddeadde483b04cd300000000f854c0000008b4e0c8b420848c1e103483b0cc5680000000f854e000000488b46188b4a0c49c7c20100000049d3e24c0bd04c895618493bc20f95c00fb6c0488b6c24104883c418850500000000c5f877c341baddd9ffff4589979c0200004d89a7a8020000e8000000009041baedd2ffffebe4e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7983752e slotKind: QWORD  <||@
  Comment 48 10 rcx|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD state [bci:0]  <||@
  Comment 48 [rdx:0, rsi:0]at java.util.RegularEnumSet.add(RegularEnumSet.java:36) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]   <||@
  Comment 48 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 51 12 rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Enum;, resolved>}  <||@
  Comment 51 {meta{HotSpotType<Ljava/lang/Enum;, resolved>}}  <||@
  Comment 61 14 CMP (x: rax|QWORD, y: [rcx|DWORD * 8 + 48]) size: QWORD  <||@
  Comment 69 16 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4  <||@
  Comment 75 block B1 null  <||@
  Comment 75 18 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 75 20 rcx|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 78 22 rax|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD  <||@
  Comment 81 24 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@59c52d8b encoding: base: 0 shift: 3  <||@
  Comment 85 26 CMP (x: rcx|QWORD[.], y: [rax|DWORD * 8 + 104]) size: QWORD  <||@
  Comment 93 28 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3  <||@
  Comment 99 block B2 null  <||@
  Comment 99 30 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 99 32 rax|QWORD = MOV [rsi|QWORD[.] + 24] size: QWORD  <||@
  Comment 103 34 rcx|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD  <||@
  Comment 106 36 r10|QWORD = MOVE input: long[1|0x1]  <||@
  Comment 113 40 r10|QWORD = SHL (x: r10|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 116 42 r10|QWORD = OR (x: r10|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 119 44 MOV (x: [rsi|QWORD[.] + 24], y: r10|QWORD) size: QWORD  <||@
  Comment 123 46 CMP (x: rax|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 126 48 rax|DWORD = SETCC condition: !=  <||@
  Comment 132 52 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 141 12  <||@
  Comment 151 block B4 null  <||@
  Comment 151 54 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 151 -1 r10|DWORD = MOVE input: int[-9763|0xffffffffffffd9dd]  <||@
  Comment 157 56 JUMP ~[] destination: B4 -> B5  <||@
  Comment 157 block B5 null  <||@
  Comment 157 62 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 157 64 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 164 66 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 171 68 DEOPT info [bci:0]  <||@
  Comment 171 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 176 [rdx:0, rsi:0]at java.util.RegularEnumSet.add(RegularEnumSet.java:36) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]   <||@
  Comment 177 block B3 null  <||@
  Comment 177 58 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 177 -1 r10|DWORD = MOVE input: int[-11539|0xffffffffffffd2ed]  <||@
  Comment 183 60 JUMP ~[] destination: B3 -> B5  <||@
  Comment 185 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 185 4  <||@
  Comment 191 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 191 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-10139[java.util.RegularEnumSet.add(Object)]"
  method "HotSpotCompilation-10139[java.util.RegularEnumSet.add(Object)]"
  date 1527005241277
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 107301760 448b560849c1e203493bc20f85ef4650ff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c24108b4a0848b8e8b702c007000000483b04cd300000000f854c0000008b4e0c8b420848c1e103483b0cc5680000000f854e000000488b46188b4a0c49c7c20100000049d3e24c0bd04c895618493bc20f95c00fb6c0488b6c24104883c418850513d858fdc5f877c341baddd9ffff4589979c0200004d89a7a8020000e8ee5d50ff9041baedd2ffffebe4e8028e94ff90e8dc5c50ff90f4f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7983752e slotKind: QWORD  <||@
  Comment 48 10 rcx|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD state [bci:0]  <||@
  Comment 48 [rdx:0, rsi:0]at java.util.RegularEnumSet.add(RegularEnumSet.java:36) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]   <||@
  Comment 48 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 51 12 rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Enum;, resolved>}  <||@
  Comment 51 {meta{HotSpotType<Ljava/lang/Enum;, resolved>}}  <||@
  Comment 61 14 CMP (x: rax|QWORD, y: [rcx|DWORD * 8 + 48]) size: QWORD  <||@
  Comment 69 16 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4  <||@
  Comment 75 block B1 null  <||@
  Comment 75 18 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 75 20 rcx|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 78 22 rax|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD  <||@
  Comment 81 24 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@59c52d8b encoding: base: 0 shift: 3  <||@
  Comment 85 26 CMP (x: rcx|QWORD[.], y: [rax|DWORD * 8 + 104]) size: QWORD  <||@
  Comment 93 28 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3  <||@
  Comment 99 block B2 null  <||@
  Comment 99 30 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 99 32 rax|QWORD = MOV [rsi|QWORD[.] + 24] size: QWORD  <||@
  Comment 103 34 rcx|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD  <||@
  Comment 106 36 r10|QWORD = MOVE input: long[1|0x1]  <||@
  Comment 113 40 r10|QWORD = SHL (x: r10|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 116 42 r10|QWORD = OR (x: r10|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 119 44 MOV (x: [rsi|QWORD[.] + 24], y: r10|QWORD) size: QWORD  <||@
  Comment 123 46 CMP (x: rax|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 126 48 rax|DWORD = SETCC condition: !=  <||@
  Comment 132 52 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 141 12  <||@
  Comment 151 block B4 null  <||@
  Comment 151 54 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 151 -1 r10|DWORD = MOVE input: int[-9763|0xffffffffffffd9dd]  <||@
  Comment 157 56 JUMP ~[] destination: B4 -> B5  <||@
  Comment 157 block B5 null  <||@
  Comment 157 62 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 157 64 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 164 66 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 171 68 DEOPT info [bci:0]  <||@
  Comment 171 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 176 [rdx:0, rsi:0]at java.util.RegularEnumSet.add(RegularEnumSet.java:36) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]   <||@
  Comment 177 block B3 null  <||@
  Comment 177 58 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 177 -1 r10|DWORD = MOVE input: int[-11539|0xffffffffffffd2ed]  <||@
  Comment 183 60 JUMP ~[] destination: B3 -> B5  <||@
  Comment 185 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 185 4  <||@
  Comment 191 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 191 5  <||@
  HexCodeFile>>> <|@
end_nmethod
