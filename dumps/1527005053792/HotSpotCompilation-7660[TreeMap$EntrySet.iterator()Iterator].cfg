begin_compilation
  name " HotSpotCompilation-7660[java.util.TreeMap$EntrySet.iterator()]"
  method "HotSpotCompilation-7660[java.util.TreeMap$EntrySet.iterator()]"
  date 1527005185623
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a198 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a198  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/TreeMap$EntrySet;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v202 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a198 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a198 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: TreeMap$EntrySet.this$0
nodeSourcePosition: at java.util.TreeMap$EntrySet.iterator(TreeMap.java:1063) [bci: 5]
nullCheck: false
stamp: n# Ljava/util/TreeMap;
=== Inputs ===
stateBefore: - 
guard: - 
address: v202 
=== Succesors ===
next: a199 
=== Usages ===
?36 v205 v182 v185 v203 ?8 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v202 #next: a199  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<TreeMap$EntrySet.iterator()>
duringCall: false
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: TreeMap.java
sourceLine: 1063
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
a199 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v203 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a198 
=== Succesors ===
=== Usages ===
a199 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a198  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a199 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: TreeMap.root
nodeSourcePosition: at java.util.TreeMap.getFirstEntry(TreeMap.java:2126) [bci: 1]
at java.util.TreeMap$EntrySet.iterator(TreeMap.java:1063) [bci: 12]
nullCheck: true
stamp: n# Ljava/util/TreeMap$Entry;
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v203 
=== Succesors ===
next: v20 
=== Usages ===
a77 v90 a121 
=== Predecessor ===
a198 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v203 #next: v20  <|@  <|@
f <@~|@floating>@ <|@
tid a77 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.TreeMap.getFirstEntry(TreeMap.java:2126) [bci: 1]
at java.util.TreeMap$EntrySet.iterator(TreeMap.java:1063) [bci: 12]
op: Uncompress
stamp: a# Ljava/util/TreeMap$Entry;
=== Inputs ===
value: a199 
=== Succesors ===
=== Usages ===
a39 a23 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a199  <|@  <|@
f <@~|@floating>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.TreeMap.getFirstEntry(TreeMap.java:2127) [bci: 6]
at java.util.TreeMap$EntrySet.iterator(TreeMap.java:1063) [bci: 12]
stamp: void
=== Inputs ===
value: a199 
=== Succesors ===
=== Usages ===
v20 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a199  <|@  <|@
tid a63 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@59a2cd2b
hasIdentity: true
objectId: 0
stamp: a!# Ljava/util/TreeMap$EntryIterator;
type: HotSpotType<Ljava/util/TreeMap$EntryIterator;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?36 ?36 ?64 ?8 ?8 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?64 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a63 
values: - - - - - 
=== Succesors ===
=== Usages ===
?24 ?8 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a63 values: - - - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.TreeMap.getFirstEntry(TreeMap.java:2127) [bci: 6]
at java.util.TreeMap$EntrySet.iterator(TreeMap.java:1063) [bci: 12]
stamp: void
trueSuccessorProbability: 0.0029663797124133405
=== Inputs ===
condition: v90 
=== Succesors ===
trueSuccessor: v18 
falseSuccessor: v19 
=== Usages ===
=== Predecessor ===
a199 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v90 #trueSuccessor: v18 #falseSuccessor: v19  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4568986428448854077
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.TreeMap.getFirstEntry(TreeMap.java:2130) [bci: 24]
at java.util.TreeMap$EntrySet.iterator(TreeMap.java:1063) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v38 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v38  <|@  <|@
f <@*|@fixed>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v37 
=== Predecessor ===
v18 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607155700026882480
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.TreeMap.getFirstEntry(TreeMap.java:2128) [bci: 9]
at java.util.TreeMap$EntrySet.iterator(TreeMap.java:1063) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v21 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v21  <|@  <|@
tid ?36 <|@
d <@d|@=== Debug Properties ===
bci: 12
code: ResolvedJavaMethodBytecode<TreeMap$EntrySet.iterator()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: TreeMap.java
sourceLine: 1063
stackSize: 3
=== Inputs ===
outerFrameState: - 
values: - a63 a63 a198 
=== Succesors ===
=== Usages ===
?24 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a63 a63 a198  <|@  <|@
f <@*|@fixed>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.TreeMap.getFirstEntry(TreeMap.java:2128) [bci: 9]
at java.util.TreeMap$EntrySet.iterator(TreeMap.java:1063) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v22 
=== Predecessor ===
v19 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B9" 
    successors "B4" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4610642335219880519
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a23 <|@
d <@d|@=== Debug Properties ===
stamp: a# Ljava/util/TreeMap$Entry;
valueDescription: a -
=== Inputs ===
merge: v22 
values: a77 a84 
=== Succesors ===
=== Usages ===
?24 v204 a39 a120 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v22 values: a77 a84  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 1.773516698476119
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.TreeMap.getFirstEntry(TreeMap.java:2128) [bci: 9]
at java.util.TreeMap$EntrySet.iterator(TreeMap.java:1063) [bci: 12]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v21 
=== Succesors ===
next: a200 
=== Usages ===
a23 v27 v33 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v21 #next: a200  <|@  <|@
tid ?24 <|@
d <@d|@=== Debug Properties ===
bci: 9
code: ResolvedJavaMethodBytecode<TreeMap.getFirstEntry()>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: TreeMap.java
sourceLine: 2128
stackSize: 0
=== Inputs ===
outerFrameState: ?36 
values: - a23 
virtualObjectMappings: ?64 
=== Succesors ===
=== Usages ===
v96 a200 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?36 values: - a23 virtualObjectMappings: ?64  <|@  <|@
f <@~|@floating>@ <|@
tid v204 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a23 
index: - 
=== Succesors ===
=== Usages ===
a200 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a23 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a200 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: TreeMap$Entry.left
nodeSourcePosition: at java.util.TreeMap.getFirstEntry(TreeMap.java:2128) [bci: 10]
at java.util.TreeMap$EntrySet.iterator(TreeMap.java:1063) [bci: 12]
nullCheck: true
stamp: n# Ljava/util/TreeMap$Entry;
=== Inputs ===
stateBefore: ?24 
guard: - 
address: v204 
=== Succesors ===
next: v31 
=== Usages ===
a84 v91 
=== Predecessor ===
v22 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?24 guard: - address: v204 #next: v31  <|@  <|@
f <@~|@floating>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.TreeMap.getFirstEntry(TreeMap.java:2128) [bci: 13]
at java.util.TreeMap$EntrySet.iterator(TreeMap.java:1063) [bci: 12]
stamp: void
=== Inputs ===
value: a200 
=== Succesors ===
=== Usages ===
v31 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a200  <|@  <|@
f <@*|@fixed>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.TreeMap.getFirstEntry(TreeMap.java:2128) [bci: 13]
at java.util.TreeMap$EntrySet.iterator(TreeMap.java:1063) [bci: 12]
stamp: void
trueSuccessorProbability: 0.5638514714066366
=== Inputs ===
condition: v91 
=== Succesors ===
trueSuccessor: v27 
falseSuccessor: v30 
=== Usages ===
=== Predecessor ===
a200 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v91 #trueSuccessor: v27 #falseSuccessor: v30  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607155700026882480
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.TreeMap.getFirstEntry(TreeMap.java:2130) [bci: 24]
at java.util.TreeMap$EntrySet.iterator(TreeMap.java:1063) [bci: 12]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v22 
=== Succesors ===
next: v40 
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v22 #next: v40  <|@  <|@
f <@~|@floating>@ <|@
tid a120 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n# Ljava/util/TreeMap$Entry;
=== Inputs ===
value: a23 
=== Succesors ===
=== Usages ===
a121 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a23  <|@  <|@
f <@*|@fixed>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v37 
=== Predecessor ===
v27 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a39 <|@
d <@d|@=== Debug Properties ===
stamp: a# Ljava/util/TreeMap$Entry;
valueDescription: a -
=== Inputs ===
merge: v37 
values: a77 a23 
=== Succesors ===
=== Usages ===
?8 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v37 values: a77 a23  <|@  <|@
f <@~|@floating>@ <|@
tid a121 <|@
d <@d|@=== Debug Properties ===
stamp: n# Ljava/util/TreeMap$Entry;
valueDescription: n -
=== Inputs ===
merge: v37 
values: a199 a120 
=== Succesors ===
=== Usages ===
v176 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v37 values: a199 a120  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v38 v40 
=== Succesors ===
next: j126 
=== Usages ===
a39 a121 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v38 v40 #next: j126  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j126 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j146 
=== Usages ===
v206 v207 
=== Predecessor ===
v37 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j146  <|@  <|@
f <@~|@floating>@ <|@
tid v206 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j126 
index: - 
=== Succesors ===
=== Usages ===
j146 v148 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j126 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j146 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v206 
=== Succesors ===
next: j147 
=== Usages ===
j186 j152 v211 
=== Predecessor ===
j126 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v206 #next: j147  <|@  <|@
f <@~|@floating>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j126 
index: - 
=== Succesors ===
=== Usages ===
j147 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j126 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j147 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v207 
=== Succesors ===
next: v134 
=== Usages ===
v131 
=== Predecessor ===
j146 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v207 #next: v134  <|@  <|@
f <@~|@floating>@ <|@
tid j74 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.TreeMap.getFirstEntry(TreeMap.java:2126) [bci: 1]
at java.util.TreeMap$EntrySet.iterator(TreeMap.java:1063) [bci: 12]
rawvalue: 32
stableDimension: 0
stamp: i64 [32] ⇊0000000000000020 ⇈0000000000000020
stampKind: i64
value: long[32|0x20]
=== Inputs ===
=== Succesors ===
=== Usages ===
j186 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j186 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j146 
y: j74 
=== Succesors ===
=== Usages ===
v131 v148 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j146 y: j74  <|@  <|@
f <@~|@floating>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j147 
y: j186 
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j147 y: j186  <|@  <|@
f <@*|@fixed>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v131 
=== Succesors ===
trueSuccessor: v132 
falseSuccessor: v133 
=== Usages ===
=== Predecessor ===
j147 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v131 #trueSuccessor: v132 #falseSuccessor: v133  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a139 
=== Usages ===
=== Predecessor ===
v134 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a139  <|@  <|@
tid ?8 <|@
d <@d|@=== Debug Properties ===
bci: 15
code: ResolvedJavaMethodBytecode<TreeMap$EntrySet.iterator()>
duringCall: false
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.TreeMap$EntrySet.iterator(TreeMap.java:1063) [bci: 12]
rethrowException: false
sourceFile: TreeMap.java
sourceLine: 1063
stackSize: 4
=== Inputs ===
outerFrameState: - 
values: - a63 a63 a198 a39 
virtualObjectMappings: ?64 
=== Succesors ===
=== Usages ===
a139 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a63 a63 a198 a39 virtualObjectMappings: ?64  <|@  <|@
f <@~|@floating>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a139 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i188 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i32 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i32
value: int[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
a139 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i125 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
a139 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a139 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?8 
arguments: v123 i188 i125 
=== Succesors ===
next: j140 
=== Usages ===
j140 
=== Predecessor ===
v132 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?8 arguments: v123 i188 i125 #next: j140  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j140 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a139 
=== Succesors ===
next: v153 
=== Usages ===
j152 
=== Predecessor ===
a139 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a139 #next: v153  <|@  <|@
f <@*|@fixed>@ <|@
tid v153 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v150 
=== Predecessor ===
j140 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v148 
=== Usages ===
=== Predecessor ===
v134 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v148  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v148 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v206 
value: j186 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v144 
=== Usages ===
=== Predecessor ===
v133 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v206 value: j186 stateAfter: - lastLocationAccess: - #next: v144  <|@  <|@
f <@~|@floating>@ <|@
tid v211 <|@
d <@d|@=== Debug Properties ===
displacement: 224
scale: Times1
stamp: void*
=== Inputs ===
base: j146 
index: - 
=== Succesors ===
=== Usages ===
v144 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j146 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v144 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v211 
=== Succesors ===
next: v151 
=== Usages ===
=== Predecessor ===
v148 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v211 #next: v151  <|@  <|@
f <@*|@fixed>@ <|@
tid v151 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v150 
=== Predecessor ===
v144 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j152 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v150 
values: j146 j140 
=== Succesors ===
=== Usages ===
v210 v209 a109 v212 v213 v214 v215 v216 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v150 values: j146 j140  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v151 v153 
=== Succesors ===
next: a109 
=== Usages ===
j152 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v151 v153 #next: a109  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a109 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j152 
=== Succesors ===
next: j164 
=== Usages ===
a117 
=== Predecessor ===
v150 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j152 #next: j164  <|@  <|@
f <@~|@floating>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/TreeMap$EntryIterator;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/TreeMap$EntryIterator;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j159 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j159 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v158 
=== Succesors ===
=== Usages ===
v208 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v158  <|@  <|@
f <@~|@floating>@ <|@
tid v208 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j159 
index: - 
=== Succesors ===
=== Usages ===
j164 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j159 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j164 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v208 
=== Succesors ===
next: v165 
=== Usages ===
v165 
=== Predecessor ===
a109 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v208 #next: v165  <|@  <|@
f <@~|@floating>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j152 
index: - 
=== Succesors ===
=== Usages ===
v165 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j152 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v209 
value: j164 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v169 
=== Usages ===
=== Predecessor ===
j164 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v209 value: j164 stateAfter: - lastLocationAccess: - #next: v169  <|@  <|@
f <@~|@floating>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j152 
index: - 
=== Succesors ===
=== Usages ===
v169 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j152 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/TreeMap$EntryIterator;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/TreeMap$EntryIterator;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v169 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v169 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v210 
value: v191 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i201 
=== Usages ===
=== Predecessor ===
v165 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v210 value: v191 stateAfter: - lastLocationAccess: - #next: i201  <|@  <|@
f <@~|@floating>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a198 
=== Succesors ===
=== Usages ===
i201 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a198  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i201 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: TreeMap.modCount
nodeSourcePosition: at java.util.TreeMap.access$100(TreeMap.java:111) [bci: 1]
at java.util.TreeMap$PrivateEntryIterator.<init>(TreeMap.java:1197) [bci: 11]
at java.util.TreeMap$EntryIterator.<init>(TreeMap.java:1244) [bci: 8]
at java.util.TreeMap$EntrySet.iterator(TreeMap.java:1063) [bci: 15]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v205 
=== Succesors ===
next: v173 
=== Usages ===
v173 
=== Predecessor ===
v169 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v205 #next: v173  <|@  <|@
f <@~|@floating>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j152 
index: - 
=== Succesors ===
=== Usages ===
v173 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j152 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v212 
value: i201 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v176 
=== Usages ===
=== Predecessor ===
i201 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v212 value: i201 stateAfter: - lastLocationAccess: - #next: v176  <|@  <|@
f <@~|@floating>@ <|@
tid v213 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j152 
index: - 
=== Succesors ===
=== Usages ===
v176 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j152 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v176 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v213 
value: a121 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v180 
=== Usages ===
=== Predecessor ===
v173 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v213 value: a121 stateAfter: - lastLocationAccess: - #next: v180  <|@  <|@
f <@~|@floating>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j152 
index: - 
=== Succesors ===
=== Usages ===
v180 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j152 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i177 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v180 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v214 
value: i177 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v182 
=== Usages ===
=== Predecessor ===
v176 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v214 value: i177 stateAfter: - lastLocationAccess: - #next: v182  <|@  <|@
f <@~|@floating>@ <|@
tid v215 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j152 
index: - 
=== Succesors ===
=== Usages ===
v182 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j152 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v215 
value: a198 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v185 
=== Usages ===
=== Predecessor ===
v180 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v215 value: a198 stateAfter: - lastLocationAccess: - #next: v185  <|@  <|@
f <@~|@floating>@ <|@
tid v216 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: j152 
index: - 
=== Succesors ===
=== Usages ===
v185 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j152 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v216 
value: a198 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a117 
=== Usages ===
=== Predecessor ===
v182 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v216 value: a198 stateAfter: - lastLocationAccess: - #next: a117  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a117 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a109 
=== Succesors ===
next: v118 
=== Usages ===
v12 
=== Predecessor ===
v185 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a109 #next: v118  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v12 
=== Usages ===
=== Predecessor ===
a117 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v12  <|@  <|@
f <@*|@fixed>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.TreeMap$EntrySet.iterator(TreeMap.java:1063) [bci: 18]
stamp: void
=== Inputs ===
result: a117 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v118 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a117 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4605121771158137566
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.TreeMap.getFirstEntry(TreeMap.java:2129) [bci: 16]
at java.util.TreeMap$EntrySet.iterator(TreeMap.java:1063) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v96 
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v96  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?24 
=== Succesors ===
next: v33 
=== Usages ===
=== Predecessor ===
v30 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?24 #next: v33  <|@  <|@
f <@~|@floating>@ <|@
tid a84 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.TreeMap.getFirstEntry(TreeMap.java:2128) [bci: 10]
at java.util.TreeMap$EntrySet.iterator(TreeMap.java:1063) [bci: 12]
op: Uncompress
stamp: a# Ljava/util/TreeMap$Entry;
=== Inputs ===
value: a200 
=== Succesors ===
=== Usages ===
a23 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a200  <|@  <|@
f <@*|@fixed>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.util.TreeMap.getFirstEntry(TreeMap.java:2128) [bci: 9]
at java.util.TreeMap$EntrySet.iterator(TreeMap.java:1063) [bci: 12]
stamp: void
=== Inputs ===
loopBegin: v22 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v96 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v22  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a198 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a198  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/TreeMap$EntrySet;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v202 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v202 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a198 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a198 <|@
result v1|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: TreeMap$EntrySet.this$0
nodeSourcePosition: at java.util.TreeMap$EntrySet.iterator(TreeMap.java:1063) [bci: 5]
nullCheck: false
stamp: n# Ljava/util/TreeMap;
=== Inputs ===
stateBefore: - 
guard: - 
address: v202 
=== Succesors ===
next: a199 
=== Usages ===
?36 v205 v182 v185 v203 ?8 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v202 #next: a199  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<TreeMap$EntrySet.iterator()>
duringCall: false
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: TreeMap.java
sourceLine: 1063
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
a199 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v203 <|@
result [v1|DWORD[.] * 8 + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a198 
=== Succesors ===
=== Usages ===
a199 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a198  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a199 <|@
result v2|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: TreeMap.root
nodeSourcePosition: at java.util.TreeMap.getFirstEntry(TreeMap.java:2126) [bci: 1]
at java.util.TreeMap$EntrySet.iterator(TreeMap.java:1063) [bci: 12]
nullCheck: true
stamp: n# Ljava/util/TreeMap$Entry;
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v203 
=== Succesors ===
next: v20 
=== Usages ===
a77 v90 a121 
=== Predecessor ===
a198 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v203 #next: v20  <|@  <|@
f <@~|@floating>@ <|@
tid a77 <|@
result v3|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.TreeMap.getFirstEntry(TreeMap.java:2126) [bci: 1]
at java.util.TreeMap$EntrySet.iterator(TreeMap.java:1063) [bci: 12]
op: Uncompress
stamp: a# Ljava/util/TreeMap$Entry;
=== Inputs ===
value: a199 
=== Succesors ===
=== Usages ===
a39 a23 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a199  <|@  <|@
f <@~|@floating>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.TreeMap.getFirstEntry(TreeMap.java:2127) [bci: 6]
at java.util.TreeMap$EntrySet.iterator(TreeMap.java:1063) [bci: 12]
stamp: void
=== Inputs ===
value: a199 
=== Succesors ===
=== Usages ===
v20 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a199  <|@  <|@
tid a63 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@59a2cd2b
hasIdentity: true
objectId: 0
stamp: a!# Ljava/util/TreeMap$EntryIterator;
type: HotSpotType<Ljava/util/TreeMap$EntryIterator;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?36 ?36 ?64 ?8 ?8 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?64 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a63 
values: - - - - - 
=== Succesors ===
=== Usages ===
?24 ?8 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a63 values: - - - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.TreeMap.getFirstEntry(TreeMap.java:2127) [bci: 6]
at java.util.TreeMap$EntrySet.iterator(TreeMap.java:1063) [bci: 12]
stamp: void
trueSuccessorProbability: 0.0029663797124133405
=== Inputs ===
condition: v90 
=== Succesors ===
trueSuccessor: v18 
falseSuccessor: v19 
=== Usages ===
=== Predecessor ===
a199 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v90 #trueSuccessor: v18 #falseSuccessor: v19  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2ec8bbfe slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[.] = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.TreeMap$EntrySet.iterator(TreeMap.java:1063) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v2|DWORD[.] = MOV [v1|DWORD[.] * 8 + 32] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@12c6e6a0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|DWORD[.], y: v2|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0029663797124133405 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4568986428448854077
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.TreeMap.getFirstEntry(TreeMap.java:2130) [bci: 24]
at java.util.TreeMap$EntrySet.iterator(TreeMap.java:1063) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v38 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v38  <|@  <|@
f <@*|@fixed>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v37 
=== Predecessor ===
v18 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v3|QWORD[.], v2|DWORD[.]] destination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607155700026882480
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.TreeMap.getFirstEntry(TreeMap.java:2128) [bci: 9]
at java.util.TreeMap$EntrySet.iterator(TreeMap.java:1063) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v21 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v21  <|@  <|@
tid ?36 <|@
d <@d|@=== Debug Properties ===
bci: 12
code: ResolvedJavaMethodBytecode<TreeMap$EntrySet.iterator()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: TreeMap.java
sourceLine: 1063
stackSize: 3
=== Inputs ===
outerFrameState: - 
values: - a63 a63 a198 
=== Succesors ===
=== Usages ===
?24 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a63 a63 a198  <|@  <|@
f <@*|@fixed>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.TreeMap.getFirstEntry(TreeMap.java:2128) [bci: 9]
at java.util.TreeMap$EntrySet.iterator(TreeMap.java:1063) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v22 
=== Predecessor ===
v19 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v3|QWORD[.]] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B9" 
    successors "B4" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4610642335219880519
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a23 <|@
result v4|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# Ljava/util/TreeMap$Entry;
valueDescription: a -
=== Inputs ===
merge: v22 
values: a77 a84 
=== Succesors ===
=== Usages ===
?24 v204 a39 a120 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v22 values: a77 a84  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 1.773516698476119
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.TreeMap.getFirstEntry(TreeMap.java:2128) [bci: 9]
at java.util.TreeMap$EntrySet.iterator(TreeMap.java:1063) [bci: 12]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v21 
=== Succesors ===
next: a200 
=== Usages ===
a23 v27 v33 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v21 #next: a200  <|@  <|@
tid ?24 <|@
d <@d|@=== Debug Properties ===
bci: 9
code: ResolvedJavaMethodBytecode<TreeMap.getFirstEntry()>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: TreeMap.java
sourceLine: 2128
stackSize: 0
=== Inputs ===
outerFrameState: ?36 
values: - a23 
virtualObjectMappings: ?64 
=== Succesors ===
=== Usages ===
v96 a200 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?36 values: - a23 virtualObjectMappings: ?64  <|@  <|@
f <@~|@floating>@ <|@
tid v204 <|@
result [v4|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a23 
index: - 
=== Succesors ===
=== Usages ===
a200 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a23 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a200 <|@
result v5|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: TreeMap$Entry.left
nodeSourcePosition: at java.util.TreeMap.getFirstEntry(TreeMap.java:2128) [bci: 10]
at java.util.TreeMap$EntrySet.iterator(TreeMap.java:1063) [bci: 12]
nullCheck: true
stamp: n# Ljava/util/TreeMap$Entry;
=== Inputs ===
stateBefore: ?24 
guard: - 
address: v204 
=== Succesors ===
next: v31 
=== Usages ===
a84 v91 
=== Predecessor ===
v22 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?24 guard: - address: v204 #next: v31  <|@  <|@
f <@~|@floating>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.TreeMap.getFirstEntry(TreeMap.java:2128) [bci: 13]
at java.util.TreeMap$EntrySet.iterator(TreeMap.java:1063) [bci: 12]
stamp: void
=== Inputs ===
value: a200 
=== Succesors ===
=== Usages ===
v31 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a200  <|@  <|@
f <@*|@fixed>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.TreeMap.getFirstEntry(TreeMap.java:2128) [bci: 13]
at java.util.TreeMap$EntrySet.iterator(TreeMap.java:1063) [bci: 12]
stamp: void
trueSuccessorProbability: 0.5638514714066366
=== Inputs ===
condition: v91 
=== Succesors ===
trueSuccessor: v27 
falseSuccessor: v30 
=== Usages ===
=== Predecessor ===
a200 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v91 #trueSuccessor: v27 #falseSuccessor: v30  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v4|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.TreeMap.getFirstEntry(TreeMap.java:2128) [bci: 9]
locals: - v4|QWORD[.] 
java.util.TreeMap$EntrySet.iterator(TreeMap.java:1063) [bci: 12]
stack: vobject:TreeMap$EntryIterator:0{expectedModCount=int[0|0x0],next=Object[null],lastReturned=Object[null],this$0=Object[null],this$0=Object[null]} vobject:TreeMap$EntryIterator:0{expectedModCount=int[0|0x0],next=Object[null],lastReturned=Object[null],this$0=Object[null],this$0=Object[null]} v1|DWORD[.] 
locals: - 
vobject:TreeMap$EntryIterator:0{expectedModCount=int[0|0x0],next=Object[null],lastReturned=Object[null],this$0=Object[null],this$0=Object[null]} Ljava/util/TreeMap$EntryIterator; int[0|0x0] Object[null] Object[null] Object[null] Object[null] 
>@ <|@ instruction v5|DWORD[.] = MOV [v4|QWORD[.] + 24] size: DWORD state [bci:9, 12] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|DWORD[.], y: v5|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5638514714066366 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607155700026882480
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.TreeMap.getFirstEntry(TreeMap.java:2130) [bci: 24]
at java.util.TreeMap$EntrySet.iterator(TreeMap.java:1063) [bci: 12]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v22 
=== Succesors ===
next: v40 
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v22 #next: v40  <|@  <|@
f <@~|@floating>@ <|@
tid a120 <|@
result v6|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n# Ljava/util/TreeMap$Entry;
=== Inputs ===
value: a23 
=== Succesors ===
=== Usages ===
a121 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a23  <|@  <|@
f <@*|@fixed>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v37 
=== Predecessor ===
v27 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[.] = COMPRESSPOINTER (input: v4|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@12c6e6a0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v4|QWORD[.], v6|DWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a39 <|@
result v7|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# Ljava/util/TreeMap$Entry;
valueDescription: a -
=== Inputs ===
merge: v37 
values: a77 a23 
=== Succesors ===
=== Usages ===
?8 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v37 values: a77 a23  <|@  <|@
f <@~|@floating>@ <|@
tid a121 <|@
result v8|DWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: n# Ljava/util/TreeMap$Entry;
valueDescription: n -
=== Inputs ===
merge: v37 
values: a199 a120 
=== Succesors ===
=== Usages ===
v176 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v37 values: a199 a120  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v38 v40 
=== Succesors ===
next: j126 
=== Usages ===
a39 a121 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v38 v40 #next: j126  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j126 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j146 
=== Usages ===
v206 v207 
=== Predecessor ===
v37 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j146  <|@  <|@
f <@~|@floating>@ <|@
tid v206 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j126 
index: - 
=== Succesors ===
=== Usages ===
j146 v148 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j126 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j146 <|@
result v9|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v206 
=== Succesors ===
next: j147 
=== Usages ===
j186 j152 v211 
=== Predecessor ===
j126 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v206 #next: j147  <|@  <|@
f <@~|@floating>@ <|@
tid v207 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j126 
index: - 
=== Succesors ===
=== Usages ===
j147 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j126 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j147 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v207 
=== Succesors ===
next: v134 
=== Usages ===
v131 
=== Predecessor ===
j146 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v207 #next: v134  <|@  <|@
f <@~|@floating>@ <|@
tid j74 <|@
result long[32|0x20] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.TreeMap.getFirstEntry(TreeMap.java:2126) [bci: 1]
at java.util.TreeMap$EntrySet.iterator(TreeMap.java:1063) [bci: 12]
rawvalue: 32
stableDimension: 0
stamp: i64 [32] ⇊0000000000000020 ⇈0000000000000020
stampKind: i64
value: long[32|0x20]
=== Inputs ===
=== Succesors ===
=== Usages ===
j186 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j186 <|@
result v10|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j146 
y: j74 
=== Succesors ===
=== Usages ===
v131 v148 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j146 y: j74  <|@  <|@
f <@~|@floating>@ <|@
tid v131 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j147 
y: j186 
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j147 y: j186  <|@  <|@
f <@*|@fixed>@ <|@
tid v134 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v131 
=== Succesors ===
trueSuccessor: v132 
falseSuccessor: v133 
=== Usages ===
=== Predecessor ===
j147 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v131 #trueSuccessor: v132 #falseSuccessor: v133  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v7|QWORD[.], v8|DWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = LEA [v9|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a139 
=== Usages ===
=== Predecessor ===
v134 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a139  <|@  <|@
tid ?8 <|@
d <@d|@=== Debug Properties ===
bci: 15
code: ResolvedJavaMethodBytecode<TreeMap$EntrySet.iterator()>
duringCall: false
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.TreeMap$EntrySet.iterator(TreeMap.java:1063) [bci: 12]
rethrowException: false
sourceFile: TreeMap.java
sourceLine: 1063
stackSize: 4
=== Inputs ===
outerFrameState: - 
values: - a63 a63 a198 a39 
virtualObjectMappings: ?64 
=== Succesors ===
=== Usages ===
a139 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a63 a63 a198 a39 virtualObjectMappings: ?64  <|@  <|@
f <@~|@floating>@ <|@
tid v123 <|@
result v11|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a139 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i188 <|@
result int[4|0x4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i32 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i32
value: int[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
a139 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i125 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
a139 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a139 <|@
result v12|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?8 
arguments: v123 i188 i125 
=== Succesors ===
next: j140 
=== Usages ===
j140 
=== Predecessor ===
v132 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?8 arguments: v123 i188 i125 #next: j140  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j140 <|@
result v12|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a139 
=== Succesors ===
next: v153 
=== Usages ===
j152 
=== Predecessor ===
a139 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a139 #next: v153  <|@  <|@
f <@*|@fixed>@ <|@
tid v153 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v150 
=== Predecessor ===
j140 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v11|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.TreeMap$EntrySet.iterator(TreeMap.java:1063) [bci: 15]
stack: vobject:TreeMap$EntryIterator:0{expectedModCount=int[0|0x0],next=Object[null],lastReturned=Object[null],this$0=Object[null],this$0=Object[null]} vobject:TreeMap$EntryIterator:0{expectedModCount=int[0|0x0],next=Object[null],lastReturned=Object[null],this$0=Object[null],this$0=Object[null]} v1|DWORD[.] v7|QWORD[.] 
locals: - 
vobject:TreeMap$EntryIterator:0{expectedModCount=int[0|0x0],next=Object[null],lastReturned=Object[null],this$0=Object[null],this$0=Object[null]} Ljava/util/TreeMap$EntryIterator; int[0|0x0] Object[null] Object[null] Object[null] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:15] <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v12|QWORD[.]] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v148 
=== Usages ===
=== Predecessor ===
v134 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v148  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v148 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v206 
value: j186 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v144 
=== Usages ===
=== Predecessor ===
v133 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v206 value: j186 stateAfter: - lastLocationAccess: - #next: v144  <|@  <|@
f <@~|@floating>@ <|@
tid v211 <|@
result [v9|QWORD + 224] <|@
d <@d|@=== Debug Properties ===
displacement: 224
scale: Times1
stamp: void*
=== Inputs ===
base: j146 
index: - 
=== Succesors ===
=== Usages ===
v144 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j146 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v144 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v211 
=== Succesors ===
next: v151 
=== Usages ===
=== Predecessor ===
v148 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v211 #next: v151  <|@  <|@
f <@*|@fixed>@ <|@
tid v151 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v150 
=== Predecessor ===
v144 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v9|QWORD + 224] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v9|QWORD] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j152 <|@
result v13|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v150 
values: j146 j140 
=== Succesors ===
=== Usages ===
v210 v209 a109 v212 v213 v214 v215 v216 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v150 values: j146 j140  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v151 v153 
=== Succesors ===
next: a109 
=== Usages ===
j152 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v151 v153 #next: a109  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a109 <|@
result v14|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j152 
=== Succesors ===
next: j164 
=== Usages ===
a117 
=== Predecessor ===
v150 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j152 #next: j164  <|@  <|@
f <@~|@floating>@ <|@
tid v158 <|@
result v15|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/TreeMap$EntryIterator;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/TreeMap$EntryIterator;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j159 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j159 <|@
result v15|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v158 
=== Succesors ===
=== Usages ===
v208 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v158  <|@  <|@
f <@~|@floating>@ <|@
tid v208 <|@
result [v15|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j159 
index: - 
=== Succesors ===
=== Usages ===
j164 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j159 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j164 <|@
result v16|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v208 
=== Succesors ===
next: v165 
=== Usages ===
v165 
=== Predecessor ===
a109 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v208 #next: v165  <|@  <|@
f <@~|@floating>@ <|@
tid v209 <|@
result [v13|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j152 
index: - 
=== Succesors ===
=== Usages ===
v165 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j152 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v209 
value: j164 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v169 
=== Usages ===
=== Predecessor ===
j164 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v209 value: j164 stateAfter: - lastLocationAccess: - #next: v169  <|@  <|@
f <@~|@floating>@ <|@
tid v210 <|@
result [v13|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j152 
index: - 
=== Succesors ===
=== Usages ===
v169 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j152 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v191 <|@
result meta{HotSpotType<Ljava/util/TreeMap$EntryIterator;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/TreeMap$EntryIterator;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/TreeMap$EntryIterator;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v169 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v169 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v210 
value: v191 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i201 
=== Usages ===
=== Predecessor ===
v165 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v210 value: v191 stateAfter: - lastLocationAccess: - #next: i201  <|@  <|@
f <@~|@floating>@ <|@
tid v205 <|@
result [v1|DWORD[.] * 8 + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a198 
=== Succesors ===
=== Usages ===
i201 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a198  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i201 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: TreeMap.modCount
nodeSourcePosition: at java.util.TreeMap.access$100(TreeMap.java:111) [bci: 1]
at java.util.TreeMap$PrivateEntryIterator.<init>(TreeMap.java:1197) [bci: 11]
at java.util.TreeMap$EntryIterator.<init>(TreeMap.java:1244) [bci: 8]
at java.util.TreeMap$EntrySet.iterator(TreeMap.java:1063) [bci: 15]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v205 
=== Succesors ===
next: v173 
=== Usages ===
v173 
=== Predecessor ===
v169 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v205 #next: v173  <|@  <|@
f <@~|@floating>@ <|@
tid v212 <|@
result [v13|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j152 
index: - 
=== Succesors ===
=== Usages ===
v173 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j152 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v212 
value: i201 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v176 
=== Usages ===
=== Predecessor ===
i201 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v212 value: i201 stateAfter: - lastLocationAccess: - #next: v176  <|@  <|@
f <@~|@floating>@ <|@
tid v213 <|@
result [v13|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j152 
index: - 
=== Succesors ===
=== Usages ===
v176 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j152 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v176 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v213 
value: a121 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v180 
=== Usages ===
=== Predecessor ===
v173 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v213 value: a121 stateAfter: - lastLocationAccess: - #next: v180  <|@  <|@
f <@~|@floating>@ <|@
tid v214 <|@
result [v13|QWORD[*] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j152 
index: - 
=== Succesors ===
=== Usages ===
v180 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j152 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i177 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v180 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v214 
value: i177 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v182 
=== Usages ===
=== Predecessor ===
v176 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v214 value: i177 stateAfter: - lastLocationAccess: - #next: v182  <|@  <|@
f <@~|@floating>@ <|@
tid v215 <|@
result [v13|QWORD[*] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j152 
index: - 
=== Succesors ===
=== Usages ===
v182 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j152 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v215 
value: a198 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v185 
=== Usages ===
=== Predecessor ===
v180 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v215 value: a198 stateAfter: - lastLocationAccess: - #next: v185  <|@  <|@
f <@~|@floating>@ <|@
tid v216 <|@
result [v13|QWORD[*] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: j152 
index: - 
=== Succesors ===
=== Usages ===
v185 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j152 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v216 
value: a198 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a117 
=== Usages ===
=== Predecessor ===
v182 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v216 value: a198 stateAfter: - lastLocationAccess: - #next: a117  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a117 <|@
result v14|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a109 
=== Succesors ===
next: v118 
=== Usages ===
v12 
=== Predecessor ===
v185 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a109 #next: v118  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v12 
=== Usages ===
=== Predecessor ===
a117 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v12  <|@  <|@
f <@*|@fixed>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.TreeMap$EntrySet.iterator(TreeMap.java:1063) [bci: 18]
stamp: void
=== Inputs ===
result: a117 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v118 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a117 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v13|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = MOVE v13|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/TreeMap$EntryIterator;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOV [v15|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v13|QWORD[*]], y: v16|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v13|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/TreeMap$EntryIterator;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOV [v1|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v13|QWORD[*] + 12], y: v17|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v13|QWORD[*] + 16], y: v8|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v13|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v13|QWORD[*] + 24], y: v1|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v13|QWORD[*] + 28], y: v1|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v14|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4605121771158137566
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.TreeMap.getFirstEntry(TreeMap.java:2129) [bci: 16]
at java.util.TreeMap$EntrySet.iterator(TreeMap.java:1063) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v96 
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v96  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?24 
=== Succesors ===
next: v33 
=== Usages ===
=== Predecessor ===
v30 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?24 #next: v33  <|@  <|@
f <@~|@floating>@ <|@
tid a84 <|@
result v18|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.TreeMap.getFirstEntry(TreeMap.java:2128) [bci: 10]
at java.util.TreeMap$EntrySet.iterator(TreeMap.java:1063) [bci: 12]
op: Uncompress
stamp: a# Ljava/util/TreeMap$Entry;
=== Inputs ===
value: a200 
=== Succesors ===
=== Usages ===
a23 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a200  <|@  <|@
f <@*|@fixed>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.util.TreeMap.getFirstEntry(TreeMap.java:2128) [bci: 9]
at java.util.TreeMap$EntrySet.iterator(TreeMap.java:1063) [bci: 12]
stamp: void
=== Inputs ===
loopBegin: v22 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v96 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v22  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.TreeMap.getFirstEntry(TreeMap.java:2128) [bci: 9]
locals: - v4|QWORD[.] 
java.util.TreeMap$EntrySet.iterator(TreeMap.java:1063) [bci: 12]
stack: vobject:TreeMap$EntryIterator:0{expectedModCount=int[0|0x0],next=Object[null],lastReturned=Object[null],this$0=Object[null],this$0=Object[null]} vobject:TreeMap$EntryIterator:0{expectedModCount=int[0|0x0],next=Object[null],lastReturned=Object[null],this$0=Object[null],this$0=Object[null]} v1|DWORD[.] 
locals: - 
vobject:TreeMap$EntryIterator:0{expectedModCount=int[0|0x0],next=Object[null],lastReturned=Object[null],this$0=Object[null],this$0=Object[null]} Ljava/util/TreeMap$EntryIterator; int[0|0x0] Object[null] Object[null] Object[null] Object[null] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:9, 12] <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@12c6e6a0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v18|QWORD[.]] destination: B9 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2ec8bbfe slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[.] = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.TreeMap$EntrySet.iterator(TreeMap.java:1063) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v2|DWORD[.] = MOV [v1|DWORD[.] * 8 + 32] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@12c6e6a0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|DWORD[.], y: v2|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0029663797124133405 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607155700026882480
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v3|QWORD[.]] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4605121771158137566
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.TreeMap.getFirstEntry(TreeMap.java:2128) [bci: 9]
locals: - v4|QWORD[.] 
java.util.TreeMap$EntrySet.iterator(TreeMap.java:1063) [bci: 12]
stack: vobject:TreeMap$EntryIterator:0{expectedModCount=int[0|0x0],next=Object[null],lastReturned=Object[null],this$0=Object[null],this$0=Object[null]} vobject:TreeMap$EntryIterator:0{expectedModCount=int[0|0x0],next=Object[null],lastReturned=Object[null],this$0=Object[null],this$0=Object[null]} v1|DWORD[.] 
locals: - 
vobject:TreeMap$EntryIterator:0{expectedModCount=int[0|0x0],next=Object[null],lastReturned=Object[null],this$0=Object[null],this$0=Object[null]} Ljava/util/TreeMap$EntryIterator; int[0|0x0] Object[null] Object[null] Object[null] Object[null] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:9, 12] <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@12c6e6a0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v18|QWORD[.]] destination: B9 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B9" 
    successors "B4" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4610642335219880519
    begin_IR
      LIR
      nr   -1  <|@ instruction [v4|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.TreeMap.getFirstEntry(TreeMap.java:2128) [bci: 9]
locals: - v4|QWORD[.] 
java.util.TreeMap$EntrySet.iterator(TreeMap.java:1063) [bci: 12]
stack: vobject:TreeMap$EntryIterator:0{expectedModCount=int[0|0x0],next=Object[null],lastReturned=Object[null],this$0=Object[null],this$0=Object[null]} vobject:TreeMap$EntryIterator:0{expectedModCount=int[0|0x0],next=Object[null],lastReturned=Object[null],this$0=Object[null],this$0=Object[null]} v1|DWORD[.] 
locals: - 
vobject:TreeMap$EntryIterator:0{expectedModCount=int[0|0x0],next=Object[null],lastReturned=Object[null],this$0=Object[null],this$0=Object[null]} Ljava/util/TreeMap$EntryIterator; int[0|0x0] Object[null] Object[null] Object[null] Object[null] 
>@ <|@ instruction v5|DWORD[.] = MOV [v4|QWORD[.] + 24] size: DWORD state [bci:9, 12] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|DWORD[.], y: v5|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5638514714066366 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607155700026882480
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[.] = COMPRESSPOINTER (input: v4|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@12c6e6a0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v4|QWORD[.], v6|DWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v7|QWORD[.], v8|DWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = LEA [v9|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v9|QWORD + 224] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v9|QWORD] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v13|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = MOVE v13|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/TreeMap$EntryIterator;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOV [v15|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v13|QWORD[*]], y: v16|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v13|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/TreeMap$EntryIterator;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOV [v1|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v13|QWORD[*] + 12], y: v17|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v13|QWORD[*] + 16], y: v8|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v13|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v13|QWORD[*] + 24], y: v1|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v13|QWORD[*] + 28], y: v1|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v14|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v11|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.TreeMap$EntrySet.iterator(TreeMap.java:1063) [bci: 15]
stack: vobject:TreeMap$EntryIterator:0{expectedModCount=int[0|0x0],next=Object[null],lastReturned=Object[null],this$0=Object[null],this$0=Object[null]} vobject:TreeMap$EntryIterator:0{expectedModCount=int[0|0x0],next=Object[null],lastReturned=Object[null],this$0=Object[null],this$0=Object[null]} v1|DWORD[.] v7|QWORD[.] 
locals: - 
vobject:TreeMap$EntryIterator:0{expectedModCount=int[0|0x0],next=Object[null],lastReturned=Object[null],this$0=Object[null],this$0=Object[null]} Ljava/util/TreeMap$EntryIterator; int[0|0x0] Object[null] Object[null] Object[null] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:15] <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v12|QWORD[.]] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4568986428448854077
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v3|QWORD[.], v2|DWORD[.]] destination: B1 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: new           #3          // java.util.TreeMap$EntryIterator
     3: dup           
     4: aload_0       
     5: getfield      #0          // this$0:java.util.TreeMap
     8: aload_0       
     9: getfield      #0          // this$0:java.util.TreeMap
    12: invokevirtual #2          // java.util.TreeMap.getFirstEntry:()java.util.TreeMap$Entry
    15: invokespecial #3          // java.util.TreeMap$EntryIterator.<init>:(java.util.TreeMap, java.util.TreeMap$Entry)void
    18: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2ec8bbfe slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr    8  <|@ st <@st|@reference-map: [rsi:0, r13:0]
live-base-pointers: []
java.util.TreeMap$EntrySet.iterator(TreeMap.java:1063) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r10|DWORD[.] = MOV [r13|DWORD[.] * 8 + 32] size: DWORD state [bci:0] <|@ <|@
      nr   10  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@12c6e6a0 encoding: base: 0 shift: 3 <|@ <|@
      nr   12  <|@ instruction TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr   14  <|@ instruction BRANCH trueDestinationProbability: 0.0029663797124133405 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607155700026882480
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   26  <|@ instruction rax|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4605121771158137566
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  116  <|@ st <@st|@reference-map: [rax:0, rsi:0, r13:0]
live-base-pointers: []
java.util.TreeMap.getFirstEntry(TreeMap.java:2128) [bci: 9]
locals: - rax|QWORD[.] 
java.util.TreeMap$EntrySet.iterator(TreeMap.java:1063) [bci: 12]
stack: vobject:TreeMap$EntryIterator:0{expectedModCount=int[0|0x0],next=Object[null],lastReturned=Object[null],this$0=Object[null],this$0=Object[null]} vobject:TreeMap$EntryIterator:0{expectedModCount=int[0|0x0],next=Object[null],lastReturned=Object[null],this$0=Object[null],this$0=Object[null]} r13|DWORD[.] 
locals: - 
vobject:TreeMap$EntryIterator:0{expectedModCount=int[0|0x0],next=Object[null],lastReturned=Object[null],this$0=Object[null],this$0=Object[null]} Ljava/util/TreeMap$EntryIterator; int[0|0x0] Object[null] Object[null] Object[null] Object[null] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:9, 12] <|@ <|@
      nr  118  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@12c6e6a0 encoding: base: 0 shift: 3 <|@ <|@
      nr  120  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ instruction JUMP ~[] destination: B9 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B9" 
    successors "B4" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4610642335219880519
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   32  <|@ st <@st|@reference-map: [rax:0, r13:0]
live-base-pointers: []
java.util.TreeMap.getFirstEntry(TreeMap.java:2128) [bci: 9]
locals: - rax|QWORD[.] 
java.util.TreeMap$EntrySet.iterator(TreeMap.java:1063) [bci: 12]
stack: vobject:TreeMap$EntryIterator:0{expectedModCount=int[0|0x0],next=Object[null],lastReturned=Object[null],this$0=Object[null],this$0=Object[null]} vobject:TreeMap$EntryIterator:0{expectedModCount=int[0|0x0],next=Object[null],lastReturned=Object[null],this$0=Object[null],this$0=Object[null]} r13|DWORD[.] 
locals: - 
vobject:TreeMap$EntryIterator:0{expectedModCount=int[0|0x0],next=Object[null],lastReturned=Object[null],this$0=Object[null],this$0=Object[null]} Ljava/util/TreeMap$EntryIterator; int[0|0x0] Object[null] Object[null] Object[null] Object[null] 
>@ <|@ instruction rsi|DWORD[.] = MOV [rax|QWORD[.] + 24] size: DWORD state [bci:9, 12] <|@ <|@
      nr   34  <|@ instruction TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr   36  <|@ instruction BRANCH trueDestinationProbability: 0.5638514714066366 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607155700026882480
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   40  <|@ instruction rsi|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@12c6e6a0 encoding: base: 0 shift: 3 <|@ <|@
      nr   42  <|@ instruction r14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   48  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   50  <|@ instruction rdx|QWORD = LEA [rax|QWORD + 32] size: QWORD <|@ <|@
      nr   52  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   54  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   78  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr   80  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 224] instr: 0 <|@ <|@
      nr   82  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   88  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr   90  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/TreeMap$EntryIterator;, resolved>} <|@ <|@
      nr   92  <|@ instruction rcx|QWORD = MOV [rcx|QWORD + 168] size: QWORD <|@ <|@
      nr   94  <|@ instruction MOV (x: [rax|QWORD[*]], y: rcx|QWORD) size: QWORD <|@ <|@
      nr   96  <|@ instruction MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/TreeMap$EntryIterator;, resolved>;compressed} <|@ <|@
      nr   98  <|@ instruction rcx|DWORD = MOV [r13|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr  100  <|@ instruction MOV (x: [rax|QWORD[*] + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  102  <|@ instruction MOV (x: [rax|QWORD[*] + 16], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  104  <|@ instruction MOV (x: [rax|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  106  <|@ instruction MOV (x: [rax|QWORD[*] + 24], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr  108  <|@ instruction MOV (x: [rax|QWORD[*] + 28], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr  110  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  112  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ instruction stack:28|DWORD[.] = MOVE rsi|DWORD[.] moveKind: DWORD <|@ <|@
      nr   60  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   62  <|@ instruction rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr   66  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   68  <|@ st <@st|@reference-map: [r13:0, r14:0, stack:4]
live-base-pointers: []
java.util.TreeMap$EntrySet.iterator(TreeMap.java:1063) [bci: 15]
stack: vobject:TreeMap$EntryIterator:0{expectedModCount=int[0|0x0],next=Object[null],lastReturned=Object[null],this$0=Object[null],this$0=Object[null]} vobject:TreeMap$EntryIterator:0{expectedModCount=int[0|0x0],next=Object[null],lastReturned=Object[null],this$0=Object[null],this$0=Object[null]} r13|DWORD[.] r14|QWORD[.] 
locals: - 
vobject:TreeMap$EntryIterator:0{expectedModCount=int[0|0x0],next=Object[null],lastReturned=Object[null],this$0=Object[null],this$0=Object[null]} Ljava/util/TreeMap$EntryIterator; int[0|0x0] Object[null] Object[null] Object[null] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:15] <|@ <|@
      nr   70  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   72  <|@ instruction rsi|DWORD[.] = MOVE stack:28|DWORD[.] moveKind: DWORD <|@ <|@
      nr   74  <|@ instruction JUMP ~[] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4568986428448854077
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction rsi|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr   20  <|@ instruction r14|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction JUMP ~[] destination: B1 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: new           #3          // java.util.TreeMap$EntryIterator
     3: dup           
     4: aload_0       
     5: getfield      #0          // this$0:java.util.TreeMap
     8: aload_0       
     9: getfield      #0          // this$0:java.util.TreeMap
    12: invokevirtual #2          // java.util.TreeMap.getFirstEntry:()java.util.TreeMap$Entry
    15: invokespecial #3          // java.util.TreeMap$EntryIterator.<init>:(java.util.TreeMap, java.util.TreeMap$Entry)void
    18: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2ec8bbfe slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr    8  <|@ st <@st|@reference-map: [rsi:0, r13:0]
live-base-pointers: []
java.util.TreeMap$EntrySet.iterator(TreeMap.java:1063) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r10|DWORD[.] = MOV [r13|DWORD[.] * 8 + 32] size: DWORD state [bci:0] <|@ <|@
      nr   10  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@12c6e6a0 encoding: base: 0 shift: 3 <|@ <|@
      nr   12  <|@ instruction TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr   14  <|@ instruction BRANCH trueDestinationProbability: 0.0029663797124133405 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607155700026882480
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   26  <|@ instruction rax|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4605121771158137566
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  116  <|@ st <@st|@reference-map: [rax:0, rsi:0, r13:0]
live-base-pointers: []
java.util.TreeMap.getFirstEntry(TreeMap.java:2128) [bci: 9]
locals: - rax|QWORD[.] 
java.util.TreeMap$EntrySet.iterator(TreeMap.java:1063) [bci: 12]
stack: vobject:TreeMap$EntryIterator:0{expectedModCount=int[0|0x0],next=Object[null],lastReturned=Object[null],this$0=Object[null],this$0=Object[null]} vobject:TreeMap$EntryIterator:0{expectedModCount=int[0|0x0],next=Object[null],lastReturned=Object[null],this$0=Object[null],this$0=Object[null]} r13|DWORD[.] 
locals: - 
vobject:TreeMap$EntryIterator:0{expectedModCount=int[0|0x0],next=Object[null],lastReturned=Object[null],this$0=Object[null],this$0=Object[null]} Ljava/util/TreeMap$EntryIterator; int[0|0x0] Object[null] Object[null] Object[null] Object[null] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:9, 12] <|@ <|@
      nr  118  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@12c6e6a0 encoding: base: 0 shift: 3 <|@ <|@
      nr  120  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ instruction JUMP ~[] destination: B9 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B9" 
    successors "B4" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4610642335219880519
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   32  <|@ st <@st|@reference-map: [rax:0, r13:0]
live-base-pointers: []
java.util.TreeMap.getFirstEntry(TreeMap.java:2128) [bci: 9]
locals: - rax|QWORD[.] 
java.util.TreeMap$EntrySet.iterator(TreeMap.java:1063) [bci: 12]
stack: vobject:TreeMap$EntryIterator:0{expectedModCount=int[0|0x0],next=Object[null],lastReturned=Object[null],this$0=Object[null],this$0=Object[null]} vobject:TreeMap$EntryIterator:0{expectedModCount=int[0|0x0],next=Object[null],lastReturned=Object[null],this$0=Object[null],this$0=Object[null]} r13|DWORD[.] 
locals: - 
vobject:TreeMap$EntryIterator:0{expectedModCount=int[0|0x0],next=Object[null],lastReturned=Object[null],this$0=Object[null],this$0=Object[null]} Ljava/util/TreeMap$EntryIterator; int[0|0x0] Object[null] Object[null] Object[null] Object[null] 
>@ <|@ instruction rsi|DWORD[.] = MOV [rax|QWORD[.] + 24] size: DWORD state [bci:9, 12] <|@ <|@
      nr   34  <|@ instruction TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr   36  <|@ instruction BRANCH trueDestinationProbability: 0.5638514714066366 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607155700026882480
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   40  <|@ instruction rsi|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@12c6e6a0 encoding: base: 0 shift: 3 <|@ <|@
      nr   42  <|@ instruction r14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   48  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   50  <|@ instruction rdx|QWORD = LEA [rax|QWORD + 32] size: QWORD <|@ <|@
      nr   52  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   54  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   78  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr   80  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 224] instr: 0 <|@ <|@
      nr   82  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   88  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr   90  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/TreeMap$EntryIterator;, resolved>} <|@ <|@
      nr   92  <|@ instruction rcx|QWORD = MOV [rcx|QWORD + 168] size: QWORD <|@ <|@
      nr   94  <|@ instruction MOV (x: [rax|QWORD[*]], y: rcx|QWORD) size: QWORD <|@ <|@
      nr   96  <|@ instruction MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/TreeMap$EntryIterator;, resolved>;compressed} <|@ <|@
      nr   98  <|@ instruction rcx|DWORD = MOV [r13|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr  100  <|@ instruction MOV (x: [rax|QWORD[*] + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  102  <|@ instruction MOV (x: [rax|QWORD[*] + 16], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  104  <|@ instruction MOV (x: [rax|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  106  <|@ instruction MOV (x: [rax|QWORD[*] + 24], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr  108  <|@ instruction MOV (x: [rax|QWORD[*] + 28], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr  110  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  112  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ instruction stack:28|DWORD[.] = MOVE rsi|DWORD[.] moveKind: DWORD <|@ <|@
      nr   60  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   62  <|@ instruction rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr   66  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   68  <|@ st <@st|@reference-map: [r13:0, r14:0, stack:4]
live-base-pointers: []
java.util.TreeMap$EntrySet.iterator(TreeMap.java:1063) [bci: 15]
stack: vobject:TreeMap$EntryIterator:0{expectedModCount=int[0|0x0],next=Object[null],lastReturned=Object[null],this$0=Object[null],this$0=Object[null]} vobject:TreeMap$EntryIterator:0{expectedModCount=int[0|0x0],next=Object[null],lastReturned=Object[null],this$0=Object[null],this$0=Object[null]} r13|DWORD[.] r14|QWORD[.] 
locals: - 
vobject:TreeMap$EntryIterator:0{expectedModCount=int[0|0x0],next=Object[null],lastReturned=Object[null],this$0=Object[null],this$0=Object[null]} Ljava/util/TreeMap$EntryIterator; int[0|0x0] Object[null] Object[null] Object[null] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:15] <|@ <|@
      nr   70  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   72  <|@ instruction rsi|DWORD[.] = MOVE stack:28|DWORD[.] moveKind: DWORD <|@ <|@
      nr   74  <|@ instruction JUMP ~[] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4568986428448854077
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction rsi|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr   20  <|@ instruction r14|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction JUMP ~[] destination: B1 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: new           #3          // java.util.TreeMap$EntryIterator
     3: dup           
     4: aload_0       
     5: getfield      #0          // this$0:java.util.TreeMap
     8: aload_0       
     9: getfield      #0          // this$0:java.util.TreeMap
    12: invokevirtual #2          // java.util.TreeMap.getFirstEntry:()java.util.TreeMap$Entry
    15: invokespecial #3          // java.util.TreeMap$EntryIterator.<init>:(java.util.TreeMap, java.util.TreeMap$Entry)void
    18: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c2410448b6e0c468b14ed20000000458bda49c1e3034585d20f84c4000000498bc3e919000000660f1f440000660f1f44000085050000000048c1e603488bc68b701885f675ec488bf048c1ee034c8bf0498b4760488d5020493b57700f8759000000498957600f1880e0000000488bd048b9addeaddeaddeadde488b89a8000000488908c74008addeadde428b0ced1800000089480c89701044896014448968184489681c488bc2488b6c24104883c418850500000000c5f877c38974240448baaddeaddeaddeadde488bf2ba04000000b901000000e800000000908b742404eb8b418bf24d8bf3e963ffffffe80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2ec8bbfe slotKind: QWORD  <||@
  Comment 48 6 r13|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 52 8 r10|DWORD[.] = MOV [r13|DWORD[.] * 8 + 32] size: DWORD state [bci:0]  <||@
  Comment 52 [rsi:0, r13:0]at java.util.TreeMap$EntrySet.iterator(TreeMap.java:1063) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 52 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 60 10 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@12c6e6a0 encoding: base: 0 shift: 3  <||@
  Comment 67 12 TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 70 14 BRANCH trueDestinationProbability: 0.0029663797124133405 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 76 block B2 null  <||@
  Comment 76 24 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 76 26 rax|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 79 28 JUMP ~[] destination: B2 -> B3  <||@
  Comment 84 block B9 loop 0 depth 1 header:22|LoopBegin  <||@
  Comment 84 114 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 96 116 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:9, 12]  <||@
  Comment 96 [rax:0, rsi:0, r13:0]at java.util.TreeMap.getFirstEntry(TreeMap.java:2128) [bci: 9, duringCall: false, rethrow: false]
              |0  |1            
     locals:  |-  |rax|QWORD[.] 
  at java.util.TreeMap$EntrySet.iterator(TreeMap.java:1063) [bci: 12, duringCall: true, rethrow: false]
              |0                                                                                                                                                 |1                                                                                                                                                 |2            
     locals:  |-                                                                                                                                                 |                                                                                                                                                  |             
     stack:   |vobject:TreeMap$EntryIterator:0{expectedModCount=int[0|0x0],next=Object[null],lastReturned=Object[null],this$0=Object[null],this$0=Object[null]}  |vobject:TreeMap$EntryIterator:0{expectedModCount=int[0|0x0],next=Object[null],lastReturned=Object[null],this$0=Object[null],this$0=Object[null]}  |r13|DWORD[.]   <||@
  Comment 96 {infopoint: SAFEPOINT}  <||@
  Comment 96 11  <||@
  Comment 102 118 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@12c6e6a0 encoding: base: 0 shift: 3  <||@
  Comment 106 120 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 109 122 JUMP ~[] destination: B9 -> B3  <||@
  Comment 109 block B3 loop 0 depth 1 header:22|LoopBegin  <||@
  Comment 109 30 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 109 32 rsi|DWORD[.] = MOV [rax|QWORD[.] + 24] size: DWORD state [bci:9, 12]  <||@
  Comment 109 [rax:0, r13:0]at java.util.TreeMap.getFirstEntry(TreeMap.java:2128) [bci: 9, duringCall: false, rethrow: false]
              |0  |1            
     locals:  |-  |rax|QWORD[.] 
  at java.util.TreeMap$EntrySet.iterator(TreeMap.java:1063) [bci: 12, duringCall: true, rethrow: false]
              |0                                                                                                                                                 |1                                                                                                                                                 |2            
     locals:  |-                                                                                                                                                 |                                                                                                                                                  |             
     stack:   |vobject:TreeMap$EntryIterator:0{expectedModCount=int[0|0x0],next=Object[null],lastReturned=Object[null],this$0=Object[null],this$0=Object[null]}  |vobject:TreeMap$EntryIterator:0{expectedModCount=int[0|0x0],next=Object[null],lastReturned=Object[null],this$0=Object[null],this$0=Object[null]}  |r13|DWORD[.]   <||@
  Comment 109 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 112 34 TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 114 36 BRANCH trueDestinationProbability: 0.5638514714066366 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B9  <||@
  Comment 116 block B4 null  <||@
  Comment 116 38 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 116 40 rsi|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@12c6e6a0 encoding: base: 0 shift: 3  <||@
  Comment 123 42 r14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 126 44 JUMP ~[] destination: B4 -> B5  <||@
  Comment 126 block B5 null  <||@
  Comment 126 46 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 126 48 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 130 50 rdx|QWORD = LEA [rax|QWORD + 32] size: QWORD  <||@
  Comment 134 52 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 138 54 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7  <||@
  Comment 144 block B7 null  <||@
  Comment 144 76 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 144 78 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 148 80 AMD64PREFETCH ~[rax|QWORD + 224] instr: 0  <||@
  Comment 155 82 rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 155 84 JUMP ~[] destination: B7 -> B8  <||@
  Comment 155 block B8 null  <||@
  Comment 155 86 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 155 88 rdx|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 158 90 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/TreeMap$EntryIterator;, resolved>}  <||@
  Comment 158 {meta{HotSpotType<Ljava/util/TreeMap$EntryIterator;, resolved>}}  <||@
  Comment 168 92 rcx|QWORD = MOV [rcx|QWORD + 168] size: QWORD  <||@
  Comment 175 94 MOV (x: [rax|QWORD[*]], y: rcx|QWORD) size: QWORD  <||@
  Comment 178 96 MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/TreeMap$EntryIterator;, resolved>;compressed}  <||@
  Comment 178 {meta{HotSpotType<Ljava/util/TreeMap$EntryIterator;, resolved>;compressed}}  <||@
  Comment 185 98 rcx|DWORD = MOV [r13|DWORD[.] * 8 + 24] size: DWORD  <||@
  Comment 193 100 MOV (x: [rax|QWORD[*] + 12], y: rcx|DWORD) size: DWORD  <||@
  Comment 196 102 MOV (x: [rax|QWORD[*] + 16], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 199 104 MOV (x: [rax|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 203 106 MOV (x: [rax|QWORD[*] + 24], y: r13|DWORD[.]) size: DWORD  <||@
  Comment 207 108 MOV (x: [rax|QWORD[*] + 28], y: r13|DWORD[.]) size: DWORD  <||@
  Comment 211 110 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 214 112 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 223 12  <||@
  Comment 233 block B6 null  <||@
  Comment 233 56 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 233 58 stack:28|DWORD[.] = MOVE rsi|DWORD[.] moveKind: DWORD  <||@
  Comment 237 60 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 237 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 247 62 rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 250 64 rdx|DWORD = MOVE input: int[4|0x4]  <||@
  Comment 255 66 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 260 68 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:15]  <||@
  Comment 260 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 265 [r13:0, r14:0, stack:4]at java.util.TreeMap$EntrySet.iterator(TreeMap.java:1063) [bci: 15, duringCall: false, rethrow: false]
              |0                                                                                                                                                 |1                                                                                                                                                 |2             |3            
     locals:  |-                                                                                                                                                 |                                                                                                                                                  |              |             
     stack:   |vobject:TreeMap$EntryIterator:0{expectedModCount=int[0|0x0],next=Object[null],lastReturned=Object[null],this$0=Object[null],this$0=Object[null]}  |vobject:TreeMap$EntryIterator:0{expectedModCount=int[0|0x0],next=Object[null],lastReturned=Object[null],this$0=Object[null],this$0=Object[null]}  |r13|DWORD[.]  |r14|QWORD[.]   <||@
  Comment 266 70 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 266 72 rsi|DWORD[.] = MOVE stack:28|DWORD[.] moveKind: DWORD  <||@
  Comment 270 74 JUMP ~[] destination: B6 -> B8  <||@
  Comment 272 block B1 null  <||@
  Comment 272 16 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 272 18 rsi|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 275 20 r14|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 278 22 JUMP ~[] destination: B1 -> B5  <||@
  Comment 283 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 283 4  <||@
  Comment 289 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 289 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-7660[java.util.TreeMap$EntrySet.iterator()]"
  method "HotSpotCompilation-7660[java.util.TreeMap$EntrySet.iterator()]"
  date 1527005185704
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 107afdce0 448b560849c1e203493bc20f856f81d0fe900f1f80000000000f1f800000000089842400c0feff4883ec1848896c2410448b6e0c468b14ed20000000458bda49c1e3034585d20f84c4000000498bc3e919000000660f1f440000660f1f4400008505c012d9fc48c1e603488bc68b701885f675ec488bf048c1ee034c8bf0498b4760488d5020493b57700f8759000000498957600f1880e0000000488bd048b9d80508c007000000488b89a8000000488908c74008bb0001f8428b0ced1800000089480c89701044896014448968184489681c488bc2488b6c24104883c41885054112d9fcc5f877c38974240448ba680b00c007000000488bf2ba04000000b901000000e8f78f49ff908b742404eb8b418bf24d8bf3e963ffffffe820c814ff90e8fa96d0fe90f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2ec8bbfe slotKind: QWORD  <||@
  Comment 48 6 r13|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 52 8 r10|DWORD[.] = MOV [r13|DWORD[.] * 8 + 32] size: DWORD state [bci:0]  <||@
  Comment 52 [rsi:0, r13:0]at java.util.TreeMap$EntrySet.iterator(TreeMap.java:1063) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 52 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 60 10 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@12c6e6a0 encoding: base: 0 shift: 3  <||@
  Comment 67 12 TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 70 14 BRANCH trueDestinationProbability: 0.0029663797124133405 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 76 block B2 null  <||@
  Comment 76 24 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 76 26 rax|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 79 28 JUMP ~[] destination: B2 -> B3  <||@
  Comment 84 block B9 loop 0 depth 1 header:22|LoopBegin  <||@
  Comment 84 114 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 96 116 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:9, 12]  <||@
  Comment 96 [rax:0, rsi:0, r13:0]at java.util.TreeMap.getFirstEntry(TreeMap.java:2128) [bci: 9, duringCall: false, rethrow: false]
              |0  |1            
     locals:  |-  |rax|QWORD[.] 
  at java.util.TreeMap$EntrySet.iterator(TreeMap.java:1063) [bci: 12, duringCall: true, rethrow: false]
              |0                                                                                                                                                 |1                                                                                                                                                 |2            
     locals:  |-                                                                                                                                                 |                                                                                                                                                  |             
     stack:   |vobject:TreeMap$EntryIterator:0{expectedModCount=int[0|0x0],next=Object[null],lastReturned=Object[null],this$0=Object[null],this$0=Object[null]}  |vobject:TreeMap$EntryIterator:0{expectedModCount=int[0|0x0],next=Object[null],lastReturned=Object[null],this$0=Object[null],this$0=Object[null]}  |r13|DWORD[.]   <||@
  Comment 96 {infopoint: SAFEPOINT}  <||@
  Comment 96 11  <||@
  Comment 102 118 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@12c6e6a0 encoding: base: 0 shift: 3  <||@
  Comment 106 120 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 109 122 JUMP ~[] destination: B9 -> B3  <||@
  Comment 109 block B3 loop 0 depth 1 header:22|LoopBegin  <||@
  Comment 109 30 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 109 32 rsi|DWORD[.] = MOV [rax|QWORD[.] + 24] size: DWORD state [bci:9, 12]  <||@
  Comment 109 [rax:0, r13:0]at java.util.TreeMap.getFirstEntry(TreeMap.java:2128) [bci: 9, duringCall: false, rethrow: false]
              |0  |1            
     locals:  |-  |rax|QWORD[.] 
  at java.util.TreeMap$EntrySet.iterator(TreeMap.java:1063) [bci: 12, duringCall: true, rethrow: false]
              |0                                                                                                                                                 |1                                                                                                                                                 |2            
     locals:  |-                                                                                                                                                 |                                                                                                                                                  |             
     stack:   |vobject:TreeMap$EntryIterator:0{expectedModCount=int[0|0x0],next=Object[null],lastReturned=Object[null],this$0=Object[null],this$0=Object[null]}  |vobject:TreeMap$EntryIterator:0{expectedModCount=int[0|0x0],next=Object[null],lastReturned=Object[null],this$0=Object[null],this$0=Object[null]}  |r13|DWORD[.]   <||@
  Comment 109 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 112 34 TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 114 36 BRANCH trueDestinationProbability: 0.5638514714066366 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B9  <||@
  Comment 116 block B4 null  <||@
  Comment 116 38 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 116 40 rsi|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@12c6e6a0 encoding: base: 0 shift: 3  <||@
  Comment 123 42 r14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 126 44 JUMP ~[] destination: B4 -> B5  <||@
  Comment 126 block B5 null  <||@
  Comment 126 46 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 126 48 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 130 50 rdx|QWORD = LEA [rax|QWORD + 32] size: QWORD  <||@
  Comment 134 52 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 138 54 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7  <||@
  Comment 144 block B7 null  <||@
  Comment 144 76 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 144 78 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 148 80 AMD64PREFETCH ~[rax|QWORD + 224] instr: 0  <||@
  Comment 155 82 rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 155 84 JUMP ~[] destination: B7 -> B8  <||@
  Comment 155 block B8 null  <||@
  Comment 155 86 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 155 88 rdx|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 158 90 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/TreeMap$EntryIterator;, resolved>}  <||@
  Comment 158 {meta{HotSpotType<Ljava/util/TreeMap$EntryIterator;, resolved>}}  <||@
  Comment 168 92 rcx|QWORD = MOV [rcx|QWORD + 168] size: QWORD  <||@
  Comment 175 94 MOV (x: [rax|QWORD[*]], y: rcx|QWORD) size: QWORD  <||@
  Comment 178 96 MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/TreeMap$EntryIterator;, resolved>;compressed}  <||@
  Comment 178 {meta{HotSpotType<Ljava/util/TreeMap$EntryIterator;, resolved>;compressed}}  <||@
  Comment 185 98 rcx|DWORD = MOV [r13|DWORD[.] * 8 + 24] size: DWORD  <||@
  Comment 193 100 MOV (x: [rax|QWORD[*] + 12], y: rcx|DWORD) size: DWORD  <||@
  Comment 196 102 MOV (x: [rax|QWORD[*] + 16], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 199 104 MOV (x: [rax|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 203 106 MOV (x: [rax|QWORD[*] + 24], y: r13|DWORD[.]) size: DWORD  <||@
  Comment 207 108 MOV (x: [rax|QWORD[*] + 28], y: r13|DWORD[.]) size: DWORD  <||@
  Comment 211 110 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 214 112 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 223 12  <||@
  Comment 233 block B6 null  <||@
  Comment 233 56 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 233 58 stack:28|DWORD[.] = MOVE rsi|DWORD[.] moveKind: DWORD  <||@
  Comment 237 60 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 237 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 247 62 rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 250 64 rdx|DWORD = MOVE input: int[4|0x4]  <||@
  Comment 255 66 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 260 68 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:15]  <||@
  Comment 260 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 265 [r13:0, r14:0, stack:4]at java.util.TreeMap$EntrySet.iterator(TreeMap.java:1063) [bci: 15, duringCall: false, rethrow: false]
              |0                                                                                                                                                 |1                                                                                                                                                 |2             |3            
     locals:  |-                                                                                                                                                 |                                                                                                                                                  |              |             
     stack:   |vobject:TreeMap$EntryIterator:0{expectedModCount=int[0|0x0],next=Object[null],lastReturned=Object[null],this$0=Object[null],this$0=Object[null]}  |vobject:TreeMap$EntryIterator:0{expectedModCount=int[0|0x0],next=Object[null],lastReturned=Object[null],this$0=Object[null],this$0=Object[null]}  |r13|DWORD[.]  |r14|QWORD[.]   <||@
  Comment 266 70 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 266 72 rsi|DWORD[.] = MOVE stack:28|DWORD[.] moveKind: DWORD  <||@
  Comment 270 74 JUMP ~[] destination: B6 -> B8  <||@
  Comment 272 block B1 null  <||@
  Comment 272 16 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 272 18 rsi|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 275 20 r14|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 278 22 JUMP ~[] destination: B1 -> B5  <||@
  Comment 283 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 283 4  <||@
  Comment 289 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 289 5  <||@
  HexCodeFile>>> <|@
end_nmethod
