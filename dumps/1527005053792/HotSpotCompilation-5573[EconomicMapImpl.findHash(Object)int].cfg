begin_compilation
  name " HotSpotCompilation-5573[org.graalvm.collections.EconomicMapImpl.findHash(Object)]"
  method "HotSpotCompilation-5573[org.graalvm.collections.EconomicMapImpl.findHash(Object)]"
  date 1527005148797
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a870 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a870  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Lorg/graalvm/collections/EconomicMapImpl;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 ?389 ?95 ?95 ?201 ?275 v548 ?160 ?23 v898 ?71 v565 v897 ?80 v902 ?367 ?756 ?757 ?758 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v897 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a870 a890 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a870 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.strategy
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:391) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
nullCheck: false
stamp: n Lorg/graalvm/collections/Equivalence;
=== Inputs ===
stateBefore: - 
guard: - 
address: v897 
=== Succesors ===
next: v54 
=== Usages ===
a418 v446 v574 v576 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v897 #next: v54  <|@  <|@
f <@~|@floating>@ <|@
tid v446 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stamp: void
=== Inputs ===
value: a870 
=== Succesors ===
=== Usages ===
v54 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a870  <|@  <|@
f <@~|@floating>@ <|@
tid i13 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:270) [bci: 14]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v14 v24 ?23 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i10 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 9]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i19 i113 i118 i170 i188 i867 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i11 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 10]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i12 v854 v286 i92 v856 i269 v285 i362 v853 v855 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i86 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 54]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
rawvalue: 16
stableDimension: 0
stamp: i32 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i32
value: int[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
i87 i224 i397 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a769 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v772 v826 v790 v798 v782 v814 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a575 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:392) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
rawvalue: Equivalence$3@1213634123
stableDimension: 0
stamp: n!# Lorg/graalvm/collections/Equivalence$3;
stampKind: n -
value: NarrowOop[Equivalence$3@1213634123]
=== Inputs ===
=== Succesors ===
=== Usages ===
v576 v584 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v902 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a879 a875 a883 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a573 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:391) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
rawvalue: Equivalence$1@1642007824
stableDimension: 0
stamp: n!# Lorg/graalvm/collections/Equivalence$1;
stampKind: n -
value: NarrowOop[Equivalence$1@1642007824]
=== Inputs ===
=== Succesors ===
=== Usages ===
v574 v585 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i98 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:307) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 6]
rawvalue: 512
stableDimension: 0
stamp: i32 [512] ⇊0000000000000200 ⇈0000000000000200
stampKind: i32
value: int[512|0x200]
=== Inputs ===
=== Succesors ===
=== Usages ===
v392 v175 v218 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v898 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a871 a873 a877 a893 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a Ljava/lang/Object;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v437 ?95 ?275 ?160 ?23 v572 v565 v449 v423 v921 v129 v568 v548 v920 v922 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?95 <|@
d <@d|@=== Debug Properties ===
bci: 3
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findHash(Object)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 269
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - - a1 
=== Succesors ===
=== Usages ===
?71 ?389 ?80 ?249 ?210 ?201 ?367 ?756 ?757 ?758 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - - - a1  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findHash(Object)>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 269
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - - 
=== Succesors ===
=== Usages ===
v772 v920 v921 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:391) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stamp: void
trueSuccessorProbability: 0.7064097688878498
=== Inputs ===
condition: v446 
=== Succesors ===
trueSuccessor: v52 
falseSuccessor: v53 
=== Usages ===
=== Predecessor ===
a870 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v446 #trueSuccessor: v52 #falseSuccessor: v53  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4604537993089144813
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 47]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v920 
=== Usages ===
=== Predecessor ===
v54 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v920  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v920 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a2 
=== Succesors ===
next: i388 
=== Usages ===
=== Predecessor ===
v52 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a2 #next: i388  <|@  <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@61747c4b
stamp: void
targetMethod: HotSpotMethod<Object.hashCode()>
=== Inputs ===
arguments: a2 
=== Succesors ===
=== Usages ===
i388 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2  <|@  <|@
tid ?756 <|@
d <@d|@=== Debug Properties ===
bci: 48
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 398
stackSize: 0
=== Inputs ===
outerFrameState: ?95 
values: a1 - - 
=== Succesors ===
=== Usages ===
i388 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?95 values: a1 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i388 <|@
d <@d|@=== Debug Properties ===
bci: 48
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
polymorphic: false
stamp: i32
targetMethod: Direct#Object.hashCode
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v423 
stateDuring: ?756 
=== Succesors ===
next: a871 
=== Usages ===
?389 i396 i397 i374 i209 
=== Predecessor ===
v920 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v423 stateDuring: ?756 #next: a871  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a871 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v898 
=== Succesors ===
next: i872 
=== Usages ===
a427 v899 
=== Predecessor ===
i388 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v898 #next: i872  <|@  <|@
tid ?389 <|@
d <@d|@=== Debug Properties ===
bci: 51
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 398
stackSize: 1
=== Inputs ===
outerFrameState: ?95 
values: a1 - - i388 
=== Succesors ===
=== Usages ===
i872 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?95 values: a1 - - i388  <|@  <|@
f <@~|@floating>@ <|@
tid v899 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a871 
=== Succesors ===
=== Usages ===
i872 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a871  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i872 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?389 
guard: - 
address: v899 
=== Succesors ===
next: v395 
=== Usages ===
v392 i764 
=== Predecessor ===
a871 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?389 guard: - address: v899 #next: v395  <|@  <|@
f <@~|@floating>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i872 
y: i98 
=== Succesors ===
=== Usages ===
v395 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i872 y: i98  <|@  <|@
f <@~|@floating>@ <|@
tid a427 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a871 
=== Succesors ===
=== Usages ===
a308 a375 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a871  <|@  <|@
f <@~|@floating>@ <|@
tid i397 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 56]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
x: i388 
y: i86 
=== Succesors ===
=== Usages ===
i396 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i388 y: i86  <|@  <|@
f <@~|@floating>@ <|@
tid i396 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.XorNode$$Lambda$140/534106600@448e1437
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 57]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stamp: i32
=== Inputs ===
x: i388 
y: i397 
=== Succesors ===
=== Usages ===
i381 i213 
=== Predecessor ===
- >@ <|@
instruction <@^|@org.graalvm.compiler.nodes.calc.XorNode>@ x: i388 y: i397  <|@  <|@
f <@*|@fixed>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stamp: void
trueSuccessorProbability: 0.7476633120338436
=== Inputs ===
condition: v392 
=== Succesors ===
trueSuccessor: v393 
falseSuccessor: v394 
=== Usages ===
=== Predecessor ===
i872 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v392 #trueSuccessor: v393 #falseSuccessor: v394  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602932431886806378
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v393 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v368 
=== Usages ===
=== Predecessor ===
v395 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v368  <|@  <|@
f <@*|@fixed>@ <|@
tid v368 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v365 
=== Predecessor ===
v393 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B21" 
    xhandlers
    flags 
    probability 4595590265099889163
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v394 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v398 
=== Usages ===
=== Predecessor ===
v395 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v398  <|@  <|@
f <@*|@fixed>@ <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v199 
=== Predecessor ===
v394 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4598960471339651110
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:391) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v63 
=== Usages ===
=== Predecessor ===
v54 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v63  <|@  <|@
f <@~|@floating>@ <|@
tid v574 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:391) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a870 
y: a573 
=== Succesors ===
=== Usages ===
v63 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a870 y: a573  <|@  <|@
f <@*|@fixed>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:391) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stamp: void
trueSuccessorProbability: 0.8855350555757266
=== Inputs ===
condition: v574 
=== Succesors ===
trueSuccessor: v62 
falseSuccessor: v61 
=== Usages ===
=== Predecessor ===
v53 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v574 #trueSuccessor: v62 #falseSuccessor: v61  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B8" 
    xhandlers
    flags 
    probability 4598355083255592808
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 47]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v921 
=== Usages ===
=== Predecessor ===
v63 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v921  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v921 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a2 
=== Succesors ===
next: i79 
=== Usages ===
=== Predecessor ===
v62 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a2 #next: i79  <|@  <|@
tid v437 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@59f83b91
stamp: void
targetMethod: HotSpotMethod<Object.hashCode()>
=== Inputs ===
arguments: a2 
=== Succesors ===
=== Usages ===
i79 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2  <|@  <|@
tid ?757 <|@
d <@d|@=== Debug Properties ===
bci: 48
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 398
stackSize: 0
=== Inputs ===
outerFrameState: ?95 
values: a1 - - 
=== Succesors ===
=== Usages ===
i79 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?95 values: a1 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i79 <|@
d <@d|@=== Debug Properties ===
bci: 48
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
polymorphic: false
stamp: i32
targetMethod: Direct#Object.hashCode
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v437 
stateDuring: ?757 
=== Succesors ===
next: a873 
=== Usages ===
?80 i209 i223 i224 i374 
=== Predecessor ===
v921 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v437 stateDuring: ?757 #next: a873  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a873 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v898 
=== Succesors ===
next: i874 
=== Usages ===
a439 v900 
=== Predecessor ===
i79 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v898 #next: i874  <|@  <|@
tid ?80 <|@
d <@d|@=== Debug Properties ===
bci: 51
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 398
stackSize: 1
=== Inputs ===
outerFrameState: ?95 
values: a1 - - i79 
=== Succesors ===
=== Usages ===
i874 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?95 values: a1 - - i79  <|@  <|@
f <@~|@floating>@ <|@
tid v900 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a873 
=== Succesors ===
=== Usages ===
i874 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a873  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i874 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?80 
guard: - 
address: v900 
=== Succesors ===
next: v221 
=== Usages ===
v218 i764 
=== Predecessor ===
a873 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?80 guard: - address: v900 #next: v221  <|@  <|@
f <@~|@floating>@ <|@
tid v218 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i874 
y: i98 
=== Succesors ===
=== Usages ===
v221 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i874 y: i98  <|@  <|@
f <@~|@floating>@ <|@
tid a439 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a873 
=== Succesors ===
=== Usages ===
a308 a375 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a873  <|@  <|@
f <@~|@floating>@ <|@
tid i224 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 56]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
x: i79 
y: i86 
=== Succesors ===
=== Usages ===
i223 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i79 y: i86  <|@  <|@
f <@~|@floating>@ <|@
tid i223 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.XorNode$$Lambda$140/534106600@448e1437
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 57]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stamp: i32
=== Inputs ===
x: i79 
y: i224 
=== Succesors ===
=== Usages ===
i213 i381 
=== Predecessor ===
- >@ <|@
instruction <@^|@org.graalvm.compiler.nodes.calc.XorNode>@ x: i79 y: i224  <|@  <|@
f <@*|@fixed>@ <|@
tid v221 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stamp: void
trueSuccessorProbability: 0.7476633120338436
=== Inputs ===
condition: v218 
=== Succesors ===
trueSuccessor: v219 
falseSuccessor: v220 
=== Usages ===
=== Predecessor ===
i874 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v218 #trueSuccessor: v219 #falseSuccessor: v220  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4596171327712223541
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v219 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v366 
=== Usages ===
=== Predecessor ===
v221 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v366  <|@  <|@
f <@*|@fixed>@ <|@
tid v366 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v365 
=== Predecessor ===
v219 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B2" 
    successors "B15" 
    xhandlers
    flags 
    probability 4604683258742228407
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i374 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v365 
values: i79 i388 
=== Succesors ===
=== Usages ===
?367 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v365 values: i79 i388  <|@  <|@
f <@~|@floating>@ <|@
tid a375 <|@
d <@d|@=== Debug Properties ===
stamp: a [Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v365 
values: a439 a427 
=== Succesors ===
=== Usages ===
a309 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v365 values: a439 a427  <|@  <|@
f <@~|@floating>@ <|@
tid i381 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v365 
values: i223 i396 
=== Succesors ===
=== Usages ===
i258 i361 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v365 values: i223 i396  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v365 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v366 v368 
=== Succesors ===
next: a875 
=== Usages ===
i374 a375 i381 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v366 v368 #next: a875  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a875 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.hashArray
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 12]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
nullCheck: false
stamp: n# [B
=== Inputs ===
stateBefore: - 
guard: - 
address: v902 
=== Succesors ===
next: i876 
=== Usages ===
a467 v904 
=== Predecessor ===
v365 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v902 #next: i876  <|@  <|@
tid ?367 <|@
d <@d|@=== Debug Properties ===
bci: 51
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 398
stackSize: 1
=== Inputs ===
outerFrameState: ?95 
values: a1 - - i374 
=== Succesors ===
=== Usages ===
i876 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?95 values: a1 - - i374  <|@  <|@
f <@~|@floating>@ <|@
tid v904 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a875 
=== Succesors ===
=== Usages ===
i876 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a875  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i876 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?367 
guard: - 
address: v904 
=== Succesors ===
next: v363 
=== Usages ===
i362 i251 
=== Predecessor ===
a875 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?367 guard: - address: v904 #next: v363  <|@  <|@
f <@~|@floating>@ <|@
tid i362 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 65]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i876 
y: i11 
=== Succesors ===
=== Usages ===
i361 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i876 y: i11  <|@  <|@
f <@~|@floating>@ <|@
tid i361 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 66]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stamp: i32
=== Inputs ===
x: i362 
y: i381 
=== Succesors ===
=== Usages ===
i261 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i362 y: i381  <|@  <|@
f <@~|@floating>@ <|@
tid a467 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 12]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
op: Uncompress
stamp: a# [B
=== Inputs ===
value: a875 
=== Succesors ===
=== Usages ===
a254 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a875  <|@  <|@
f <@*|@fixed>@ <|@
tid v363 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v244 
=== Predecessor ===
i876 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589391659170536246
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v220 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v202 
=== Usages ===
=== Predecessor ===
v221 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v202  <|@  <|@
f <@*|@fixed>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v199 
=== Predecessor ===
v220 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4585003925708260850
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:392) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v648 
=== Usages ===
=== Predecessor ===
v63 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v648  <|@  <|@
f <@~|@floating>@ <|@
tid v576 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:392) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a870 
y: a575 
=== Succesors ===
=== Usages ===
v648 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a870 y: a575  <|@  <|@
f <@*|@fixed>@ <|@
tid v648 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:392) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v576 
=== Succesors ===
trueSuccessor: v647 
falseSuccessor: v645 
=== Usages ===
=== Predecessor ===
v61 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v576 #trueSuccessor: v647 #falseSuccessor: v645  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v647 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:392) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v772 
=== Usages ===
=== Predecessor ===
v648 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v772  <|@  <|@
f <@~|@floating>@ <|@
tid i776 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -113939
stableDimension: 0
stamp: i32 [-113939] ⇊00000000fffe42ed ⇈00000000fffe42ed
stampKind: i32
value: int[-113939|0xfffffffffffe42ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
v772 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v772 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i776 
speculation: a769 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v647 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i776 speculation: a769  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B20" 
    xhandlers
    flags 
    probability 4585003925708260850
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v645 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:392) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: i70 
=== Usages ===
=== Predecessor ===
v648 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i70  <|@  <|@
f <@~|@floating>@ <|@
tid a418 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:391) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
op: Uncompress
stamp: a Lorg/graalvm/collections/Equivalence;
=== Inputs ===
value: a870 
=== Succesors ===
=== Usages ===
v449 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a870  <|@  <|@
tid v449 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@dbf9314
stamp: void
targetMethod: HotSpotMethod<Equivalence.hashCode(Object)>
=== Inputs ===
arguments: a418 a2 
=== Succesors ===
=== Usages ===
i70 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a418 a2  <|@  <|@
tid ?758 <|@
d <@d|@=== Debug Properties ===
bci: 40
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 395
stackSize: 0
=== Inputs ===
outerFrameState: ?95 
values: a1 - - 
=== Succesors ===
=== Usages ===
i70 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?95 values: a1 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i70 <|@
d <@d|@=== Debug Properties ===
bci: 40
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
polymorphic: false
stamp: i32
targetMethod: Direct#Equivalence.hashCode
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v449 
stateDuring: ?758 
=== Succesors ===
next: a877 
=== Usages ===
?71 i209 i88 i87 
=== Predecessor ===
v645 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v449 stateDuring: ?758 #next: a877  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a877 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v898 
=== Succesors ===
next: i878 
=== Usages ===
a451 v901 
=== Predecessor ===
i70 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v898 #next: i878  <|@  <|@
tid ?71 <|@
d <@d|@=== Debug Properties ===
bci: 43
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 395
stackSize: 1
=== Inputs ===
outerFrameState: ?95 
values: a1 - - i70 
=== Succesors ===
=== Usages ===
v790 i878 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?95 values: a1 - - i70  <|@  <|@
f <@~|@floating>@ <|@
tid v901 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a877 
=== Succesors ===
=== Usages ===
i878 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a877  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i878 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?71 
guard: - 
address: v901 
=== Succesors ===
next: v178 
=== Usages ===
v175 i764 
=== Predecessor ===
a877 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?71 guard: - address: v901 #next: v178  <|@  <|@
f <@~|@floating>@ <|@
tid v175 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i878 
y: i98 
=== Succesors ===
=== Usages ===
v178 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i878 y: i98  <|@  <|@
f <@~|@floating>@ <|@
tid a451 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a877 
=== Succesors ===
=== Usages ===
a309 a308 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a877  <|@  <|@
f <@~|@floating>@ <|@
tid i87 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 56]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
x: i70 
y: i86 
=== Succesors ===
=== Usages ===
i88 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i70 y: i86  <|@  <|@
f <@~|@floating>@ <|@
tid i88 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.XorNode$$Lambda$140/534106600@448e1437
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 57]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stamp: i32
=== Inputs ===
x: i70 
y: i87 
=== Succesors ===
=== Usages ===
i258 i213 i268 
=== Predecessor ===
- >@ <|@
instruction <@^|@org.graalvm.compiler.nodes.calc.XorNode>@ x: i70 y: i87  <|@  <|@
f <@*|@fixed>@ <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stamp: void
trueSuccessorProbability: 0.7476633120338436
=== Inputs ===
condition: v175 
=== Succesors ===
trueSuccessor: v176 
falseSuccessor: v177 
=== Usages ===
=== Predecessor ===
i878 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v175 #trueSuccessor: v176 #falseSuccessor: v177  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4582899244768309587
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v176 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: a879 
=== Usages ===
=== Predecessor ===
v178 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a879  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a879 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.hashArray
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 12]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
nullCheck: false
stamp: n# [B
=== Inputs ===
stateBefore: - 
guard: - 
address: v902 
=== Succesors ===
next: v656 
=== Usages ===
a460 v461 v903 
=== Predecessor ===
v176 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v902 #next: v656  <|@  <|@
f <@~|@floating>@ <|@
tid v461 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stamp: void
=== Inputs ===
value: a879 
=== Succesors ===
=== Usages ===
v656 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a879  <|@  <|@
f <@*|@fixed>@ <|@
tid v656 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v461 
=== Succesors ===
trueSuccessor: v655 
falseSuccessor: v653 
=== Usages ===
=== Predecessor ===
a879 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v461 #trueSuccessor: v655 #falseSuccessor: v653  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v655 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v790 
=== Usages ===
=== Predecessor ===
v656 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v790  <|@  <|@
f <@~|@floating>@ <|@
tid i792 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -118283
stableDimension: 0
stamp: i32 [-118283] ⇊00000000fffe31f5 ⇈00000000fffe31f5
stampKind: i32
value: int[-118283|0xfffffffffffe31f5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v790 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v790 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?71 
actionAndReason: i792 
speculation: a769 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v655 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?71 actionAndReason: i792 speculation: a769  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4582899244768309587
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v653 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: i880 
=== Usages ===
=== Predecessor ===
v656 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i880  <|@  <|@
f <@~|@floating>@ <|@
tid v903 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a879 
=== Succesors ===
=== Usages ===
i880 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a879  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i880 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v903 
=== Succesors ===
next: v246 
=== Usages ===
i251 i269 
=== Predecessor ===
v653 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v903 #next: v246  <|@  <|@
f <@~|@floating>@ <|@
tid i269 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 65]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i880 
y: i11 
=== Succesors ===
=== Usages ===
i268 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i880 y: i11  <|@  <|@
f <@~|@floating>@ <|@
tid i268 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 66]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stamp: i32
=== Inputs ===
x: i88 
y: i269 
=== Succesors ===
=== Usages ===
i261 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i88 y: i269  <|@  <|@
f <@~|@floating>@ <|@
tid a460 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 12]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
op: Uncompress
stamp: a# [B
=== Inputs ===
value: a879 
=== Succesors ===
=== Usages ===
a254 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a879  <|@  <|@
f <@*|@fixed>@ <|@
tid v246 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v244 
=== Predecessor ===
i880 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B7" 
    successors "B16" "B19" 
    xhandlers
    flags 
    probability 4604909571972224834
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i251 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
valueDescription: i32
=== Inputs ===
merge: v244 
values: i880 i876 
=== Succesors ===
=== Usages ===
?210 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v244 values: i880 i876  <|@  <|@
f <@~|@floating>@ <|@
tid a254 <|@
d <@d|@=== Debug Properties ===
stamp: a# [B
valueDescription: a -
=== Inputs ===
merge: v244 
values: a460 a467 
=== Succesors ===
=== Usages ===
v907 v906 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v244 values: a460 a467  <|@  <|@
f <@~|@floating>@ <|@
tid a309 <|@
d <@d|@=== Debug Properties ===
stamp: a [Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v244 
values: a451 a375 
=== Succesors ===
=== Usages ===
a313 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v244 values: a451 a375  <|@  <|@
f <@~|@floating>@ <|@
tid i258 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v244 
values: i88 i381 
=== Succesors ===
=== Usages ===
?210 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v244 values: i88 i381  <|@  <|@
f <@~|@floating>@ <|@
tid i261 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v244 
values: i268 i361 
=== Succesors ===
=== Usages ===
v907 v486 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v244 values: i268 i361  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v246 v363 
=== Succesors ===
next: i881 
=== Usages ===
i251 a254 a309 i258 i261 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v246 v363 #next: i881  <|@  <|@
f <@~|@floating>@ <|@
tid v906 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a254 
index: - 
=== Succesors ===
=== Usages ===
i881 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a254 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i881 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:308) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 6]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v906 
=== Succesors ===
next: v664 
=== Usages ===
v486 
=== Predecessor ===
v244 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v906 #next: v664  <|@  <|@
f <@~|@floating>@ <|@
tid v486 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:308) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 6]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i261 
y: i881 
=== Succesors ===
=== Usages ===
v664 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i261 y: i881  <|@  <|@
f <@*|@fixed>@ <|@
tid v664 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:308) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 6]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v486 
=== Succesors ===
trueSuccessor: v661 
falseSuccessor: v663 
=== Usages ===
=== Predecessor ===
i881 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v486 #trueSuccessor: v661 #falseSuccessor: v663  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4604909571972224834
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v661 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:308) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: i882 
=== Usages ===
i882 
=== Predecessor ===
v664 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i882  <|@  <|@
f <@~|@floating>@ <|@
tid v907 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a254 
index: i261 
=== Succesors ===
=== Usages ===
i882 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a254 index: i261  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i882 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: byte
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:308) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 6]
nullCheck: false
stamp: i8
=== Inputs ===
stateBefore: - 
guard: v661 
address: v907 
=== Succesors ===
next: v284 
=== Usages ===
i495 i578 
=== Predecessor ===
v661 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v661 address: v907 #next: v284  <|@  <|@
f <@~|@floating>@ <|@
tid i495 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 8
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:308) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 6]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i882 
=== Succesors ===
=== Usages ===
v287 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i882  <|@  <|@
f <@~|@floating>@ <|@
tid i105 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:308) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 6]
rawvalue: 255
stableDimension: 0
stamp: i32 [255] ⇊00000000000000ff ⇈00000000000000ff
stampKind: i32
value: int[255|0xff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v287 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:270) [bci: 14]
stamp: void
=== Inputs ===
x: i495 
y: i105 
=== Succesors ===
=== Usages ===
v284 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: i495 y: i105  <|@  <|@
f <@*|@fixed>@ <|@
tid v284 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:270) [bci: 14]
stamp: void
trueSuccessorProbability: 0.4113665609079093
=== Inputs ===
condition: v287 
=== Succesors ===
trueSuccessor: v282 
falseSuccessor: v283 
=== Usages ===
=== Predecessor ===
i882 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v287 #trueSuccessor: v282 #falseSuccessor: v283  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors 
    xhandlers
    flags 
    probability 4599212194713537126
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v282 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:282) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v286 
=== Usages ===
=== Predecessor ===
v284 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v286  <|@  <|@
f <@*|@fixed>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: i11 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v282 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i11 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B28" 
    xhandlers
    flags 
    probability 4601599749976171549
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:271) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v276 
=== Usages ===
=== Predecessor ===
v284 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v276  <|@  <|@
f <@~|@floating>@ <|@
tid i578 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:308) [bci: 20]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 6]
resultBits: 32
stamp: i32 [0 - 255] ⇈00000000000000ff
=== Inputs ===
value: i882 
=== Succesors ===
=== Usages ===
i278 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i882  <|@  <|@
f <@*|@fixed>@ <|@
tid v276 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v273 
=== Predecessor ===
v283 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v663 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:308) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v919 
=== Usages ===
=== Predecessor ===
v664 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v919  <|@  <|@
tid ?210 <|@
d <@d|@=== Debug Properties ===
bci: 64
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 401
stackSize: 2
=== Inputs ===
outerFrameState: ?95 
values: - - - i258 i251 
=== Succesors ===
=== Usages ===
v919 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?95 values: - - - i258 i251  <|@  <|@
f <@*|@fixed>@ <|@
tid v919 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 487
reason: BoundsCheckException
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?210 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v663 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?210  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B21" 
    xhandlers
    flags 
    probability 4576041993751147810
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v177 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v200 
=== Usages ===
=== Predecessor ===
v178 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v200  <|@  <|@
f <@*|@fixed>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v199 
=== Predecessor ===
v177 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B8" "B3" 
    successors "B22" "B60" 
    xhandlers
    flags 
    probability 4598217313573491068
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a308 <|@
d <@d|@=== Debug Properties ===
stamp: a [Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v199 
values: a451 a439 a427 
=== Succesors ===
=== Usages ===
a313 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v199 values: a451 a439 a427  <|@  <|@
f <@~|@floating>@ <|@
tid i209 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v199 
values: i70 i79 i388 
=== Succesors ===
=== Usages ===
?201 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v199 values: i70 i79 i388  <|@  <|@
f <@~|@floating>@ <|@
tid i213 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v199 
values: i88 i223 i396 
=== Succesors ===
=== Usages ===
?249 i93 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v199 values: i88 i223 i396  <|@  <|@
f <@~|@floating>@ <|@
tid i764 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
valueDescription: i32
=== Inputs ===
merge: v199 
values: i878 i874 i872 
=== Succesors ===
=== Usages ===
v111 v184 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v199 values: i878 i874 i872  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v200 v202 v398 
=== Succesors ===
next: v668 
=== Usages ===
a308 i209 i213 i764 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v200 v202 v398 #next: v668  <|@  <|@
tid ?201 <|@
d <@d|@=== Debug Properties ===
bci: 52
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 400
stackSize: 0
=== Inputs ===
outerFrameState: ?95 
values: a1 - i209 
=== Succesors ===
=== Usages ===
v798 i884 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?95 values: a1 - i209  <|@  <|@
f <@~|@floating>@ <|@
tid i110 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:309) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 6]
rawvalue: 131072
stableDimension: 0
stamp: i32 [131072] ⇊0000000000020000 ⇈0000000000020000
stampKind: i32
value: int[131072|0x20000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v111 v184 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v184 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i764 
y: i110 
=== Succesors ===
=== Usages ===
v668 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i764 y: i110  <|@  <|@
f <@*|@fixed>@ <|@
tid v668 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v184 
=== Succesors ===
trueSuccessor: v665 
falseSuccessor: v667 
=== Usages ===
=== Predecessor ===
v199 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v184 #trueSuccessor: v665 #falseSuccessor: v667  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B58" 
    xhandlers
    flags 
    probability 4598217313573491068
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v665 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: a883 
=== Usages ===
=== Predecessor ===
v668 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a883  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a883 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.hashArray
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:522) [bci: 28]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
nullCheck: false
stamp: n# [B
=== Inputs ===
stateBefore: - 
guard: - 
address: v902 
=== Succesors ===
next: i884 
=== Usages ===
v909 v908 v905 
=== Predecessor ===
v665 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v902 #next: i884  <|@  <|@
f <@~|@floating>@ <|@
tid v905 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a883 
=== Succesors ===
=== Usages ===
i884 i885 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a883  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i884 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:522) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?201 
guard: - 
address: v905 
=== Succesors ===
next: v676 
=== Usages ===
i188 
=== Predecessor ===
a883 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?201 guard: - address: v905 #next: v676  <|@  <|@
f <@~|@floating>@ <|@
tid i188 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:522) [bci: 33]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stamp: i32 [0 - 1073741823] ⇈000000003fffffff
=== Inputs ===
x: i884 
y: i10 
=== Succesors ===
=== Usages ===
?249 i92 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i884 y: i10  <|@  <|@
tid ?249 <|@
d <@d|@=== Debug Properties ===
bci: 64
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 401
stackSize: 2
=== Inputs ===
outerFrameState: ?95 
values: - - - i213 i188 
=== Succesors ===
=== Usages ===
v814 i885 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?95 values: - - - i213 i188  <|@  <|@
f <@~|@floating>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:309) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 6]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i764 
y: i110 
=== Succesors ===
=== Usages ===
v676 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i764 y: i110  <|@  <|@
f <@*|@fixed>@ <|@
tid v676 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:309) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 6]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v111 
=== Succesors ===
trueSuccessor: v673 
falseSuccessor: v675 
=== Usages ===
=== Predecessor ===
i884 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v111 #trueSuccessor: v673 #falseSuccessor: v675  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B57" 
    xhandlers
    flags 
    probability 4598217313573491068
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v673 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:309) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: i885 
=== Usages ===
=== Predecessor ===
v676 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i885  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i885 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 41]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 6]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?249 
guard: - 
address: v905 
=== Succesors ===
next: v684 
=== Usages ===
v502 v512 
=== Predecessor ===
v673 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?249 guard: - address: v905 #next: v684  <|@  <|@
f <@~|@floating>@ <|@
tid i92 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 65]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stamp: i32 [-1 - 1073741822]
=== Inputs ===
x: i188 
y: i11 
=== Succesors ===
=== Usages ===
i93 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i188 y: i11  <|@  <|@
f <@~|@floating>@ <|@
tid i93 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 66]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stamp: i32
=== Inputs ===
x: i92 
y: i213 
=== Succesors ===
=== Usages ===
i113 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i92 y: i213  <|@  <|@
f <@~|@floating>@ <|@
tid i113 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:310) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 6]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i93 
y: i10 
=== Succesors ===
=== Usages ===
v908 i118 v502 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i93 y: i10  <|@  <|@
f <@~|@floating>@ <|@
tid v502 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 41]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 6]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i113 
y: i885 
=== Succesors ===
=== Usages ===
v684 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i113 y: i885  <|@  <|@
f <@*|@fixed>@ <|@
tid v684 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 41]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 6]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v502 
=== Succesors ===
trueSuccessor: v681 
falseSuccessor: v683 
=== Usages ===
=== Predecessor ===
i885 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v502 #trueSuccessor: v681 #falseSuccessor: v683  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B56" 
    xhandlers
    flags 
    probability 4598217313573491068
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v681 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 41]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v688 
=== Usages ===
i887 
=== Predecessor ===
v684 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v688  <|@  <|@
f <@~|@floating>@ <|@
tid i118 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 52]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 6]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i113 
y: i10 
=== Succesors ===
=== Usages ===
v909 v512 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i113 y: i10  <|@  <|@
f <@~|@floating>@ <|@
tid v512 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 53]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 6]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i118 
y: i885 
=== Succesors ===
=== Usages ===
v688 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i118 y: i885  <|@  <|@
f <@*|@fixed>@ <|@
tid v688 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 53]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 6]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v512 
=== Succesors ===
trueSuccessor: v685 
falseSuccessor: v687 
=== Usages ===
=== Predecessor ===
v681 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v512 #trueSuccessor: v685 #falseSuccessor: v687  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4598217313573491068
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v685 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 53]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: i886 
=== Usages ===
i886 
=== Predecessor ===
v688 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i886  <|@  <|@
f <@~|@floating>@ <|@
tid v909 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i118 
index: a883 
=== Succesors ===
=== Usages ===
i886 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i118 index: a883  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i886 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: byte
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 53]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 6]
nullCheck: false
stamp: i8
=== Inputs ===
stateBefore: - 
guard: v685 
address: v909 
=== Succesors ===
next: i887 
=== Usages ===
i582 
=== Predecessor ===
v685 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v685 address: v909 #next: i887  <|@  <|@
f <@~|@floating>@ <|@
tid v908 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i113 
index: a883 
=== Succesors ===
=== Usages ===
i887 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i113 index: a883  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i887 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: byte
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 41]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 6]
nullCheck: false
stamp: i8
=== Inputs ===
stateBefore: - 
guard: v681 
address: v908 
=== Succesors ===
next: v17 
=== Usages ===
i580 
=== Predecessor ===
i886 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v681 address: v908 #next: v17  <|@  <|@
f <@~|@floating>@ <|@
tid i582 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 57]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 6]
resultBits: 32
stamp: i32 [0 - 255] ⇈00000000000000ff
=== Inputs ===
value: i886 
=== Succesors ===
=== Usages ===
i122 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i886  <|@  <|@
f <@~|@floating>@ <|@
tid i121 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 58]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 6]
rawvalue: 8
stableDimension: 0
stamp: i32 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i122 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i122 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 6]
stamp: i32 [0 - 65280] ⇈000000000000ff00
=== Inputs ===
x: i582 
y: i121 
=== Succesors ===
=== Usages ===
i123 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i582 y: i121  <|@  <|@
f <@~|@floating>@ <|@
tid i580 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 45]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 6]
resultBits: 32
stamp: i32 [0 - 255] ⇈00000000000000ff
=== Inputs ===
value: i887 
=== Succesors ===
=== Usages ===
i123 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i887  <|@  <|@
f <@~|@floating>@ <|@
tid i123 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 6]
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
x: i122 
y: i580 
=== Succesors ===
=== Usages ===
v14 i278 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i122 y: i580  <|@  <|@
f <@~|@floating>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:270) [bci: 14]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i123 
y: i13 
=== Succesors ===
=== Usages ===
v17 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i123 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:270) [bci: 14]
stamp: void
trueSuccessorProbability: 0.4113665609079093
=== Inputs ===
condition: v14 
=== Succesors ===
trueSuccessor: v15 
falseSuccessor: v16 
=== Usages ===
=== Predecessor ===
i887 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v14 #trueSuccessor: v15 #falseSuccessor: v16  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors 
    xhandlers
    flags 
    probability 4592144206127320787
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:282) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v285 
=== Usages ===
=== Predecessor ===
v17 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v285  <|@  <|@
f <@*|@fixed>@ <|@
tid v285 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: i11 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v15 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i11 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4594519514869627790
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:271) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v274 
=== Usages ===
=== Predecessor ===
v17 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v274  <|@  <|@
f <@*|@fixed>@ <|@
tid v274 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v273 
=== Predecessor ===
v16 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B18" 
    successors "B29" "B54" 
    xhandlers
    flags 
    probability 4603477158219182322
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i278 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 65535] ⇈000000000000ffff
valueDescription: i32
=== Inputs ===
merge: v273 
values: i123 i578 
=== Succesors ===
=== Usages ===
i12 ?275 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v273 values: i123 i578  <|@  <|@
f <@~|@floating>@ <|@
tid a313 <|@
d <@d|@=== Debug Properties ===
stamp: a [Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v273 
values: a308 a309 
=== Succesors ===
=== Usages ===
v911 v912 v910 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v273 values: a308 a309  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v273 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v274 v276 
=== Succesors ===
next: i888 
=== Usages ===
i278 a313 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v274 v276 #next: i888  <|@  <|@
tid ?275 <|@
d <@d|@=== Debug Properties ===
bci: 9
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findHash(Object)>
duringCall: false
localsSize: 5
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 6]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 269
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - - i278 
=== Succesors ===
=== Usages ===
v826 i888 v922 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - - - i278  <|@  <|@
f <@~|@floating>@ <|@
tid v910 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a313 
index: - 
=== Succesors ===
=== Usages ===
i888 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a313 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i888 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:271) [bci: 19]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?275 
guard: - 
address: v910 
=== Succesors ===
next: v696 
=== Usages ===
v526 v539 
=== Predecessor ===
v273 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?275 guard: - address: v910 #next: v696  <|@  <|@
f <@~|@floating>@ <|@
tid i12 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 10]
stamp: i32 [-1 - 65534]
=== Inputs ===
x: i278 
y: i11 
=== Succesors ===
=== Usages ===
i19 ?23 v28 ?160 v293 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i278 y: i11  <|@  <|@
f <@~|@floating>@ <|@
tid i19 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:271) [bci: 19]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i12 
y: i10 
=== Succesors ===
=== Usages ===
v911 i170 v526 i867 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i12 y: i10  <|@  <|@
f <@~|@floating>@ <|@
tid v526 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:271) [bci: 19]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i19 
y: i888 
=== Succesors ===
=== Usages ===
v696 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i19 y: i888  <|@  <|@
f <@*|@fixed>@ <|@
tid v696 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:271) [bci: 19]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v526 
=== Succesors ===
trueSuccessor: v693 
falseSuccessor: v695 
=== Usages ===
=== Predecessor ===
i888 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v526 #trueSuccessor: v693 #falseSuccessor: v695  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4603477158219182322
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v693 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:271) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: a889 
=== Usages ===
a889 
=== Predecessor ===
v696 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a889  <|@  <|@
f <@~|@floating>@ <|@
tid v911 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a313 
index: i19 
=== Succesors ===
=== Usages ===
a889 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a313 index: i19  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a889 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:271) [bci: 19]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v693 
address: v911 
=== Succesors ===
next: v132 
=== Usages ===
a535 
=== Predecessor ===
v693 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v693 address: v911 #next: v132  <|@  <|@
f <@~|@floating>@ <|@
tid a535 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:271) [bci: 19]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a889 
=== Succesors ===
=== Usages ===
v572 v129 v568 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a889  <|@  <|@
f <@~|@floating>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:255) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:272) [bci: 26]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2 
y: a535 
=== Succesors ===
=== Usages ===
v132 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a2 y: a535  <|@  <|@
f <@*|@fixed>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:255) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:272) [bci: 26]
stamp: void
trueSuccessorProbability: 0.09569357247187082
=== Inputs ===
condition: v129 
=== Succesors ===
trueSuccessor: v130 
falseSuccessor: v131 
=== Usages ===
=== Predecessor ===
a889 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v129 #trueSuccessor: v130 #falseSuccessor: v131  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors 
    xhandlers
    flags 
    probability 4588278604279519704
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:256) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:272) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v293 
=== Usages ===
=== Predecessor ===
v132 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v293  <|@  <|@
f <@*|@fixed>@ <|@
tid v293 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:273) [bci: 33]
stamp: void
=== Inputs ===
result: i12 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v130 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i12 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B39" 
    xhandlers
    flags 
    probability 4602969796766449492
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:272) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: a890 
=== Usages ===
=== Predecessor ===
v132 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a890  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a890 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.strategy
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:272) [bci: 26]
nullCheck: false
stamp: n Lorg/graalvm/collections/Equivalence;
=== Inputs ===
stateBefore: - 
guard: - 
address: v897 
=== Succesors ===
next: v138 
=== Usages ===
a537 v569 v584 v585 
=== Predecessor ===
v131 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v897 #next: v138  <|@  <|@
f <@~|@floating>@ <|@
tid v569 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:272) [bci: 26]
stamp: void
=== Inputs ===
value: a890 
=== Succesors ===
=== Usages ===
v138 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a890  <|@  <|@
f <@~|@floating>@ <|@
tid v864 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:276) [bci: 43]
rawvalue: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v865 v866 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v138 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:272) [bci: 26]
stamp: void
trueSuccessorProbability: 0.9726719235714489
=== Inputs ===
condition: v569 
=== Succesors ===
trueSuccessor: v136 
falseSuccessor: v137 
=== Usages ===
=== Predecessor ===
a890 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v569 #trueSuccessor: v136 #falseSuccessor: v137  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B38" 
    xhandlers
    flags 
    probability 4602838770193706684
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:265) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:272) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v700 
=== Usages ===
=== Predecessor ===
v138 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v700  <|@  <|@
f <@~|@floating>@ <|@
tid i867 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:275) [bci: 36]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i19 
y: i10 
=== Succesors ===
=== Usages ===
v539 v912 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i19 y: i10  <|@  <|@
f <@~|@floating>@ <|@
tid v539 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:275) [bci: 36]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i867 
y: i888 
=== Succesors ===
=== Usages ===
v700 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i867 y: i888  <|@  <|@
f <@*|@fixed>@ <|@
tid v700 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:275) [bci: 36]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v539 
=== Succesors ===
trueSuccessor: v697 
falseSuccessor: v699 
=== Usages ===
=== Predecessor ===
v136 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v539 #trueSuccessor: v697 #falseSuccessor: v699  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4602838770193706684
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v697 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:275) [bci: 36]
stamp: void
=== Inputs ===
=== Succesors ===
next: a891 
=== Usages ===
a891 
=== Predecessor ===
v700 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a891  <|@  <|@
f <@~|@floating>@ <|@
tid v912 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a313 
index: i867 
=== Succesors ===
=== Usages ===
a891 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a313 index: i867  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a891 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:275) [bci: 36]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v697 
address: v912 
=== Succesors ===
next: v717 
=== Usages ===
a547 v748 v915 
=== Predecessor ===
v697 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v697 address: v912 #next: v717  <|@  <|@
f <@~|@floating>@ <|@
tid v748 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:276) [bci: 43]
stamp: void
=== Inputs ===
value: a891 
=== Succesors ===
=== Usages ===
v717 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a891  <|@  <|@
f <@*|@fixed>@ <|@
tid v717 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:276) [bci: 43]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v748 
=== Succesors ===
trueSuccessor: v716 
falseSuccessor: v715 
=== Usages ===
=== Predecessor ===
a891 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v748 #trueSuccessor: v716 #falseSuccessor: v715  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4587622502073282859
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v716 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:276) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v855 
=== Usages ===
=== Predecessor ===
v717 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v855  <|@  <|@
f <@*|@fixed>@ <|@
tid v855 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:276) [bci: 43]
stamp: void
=== Inputs ===
result: i11 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v716 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i11 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4602066011085080403
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v715 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:141) [bci: 28]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:276) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v892 
=== Usages ===
=== Predecessor ===
v717 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v892  <|@  <|@
f <@~|@floating>@ <|@
tid v915 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a891 
=== Succesors ===
=== Usages ===
v892 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a891  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v892 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:276) [bci: 43]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v915 
=== Succesors ===
next: v848 
=== Usages ===
v865 
=== Predecessor ===
v715 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v915 #next: v848  <|@  <|@
f <@~|@floating>@ <|@
tid v865 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:276) [bci: 43]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v892 
y: v864 
=== Succesors ===
=== Usages ===
v848 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v892 y: v864  <|@  <|@
f <@*|@fixed>@ <|@
tid v848 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:276) [bci: 43]
stamp: void
trueSuccessorProbability: 0.4480776492636467
=== Inputs ===
condition: v865 
=== Succesors ===
trueSuccessor: v846 
falseSuccessor: v845 
=== Usages ===
=== Predecessor ===
v892 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v865 #trueSuccessor: v846 #falseSuccessor: v845  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors 
    xhandlers
    flags 
    probability 4596690698412909547
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v846 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:276) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: i237 
=== Usages ===
=== Predecessor ===
v848 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i237  <|@  <|@
f <@~|@floating>@ <|@
tid a547 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:275) [bci: 36]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a891 
=== Succesors ===
=== Usages ===
v548 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a891  <|@  <|@
tid v548 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:277) [bci: 56]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@52ebf7c2
stamp: void
targetMethod: HotSpotMethod<EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)>
=== Inputs ===
arguments: a1 a2 a547 
=== Succesors ===
=== Usages ===
i237 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a2 a547  <|@  <|@
tid ?760 <|@
d <@d|@=== Debug Properties ===
bci: 56
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findHash(Object)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 277
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - - 
=== Succesors ===
=== Usages ===
i237 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i237 <|@
d <@d|@=== Debug Properties ===
bci: 56
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:277) [bci: 56]
polymorphic: false
stamp: i32
targetMethod: Direct#EconomicMapImpl.findWithCollision
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v548 
stateDuring: ?760 
=== Succesors ===
next: v239 
=== Usages ===
v239 
=== Predecessor ===
v846 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v548 stateDuring: ?760 #next: v239  <|@  <|@
f <@*|@fixed>@ <|@
tid v239 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:277) [bci: 59]
stamp: void
=== Inputs ===
result: i237 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i237 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i237 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors 
    xhandlers
    flags 
    probability 4598304672023893341
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v845 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:276) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v856 
=== Usages ===
=== Predecessor ===
v848 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v856  <|@  <|@
f <@*|@fixed>@ <|@
tid v856 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:276) [bci: 43]
stamp: void
=== Inputs ===
result: i11 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v845 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i11 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v699 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:275) [bci: 36]
stamp: void
=== Inputs ===
=== Succesors ===
next: v831 
=== Usages ===
=== Predecessor ===
v700 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v831  <|@  <|@
f <@~|@floating>@ <|@
tid i832 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -138267
stableDimension: 0
stamp: i32 [-138267] ⇊00000000fffde3e5 ⇈00000000fffde3e5
stampKind: i32
value: int[-138267|0xfffffffffffde3e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i824 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v831 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v821 
=== Predecessor ===
v699 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4579539322436593139
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:272) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v148 
=== Usages ===
=== Predecessor ===
v138 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v148  <|@  <|@
f <@~|@floating>@ <|@
tid v585 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:259) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:272) [bci: 26]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a890 
y: a573 
=== Succesors ===
=== Usages ===
v148 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a890 y: a573  <|@  <|@
tid ?160 <|@
d <@d|@=== Debug Properties ===
bci: 26
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findHash(Object)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 272
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i12 - - 
=== Succesors ===
=== Usages ===
?761 ?759 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i12 - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v148 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:259) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:272) [bci: 26]
stamp: void
trueSuccessorProbability: 0.7114431340645025
=== Inputs ===
condition: v585 
=== Succesors ===
trueSuccessor: v146 
falseSuccessor: v141 
=== Usages ===
=== Predecessor ===
v137 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v585 #trueSuccessor: v146 #falseSuccessor: v141  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    probability 4577119570936757357
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v146 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:272) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v922 
=== Usages ===
=== Predecessor ===
v148 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v922  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v922 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?275 
object: a2 
=== Succesors ===
next: i150 
=== Usages ===
=== Predecessor ===
v146 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?275 object: a2 #next: i150  <|@  <|@
tid v568 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:272) [bci: 26]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@103f5ff0
stamp: void
targetMethod: HotSpotMethod<Object.equals(Object)>
=== Inputs ===
arguments: a2 a535 
=== Succesors ===
=== Usages ===
i150 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2 a535  <|@  <|@
tid ?759 <|@
d <@d|@=== Debug Properties ===
bci: 36
code: ResolvedJavaMethodBytecode<EconomicMapImpl.compareKeys(Object, Object)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 260
stackSize: 0
=== Inputs ===
outerFrameState: ?160 
values: - - - 
=== Succesors ===
=== Usages ===
i150 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?160 values: - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i150 <|@
d <@d|@=== Debug Properties ===
bci: 36
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:272) [bci: 26]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Object.equals
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v568 
stateDuring: ?759 
=== Succesors ===
next: v164 
=== Usages ===
i163 
=== Predecessor ===
v922 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v568 stateDuring: ?759 #next: v164  <|@  <|@
f <@*|@fixed>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v161 
=== Predecessor ===
i150 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4571489525153354508
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:259) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:272) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v143 
=== Usages ===
=== Predecessor ===
v148 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v143  <|@  <|@
f <@~|@floating>@ <|@
tid v584 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:272) [bci: 26]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a890 
y: a575 
=== Succesors ===
=== Usages ===
v143 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a890 y: a575  <|@  <|@
f <@*|@fixed>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:272) [bci: 26]
stamp: void
trueSuccessorProbability: 0.0023566146768518636
=== Inputs ===
condition: v584 
=== Succesors ===
trueSuccessor: v142 
falseSuccessor: v147 
=== Usages ===
=== Predecessor ===
v141 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v584 #trueSuccessor: v142 #falseSuccessor: v147  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B46" 
    xhandlers
    flags 
    probability 4531956905531768129
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:265) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:272) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v167 
=== Usages ===
=== Predecessor ===
v143 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v167  <|@  <|@
f <@*|@fixed>@ <|@
tid v167 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v917 
=== Predecessor ===
v142 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4571478120309556813
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v147 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:272) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: i155 
=== Usages ===
=== Predecessor ===
v143 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i155  <|@  <|@
f <@~|@floating>@ <|@
tid a537 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:272) [bci: 26]
op: Uncompress
stamp: a Lorg/graalvm/collections/Equivalence;
=== Inputs ===
value: a890 
=== Succesors ===
=== Usages ===
v572 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a890  <|@  <|@
tid v572 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:272) [bci: 26]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@803dad5
stamp: void
targetMethod: HotSpotMethod<Equivalence.equals(Object, Object)>
=== Inputs ===
arguments: a537 a2 a535 
=== Succesors ===
=== Usages ===
i155 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a537 a2 a535  <|@  <|@
tid ?761 <|@
d <@d|@=== Debug Properties ===
bci: 46
code: ResolvedJavaMethodBytecode<EconomicMapImpl.compareKeys(Object, Object)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 262
stackSize: 0
=== Inputs ===
outerFrameState: ?160 
values: - - - 
=== Succesors ===
=== Usages ===
i155 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?160 values: - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i155 <|@
d <@d|@=== Debug Properties ===
bci: 46
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:272) [bci: 26]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Equivalence.equals
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v572 
stateDuring: ?761 
=== Succesors ===
next: v165 
=== Usages ===
i163 
=== Predecessor ===
v147 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v572 stateDuring: ?761 #next: v165  <|@  <|@
f <@*|@fixed>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v161 
=== Predecessor ===
i155 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B40" "B43" 
    successors "B45" "B53" 
    xhandlers
    flags 
    probability 4579533620014694292
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i163 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v161 
values: i150 i155 
=== Succesors ===
=== Usages ===
v24 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v161 values: i150 i155  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v164 v165 
=== Succesors ===
next: v27 
=== Usages ===
i163 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v164 v165 #next: v27  <|@  <|@
f <@~|@floating>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:272) [bci: 29]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i163 
y: i13 
=== Succesors ===
=== Usages ===
v27 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i163 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:272) [bci: 29]
stamp: void
trueSuccessorProbability: 0.17473112367211385
=== Inputs ===
condition: v24 
=== Succesors ===
trueSuccessor: v25 
falseSuccessor: v26 
=== Usages ===
=== Predecessor ===
v161 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v24 #trueSuccessor: v25 #falseSuccessor: v26  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" 
    xhandlers
    flags 
    probability 4568003408557250029
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:275) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v918 
=== Usages ===
=== Predecessor ===
v27 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v918  <|@  <|@
f <@*|@fixed>@ <|@
tid v918 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:272) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v917 
=== Predecessor ===
v25 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B42" 
    successors "B47" "B52" 
    xhandlers
    flags 
    probability 4568026218244845418
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v917 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:272) [bci: 29]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v918 v167 
=== Succesors ===
next: a893 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v918 v167 #next: a893  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a893 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:275) [bci: 36]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v898 
=== Succesors ===
next: i894 
=== Usages ===
a550 v913 
=== Predecessor ===
v917 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v898 #next: i894  <|@  <|@
tid ?23 <|@
d <@d|@=== Debug Properties ===
bci: 29
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findHash(Object)>
duringCall: false
localsSize: 5
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:272) [bci: 26]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 272
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 a2 i12 - - i13 
=== Succesors ===
=== Usages ===
v782 i894 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i12 - - i13  <|@  <|@
f <@~|@floating>@ <|@
tid v913 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a893 
=== Succesors ===
=== Usages ===
i894 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a893  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i894 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:275) [bci: 36]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?23 
guard: - 
address: v913 
=== Succesors ===
next: v712 
=== Usages ===
v556 
=== Predecessor ===
a893 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?23 guard: - address: v913 #next: v712  <|@  <|@
f <@~|@floating>@ <|@
tid i170 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:275) [bci: 36]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i19 
y: i10 
=== Succesors ===
=== Usages ===
v914 v556 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i19 y: i10  <|@  <|@
f <@~|@floating>@ <|@
tid v556 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:275) [bci: 36]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i170 
y: i894 
=== Succesors ===
=== Usages ===
v712 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i170 y: i894  <|@  <|@
f <@*|@fixed>@ <|@
tid v712 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:275) [bci: 36]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v556 
=== Succesors ===
trueSuccessor: v709 
falseSuccessor: v711 
=== Usages ===
=== Predecessor ===
i894 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v556 #trueSuccessor: v709 #falseSuccessor: v711  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4568026218244845418
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v709 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:275) [bci: 36]
stamp: void
=== Inputs ===
=== Succesors ===
next: a895 
=== Usages ===
a895 
=== Predecessor ===
v712 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a895  <|@  <|@
f <@~|@floating>@ <|@
tid a550 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:275) [bci: 36]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a893 
=== Succesors ===
=== Usages ===
v914 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a893  <|@  <|@
f <@~|@floating>@ <|@
tid v914 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a550 
index: i170 
=== Succesors ===
=== Usages ===
a895 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a550 index: i170  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a895 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:275) [bci: 36]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v709 
address: v914 
=== Succesors ===
next: v734 
=== Usages ===
a564 v752 v916 
=== Predecessor ===
v709 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v709 address: v914 #next: v734  <|@  <|@
f <@~|@floating>@ <|@
tid v752 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:276) [bci: 43]
stamp: void
=== Inputs ===
value: a895 
=== Succesors ===
=== Usages ===
v734 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a895  <|@  <|@
f <@*|@fixed>@ <|@
tid v734 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:276) [bci: 43]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v752 
=== Succesors ===
trueSuccessor: v733 
falseSuccessor: v732 
=== Usages ===
=== Predecessor ===
a895 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v752 #trueSuccessor: v733 #falseSuccessor: v732  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors 
    xhandlers
    flags 
    probability 4553339460219027335
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v733 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:276) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v853 
=== Usages ===
=== Predecessor ===
v734 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v853  <|@  <|@
f <@*|@fixed>@ <|@
tid v853 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:276) [bci: 43]
stamp: void
=== Inputs ===
result: i11 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v733 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i11 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4567438238672992121
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v732 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:141) [bci: 28]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:276) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v896 
=== Usages ===
=== Predecessor ===
v734 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v896  <|@  <|@
f <@~|@floating>@ <|@
tid v916 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a895 
=== Succesors ===
=== Usages ===
v896 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a895  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v896 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:276) [bci: 43]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v916 
=== Succesors ===
next: v838 
=== Usages ===
v866 
=== Predecessor ===
v732 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v916 #next: v838  <|@  <|@
f <@~|@floating>@ <|@
tid v866 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:276) [bci: 43]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v896 
y: v864 
=== Succesors ===
=== Usages ===
v838 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v896 y: v864  <|@  <|@
f <@*|@fixed>@ <|@
tid v838 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:276) [bci: 43]
stamp: void
trueSuccessorProbability: 0.4480776492636467
=== Inputs ===
condition: v866 
=== Succesors ===
trueSuccessor: v836 
falseSuccessor: v835 
=== Usages ===
=== Predecessor ===
v896 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v866 #trueSuccessor: v836 #falseSuccessor: v835  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 4562385111977621226
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v836 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:276) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: i43 
=== Usages ===
=== Predecessor ===
v838 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i43  <|@  <|@
f <@~|@floating>@ <|@
tid a564 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:275) [bci: 36]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a895 
=== Succesors ===
=== Usages ===
v565 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a895  <|@  <|@
tid v565 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:277) [bci: 56]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@79d5dff2
stamp: void
targetMethod: HotSpotMethod<EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)>
=== Inputs ===
arguments: a1 a2 a564 
=== Succesors ===
=== Usages ===
i43 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a2 a564  <|@  <|@
tid ?762 <|@
d <@d|@=== Debug Properties ===
bci: 56
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findHash(Object)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 277
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - - 
=== Succesors ===
=== Usages ===
i43 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i43 <|@
d <@d|@=== Debug Properties ===
bci: 56
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:277) [bci: 56]
polymorphic: false
stamp: i32
targetMethod: Direct#EconomicMapImpl.findWithCollision
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v565 
stateDuring: ?762 
=== Succesors ===
next: v45 
=== Usages ===
v45 
=== Predecessor ===
v836 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v565 stateDuring: ?762 #next: v45  <|@  <|@
f <@*|@fixed>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:277) [bci: 59]
stamp: void
=== Inputs ===
result: i43 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i43 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i43 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 4563484166113622024
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v835 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:276) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v854 
=== Usages ===
=== Predecessor ===
v838 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v854  <|@  <|@
f <@*|@fixed>@ <|@
tid v854 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:276) [bci: 43]
stamp: void
=== Inputs ===
result: i11 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v835 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i11 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v711 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:275) [bci: 36]
stamp: void
=== Inputs ===
=== Succesors ===
next: v782 
=== Usages ===
=== Predecessor ===
v712 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v782  <|@  <|@
f <@~|@floating>@ <|@
tid i784 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -142619
stableDimension: 0
stamp: i32 [-142619] ⇊00000000fffdd2e5 ⇈00000000fffdd2e5
stampKind: i32
value: int[-142619|0xfffffffffffdd2e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v782 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v782 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?23 
actionAndReason: i784 
speculation: a769 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v711 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?23 actionAndReason: i784 speculation: a769  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 4578069373506959897
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:273) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v28 
=== Usages ===
=== Predecessor ===
v27 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v28  <|@  <|@
f <@*|@fixed>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:273) [bci: 33]
stamp: void
=== Inputs ===
result: i12 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v26 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i12 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v695 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:271) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v827 
=== Usages ===
=== Predecessor ===
v696 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v827  <|@  <|@
f <@~|@floating>@ <|@
tid i828 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -134939
stableDimension: 0
stamp: i32 [-134939] ⇊00000000fffdf0e5 ⇈00000000fffdf0e5
stampKind: i32
value: int[-134939|0xfffffffffffdf0e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i824 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v827 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v821 
=== Predecessor ===
v695 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B38" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i824 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-144907 - -133643] ⇊00000000fffdc0e5 ⇈00000000fffdfff5
valueDescription: i32
=== Inputs ===
merge: v821 
values: i828 i832 
=== Succesors ===
=== Usages ===
v826 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v821 values: i828 i832  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v821 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v827 v831 
=== Succesors ===
next: v826 
=== Usages ===
i824 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v827 v831 #next: v826  <|@  <|@
f <@*|@fixed>@ <|@
tid v826 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?275 
actionAndReason: i824 
speculation: a769 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v821 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?275 actionAndReason: i824 speculation: a769  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v687 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 53]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v819 
=== Usages ===
=== Predecessor ===
v688 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v819  <|@  <|@
f <@~|@floating>@ <|@
tid i820 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -131355
stableDimension: 0
stamp: i32 [-131355] ⇊00000000fffdfee5 ⇈00000000fffdfee5
stampKind: i32
value: int[-131355|0xfffffffffffdfee5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i812 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v819 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v809 
=== Predecessor ===
v687 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v683 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 41]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v817 
=== Usages ===
=== Predecessor ===
v684 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v817  <|@  <|@
f <@~|@floating>@ <|@
tid i818 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -128795
stableDimension: 0
stamp: i32 [-128795] ⇊00000000fffe08e5 ⇈00000000fffe08e5
stampKind: i32
value: int[-128795|0xfffffffffffe08e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i812 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v817 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v809 
=== Predecessor ===
v683 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v675 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:309) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v815 
=== Usages ===
=== Predecessor ===
v676 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v815  <|@  <|@
f <@~|@floating>@ <|@
tid i816 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -126995
stableDimension: 0
stamp: i32 [-126995] ⇊00000000fffe0fed ⇈00000000fffe0fed
stampKind: i32
value: int[-126995|0xfffffffffffe0fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i812 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v815 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v809 
=== Predecessor ===
v675 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" "B56" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i812 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-131355 - -126995] ⇊00000000fffc08e5 ⇈00000000fffffffd
valueDescription: i32
=== Inputs ===
merge: v809 
values: i816 i818 i820 
=== Succesors ===
=== Usages ===
v814 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v809 values: i816 i818 i820  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v809 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v815 v817 v819 
=== Succesors ===
next: v814 
=== Usages ===
i812 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v815 v817 v819 #next: v814  <|@  <|@
f <@*|@fixed>@ <|@
tid v814 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?249 
actionAndReason: i812 
speculation: a769 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v809 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?249 actionAndReason: i812 speculation: a769  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v667 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v798 
=== Usages ===
=== Predecessor ===
v668 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v798  <|@  <|@
f <@~|@floating>@ <|@
tid i800 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -121107
stableDimension: 0
stamp: i32 [-121107] ⇊00000000fffe26ed ⇈00000000fffe26ed
stampKind: i32
value: int[-121107|0xfffffffffffe26ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
v798 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v798 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?201 
actionAndReason: i800 
speculation: a769 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v667 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?201 actionAndReason: i800 speculation: a769  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a870 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a870  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Lorg/graalvm/collections/EconomicMapImpl;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 ?389 ?95 ?95 ?201 ?275 v548 ?160 ?23 v898 ?71 v565 v897 ?80 v902 ?367 ?756 ?757 ?758 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v897 <|@
result [v0|QWORD[.] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a870 a890 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a870 <|@
result v2|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.strategy
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:391) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
nullCheck: false
stamp: n Lorg/graalvm/collections/Equivalence;
=== Inputs ===
stateBefore: - 
guard: - 
address: v897 
=== Succesors ===
next: v54 
=== Usages ===
a418 v446 v574 v576 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v897 #next: v54  <|@  <|@
f <@~|@floating>@ <|@
tid v446 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stamp: void
=== Inputs ===
value: a870 
=== Succesors ===
=== Usages ===
v54 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a870  <|@  <|@
f <@~|@floating>@ <|@
tid i13 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:270) [bci: 14]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v14 v24 ?23 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i10 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 9]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i19 i113 i118 i170 i188 i867 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i11 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 10]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i12 v854 v286 i92 v856 i269 v285 i362 v853 v855 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i86 <|@
result int[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 54]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
rawvalue: 16
stableDimension: 0
stamp: i32 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i32
value: int[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
i87 i224 i397 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a769 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v772 v826 v790 v798 v782 v814 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a575 <|@
result NarrowOop[Equivalence$3@1213634123] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:392) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
rawvalue: Equivalence$3@1213634123
stableDimension: 0
stamp: n!# Lorg/graalvm/collections/Equivalence$3;
stampKind: n -
value: NarrowOop[Equivalence$3@1213634123]
=== Inputs ===
=== Succesors ===
=== Usages ===
v576 v584 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v902 <|@
result [v0|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a879 a875 a883 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a573 <|@
result NarrowOop[Equivalence$1@1642007824] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:391) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
rawvalue: Equivalence$1@1642007824
stableDimension: 0
stamp: n!# Lorg/graalvm/collections/Equivalence$1;
stampKind: n -
value: NarrowOop[Equivalence$1@1642007824]
=== Inputs ===
=== Succesors ===
=== Usages ===
v574 v585 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i98 <|@
result int[512|0x200] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:307) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 6]
rawvalue: 512
stableDimension: 0
stamp: i32 [512] ⇊0000000000000200 ⇈0000000000000200
stampKind: i32
value: int[512|0x200]
=== Inputs ===
=== Succesors ===
=== Usages ===
v392 v175 v218 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v898 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a871 a873 a877 a893 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a Ljava/lang/Object;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v437 ?95 ?275 ?160 ?23 v572 v565 v449 v423 v921 v129 v568 v548 v920 v922 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?95 <|@
d <@d|@=== Debug Properties ===
bci: 3
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findHash(Object)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 269
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - - a1 
=== Succesors ===
=== Usages ===
?71 ?389 ?80 ?249 ?210 ?201 ?367 ?756 ?757 ?758 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - - - a1  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findHash(Object)>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 269
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - - 
=== Succesors ===
=== Usages ===
v772 v920 v921 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:391) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stamp: void
trueSuccessorProbability: 0.7064097688878498
=== Inputs ===
condition: v446 
=== Succesors ===
trueSuccessor: v52 
falseSuccessor: v53 
=== Usages ===
=== Predecessor ===
a870 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v446 #trueSuccessor: v52 #falseSuccessor: v53  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@740d62ed slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[.] = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|DWORD[.], y: v2|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7064097688878498 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4604537993089144813
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 47]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v920 
=== Usages ===
=== Predecessor ===
v54 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v920  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v920 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a2 
=== Succesors ===
next: i388 
=== Usages ===
=== Predecessor ===
v52 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a2 #next: i388  <|@  <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@61747c4b
stamp: void
targetMethod: HotSpotMethod<Object.hashCode()>
=== Inputs ===
arguments: a2 
=== Succesors ===
=== Usages ===
i388 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2  <|@  <|@
tid ?756 <|@
d <@d|@=== Debug Properties ===
bci: 48
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 398
stackSize: 0
=== Inputs ===
outerFrameState: ?95 
values: a1 - - 
=== Succesors ===
=== Usages ===
i388 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?95 values: a1 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i388 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 48
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
polymorphic: false
stamp: i32
targetMethod: Direct#Object.hashCode
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v423 
stateDuring: ?756 
=== Succesors ===
next: a871 
=== Usages ===
?389 i396 i397 i374 i209 
=== Predecessor ===
v920 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v423 stateDuring: ?756 #next: a871  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a871 <|@
result v4|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v898 
=== Succesors ===
next: i872 
=== Usages ===
a427 v899 
=== Predecessor ===
i388 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v898 #next: i872  <|@  <|@
tid ?389 <|@
d <@d|@=== Debug Properties ===
bci: 51
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 398
stackSize: 1
=== Inputs ===
outerFrameState: ?95 
values: a1 - - i388 
=== Succesors ===
=== Usages ===
i872 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?95 values: a1 - - i388  <|@  <|@
f <@~|@floating>@ <|@
tid v899 <|@
result [v4|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a871 
=== Succesors ===
=== Usages ===
i872 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a871  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i872 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?389 
guard: - 
address: v899 
=== Succesors ===
next: v395 
=== Usages ===
v392 i764 
=== Predecessor ===
a871 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?389 guard: - address: v899 #next: v395  <|@  <|@
f <@~|@floating>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i872 
y: i98 
=== Succesors ===
=== Usages ===
v395 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i872 y: i98  <|@  <|@
f <@~|@floating>@ <|@
tid a427 <|@
result v6|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a871 
=== Succesors ===
=== Usages ===
a308 a375 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a871  <|@  <|@
f <@~|@floating>@ <|@
tid i397 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 56]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
x: i388 
y: i86 
=== Succesors ===
=== Usages ===
i396 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i388 y: i86  <|@  <|@
f <@~|@floating>@ <|@
tid i396 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.XorNode$$Lambda$140/534106600@448e1437
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 57]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stamp: i32
=== Inputs ===
x: i388 
y: i397 
=== Succesors ===
=== Usages ===
i381 i213 
=== Predecessor ===
- >@ <|@
instruction <@^|@org.graalvm.compiler.nodes.calc.XorNode>@ x: i388 y: i397  <|@  <|@
f <@*|@fixed>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stamp: void
trueSuccessorProbability: 0.7476633120338436
=== Inputs ===
condition: v392 
=== Succesors ===
trueSuccessor: v393 
falseSuccessor: v394 
=== Usages ===
=== Predecessor ===
i872 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v392 #trueSuccessor: v393 #falseSuccessor: v394  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK [v1|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Object.hashCode()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:48, 3] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 51]
stack: v3|DWORD 
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
>@ <|@ instruction v5|DWORD = MOV [v4|DWORD[.] * 8 + 12] size: DWORD state [bci:51, 3] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1ea76343 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = SHR v3|DWORD y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = XOR (x: v3|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: 512 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7476633120338436 condition: |<| trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602932431886806378
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v393 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v368 
=== Usages ===
=== Predecessor ===
v395 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v368  <|@  <|@
f <@*|@fixed>@ <|@
tid v368 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v365 
=== Predecessor ===
v393 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v3|DWORD, v6|QWORD[.], v8|DWORD] destination: B2 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B21" 
    xhandlers
    flags 
    probability 4595590265099889163
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v394 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v398 
=== Usages ===
=== Predecessor ===
v395 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v398  <|@  <|@
f <@*|@fixed>@ <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v199 
=== Predecessor ===
v394 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v6|QWORD[.], v3|DWORD, v8|DWORD, v5|DWORD] destination: B3 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4598960471339651110
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:391) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v63 
=== Usages ===
=== Predecessor ===
v54 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v63  <|@  <|@
f <@~|@floating>@ <|@
tid v574 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:391) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a870 
y: a573 
=== Succesors ===
=== Usages ===
v63 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a870 y: a573  <|@  <|@
f <@*|@fixed>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:391) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stamp: void
trueSuccessorProbability: 0.8855350555757266
=== Inputs ===
condition: v574 
=== Succesors ===
trueSuccessor: v62 
falseSuccessor: v61 
=== Usages ===
=== Predecessor ===
v53 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v574 #trueSuccessor: v62 #falseSuccessor: v61  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1642007824] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8855350555757266 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B8" 
    xhandlers
    flags 
    probability 4598355083255592808
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 47]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v921 
=== Usages ===
=== Predecessor ===
v63 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v921  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v921 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a2 
=== Succesors ===
next: i79 
=== Usages ===
=== Predecessor ===
v62 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a2 #next: i79  <|@  <|@
tid v437 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@59f83b91
stamp: void
targetMethod: HotSpotMethod<Object.hashCode()>
=== Inputs ===
arguments: a2 
=== Succesors ===
=== Usages ===
i79 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2  <|@  <|@
tid ?757 <|@
d <@d|@=== Debug Properties ===
bci: 48
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 398
stackSize: 0
=== Inputs ===
outerFrameState: ?95 
values: a1 - - 
=== Succesors ===
=== Usages ===
i79 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?95 values: a1 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i79 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 48
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
polymorphic: false
stamp: i32
targetMethod: Direct#Object.hashCode
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v437 
stateDuring: ?757 
=== Succesors ===
next: a873 
=== Usages ===
?80 i209 i223 i224 i374 
=== Predecessor ===
v921 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v437 stateDuring: ?757 #next: a873  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a873 <|@
result v10|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v898 
=== Succesors ===
next: i874 
=== Usages ===
a439 v900 
=== Predecessor ===
i79 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v898 #next: i874  <|@  <|@
tid ?80 <|@
d <@d|@=== Debug Properties ===
bci: 51
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 398
stackSize: 1
=== Inputs ===
outerFrameState: ?95 
values: a1 - - i79 
=== Succesors ===
=== Usages ===
i874 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?95 values: a1 - - i79  <|@  <|@
f <@~|@floating>@ <|@
tid v900 <|@
result [v10|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a873 
=== Succesors ===
=== Usages ===
i874 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a873  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i874 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?80 
guard: - 
address: v900 
=== Succesors ===
next: v221 
=== Usages ===
v218 i764 
=== Predecessor ===
a873 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?80 guard: - address: v900 #next: v221  <|@  <|@
f <@~|@floating>@ <|@
tid v218 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i874 
y: i98 
=== Succesors ===
=== Usages ===
v221 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i874 y: i98  <|@  <|@
f <@~|@floating>@ <|@
tid a439 <|@
result v12|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a873 
=== Succesors ===
=== Usages ===
a308 a375 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a873  <|@  <|@
f <@~|@floating>@ <|@
tid i224 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 56]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
x: i79 
y: i86 
=== Succesors ===
=== Usages ===
i223 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i79 y: i86  <|@  <|@
f <@~|@floating>@ <|@
tid i223 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.XorNode$$Lambda$140/534106600@448e1437
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 57]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stamp: i32
=== Inputs ===
x: i79 
y: i224 
=== Succesors ===
=== Usages ===
i213 i381 
=== Predecessor ===
- >@ <|@
instruction <@^|@org.graalvm.compiler.nodes.calc.XorNode>@ x: i79 y: i224  <|@  <|@
f <@*|@fixed>@ <|@
tid v221 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stamp: void
trueSuccessorProbability: 0.7476633120338436
=== Inputs ===
condition: v218 
=== Succesors ===
trueSuccessor: v219 
falseSuccessor: v220 
=== Usages ===
=== Predecessor ===
i874 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v218 #trueSuccessor: v219 #falseSuccessor: v220  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK [v1|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Object.hashCode()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:48, 3] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 51]
stack: v9|DWORD 
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
>@ <|@ instruction v11|DWORD = MOV [v10|DWORD[.] * 8 + 12] size: DWORD state [bci:51, 3] <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1ea76343 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = SHR v9|DWORD y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = XOR (x: v9|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v11|DWORD y: 512 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7476633120338436 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4596171327712223541
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v219 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v366 
=== Usages ===
=== Predecessor ===
v221 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v366  <|@  <|@
f <@*|@fixed>@ <|@
tid v366 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v365 
=== Predecessor ===
v219 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v9|DWORD, v12|QWORD[.], v14|DWORD] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B2" 
    successors "B15" 
    xhandlers
    flags 
    probability 4604683258742228407
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i374 <|@
result v15|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v365 
values: i79 i388 
=== Succesors ===
=== Usages ===
?367 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v365 values: i79 i388  <|@  <|@
f <@~|@floating>@ <|@
tid a375 <|@
result v16|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a [Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v365 
values: a439 a427 
=== Succesors ===
=== Usages ===
a309 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v365 values: a439 a427  <|@  <|@
f <@~|@floating>@ <|@
tid i381 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v365 
values: i223 i396 
=== Succesors ===
=== Usages ===
i258 i361 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v365 values: i223 i396  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v365 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v366 v368 
=== Succesors ===
next: a875 
=== Usages ===
i374 a375 i381 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v366 v368 #next: a875  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a875 <|@
result v18|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.hashArray
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 12]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
nullCheck: false
stamp: n# [B
=== Inputs ===
stateBefore: - 
guard: - 
address: v902 
=== Succesors ===
next: i876 
=== Usages ===
a467 v904 
=== Predecessor ===
v365 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v902 #next: i876  <|@  <|@
tid ?367 <|@
d <@d|@=== Debug Properties ===
bci: 51
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 398
stackSize: 1
=== Inputs ===
outerFrameState: ?95 
values: a1 - - i374 
=== Succesors ===
=== Usages ===
i876 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?95 values: a1 - - i374  <|@  <|@
f <@~|@floating>@ <|@
tid v904 <|@
result [v18|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a875 
=== Succesors ===
=== Usages ===
i876 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a875  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i876 <|@
result v19|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?367 
guard: - 
address: v904 
=== Succesors ===
next: v363 
=== Usages ===
i362 i251 
=== Predecessor ===
a875 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?367 guard: - address: v904 #next: v363  <|@  <|@
f <@~|@floating>@ <|@
tid i362 <|@
result v20|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 65]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i876 
y: i11 
=== Succesors ===
=== Usages ===
i361 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i876 y: i11  <|@  <|@
f <@~|@floating>@ <|@
tid i361 <|@
result v21|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 66]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stamp: i32
=== Inputs ===
x: i362 
y: i381 
=== Succesors ===
=== Usages ===
i261 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i362 y: i381  <|@  <|@
f <@~|@floating>@ <|@
tid a467 <|@
result v22|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 12]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
op: Uncompress
stamp: a# [B
=== Inputs ===
value: a875 
=== Succesors ===
=== Usages ===
a254 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a875  <|@  <|@
f <@*|@fixed>@ <|@
tid v363 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v244 
=== Predecessor ===
i876 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v15|DWORD, v16|QWORD[.], v17|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v18|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 51]
stack: v15|DWORD 
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
>@ <|@ instruction v19|DWORD = MOV [v18|DWORD[.] * 8 + 12] size: DWORD state [bci:51, 3] <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = DEC v19|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = AND (x: v20|DWORD, y: v17|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = UNCOMPRESSPOINTER (input: v18|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1ea76343 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v19|DWORD, v22|QWORD[.], v16|QWORD[.], v17|DWORD, v21|DWORD] destination: B7 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589391659170536246
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v220 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v202 
=== Usages ===
=== Predecessor ===
v221 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v202  <|@  <|@
f <@*|@fixed>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v199 
=== Predecessor ===
v220 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v12|QWORD[.], v9|DWORD, v14|DWORD, v11|DWORD] destination: B8 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4585003925708260850
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:392) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v648 
=== Usages ===
=== Predecessor ===
v63 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v648  <|@  <|@
f <@~|@floating>@ <|@
tid v576 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:392) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a870 
y: a575 
=== Succesors ===
=== Usages ===
v648 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a870 y: a575  <|@  <|@
f <@*|@fixed>@ <|@
tid v648 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:392) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v576 
=== Succesors ===
trueSuccessor: v647 
falseSuccessor: v645 
=== Usages ===
=== Predecessor ===
v61 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v576 #trueSuccessor: v647 #falseSuccessor: v645  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v647 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:392) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v772 
=== Usages ===
=== Predecessor ===
v648 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v772  <|@  <|@
f <@~|@floating>@ <|@
tid i776 <|@
result int[-113939|0xfffffffffffe42ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -113939
stableDimension: 0
stamp: i32 [-113939] ⇊00000000fffe42ed ⇈00000000fffe42ed
stampKind: i32
value: int[-113939|0xfffffffffffe42ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
v772 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v772 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i776 
speculation: a769 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v647 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i776 speculation: a769  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -113939 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B20" 
    xhandlers
    flags 
    probability 4585003925708260850
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v645 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:392) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: i70 
=== Usages ===
=== Predecessor ===
v648 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i70  <|@  <|@
f <@~|@floating>@ <|@
tid a418 <|@
result v23|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:391) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
op: Uncompress
stamp: a Lorg/graalvm/collections/Equivalence;
=== Inputs ===
value: a870 
=== Succesors ===
=== Usages ===
v449 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a870  <|@  <|@
tid v449 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@dbf9314
stamp: void
targetMethod: HotSpotMethod<Equivalence.hashCode(Object)>
=== Inputs ===
arguments: a418 a2 
=== Succesors ===
=== Usages ===
i70 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a418 a2  <|@  <|@
tid ?758 <|@
d <@d|@=== Debug Properties ===
bci: 40
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 395
stackSize: 0
=== Inputs ===
outerFrameState: ?95 
values: a1 - - 
=== Succesors ===
=== Usages ===
i70 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?95 values: a1 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i70 <|@
result v24|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 40
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
polymorphic: false
stamp: i32
targetMethod: Direct#Equivalence.hashCode
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v449 
stateDuring: ?758 
=== Succesors ===
next: a877 
=== Usages ===
?71 i209 i88 i87 
=== Predecessor ===
v645 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v449 stateDuring: ?758 #next: a877  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a877 <|@
result v25|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v898 
=== Succesors ===
next: i878 
=== Usages ===
a451 v901 
=== Predecessor ===
i70 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v898 #next: i878  <|@  <|@
tid ?71 <|@
d <@d|@=== Debug Properties ===
bci: 43
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 395
stackSize: 1
=== Inputs ===
outerFrameState: ?95 
values: a1 - - i70 
=== Succesors ===
=== Usages ===
v790 i878 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?95 values: a1 - - i70  <|@  <|@
f <@~|@floating>@ <|@
tid v901 <|@
result [v25|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a877 
=== Succesors ===
=== Usages ===
i878 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a877  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i878 <|@
result v26|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?71 
guard: - 
address: v901 
=== Succesors ===
next: v178 
=== Usages ===
v175 i764 
=== Predecessor ===
a877 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?71 guard: - address: v901 #next: v178  <|@  <|@
f <@~|@floating>@ <|@
tid v175 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i878 
y: i98 
=== Succesors ===
=== Usages ===
v178 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i878 y: i98  <|@  <|@
f <@~|@floating>@ <|@
tid a451 <|@
result v27|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a877 
=== Succesors ===
=== Usages ===
a309 a308 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a877  <|@  <|@
f <@~|@floating>@ <|@
tid i87 <|@
result v28|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 56]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
x: i70 
y: i86 
=== Succesors ===
=== Usages ===
i88 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i70 y: i86  <|@  <|@
f <@~|@floating>@ <|@
tid i88 <|@
result v29|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.XorNode$$Lambda$140/534106600@448e1437
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 57]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stamp: i32
=== Inputs ===
x: i70 
y: i87 
=== Succesors ===
=== Usages ===
i258 i213 i268 
=== Predecessor ===
- >@ <|@
instruction <@^|@org.graalvm.compiler.nodes.calc.XorNode>@ x: i70 y: i87  <|@  <|@
f <@*|@fixed>@ <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stamp: void
trueSuccessorProbability: 0.7476633120338436
=== Inputs ===
condition: v175 
=== Succesors ===
trueSuccessor: v176 
falseSuccessor: v177 
=== Usages ===
=== Predecessor ===
i878 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v175 #trueSuccessor: v176 #falseSuccessor: v177  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1ea76343 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Equivalence.hashCode(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:40, 3] <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 43]
stack: v24|DWORD 
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
>@ <|@ instruction v26|DWORD = MOV [v25|DWORD[.] * 8 + 12] size: DWORD state [bci:43, 3] <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1ea76343 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = SHR v24|DWORD y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = XOR (x: v24|DWORD, y: v28|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v26|DWORD y: 512 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7476633120338436 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4582899244768309587
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v176 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: a879 
=== Usages ===
=== Predecessor ===
v178 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a879  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a879 <|@
result v30|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.hashArray
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 12]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
nullCheck: false
stamp: n# [B
=== Inputs ===
stateBefore: - 
guard: - 
address: v902 
=== Succesors ===
next: v656 
=== Usages ===
a460 v461 v903 
=== Predecessor ===
v176 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v902 #next: v656  <|@  <|@
f <@~|@floating>@ <|@
tid v461 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stamp: void
=== Inputs ===
value: a879 
=== Succesors ===
=== Usages ===
v656 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a879  <|@  <|@
f <@*|@fixed>@ <|@
tid v656 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v461 
=== Succesors ===
trueSuccessor: v655 
falseSuccessor: v653 
=== Usages ===
=== Predecessor ===
a879 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v461 #trueSuccessor: v655 #falseSuccessor: v653  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v30|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v30|DWORD[.], y: v30|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v655 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v790 
=== Usages ===
=== Predecessor ===
v656 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v790  <|@  <|@
f <@~|@floating>@ <|@
tid i792 <|@
result int[-118283|0xfffffffffffe31f5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -118283
stableDimension: 0
stamp: i32 [-118283] ⇊00000000fffe31f5 ⇈00000000fffe31f5
stampKind: i32
value: int[-118283|0xfffffffffffe31f5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v790 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v790 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?71 
actionAndReason: i792 
speculation: a769 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v655 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?71 actionAndReason: i792 speculation: a769  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -118283 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 43]
stack: v24|DWORD 
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:43, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4582899244768309587
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v653 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: i880 
=== Usages ===
=== Predecessor ===
v656 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i880  <|@  <|@
f <@~|@floating>@ <|@
tid v903 <|@
result [v30|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a879 
=== Succesors ===
=== Usages ===
i880 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a879  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i880 <|@
result v31|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v903 
=== Succesors ===
next: v246 
=== Usages ===
i251 i269 
=== Predecessor ===
v653 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v903 #next: v246  <|@  <|@
f <@~|@floating>@ <|@
tid i269 <|@
result v32|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 65]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i880 
y: i11 
=== Succesors ===
=== Usages ===
i268 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i880 y: i11  <|@  <|@
f <@~|@floating>@ <|@
tid i268 <|@
result v33|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 66]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stamp: i32
=== Inputs ===
x: i88 
y: i269 
=== Succesors ===
=== Usages ===
i261 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i88 y: i269  <|@  <|@
f <@~|@floating>@ <|@
tid a460 <|@
result v34|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 12]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
op: Uncompress
stamp: a# [B
=== Inputs ===
value: a879 
=== Succesors ===
=== Usages ===
a254 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a879  <|@  <|@
f <@*|@fixed>@ <|@
tid v246 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v244 
=== Predecessor ===
i880 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOV [v30|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = DEC v31|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = AND (x: v29|DWORD, y: v32|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v30|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1ea76343 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v31|DWORD, v34|QWORD[.], v27|QWORD[.], v29|DWORD, v33|DWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B7" 
    successors "B16" "B19" 
    xhandlers
    flags 
    probability 4604909571972224834
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i251 <|@
result v35|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
valueDescription: i32
=== Inputs ===
merge: v244 
values: i880 i876 
=== Succesors ===
=== Usages ===
?210 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v244 values: i880 i876  <|@  <|@
f <@~|@floating>@ <|@
tid a254 <|@
result v36|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# [B
valueDescription: a -
=== Inputs ===
merge: v244 
values: a460 a467 
=== Succesors ===
=== Usages ===
v907 v906 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v244 values: a460 a467  <|@  <|@
f <@~|@floating>@ <|@
tid a309 <|@
result v37|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a [Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v244 
values: a451 a375 
=== Succesors ===
=== Usages ===
a313 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v244 values: a451 a375  <|@  <|@
f <@~|@floating>@ <|@
tid i258 <|@
result v38|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v244 
values: i88 i381 
=== Succesors ===
=== Usages ===
?210 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v244 values: i88 i381  <|@  <|@
f <@~|@floating>@ <|@
tid i261 <|@
result v39|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v244 
values: i268 i361 
=== Succesors ===
=== Usages ===
v907 v486 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v244 values: i268 i361  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v246 v363 
=== Succesors ===
next: i881 
=== Usages ===
i251 a254 a309 i258 i261 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v246 v363 #next: i881  <|@  <|@
f <@~|@floating>@ <|@
tid v906 <|@
result [v36|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a254 
index: - 
=== Succesors ===
=== Usages ===
i881 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a254 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i881 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:308) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 6]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v906 
=== Succesors ===
next: v664 
=== Usages ===
v486 
=== Predecessor ===
v244 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v906 #next: v664  <|@  <|@
f <@~|@floating>@ <|@
tid v486 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:308) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 6]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i261 
y: i881 
=== Succesors ===
=== Usages ===
v664 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i261 y: i881  <|@  <|@
f <@*|@fixed>@ <|@
tid v664 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:308) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 6]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v486 
=== Succesors ===
trueSuccessor: v661 
falseSuccessor: v663 
=== Usages ===
=== Predecessor ===
i881 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v486 #trueSuccessor: v661 #falseSuccessor: v663  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v35|DWORD, v36|QWORD[.], v37|QWORD[.], v38|DWORD, v39|DWORD] = LABEL numbPhis: 5 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v39|DWORD, y: [v36|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B15 -> B16 falseDestination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4604909571972224834
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v661 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:308) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: i882 
=== Usages ===
i882 
=== Predecessor ===
v664 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i882  <|@  <|@
f <@~|@floating>@ <|@
tid v907 <|@
result [v36|QWORD[.] + v39|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a254 
index: i261 
=== Succesors ===
=== Usages ===
i882 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a254 index: i261  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i882 <|@
result v40|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: byte
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:308) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 6]
nullCheck: false
stamp: i8
=== Inputs ===
stateBefore: - 
guard: v661 
address: v907 
=== Succesors ===
next: v284 
=== Usages ===
i495 i578 
=== Predecessor ===
v661 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v661 address: v907 #next: v284  <|@  <|@
f <@~|@floating>@ <|@
tid i495 <|@
result v41|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 8
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:308) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 6]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i882 
=== Succesors ===
=== Usages ===
v287 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i882  <|@  <|@
f <@~|@floating>@ <|@
tid i105 <|@
result int[255|0xff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:308) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 6]
rawvalue: 255
stableDimension: 0
stamp: i32 [255] ⇊00000000000000ff ⇈00000000000000ff
stampKind: i32
value: int[255|0xff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v287 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:270) [bci: 14]
stamp: void
=== Inputs ===
x: i495 
y: i105 
=== Succesors ===
=== Usages ===
v284 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: i495 y: i105  <|@  <|@
f <@*|@fixed>@ <|@
tid v284 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:270) [bci: 14]
stamp: void
trueSuccessorProbability: 0.4113665609079093
=== Inputs ===
condition: v287 
=== Succesors ===
trueSuccessor: v282 
falseSuccessor: v283 
=== Usages ===
=== Predecessor ===
i882 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v287 #trueSuccessor: v282 #falseSuccessor: v283  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = MOVSXB [v36|QWORD[.] + v39|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = MOVSXB v40|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST v41|DWORD y: 255 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.4113665609079093 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors 
    xhandlers
    flags 
    probability 4599212194713537126
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v282 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:282) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v286 
=== Usages ===
=== Predecessor ===
v284 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v286  <|@  <|@
f <@*|@fixed>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: i11 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v282 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i11 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B28" 
    xhandlers
    flags 
    probability 4601599749976171549
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:271) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v276 
=== Usages ===
=== Predecessor ===
v284 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v276  <|@  <|@
f <@~|@floating>@ <|@
tid i578 <|@
result v42|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:308) [bci: 20]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 6]
resultBits: 32
stamp: i32 [0 - 255] ⇈00000000000000ff
=== Inputs ===
value: i882 
=== Succesors ===
=== Usages ===
i278 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i882  <|@  <|@
f <@*|@fixed>@ <|@
tid v276 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v273 
=== Predecessor ===
v283 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOVZXB v40|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v42|DWORD, v37|QWORD[.]] destination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v663 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:308) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v919 
=== Usages ===
=== Predecessor ===
v664 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v919  <|@  <|@
tid ?210 <|@
d <@d|@=== Debug Properties ===
bci: 64
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 401
stackSize: 2
=== Inputs ===
outerFrameState: ?95 
values: - - - i258 i251 
=== Succesors ===
=== Usages ===
v919 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?95 values: - - - i258 i251  <|@  <|@
f <@*|@fixed>@ <|@
tid v919 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 487
reason: BoundsCheckException
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?210 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v663 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?210  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -124699 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 64]
stack: v38|DWORD v35|DWORD 
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:64, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B21" 
    xhandlers
    flags 
    probability 4576041993751147810
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v177 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v200 
=== Usages ===
=== Predecessor ===
v178 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v200  <|@  <|@
f <@*|@fixed>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v199 
=== Predecessor ===
v177 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v27|QWORD[.], v24|DWORD, v29|DWORD, v26|DWORD] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B8" "B3" 
    successors "B22" "B60" 
    xhandlers
    flags 
    probability 4598217313573491068
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a308 <|@
result v43|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a [Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v199 
values: a451 a439 a427 
=== Succesors ===
=== Usages ===
a313 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v199 values: a451 a439 a427  <|@  <|@
f <@~|@floating>@ <|@
tid i209 <|@
result v44|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v199 
values: i70 i79 i388 
=== Succesors ===
=== Usages ===
?201 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v199 values: i70 i79 i388  <|@  <|@
f <@~|@floating>@ <|@
tid i213 <|@
result v45|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v199 
values: i88 i223 i396 
=== Succesors ===
=== Usages ===
?249 i93 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v199 values: i88 i223 i396  <|@  <|@
f <@~|@floating>@ <|@
tid i764 <|@
result v46|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
valueDescription: i32
=== Inputs ===
merge: v199 
values: i878 i874 i872 
=== Succesors ===
=== Usages ===
v111 v184 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v199 values: i878 i874 i872  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v200 v202 v398 
=== Succesors ===
next: v668 
=== Usages ===
a308 i209 i213 i764 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v200 v202 v398 #next: v668  <|@  <|@
tid ?201 <|@
d <@d|@=== Debug Properties ===
bci: 52
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 400
stackSize: 0
=== Inputs ===
outerFrameState: ?95 
values: a1 - i209 
=== Succesors ===
=== Usages ===
v798 i884 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?95 values: a1 - i209  <|@  <|@
f <@~|@floating>@ <|@
tid i110 <|@
result int[131072|0x20000] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:309) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 6]
rawvalue: 131072
stableDimension: 0
stamp: i32 [131072] ⇊0000000000020000 ⇈0000000000020000
stampKind: i32
value: int[131072|0x20000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v111 v184 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v184 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i764 
y: i110 
=== Succesors ===
=== Usages ===
v668 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i764 y: i110  <|@  <|@
f <@*|@fixed>@ <|@
tid v668 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v184 
=== Succesors ===
trueSuccessor: v665 
falseSuccessor: v667 
=== Usages ===
=== Predecessor ===
v199 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v184 #trueSuccessor: v665 #falseSuccessor: v667  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v43|QWORD[.], v44|DWORD, v45|DWORD, v46|DWORD] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v46|DWORD y: 131072 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B21 -> B22 falseDestination: B21 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B58" 
    xhandlers
    flags 
    probability 4598217313573491068
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v665 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: a883 
=== Usages ===
=== Predecessor ===
v668 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a883  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a883 <|@
result v47|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.hashArray
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:522) [bci: 28]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
nullCheck: false
stamp: n# [B
=== Inputs ===
stateBefore: - 
guard: - 
address: v902 
=== Succesors ===
next: i884 
=== Usages ===
v909 v908 v905 
=== Predecessor ===
v665 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v902 #next: i884  <|@  <|@
f <@~|@floating>@ <|@
tid v905 <|@
result [v47|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a883 
=== Succesors ===
=== Usages ===
i884 i885 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a883  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i884 <|@
result v48|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:522) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?201 
guard: - 
address: v905 
=== Succesors ===
next: v676 
=== Usages ===
i188 
=== Predecessor ===
a883 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?201 guard: - address: v905 #next: v676  <|@  <|@
f <@~|@floating>@ <|@
tid i188 <|@
result v49|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:522) [bci: 33]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stamp: i32 [0 - 1073741823] ⇈000000003fffffff
=== Inputs ===
x: i884 
y: i10 
=== Succesors ===
=== Usages ===
?249 i92 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i884 y: i10  <|@  <|@
tid ?249 <|@
d <@d|@=== Debug Properties ===
bci: 64
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 401
stackSize: 2
=== Inputs ===
outerFrameState: ?95 
values: - - - i213 i188 
=== Succesors ===
=== Usages ===
v814 i885 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?95 values: - - - i213 i188  <|@  <|@
f <@~|@floating>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:309) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 6]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i764 
y: i110 
=== Succesors ===
=== Usages ===
v676 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i764 y: i110  <|@  <|@
f <@*|@fixed>@ <|@
tid v676 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:309) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 6]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v111 
=== Succesors ===
trueSuccessor: v673 
falseSuccessor: v675 
=== Usages ===
=== Predecessor ===
i884 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v111 #trueSuccessor: v673 #falseSuccessor: v675  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 52]
locals: v0|QWORD[.] - v44|DWORD 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
>@ <|@ instruction v48|DWORD = MOV [v47|DWORD[.] * 8 + 12] size: DWORD state [bci:52, 3] <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = SHR v48|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v46|DWORD y: 131072 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B22 -> B23 falseDestination: B22 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B57" 
    xhandlers
    flags 
    probability 4598217313573491068
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v673 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:309) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: i885 
=== Usages ===
=== Predecessor ===
v676 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i885  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i885 <|@
result v50|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 41]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 6]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?249 
guard: - 
address: v905 
=== Succesors ===
next: v684 
=== Usages ===
v502 v512 
=== Predecessor ===
v673 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?249 guard: - address: v905 #next: v684  <|@  <|@
f <@~|@floating>@ <|@
tid i92 <|@
result v51|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 65]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stamp: i32 [-1 - 1073741822]
=== Inputs ===
x: i188 
y: i11 
=== Succesors ===
=== Usages ===
i93 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i188 y: i11  <|@  <|@
f <@~|@floating>@ <|@
tid i93 <|@
result v52|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 66]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stamp: i32
=== Inputs ===
x: i92 
y: i213 
=== Succesors ===
=== Usages ===
i113 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i92 y: i213  <|@  <|@
f <@~|@floating>@ <|@
tid i113 <|@
result v53|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:310) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 6]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i93 
y: i10 
=== Succesors ===
=== Usages ===
v908 i118 v502 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i93 y: i10  <|@  <|@
f <@~|@floating>@ <|@
tid v502 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 41]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 6]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i113 
y: i885 
=== Succesors ===
=== Usages ===
v684 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i113 y: i885  <|@  <|@
f <@*|@fixed>@ <|@
tid v684 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 41]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 6]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v502 
=== Succesors ===
trueSuccessor: v681 
falseSuccessor: v683 
=== Usages ===
=== Predecessor ===
i885 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v502 #trueSuccessor: v681 #falseSuccessor: v683  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 64]
stack: v45|DWORD v49|DWORD 
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
>@ <|@ instruction v50|DWORD = MOV [v47|DWORD[.] * 8 + 12] size: DWORD state [bci:64, 3] <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = DEC v49|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = AND (x: v51|DWORD, y: v45|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = SHL v52|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v50|DWORD, y: v53|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B56" 
    xhandlers
    flags 
    probability 4598217313573491068
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v681 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 41]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v688 
=== Usages ===
i887 
=== Predecessor ===
v684 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v688  <|@  <|@
f <@~|@floating>@ <|@
tid i118 <|@
result v54|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 52]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 6]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i113 
y: i10 
=== Succesors ===
=== Usages ===
v909 v512 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i113 y: i10  <|@  <|@
f <@~|@floating>@ <|@
tid v512 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 53]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 6]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i118 
y: i885 
=== Succesors ===
=== Usages ===
v688 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i118 y: i885  <|@  <|@
f <@*|@fixed>@ <|@
tid v688 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 53]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 6]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v512 
=== Succesors ===
trueSuccessor: v685 
falseSuccessor: v687 
=== Usages ===
=== Predecessor ===
v681 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v512 #trueSuccessor: v685 #falseSuccessor: v687  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = INC v53|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v50|DWORD, y: v54|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4598217313573491068
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v685 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 53]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: i886 
=== Usages ===
i886 
=== Predecessor ===
v688 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i886  <|@  <|@
f <@~|@floating>@ <|@
tid v909 <|@
result [v54|DWORD + v47|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i118 
index: a883 
=== Succesors ===
=== Usages ===
i886 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i118 index: a883  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i886 <|@
result v55|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: byte
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 53]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 6]
nullCheck: false
stamp: i8
=== Inputs ===
stateBefore: - 
guard: v685 
address: v909 
=== Succesors ===
next: i887 
=== Usages ===
i582 
=== Predecessor ===
v685 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v685 address: v909 #next: i887  <|@  <|@
f <@~|@floating>@ <|@
tid v908 <|@
result [v53|DWORD + v47|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i113 
index: a883 
=== Succesors ===
=== Usages ===
i887 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i113 index: a883  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i887 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: byte
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 41]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 6]
nullCheck: false
stamp: i8
=== Inputs ===
stateBefore: - 
guard: v681 
address: v908 
=== Succesors ===
next: v17 
=== Usages ===
i580 
=== Predecessor ===
i886 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v681 address: v908 #next: v17  <|@  <|@
f <@~|@floating>@ <|@
tid i582 <|@
result v56|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 57]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 6]
resultBits: 32
stamp: i32 [0 - 255] ⇈00000000000000ff
=== Inputs ===
value: i886 
=== Succesors ===
=== Usages ===
i122 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i886  <|@  <|@
f <@~|@floating>@ <|@
tid i121 <|@
result int[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 58]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 6]
rawvalue: 8
stableDimension: 0
stamp: i32 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i122 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i122 <|@
result v57|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 6]
stamp: i32 [0 - 65280] ⇈000000000000ff00
=== Inputs ===
x: i582 
y: i121 
=== Succesors ===
=== Usages ===
i123 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i582 y: i121  <|@  <|@
f <@~|@floating>@ <|@
tid i580 <|@
result v58|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 45]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 6]
resultBits: 32
stamp: i32 [0 - 255] ⇈00000000000000ff
=== Inputs ===
value: i887 
=== Succesors ===
=== Usages ===
i123 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i887  <|@  <|@
f <@~|@floating>@ <|@
tid i123 <|@
result v59|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 6]
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
x: i122 
y: i580 
=== Succesors ===
=== Usages ===
v14 i278 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i122 y: i580  <|@  <|@
f <@~|@floating>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:270) [bci: 14]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i123 
y: i13 
=== Succesors ===
=== Usages ===
v17 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i123 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:270) [bci: 14]
stamp: void
trueSuccessorProbability: 0.4113665609079093
=== Inputs ===
condition: v14 
=== Succesors ===
trueSuccessor: v15 
falseSuccessor: v16 
=== Usages ===
=== Predecessor ===
i887 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v14 #trueSuccessor: v15 #falseSuccessor: v16  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = MOVSXB [v54|DWORD + v47|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOVZXB v55|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = SHL v56|DWORD y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = MOVZXB [v53|DWORD + v47|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = OR (x: v57|DWORD, y: v58|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v59|DWORD, y: v59|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.4113665609079093 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors 
    xhandlers
    flags 
    probability 4592144206127320787
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:282) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v285 
=== Usages ===
=== Predecessor ===
v17 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v285  <|@  <|@
f <@*|@fixed>@ <|@
tid v285 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: i11 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v15 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i11 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4594519514869627790
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:271) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v274 
=== Usages ===
=== Predecessor ===
v17 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v274  <|@  <|@
f <@*|@fixed>@ <|@
tid v274 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v273 
=== Predecessor ===
v16 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v59|DWORD, v43|QWORD[.]] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B18" 
    successors "B29" "B54" 
    xhandlers
    flags 
    probability 4603477158219182322
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i278 <|@
result v60|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 65535] ⇈000000000000ffff
valueDescription: i32
=== Inputs ===
merge: v273 
values: i123 i578 
=== Succesors ===
=== Usages ===
i12 ?275 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v273 values: i123 i578  <|@  <|@
f <@~|@floating>@ <|@
tid a313 <|@
result v61|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a [Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v273 
values: a308 a309 
=== Succesors ===
=== Usages ===
v911 v912 v910 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v273 values: a308 a309  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v273 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v274 v276 
=== Succesors ===
next: i888 
=== Usages ===
i278 a313 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v274 v276 #next: i888  <|@  <|@
tid ?275 <|@
d <@d|@=== Debug Properties ===
bci: 9
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findHash(Object)>
duringCall: false
localsSize: 5
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 6]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 269
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - - i278 
=== Succesors ===
=== Usages ===
v826 i888 v922 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - - - i278  <|@  <|@
f <@~|@floating>@ <|@
tid v910 <|@
result [v61|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a313 
index: - 
=== Succesors ===
=== Usages ===
i888 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a313 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i888 <|@
result v62|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:271) [bci: 19]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?275 
guard: - 
address: v910 
=== Succesors ===
next: v696 
=== Usages ===
v526 v539 
=== Predecessor ===
v273 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?275 guard: - address: v910 #next: v696  <|@  <|@
f <@~|@floating>@ <|@
tid i12 <|@
result v63|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 10]
stamp: i32 [-1 - 65534]
=== Inputs ===
x: i278 
y: i11 
=== Succesors ===
=== Usages ===
i19 ?23 v28 ?160 v293 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i278 y: i11  <|@  <|@
f <@~|@floating>@ <|@
tid i19 <|@
result v64|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:271) [bci: 19]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i12 
y: i10 
=== Succesors ===
=== Usages ===
v911 i170 v526 i867 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i12 y: i10  <|@  <|@
f <@~|@floating>@ <|@
tid v526 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:271) [bci: 19]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i19 
y: i888 
=== Succesors ===
=== Usages ===
v696 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i19 y: i888  <|@  <|@
f <@*|@fixed>@ <|@
tid v696 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:271) [bci: 19]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v526 
=== Succesors ===
trueSuccessor: v693 
falseSuccessor: v695 
=== Usages ===
=== Predecessor ===
i888 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v526 #trueSuccessor: v693 #falseSuccessor: v695  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v60|DWORD, v61|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 9]
stack: v60|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
>@ <|@ instruction v62|DWORD = MOV [v61|QWORD[.] + 12] size: DWORD state [bci:9] <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = DEC v60|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = SHL v63|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v62|DWORD, y: v64|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B28 -> B29 falseDestination: B28 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4603477158219182322
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v693 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:271) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: a889 
=== Usages ===
a889 
=== Predecessor ===
v696 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a889  <|@  <|@
f <@~|@floating>@ <|@
tid v911 <|@
result [v61|QWORD[.] + v64|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a313 
index: i19 
=== Succesors ===
=== Usages ===
a889 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a313 index: i19  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a889 <|@
result v65|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:271) [bci: 19]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v693 
address: v911 
=== Succesors ===
next: v132 
=== Usages ===
a535 
=== Predecessor ===
v693 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v693 address: v911 #next: v132  <|@  <|@
f <@~|@floating>@ <|@
tid a535 <|@
result v66|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:271) [bci: 19]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a889 
=== Succesors ===
=== Usages ===
v572 v129 v568 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a889  <|@  <|@
f <@~|@floating>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:255) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:272) [bci: 26]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2 
y: a535 
=== Succesors ===
=== Usages ===
v132 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a2 y: a535  <|@  <|@
f <@*|@fixed>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:255) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:272) [bci: 26]
stamp: void
trueSuccessorProbability: 0.09569357247187082
=== Inputs ===
condition: v129 
=== Succesors ===
trueSuccessor: v130 
falseSuccessor: v131 
=== Usages ===
=== Predecessor ===
a889 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v129 #trueSuccessor: v130 #falseSuccessor: v131  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v65|DWORD[.] = MOV [v61|QWORD[.] + v64|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = UNCOMPRESSPOINTER (input: v65|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1ea76343 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v66|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09569357247187082 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors 
    xhandlers
    flags 
    probability 4588278604279519704
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:256) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:272) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v293 
=== Usages ===
=== Predecessor ===
v132 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v293  <|@  <|@
f <@*|@fixed>@ <|@
tid v293 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:273) [bci: 33]
stamp: void
=== Inputs ===
result: i12 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v130 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i12 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v63|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B39" 
    xhandlers
    flags 
    probability 4602969796766449492
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:272) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: a890 
=== Usages ===
=== Predecessor ===
v132 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a890  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a890 <|@
result v67|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.strategy
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:272) [bci: 26]
nullCheck: false
stamp: n Lorg/graalvm/collections/Equivalence;
=== Inputs ===
stateBefore: - 
guard: - 
address: v897 
=== Succesors ===
next: v138 
=== Usages ===
a537 v569 v584 v585 
=== Predecessor ===
v131 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v897 #next: v138  <|@  <|@
f <@~|@floating>@ <|@
tid v569 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:272) [bci: 26]
stamp: void
=== Inputs ===
value: a890 
=== Succesors ===
=== Usages ===
v138 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a890  <|@  <|@
f <@~|@floating>@ <|@
tid v864 <|@
result meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:276) [bci: 43]
rawvalue: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v865 v866 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v138 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:272) [bci: 26]
stamp: void
trueSuccessorProbability: 0.9726719235714489
=== Inputs ===
condition: v569 
=== Succesors ===
trueSuccessor: v136 
falseSuccessor: v137 
=== Usages ===
=== Predecessor ===
a890 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v569 #trueSuccessor: v136 #falseSuccessor: v137  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v67|DWORD[.] = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v67|DWORD[.], y: v67|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9726719235714489 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B38" 
    xhandlers
    flags 
    probability 4602838770193706684
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:265) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:272) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v700 
=== Usages ===
=== Predecessor ===
v138 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v700  <|@  <|@
f <@~|@floating>@ <|@
tid i867 <|@
result v68|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:275) [bci: 36]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i19 
y: i10 
=== Succesors ===
=== Usages ===
v539 v912 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i19 y: i10  <|@  <|@
f <@~|@floating>@ <|@
tid v539 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:275) [bci: 36]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i867 
y: i888 
=== Succesors ===
=== Usages ===
v700 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i867 y: i888  <|@  <|@
f <@*|@fixed>@ <|@
tid v700 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:275) [bci: 36]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v539 
=== Succesors ===
trueSuccessor: v697 
falseSuccessor: v699 
=== Usages ===
=== Predecessor ===
v136 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v539 #trueSuccessor: v697 #falseSuccessor: v699  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = INC v64|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v62|DWORD, y: v68|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B32 -> B33 falseDestination: B32 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4602838770193706684
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v697 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:275) [bci: 36]
stamp: void
=== Inputs ===
=== Succesors ===
next: a891 
=== Usages ===
a891 
=== Predecessor ===
v700 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a891  <|@  <|@
f <@~|@floating>@ <|@
tid v912 <|@
result [v61|QWORD[.] + v68|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a313 
index: i867 
=== Succesors ===
=== Usages ===
a891 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a313 index: i867  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a891 <|@
result v69|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:275) [bci: 36]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v697 
address: v912 
=== Succesors ===
next: v717 
=== Usages ===
a547 v748 v915 
=== Predecessor ===
v697 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v697 address: v912 #next: v717  <|@  <|@
f <@~|@floating>@ <|@
tid v748 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:276) [bci: 43]
stamp: void
=== Inputs ===
value: a891 
=== Succesors ===
=== Usages ===
v717 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a891  <|@  <|@
f <@*|@fixed>@ <|@
tid v717 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:276) [bci: 43]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v748 
=== Succesors ===
trueSuccessor: v716 
falseSuccessor: v715 
=== Usages ===
=== Predecessor ===
a891 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v748 #trueSuccessor: v716 #falseSuccessor: v715  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v69|DWORD[.] = MOV [v61|QWORD[.] + v68|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v69|DWORD[.], y: v69|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4587622502073282859
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v716 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:276) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v855 
=== Usages ===
=== Predecessor ===
v717 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v855  <|@  <|@
f <@*|@fixed>@ <|@
tid v855 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:276) [bci: 43]
stamp: void
=== Inputs ===
result: i11 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v716 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i11 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4602066011085080403
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v715 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:141) [bci: 28]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:276) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v892 
=== Usages ===
=== Predecessor ===
v717 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v892  <|@  <|@
f <@~|@floating>@ <|@
tid v915 <|@
result [v69|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a891 
=== Succesors ===
=== Usages ===
v892 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a891  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v892 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:276) [bci: 43]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v915 
=== Succesors ===
next: v848 
=== Usages ===
v865 
=== Predecessor ===
v715 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v915 #next: v848  <|@  <|@
f <@~|@floating>@ <|@
tid v865 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:276) [bci: 43]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v892 
y: v864 
=== Succesors ===
=== Usages ===
v848 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v892 y: v864  <|@  <|@
f <@*|@fixed>@ <|@
tid v848 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:276) [bci: 43]
stamp: void
trueSuccessorProbability: 0.4480776492636467
=== Inputs ===
condition: v865 
=== Succesors ===
trueSuccessor: v846 
falseSuccessor: v845 
=== Usages ===
=== Predecessor ===
v892 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v865 #trueSuccessor: v846 #falseSuccessor: v845  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v69|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.4480776492636467 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors 
    xhandlers
    flags 
    probability 4596690698412909547
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v846 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:276) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: i237 
=== Usages ===
=== Predecessor ===
v848 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i237  <|@  <|@
f <@~|@floating>@ <|@
tid a547 <|@
result v70|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:275) [bci: 36]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a891 
=== Succesors ===
=== Usages ===
v548 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a891  <|@  <|@
tid v548 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:277) [bci: 56]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@52ebf7c2
stamp: void
targetMethod: HotSpotMethod<EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)>
=== Inputs ===
arguments: a1 a2 a547 
=== Succesors ===
=== Usages ===
i237 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a2 a547  <|@  <|@
tid ?760 <|@
d <@d|@=== Debug Properties ===
bci: 56
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findHash(Object)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 277
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - - 
=== Succesors ===
=== Usages ===
i237 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i237 <|@
result v71|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 56
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:277) [bci: 56]
polymorphic: false
stamp: i32
targetMethod: Direct#EconomicMapImpl.findWithCollision
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v548 
stateDuring: ?760 
=== Succesors ===
next: v239 
=== Usages ===
v239 
=== Predecessor ===
v846 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v548 stateDuring: ?760 #next: v239  <|@  <|@
f <@*|@fixed>@ <|@
tid v239 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:277) [bci: 59]
stamp: void
=== Inputs ===
result: i237 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i237 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i237 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = UNCOMPRESSPOINTER (input: v69|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1ea76343 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:277) [bci: 56]
locals: - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:56] <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v71|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors 
    xhandlers
    flags 
    probability 4598304672023893341
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v845 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:276) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v856 
=== Usages ===
=== Predecessor ===
v848 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v856  <|@  <|@
f <@*|@fixed>@ <|@
tid v856 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:276) [bci: 43]
stamp: void
=== Inputs ===
result: i11 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v845 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i11 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v699 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:275) [bci: 36]
stamp: void
=== Inputs ===
=== Succesors ===
next: v831 
=== Usages ===
=== Predecessor ===
v700 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v831  <|@  <|@
f <@~|@floating>@ <|@
tid i832 <|@
result int[-138267|0xfffffffffffde3e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -138267
stableDimension: 0
stamp: i32 [-138267] ⇊00000000fffde3e5 ⇈00000000fffde3e5
stampKind: i32
value: int[-138267|0xfffffffffffde3e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i824 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v831 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v821 
=== Predecessor ===
v699 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-138267|0xfffffffffffde3e5]] destination: B38 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4579539322436593139
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:272) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v148 
=== Usages ===
=== Predecessor ===
v138 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v148  <|@  <|@
f <@~|@floating>@ <|@
tid v585 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:259) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:272) [bci: 26]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a890 
y: a573 
=== Succesors ===
=== Usages ===
v148 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a890 y: a573  <|@  <|@
tid ?160 <|@
d <@d|@=== Debug Properties ===
bci: 26
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findHash(Object)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 272
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i12 - - 
=== Succesors ===
=== Usages ===
?761 ?759 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i12 - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v148 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:259) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:272) [bci: 26]
stamp: void
trueSuccessorProbability: 0.7114431340645025
=== Inputs ===
condition: v585 
=== Succesors ===
trueSuccessor: v146 
falseSuccessor: v141 
=== Usages ===
=== Predecessor ===
v137 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v585 #trueSuccessor: v146 #falseSuccessor: v141  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v67|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1642007824] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7114431340645025 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    probability 4577119570936757357
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v146 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:272) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v922 
=== Usages ===
=== Predecessor ===
v148 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v922  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v922 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?275 
object: a2 
=== Succesors ===
next: i150 
=== Usages ===
=== Predecessor ===
v146 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?275 object: a2 #next: i150  <|@  <|@
tid v568 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:272) [bci: 26]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@103f5ff0
stamp: void
targetMethod: HotSpotMethod<Object.equals(Object)>
=== Inputs ===
arguments: a2 a535 
=== Succesors ===
=== Usages ===
i150 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2 a535  <|@  <|@
tid ?759 <|@
d <@d|@=== Debug Properties ===
bci: 36
code: ResolvedJavaMethodBytecode<EconomicMapImpl.compareKeys(Object, Object)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 260
stackSize: 0
=== Inputs ===
outerFrameState: ?160 
values: - - - 
=== Succesors ===
=== Usages ===
i150 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?160 values: - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i150 <|@
result v72|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 36
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:272) [bci: 26]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Object.equals
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v568 
stateDuring: ?759 
=== Succesors ===
next: v164 
=== Usages ===
i163 
=== Predecessor ===
v922 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v568 stateDuring: ?759 #next: v164  <|@  <|@
f <@*|@fixed>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v161 
=== Predecessor ===
i150 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 9]
stack: v60|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK [v1|QWORD[.]] state [bci:9] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v66|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:272) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v63|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:36, 26] <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v72|DWORD] destination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4571489525153354508
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:259) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:272) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v143 
=== Usages ===
=== Predecessor ===
v148 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v143  <|@  <|@
f <@~|@floating>@ <|@
tid v584 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:272) [bci: 26]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a890 
y: a575 
=== Succesors ===
=== Usages ===
v143 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a890 y: a575  <|@  <|@
f <@*|@fixed>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:272) [bci: 26]
stamp: void
trueSuccessorProbability: 0.0023566146768518636
=== Inputs ===
condition: v584 
=== Succesors ===
trueSuccessor: v142 
falseSuccessor: v147 
=== Usages ===
=== Predecessor ===
v141 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v584 #trueSuccessor: v142 #falseSuccessor: v147  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v67|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0023566146768518636 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B46" 
    xhandlers
    flags 
    probability 4531956905531768129
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:265) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:272) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v167 
=== Usages ===
=== Predecessor ===
v143 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v167  <|@  <|@
f <@*|@fixed>@ <|@
tid v167 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v917 
=== Predecessor ===
v142 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B42 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4571478120309556813
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v147 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:272) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: i155 
=== Usages ===
=== Predecessor ===
v143 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i155  <|@  <|@
f <@~|@floating>@ <|@
tid a537 <|@
result v73|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:272) [bci: 26]
op: Uncompress
stamp: a Lorg/graalvm/collections/Equivalence;
=== Inputs ===
value: a890 
=== Succesors ===
=== Usages ===
v572 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a890  <|@  <|@
tid v572 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:272) [bci: 26]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@803dad5
stamp: void
targetMethod: HotSpotMethod<Equivalence.equals(Object, Object)>
=== Inputs ===
arguments: a537 a2 a535 
=== Succesors ===
=== Usages ===
i155 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a537 a2 a535  <|@  <|@
tid ?761 <|@
d <@d|@=== Debug Properties ===
bci: 46
code: ResolvedJavaMethodBytecode<EconomicMapImpl.compareKeys(Object, Object)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 262
stackSize: 0
=== Inputs ===
outerFrameState: ?160 
values: - - - 
=== Succesors ===
=== Usages ===
i155 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?160 values: - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i155 <|@
result v74|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 46
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:272) [bci: 26]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Equivalence.equals
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v572 
stateDuring: ?761 
=== Succesors ===
next: v165 
=== Usages ===
i163 
=== Predecessor ===
v147 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v572 stateDuring: ?761 #next: v165  <|@  <|@
f <@*|@fixed>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v161 
=== Predecessor ===
i155 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[.] = UNCOMPRESSPOINTER (input: v67|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1ea76343 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v73|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v66|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:272) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v63|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:46, 26] <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v74|DWORD] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B40" "B43" 
    successors "B45" "B53" 
    xhandlers
    flags 
    probability 4579533620014694292
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i163 <|@
result v75|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v161 
values: i150 i155 
=== Succesors ===
=== Usages ===
v24 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v161 values: i150 i155  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v164 v165 
=== Succesors ===
next: v27 
=== Usages ===
i163 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v164 v165 #next: v27  <|@  <|@
f <@~|@floating>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:272) [bci: 29]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i163 
y: i13 
=== Succesors ===
=== Usages ===
v27 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i163 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:272) [bci: 29]
stamp: void
trueSuccessorProbability: 0.17473112367211385
=== Inputs ===
condition: v24 
=== Succesors ===
trueSuccessor: v25 
falseSuccessor: v26 
=== Usages ===
=== Predecessor ===
v161 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v24 #trueSuccessor: v25 #falseSuccessor: v26  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v75|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v75|DWORD, y: v75|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.17473112367211385 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" 
    xhandlers
    flags 
    probability 4568003408557250029
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:275) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v918 
=== Usages ===
=== Predecessor ===
v27 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v918  <|@  <|@
f <@*|@fixed>@ <|@
tid v918 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:272) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v917 
=== Predecessor ===
v25 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B42" 
    successors "B47" "B52" 
    xhandlers
    flags 
    probability 4568026218244845418
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v917 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:272) [bci: 29]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v918 v167 
=== Succesors ===
next: a893 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v918 v167 #next: a893  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a893 <|@
result v76|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:275) [bci: 36]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v898 
=== Succesors ===
next: i894 
=== Usages ===
a550 v913 
=== Predecessor ===
v917 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v898 #next: i894  <|@  <|@
tid ?23 <|@
d <@d|@=== Debug Properties ===
bci: 29
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findHash(Object)>
duringCall: false
localsSize: 5
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:272) [bci: 26]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 272
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 a2 i12 - - i13 
=== Succesors ===
=== Usages ===
v782 i894 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i12 - - i13  <|@  <|@
f <@~|@floating>@ <|@
tid v913 <|@
result [v76|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a893 
=== Succesors ===
=== Usages ===
i894 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a893  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i894 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:275) [bci: 36]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?23 
guard: - 
address: v913 
=== Succesors ===
next: v712 
=== Usages ===
v556 
=== Predecessor ===
a893 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?23 guard: - address: v913 #next: v712  <|@  <|@
f <@~|@floating>@ <|@
tid i170 <|@
result v77|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:275) [bci: 36]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i19 
y: i10 
=== Succesors ===
=== Usages ===
v914 v556 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i19 y: i10  <|@  <|@
f <@~|@floating>@ <|@
tid v556 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:275) [bci: 36]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i170 
y: i894 
=== Succesors ===
=== Usages ===
v712 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i170 y: i894  <|@  <|@
f <@*|@fixed>@ <|@
tid v712 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:275) [bci: 36]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v556 
=== Succesors ===
trueSuccessor: v709 
falseSuccessor: v711 
=== Usages ===
=== Predecessor ===
i894 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v556 #trueSuccessor: v709 #falseSuccessor: v711  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v76|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v77|DWORD = INC v64|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:272) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v63|DWORD - - 
>@ <|@ instruction CMP (x: v77|DWORD, y: [v76|DWORD[.] * 8 + 12]) size: DWORD state [bci:29] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B46 -> B47 falseDestination: B46 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4568026218244845418
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v709 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:275) [bci: 36]
stamp: void
=== Inputs ===
=== Succesors ===
next: a895 
=== Usages ===
a895 
=== Predecessor ===
v712 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a895  <|@  <|@
f <@~|@floating>@ <|@
tid a550 <|@
result v78|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:275) [bci: 36]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a893 
=== Succesors ===
=== Usages ===
v914 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a893  <|@  <|@
f <@~|@floating>@ <|@
tid v914 <|@
result [v78|QWORD[.] + v77|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a550 
index: i170 
=== Succesors ===
=== Usages ===
a895 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a550 index: i170  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a895 <|@
result v79|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:275) [bci: 36]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v709 
address: v914 
=== Succesors ===
next: v734 
=== Usages ===
a564 v752 v916 
=== Predecessor ===
v709 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v709 address: v914 #next: v734  <|@  <|@
f <@~|@floating>@ <|@
tid v752 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:276) [bci: 43]
stamp: void
=== Inputs ===
value: a895 
=== Succesors ===
=== Usages ===
v734 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a895  <|@  <|@
f <@*|@fixed>@ <|@
tid v734 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:276) [bci: 43]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v752 
=== Succesors ===
trueSuccessor: v733 
falseSuccessor: v732 
=== Usages ===
=== Predecessor ===
a895 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v752 #trueSuccessor: v733 #falseSuccessor: v732  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[.] = UNCOMPRESSPOINTER (input: v76|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1ea76343 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v79|DWORD[.] = MOV [v78|QWORD[.] + v77|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v79|DWORD[.], y: v79|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors 
    xhandlers
    flags 
    probability 4553339460219027335
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v733 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:276) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v853 
=== Usages ===
=== Predecessor ===
v734 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v853  <|@  <|@
f <@*|@fixed>@ <|@
tid v853 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:276) [bci: 43]
stamp: void
=== Inputs ===
result: i11 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v733 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i11 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4567438238672992121
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v732 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:141) [bci: 28]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:276) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v896 
=== Usages ===
=== Predecessor ===
v734 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v896  <|@  <|@
f <@~|@floating>@ <|@
tid v916 <|@
result [v79|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a895 
=== Succesors ===
=== Usages ===
v896 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a895  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v896 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:276) [bci: 43]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v916 
=== Succesors ===
next: v838 
=== Usages ===
v866 
=== Predecessor ===
v732 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v916 #next: v838  <|@  <|@
f <@~|@floating>@ <|@
tid v866 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:276) [bci: 43]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v896 
y: v864 
=== Succesors ===
=== Usages ===
v838 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v896 y: v864  <|@  <|@
f <@*|@fixed>@ <|@
tid v838 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:276) [bci: 43]
stamp: void
trueSuccessorProbability: 0.4480776492636467
=== Inputs ===
condition: v866 
=== Succesors ===
trueSuccessor: v836 
falseSuccessor: v835 
=== Usages ===
=== Predecessor ===
v896 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v866 #trueSuccessor: v836 #falseSuccessor: v835  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v79|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.4480776492636467 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 4562385111977621226
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v836 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:276) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: i43 
=== Usages ===
=== Predecessor ===
v838 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i43  <|@  <|@
f <@~|@floating>@ <|@
tid a564 <|@
result v80|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:275) [bci: 36]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a895 
=== Succesors ===
=== Usages ===
v565 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a895  <|@  <|@
tid v565 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:277) [bci: 56]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@79d5dff2
stamp: void
targetMethod: HotSpotMethod<EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)>
=== Inputs ===
arguments: a1 a2 a564 
=== Succesors ===
=== Usages ===
i43 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a2 a564  <|@  <|@
tid ?762 <|@
d <@d|@=== Debug Properties ===
bci: 56
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findHash(Object)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 277
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - - 
=== Succesors ===
=== Usages ===
i43 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i43 <|@
result v81|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 56
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:277) [bci: 56]
polymorphic: false
stamp: i32
targetMethod: Direct#EconomicMapImpl.findWithCollision
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v565 
stateDuring: ?762 
=== Succesors ===
next: v45 
=== Usages ===
v45 
=== Predecessor ===
v836 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v565 stateDuring: ?762 #next: v45  <|@  <|@
f <@*|@fixed>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:277) [bci: 59]
stamp: void
=== Inputs ===
result: i43 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i43 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i43 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = UNCOMPRESSPOINTER (input: v79|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1ea76343 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v80|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:277) [bci: 56]
locals: - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:56] <|@ <|@
      nr   -1  <|@ instruction v81|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v81|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 4563484166113622024
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v835 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:276) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v854 
=== Usages ===
=== Predecessor ===
v838 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v854  <|@  <|@
f <@*|@fixed>@ <|@
tid v854 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:276) [bci: 43]
stamp: void
=== Inputs ===
result: i11 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v835 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i11 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v711 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:275) [bci: 36]
stamp: void
=== Inputs ===
=== Succesors ===
next: v782 
=== Usages ===
=== Predecessor ===
v712 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v782  <|@  <|@
f <@~|@floating>@ <|@
tid i784 <|@
result int[-142619|0xfffffffffffdd2e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -142619
stableDimension: 0
stamp: i32 [-142619] ⇊00000000fffdd2e5 ⇈00000000fffdd2e5
stampKind: i32
value: int[-142619|0xfffffffffffdd2e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v782 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v782 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?23 
actionAndReason: i784 
speculation: a769 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v711 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?23 actionAndReason: i784 speculation: a769  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -142619 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:272) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v63|DWORD - - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 4578069373506959897
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:273) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v28 
=== Usages ===
=== Predecessor ===
v27 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v28  <|@  <|@
f <@*|@fixed>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:273) [bci: 33]
stamp: void
=== Inputs ===
result: i12 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v26 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i12 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v63|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v695 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:271) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v827 
=== Usages ===
=== Predecessor ===
v696 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v827  <|@  <|@
f <@~|@floating>@ <|@
tid i828 <|@
result int[-134939|0xfffffffffffdf0e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -134939
stableDimension: 0
stamp: i32 [-134939] ⇊00000000fffdf0e5 ⇈00000000fffdf0e5
stampKind: i32
value: int[-134939|0xfffffffffffdf0e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i824 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v827 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v821 
=== Predecessor ===
v695 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-134939|0xfffffffffffdf0e5]] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B38" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i824 <|@
result v82|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-144907 - -133643] ⇊00000000fffdc0e5 ⇈00000000fffdfff5
valueDescription: i32
=== Inputs ===
merge: v821 
values: i828 i832 
=== Succesors ===
=== Usages ===
v826 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v821 values: i828 i832  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v821 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v827 v831 
=== Succesors ===
next: v826 
=== Usages ===
i824 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v827 v831 #next: v826  <|@  <|@
f <@*|@fixed>@ <|@
tid v826 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?275 
actionAndReason: i824 
speculation: a769 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v821 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?275 actionAndReason: i824 speculation: a769  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v82|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v82|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 9]
stack: v60|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v687 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 53]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v819 
=== Usages ===
=== Predecessor ===
v688 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v819  <|@  <|@
f <@~|@floating>@ <|@
tid i820 <|@
result int[-131355|0xfffffffffffdfee5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -131355
stableDimension: 0
stamp: i32 [-131355] ⇊00000000fffdfee5 ⇈00000000fffdfee5
stampKind: i32
value: int[-131355|0xfffffffffffdfee5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i812 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v819 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v809 
=== Predecessor ===
v687 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-131355|0xfffffffffffdfee5]] destination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v683 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 41]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v817 
=== Usages ===
=== Predecessor ===
v684 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v817  <|@  <|@
f <@~|@floating>@ <|@
tid i818 <|@
result int[-128795|0xfffffffffffe08e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -128795
stableDimension: 0
stamp: i32 [-128795] ⇊00000000fffe08e5 ⇈00000000fffe08e5
stampKind: i32
value: int[-128795|0xfffffffffffe08e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i812 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v817 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v809 
=== Predecessor ===
v683 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-128795|0xfffffffffffe08e5]] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v675 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:309) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v815 
=== Usages ===
=== Predecessor ===
v676 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v815  <|@  <|@
f <@~|@floating>@ <|@
tid i816 <|@
result int[-126995|0xfffffffffffe0fed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -126995
stableDimension: 0
stamp: i32 [-126995] ⇊00000000fffe0fed ⇈00000000fffe0fed
stampKind: i32
value: int[-126995|0xfffffffffffe0fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i812 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v815 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v809 
=== Predecessor ===
v675 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-126995|0xfffffffffffe0fed]] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" "B56" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i812 <|@
result v83|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-131355 - -126995] ⇊00000000fffc08e5 ⇈00000000fffffffd
valueDescription: i32
=== Inputs ===
merge: v809 
values: i816 i818 i820 
=== Succesors ===
=== Usages ===
v814 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v809 values: i816 i818 i820  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v809 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v815 v817 v819 
=== Succesors ===
next: v814 
=== Usages ===
i812 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v815 v817 v819 #next: v814  <|@  <|@
f <@*|@fixed>@ <|@
tid v814 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?249 
actionAndReason: i812 
speculation: a769 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v809 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?249 actionAndReason: i812 speculation: a769  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v83|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v83|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 64]
stack: v45|DWORD v49|DWORD 
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:64, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v667 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v798 
=== Usages ===
=== Predecessor ===
v668 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v798  <|@  <|@
f <@~|@floating>@ <|@
tid i800 <|@
result int[-121107|0xfffffffffffe26ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -121107
stableDimension: 0
stamp: i32 [-121107] ⇊00000000fffe26ed ⇈00000000fffe26ed
stampKind: i32
value: int[-121107|0xfffffffffffe26ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
v798 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v798 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?201 
actionAndReason: i800 
speculation: a769 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v667 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?201 actionAndReason: i800 speculation: a769  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -121107 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 52]
locals: v0|QWORD[.] - v44|DWORD 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:52, 3] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@740d62ed slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[.] = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|DWORD[.], y: v2|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7064097688878498 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4604537993089144813
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK [v1|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Object.hashCode()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:48, 3] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 51]
stack: v3|DWORD 
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
>@ <|@ instruction v5|DWORD = MOV [v4|DWORD[.] * 8 + 12] size: DWORD state [bci:51, 3] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1ea76343 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = SHR v3|DWORD y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = XOR (x: v3|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: 512 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7476633120338436 condition: |<| trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602932431886806378
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v3|DWORD, v6|QWORD[.], v8|DWORD] destination: B2 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B2" 
    successors "B15" 
    xhandlers
    flags 
    probability 4604683258742228407
    begin_IR
      LIR
      nr   -1  <|@ instruction [v15|DWORD, v16|QWORD[.], v17|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v18|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 51]
stack: v15|DWORD 
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
>@ <|@ instruction v19|DWORD = MOV [v18|DWORD[.] * 8 + 12] size: DWORD state [bci:51, 3] <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = DEC v19|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = AND (x: v20|DWORD, y: v17|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = UNCOMPRESSPOINTER (input: v18|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1ea76343 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v19|DWORD, v22|QWORD[.], v16|QWORD[.], v17|DWORD, v21|DWORD] destination: B7 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B7" 
    successors "B16" "B19" 
    xhandlers
    flags 
    probability 4604909571972224834
    begin_IR
      LIR
      nr   -1  <|@ instruction [v35|DWORD, v36|QWORD[.], v37|QWORD[.], v38|DWORD, v39|DWORD] = LABEL numbPhis: 5 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v39|DWORD, y: [v36|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B15 -> B16 falseDestination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4604909571972224834
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = MOVSXB [v36|QWORD[.] + v39|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = MOVSXB v40|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST v41|DWORD y: 255 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.4113665609079093 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B28" 
    xhandlers
    flags 
    probability 4601599749976171549
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOVZXB v40|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v42|DWORD, v37|QWORD[.]] destination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B18" 
    successors "B29" "B54" 
    xhandlers
    flags 
    probability 4603477158219182322
    begin_IR
      LIR
      nr   -1  <|@ instruction [v60|DWORD, v61|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 9]
stack: v60|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
>@ <|@ instruction v62|DWORD = MOV [v61|QWORD[.] + 12] size: DWORD state [bci:9] <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = DEC v60|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = SHL v63|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v62|DWORD, y: v64|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B28 -> B29 falseDestination: B28 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4603477158219182322
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v65|DWORD[.] = MOV [v61|QWORD[.] + v64|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = UNCOMPRESSPOINTER (input: v65|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1ea76343 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v66|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09569357247187082 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B39" 
    xhandlers
    flags 
    probability 4602969796766449492
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v67|DWORD[.] = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v67|DWORD[.], y: v67|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9726719235714489 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B38" 
    xhandlers
    flags 
    probability 4602838770193706684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = INC v64|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v62|DWORD, y: v68|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B32 -> B33 falseDestination: B32 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4602838770193706684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v69|DWORD[.] = MOV [v61|QWORD[.] + v68|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v69|DWORD[.], y: v69|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4602066011085080403
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v69|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.4480776492636467 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors 
    xhandlers
    flags 
    probability 4598304672023893341
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors 
    xhandlers
    flags 
    probability 4599212194713537126
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4598960471339651110
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1642007824] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8855350555757266 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B8" 
    xhandlers
    flags 
    probability 4598355083255592808
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK [v1|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Object.hashCode()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:48, 3] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 51]
stack: v9|DWORD 
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
>@ <|@ instruction v11|DWORD = MOV [v10|DWORD[.] * 8 + 12] size: DWORD state [bci:51, 3] <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1ea76343 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = SHR v9|DWORD y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = XOR (x: v9|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v11|DWORD y: 512 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7476633120338436 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4596171327712223541
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v9|DWORD, v12|QWORD[.], v14|DWORD] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors 
    xhandlers
    flags 
    probability 4596690698412909547
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = UNCOMPRESSPOINTER (input: v69|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1ea76343 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:277) [bci: 56]
locals: - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:56] <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v71|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B21" 
    xhandlers
    flags 
    probability 4595590265099889163
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v6|QWORD[.], v3|DWORD, v8|DWORD, v5|DWORD] destination: B3 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B8" "B3" 
    successors "B22" "B60" 
    xhandlers
    flags 
    probability 4598217313573491068
    begin_IR
      LIR
      nr   -1  <|@ instruction [v43|QWORD[.], v44|DWORD, v45|DWORD, v46|DWORD] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v46|DWORD y: 131072 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B21 -> B22 falseDestination: B21 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B58" 
    xhandlers
    flags 
    probability 4598217313573491068
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 52]
locals: v0|QWORD[.] - v44|DWORD 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
>@ <|@ instruction v48|DWORD = MOV [v47|DWORD[.] * 8 + 12] size: DWORD state [bci:52, 3] <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = SHR v48|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v46|DWORD y: 131072 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B22 -> B23 falseDestination: B22 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B57" 
    xhandlers
    flags 
    probability 4598217313573491068
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 64]
stack: v45|DWORD v49|DWORD 
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
>@ <|@ instruction v50|DWORD = MOV [v47|DWORD[.] * 8 + 12] size: DWORD state [bci:64, 3] <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = DEC v49|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = AND (x: v51|DWORD, y: v45|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = SHL v52|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v50|DWORD, y: v53|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B56" 
    xhandlers
    flags 
    probability 4598217313573491068
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = INC v53|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v50|DWORD, y: v54|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4598217313573491068
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = MOVSXB [v54|DWORD + v47|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOVZXB v55|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = SHL v56|DWORD y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = MOVZXB [v53|DWORD + v47|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = OR (x: v57|DWORD, y: v58|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v59|DWORD, y: v59|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.4113665609079093 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4594519514869627790
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v59|DWORD, v43|QWORD[.]] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors 
    xhandlers
    flags 
    probability 4592144206127320787
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589391659170536246
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v12|QWORD[.], v9|DWORD, v14|DWORD, v11|DWORD] destination: B8 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors 
    xhandlers
    flags 
    probability 4588278604279519704
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v63|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4587622502073282859
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4585003925708260850
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B20" 
    xhandlers
    flags 
    probability 4585003925708260850
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1ea76343 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Equivalence.hashCode(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:40, 3] <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 43]
stack: v24|DWORD 
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
>@ <|@ instruction v26|DWORD = MOV [v25|DWORD[.] * 8 + 12] size: DWORD state [bci:43, 3] <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1ea76343 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = SHR v24|DWORD y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = XOR (x: v24|DWORD, y: v28|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v26|DWORD y: 512 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7476633120338436 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4582899244768309587
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v30|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v30|DWORD[.], y: v30|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4582899244768309587
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOV [v30|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = DEC v31|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = AND (x: v29|DWORD, y: v32|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v30|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1ea76343 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v31|DWORD, v34|QWORD[.], v27|QWORD[.], v29|DWORD, v33|DWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4579539322436593139
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v67|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1642007824] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7114431340645025 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    probability 4577119570936757357
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 9]
stack: v60|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK [v1|QWORD[.]] state [bci:9] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v66|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:272) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v63|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:36, 26] <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v72|DWORD] destination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B40" "B43" 
    successors "B45" "B53" 
    xhandlers
    flags 
    probability 4579533620014694292
    begin_IR
      LIR
      nr   -1  <|@ instruction [v75|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v75|DWORD, y: v75|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.17473112367211385 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 4578069373506959897
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v63|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B21" 
    xhandlers
    flags 
    probability 4576041993751147810
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v27|QWORD[.], v24|DWORD, v29|DWORD, v26|DWORD] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4571489525153354508
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v67|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0023566146768518636 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4571478120309556813
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[.] = UNCOMPRESSPOINTER (input: v67|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1ea76343 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v73|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v66|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:272) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v63|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:46, 26] <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v74|DWORD] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" 
    xhandlers
    flags 
    probability 4568003408557250029
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B42" 
    successors "B47" "B52" 
    xhandlers
    flags 
    probability 4568026218244845418
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v76|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v77|DWORD = INC v64|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:272) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v63|DWORD - - 
>@ <|@ instruction CMP (x: v77|DWORD, y: [v76|DWORD[.] * 8 + 12]) size: DWORD state [bci:29] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B46 -> B47 falseDestination: B46 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4568026218244845418
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[.] = UNCOMPRESSPOINTER (input: v76|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1ea76343 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v79|DWORD[.] = MOV [v78|QWORD[.] + v77|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v79|DWORD[.], y: v79|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4567438238672992121
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v79|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.4480776492636467 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 4563484166113622024
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 4562385111977621226
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = UNCOMPRESSPOINTER (input: v79|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1ea76343 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v80|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:277) [bci: 56]
locals: - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:56] <|@ <|@
      nr   -1  <|@ instruction v81|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v81|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors 
    xhandlers
    flags 
    probability 4553339460219027335
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B46" 
    xhandlers
    flags 
    probability 4531956905531768129
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B42 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-131355|0xfffffffffffdfee5]] destination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" "B56" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v83|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v83|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 64]
stack: v45|DWORD v49|DWORD 
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:64, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-128795|0xfffffffffffe08e5]] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -142619 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:272) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v63|DWORD - - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-126995|0xfffffffffffe0fed]] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -113939 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -124699 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 64]
stack: v38|DWORD v35|DWORD 
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:64, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-138267|0xfffffffffffde3e5]] destination: B38 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B38" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v82|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v82|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 9]
stack: v60|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -118283 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 43]
stack: v24|DWORD 
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:43, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-134939|0xfffffffffffdf0e5]] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -121107 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 52]
locals: v0|QWORD[.] - v44|DWORD 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:52, 3] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_0       
     2: aload_1       
     3: invokespecial #35         // getHashIndex:(java.lang.Object)int
     6: invokespecial #36         // getHashArray:(int)int
     9: iconst_1      
    10: isub          
    11: istore_2      
    12: iload_2       
    13: iconst_m1     
    14: if_icmpeq     60
    17: aload_0       
    18: iload_2       
    19: invokespecial #3          // getKey:(int)java.lang.Object
    22: astore_3      
    23: aload_0       
    24: aload_1       
    25: aload_3       
    26: invokespecial #30         // compareKeys:(java.lang.Object, java.lang.Object)boolean
    29: ifeq          34
    32: iload_2       
    33: ireturn       
    34: aload_0       
    35: iload_2       
    36: invokespecial #37         // getRawValue:(int)java.lang.Object
    39: astore        4
    41: aload         4
    43: instanceof    #45         // org.graalvm.collections.EconomicMapImpl$CollisionLink
    46: ifeq          60
    49: aload_0       
    50: aload_1       
    51: aload         4
    53: checkcast     #45         // org.graalvm.collections.EconomicMapImpl$CollisionLink
    56: invokespecial #38         // findWithCollision:(java.lang.Object, org.graalvm.collections.EconomicMapImpl$CollisionLink)int
    59: ireturn       
    60: iconst_m1     
    61: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@740d62ed slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   12  <|@ instruction TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr   14  <|@ instruction BRANCH trueDestinationProbability: 0.7064097688878498 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4604537993089144813
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ st <@st|@reference-map: [rdx:0, stack:8, stack:16]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 0]
locals: stack:32|QWORD[.] rdx|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK [rdx|QWORD[.]] state [bci:0] <|@ <|@
      nr   20  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   22  <|@ st <@st|@reference-map: [stack:8, stack:16]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48]
locals: stack:32|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stack: stack:32|QWORD[.] 
locals: stack:32|QWORD[.] stack:40|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Object.hashCode()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:48, 3] <|@ <|@
      nr   24  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   28  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:8, stack:16]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 51]
stack: rax|DWORD 
locals: rsi|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] stack:40|QWORD[.] - - - 
>@ <|@ instruction r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:51, 3] <|@ <|@
      nr   30  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1ea76343 encoding: base: 0 shift: 3 <|@ <|@
      nr   32  <|@ instruction r8|DWORD = SHR rax|DWORD y: 16 size: DWORD <|@ <|@
      nr   34  <|@ instruction r8|DWORD = XOR (x: rax|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   36  <|@ instruction CMP r11|DWORD y: 512 size: DWORD <|@ <|@
      nr   38  <|@ instruction BRANCH trueDestinationProbability: 0.7476633120338436 condition: |<| trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602932431886806378
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   42  <|@ instruction JUMP ~[] destination: B2 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B2" 
    successors "B15" 
    xhandlers
    flags 
    probability 4604683258742228407
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   90  <|@ instruction rdx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   92  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0, stack:8, stack:16]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 51]
stack: rax|DWORD 
locals: rsi|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] stack:40|QWORD[.] - - - 
>@ <|@ instruction r11|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD state [bci:51, 3] <|@ <|@
      nr   94  <|@ instruction rax|DWORD = DEC r11|DWORD size: DWORD <|@ <|@
      nr   96  <|@ instruction rax|DWORD = AND (x: rax|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   98  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1ea76343 encoding: base: 0 shift: 3 <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B7 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B7" 
    successors "B16" "B19" 
    xhandlers
    flags 
    probability 4604909571972224834
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL numbPhis: 5 align: false label: ? <|@ <|@
      nr  190  <|@ instruction CMP (x: rax|DWORD, y: [rdx|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  192  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B15 -> B16 falseDestination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4604909571972224834
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  196  <|@ instruction rax|DWORD = MOVSXB [rdx|QWORD[.] + rax|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  198  <|@ instruction rdx|DWORD = MOVSXB rax|DWORD size: DWORD <|@ <|@
      nr  200  <|@ instruction TEST rdx|DWORD y: 255 size: DWORD <|@ <|@
      nr  202  <|@ instruction BRANCH trueDestinationProbability: 0.4113665609079093 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B28" 
    xhandlers
    flags 
    probability 4601599749976171549
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  212  <|@ instruction rax|DWORD = MOVZXB rax|DWORD size: DWORD <|@ <|@
      nr  214  <|@ instruction JUMP ~[] destination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B18" 
    successors "B29" "B54" 
    xhandlers
    flags 
    probability 4603477158219182322
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  302  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:8, stack:16]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 9]
stack: rax|DWORD 
locals: rsi|QWORD[.] stack:40|QWORD[.] - - - 
>@ <|@ instruction rdx|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD state [bci:9] <|@ <|@
      nr  304  <|@ instruction r11|DWORD = DEC rax|DWORD size: DWORD <|@ <|@
      nr  306  <|@ instruction r8|DWORD = SHL r11|DWORD size: DWORD <|@ <|@
      nr  308  <|@ instruction CMP (x: rdx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  310  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B28 -> B29 falseDestination: B28 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4603477158219182322
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  314  <|@ instruction rcx|DWORD[.] = MOV [r10|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  316  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1ea76343 encoding: base: 0 shift: 3 <|@ <|@
      nr  318  <|@ instruction CMP (x: rcx|QWORD[.], y: stack:40|QWORD[.]) size: QWORD <|@ <|@
      nr  320  <|@ instruction BRANCH trueDestinationProbability: 0.09569357247187082 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B39" 
    xhandlers
    flags 
    probability 4602969796766449492
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  330  <|@ instruction r9|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  332  <|@ instruction TEST (x: r9|DWORD[.], y: r9|DWORD[.]) size: DWORD <|@ <|@
      nr  334  <|@ instruction BRANCH trueDestinationProbability: 0.9726719235714489 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B38" 
    xhandlers
    flags 
    probability 4602838770193706684
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  338  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  340  <|@ instruction CMP (x: rdx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  342  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B32 -> B33 falseDestination: B32 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4602838770193706684
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  346  <|@ instruction rdx|DWORD[.] = MOV [r10|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  348  <|@ instruction TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr  350  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4602066011085080403
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  360  <|@ instruction CMP [rdx|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr  362  <|@ instruction BRANCH trueDestinationProbability: 0.4480776492636467 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors 
    xhandlers
    flags 
    probability 4598304672023893341
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  376  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  378  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors 
    xhandlers
    flags 
    probability 4599212194713537126
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  206  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  208  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4598960471339651110
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction CMP r10|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1642007824] <|@ <|@
      nr   52  <|@ instruction BRANCH trueDestinationProbability: 0.8855350555757266 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B8" 
    xhandlers
    flags 
    probability 4598355083255592808
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   56  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   58  <|@ st <@st|@reference-map: [rdx:0, stack:8, stack:16]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 0]
locals: stack:32|QWORD[.] rdx|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK [rdx|QWORD[.]] state [bci:0] <|@ <|@
      nr   60  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   62  <|@ st <@st|@reference-map: [stack:8, stack:16]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48]
locals: stack:32|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stack: stack:32|QWORD[.] 
locals: stack:32|QWORD[.] stack:40|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Object.hashCode()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:48, 3] <|@ <|@
      nr   64  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   66  <|@ instruction rdx|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   68  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:8, stack:16]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 51]
stack: rax|DWORD 
locals: rsi|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] stack:40|QWORD[.] - - - 
>@ <|@ instruction r10|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD state [bci:51, 3] <|@ <|@
      nr   70  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1ea76343 encoding: base: 0 shift: 3 <|@ <|@
      nr   72  <|@ instruction r11|DWORD = SHR rax|DWORD y: 16 size: DWORD <|@ <|@
      nr   74  <|@ instruction r11|DWORD = XOR (x: rax|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   76  <|@ instruction CMP r10|DWORD y: 512 size: DWORD <|@ <|@
      nr   78  <|@ instruction BRANCH trueDestinationProbability: 0.7476633120338436 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4596171327712223541
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   82  <|@ instruction r8|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors 
    xhandlers
    flags 
    probability 4596690698412909547
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  366  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1ea76343 encoding: base: 0 shift: 3 <|@ <|@
      nr  368  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  370  <|@ st <@st|@reference-map: []
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:277) [bci: 56]
locals: - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:56] <|@ <|@
      nr  372  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B21" 
    xhandlers
    flags 
    probability 4595590265099889163
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B3 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B8" "B3" 
    successors "B22" "B60" 
    xhandlers
    flags 
    probability 4598217313573491068
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr  236  <|@ instruction CMP r11|DWORD y: 131072 size: DWORD <|@ <|@
      nr  238  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B21 -> B22 falseDestination: B21 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B58" 
    xhandlers
    flags 
    probability 4598217313573491068
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  242  <|@ instruction rdx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  244  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0, stack:8, stack:16]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 52]
locals: rsi|QWORD[.] - rax|DWORD 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] stack:40|QWORD[.] - - - 
>@ <|@ instruction rcx|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD state [bci:52, 3] <|@ <|@
      nr  246  <|@ instruction rcx|DWORD = SHR rcx|DWORD size: DWORD <|@ <|@
      nr  248  <|@ instruction CMP r11|DWORD y: 131072 size: DWORD <|@ <|@
      nr  250  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B22 -> B23 falseDestination: B22 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B57" 
    xhandlers
    flags 
    probability 4598217313573491068
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  254  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0, stack:8, stack:16]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 64]
stack: r8|DWORD rcx|DWORD 
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] stack:40|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD state [bci:64, 3] <|@ <|@
      nr  256  <|@ instruction r11|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr  258  <|@ instruction r11|DWORD = AND (x: r11|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  260  <|@ instruction r11|DWORD = SHL r11|DWORD size: DWORD <|@ <|@
      nr  262  <|@ instruction CMP (x: rax|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  264  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B56" 
    xhandlers
    flags 
    probability 4598217313573491068
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  268  <|@ instruction r9|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  270  <|@ instruction CMP (x: rax|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  272  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4598217313573491068
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  276  <|@ instruction rax|DWORD = MOVSXB [r9|DWORD + rdx|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  278  <|@ instruction rax|DWORD = MOVZXB rax|DWORD size: DWORD <|@ <|@
      nr  280  <|@ instruction rax|DWORD = SHL rax|DWORD y: 8 size: DWORD <|@ <|@
      nr  282  <|@ instruction rdx|DWORD = MOVZXB [r11|DWORD + rdx|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  284  <|@ instruction rax|DWORD = OR (x: rax|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  286  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  288  <|@ instruction BRANCH trueDestinationProbability: 0.4113665609079093 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4594519514869627790
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  298  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors 
    xhandlers
    flags 
    probability 4592144206127320787
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  292  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  294  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589391659170536246
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  104  <|@ instruction r8|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction r11|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction JUMP ~[] destination: B8 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors 
    xhandlers
    flags 
    probability 4588278604279519704
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  324  <|@ instruction rax|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  326  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4587622502073282859
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  354  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  356  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4585003925708260850
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  114  <|@ instruction CMP r10|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123] <|@ <|@
      nr  116  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B20" 
    xhandlers
    flags 
    probability 4585003925708260850
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  130  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1ea76343 encoding: base: 0 shift: 3 <|@ <|@
      nr  132  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ st <@st|@reference-map: [stack:8, stack:16]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: stack:32|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stack: stack:32|QWORD[.] 
locals: stack:32|QWORD[.] stack:40|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Equivalence.hashCode(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:40, 3] <|@ <|@
      nr  138  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  140  <|@ instruction rdx|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  142  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:8, stack:16]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 43]
stack: rax|DWORD 
locals: rsi|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] stack:40|QWORD[.] - - - 
>@ <|@ instruction rcx|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD state [bci:43, 3] <|@ <|@
      nr  144  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1ea76343 encoding: base: 0 shift: 3 <|@ <|@
      nr  146  <|@ instruction r10|DWORD = SHR rax|DWORD y: 16 size: DWORD <|@ <|@
      nr  148  <|@ instruction r10|DWORD = XOR (x: rax|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  150  <|@ instruction CMP rcx|DWORD y: 512 size: DWORD <|@ <|@
      nr  152  <|@ instruction BRANCH trueDestinationProbability: 0.7476633120338436 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4582899244768309587
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  156  <|@ instruction rcx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  158  <|@ instruction TEST (x: rcx|DWORD[.], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr  160  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4582899244768309587
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  172  <|@ instruction r11|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  174  <|@ instruction rax|DWORD = DEC r11|DWORD size: DWORD <|@ <|@
      nr  176  <|@ instruction rax|DWORD = AND (x: r10|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  178  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1ea76343 encoding: base: 0 shift: 3 <|@ <|@
      nr  180  <|@ instruction r8|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  182  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction rdx|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4579539322436593139
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  388  <|@ instruction CMP r9|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1642007824] <|@ <|@
      nr  390  <|@ instruction BRANCH trueDestinationProbability: 0.7114431340645025 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    probability 4577119570936757357
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  394  <|@ instruction stack:44|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  396  <|@ instruction stack:48|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  398  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  400  <|@ st <@st|@reference-map: [rcx:0, rdx:0, stack:8, stack:16]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 9]
stack: rax|DWORD 
locals: stack:32|QWORD[.] rdx|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK [rdx|QWORD[.]] state [bci:9] <|@ <|@
      nr  402  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  404  <|@ instruction rdx|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  406  <|@ st <@st|@reference-map: [stack:8, stack:16]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:272) [bci: 26]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:48|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:36, 26] <|@ <|@
      nr  408  <|@ instruction JUMP ~[] destination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B40" "B43" 
    successors "B45" "B53" 
    xhandlers
    flags 
    probability 4579533620014694292
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  440  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  442  <|@ instruction BRANCH trueDestinationProbability: 0.17473112367211385 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 4578069373506959897
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  510  <|@ instruction rax|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  512  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B21" 
    xhandlers
    flags 
    probability 4576041993751147810
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  226  <|@ instruction r11|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction r8|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  230  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction JUMP ~[] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4571489525153354508
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  412  <|@ instruction stack:44|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction stack:48|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  416  <|@ instruction CMP r9|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123] <|@ <|@
      nr  418  <|@ instruction BRANCH trueDestinationProbability: 0.0023566146768518636 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4571478120309556813
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  428  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1ea76343 encoding: base: 0 shift: 3 <|@ <|@
      nr  430  <|@ instruction rsi|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  432  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ st <@st|@reference-map: [stack:8, stack:16]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:272) [bci: 26]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:48|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:46, 26] <|@ <|@
      nr  436  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" 
    xhandlers
    flags 
    probability 4568003408557250029
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  446  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B42" 
    successors "B47" "B52" 
    xhandlers
    flags 
    probability 4568026218244845418
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  452  <|@ instruction rax|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  454  <|@ instruction r8|DWORD = INC stack:44|DWORD size: DWORD <|@ <|@
      nr  456  <|@ st <@st|@reference-map: [rax:0, rsi:0, stack:8]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:272) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] stack:40|QWORD[.] stack:48|DWORD - - 
>@ <|@ instruction CMP (x: r8|DWORD, y: [rax|DWORD[.] * 8 + 12]) size: DWORD state [bci:29] <|@ <|@
      nr  458  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B46 -> B47 falseDestination: B46 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4568026218244845418
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  462  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1ea76343 encoding: base: 0 shift: 3 <|@ <|@
      nr  464  <|@ instruction rdx|DWORD[.] = MOV [rax|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  466  <|@ instruction TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr  468  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4567438238672992121
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  478  <|@ instruction CMP [rdx|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr  480  <|@ instruction BRANCH trueDestinationProbability: 0.4480776492636467 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 4563484166113622024
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  494  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  496  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 4562385111977621226
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  484  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1ea76343 encoding: base: 0 shift: 3 <|@ <|@
      nr  486  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  488  <|@ st <@st|@reference-map: []
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:277) [bci: 56]
locals: - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:56] <|@ <|@
      nr  490  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors 
    xhandlers
    flags 
    probability 4553339460219027335
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  472  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  474  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B46" 
    xhandlers
    flags 
    probability 4531956905531768129
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  422  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  424  <|@ instruction JUMP ~[] destination: B42 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  530  <|@ instruction r10|DWORD = MOVE input: int[-131355|0xfffffffffffdfee5] <|@ <|@
      nr  532  <|@ instruction JUMP ~[] destination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" "B56" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  548  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  550  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  552  <|@ st <@st|@reference-map: [rsi:0, stack:8]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 64]
stack: r8|DWORD rcx|DWORD 
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] stack:40|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:64, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  536  <|@ instruction r10|DWORD = MOVE input: int[-128795|0xfffffffffffe08e5] <|@ <|@
      nr  538  <|@ instruction JUMP ~[] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  500  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  502  <|@ instruction MOV [r15|QWORD + 668] y: -142619 size: DWORD <|@ <|@
      nr  504  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  506  <|@ st <@st|@reference-map: [rsi:0, stack:8]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:272) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] stack:40|QWORD[.] r11|DWORD - - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  542  <|@ instruction r10|DWORD = MOVE input: int[-126995|0xfffffffffffe0fed] <|@ <|@
      nr  544  <|@ instruction JUMP ~[] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  120  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ instruction MOV [r15|QWORD + 668] y: -113939 size: DWORD <|@ <|@
      nr  124  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  126  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  218  <|@ instruction MOV [r15|QWORD + 668] y: -124699 size: DWORD <|@ <|@
      nr  220  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  222  <|@ st <@st|@reference-map: [rsi:0, stack:8]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 64]
stack: r8|DWORD r11|DWORD 
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] stack:40|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:64, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  382  <|@ instruction r10|DWORD = MOVE input: int[-138267|0xfffffffffffde3e5] <|@ <|@
      nr  384  <|@ instruction JUMP ~[] destination: B38 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B38" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  522  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  524  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  526  <|@ st <@st|@reference-map: [rsi:0, stack:8]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 9]
stack: rax|DWORD 
locals: rsi|QWORD[.] stack:40|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  164  <|@ instruction MOV [r15|QWORD + 668] y: -118283 size: DWORD <|@ <|@
      nr  166  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  168  <|@ st <@st|@reference-map: [rsi:0, stack:8]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 43]
stack: rax|DWORD 
locals: rsi|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] stack:40|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:43, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  516  <|@ instruction r10|DWORD = MOVE input: int[-134939|0xfffffffffffdf0e5] <|@ <|@
      nr  518  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  556  <|@ instruction MOV [r15|QWORD + 668] y: -121107 size: DWORD <|@ <|@
      nr  558  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  560  <|@ st <@st|@reference-map: [rsi:0, stack:8]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 52]
locals: rsi|QWORD[.] - rax|DWORD 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] stack:40|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:52, 3] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_0       
     2: aload_1       
     3: invokespecial #35         // getHashIndex:(java.lang.Object)int
     6: invokespecial #36         // getHashArray:(int)int
     9: iconst_1      
    10: isub          
    11: istore_2      
    12: iload_2       
    13: iconst_m1     
    14: if_icmpeq     60
    17: aload_0       
    18: iload_2       
    19: invokespecial #3          // getKey:(int)java.lang.Object
    22: astore_3      
    23: aload_0       
    24: aload_1       
    25: aload_3       
    26: invokespecial #30         // compareKeys:(java.lang.Object, java.lang.Object)boolean
    29: ifeq          34
    32: iload_2       
    33: ireturn       
    34: aload_0       
    35: iload_2       
    36: invokespecial #37         // getRawValue:(int)java.lang.Object
    39: astore        4
    41: aload         4
    43: instanceof    #45         // org.graalvm.collections.EconomicMapImpl$CollisionLink
    46: ifeq          60
    49: aload_0       
    50: aload_1       
    51: aload         4
    53: checkcast     #45         // org.graalvm.collections.EconomicMapImpl$CollisionLink
    56: invokespecial #38         // findWithCollision:(java.lang.Object, org.graalvm.collections.EconomicMapImpl$CollisionLink)int
    59: ireturn       
    60: iconst_m1     
    61: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@740d62ed slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   12  <|@ instruction TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr   14  <|@ instruction BRANCH trueDestinationProbability: 0.7064097688878498 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B21" 
    xhandlers
    flags 
    probability 4604537993089144813
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ st <@st|@reference-map: [rdx:0, stack:8, stack:16]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 0]
locals: stack:32|QWORD[.] rdx|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK [rdx|QWORD[.]] state [bci:0] <|@ <|@
      nr   20  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   22  <|@ st <@st|@reference-map: [stack:8, stack:16]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48]
locals: stack:32|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stack: stack:32|QWORD[.] 
locals: stack:32|QWORD[.] stack:40|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Object.hashCode()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:48, 3] <|@ <|@
      nr   24  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   28  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:8, stack:16]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 51]
stack: rax|DWORD 
locals: rsi|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] stack:40|QWORD[.] - - - 
>@ <|@ instruction r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:51, 3] <|@ <|@
      nr   30  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1ea76343 encoding: base: 0 shift: 3 <|@ <|@
      nr   32  <|@ instruction r8|DWORD = SHR rax|DWORD y: 16 size: DWORD <|@ <|@
      nr   34  <|@ instruction r8|DWORD = XOR (x: rax|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   36  <|@ instruction CMP r11|DWORD y: 512 size: DWORD <|@ <|@
      nr   38  <|@ instruction BRANCH trueDestinationProbability: 0.7476633120338436 condition: |<| trueDestination: B1 -> B7 falseDestination: B1 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B1" 
    successors "B15" 
    xhandlers
    flags 
    probability 4604683258742228407
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   90  <|@ instruction rdx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   92  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0, stack:8, stack:16]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 51]
stack: rax|DWORD 
locals: rsi|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] stack:40|QWORD[.] - - - 
>@ <|@ instruction r11|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD state [bci:51, 3] <|@ <|@
      nr   94  <|@ instruction rax|DWORD = DEC r11|DWORD size: DWORD <|@ <|@
      nr   96  <|@ instruction rax|DWORD = AND (x: rax|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   98  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1ea76343 encoding: base: 0 shift: 3 <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B7 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B7" 
    successors "B16" "B19" 
    xhandlers
    flags 
    probability 4604909571972224834
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL numbPhis: 5 align: false label: ? <|@ <|@
      nr  190  <|@ instruction CMP (x: rax|DWORD, y: [rdx|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  192  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B15 -> B16 falseDestination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4604909571972224834
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  196  <|@ instruction rax|DWORD = MOVSXB [rdx|QWORD[.] + rax|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  198  <|@ instruction rdx|DWORD = MOVSXB rax|DWORD size: DWORD <|@ <|@
      nr  200  <|@ instruction TEST rdx|DWORD y: 255 size: DWORD <|@ <|@
      nr  202  <|@ instruction BRANCH trueDestinationProbability: 0.4113665609079093 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B28" 
    xhandlers
    flags 
    probability 4601599749976171549
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  212  <|@ instruction rax|DWORD = MOVZXB rax|DWORD size: DWORD <|@ <|@
      nr  214  <|@ instruction JUMP ~[] destination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B25" "B18" 
    successors "B29" "B54" 
    xhandlers
    flags 
    probability 4603477158219182322
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  302  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:8, stack:16]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 9]
stack: rax|DWORD 
locals: rsi|QWORD[.] stack:40|QWORD[.] - - - 
>@ <|@ instruction rdx|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD state [bci:9] <|@ <|@
      nr  304  <|@ instruction r11|DWORD = DEC rax|DWORD size: DWORD <|@ <|@
      nr  306  <|@ instruction r8|DWORD = SHL r11|DWORD size: DWORD <|@ <|@
      nr  308  <|@ instruction CMP (x: rdx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  310  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B28 -> B29 falseDestination: B28 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4603477158219182322
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  314  <|@ instruction rcx|DWORD[.] = MOV [r10|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  316  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1ea76343 encoding: base: 0 shift: 3 <|@ <|@
      nr  318  <|@ instruction CMP (x: rcx|QWORD[.], y: stack:40|QWORD[.]) size: QWORD <|@ <|@
      nr  320  <|@ instruction BRANCH trueDestinationProbability: 0.09569357247187082 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B39" 
    xhandlers
    flags 
    probability 4602969796766449492
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  330  <|@ instruction r9|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  332  <|@ instruction TEST (x: r9|DWORD[.], y: r9|DWORD[.]) size: DWORD <|@ <|@
      nr  334  <|@ instruction BRANCH trueDestinationProbability: 0.9726719235714489 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B38" 
    xhandlers
    flags 
    probability 4602838770193706684
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  338  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  340  <|@ instruction CMP (x: rdx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  342  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B32 -> B33 falseDestination: B32 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4602838770193706684
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  346  <|@ instruction rdx|DWORD[.] = MOV [r10|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  348  <|@ instruction TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr  350  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4602066011085080403
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  360  <|@ instruction CMP [rdx|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr  362  <|@ instruction BRANCH trueDestinationProbability: 0.4480776492636467 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors 
    xhandlers
    flags 
    probability 4598304672023893341
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  376  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  378  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors 
    xhandlers
    flags 
    probability 4599212194713537126
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  206  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  208  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4598960471339651110
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction CMP r10|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1642007824] <|@ <|@
      nr   52  <|@ instruction BRANCH trueDestinationProbability: 0.8855350555757266 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B8" 
    xhandlers
    flags 
    probability 4598355083255592808
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ st <@st|@reference-map: [rdx:0, stack:8, stack:16]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 0]
locals: stack:32|QWORD[.] rdx|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK [rdx|QWORD[.]] state [bci:0] <|@ <|@
      nr   60  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   62  <|@ st <@st|@reference-map: [stack:8, stack:16]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48]
locals: stack:32|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stack: stack:32|QWORD[.] 
locals: stack:32|QWORD[.] stack:40|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Object.hashCode()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:48, 3] <|@ <|@
      nr   64  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   66  <|@ instruction rdx|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   68  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:8, stack:16]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 51]
stack: rax|DWORD 
locals: rsi|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] stack:40|QWORD[.] - - - 
>@ <|@ instruction r10|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD state [bci:51, 3] <|@ <|@
      nr   70  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1ea76343 encoding: base: 0 shift: 3 <|@ <|@
      nr   72  <|@ instruction r11|DWORD = SHR rax|DWORD y: 16 size: DWORD <|@ <|@
      nr   74  <|@ instruction r11|DWORD = XOR (x: rax|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   76  <|@ instruction CMP r10|DWORD y: 512 size: DWORD <|@ <|@
      nr   82  <|@ instruction r8|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction BRANCH trueDestinationProbability: 0.7476633120338436 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4596171327712223541
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   84  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors 
    xhandlers
    flags 
    probability 4596690698412909547
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  366  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1ea76343 encoding: base: 0 shift: 3 <|@ <|@
      nr  368  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  370  <|@ st <@st|@reference-map: []
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:277) [bci: 56]
locals: - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:56] <|@ <|@
      nr  372  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B8" "B1" 
    successors "B22" "B60" 
    xhandlers
    flags 
    probability 4598217313573491068
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr  236  <|@ instruction CMP r11|DWORD y: 131072 size: DWORD <|@ <|@
      nr  238  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B21 -> B22 falseDestination: B21 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B58" 
    xhandlers
    flags 
    probability 4598217313573491068
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  242  <|@ instruction rdx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  244  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0, stack:8, stack:16]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 52]
locals: rsi|QWORD[.] - rax|DWORD 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] stack:40|QWORD[.] - - - 
>@ <|@ instruction rcx|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD state [bci:52, 3] <|@ <|@
      nr  246  <|@ instruction rcx|DWORD = SHR rcx|DWORD size: DWORD <|@ <|@
      nr  248  <|@ instruction CMP r11|DWORD y: 131072 size: DWORD <|@ <|@
      nr  250  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B22 -> B23 falseDestination: B22 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B57" 
    xhandlers
    flags 
    probability 4598217313573491068
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  254  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0, stack:8, stack:16]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 64]
stack: r8|DWORD rcx|DWORD 
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] stack:40|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD state [bci:64, 3] <|@ <|@
      nr  256  <|@ instruction r11|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr  258  <|@ instruction r11|DWORD = AND (x: r11|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  260  <|@ instruction r11|DWORD = SHL r11|DWORD size: DWORD <|@ <|@
      nr  262  <|@ instruction CMP (x: rax|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  264  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B56" 
    xhandlers
    flags 
    probability 4598217313573491068
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  268  <|@ instruction r9|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  270  <|@ instruction CMP (x: rax|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  272  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B28" 
    xhandlers
    flags 
    probability 4598217313573491068
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  276  <|@ instruction rax|DWORD = MOVSXB [r9|DWORD + rdx|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  278  <|@ instruction rax|DWORD = MOVZXB rax|DWORD size: DWORD <|@ <|@
      nr  280  <|@ instruction rax|DWORD = SHL rax|DWORD y: 8 size: DWORD <|@ <|@
      nr  282  <|@ instruction rdx|DWORD = MOVZXB [r11|DWORD + rdx|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  284  <|@ instruction rax|DWORD = OR (x: rax|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  286  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  288  <|@ instruction BRANCH trueDestinationProbability: 0.4113665609079093 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors 
    xhandlers
    flags 
    probability 4592144206127320787
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  292  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  294  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589391659170536246
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  106  <|@ instruction r11|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction JUMP ~[] destination: B8 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors 
    xhandlers
    flags 
    probability 4588278604279519704
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  324  <|@ instruction rax|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  326  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4587622502073282859
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  354  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  356  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4585003925708260850
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  114  <|@ instruction CMP r10|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123] <|@ <|@
      nr  116  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B20" 
    xhandlers
    flags 
    probability 4585003925708260850
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  130  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1ea76343 encoding: base: 0 shift: 3 <|@ <|@
      nr  132  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ st <@st|@reference-map: [stack:8, stack:16]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: stack:32|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stack: stack:32|QWORD[.] 
locals: stack:32|QWORD[.] stack:40|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Equivalence.hashCode(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:40, 3] <|@ <|@
      nr  138  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  140  <|@ instruction rdx|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  142  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:8, stack:16]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 43]
stack: rax|DWORD 
locals: rsi|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] stack:40|QWORD[.] - - - 
>@ <|@ instruction rcx|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD state [bci:43, 3] <|@ <|@
      nr  144  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1ea76343 encoding: base: 0 shift: 3 <|@ <|@
      nr  146  <|@ instruction r10|DWORD = SHR rax|DWORD y: 16 size: DWORD <|@ <|@
      nr  148  <|@ instruction r10|DWORD = XOR (x: rax|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  150  <|@ instruction CMP rcx|DWORD y: 512 size: DWORD <|@ <|@
      nr  152  <|@ instruction BRANCH trueDestinationProbability: 0.7476633120338436 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4582899244768309587
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  156  <|@ instruction rcx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  158  <|@ instruction TEST (x: rcx|DWORD[.], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr  160  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4582899244768309587
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  172  <|@ instruction r11|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  174  <|@ instruction rax|DWORD = DEC r11|DWORD size: DWORD <|@ <|@
      nr  176  <|@ instruction rax|DWORD = AND (x: r10|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  178  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1ea76343 encoding: base: 0 shift: 3 <|@ <|@
      nr  180  <|@ instruction r8|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  182  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction rdx|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4579539322436593139
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  388  <|@ instruction CMP r9|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1642007824] <|@ <|@
      nr  394  <|@ instruction stack:44|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  396  <|@ instruction stack:48|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  390  <|@ instruction BRANCH trueDestinationProbability: 0.7114431340645025 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    probability 4577119570936757357
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  398  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  400  <|@ st <@st|@reference-map: [rcx:0, rdx:0, stack:8, stack:16]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 9]
stack: rax|DWORD 
locals: stack:32|QWORD[.] rdx|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK [rdx|QWORD[.]] state [bci:9] <|@ <|@
      nr  402  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  404  <|@ instruction rdx|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  406  <|@ st <@st|@reference-map: [stack:8, stack:16]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:272) [bci: 26]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:48|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:36, 26] <|@ <|@
      nr  408  <|@ instruction JUMP ~[] destination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B40" "B43" 
    successors "B46" "B53" 
    xhandlers
    flags 
    probability 4579533620014694292
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  440  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  442  <|@ instruction BRANCH trueDestinationProbability: 0.17473112367211385 condition: = trueDestination: B44 -> B46 falseDestination: B44 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 4578069373506959897
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  510  <|@ instruction rax|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  512  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B21" 
    xhandlers
    flags 
    probability 4576041993751147810
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  226  <|@ instruction r11|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction r8|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  230  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction JUMP ~[] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B46" "B43" 
    xhandlers
    flags 
    probability 4571489525153354508
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  416  <|@ instruction CMP r9|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123] <|@ <|@
      nr  418  <|@ instruction BRANCH trueDestinationProbability: 0.0023566146768518636 condition: = trueDestination: B41 -> B46 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4571478120309556813
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  428  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1ea76343 encoding: base: 0 shift: 3 <|@ <|@
      nr  430  <|@ instruction rsi|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  432  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ st <@st|@reference-map: [stack:8, stack:16]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:272) [bci: 26]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:48|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:46, 26] <|@ <|@
      nr  436  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" "B41" 
    successors "B47" "B52" 
    xhandlers
    flags 
    probability 4568026218244845418
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  446  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  452  <|@ instruction rax|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  454  <|@ instruction r8|DWORD = INC stack:44|DWORD size: DWORD <|@ <|@
      nr  456  <|@ st <@st|@reference-map: [rax:0, rsi:0, stack:8]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:272) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] stack:40|QWORD[.] stack:48|DWORD - - 
>@ <|@ instruction CMP (x: r8|DWORD, y: [rax|DWORD[.] * 8 + 12]) size: DWORD state [bci:29] <|@ <|@
      nr  458  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B46 -> B47 falseDestination: B46 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4568026218244845418
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  462  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1ea76343 encoding: base: 0 shift: 3 <|@ <|@
      nr  464  <|@ instruction rdx|DWORD[.] = MOV [rax|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  466  <|@ instruction TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr  468  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4567438238672992121
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  478  <|@ instruction CMP [rdx|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr  480  <|@ instruction BRANCH trueDestinationProbability: 0.4480776492636467 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 4563484166113622024
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  494  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  496  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 4562385111977621226
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  484  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1ea76343 encoding: base: 0 shift: 3 <|@ <|@
      nr  486  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  488  <|@ st <@st|@reference-map: []
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:277) [bci: 56]
locals: - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:56] <|@ <|@
      nr  490  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors 
    xhandlers
    flags 
    probability 4553339460219027335
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  472  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  474  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  530  <|@ instruction r10|DWORD = MOVE input: int[-131355|0xfffffffffffdfee5] <|@ <|@
      nr  532  <|@ instruction JUMP ~[] destination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" "B56" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  548  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  550  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  552  <|@ st <@st|@reference-map: [rsi:0, stack:8]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 64]
stack: r8|DWORD rcx|DWORD 
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] stack:40|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:64, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  536  <|@ instruction r10|DWORD = MOVE input: int[-128795|0xfffffffffffe08e5] <|@ <|@
      nr  538  <|@ instruction JUMP ~[] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  500  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  502  <|@ instruction MOV [r15|QWORD + 668] y: -142619 size: DWORD <|@ <|@
      nr  504  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  506  <|@ st <@st|@reference-map: [rsi:0, stack:8]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:272) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] stack:40|QWORD[.] r11|DWORD - - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  542  <|@ instruction r10|DWORD = MOVE input: int[-126995|0xfffffffffffe0fed] <|@ <|@
      nr  544  <|@ instruction JUMP ~[] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  122  <|@ instruction MOV [r15|QWORD + 668] y: -113939 size: DWORD <|@ <|@
      nr  124  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  126  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  218  <|@ instruction MOV [r15|QWORD + 668] y: -124699 size: DWORD <|@ <|@
      nr  220  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  222  <|@ st <@st|@reference-map: [rsi:0, stack:8]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 64]
stack: r8|DWORD r11|DWORD 
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] stack:40|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:64, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  382  <|@ instruction r10|DWORD = MOVE input: int[-138267|0xfffffffffffde3e5] <|@ <|@
      nr  384  <|@ instruction JUMP ~[] destination: B38 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B38" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  522  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  524  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  526  <|@ st <@st|@reference-map: [rsi:0, stack:8]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 9]
stack: rax|DWORD 
locals: rsi|QWORD[.] stack:40|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  164  <|@ instruction MOV [r15|QWORD + 668] y: -118283 size: DWORD <|@ <|@
      nr  166  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  168  <|@ st <@st|@reference-map: [rsi:0, stack:8]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 43]
stack: rax|DWORD 
locals: rsi|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] stack:40|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:43, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  516  <|@ instruction r10|DWORD = MOVE input: int[-134939|0xfffffffffffdf0e5] <|@ <|@
      nr  518  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  556  <|@ instruction MOV [r15|QWORD + 668] y: -121107 size: DWORD <|@ <|@
      nr  558  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  560  <|@ st <@st|@reference-map: [rsi:0, stack:8]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 52]
locals: rsi|QWORD[.] - rax|DWORD 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] stack:40|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:52, 3] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_0       
     2: aload_1       
     3: invokespecial #35         // getHashIndex:(java.lang.Object)int
     6: invokespecial #36         // getHashArray:(int)int
     9: iconst_1      
    10: isub          
    11: istore_2      
    12: iload_2       
    13: iconst_m1     
    14: if_icmpeq     60
    17: aload_0       
    18: iload_2       
    19: invokespecial #3          // getKey:(int)java.lang.Object
    22: astore_3      
    23: aload_0       
    24: aload_1       
    25: aload_3       
    26: invokespecial #30         // compareKeys:(java.lang.Object, java.lang.Object)boolean
    29: ifeq          34
    32: iload_2       
    33: ireturn       
    34: aload_0       
    35: iload_2       
    36: invokespecial #37         // getRawValue:(int)java.lang.Object
    39: astore        4
    41: aload         4
    43: instanceof    #45         // org.graalvm.collections.EconomicMapImpl$CollisionLink
    46: ifeq          60
    49: aload_0       
    50: aload_1       
    51: aload         4
    53: checkcast     #45         // org.graalvm.collections.EconomicMapImpl$CollisionLink
    56: invokespecial #38         // findWithCollision:(java.lang.Object, org.graalvm.collections.EconomicMapImpl$CollisionLink)int
    59: ireturn       
    60: iconst_m1     
    61: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec2848896c242048897424104889542408448b56204585d20f850d0100008502488bf248b8ffffffffffffffff90e80000000090488b742410448b5618468b1cd50c00000049c1e203448bc041c1e8104433c04181fb000200000f834f0100008b561c448b1cd50c000000418bc3ffc84123c048c1e2033b420c0f83f50300000fbe4402100fbed0f7c2ff0000000f847f0000000fb6c0418b520c448bd841ffcb458bc341d1e0413bd00f860f040000438b4c821048c1e103483b4c24080f847b010000448b4e204585c90f851902000041ffc0413bd00f86b0030000438b54821085d20f846b010000813cd508000000addeadde0f848f000000b8ffffffff488b6c24204883c428850500000000c5f877c3b8ffffffff488b6c24204883c428850500000000c5f877c34181faaddeadde0f85350100008502488bf248b8ffffffffffffffff0f1f8000000000e80000000090488b7424108b5618448b14d50c00000048c1e203448bd841c1eb104433d84181fa00020000458bc30f83b20000004c8bd2e9d6feffff8bca48c1e103488b54240890e80000000090488b6c24204883c428850500000000c5f877c34181fb000002000f830b0300008b561c8b0cd50c000000d1e94181fb000002000f83800200008b04d50c000000448bd941ffcb4523d841d1e3413bc30f8640020000458bcb41ffc1413bc10f8617020000410fbe44d1100fb6c0c1e008410fb654d3100bc285c00f857bfeffffb8ffffffff488b6c24204883c428850500000000c5f877c3458bda4c8bd2e970ffffff418bc3488b6c24204883c428850500000000c5f877c3b8ffffffff488b6c24204883c428850500000000c5f877c34181faaddeadde0f84e301000049c1e203498bf248b8ffffffffffffffff666690e80000000090488b7424108b56188b0cd50c00000048c1e203448bd041c1ea104433d081f9000200000f83850000008b4e1c85c90f84df010000448b1ccd0c000000418bc3ffc84123c248c1e103458bc24c8bd2488bd1e98dfdffff4181f9addeadde448944240444891c240f8550000000488b5424088502488bf2488bd148b8ffffffffffffffff0f1f8000000000e8000000009085c00f84520000008b0424488b6c24204883c428850500000000c5f877c3448bd9458bc24c8bd2e95ffeffff4181f9addeadde0f842100000049c1e103498bf1488b54240848b8ffffffffffffffff666690e80000000090eba6488b7424108b4618448b44240441ffc0443b04c50c0000000f839d00000048c1e003428b54801085d20f8452000000813cd508000000addeadde0f8418000000b8ffffffff488b6c24204883c428850500000000c5f877c38bca48c1e103488b5424080f1f440000e80000000090488b6c24204883c428850500000000c5f877c3b8ffffffff488b6c24204883c428850500000000c5f877c341bae5fefdff4589979c0200004d89a7a8020000e8000000009041bae508feffebe4448b1c2441c7879c020000e5d2fdff4d89a7a8020000e8000000009041baed0ffeffebc041c7879c020000ed42feff4d89a7a8020000e8000000009041c7879c020000e518feff4d89a7a8020000e8000000009041bae5e3fdff4589979c0200004d89a7a8020000e8000000009041c7879c020000f531feff4d89a7a8020000e8000000009041bae5f0fdffebcc41c7879c020000ed26feff4d89a7a8020000e80000000090e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@740d62ed slotKind: QWORD  <||@
  Comment 48 6 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 58 10 r10|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD  <||@
  Comment 62 12 TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 65 14 BRANCH trueDestinationProbability: 0.7064097688878498 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4  <||@
  Comment 71 block B1 null  <||@
  Comment 71 16 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 71 18 NULLCHECK [rdx|QWORD[.]] state [bci:0]  <||@
  Comment 71 [rdx:0, stack:8, stack:16]at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1             |2  |3  |4 
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-   <||@
  Comment 71 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 73 20 rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 76 22 rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Object.hashCode()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:48, 3]  <||@
  Comment 76 7  <||@
  Comment 87 {HotSpotMethod<Object.hashCode()>}  <||@
  Comment 92 [stack:8, stack:16]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |- 
     stack:   |stack:32|QWORD[.]  |                   |   |   |    <||@
  Comment 93 24 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 98 26 r10|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 102 28 r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:51, 3]  <||@
  Comment 102 [rsi:0, r10:0, stack:8, stack:16]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 51, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |- 
     stack:   |rax|DWORD     |   |  
  at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3, duringCall: true, rethrow: false]
              |0             |1                  |2  |3  |4 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |- 
     stack:   |rsi|QWORD[.]  |                   |   |   |    <||@
  Comment 102 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 110 30 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1ea76343 encoding: base: 0 shift: 3  <||@
  Comment 114 32 r8|DWORD = SHR rax|DWORD y: 16 size: DWORD  <||@
  Comment 121 34 r8|DWORD = XOR (x: rax|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 124 36 CMP r11|DWORD y: 512 size: DWORD  <||@
  Comment 131 38 BRANCH trueDestinationProbability: 0.7476633120338436 condition: |<| trueDestination: B1 -> B7 falseDestination: B1 -> B21  <||@
  Comment 137 block B7 null  <||@
  Comment 137 88 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 137 90 rdx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 140 92 r11|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD state [bci:51, 3]  <||@
  Comment 140 [rdx:0, rsi:0, r10:0, stack:8, stack:16]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 51, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |- 
     stack:   |rax|DWORD     |   |  
  at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3, duringCall: true, rethrow: false]
              |0             |1                  |2  |3  |4 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |- 
     stack:   |rsi|QWORD[.]  |                   |   |   |    <||@
  Comment 140 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 148 94 rax|DWORD = DEC r11|DWORD size: DWORD  <||@
  Comment 153 96 rax|DWORD = AND (x: rax|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 156 98 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1ea76343 encoding: base: 0 shift: 3  <||@
  Comment 160 100 JUMP ~[] destination: B7 -> B15  <||@
  Comment 160 block B15 null  <||@
  Comment 160 188 [] = LABEL numbPhis: 5 align: false label: ?  <||@
  Comment 160 190 CMP (x: rax|DWORD, y: [rdx|QWORD[.] + 12]) size: DWORD  <||@
  Comment 163 192 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B15 -> B16 falseDestination: B15 -> B19  <||@
  Comment 169 block B16 null  <||@
  Comment 169 194 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 169 196 rax|DWORD = MOVSXB [rdx|QWORD[.] + rax|DWORD * 1 + 16] size: DWORD  <||@
  Comment 174 198 rdx|DWORD = MOVSXB rax|DWORD size: DWORD  <||@
  Comment 177 200 TEST rdx|DWORD y: 255 size: DWORD  <||@
  Comment 183 202 BRANCH trueDestinationProbability: 0.4113665609079093 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18  <||@
  Comment 189 block B18 null  <||@
  Comment 189 210 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 189 212 rax|DWORD = MOVZXB rax|DWORD size: DWORD  <||@
  Comment 192 214 JUMP ~[] destination: B18 -> B28  <||@
  Comment 192 block B28 null  <||@
  Comment 192 300 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 192 302 rdx|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD state [bci:9]  <||@
  Comment 192 [rsi:0, r10:0, stack:8, stack:16]at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 9, duringCall: false, rethrow: false]
              |0             |1                  |2  |3  |4 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |- 
     stack:   |rax|DWORD     |                   |   |   |    <||@
  Comment 192 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 196 304 r11|DWORD = DEC rax|DWORD size: DWORD  <||@
  Comment 202 306 r8|DWORD = SHL r11|DWORD size: DWORD  <||@
  Comment 208 308 CMP (x: rdx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 211 310 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B28 -> B29 falseDestination: B28 -> B54  <||@
  Comment 217 block B29 null  <||@
  Comment 217 312 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 217 314 rcx|DWORD[.] = MOV [r10|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD  <||@
  Comment 222 316 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1ea76343 encoding: base: 0 shift: 3  <||@
  Comment 226 318 CMP (x: rcx|QWORD[.], y: stack:40|QWORD[.]) size: QWORD  <||@
  Comment 231 320 BRANCH trueDestinationProbability: 0.09569357247187082 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31  <||@
  Comment 237 block B31 null  <||@
  Comment 237 328 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 237 330 r9|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD  <||@
  Comment 241 332 TEST (x: r9|DWORD[.], y: r9|DWORD[.]) size: DWORD  <||@
  Comment 244 334 BRANCH trueDestinationProbability: 0.9726719235714489 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B39  <||@
  Comment 250 block B32 null  <||@
  Comment 250 336 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 250 338 r8|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 253 340 CMP (x: rdx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 256 342 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B32 -> B33 falseDestination: B32 -> B38  <||@
  Comment 262 block B33 null  <||@
  Comment 262 344 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 262 346 rdx|DWORD[.] = MOV [r10|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD  <||@
  Comment 267 348 TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 269 350 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35  <||@
  Comment 275 block B35 null  <||@
  Comment 275 358 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 275 360 CMP [rdx|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}  <||@
  Comment 275 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}}  <||@
  Comment 286 362 BRANCH trueDestinationProbability: 0.4480776492636467 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37  <||@
  Comment 292 block B37 null  <||@
  Comment 292 374 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 292 376 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 297 378 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 306 12  <||@
  Comment 316 block B17 null  <||@
  Comment 316 204 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 316 206 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 321 208 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 330 12  <||@
  Comment 340 block B4 null  <||@
  Comment 340 48 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 340 50 CMP r10|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1642007824]  <||@
  Comment 340 {NarrowOop[Equivalence$1@1642007824]}  <||@
  Comment 347 52 BRANCH trueDestinationProbability: 0.8855350555757266 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B9  <||@
  Comment 353 block B5 null  <||@
  Comment 353 54 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 353 58 NULLCHECK [rdx|QWORD[.]] state [bci:0]  <||@
  Comment 353 [rdx:0, stack:8, stack:16]at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1             |2  |3  |4 
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-   <||@
  Comment 353 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 355 60 rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 358 62 rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Object.hashCode()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:48, 3]  <||@
  Comment 358 7  <||@
  Comment 375 {HotSpotMethod<Object.hashCode()>}  <||@
  Comment 380 [stack:8, stack:16]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |- 
     stack:   |stack:32|QWORD[.]  |                   |   |   |    <||@
  Comment 381 64 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 386 66 rdx|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 389 68 r10|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD state [bci:51, 3]  <||@
  Comment 389 [rdx:0, rsi:0, stack:8, stack:16]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 51, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |- 
     stack:   |rax|DWORD     |   |  
  at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3, duringCall: true, rethrow: false]
              |0             |1                  |2  |3  |4 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |- 
     stack:   |rsi|QWORD[.]  |                   |   |   |    <||@
  Comment 389 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 397 70 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1ea76343 encoding: base: 0 shift: 3  <||@
  Comment 401 72 r11|DWORD = SHR rax|DWORD y: 16 size: DWORD  <||@
  Comment 408 74 r11|DWORD = XOR (x: rax|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 411 76 CMP r10|DWORD y: 512 size: DWORD  <||@
  Comment 418 82 r8|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 421 78 BRANCH trueDestinationProbability: 0.7476633120338436 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B8  <||@
  Comment 427 block B6 null  <||@
  Comment 427 80 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 427 84 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 430 86 JUMP ~[] destination: B6 -> B7  <||@
  Comment 435 block B36 null  <||@
  Comment 435 364 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 435 366 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1ea76343 encoding: base: 0 shift: 3  <||@
  Comment 441 368 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 446 370 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:56]  <||@
  Comment 446 9  <||@
  Comment 447 {HotSpotMethod<EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)>}  <||@
  Comment 452 []at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:277) [bci: 56, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |-   <||@
  Comment 453 372 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 462 12  <||@
  Comment 472 block B21 null  <||@
  Comment 472 234 [] = LABEL numbPhis: 4 align: false label: ?  <||@
  Comment 472 236 CMP r11|DWORD y: 131072 size: DWORD  <||@
  Comment 479 238 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B21 -> B22 falseDestination: B21 -> B60  <||@
  Comment 485 block B22 null  <||@
  Comment 485 240 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 485 242 rdx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 488 244 rcx|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD state [bci:52, 3]  <||@
  Comment 488 [rdx:0, rsi:0, r10:0, stack:8, stack:16]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 52, duringCall: false, rethrow: false]
              |0             |1  |2         
     locals:  |rsi|QWORD[.]  |-  |rax|DWORD 
  at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3, duringCall: true, rethrow: false]
              |0             |1                  |2  |3  |4 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |- 
     stack:   |rsi|QWORD[.]  |                   |   |   |    <||@
  Comment 488 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 495 246 rcx|DWORD = SHR rcx|DWORD size: DWORD  <||@
  Comment 497 248 CMP r11|DWORD y: 131072 size: DWORD  <||@
  Comment 504 250 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B22 -> B23 falseDestination: B22 -> B58  <||@
  Comment 510 block B23 null  <||@
  Comment 510 252 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 510 254 rax|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD state [bci:64, 3]  <||@
  Comment 510 [rdx:0, rsi:0, r10:0, stack:8, stack:16]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 64, duringCall: false, rethrow: false]
              |0         |1          |2 
     locals:  |-         |-          |- 
     stack:   |r8|DWORD  |rcx|DWORD  |  
  at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3, duringCall: true, rethrow: false]
              |0             |1                  |2  |3  |4 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |- 
     stack:   |rsi|QWORD[.]  |                   |   |   |    <||@
  Comment 510 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 517 256 r11|DWORD = DEC rcx|DWORD size: DWORD  <||@
  Comment 523 258 r11|DWORD = AND (x: r11|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 526 260 r11|DWORD = SHL r11|DWORD size: DWORD  <||@
  Comment 529 262 CMP (x: rax|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 532 264 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B57  <||@
  Comment 538 block B24 null  <||@
  Comment 538 266 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 538 268 r9|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 544 270 CMP (x: rax|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 547 272 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B56  <||@
  Comment 553 block B25 null  <||@
  Comment 553 274 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 553 276 rax|DWORD = MOVSXB [r9|DWORD + rdx|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 559 278 rax|DWORD = MOVZXB rax|DWORD size: DWORD  <||@
  Comment 562 280 rax|DWORD = SHL rax|DWORD y: 8 size: DWORD  <||@
  Comment 565 282 rdx|DWORD = MOVZXB [r11|DWORD + rdx|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 571 284 rax|DWORD = OR (x: rax|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 573 286 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 575 288 BRANCH trueDestinationProbability: 0.4113665609079093 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B28  <||@
  Comment 581 block B26 null  <||@
  Comment 581 290 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 581 292 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 586 294 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 595 12  <||@
  Comment 605 block B8 null  <||@
  Comment 605 102 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 605 106 r11|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 608 108 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 611 110 JUMP ~[] destination: B8 -> B21  <||@
  Comment 616 block B30 null  <||@
  Comment 616 322 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 616 324 rax|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 619 326 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 628 12  <||@
  Comment 638 block B34 null  <||@
  Comment 638 352 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 638 354 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 643 356 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 652 12  <||@
  Comment 662 block B9 null  <||@
  Comment 662 112 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 662 114 CMP r10|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123]  <||@
  Comment 662 {NarrowOop[Equivalence$3@1213634123]}  <||@
  Comment 669 116 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11  <||@
  Comment 675 block B11 null  <||@
  Comment 675 128 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 675 130 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1ea76343 encoding: base: 0 shift: 3  <||@
  Comment 679 132 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 682 136 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Equivalence.hashCode(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:40, 3]  <||@
  Comment 682 7  <||@
  Comment 695 {HotSpotMethod<Equivalence.hashCode(Object)>}  <||@
  Comment 700 [stack:8, stack:16]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |- 
     stack:   |stack:32|QWORD[.]  |                   |   |   |    <||@
  Comment 701 138 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 706 140 rdx|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 709 142 rcx|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD state [bci:43, 3]  <||@
  Comment 709 [rdx:0, rsi:0, stack:8, stack:16]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 43, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |- 
     stack:   |rax|DWORD     |   |  
  at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3, duringCall: true, rethrow: false]
              |0             |1                  |2  |3  |4 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |- 
     stack:   |rsi|QWORD[.]  |                   |   |   |    <||@
  Comment 709 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 716 144 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1ea76343 encoding: base: 0 shift: 3  <||@
  Comment 720 146 r10|DWORD = SHR rax|DWORD y: 16 size: DWORD  <||@
  Comment 727 148 r10|DWORD = XOR (x: rax|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 730 150 CMP rcx|DWORD y: 512 size: DWORD  <||@
  Comment 736 152 BRANCH trueDestinationProbability: 0.7476633120338436 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B20  <||@
  Comment 742 block B12 null  <||@
  Comment 742 154 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 742 156 rcx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 745 158 TEST (x: rcx|DWORD[.], y: rcx|DWORD[.]) size: DWORD  <||@
  Comment 747 160 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14  <||@
  Comment 753 block B14 null  <||@
  Comment 753 170 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 753 172 r11|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 761 174 rax|DWORD = DEC r11|DWORD size: DWORD  <||@
  Comment 766 176 rax|DWORD = AND (x: r10|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 769 178 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1ea76343 encoding: base: 0 shift: 3  <||@
  Comment 773 180 r8|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 776 182 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 779 184 rdx|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 782 186 JUMP ~[] destination: B14 -> B15  <||@
  Comment 787 block B39 null  <||@
  Comment 787 386 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 787 388 CMP r9|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1642007824]  <||@
  Comment 787 {NarrowOop[Equivalence$1@1642007824]}  <||@
  Comment 794 394 stack:44|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 799 396 stack:48|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 803 390 BRANCH trueDestinationProbability: 0.7114431340645025 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41  <||@
  Comment 809 block B40 null  <||@
  Comment 809 392 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 809 398 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 814 400 NULLCHECK [rdx|QWORD[.]] state [bci:9]  <||@
  Comment 814 [rcx:0, rdx:0, stack:8, stack:16]at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 9, duringCall: false, rethrow: false]
              |0                  |1             |2  |3  |4 
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |-  |-  |- 
     stack:   |rax|DWORD          |              |   |   |    <||@
  Comment 814 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 816 402 rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 819 404 rdx|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 822 406 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:36, 26]  <||@
  Comment 822 7  <||@
  Comment 839 {HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 844 [stack:8, stack:16]at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:272) [bci: 26, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3  |4 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:48|DWORD  |-  |-   <||@
  Comment 845 408 JUMP ~[] destination: B40 -> B44  <||@
  Comment 845 block B44 null  <||@
  Comment 845 438 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 845 440 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 847 442 BRANCH trueDestinationProbability: 0.17473112367211385 condition: = trueDestination: B44 -> B46 falseDestination: B44 -> B53  <||@
  Comment 853 block B53 null  <||@
  Comment 853 508 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 853 510 rax|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 856 512 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 865 12  <||@
  Comment 875 block B20 null  <||@
  Comment 875 224 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 875 226 r11|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 878 228 r8|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 881 230 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 884 232 JUMP ~[] destination: B20 -> B21  <||@
  Comment 889 block B41 null  <||@
  Comment 889 410 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 889 416 CMP r9|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123]  <||@
  Comment 889 {NarrowOop[Equivalence$3@1213634123]}  <||@
  Comment 896 418 BRANCH trueDestinationProbability: 0.0023566146768518636 condition: = trueDestination: B41 -> B46 falseDestination: B41 -> B43  <||@
  Comment 902 block B43 null  <||@
  Comment 902 426 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 902 428 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1ea76343 encoding: base: 0 shift: 3  <||@
  Comment 906 430 rsi|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 909 432 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 914 434 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:46, 26]  <||@
  Comment 914 7  <||@
  Comment 927 {HotSpotMethod<Equivalence.equals(Object, Object)>}  <||@
  Comment 932 [stack:8, stack:16]at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:272) [bci: 26, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3  |4 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:48|DWORD  |-  |-   <||@
  Comment 933 436 JUMP ~[] destination: B43 -> B44  <||@
  Comment 935 block B46 null  <||@
  Comment 935 450 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 935 446 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 940 452 rax|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 943 454 r8|DWORD = INC stack:44|DWORD size: DWORD  <||@
  Comment 951 456 CMP (x: r8|DWORD, y: [rax|DWORD[.] * 8 + 12]) size: DWORD state [bci:29]  <||@
  Comment 951 [rax:0, rsi:0, stack:8]at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:272) [bci: 29, duringCall: false, rethrow: false]
              |0             |1                  |2               |3  |4 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]  |stack:48|DWORD  |-  |- 
     stack:   |int[0|0x0]    |                   |                |   |    <||@
  Comment 951 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 959 458 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B46 -> B47 falseDestination: B46 -> B52  <||@
  Comment 965 block B47 null  <||@
  Comment 965 460 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 965 462 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1ea76343 encoding: base: 0 shift: 3  <||@
  Comment 969 464 rdx|DWORD[.] = MOV [rax|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD  <||@
  Comment 974 466 TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 976 468 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49  <||@
  Comment 982 block B49 null  <||@
  Comment 982 476 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 982 478 CMP [rdx|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}  <||@
  Comment 982 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}}  <||@
  Comment 993 480 BRANCH trueDestinationProbability: 0.4480776492636467 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51  <||@
  Comment 999 block B51 null  <||@
  Comment 999 492 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 999 494 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 1004 496 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1013 12  <||@
  Comment 1023 block B50 null  <||@
  Comment 1023 482 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1023 484 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1ea76343 encoding: base: 0 shift: 3  <||@
  Comment 1029 486 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1034 488 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:56]  <||@
  Comment 1034 9  <||@
  Comment 1039 {HotSpotMethod<EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)>}  <||@
  Comment 1044 []at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:277) [bci: 56, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |-   <||@
  Comment 1045 490 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1054 12  <||@
  Comment 1064 block B48 null  <||@
  Comment 1064 470 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1064 472 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 1069 474 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1078 12  <||@
  Comment 1088 block B56 null  <||@
  Comment 1088 528 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1088 530 r10|DWORD = MOVE input: int[-131355|0xfffffffffffdfee5]  <||@
  Comment 1094 532 JUMP ~[] destination: B56 -> B59  <||@
  Comment 1094 block B59 null  <||@
  Comment 1094 546 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1094 548 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1101 550 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1108 552 DEOPT info [bci:64, 3]  <||@
  Comment 1108 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1113 [rsi:0, stack:8]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 64, duringCall: false, rethrow: false]
              |0         |1          |2 
     locals:  |-         |-          |- 
     stack:   |r8|DWORD  |rcx|DWORD  |  
  at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3, duringCall: true, rethrow: false]
              |0             |1                  |2  |3  |4 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |- 
     stack:   |rsi|QWORD[.]  |                   |   |   |    <||@
  Comment 1114 block B57 null  <||@
  Comment 1114 534 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1114 536 r10|DWORD = MOVE input: int[-128795|0xfffffffffffe08e5]  <||@
  Comment 1120 538 JUMP ~[] destination: B57 -> B59  <||@
  Comment 1122 block B52 null  <||@
  Comment 1122 498 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1122 500 r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 1126 502 MOV [r15|QWORD + 668] y: -142619 size: DWORD  <||@
  Comment 1137 504 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1144 506 DEOPT info [bci:29]  <||@
  Comment 1144 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1149 [rsi:0, stack:8]at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:272) [bci: 29, duringCall: false, rethrow: false]
              |0             |1                  |2          |3  |4 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]  |r11|DWORD  |-  |- 
     stack:   |int[0|0x0]    |                   |           |   |    <||@
  Comment 1150 block B58 null  <||@
  Comment 1150 540 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1150 542 r10|DWORD = MOVE input: int[-126995|0xfffffffffffe0fed]  <||@
  Comment 1156 544 JUMP ~[] destination: B58 -> B59  <||@
  Comment 1158 block B10 null  <||@
  Comment 1158 118 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1158 122 MOV [r15|QWORD + 668] y: -113939 size: DWORD  <||@
  Comment 1169 124 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1176 126 DEOPT info [bci:0]  <||@
  Comment 1176 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1181 [rdx:0, rsi:0]at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-   <||@
  Comment 1182 block B19 null  <||@
  Comment 1182 216 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1182 218 MOV [r15|QWORD + 668] y: -124699 size: DWORD  <||@
  Comment 1193 220 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1200 222 DEOPT info [bci:64, 3]  <||@
  Comment 1200 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1205 [rsi:0, stack:8]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 64, duringCall: false, rethrow: false]
              |0         |1          |2 
     locals:  |-         |-          |- 
     stack:   |r8|DWORD  |r11|DWORD  |  
  at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3, duringCall: true, rethrow: false]
              |0             |1                  |2  |3  |4 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |- 
     stack:   |rsi|QWORD[.]  |                   |   |   |    <||@
  Comment 1206 block B38 null  <||@
  Comment 1206 380 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1206 382 r10|DWORD = MOVE input: int[-138267|0xfffffffffffde3e5]  <||@
  Comment 1212 384 JUMP ~[] destination: B38 -> B55  <||@
  Comment 1212 block B55 null  <||@
  Comment 1212 520 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1212 522 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1219 524 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1226 526 DEOPT info [bci:9]  <||@
  Comment 1226 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1231 [rsi:0, stack:8]at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 9, duringCall: false, rethrow: false]
              |0             |1                  |2  |3  |4 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |- 
     stack:   |rax|DWORD     |                   |   |   |    <||@
  Comment 1232 block B13 null  <||@
  Comment 1232 162 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1232 164 MOV [r15|QWORD + 668] y: -118283 size: DWORD  <||@
  Comment 1243 166 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1250 168 DEOPT info [bci:43, 3]  <||@
  Comment 1250 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1255 [rsi:0, stack:8]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 43, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |- 
     stack:   |rax|DWORD     |   |  
  at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3, duringCall: true, rethrow: false]
              |0             |1                  |2  |3  |4 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |- 
     stack:   |rsi|QWORD[.]  |                   |   |   |    <||@
  Comment 1256 block B54 null  <||@
  Comment 1256 514 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1256 516 r10|DWORD = MOVE input: int[-134939|0xfffffffffffdf0e5]  <||@
  Comment 1262 518 JUMP ~[] destination: B54 -> B55  <||@
  Comment 1264 block B60 null  <||@
  Comment 1264 554 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1264 556 MOV [r15|QWORD + 668] y: -121107 size: DWORD  <||@
  Comment 1275 558 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1282 560 DEOPT info [bci:52, 3]  <||@
  Comment 1282 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1287 [rsi:0, stack:8]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 52, duringCall: false, rethrow: false]
              |0             |1  |2         
     locals:  |rsi|QWORD[.]  |-  |rax|DWORD 
  at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3, duringCall: true, rethrow: false]
              |0             |1                  |2  |3  |4 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |- 
     stack:   |rsi|QWORD[.]  |                   |   |   |    <||@
  Comment 1288 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1288 4  <||@
  Comment 1294 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 1294 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-5573[org.graalvm.collections.EconomicMapImpl.findHash(Object)]"
  method "HotSpotCompilation-5573[org.graalvm.collections.EconomicMapImpl.findHash(Object)]"
  date 1527005149053
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 1078d0400 448b560849c1e203493bc20f854f5af3fe900f1f80000000000f1f800000000089842400c0feff4883ec2848896c242048897424104889542408448b56204585d20f850d0100008502488bf248b8ffffffffffffffff90e8845ef3fe90488b742410448b5618468b1cd50c00000049c1e203448bc041c1e8104433c04181fb000200000f834f0100008b561c448b1cd50c000000418bc3ffc84123c048c1e2033b420c0f83f50300000fbe4402100fbed0f7c2ff0000000f847f0000000fb6c0418b520c448bd841ffcb458bc341d1e0413bd00f860f040000438b4c821048c1e103483b4c24080f847b010000448b4e204585c90f851902000041ffc0413bd00f86b0030000438b54821085d20f846b010000813cd508000000bc3e01f80f848f000000b8ffffffff488b6c24204883c4288505ceeafbfcc5f877c3b8ffffffff488b6c24204883c4288505b6eafbfcc5f877c34181fa750300d80f85350100008502488bf248b8ffffffffffffffff0f1f8000000000e8645df3fe90488b7424108b5618448b14d50c00000048c1e203448bd841c1eb104433d84181fa00020000458bc30f83b20000004c8bd2e9d6feffff8bca48c1e103488b54240890e8dc5af3fe90488b6c24204883c428850532eafbfcc5f877c34181fb000002000f830b0300008b561c8b0cd50c000000d1e94181fb000002000f83800200008b04d50c000000448bd941ffcb4523d841d1e3413bc30f8640020000458bcb41ffc1413bc10f8617020000410fbe44d1100fb6c0c1e008410fb654d3100bc285c00f857bfeffffb8ffffffff488b6c24204883c4288505ade9fbfcc5f877c3458bda4c8bd2e970ffffff418bc3488b6c24204883c42885058ce9fbfcc5f877c3b8ffffffff488b6c24204883c428850574e9fbfcc5f877c34181fa770300d80f84e301000049c1e203498bf248b8ffffffffffffffff666690e8245cf3fe90488b7424108b56188b0cd50c00000048c1e203448bd041c1ea104433d081f9000200000f83850000008b4e1c85c90f84df010000448b1ccd0c000000418bc3ffc84123c248c1e103458bc24c8bd2488bd1e98dfdffff4181f9750300d8448944240444891c240f8550000000488b5424088502488bf2488bd148b8ffffffffffffffff0f1f8000000000e8945bf3fe9085c00f84520000008b0424488b6c24204883c42885059fe8fbfcc5f877c3448bd9458bc24c8bd2e95ffeffff4181f9770300d80f842100000049c1e103498bf1488b54240848b8ffffffffffffffff666690e83c5bf3fe90eba6488b7424108b4618448b44240441ffc0443b04c50c0000000f839d00000048c1e003428b54801085d20f8452000000813cd508000000bc3e01f80f8418000000b8ffffffff488b6c24204883c42885050be8fbfcc5f877c38bca48c1e103488b5424080f1f440000e88c58f3fe90488b6c24204883c4288505e2e7fbfcc5f877c3b8ffffffff488b6c24204883c4288505cae7fbfcc5f877c341bae5fefdff4589979c0200004d89a7a8020000e8a56df3fe9041bae508feffebe4448b1c2441c7879c020000e5d2fdff4d89a7a8020000e8816df3fe9041baed0ffeffebc041c7879c020000ed42feff4d89a7a8020000e8616df3fe9041c7879c020000e518feff4d89a7a8020000e8496df3fe9041bae5e3fdff4589979c0200004d89a7a8020000e82f6df3fe9041c7879c020000f531feff4d89a7a8020000e8176df3fe9041bae5f0fdffebcc41c7879c020000ed26feff4d89a7a8020000e8f76cf3fe90e8139d37ff90e8ed6bf3fe90f4f4f4f4f4f4f4f4f4f4f4f448bb0000000000000000e9fbffffff48bb0000000000000000e9fbfffffff4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@740d62ed slotKind: QWORD  <||@
  Comment 48 6 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 58 10 r10|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD  <||@
  Comment 62 12 TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 65 14 BRANCH trueDestinationProbability: 0.7064097688878498 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4  <||@
  Comment 71 block B1 null  <||@
  Comment 71 16 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 71 18 NULLCHECK [rdx|QWORD[.]] state [bci:0]  <||@
  Comment 71 [rdx:0, stack:8, stack:16]at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1             |2  |3  |4 
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-   <||@
  Comment 71 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 73 20 rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 76 22 rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Object.hashCode()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:48, 3]  <||@
  Comment 76 7  <||@
  Comment 87 {HotSpotMethod<Object.hashCode()>}  <||@
  Comment 92 [stack:8, stack:16]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |- 
     stack:   |stack:32|QWORD[.]  |                   |   |   |    <||@
  Comment 93 24 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 98 26 r10|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 102 28 r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:51, 3]  <||@
  Comment 102 [rsi:0, r10:0, stack:8, stack:16]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 51, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |- 
     stack:   |rax|DWORD     |   |  
  at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3, duringCall: true, rethrow: false]
              |0             |1                  |2  |3  |4 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |- 
     stack:   |rsi|QWORD[.]  |                   |   |   |    <||@
  Comment 102 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 110 30 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1ea76343 encoding: base: 0 shift: 3  <||@
  Comment 114 32 r8|DWORD = SHR rax|DWORD y: 16 size: DWORD  <||@
  Comment 121 34 r8|DWORD = XOR (x: rax|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 124 36 CMP r11|DWORD y: 512 size: DWORD  <||@
  Comment 131 38 BRANCH trueDestinationProbability: 0.7476633120338436 condition: |<| trueDestination: B1 -> B7 falseDestination: B1 -> B21  <||@
  Comment 137 block B7 null  <||@
  Comment 137 88 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 137 90 rdx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 140 92 r11|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD state [bci:51, 3]  <||@
  Comment 140 [rdx:0, rsi:0, r10:0, stack:8, stack:16]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 51, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |- 
     stack:   |rax|DWORD     |   |  
  at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3, duringCall: true, rethrow: false]
              |0             |1                  |2  |3  |4 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |- 
     stack:   |rsi|QWORD[.]  |                   |   |   |    <||@
  Comment 140 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 148 94 rax|DWORD = DEC r11|DWORD size: DWORD  <||@
  Comment 153 96 rax|DWORD = AND (x: rax|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 156 98 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1ea76343 encoding: base: 0 shift: 3  <||@
  Comment 160 100 JUMP ~[] destination: B7 -> B15  <||@
  Comment 160 block B15 null  <||@
  Comment 160 188 [] = LABEL numbPhis: 5 align: false label: ?  <||@
  Comment 160 190 CMP (x: rax|DWORD, y: [rdx|QWORD[.] + 12]) size: DWORD  <||@
  Comment 163 192 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B15 -> B16 falseDestination: B15 -> B19  <||@
  Comment 169 block B16 null  <||@
  Comment 169 194 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 169 196 rax|DWORD = MOVSXB [rdx|QWORD[.] + rax|DWORD * 1 + 16] size: DWORD  <||@
  Comment 174 198 rdx|DWORD = MOVSXB rax|DWORD size: DWORD  <||@
  Comment 177 200 TEST rdx|DWORD y: 255 size: DWORD  <||@
  Comment 183 202 BRANCH trueDestinationProbability: 0.4113665609079093 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18  <||@
  Comment 189 block B18 null  <||@
  Comment 189 210 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 189 212 rax|DWORD = MOVZXB rax|DWORD size: DWORD  <||@
  Comment 192 214 JUMP ~[] destination: B18 -> B28  <||@
  Comment 192 block B28 null  <||@
  Comment 192 300 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 192 302 rdx|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD state [bci:9]  <||@
  Comment 192 [rsi:0, r10:0, stack:8, stack:16]at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 9, duringCall: false, rethrow: false]
              |0             |1                  |2  |3  |4 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |- 
     stack:   |rax|DWORD     |                   |   |   |    <||@
  Comment 192 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 196 304 r11|DWORD = DEC rax|DWORD size: DWORD  <||@
  Comment 202 306 r8|DWORD = SHL r11|DWORD size: DWORD  <||@
  Comment 208 308 CMP (x: rdx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 211 310 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B28 -> B29 falseDestination: B28 -> B54  <||@
  Comment 217 block B29 null  <||@
  Comment 217 312 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 217 314 rcx|DWORD[.] = MOV [r10|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD  <||@
  Comment 222 316 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1ea76343 encoding: base: 0 shift: 3  <||@
  Comment 226 318 CMP (x: rcx|QWORD[.], y: stack:40|QWORD[.]) size: QWORD  <||@
  Comment 231 320 BRANCH trueDestinationProbability: 0.09569357247187082 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31  <||@
  Comment 237 block B31 null  <||@
  Comment 237 328 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 237 330 r9|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD  <||@
  Comment 241 332 TEST (x: r9|DWORD[.], y: r9|DWORD[.]) size: DWORD  <||@
  Comment 244 334 BRANCH trueDestinationProbability: 0.9726719235714489 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B39  <||@
  Comment 250 block B32 null  <||@
  Comment 250 336 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 250 338 r8|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 253 340 CMP (x: rdx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 256 342 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B32 -> B33 falseDestination: B32 -> B38  <||@
  Comment 262 block B33 null  <||@
  Comment 262 344 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 262 346 rdx|DWORD[.] = MOV [r10|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD  <||@
  Comment 267 348 TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 269 350 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35  <||@
  Comment 275 block B35 null  <||@
  Comment 275 358 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 275 360 CMP [rdx|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}  <||@
  Comment 275 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}}  <||@
  Comment 286 362 BRANCH trueDestinationProbability: 0.4480776492636467 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37  <||@
  Comment 292 block B37 null  <||@
  Comment 292 374 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 292 376 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 297 378 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 306 12  <||@
  Comment 316 block B17 null  <||@
  Comment 316 204 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 316 206 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 321 208 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 330 12  <||@
  Comment 340 block B4 null  <||@
  Comment 340 48 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 340 50 CMP r10|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1642007824]  <||@
  Comment 340 {NarrowOop[Equivalence$1@1642007824]}  <||@
  Comment 347 52 BRANCH trueDestinationProbability: 0.8855350555757266 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B9  <||@
  Comment 353 block B5 null  <||@
  Comment 353 54 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 353 58 NULLCHECK [rdx|QWORD[.]] state [bci:0]  <||@
  Comment 353 [rdx:0, stack:8, stack:16]at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1             |2  |3  |4 
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-   <||@
  Comment 353 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 355 60 rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 358 62 rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Object.hashCode()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:48, 3]  <||@
  Comment 358 7  <||@
  Comment 375 {HotSpotMethod<Object.hashCode()>}  <||@
  Comment 380 [stack:8, stack:16]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |- 
     stack:   |stack:32|QWORD[.]  |                   |   |   |    <||@
  Comment 381 64 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 386 66 rdx|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 389 68 r10|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD state [bci:51, 3]  <||@
  Comment 389 [rdx:0, rsi:0, stack:8, stack:16]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 51, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |- 
     stack:   |rax|DWORD     |   |  
  at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3, duringCall: true, rethrow: false]
              |0             |1                  |2  |3  |4 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |- 
     stack:   |rsi|QWORD[.]  |                   |   |   |    <||@
  Comment 389 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 397 70 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1ea76343 encoding: base: 0 shift: 3  <||@
  Comment 401 72 r11|DWORD = SHR rax|DWORD y: 16 size: DWORD  <||@
  Comment 408 74 r11|DWORD = XOR (x: rax|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 411 76 CMP r10|DWORD y: 512 size: DWORD  <||@
  Comment 418 82 r8|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 421 78 BRANCH trueDestinationProbability: 0.7476633120338436 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B8  <||@
  Comment 427 block B6 null  <||@
  Comment 427 80 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 427 84 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 430 86 JUMP ~[] destination: B6 -> B7  <||@
  Comment 435 block B36 null  <||@
  Comment 435 364 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 435 366 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1ea76343 encoding: base: 0 shift: 3  <||@
  Comment 441 368 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 446 370 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:56]  <||@
  Comment 446 9  <||@
  Comment 447 {HotSpotMethod<EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)>}  <||@
  Comment 452 []at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:277) [bci: 56, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |-   <||@
  Comment 453 372 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 462 12  <||@
  Comment 472 block B21 null  <||@
  Comment 472 234 [] = LABEL numbPhis: 4 align: false label: ?  <||@
  Comment 472 236 CMP r11|DWORD y: 131072 size: DWORD  <||@
  Comment 479 238 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B21 -> B22 falseDestination: B21 -> B60  <||@
  Comment 485 block B22 null  <||@
  Comment 485 240 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 485 242 rdx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 488 244 rcx|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD state [bci:52, 3]  <||@
  Comment 488 [rdx:0, rsi:0, r10:0, stack:8, stack:16]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 52, duringCall: false, rethrow: false]
              |0             |1  |2         
     locals:  |rsi|QWORD[.]  |-  |rax|DWORD 
  at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3, duringCall: true, rethrow: false]
              |0             |1                  |2  |3  |4 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |- 
     stack:   |rsi|QWORD[.]  |                   |   |   |    <||@
  Comment 488 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 495 246 rcx|DWORD = SHR rcx|DWORD size: DWORD  <||@
  Comment 497 248 CMP r11|DWORD y: 131072 size: DWORD  <||@
  Comment 504 250 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B22 -> B23 falseDestination: B22 -> B58  <||@
  Comment 510 block B23 null  <||@
  Comment 510 252 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 510 254 rax|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD state [bci:64, 3]  <||@
  Comment 510 [rdx:0, rsi:0, r10:0, stack:8, stack:16]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 64, duringCall: false, rethrow: false]
              |0         |1          |2 
     locals:  |-         |-          |- 
     stack:   |r8|DWORD  |rcx|DWORD  |  
  at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3, duringCall: true, rethrow: false]
              |0             |1                  |2  |3  |4 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |- 
     stack:   |rsi|QWORD[.]  |                   |   |   |    <||@
  Comment 510 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 517 256 r11|DWORD = DEC rcx|DWORD size: DWORD  <||@
  Comment 523 258 r11|DWORD = AND (x: r11|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 526 260 r11|DWORD = SHL r11|DWORD size: DWORD  <||@
  Comment 529 262 CMP (x: rax|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 532 264 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B57  <||@
  Comment 538 block B24 null  <||@
  Comment 538 266 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 538 268 r9|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 544 270 CMP (x: rax|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 547 272 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B56  <||@
  Comment 553 block B25 null  <||@
  Comment 553 274 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 553 276 rax|DWORD = MOVSXB [r9|DWORD + rdx|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 559 278 rax|DWORD = MOVZXB rax|DWORD size: DWORD  <||@
  Comment 562 280 rax|DWORD = SHL rax|DWORD y: 8 size: DWORD  <||@
  Comment 565 282 rdx|DWORD = MOVZXB [r11|DWORD + rdx|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 571 284 rax|DWORD = OR (x: rax|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 573 286 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 575 288 BRANCH trueDestinationProbability: 0.4113665609079093 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B28  <||@
  Comment 581 block B26 null  <||@
  Comment 581 290 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 581 292 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 586 294 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 595 12  <||@
  Comment 605 block B8 null  <||@
  Comment 605 102 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 605 106 r11|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 608 108 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 611 110 JUMP ~[] destination: B8 -> B21  <||@
  Comment 616 block B30 null  <||@
  Comment 616 322 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 616 324 rax|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 619 326 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 628 12  <||@
  Comment 638 block B34 null  <||@
  Comment 638 352 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 638 354 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 643 356 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 652 12  <||@
  Comment 662 block B9 null  <||@
  Comment 662 112 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 662 114 CMP r10|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123]  <||@
  Comment 662 {NarrowOop[Equivalence$3@1213634123]}  <||@
  Comment 669 116 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11  <||@
  Comment 675 block B11 null  <||@
  Comment 675 128 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 675 130 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1ea76343 encoding: base: 0 shift: 3  <||@
  Comment 679 132 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 682 136 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Equivalence.hashCode(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:40, 3]  <||@
  Comment 682 7  <||@
  Comment 695 {HotSpotMethod<Equivalence.hashCode(Object)>}  <||@
  Comment 700 [stack:8, stack:16]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |- 
     stack:   |stack:32|QWORD[.]  |                   |   |   |    <||@
  Comment 701 138 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 706 140 rdx|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 709 142 rcx|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD state [bci:43, 3]  <||@
  Comment 709 [rdx:0, rsi:0, stack:8, stack:16]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 43, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |- 
     stack:   |rax|DWORD     |   |  
  at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3, duringCall: true, rethrow: false]
              |0             |1                  |2  |3  |4 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |- 
     stack:   |rsi|QWORD[.]  |                   |   |   |    <||@
  Comment 709 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 716 144 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1ea76343 encoding: base: 0 shift: 3  <||@
  Comment 720 146 r10|DWORD = SHR rax|DWORD y: 16 size: DWORD  <||@
  Comment 727 148 r10|DWORD = XOR (x: rax|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 730 150 CMP rcx|DWORD y: 512 size: DWORD  <||@
  Comment 736 152 BRANCH trueDestinationProbability: 0.7476633120338436 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B20  <||@
  Comment 742 block B12 null  <||@
  Comment 742 154 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 742 156 rcx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 745 158 TEST (x: rcx|DWORD[.], y: rcx|DWORD[.]) size: DWORD  <||@
  Comment 747 160 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14  <||@
  Comment 753 block B14 null  <||@
  Comment 753 170 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 753 172 r11|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 761 174 rax|DWORD = DEC r11|DWORD size: DWORD  <||@
  Comment 766 176 rax|DWORD = AND (x: r10|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 769 178 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1ea76343 encoding: base: 0 shift: 3  <||@
  Comment 773 180 r8|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 776 182 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 779 184 rdx|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 782 186 JUMP ~[] destination: B14 -> B15  <||@
  Comment 787 block B39 null  <||@
  Comment 787 386 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 787 388 CMP r9|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1642007824]  <||@
  Comment 787 {NarrowOop[Equivalence$1@1642007824]}  <||@
  Comment 794 394 stack:44|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 799 396 stack:48|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 803 390 BRANCH trueDestinationProbability: 0.7114431340645025 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41  <||@
  Comment 809 block B40 null  <||@
  Comment 809 392 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 809 398 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 814 400 NULLCHECK [rdx|QWORD[.]] state [bci:9]  <||@
  Comment 814 [rcx:0, rdx:0, stack:8, stack:16]at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 9, duringCall: false, rethrow: false]
              |0                  |1             |2  |3  |4 
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |-  |-  |- 
     stack:   |rax|DWORD          |              |   |   |    <||@
  Comment 814 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 816 402 rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 819 404 rdx|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 822 406 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:36, 26]  <||@
  Comment 822 7  <||@
  Comment 839 {HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 844 [stack:8, stack:16]at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:272) [bci: 26, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3  |4 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:48|DWORD  |-  |-   <||@
  Comment 845 408 JUMP ~[] destination: B40 -> B44  <||@
  Comment 845 block B44 null  <||@
  Comment 845 438 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 845 440 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 847 442 BRANCH trueDestinationProbability: 0.17473112367211385 condition: = trueDestination: B44 -> B46 falseDestination: B44 -> B53  <||@
  Comment 853 block B53 null  <||@
  Comment 853 508 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 853 510 rax|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 856 512 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 865 12  <||@
  Comment 875 block B20 null  <||@
  Comment 875 224 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 875 226 r11|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 878 228 r8|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 881 230 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 884 232 JUMP ~[] destination: B20 -> B21  <||@
  Comment 889 block B41 null  <||@
  Comment 889 410 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 889 416 CMP r9|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123]  <||@
  Comment 889 {NarrowOop[Equivalence$3@1213634123]}  <||@
  Comment 896 418 BRANCH trueDestinationProbability: 0.0023566146768518636 condition: = trueDestination: B41 -> B46 falseDestination: B41 -> B43  <||@
  Comment 902 block B43 null  <||@
  Comment 902 426 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 902 428 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1ea76343 encoding: base: 0 shift: 3  <||@
  Comment 906 430 rsi|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 909 432 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 914 434 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:46, 26]  <||@
  Comment 914 7  <||@
  Comment 927 {HotSpotMethod<Equivalence.equals(Object, Object)>}  <||@
  Comment 932 [stack:8, stack:16]at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:272) [bci: 26, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3  |4 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:48|DWORD  |-  |-   <||@
  Comment 933 436 JUMP ~[] destination: B43 -> B44  <||@
  Comment 935 block B46 null  <||@
  Comment 935 450 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 935 446 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 940 452 rax|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 943 454 r8|DWORD = INC stack:44|DWORD size: DWORD  <||@
  Comment 951 456 CMP (x: r8|DWORD, y: [rax|DWORD[.] * 8 + 12]) size: DWORD state [bci:29]  <||@
  Comment 951 [rax:0, rsi:0, stack:8]at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:272) [bci: 29, duringCall: false, rethrow: false]
              |0             |1                  |2               |3  |4 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]  |stack:48|DWORD  |-  |- 
     stack:   |int[0|0x0]    |                   |                |   |    <||@
  Comment 951 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 959 458 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B46 -> B47 falseDestination: B46 -> B52  <||@
  Comment 965 block B47 null  <||@
  Comment 965 460 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 965 462 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1ea76343 encoding: base: 0 shift: 3  <||@
  Comment 969 464 rdx|DWORD[.] = MOV [rax|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD  <||@
  Comment 974 466 TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 976 468 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49  <||@
  Comment 982 block B49 null  <||@
  Comment 982 476 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 982 478 CMP [rdx|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}  <||@
  Comment 982 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}}  <||@
  Comment 993 480 BRANCH trueDestinationProbability: 0.4480776492636467 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51  <||@
  Comment 999 block B51 null  <||@
  Comment 999 492 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 999 494 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 1004 496 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1013 12  <||@
  Comment 1023 block B50 null  <||@
  Comment 1023 482 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1023 484 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1ea76343 encoding: base: 0 shift: 3  <||@
  Comment 1029 486 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1034 488 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:56]  <||@
  Comment 1034 9  <||@
  Comment 1039 {HotSpotMethod<EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)>}  <||@
  Comment 1044 []at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:277) [bci: 56, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |-   <||@
  Comment 1045 490 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1054 12  <||@
  Comment 1064 block B48 null  <||@
  Comment 1064 470 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1064 472 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 1069 474 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1078 12  <||@
  Comment 1088 block B56 null  <||@
  Comment 1088 528 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1088 530 r10|DWORD = MOVE input: int[-131355|0xfffffffffffdfee5]  <||@
  Comment 1094 532 JUMP ~[] destination: B56 -> B59  <||@
  Comment 1094 block B59 null  <||@
  Comment 1094 546 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1094 548 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1101 550 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1108 552 DEOPT info [bci:64, 3]  <||@
  Comment 1108 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1113 [rsi:0, stack:8]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 64, duringCall: false, rethrow: false]
              |0         |1          |2 
     locals:  |-         |-          |- 
     stack:   |r8|DWORD  |rcx|DWORD  |  
  at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3, duringCall: true, rethrow: false]
              |0             |1                  |2  |3  |4 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |- 
     stack:   |rsi|QWORD[.]  |                   |   |   |    <||@
  Comment 1114 block B57 null  <||@
  Comment 1114 534 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1114 536 r10|DWORD = MOVE input: int[-128795|0xfffffffffffe08e5]  <||@
  Comment 1120 538 JUMP ~[] destination: B57 -> B59  <||@
  Comment 1122 block B52 null  <||@
  Comment 1122 498 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1122 500 r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 1126 502 MOV [r15|QWORD + 668] y: -142619 size: DWORD  <||@
  Comment 1137 504 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1144 506 DEOPT info [bci:29]  <||@
  Comment 1144 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1149 [rsi:0, stack:8]at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:272) [bci: 29, duringCall: false, rethrow: false]
              |0             |1                  |2          |3  |4 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]  |r11|DWORD  |-  |- 
     stack:   |int[0|0x0]    |                   |           |   |    <||@
  Comment 1150 block B58 null  <||@
  Comment 1150 540 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1150 542 r10|DWORD = MOVE input: int[-126995|0xfffffffffffe0fed]  <||@
  Comment 1156 544 JUMP ~[] destination: B58 -> B59  <||@
  Comment 1158 block B10 null  <||@
  Comment 1158 118 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1158 122 MOV [r15|QWORD + 668] y: -113939 size: DWORD  <||@
  Comment 1169 124 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1176 126 DEOPT info [bci:0]  <||@
  Comment 1176 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1181 [rdx:0, rsi:0]at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-   <||@
  Comment 1182 block B19 null  <||@
  Comment 1182 216 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1182 218 MOV [r15|QWORD + 668] y: -124699 size: DWORD  <||@
  Comment 1193 220 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1200 222 DEOPT info [bci:64, 3]  <||@
  Comment 1200 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1205 [rsi:0, stack:8]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 64, duringCall: false, rethrow: false]
              |0         |1          |2 
     locals:  |-         |-          |- 
     stack:   |r8|DWORD  |r11|DWORD  |  
  at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3, duringCall: true, rethrow: false]
              |0             |1                  |2  |3  |4 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |- 
     stack:   |rsi|QWORD[.]  |                   |   |   |    <||@
  Comment 1206 block B38 null  <||@
  Comment 1206 380 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1206 382 r10|DWORD = MOVE input: int[-138267|0xfffffffffffde3e5]  <||@
  Comment 1212 384 JUMP ~[] destination: B38 -> B55  <||@
  Comment 1212 block B55 null  <||@
  Comment 1212 520 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1212 522 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1219 524 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1226 526 DEOPT info [bci:9]  <||@
  Comment 1226 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1231 [rsi:0, stack:8]at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 9, duringCall: false, rethrow: false]
              |0             |1                  |2  |3  |4 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |- 
     stack:   |rax|DWORD     |                   |   |   |    <||@
  Comment 1232 block B13 null  <||@
  Comment 1232 162 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1232 164 MOV [r15|QWORD + 668] y: -118283 size: DWORD  <||@
  Comment 1243 166 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1250 168 DEOPT info [bci:43, 3]  <||@
  Comment 1250 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1255 [rsi:0, stack:8]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 43, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |- 
     stack:   |rax|DWORD     |   |  
  at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3, duringCall: true, rethrow: false]
              |0             |1                  |2  |3  |4 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |- 
     stack:   |rsi|QWORD[.]  |                   |   |   |    <||@
  Comment 1256 block B54 null  <||@
  Comment 1256 514 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1256 516 r10|DWORD = MOVE input: int[-134939|0xfffffffffffdf0e5]  <||@
  Comment 1262 518 JUMP ~[] destination: B54 -> B55  <||@
  Comment 1264 block B60 null  <||@
  Comment 1264 554 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1264 556 MOV [r15|QWORD + 668] y: -121107 size: DWORD  <||@
  Comment 1275 558 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1282 560 DEOPT info [bci:52, 3]  <||@
  Comment 1282 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1287 [rsi:0, stack:8]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 52, duringCall: false, rethrow: false]
              |0             |1  |2         
     locals:  |rsi|QWORD[.]  |-  |rax|DWORD 
  at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:269) [bci: 3, duringCall: true, rethrow: false]
              |0             |1                  |2  |3  |4 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |- 
     stack:   |rsi|QWORD[.]  |                   |   |   |    <||@
  Comment 1288 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1288 4  <||@
  Comment 1294 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 1294 5  <||@
  HexCodeFile>>> <|@
end_nmethod
