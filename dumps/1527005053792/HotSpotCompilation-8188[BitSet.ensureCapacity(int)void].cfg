begin_compilation
  name " HotSpotCompilation-8188[java.util.BitSet.ensureCapacity(int)]"
  method "HotSpotCompilation-8188[java.util.BitSet.ensureCapacity(int)]"
  date 1527005197146
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B38" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a412 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a412  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/BitSet;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v417 v419 j203 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v417 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a412 v55 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a412 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: BitSet.words
nodeSourcePosition: at java.util.BitSet.ensureCapacity(BitSet.java:334) [bci: 1]
nullCheck: false
stamp: n# [J
=== Inputs ===
stateBefore: - 
guard: - 
address: v417 
=== Succesors ===
next: i413 
=== Usages ===
v420 v418 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v417 #next: i413  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v6 i61 v34 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<BitSet.ensureCapacity(int)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: BitSet.java
sourceLine: 334
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 - 
=== Succesors ===
=== Usages ===
v133 a164 i413 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 -  <|@  <|@
f <@~|@floating>@ <|@
tid v418 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a412 
=== Succesors ===
=== Usages ===
i413 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a412  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i413 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.BitSet.ensureCapacity(BitSet.java:334) [bci: 4]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v418 
=== Succesors ===
next: v9 
=== Usages ===
v6 i31 i110 v86 
=== Predecessor ===
a412 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v418 #next: v9  <|@  <|@
f <@~|@floating>@ <|@
tid v6 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.BitSet.ensureCapacity(BitSet.java:334) [bci: 6]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i413 
y: i2 
=== Succesors ===
=== Usages ===
v9 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i413 y: i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.ensureCapacity(BitSet.java:334) [bci: 6]
stamp: void
trueSuccessorProbability: 0.0010362814959713473
=== Inputs ===
condition: v6 
=== Succesors ===
trueSuccessor: v7 
falseSuccessor: v8 
=== Usages ===
=== Predecessor ===
i413 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6 #trueSuccessor: v7 #falseSuccessor: v8  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4562421827785068032
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.ensureCapacity(BitSet.java:336) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v78 
=== Usages ===
=== Predecessor ===
v9 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v78  <|@  <|@
f <@~|@floating>@ <|@
tid i30 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.BitSet.ensureCapacity(BitSet.java:336) [bci: 15]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i31 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i31 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at java.util.BitSet.ensureCapacity(BitSet.java:336) [bci: 15]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i413 
y: i30 
=== Succesors ===
=== Usages ===
i61 v34 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i413 y: i30  <|@  <|@
f <@~|@floating>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at java.util.BitSet.ensureCapacity(BitSet.java:336) [bci: 17]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i31 
y: i2 
=== Succesors ===
=== Usages ===
i61 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i31 y: i2  <|@  <|@
f <@~|@floating>@ <|@
tid i61 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v34 
trueValue: i2 
falseValue: i31 
=== Succesors ===
=== Usages ===
j213 v72 v86 i110 a164 v190 i140 v149 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v34 trueValue: i2 falseValue: i31  <|@  <|@
f <@~|@floating>@ <|@
tid i18 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v72 a164 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 22]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:128) [bci: 3]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i61 
y: i18 
=== Succesors ===
=== Usages ===
v78 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i61 y: i18  <|@  <|@
f <@*|@fixed>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 33]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:128) [bci: 3]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v72 
=== Succesors ===
trueSuccessor: v77 
falseSuccessor: v73 
=== Usages ===
=== Predecessor ===
v7 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v72 #trueSuccessor: v77 #falseSuccessor: v73  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:187) [bci: 55]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:128) [bci: 3]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: v133 
=== Usages ===
=== Predecessor ===
v78 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v133  <|@  <|@
f <@~|@floating>@ <|@
tid a130 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v133 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i135 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -21601
stableDimension: 0
stamp: i32 [-21601] ⇊00000000ffffab9f ⇈00000000ffffab9f
stampKind: i32
value: int[-21601|0xffffffffffffab9f]
=== Inputs ===
=== Succesors ===
=== Usages ===
v133 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i135 
speculation: a130 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v77 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i135 speculation: a130  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B7" 
    xhandlers
    flags 
    probability 4562421827785068032
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 36]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:128) [bci: 3]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: j143 
=== Usages ===
=== Predecessor ===
v78 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j143  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j143 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j187 
=== Usages ===
v422 v423 
=== Predecessor ===
v73 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j187  <|@  <|@
f <@~|@floating>@ <|@
tid v422 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j143 
index: - 
=== Succesors ===
=== Usages ===
j187 v189 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j143 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j187 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v422 
=== Succesors ===
next: j188 
=== Usages ===
j147 v424 v425 a163 v430 v426 v427 v428 v429 
=== Predecessor ===
j143 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v422 #next: j188  <|@  <|@
f <@~|@floating>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j143 
index: - 
=== Succesors ===
=== Usages ===
j188 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j143 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j188 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v423 
=== Succesors ===
next: v152 
=== Usages ===
v153 
=== Predecessor ===
j187 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v423 #next: v152  <|@  <|@
f <@~|@floating>@ <|@
tid i148 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v149 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v149 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i61 
y: i148 
=== Succesors ===
=== Usages ===
v152 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i61 y: i148  <|@  <|@
f <@~|@floating>@ <|@
tid j138 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v191 v224 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v152 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v149 
=== Succesors ===
trueSuccessor: v151 
falseSuccessor: v150 
=== Usages ===
=== Predecessor ===
j188 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v149 #trueSuccessor: v151 #falseSuccessor: v150  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4561741432066598400
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v151 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: v159 
=== Usages ===
=== Predecessor ===
v152 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v159  <|@  <|@
f <@~|@floating>@ <|@
tid i139 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
rawvalue: 3
stableDimension: 0
stamp: i32 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
i140 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i140 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i61 
y: i139 
=== Succesors ===
=== Usages ===
i172 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i61 y: i139  <|@  <|@
f <@~|@floating>@ <|@
tid i171 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i172 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i172 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
stamp: i32 [-2147483641 - 2147483647] ⇊0000000000000007
=== Inputs ===
x: i140 
y: i171 
=== Succesors ===
=== Usages ===
i142 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i140 y: i171  <|@  <|@
f <@~|@floating>@ <|@
tid i141 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i142 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i142 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i172 
y: i141 
=== Succesors ===
=== Usages ===
j146 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i172 y: i141  <|@  <|@
f <@~|@floating>@ <|@
tid j146 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i142 
=== Succesors ===
=== Usages ===
j147 v426 v427 v428 v429 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i142  <|@  <|@
f <@~|@floating>@ <|@
tid j147 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
stamp: i64
=== Inputs ===
x: j146 
y: j187 
=== Succesors ===
=== Usages ===
v153 v189 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j146 y: j187  <|@  <|@
f <@~|@floating>@ <|@
tid v153 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j188 
y: j147 
=== Succesors ===
=== Usages ===
v159 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j188 y: j147  <|@  <|@
f <@*|@fixed>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v153 
=== Succesors ===
trueSuccessor: v158 
falseSuccessor: v157 
=== Usages ===
=== Predecessor ===
v151 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v153 #trueSuccessor: v158 #falseSuccessor: v157  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4531623039136165729
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: v156 
=== Usages ===
=== Predecessor ===
v159 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v156  <|@  <|@
f <@*|@fixed>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v155 
=== Predecessor ===
v158 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 4561655409978648130
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: v189 
=== Usages ===
=== Predecessor ===
v159 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v189  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v422 
value: j147 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v176 
=== Usages ===
=== Predecessor ===
v157 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v422 value: j147 stateAfter: - lastLocationAccess: - #next: v176  <|@  <|@
f <@~|@floating>@ <|@
tid v426 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j146 
index: j187 
=== Succesors ===
=== Usages ===
v176 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j146 index: j187  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v176 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
stamp: void
=== Inputs ===
address: v426 
=== Succesors ===
next: v179 
=== Usages ===
=== Predecessor ===
v189 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v426 #next: v179  <|@  <|@
f <@~|@floating>@ <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j146 
index: j187 
=== Succesors ===
=== Usages ===
v179 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j146 index: j187  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v179 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
stamp: void
=== Inputs ===
address: v427 
=== Succesors ===
next: v182 
=== Usages ===
=== Predecessor ===
v176 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v427 #next: v182  <|@  <|@
f <@~|@floating>@ <|@
tid v428 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j146 
index: j187 
=== Succesors ===
=== Usages ===
v182 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j146 index: j187  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
stamp: void
=== Inputs ===
address: v428 
=== Succesors ===
next: v185 
=== Usages ===
=== Predecessor ===
v179 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v428 #next: v185  <|@  <|@
f <@~|@floating>@ <|@
tid v429 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j146 
index: j187 
=== Succesors ===
=== Usages ===
v185 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j146 index: j187  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
stamp: void
=== Inputs ===
address: v429 
=== Succesors ===
next: v190 
=== Usages ===
=== Predecessor ===
v182 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v429 #next: v190  <|@  <|@
f <@~|@floating>@ <|@
tid v424 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j187 
index: - 
=== Succesors ===
=== Usages ===
v190 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j187 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v424 
value: i61 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v191 
=== Usages ===
=== Predecessor ===
v185 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v424 value: i61 stateAfter: - lastLocationAccess: - #next: v191  <|@  <|@
f <@~|@floating>@ <|@
tid v425 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j187 
index: - 
=== Succesors ===
=== Usages ===
v191 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j187 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v425 
value: j138 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v195 
=== Usages ===
=== Predecessor ===
v190 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v425 value: j138 stateAfter: - lastLocationAccess: - #next: v195  <|@  <|@
f <@~|@floating>@ <|@
tid v430 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j187 
index: - 
=== Succesors ===
=== Usages ===
v195 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j187 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
rawvalue: meta{HotSpotType<[J, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[J, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v195 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v430 
value: v212 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v162 
=== Usages ===
=== Predecessor ===
v191 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v430 value: v212 stateAfter: - lastLocationAccess: - #next: v162  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: a163 
=== Usages ===
=== Predecessor ===
v195 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a163  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a163 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j187 
=== Succesors ===
next: v165 
=== Usages ===
a168 
=== Predecessor ===
v162 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j187 #next: v165  <|@  <|@
f <@*|@fixed>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v166 
=== Predecessor ===
a163 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4547274832207261694
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: v154 
=== Usages ===
=== Predecessor ===
v152 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v154  <|@  <|@
f <@*|@fixed>@ <|@
tid v154 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v155 
=== Predecessor ===
v150 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4547963008910863850
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v154 v156 
=== Succesors ===
next: a164 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v154 v156 #next: a164  <|@  <|@
f <@~|@floating>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
rawvalue: meta{HotSpotType<[J, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[J, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a164 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a164 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v137 i61 i18 
=== Succesors ===
next: v167 
=== Usages ===
a168 
=== Predecessor ===
v155 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v137 i61 i18 #next: v167  <|@  <|@
f <@*|@fixed>@ <|@
tid v167 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v166 
=== Predecessor ===
a164 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4562421827785068032
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a168 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v166 
values: a163 a164 
=== Succesors ===
=== Usages ===
v432 a115 v421 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v166 values: a163 a164  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v165 v167 
=== Succesors ===
next: v317 
=== Usages ===
a168 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v165 v167 #next: v317  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v317 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v227 
=== Usages ===
j318 j320 
=== Predecessor ===
v166 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v227  <|@  <|@
f <@~|@floating>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:130) [bci: 9]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i413 
y: i61 
=== Succesors ===
=== Usages ===
i110 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i413 y: i61  <|@  <|@
f <@~|@floating>@ <|@
tid i110 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v86 
trueValue: i413 
falseValue: i61 
=== Succesors ===
=== Usages ===
j214 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v86 trueValue: i413 falseValue: i61  <|@  <|@
f <@~|@floating>@ <|@
tid j214 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i110 
=== Succesors ===
=== Usages ===
j358 v432 j218 v224 v314 j348 j354 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i110  <|@  <|@
f <@~|@floating>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j214 
y: j138 
=== Succesors ===
=== Usages ===
v227 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j214 y: j138  <|@  <|@
f <@~|@floating>@ <|@
tid j357 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j358 j391 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j336 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j337 j376 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j353 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j354 j388 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j345 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j346 j382 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j347 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j348 j383 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j94 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:134) [bci: 31]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j371 v406 v384 j329 j338 v349 j377 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v227 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v224 
=== Succesors ===
trueSuccessor: v225 
falseSuccessor: v226 
=== Usages ===
=== Predecessor ===
v317 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v224 #trueSuccessor: v225 #falseSuccessor: v226  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B22" 
    xhandlers
    flags 
    probability 4557918228157697536
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v225 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v244 
=== Usages ===
=== Predecessor ===
v227 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v244  <|@  <|@
f <@*|@fixed>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v245 
=== Predecessor ===
v225 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4557918228157697536
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v230 
=== Usages ===
=== Predecessor ===
v227 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v230  <|@  <|@
f <@~|@floating>@ <|@
tid v421 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a168 
index: - 
=== Succesors ===
=== Usages ===
j320 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a168 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j320 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v317 
address: v421 
=== Succesors ===
=== Usages ===
v433 v435 v437 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v317 address: v421  <|@  <|@
f <@~|@floating>@ <|@
tid v420 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a412 
=== Succesors ===
=== Usages ===
j318 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a412  <|@  <|@
f <@~|@floating>@ <|@
tid j318 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v317 
address: v420 
=== Succesors ===
=== Usages ===
v434 v436 v438 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v317 address: v420  <|@  <|@
f <@~|@floating>@ <|@
tid j348 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j214 
y: j347 
=== Succesors ===
=== Usages ===
v349 v351 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j214 y: j347  <|@  <|@
f <@~|@floating>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j348 
y: j94 
=== Succesors ===
=== Usages ===
v230 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j348 y: j94  <|@  <|@
f <@*|@fixed>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v349 
=== Succesors ===
trueSuccessor: v228 
falseSuccessor: v229 
=== Usages ===
=== Predecessor ===
v226 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v349 #trueSuccessor: v228 #falseSuccessor: v229  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B16" 
    xhandlers
    flags 
    probability 4555804130973390080
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v240 
=== Usages ===
=== Predecessor ===
v230 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v240  <|@  <|@
f <@*|@fixed>@ <|@
tid v240 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v241 
=== Predecessor ===
v228 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4548911028902956544
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v229 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v231 
=== Usages ===
=== Predecessor ===
v230 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v231  <|@  <|@
f <@*|@fixed>@ <|@
tid v231 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v232 
=== Predecessor ===
v229 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B37" 
    successors "B15" "B37" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4557918228157697536
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j338 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v232 
values: j94 j346 
=== Succesors ===
=== Usages ===
v438 j346 v437 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v232 values: j94 j346  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v232 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v231 
=== Succesors ===
next: v414 
=== Usages ===
v414 v236 v237 j338 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v231 #next: v414  <|@  <|@
f <@~|@floating>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j318 
index: j338 
=== Succesors ===
=== Usages ===
v414 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j318 index: j338  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: long
nullCheck: false
stamp: <i64,i64,i64,i64>
=== Inputs ===
stateBefore: - 
guard: v232 
address: v438 
=== Succesors ===
next: v403 
=== Usages ===
v403 
=== Predecessor ===
v232 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v232 address: v438 #next: v403  <|@  <|@
f <@~|@floating>@ <|@
tid v437 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j320 
index: j338 
=== Succesors ===
=== Usages ===
v403 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j320 index: j338  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v437 
value: v414 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v239 
=== Usages ===
=== Predecessor ===
v414 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v437 value: v414 stateAfter: - lastLocationAccess: - #next: v239  <|@  <|@
f <@~|@floating>@ <|@
tid j346 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j338 
y: j345 
=== Succesors ===
=== Usages ===
j329 j338 v351 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j338 y: j345  <|@  <|@
f <@~|@floating>@ <|@
tid v351 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j348 
y: j346 
=== Succesors ===
=== Usages ===
v239 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j348 y: j346  <|@  <|@
f <@*|@fixed>@ <|@
tid v239 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v351 
=== Succesors ===
trueSuccessor: v236 
falseSuccessor: v238 
=== Usages ===
=== Predecessor ===
v403 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v351 #trueSuccessor: v236 #falseSuccessor: v238  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4548911028902956544
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v236 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v232 
=== Succesors ===
next: v242 
=== Usages ===
=== Predecessor ===
v239 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v232 #next: v242  <|@  <|@
f <@*|@fixed>@ <|@
tid v242 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v241 
=== Predecessor ===
v236 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B12" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4557918228157697536
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j329 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v241 
values: j94 j346 
=== Succesors ===
=== Usages ===
v436 j337 j321 v355 v435 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v241 values: j94 j346  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v241 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v240 v242 
=== Succesors ===
next: v257 
=== Usages ===
j329 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v240 v242 #next: v257  <|@  <|@
f <@~|@floating>@ <|@
tid j354 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j214 
y: j353 
=== Succesors ===
=== Usages ===
v355 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j214 y: j353  <|@  <|@
f <@~|@floating>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j354 
y: j329 
=== Succesors ===
=== Usages ===
v257 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j354 y: j329  <|@  <|@
f <@*|@fixed>@ <|@
tid v257 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v355 
=== Succesors ===
trueSuccessor: v256 
falseSuccessor: v255 
=== Usages ===
=== Predecessor ===
v241 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v355 #trueSuccessor: v256 #falseSuccessor: v255  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4548911028902956544
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v256 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v260 
=== Usages ===
=== Predecessor ===
v257 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v260  <|@  <|@
f <@*|@fixed>@ <|@
tid v260 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v252 
=== Predecessor ===
v256 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4555804130973390080
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v415 
=== Usages ===
v415 
=== Predecessor ===
v257 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v415  <|@  <|@
f <@~|@floating>@ <|@
tid v436 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j318 
index: j329 
=== Succesors ===
=== Usages ===
v415 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j318 index: j329  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: long
nullCheck: false
stamp: <i64,i64>
=== Inputs ===
stateBefore: - 
guard: v255 
address: v436 
=== Succesors ===
next: v401 
=== Usages ===
v401 
=== Predecessor ===
v255 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v255 address: v436 #next: v401  <|@  <|@
f <@~|@floating>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j320 
index: j329 
=== Succesors ===
=== Usages ===
v401 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j320 index: j329  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v435 
value: v415 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v251 
=== Usages ===
=== Predecessor ===
v415 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v435 value: v415 stateAfter: - lastLocationAccess: - #next: v251  <|@  <|@
f <@~|@floating>@ <|@
tid j337 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j329 
y: j336 
=== Succesors ===
=== Usages ===
j321 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j329 y: j336  <|@  <|@
f <@*|@fixed>@ <|@
tid v251 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v252 
=== Predecessor ===
v401 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4557918228157697536
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j321 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v252 
values: j337 j329 
=== Succesors ===
=== Usages ===
v434 v359 v433 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v252 values: j337 j329  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v252 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v251 v260 
=== Succesors ===
next: v263 
=== Usages ===
j321 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v251 v260 #next: v263  <|@  <|@
f <@~|@floating>@ <|@
tid j358 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j214 
y: j357 
=== Succesors ===
=== Usages ===
v359 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j214 y: j357  <|@  <|@
f <@~|@floating>@ <|@
tid v359 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j358 
y: j321 
=== Succesors ===
=== Usages ===
v263 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j358 y: j321  <|@  <|@
f <@*|@fixed>@ <|@
tid v263 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v359 
=== Succesors ===
trueSuccessor: v262 
falseSuccessor: v261 
=== Usages ===
=== Predecessor ===
v252 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v359 #trueSuccessor: v262 #falseSuccessor: v261  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4548911028902956544
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v262 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v266 
=== Usages ===
=== Predecessor ===
v263 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v266  <|@  <|@
f <@*|@fixed>@ <|@
tid v266 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v245 
=== Predecessor ===
v262 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4555804130973390080
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v261 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: j416 
=== Usages ===
j416 
=== Predecessor ===
v263 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j416  <|@  <|@
f <@~|@floating>@ <|@
tid v434 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j318 
index: j321 
=== Succesors ===
=== Usages ===
j416 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j318 index: j321  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j416 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: long
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: v261 
address: v434 
=== Succesors ===
next: v399 
=== Usages ===
v399 
=== Predecessor ===
v261 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v261 address: v434 #next: v399  <|@  <|@
f <@~|@floating>@ <|@
tid v433 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j320 
index: j321 
=== Succesors ===
=== Usages ===
v399 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j320 index: j321  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v433 
value: j416 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v254 
=== Usages ===
=== Predecessor ===
j416 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v433 value: j416 stateAfter: - lastLocationAccess: - #next: v254  <|@  <|@
f <@*|@fixed>@ <|@
tid v254 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v245 
=== Predecessor ===
v399 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B10" "B21" "B20" 
    successors "B23" "B35" 
    xhandlers
    flags 
    probability 4562421827785068032
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v244 v254 v266 
=== Succesors ===
next: v362 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v244 v254 v266 #next: v362  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v362 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v273 
=== Usages ===
j364 
=== Predecessor ===
v245 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v273  <|@  <|@
f <@~|@floating>@ <|@
tid j213 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i61 
=== Succesors ===
=== Usages ===
j218 v314 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i61  <|@  <|@
f <@~|@floating>@ <|@
tid v314 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j214 
y: j213 
=== Succesors ===
=== Usages ===
v273 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j214 y: j213  <|@  <|@
f <@*|@fixed>@ <|@
tid v273 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v314 
=== Succesors ===
trueSuccessor: v272 
falseSuccessor: v271 
=== Usages ===
=== Predecessor ===
v362 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v314 #trueSuccessor: v272 #falseSuccessor: v271  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4557918228157697536
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v272 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v276 
=== Usages ===
=== Predecessor ===
v273 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v276  <|@  <|@
f <@~|@floating>@ <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: a168 
index: j214 
=== Succesors ===
=== Usages ===
j364 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a168 index: j214  <|@  <|@
f <@~|@floating>@ <|@
tid j364 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v362 
address: v432 
=== Succesors ===
=== Usages ===
v439 v440 v441 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v362 address: v432  <|@  <|@
f <@~|@floating>@ <|@
tid j218 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j213 
y: j214 
=== Succesors ===
=== Usages ===
j391 j383 j388 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j213 y: j214  <|@  <|@
f <@~|@floating>@ <|@
tid j383 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j218 
y: j347 
=== Succesors ===
=== Usages ===
v384 v386 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j218 y: j347  <|@  <|@
f <@~|@floating>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j383 
y: j94 
=== Succesors ===
=== Usages ===
v276 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j383 y: j94  <|@  <|@
f <@*|@fixed>@ <|@
tid v276 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v384 
=== Succesors ===
trueSuccessor: v274 
falseSuccessor: v275 
=== Usages ===
=== Predecessor ===
v272 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v384 #trueSuccessor: v274 #falseSuccessor: v275  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 4555804130973390080
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v274 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v285 
=== Usages ===
=== Predecessor ===
v276 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v285  <|@  <|@
f <@*|@fixed>@ <|@
tid v285 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v286 
=== Predecessor ===
v274 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4548911028902956544
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v275 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v277 
=== Usages ===
=== Predecessor ===
v276 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v277  <|@  <|@
f <@*|@fixed>@ <|@
tid v277 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v278 
=== Predecessor ===
v275 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B34" 
    successors "B27" "B34" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4557918228157697536
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j377 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v278 
values: j94 j382 
=== Succesors ===
=== Usages ===
v441 j382 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v278 values: j94 j382  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v278 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v277 
=== Succesors ===
next: v409 
=== Usages ===
j377 v281 v282 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v277 #next: v409  <|@  <|@
f <@~|@floating>@ <|@
tid v441 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j364 
index: j377 
=== Succesors ===
=== Usages ===
v409 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j364 index: j377  <|@  <|@
f <@~|@floating>@ <|@
tid v410 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i64 [0] ⇈0000000000000000,i64 [0] ⇈0000000000000000,i64 [0] ⇈0000000000000000,i64 [0] ⇈0000000000000000>
stampKind: <i64,i64,i64,i64>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v409 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v409 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v441 
value: v410 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v284 
=== Usages ===
=== Predecessor ===
v278 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v441 value: v410 stateAfter: - lastLocationAccess: - #next: v284  <|@  <|@
f <@~|@floating>@ <|@
tid j382 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j377 
y: j345 
=== Succesors ===
=== Usages ===
j371 j377 v386 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j377 y: j345  <|@  <|@
f <@~|@floating>@ <|@
tid v386 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j383 
y: j382 
=== Succesors ===
=== Usages ===
v284 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j383 y: j382  <|@  <|@
f <@*|@fixed>@ <|@
tid v284 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v386 
=== Succesors ===
trueSuccessor: v281 
falseSuccessor: v283 
=== Usages ===
=== Predecessor ===
v409 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v386 #trueSuccessor: v281 #falseSuccessor: v283  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4548911028902956544
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v278 
=== Succesors ===
next: v287 
=== Usages ===
=== Predecessor ===
v284 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v278 #next: v287  <|@  <|@
f <@*|@fixed>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v286 
=== Predecessor ===
v281 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B24" "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4557918228157697536
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j371 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v286 
values: j94 j382 
=== Succesors ===
=== Usages ===
v440 j376 j365 v389 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v286 values: j94 j382  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v285 v287 
=== Succesors ===
next: v302 
=== Usages ===
j371 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v285 v287 #next: v302  <|@  <|@
f <@~|@floating>@ <|@
tid j388 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j218 
y: j353 
=== Succesors ===
=== Usages ===
v389 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j218 y: j353  <|@  <|@
f <@~|@floating>@ <|@
tid v389 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j388 
y: j371 
=== Succesors ===
=== Usages ===
v302 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j388 y: j371  <|@  <|@
f <@*|@fixed>@ <|@
tid v302 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v389 
=== Succesors ===
trueSuccessor: v301 
falseSuccessor: v300 
=== Usages ===
=== Predecessor ===
v286 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v389 #trueSuccessor: v301 #falseSuccessor: v300  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4548911028902956544
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v301 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v305 
=== Usages ===
=== Predecessor ===
v302 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v305  <|@  <|@
f <@*|@fixed>@ <|@
tid v305 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v297 
=== Predecessor ===
v301 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4555804130973390080
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v408 
=== Usages ===
=== Predecessor ===
v302 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v408  <|@  <|@
f <@~|@floating>@ <|@
tid v440 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j364 
index: j371 
=== Succesors ===
=== Usages ===
v408 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j364 index: j371  <|@  <|@
f <@~|@floating>@ <|@
tid v411 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0>
stableDimension: 0
stamp: <i64 [0] ⇈0000000000000000,i64 [0] ⇈0000000000000000>
stampKind: <i64,i64>
value: SIMD<0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v408 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v408 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v440 
value: v411 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v296 
=== Usages ===
=== Predecessor ===
v300 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v440 value: v411 stateAfter: - lastLocationAccess: - #next: v296  <|@  <|@
f <@~|@floating>@ <|@
tid j376 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j371 
y: j336 
=== Succesors ===
=== Usages ===
j365 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j371 y: j336  <|@  <|@
f <@*|@fixed>@ <|@
tid v296 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v297 
=== Predecessor ===
v408 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4557918228157697536
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j365 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v297 
values: j376 j371 
=== Succesors ===
=== Usages ===
v439 v392 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v297 values: j376 j371  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v297 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v296 v305 
=== Succesors ===
next: v308 
=== Usages ===
j365 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v296 v305 #next: v308  <|@  <|@
f <@~|@floating>@ <|@
tid j391 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j218 
y: j357 
=== Succesors ===
=== Usages ===
v392 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j218 y: j357  <|@  <|@
f <@~|@floating>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j391 
y: j365 
=== Succesors ===
=== Usages ===
v308 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j391 y: j365  <|@  <|@
f <@*|@fixed>@ <|@
tid v308 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v392 
=== Succesors ===
trueSuccessor: v307 
falseSuccessor: v306 
=== Usages ===
=== Predecessor ===
v297 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v392 #trueSuccessor: v307 #falseSuccessor: v306  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4548911028902956544
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v307 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v311 
=== Usages ===
=== Predecessor ===
v308 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v311  <|@  <|@
f <@*|@fixed>@ <|@
tid v311 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v290 
=== Predecessor ===
v307 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4555804130973390080
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v306 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v406 
=== Usages ===
=== Predecessor ===
v308 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v406  <|@  <|@
f <@~|@floating>@ <|@
tid v439 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j364 
index: j365 
=== Succesors ===
=== Usages ===
v406 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j364 index: j365  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v406 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v439 
value: j94 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v299 
=== Usages ===
=== Predecessor ===
v306 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v439 value: j94 stateAfter: - lastLocationAccess: - #next: v299  <|@  <|@
f <@*|@fixed>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v290 
=== Predecessor ===
v406 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4555804130973390080
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v282 
=== Usages ===
=== Predecessor ===
v284 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v282  <|@  <|@
f <@*|@fixed>@ <|@
tid v282 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v278 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v283 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v278  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B36" 
    xhandlers
    flags 
    probability 4557918228157697536
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v271 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v289 
=== Usages ===
=== Predecessor ===
v273 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v289  <|@  <|@
f <@*|@fixed>@ <|@
tid v289 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v290 
=== Predecessor ===
v271 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B33" "B32" 
    successors 
    xhandlers
    flags 
    probability 4562421827785068032
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v290 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v289 v299 v311 
=== Succesors ===
next: a115 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v289 v299 v311 #next: a115  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a115 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a168 
=== Succesors ===
next: v55 
=== Usages ===
a54 
=== Predecessor ===
v290 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a168 #next: v55  <|@  <|@
f <@~|@floating>@ <|@
tid a54 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 30]
op: Compress
stamp: n! -
=== Inputs ===
value: a115 
=== Succesors ===
=== Usages ===
v55 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a115  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: BitSet.words
nodeSourcePosition: at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 30]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v417 
value: a54 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j203 
=== Usages ===
=== Predecessor ===
a115 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v417 value: a54 stateAfter: - lastLocationAccess: - #next: j203  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j203 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 30]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v209 
=== Usages ===
j205 
=== Predecessor ===
v55 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v209  <|@  <|@
f <@~|@floating>@ <|@
tid i204 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 30]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j205 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j205 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 30]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j203 
y: i204 
=== Succesors ===
=== Usages ===
v431 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j203 y: i204  <|@  <|@
f <@~|@floating>@ <|@
tid j208 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 30]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v431 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v431 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j205 
index: j208 
=== Succesors ===
=== Usages ===
v209 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j205 index: j208  <|@  <|@
f <@~|@floating>@ <|@
tid i60 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.BitSet.ensureCapacity(BitSet.java:338) [bci: 35]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v59 v209 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 30]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v431 
value: i60 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v59 
=== Usages ===
=== Predecessor ===
j203 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v431 value: i60 stateAfter: - lastLocationAccess: - #next: v59  <|@  <|@
f <@~|@floating>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v59 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: BitSet.sizeIsSticky
nodeSourcePosition: at java.util.BitSet.ensureCapacity(BitSet.java:338) [bci: 35]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v419 
value: i60 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v33 
=== Usages ===
=== Predecessor ===
v209 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v419 value: i60 stateAfter: - lastLocationAccess: - #next: v33  <|@  <|@
f <@*|@fixed>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.ensureCapacity(BitSet.java:340) [bci: 38]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v59 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B14" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4555804130973390080
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v237 
=== Usages ===
=== Predecessor ===
v239 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v237  <|@  <|@
f <@*|@fixed>@ <|@
tid v237 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v232 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v238 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v232  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607173084806099193
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.ensureCapacity(BitSet.java:340) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v32 
=== Usages ===
=== Predecessor ===
v9 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v32  <|@  <|@
f <@*|@fixed>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.ensureCapacity(BitSet.java:340) [bci: 38]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v8 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B38" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a412 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a412  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/BitSet;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v417 v419 j203 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v417 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a412 v55 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a412 <|@
result v2|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: BitSet.words
nodeSourcePosition: at java.util.BitSet.ensureCapacity(BitSet.java:334) [bci: 1]
nullCheck: false
stamp: n# [J
=== Inputs ===
stateBefore: - 
guard: - 
address: v417 
=== Succesors ===
next: i413 
=== Usages ===
v420 v418 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v417 #next: i413  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v6 i61 v34 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<BitSet.ensureCapacity(int)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: BitSet.java
sourceLine: 334
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 - 
=== Succesors ===
=== Usages ===
v133 a164 i413 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 -  <|@  <|@
f <@~|@floating>@ <|@
tid v418 <|@
result [v2|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a412 
=== Succesors ===
=== Usages ===
i413 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a412  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i413 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.BitSet.ensureCapacity(BitSet.java:334) [bci: 4]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v418 
=== Succesors ===
next: v9 
=== Usages ===
v6 i31 i110 v86 
=== Predecessor ===
a412 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v418 #next: v9  <|@  <|@
f <@~|@floating>@ <|@
tid v6 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.BitSet.ensureCapacity(BitSet.java:334) [bci: 6]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i413 
y: i2 
=== Succesors ===
=== Usages ===
v9 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i413 y: i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.ensureCapacity(BitSet.java:334) [bci: 6]
stamp: void
trueSuccessorProbability: 0.0010362814959713473
=== Inputs ===
condition: v6 
=== Succesors ===
trueSuccessor: v7 
falseSuccessor: v8 
=== Usages ===
=== Predecessor ===
i413 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6 #trueSuccessor: v7 #falseSuccessor: v8  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7b674b86 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[.] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.BitSet.ensureCapacity(BitSet.java:334) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v3|DWORD = MOV [v2|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v1|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0010362814959713473 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4562421827785068032
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.ensureCapacity(BitSet.java:336) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v78 
=== Usages ===
=== Predecessor ===
v9 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v78  <|@  <|@
f <@~|@floating>@ <|@
tid i30 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.BitSet.ensureCapacity(BitSet.java:336) [bci: 15]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i31 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i31 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at java.util.BitSet.ensureCapacity(BitSet.java:336) [bci: 15]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i413 
y: i30 
=== Succesors ===
=== Usages ===
i61 v34 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i413 y: i30  <|@  <|@
f <@~|@floating>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at java.util.BitSet.ensureCapacity(BitSet.java:336) [bci: 17]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i31 
y: i2 
=== Succesors ===
=== Usages ===
i61 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i31 y: i2  <|@  <|@
f <@~|@floating>@ <|@
tid i61 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v34 
trueValue: i2 
falseValue: i31 
=== Succesors ===
=== Usages ===
j213 v72 v86 i110 a164 v190 i140 v149 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v34 trueValue: i2 falseValue: i31  <|@  <|@
f <@~|@floating>@ <|@
tid i18 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v72 a164 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 22]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:128) [bci: 3]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i61 
y: i18 
=== Succesors ===
=== Usages ===
v78 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i61 y: i18  <|@  <|@
f <@*|@fixed>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 33]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:128) [bci: 3]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v72 
=== Succesors ===
trueSuccessor: v77 
falseSuccessor: v73 
=== Usages ===
=== Predecessor ===
v7 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v72 #trueSuccessor: v77 #falseSuccessor: v73  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = SHL v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v1|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = CMOVE (falseValue: v4|DWORD, ~trueValue: v1|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:187) [bci: 55]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:128) [bci: 3]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: v133 
=== Usages ===
=== Predecessor ===
v78 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v133  <|@  <|@
f <@~|@floating>@ <|@
tid a130 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v133 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i135 <|@
result int[-21601|0xffffffffffffab9f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -21601
stableDimension: 0
stamp: i32 [-21601] ⇊00000000ffffab9f ⇈00000000ffffab9f
stampKind: i32
value: int[-21601|0xffffffffffffab9f]
=== Inputs ===
=== Succesors ===
=== Usages ===
v133 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i135 
speculation: a130 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v77 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i135 speculation: a130  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -21601 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.BitSet.ensureCapacity(BitSet.java:334) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B7" 
    xhandlers
    flags 
    probability 4562421827785068032
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 36]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:128) [bci: 3]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: j143 
=== Usages ===
=== Predecessor ===
v78 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j143  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j143 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j187 
=== Usages ===
v422 v423 
=== Predecessor ===
v73 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j187  <|@  <|@
f <@~|@floating>@ <|@
tid v422 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j143 
index: - 
=== Succesors ===
=== Usages ===
j187 v189 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j143 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j187 <|@
result v6|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v422 
=== Succesors ===
next: j188 
=== Usages ===
j147 v424 v425 a163 v430 v426 v427 v428 v429 
=== Predecessor ===
j143 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v422 #next: j188  <|@  <|@
f <@~|@floating>@ <|@
tid v423 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j143 
index: - 
=== Succesors ===
=== Usages ===
j188 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j143 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j188 <|@
result v7|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v423 
=== Succesors ===
next: v152 
=== Usages ===
v153 
=== Predecessor ===
j187 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v423 #next: v152  <|@  <|@
f <@~|@floating>@ <|@
tid i148 <|@
result int[16777215|0xffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v149 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v149 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i61 
y: i148 
=== Succesors ===
=== Usages ===
v152 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i61 y: i148  <|@  <|@
f <@~|@floating>@ <|@
tid j138 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v191 v224 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v152 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v149 
=== Succesors ===
trueSuccessor: v151 
falseSuccessor: v150 
=== Usages ===
=== Predecessor ===
j188 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v149 #trueSuccessor: v151 #falseSuccessor: v150  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4561741432066598400
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v151 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: v159 
=== Usages ===
=== Predecessor ===
v152 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v159  <|@  <|@
f <@~|@floating>@ <|@
tid i139 <|@
result int[3|0x3] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
rawvalue: 3
stableDimension: 0
stamp: i32 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
i140 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i140 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i61 
y: i139 
=== Succesors ===
=== Usages ===
i172 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i61 y: i139  <|@  <|@
f <@~|@floating>@ <|@
tid i171 <|@
result int[23|0x17] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i172 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i172 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
stamp: i32 [-2147483641 - 2147483647] ⇊0000000000000007
=== Inputs ===
x: i140 
y: i171 
=== Succesors ===
=== Usages ===
i142 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i140 y: i171  <|@  <|@
f <@~|@floating>@ <|@
tid i141 <|@
result int[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i142 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i142 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i172 
y: i141 
=== Succesors ===
=== Usages ===
j146 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i172 y: i141  <|@  <|@
f <@~|@floating>@ <|@
tid j146 <|@
result v11|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i142 
=== Succesors ===
=== Usages ===
j147 v426 v427 v428 v429 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i142  <|@  <|@
f <@~|@floating>@ <|@
tid j147 <|@
result v12|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
stamp: i64
=== Inputs ===
x: j146 
y: j187 
=== Succesors ===
=== Usages ===
v153 v189 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j146 y: j187  <|@  <|@
f <@~|@floating>@ <|@
tid v153 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j188 
y: j147 
=== Succesors ===
=== Usages ===
v159 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j188 y: j147  <|@  <|@
f <@*|@fixed>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v153 
=== Succesors ===
trueSuccessor: v158 
falseSuccessor: v157 
=== Usages ===
=== Predecessor ===
v151 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v153 #trueSuccessor: v158 #falseSuccessor: v157  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SHL v5|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = LEA [v8|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = AND v9|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOVSXD v10|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = ADD (x: v11|QWORD, y: v6|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v12|QWORD, y: v7|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4531623039136165729
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: v156 
=== Usages ===
=== Predecessor ===
v159 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v156  <|@  <|@
f <@*|@fixed>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v155 
=== Predecessor ===
v158 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 4561655409978648130
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: v189 
=== Usages ===
=== Predecessor ===
v159 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v189  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v422 
value: j147 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v176 
=== Usages ===
=== Predecessor ===
v157 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v422 value: j147 stateAfter: - lastLocationAccess: - #next: v176  <|@  <|@
f <@~|@floating>@ <|@
tid v426 <|@
result [v11|QWORD + v6|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j146 
index: j187 
=== Succesors ===
=== Usages ===
v176 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j146 index: j187  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v176 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
stamp: void
=== Inputs ===
address: v426 
=== Succesors ===
next: v179 
=== Usages ===
=== Predecessor ===
v189 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v426 #next: v179  <|@  <|@
f <@~|@floating>@ <|@
tid v427 <|@
result [v11|QWORD + v6|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j146 
index: j187 
=== Succesors ===
=== Usages ===
v179 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j146 index: j187  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v179 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
stamp: void
=== Inputs ===
address: v427 
=== Succesors ===
next: v182 
=== Usages ===
=== Predecessor ===
v176 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v427 #next: v182  <|@  <|@
f <@~|@floating>@ <|@
tid v428 <|@
result [v11|QWORD + v6|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j146 
index: j187 
=== Succesors ===
=== Usages ===
v182 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j146 index: j187  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
stamp: void
=== Inputs ===
address: v428 
=== Succesors ===
next: v185 
=== Usages ===
=== Predecessor ===
v179 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v428 #next: v185  <|@  <|@
f <@~|@floating>@ <|@
tid v429 <|@
result [v11|QWORD + v6|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j146 
index: j187 
=== Succesors ===
=== Usages ===
v185 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j146 index: j187  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
stamp: void
=== Inputs ===
address: v429 
=== Succesors ===
next: v190 
=== Usages ===
=== Predecessor ===
v182 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v429 #next: v190  <|@  <|@
f <@~|@floating>@ <|@
tid v424 <|@
result [v6|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j187 
index: - 
=== Succesors ===
=== Usages ===
v190 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j187 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v424 
value: i61 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v191 
=== Usages ===
=== Predecessor ===
v185 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v424 value: i61 stateAfter: - lastLocationAccess: - #next: v191  <|@  <|@
f <@~|@floating>@ <|@
tid v425 <|@
result [v6|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j187 
index: - 
=== Succesors ===
=== Usages ===
v191 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j187 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v425 
value: j138 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v195 
=== Usages ===
=== Predecessor ===
v190 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v425 value: j138 stateAfter: - lastLocationAccess: - #next: v195  <|@  <|@
f <@~|@floating>@ <|@
tid v430 <|@
result [v6|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j187 
index: - 
=== Succesors ===
=== Usages ===
v195 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j187 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v212 <|@
result meta{HotSpotType<[J, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
rawvalue: meta{HotSpotType<[J, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[J, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v195 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v430 
value: v212 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v162 
=== Usages ===
=== Predecessor ===
v191 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v430 value: v212 stateAfter: - lastLocationAccess: - #next: v162  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: a163 
=== Usages ===
=== Predecessor ===
v195 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a163  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a163 <|@
result v13|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j187 
=== Succesors ===
next: v165 
=== Usages ===
a168 
=== Predecessor ===
v162 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j187 #next: v165  <|@  <|@
f <@*|@fixed>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v166 
=== Predecessor ===
a163 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v12|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v11|QWORD + v6|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v11|QWORD + v6|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v11|QWORD + v6|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v11|QWORD + v6|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[J, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = MOVE v6|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v13|QWORD[.]] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4547274832207261694
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: v154 
=== Usages ===
=== Predecessor ===
v152 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v154  <|@  <|@
f <@*|@fixed>@ <|@
tid v154 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v155 
=== Predecessor ===
v150 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4547963008910863850
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v154 v156 
=== Succesors ===
next: a164 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v154 v156 #next: a164  <|@  <|@
f <@~|@floating>@ <|@
tid v137 <|@
result v14|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
rawvalue: meta{HotSpotType<[J, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[J, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a164 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a164 <|@
result v15|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v137 i61 i18 
=== Succesors ===
next: v167 
=== Usages ===
a168 
=== Predecessor ===
v155 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v137 i61 i18 #next: v167  <|@  <|@
f <@*|@fixed>@ <|@
tid v167 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v166 
=== Predecessor ===
a164 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[J, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.BitSet.ensureCapacity(BitSet.java:334) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v15|QWORD[.]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4562421827785068032
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a168 <|@
result v16|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v166 
values: a163 a164 
=== Succesors ===
=== Usages ===
v432 a115 v421 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v166 values: a163 a164  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v165 v167 
=== Succesors ===
next: v317 
=== Usages ===
a168 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v165 v167 #next: v317  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v317 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v227 
=== Usages ===
j318 j320 
=== Predecessor ===
v166 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v227  <|@  <|@
f <@~|@floating>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:130) [bci: 9]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i413 
y: i61 
=== Succesors ===
=== Usages ===
i110 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i413 y: i61  <|@  <|@
f <@~|@floating>@ <|@
tid i110 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v86 
trueValue: i413 
falseValue: i61 
=== Succesors ===
=== Usages ===
j214 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v86 trueValue: i413 falseValue: i61  <|@  <|@
f <@~|@floating>@ <|@
tid j214 <|@
result v18|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i110 
=== Succesors ===
=== Usages ===
j358 v432 j218 v224 v314 j348 j354 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i110  <|@  <|@
f <@~|@floating>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j214 
y: j138 
=== Succesors ===
=== Usages ===
v227 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j214 y: j138  <|@  <|@
f <@~|@floating>@ <|@
tid j357 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j358 j391 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j336 <|@
result long[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j337 j376 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j353 <|@
result long[-2|0xfffffffffffffffe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j354 j388 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j345 <|@
result long[4|0x4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j346 j382 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j347 <|@
result long[-4|0xfffffffffffffffc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j348 j383 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j94 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:134) [bci: 31]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j371 v406 v384 j329 j338 v349 j377 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v227 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v224 
=== Succesors ===
trueSuccessor: v225 
falseSuccessor: v226 
=== Usages ===
=== Predecessor ===
v317 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v224 #trueSuccessor: v225 #falseSuccessor: v226  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v16|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = CMOVE (falseValue: v5|DWORD, ~trueValue: v3|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOVSXD v17|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v18|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B22" 
    xhandlers
    flags 
    probability 4557918228157697536
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v225 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v244 
=== Usages ===
=== Predecessor ===
v227 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v244  <|@  <|@
f <@*|@fixed>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v245 
=== Predecessor ===
v225 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B10 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4557918228157697536
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v230 
=== Usages ===
=== Predecessor ===
v227 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v230  <|@  <|@
f <@~|@floating>@ <|@
tid v421 <|@
result [v16|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a168 
index: - 
=== Succesors ===
=== Usages ===
j320 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a168 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j320 <|@
result v19|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v317 
address: v421 
=== Succesors ===
=== Usages ===
v433 v435 v437 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v317 address: v421  <|@  <|@
f <@~|@floating>@ <|@
tid v420 <|@
result [v2|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a412 
=== Succesors ===
=== Usages ===
j318 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a412  <|@  <|@
f <@~|@floating>@ <|@
tid j318 <|@
result v20|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v317 
address: v420 
=== Succesors ===
=== Usages ===
v434 v436 v438 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v317 address: v420  <|@  <|@
f <@~|@floating>@ <|@
tid j348 <|@
result v21|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j214 
y: j347 
=== Succesors ===
=== Usages ===
v349 v351 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j214 y: j347  <|@  <|@
f <@~|@floating>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j348 
y: j94 
=== Succesors ===
=== Usages ===
v230 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j348 y: j94  <|@  <|@
f <@*|@fixed>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v349 
=== Succesors ===
trueSuccessor: v228 
falseSuccessor: v229 
=== Usages ===
=== Predecessor ===
v226 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v349 #trueSuccessor: v228 #falseSuccessor: v229  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = LEA [v16|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[*] = LEA [v2|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = LEA [v18|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v21|QWORD, y: v21|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B16" 
    xhandlers
    flags 
    probability 4555804130973390080
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v240 
=== Usages ===
=== Predecessor ===
v230 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v240  <|@  <|@
f <@*|@fixed>@ <|@
tid v240 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v241 
=== Predecessor ===
v228 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B12 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4548911028902956544
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v229 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v231 
=== Usages ===
=== Predecessor ===
v230 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v231  <|@  <|@
f <@*|@fixed>@ <|@
tid v231 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v232 
=== Predecessor ===
v229 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B37" 
    successors "B15" "B37" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4557918228157697536
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j338 <|@
result v22|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v232 
values: j94 j346 
=== Succesors ===
=== Usages ===
v438 j346 v437 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v232 values: j94 j346  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v232 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v231 
=== Succesors ===
next: v414 
=== Usages ===
v414 v236 v237 j338 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v231 #next: v414  <|@  <|@
f <@~|@floating>@ <|@
tid v438 <|@
result [v20|QWORD[*] + v22|QWORD * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j318 
index: j338 
=== Succesors ===
=== Usages ===
v414 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j318 index: j338  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v414 <|@
result v23|V256_QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: long
nullCheck: false
stamp: <i64,i64,i64,i64>
=== Inputs ===
stateBefore: - 
guard: v232 
address: v438 
=== Succesors ===
next: v403 
=== Usages ===
v403 
=== Predecessor ===
v232 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v232 address: v438 #next: v403  <|@  <|@
f <@~|@floating>@ <|@
tid v437 <|@
result [v19|QWORD[.] + v22|QWORD * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j320 
index: j338 
=== Succesors ===
=== Usages ===
v403 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j320 index: j338  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v437 
value: v414 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v239 
=== Usages ===
=== Predecessor ===
v414 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v437 value: v414 stateAfter: - lastLocationAccess: - #next: v239  <|@  <|@
f <@~|@floating>@ <|@
tid j346 <|@
result v24|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j338 
y: j345 
=== Succesors ===
=== Usages ===
j329 j338 v351 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j338 y: j345  <|@  <|@
f <@~|@floating>@ <|@
tid v351 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j348 
y: j346 
=== Succesors ===
=== Usages ===
v239 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j348 y: j346  <|@  <|@
f <@*|@fixed>@ <|@
tid v239 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v351 
=== Succesors ===
trueSuccessor: v236 
falseSuccessor: v238 
=== Usages ===
=== Predecessor ===
v403 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v351 #trueSuccessor: v236 #falseSuccessor: v238  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v22|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v23|V256_QWORD = H [v20|QWORD[*] + v22|QWORD * 8] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v19|QWORD[.] + v22|QWORD * 8], input: v23|V256_QWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = LEA [v22|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v24|QWORD, y: v21|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4548911028902956544
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v236 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v232 
=== Succesors ===
next: v242 
=== Usages ===
=== Predecessor ===
v239 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v232 #next: v242  <|@  <|@
f <@*|@fixed>@ <|@
tid v242 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v241 
=== Predecessor ===
v236 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v24|QWORD] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B12" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4557918228157697536
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j329 <|@
result v25|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v241 
values: j94 j346 
=== Succesors ===
=== Usages ===
v436 j337 j321 v355 v435 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v241 values: j94 j346  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v241 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v240 v242 
=== Succesors ===
next: v257 
=== Usages ===
j329 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v240 v242 #next: v257  <|@  <|@
f <@~|@floating>@ <|@
tid j354 <|@
result v26|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j214 
y: j353 
=== Succesors ===
=== Usages ===
v355 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j214 y: j353  <|@  <|@
f <@~|@floating>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j354 
y: j329 
=== Succesors ===
=== Usages ===
v257 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j354 y: j329  <|@  <|@
f <@*|@fixed>@ <|@
tid v257 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v355 
=== Succesors ===
trueSuccessor: v256 
falseSuccessor: v255 
=== Usages ===
=== Predecessor ===
v241 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v355 #trueSuccessor: v256 #falseSuccessor: v255  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v25|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = LEA [v18|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v25|QWORD, y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4548911028902956544
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v256 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v260 
=== Usages ===
=== Predecessor ===
v257 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v260  <|@  <|@
f <@*|@fixed>@ <|@
tid v260 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v252 
=== Predecessor ===
v256 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v25|QWORD] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4555804130973390080
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v415 
=== Usages ===
v415 
=== Predecessor ===
v257 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v415  <|@  <|@
f <@~|@floating>@ <|@
tid v436 <|@
result [v20|QWORD[*] + v25|QWORD * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j318 
index: j329 
=== Succesors ===
=== Usages ===
v415 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j318 index: j329  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v415 <|@
result v27|V128_QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: long
nullCheck: false
stamp: <i64,i64>
=== Inputs ===
stateBefore: - 
guard: v255 
address: v436 
=== Succesors ===
next: v401 
=== Usages ===
v401 
=== Predecessor ===
v255 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v255 address: v436 #next: v401  <|@  <|@
f <@~|@floating>@ <|@
tid v435 <|@
result [v19|QWORD[.] + v25|QWORD * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j320 
index: j329 
=== Succesors ===
=== Usages ===
v401 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j320 index: j329  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v435 
value: v415 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v251 
=== Usages ===
=== Predecessor ===
v415 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v435 value: v415 stateAfter: - lastLocationAccess: - #next: v251  <|@  <|@
f <@~|@floating>@ <|@
tid j337 <|@
result v28|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j329 
y: j336 
=== Succesors ===
=== Usages ===
j321 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j329 y: j336  <|@  <|@
f <@*|@fixed>@ <|@
tid v251 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v252 
=== Predecessor ===
v401 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|V128_QWORD = H [v20|QWORD[*] + v25|QWORD * 8] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v19|QWORD[.] + v25|QWORD * 8], input: v27|V128_QWORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = LEA [v25|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v28|QWORD] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4557918228157697536
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j321 <|@
result v29|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v252 
values: j337 j329 
=== Succesors ===
=== Usages ===
v434 v359 v433 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v252 values: j337 j329  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v252 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v251 v260 
=== Succesors ===
next: v263 
=== Usages ===
j321 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v251 v260 #next: v263  <|@  <|@
f <@~|@floating>@ <|@
tid j358 <|@
result v30|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j214 
y: j357 
=== Succesors ===
=== Usages ===
v359 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j214 y: j357  <|@  <|@
f <@~|@floating>@ <|@
tid v359 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j358 
y: j321 
=== Succesors ===
=== Usages ===
v263 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j358 y: j321  <|@  <|@
f <@*|@fixed>@ <|@
tid v263 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v359 
=== Succesors ===
trueSuccessor: v262 
falseSuccessor: v261 
=== Usages ===
=== Predecessor ===
v252 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v359 #trueSuccessor: v262 #falseSuccessor: v261  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = DEC v18|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v29|QWORD, y: v30|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4548911028902956544
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v262 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v266 
=== Usages ===
=== Predecessor ===
v263 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v266  <|@  <|@
f <@*|@fixed>@ <|@
tid v266 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v245 
=== Predecessor ===
v262 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4555804130973390080
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v261 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: j416 
=== Usages ===
j416 
=== Predecessor ===
v263 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j416  <|@  <|@
f <@~|@floating>@ <|@
tid v434 <|@
result [v20|QWORD[*] + v29|QWORD * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j318 
index: j321 
=== Succesors ===
=== Usages ===
j416 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j318 index: j321  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j416 <|@
result v31|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: long
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: v261 
address: v434 
=== Succesors ===
next: v399 
=== Usages ===
v399 
=== Predecessor ===
v261 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v261 address: v434 #next: v399  <|@  <|@
f <@~|@floating>@ <|@
tid v433 <|@
result [v19|QWORD[.] + v29|QWORD * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j320 
index: j321 
=== Succesors ===
=== Usages ===
v399 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j320 index: j321  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v433 
value: j416 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v254 
=== Usages ===
=== Predecessor ===
j416 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v433 value: j416 stateAfter: - lastLocationAccess: - #next: v254  <|@  <|@
f <@*|@fixed>@ <|@
tid v254 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v245 
=== Predecessor ===
v399 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOV [v20|QWORD[*] + v29|QWORD * 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v19|QWORD[.] + v29|QWORD * 8], y: v31|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B10" "B21" "B20" 
    successors "B23" "B35" 
    xhandlers
    flags 
    probability 4562421827785068032
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v244 v254 v266 
=== Succesors ===
next: v362 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v244 v254 v266 #next: v362  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v362 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v273 
=== Usages ===
j364 
=== Predecessor ===
v245 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v273  <|@  <|@
f <@~|@floating>@ <|@
tid j213 <|@
result v32|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i61 
=== Succesors ===
=== Usages ===
j218 v314 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i61  <|@  <|@
f <@~|@floating>@ <|@
tid v314 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j214 
y: j213 
=== Succesors ===
=== Usages ===
v273 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j214 y: j213  <|@  <|@
f <@*|@fixed>@ <|@
tid v273 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v314 
=== Succesors ===
trueSuccessor: v272 
falseSuccessor: v271 
=== Usages ===
=== Predecessor ===
v362 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v314 #trueSuccessor: v272 #falseSuccessor: v271  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = MOVSXD v5|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v32|QWORD, y: v18|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4557918228157697536
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v272 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v276 
=== Usages ===
=== Predecessor ===
v273 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v276  <|@  <|@
f <@~|@floating>@ <|@
tid v432 <|@
result [v16|QWORD[.] + v18|QWORD * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: a168 
index: j214 
=== Succesors ===
=== Usages ===
j364 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a168 index: j214  <|@  <|@
f <@~|@floating>@ <|@
tid j364 <|@
result v33|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v362 
address: v432 
=== Succesors ===
=== Usages ===
v439 v440 v441 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v362 address: v432  <|@  <|@
f <@~|@floating>@ <|@
tid j218 <|@
result v34|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j213 
y: j214 
=== Succesors ===
=== Usages ===
j391 j383 j388 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j213 y: j214  <|@  <|@
f <@~|@floating>@ <|@
tid j383 <|@
result v35|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j218 
y: j347 
=== Succesors ===
=== Usages ===
v384 v386 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j218 y: j347  <|@  <|@
f <@~|@floating>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j383 
y: j94 
=== Succesors ===
=== Usages ===
v276 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j383 y: j94  <|@  <|@
f <@*|@fixed>@ <|@
tid v276 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v384 
=== Succesors ===
trueSuccessor: v274 
falseSuccessor: v275 
=== Usages ===
=== Predecessor ===
v272 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v384 #trueSuccessor: v274 #falseSuccessor: v275  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.] = LEA [v16|QWORD[.] + v18|QWORD * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = SUB (x: v32|QWORD, ~y: v18|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = LEA [v34|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v35|QWORD, y: v35|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 4555804130973390080
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v274 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v285 
=== Usages ===
=== Predecessor ===
v276 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v285  <|@  <|@
f <@*|@fixed>@ <|@
tid v285 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v286 
=== Predecessor ===
v274 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B24 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4548911028902956544
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v275 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v277 
=== Usages ===
=== Predecessor ===
v276 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v277  <|@  <|@
f <@*|@fixed>@ <|@
tid v277 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v278 
=== Predecessor ===
v275 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B34" 
    successors "B27" "B34" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4557918228157697536
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j377 <|@
result v36|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v278 
values: j94 j382 
=== Succesors ===
=== Usages ===
v441 j382 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v278 values: j94 j382  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v278 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v277 
=== Succesors ===
next: v409 
=== Usages ===
j377 v281 v282 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v277 #next: v409  <|@  <|@
f <@~|@floating>@ <|@
tid v441 <|@
result [v33|QWORD[.] + v36|QWORD * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j364 
index: j377 
=== Succesors ===
=== Usages ===
v409 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j364 index: j377  <|@  <|@
f <@~|@floating>@ <|@
tid v410 <|@
result v37|V256_QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i64 [0] ⇈0000000000000000,i64 [0] ⇈0000000000000000,i64 [0] ⇈0000000000000000,i64 [0] ⇈0000000000000000>
stampKind: <i64,i64,i64,i64>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v409 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v409 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v441 
value: v410 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v284 
=== Usages ===
=== Predecessor ===
v278 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v441 value: v410 stateAfter: - lastLocationAccess: - #next: v284  <|@  <|@
f <@~|@floating>@ <|@
tid j382 <|@
result v38|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j377 
y: j345 
=== Succesors ===
=== Usages ===
j371 j377 v386 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j377 y: j345  <|@  <|@
f <@~|@floating>@ <|@
tid v386 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j383 
y: j382 
=== Succesors ===
=== Usages ===
v284 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j383 y: j382  <|@  <|@
f <@*|@fixed>@ <|@
tid v284 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v386 
=== Succesors ===
trueSuccessor: v281 
falseSuccessor: v283 
=== Usages ===
=== Predecessor ===
v409 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v386 #trueSuccessor: v281 #falseSuccessor: v283  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v36|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|V256_QWORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v33|QWORD[.] + v36|QWORD * 8], input: v37|V256_QWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = LEA [v36|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v38|QWORD, y: v35|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4548911028902956544
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v278 
=== Succesors ===
next: v287 
=== Usages ===
=== Predecessor ===
v284 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v278 #next: v287  <|@  <|@
f <@*|@fixed>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v286 
=== Predecessor ===
v281 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v38|QWORD] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B24" "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4557918228157697536
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j371 <|@
result v39|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v286 
values: j94 j382 
=== Succesors ===
=== Usages ===
v440 j376 j365 v389 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v286 values: j94 j382  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v285 v287 
=== Succesors ===
next: v302 
=== Usages ===
j371 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v285 v287 #next: v302  <|@  <|@
f <@~|@floating>@ <|@
tid j388 <|@
result v40|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j218 
y: j353 
=== Succesors ===
=== Usages ===
v389 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j218 y: j353  <|@  <|@
f <@~|@floating>@ <|@
tid v389 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j388 
y: j371 
=== Succesors ===
=== Usages ===
v302 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j388 y: j371  <|@  <|@
f <@*|@fixed>@ <|@
tid v302 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v389 
=== Succesors ===
trueSuccessor: v301 
falseSuccessor: v300 
=== Usages ===
=== Predecessor ===
v286 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v389 #trueSuccessor: v301 #falseSuccessor: v300  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v39|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = LEA [v34|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v39|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4548911028902956544
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v301 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v305 
=== Usages ===
=== Predecessor ===
v302 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v305  <|@  <|@
f <@*|@fixed>@ <|@
tid v305 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v297 
=== Predecessor ===
v301 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v39|QWORD] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4555804130973390080
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v408 
=== Usages ===
=== Predecessor ===
v302 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v408  <|@  <|@
f <@~|@floating>@ <|@
tid v440 <|@
result [v33|QWORD[.] + v39|QWORD * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j364 
index: j371 
=== Succesors ===
=== Usages ===
v408 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j364 index: j371  <|@  <|@
f <@~|@floating>@ <|@
tid v411 <|@
result v41|V128_QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0>
stableDimension: 0
stamp: <i64 [0] ⇈0000000000000000,i64 [0] ⇈0000000000000000>
stampKind: <i64,i64>
value: SIMD<0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v408 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v408 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v440 
value: v411 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v296 
=== Usages ===
=== Predecessor ===
v300 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v440 value: v411 stateAfter: - lastLocationAccess: - #next: v296  <|@  <|@
f <@~|@floating>@ <|@
tid j376 <|@
result v42|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j371 
y: j336 
=== Succesors ===
=== Usages ===
j365 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j371 y: j336  <|@  <|@
f <@*|@fixed>@ <|@
tid v296 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v297 
=== Predecessor ===
v408 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v41|V128_QWORD = L oc: SIMD<0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v33|QWORD[.] + v39|QWORD * 8], input: v41|V128_QWORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = LEA [v39|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v42|QWORD] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4557918228157697536
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j365 <|@
result v43|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v297 
values: j376 j371 
=== Succesors ===
=== Usages ===
v439 v392 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v297 values: j376 j371  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v297 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v296 v305 
=== Succesors ===
next: v308 
=== Usages ===
j365 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v296 v305 #next: v308  <|@  <|@
f <@~|@floating>@ <|@
tid j391 <|@
result v44|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j218 
y: j357 
=== Succesors ===
=== Usages ===
v392 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j218 y: j357  <|@  <|@
f <@~|@floating>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j391 
y: j365 
=== Succesors ===
=== Usages ===
v308 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j391 y: j365  <|@  <|@
f <@*|@fixed>@ <|@
tid v308 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v392 
=== Succesors ===
trueSuccessor: v307 
falseSuccessor: v306 
=== Usages ===
=== Predecessor ===
v297 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v392 #trueSuccessor: v307 #falseSuccessor: v306  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v43|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = DEC v34|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v43|QWORD, y: v44|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4548911028902956544
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v307 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v311 
=== Usages ===
=== Predecessor ===
v308 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v311  <|@  <|@
f <@*|@fixed>@ <|@
tid v311 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v290 
=== Predecessor ===
v307 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4555804130973390080
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v306 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v406 
=== Usages ===
=== Predecessor ===
v308 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v406  <|@  <|@
f <@~|@floating>@ <|@
tid v439 <|@
result [v33|QWORD[.] + v43|QWORD * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j364 
index: j365 
=== Succesors ===
=== Usages ===
v406 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j364 index: j365  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v406 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v439 
value: j94 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v299 
=== Usages ===
=== Predecessor ===
v306 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v439 value: j94 stateAfter: - lastLocationAccess: - #next: v299  <|@  <|@
f <@*|@fixed>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v290 
=== Predecessor ===
v406 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v33|QWORD[.] + v43|QWORD * 8], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4555804130973390080
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v282 
=== Usages ===
=== Predecessor ===
v284 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v282  <|@  <|@
f <@*|@fixed>@ <|@
tid v282 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v278 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v283 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v278  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v38|QWORD] destination: B34 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B36" 
    xhandlers
    flags 
    probability 4557918228157697536
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v271 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v289 
=== Usages ===
=== Predecessor ===
v273 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v289  <|@  <|@
f <@*|@fixed>@ <|@
tid v289 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v290 
=== Predecessor ===
v271 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B33" "B32" 
    successors 
    xhandlers
    flags 
    probability 4562421827785068032
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v290 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v289 v299 v311 
=== Succesors ===
next: a115 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v289 v299 v311 #next: a115  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a115 <|@
result v16|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a168 
=== Succesors ===
next: v55 
=== Usages ===
a54 
=== Predecessor ===
v290 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a168 #next: v55  <|@  <|@
f <@~|@floating>@ <|@
tid a54 <|@
result v45|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 30]
op: Compress
stamp: n! -
=== Inputs ===
value: a115 
=== Succesors ===
=== Usages ===
v55 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a115  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: BitSet.words
nodeSourcePosition: at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 30]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v417 
value: a54 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j203 
=== Usages ===
=== Predecessor ===
a115 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v417 value: a54 stateAfter: - lastLocationAccess: - #next: j203  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j203 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 30]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v209 
=== Usages ===
j205 
=== Predecessor ===
v55 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v209  <|@  <|@
f <@~|@floating>@ <|@
tid i204 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 30]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j205 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j205 <|@
result v46|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 30]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j203 
y: i204 
=== Succesors ===
=== Usages ===
v431 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j203 y: i204  <|@  <|@
f <@~|@floating>@ <|@
tid j208 <|@
result v47|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 30]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v431 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v431 <|@
result [v46|QWORD[*] + v47|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j205 
index: j208 
=== Succesors ===
=== Usages ===
v209 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j205 index: j208  <|@  <|@
f <@~|@floating>@ <|@
tid i60 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.BitSet.ensureCapacity(BitSet.java:338) [bci: 35]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v59 v209 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 30]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v431 
value: i60 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v59 
=== Usages ===
=== Predecessor ===
j203 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v431 value: i60 stateAfter: - lastLocationAccess: - #next: v59  <|@  <|@
f <@~|@floating>@ <|@
tid v419 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v59 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: BitSet.sizeIsSticky
nodeSourcePosition: at java.util.BitSet.ensureCapacity(BitSet.java:338) [bci: 35]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v419 
value: i60 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v33 
=== Usages ===
=== Predecessor ===
v209 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v419 value: i60 stateAfter: - lastLocationAccess: - #next: v33  <|@  <|@
f <@*|@fixed>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.ensureCapacity(BitSet.java:340) [bci: 38]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v59 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v45|DWORD[.] = COMPRESSPOINTER (input: v16|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@1e4c0605 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v45|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v46|QWORD[*] + v47|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + 16], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B14" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4555804130973390080
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v237 
=== Usages ===
=== Predecessor ===
v239 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v237  <|@  <|@
f <@*|@fixed>@ <|@
tid v237 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v232 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v238 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v232  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v24|QWORD] destination: B37 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607173084806099193
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.ensureCapacity(BitSet.java:340) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v32 
=== Usages ===
=== Predecessor ===
v9 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v32  <|@  <|@
f <@*|@fixed>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.ensureCapacity(BitSet.java:340) [bci: 38]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v8 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B38" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7b674b86 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[.] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.BitSet.ensureCapacity(BitSet.java:334) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v3|DWORD = MOV [v2|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v1|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0010362814959713473 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607173084806099193
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4562421827785068032
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = SHL v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v1|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = CMOVE (falseValue: v4|DWORD, ~trueValue: v1|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B7" 
    xhandlers
    flags 
    probability 4562421827785068032
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4561741432066598400
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SHL v5|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = LEA [v8|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = AND v9|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOVSXD v10|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = ADD (x: v11|QWORD, y: v6|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v12|QWORD, y: v7|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 4561655409978648130
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v12|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v11|QWORD + v6|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v11|QWORD + v6|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v11|QWORD + v6|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v11|QWORD + v6|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[J, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = MOVE v6|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v13|QWORD[.]] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4562421827785068032
    begin_IR
      LIR
      nr   -1  <|@ instruction [v16|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = CMOVE (falseValue: v5|DWORD, ~trueValue: v3|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOVSXD v17|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v18|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4557918228157697536
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = LEA [v16|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[*] = LEA [v2|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = LEA [v18|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v21|QWORD, y: v21|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B16" 
    xhandlers
    flags 
    probability 4555804130973390080
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B12 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B12" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4557918228157697536
    begin_IR
      LIR
      nr   -1  <|@ instruction [v25|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = LEA [v18|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v25|QWORD, y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4555804130973390080
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|V128_QWORD = H [v20|QWORD[*] + v25|QWORD * 8] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v19|QWORD[.] + v25|QWORD * 8], input: v27|V128_QWORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = LEA [v25|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v28|QWORD] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4557918228157697536
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = DEC v18|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v29|QWORD, y: v30|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4555804130973390080
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOV [v20|QWORD[*] + v29|QWORD * 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v19|QWORD[.] + v29|QWORD * 8], y: v31|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B10" "B21" "B20" 
    successors "B23" "B35" 
    xhandlers
    flags 
    probability 4562421827785068032
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = MOVSXD v5|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v32|QWORD, y: v18|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B36" 
    xhandlers
    flags 
    probability 4557918228157697536
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B33" "B32" 
    successors 
    xhandlers
    flags 
    probability 4562421827785068032
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v45|DWORD[.] = COMPRESSPOINTER (input: v16|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@1e4c0605 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v45|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v46|QWORD[*] + v47|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + 16], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B22" 
    xhandlers
    flags 
    probability 4557918228157697536
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B10 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4557918228157697536
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.] = LEA [v16|QWORD[.] + v18|QWORD * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = SUB (x: v32|QWORD, ~y: v18|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = LEA [v34|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v35|QWORD, y: v35|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 4555804130973390080
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B24 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B24" "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4557918228157697536
    begin_IR
      LIR
      nr   -1  <|@ instruction [v39|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = LEA [v34|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v39|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4555804130973390080
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v41|V128_QWORD = L oc: SIMD<0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v33|QWORD[.] + v39|QWORD * 8], input: v41|V128_QWORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = LEA [v39|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v42|QWORD] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4557918228157697536
    begin_IR
      LIR
      nr   -1  <|@ instruction [v43|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = DEC v34|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v43|QWORD, y: v44|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4555804130973390080
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v33|QWORD[.] + v43|QWORD * 8], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4548911028902956544
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v25|QWORD] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4548911028902956544
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4548911028902956544
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4555804130973390080
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v38|QWORD] destination: B34 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B34" 
    successors "B27" "B34" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4557918228157697536
    begin_IR
      LIR
      nr   -1  <|@ instruction [v36|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|V256_QWORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v33|QWORD[.] + v36|QWORD * 8], input: v37|V256_QWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = LEA [v36|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v38|QWORD, y: v35|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4548911028902956544
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4548911028902956544
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v38|QWORD] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4548911028902956544
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B14" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4555804130973390080
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v24|QWORD] destination: B37 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B37" 
    successors "B15" "B37" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4557918228157697536
    begin_IR
      LIR
      nr   -1  <|@ instruction [v22|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v23|V256_QWORD = H [v20|QWORD[*] + v22|QWORD * 8] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v19|QWORD[.] + v22|QWORD * 8], input: v23|V256_QWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = LEA [v22|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v24|QWORD, y: v21|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4548911028902956544
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v39|QWORD] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4548911028902956544
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v24|QWORD] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4547274832207261694
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4547963008910863850
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[J, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.BitSet.ensureCapacity(BitSet.java:334) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v15|QWORD[.]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4531623039136165729
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -21601 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.BitSet.ensureCapacity(BitSet.java:334) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // words:long[]
     4: arraylength   
     5: iload_1       
     6: if_icmpge     38
     9: iconst_2      
    10: aload_0       
    11: getfield      #2          // words:long[]
    14: arraylength   
    15: imul          
    16: iload_1       
    17: invokestatic  #32         // java.lang.Math.max:(int, int)int
    20: istore_2      
    21: aload_0       
    22: aload_0       
    23: getfield      #2          // words:long[]
    26: iload_2       
    27: invokestatic  #14         // java.util.Arrays.copyOf:(long[], int)long[]
    30: putfield      #2          // words:long[]
    33: aload_0       
    34: iconst_0      
    35: putfield      #5          // sizeIsSticky:boolean
    38: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B38" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7b674b86 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r14|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction r10|DWORD[.] = MOV [r13|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   12  <|@ st <@st|@reference-map: [r10:0, r13:0]
live-base-pointers: []
java.util.BitSet.ensureCapacity(BitSet.java:334) [bci: 0]
locals: r13|QWORD[.] r14|DWORD - 
>@ <|@ instruction r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   14  <|@ instruction CMP (x: r14|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   16  <|@ instruction BRANCH trueDestinationProbability: 0.0010362814959713473 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607173084806099193
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  366  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4562421827785068032
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction rsi|DWORD = SHL r11|DWORD size: DWORD <|@ <|@
      nr   22  <|@ instruction CMP (x: r14|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr   24  <|@ instruction rsi|DWORD = CMOVE (falseValue: rsi|DWORD, ~trueValue: r14|DWORD) condition: > <|@ <|@
      nr   26  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B7" 
    xhandlers
    flags 
    probability 4562421827785068032
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   42  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   44  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   46  <|@ instruction CMP rsi|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   48  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4561741432066598400
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   52  <|@ instruction r8|DWORD = SHL rsi|DWORD y: 3 size: DWORD <|@ <|@
      nr   54  <|@ instruction r8|DWORD = LEA [r8|DWORD + 23] size: DWORD <|@ <|@
      nr   56  <|@ instruction r8|DWORD = AND r8|DWORD y: -8 size: DWORD <|@ <|@
      nr   58  <|@ instruction r8|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr   60  <|@ instruction r9|QWORD = ADD (x: r8|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr   62  <|@ instruction CMP (x: r9|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr   64  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 4561655409978648130
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   78  <|@ instruction MOV (x: [r15|QWORD + 96], y: r9|QWORD) size: QWORD <|@ <|@
      nr   80  <|@ instruction AMD64PREFETCH ~[r8|QWORD + rdx|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   82  <|@ instruction AMD64PREFETCH ~[r8|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   84  <|@ instruction AMD64PREFETCH ~[r8|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   86  <|@ instruction AMD64PREFETCH ~[r8|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   88  <|@ instruction MOV (x: [rdx|QWORD + 12], y: rsi|DWORD) size: DWORD <|@ <|@
      nr   90  <|@ instruction MOV [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr   92  <|@ instruction MOV [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[J, resolved>;compressed} <|@ <|@
      nr   94  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr   96  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   98  <|@ instruction r14|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction stack:28|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  102  <|@ instruction stack:40|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction r13|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4562421827785068032
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  140  <|@ instruction CMP (x: r14|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  142  <|@ instruction rsi|DWORD = CMOVE (falseValue: r14|DWORD, ~trueValue: r13|DWORD) condition: > <|@ <|@
      nr  144  <|@ instruction r10|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr  146  <|@ instruction CMP r10|QWORD y: 1 size: QWORD <|@ <|@
      nr  148  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4557918228157697536
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  156  <|@ instruction r11|DWORD[.] = MOVE stack:28|DWORD[.] moveKind: DWORD <|@ <|@
      nr  158  <|@ instruction r8|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  160  <|@ instruction r11|QWORD[*] = LEA [r11|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr  162  <|@ instruction r9|QWORD = LEA [r10|QWORD - 4] size: QWORD <|@ <|@
      nr  164  <|@ instruction TEST (x: r9|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  166  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B16" 
    xhandlers
    flags 
    probability 4555804130973390080
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  170  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B12 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B12" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4557918228157697536
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  198  <|@ instruction r9|QWORD = LEA [r10|QWORD - 2] size: QWORD <|@ <|@
      nr  200  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  202  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4555804130973390080
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  210  <|@ instruction xmm0|V128_QWORD = H [r11|QWORD[*] + rcx|QWORD * 8] nZ: XMM oh: VMOVDQU <|@ <|@
      nr  212  <|@ instruction J (address: [r8|QWORD[.] + rcx|QWORD * 8], input: xmm0|V128_QWORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  214  <|@ instruction r9|QWORD = LEA [rcx|QWORD + 2] size: QWORD <|@ <|@
      nr  216  <|@ instruction rcx|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4557918228157697536
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  222  <|@ instruction r9|QWORD = DEC r10|QWORD size: QWORD <|@ <|@
      nr  224  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  226  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4555804130973390080
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  234  <|@ instruction r11|QWORD = MOV [r11|QWORD[*] + rcx|QWORD * 8] size: QWORD <|@ <|@
      nr  236  <|@ instruction MOV (x: [r8|QWORD[.] + rcx|QWORD * 8], y: r11|QWORD) size: QWORD <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B10" "B21" "B20" 
    successors "B23" "B35" 
    xhandlers
    flags 
    probability 4562421827785068032
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  242  <|@ instruction r11|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr  244  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  246  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B36" 
    xhandlers
    flags 
    probability 4557918228157697536
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  340  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  342  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B33" "B32" 
    successors 
    xhandlers
    flags 
    probability 4562421827785068032
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  346  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@1e4c0605 encoding: base: 0 shift: 3 <|@ <|@
      nr  348  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  350  <|@ instruction r13|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  352  <|@ instruction r11|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  354  <|@ instruction MOVB (x: [r13|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  356  <|@ instruction MOVB (x: [r10|QWORD[.] + 16], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  358  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B22" 
    xhandlers
    flags 
    probability 4557918228157697536
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  152  <|@ instruction JUMP ~[] destination: B10 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4557918228157697536
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  250  <|@ instruction r8|QWORD[.] = LEA [rax|QWORD[.] + r10|QWORD * 8 + 16] size: QWORD <|@ <|@
      nr  252  <|@ instruction r11|QWORD = SUB (x: r11|QWORD, ~y: r10|QWORD) size: QWORD <|@ <|@
      nr  254  <|@ instruction r10|QWORD = LEA [r11|QWORD - 4] size: QWORD <|@ <|@
      nr  256  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  258  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 4555804130973390080
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  262  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  264  <|@ instruction JUMP ~[] destination: B24 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B24" "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4557918228157697536
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  290  <|@ instruction r10|QWORD = LEA [r11|QWORD - 2] size: QWORD <|@ <|@
      nr  292  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  294  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4555804130973390080
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  302  <|@ instruction xmm0|V128_QWORD = L oc: SIMD<0,0> <|@ <|@
      nr  304  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 8], input: xmm0|V128_QWORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  306  <|@ instruction r10|QWORD = LEA [r9|QWORD + 2] size: QWORD <|@ <|@
      nr  308  <|@ instruction r9|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  310  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4557918228157697536
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  314  <|@ instruction r11|QWORD = DEC r11|QWORD size: QWORD <|@ <|@
      nr  316  <|@ instruction CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  318  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4555804130973390080
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  328  <|@ instruction MOV (x: [r8|QWORD[.] + r9|QWORD * 8], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  330  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction JUMP ~[] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4548911028902956544
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  206  <|@ instruction JUMP ~[] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4548911028902956544
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4548911028902956544
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  268  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  270  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4555804130973390080
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B34 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B34" 
    successors "B27" "B34" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4557918228157697536
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  274  <|@ instruction xmm0|V256_QWORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  276  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 8], input: xmm0|V256_QWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  278  <|@ instruction r9|QWORD = LEA [r9|QWORD + 4] size: QWORD <|@ <|@
      nr  280  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  282  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4548911028902956544
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  322  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  324  <|@ instruction JUMP ~[] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4548911028902956544
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  286  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4548911028902956544
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  176  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  178  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B14" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4555804130973390080
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  362  <|@ instruction JUMP ~[] destination: B37 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B37" 
    successors "B15" "B37" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4557918228157697536
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  182  <|@ instruction xmm0|V256_QWORD = H [r11|QWORD[*] + rcx|QWORD * 8] nZ: YMM oh: VMOVDQU <|@ <|@
      nr  184  <|@ instruction J (address: [r8|QWORD[.] + rcx|QWORD * 8], input: xmm0|V256_QWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  186  <|@ instruction rcx|QWORD = LEA [rcx|QWORD + 4] size: QWORD <|@ <|@
      nr  188  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  190  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4548911028902956544
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  298  <|@ instruction JUMP ~[] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4548911028902956544
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  194  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4547274832207261694
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  110  <|@ instruction stack:28|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction stack:32|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  114  <|@ instruction stack:40|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  116  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4547963008910863850
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  120  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[J, resolved>} <|@ <|@
      nr  122  <|@ instruction r8|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  124  <|@ instruction rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  126  <|@ instruction rdx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  128  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  130  <|@ instruction r13|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  132  <|@ instruction r14|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  134  <|@ st <@st|@reference-map: [stack:8, stack:20]
live-base-pointers: []
java.util.BitSet.ensureCapacity(BitSet.java:334) [bci: 0]
locals: stack:40|QWORD[.] stack:32|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  136  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4531623039136165729
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   68  <|@ instruction stack:28|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction stack:32|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr   72  <|@ instruction stack:40|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction MOV [r15|QWORD + 668] y: -21601 size: DWORD <|@ <|@
      nr   36  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   38  <|@ st <@st|@reference-map: [r10:0]
live-base-pointers: []
java.util.BitSet.ensureCapacity(BitSet.java:334) [bci: 0]
locals: r10|QWORD[.] r14|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // words:long[]
     4: arraylength   
     5: iload_1       
     6: if_icmpge     38
     9: iconst_2      
    10: aload_0       
    11: getfield      #2          // words:long[]
    14: arraylength   
    15: imul          
    16: iload_1       
    17: invokestatic  #32         // java.lang.Math.max:(int, int)int
    20: istore_2      
    21: aload_0       
    22: aload_0       
    23: getfield      #2          // words:long[]
    26: iload_2       
    27: invokestatic  #14         // java.util.Arrays.copyOf:(long[], int)long[]
    30: putfield      #2          // words:long[]
    33: aload_0       
    34: iconst_0      
    35: putfield      #5          // sizeIsSticky:boolean
    38: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B38" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7b674b86 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r14|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction r10|DWORD[.] = MOV [r13|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   12  <|@ st <@st|@reference-map: [r10:0, r13:0]
live-base-pointers: []
java.util.BitSet.ensureCapacity(BitSet.java:334) [bci: 0]
locals: r13|QWORD[.] r14|DWORD - 
>@ <|@ instruction r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   14  <|@ instruction CMP (x: r14|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   16  <|@ instruction BRANCH trueDestinationProbability: 0.0010362814959713473 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607173084806099193
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  366  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4562421827785068032
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction rsi|DWORD = SHL r11|DWORD size: DWORD <|@ <|@
      nr   22  <|@ instruction CMP (x: r14|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr   24  <|@ instruction rsi|DWORD = CMOVE (falseValue: rsi|DWORD, ~trueValue: r14|DWORD) condition: > <|@ <|@
      nr   26  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4562421827785068032
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   42  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   44  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   46  <|@ instruction CMP rsi|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   48  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" "B6" 
    xhandlers
    flags 
    probability 4561741432066598400
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   52  <|@ instruction r8|DWORD = SHL rsi|DWORD y: 3 size: DWORD <|@ <|@
      nr   54  <|@ instruction r8|DWORD = LEA [r8|DWORD + 23] size: DWORD <|@ <|@
      nr   56  <|@ instruction r8|DWORD = AND r8|DWORD y: -8 size: DWORD <|@ <|@
      nr   58  <|@ instruction r8|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr   60  <|@ instruction r9|QWORD = ADD (x: r8|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr   62  <|@ instruction CMP (x: r9|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr   64  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B8 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 4561655409978648130
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   78  <|@ instruction MOV (x: [r15|QWORD + 96], y: r9|QWORD) size: QWORD <|@ <|@
      nr   80  <|@ instruction AMD64PREFETCH ~[r8|QWORD + rdx|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   82  <|@ instruction AMD64PREFETCH ~[r8|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   84  <|@ instruction AMD64PREFETCH ~[r8|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   86  <|@ instruction AMD64PREFETCH ~[r8|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   88  <|@ instruction MOV (x: [rdx|QWORD + 12], y: rsi|DWORD) size: DWORD <|@ <|@
      nr   90  <|@ instruction MOV [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr   92  <|@ instruction MOV [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[J, resolved>;compressed} <|@ <|@
      nr   94  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr   96  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   98  <|@ instruction r14|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction stack:28|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  102  <|@ instruction stack:40|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction r13|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B22" "B11" 
    xhandlers
    flags 
    probability 4562421827785068032
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  140  <|@ instruction CMP (x: r14|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  142  <|@ instruction rsi|DWORD = CMOVE (falseValue: r14|DWORD, ~trueValue: r13|DWORD) condition: > <|@ <|@
      nr  144  <|@ instruction r10|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr  146  <|@ instruction CMP r10|QWORD y: 1 size: QWORD <|@ <|@
      nr  148  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B9 -> B22 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" "B14" 
    xhandlers
    flags 
    probability 4557918228157697536
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  156  <|@ instruction r11|DWORD[.] = MOVE stack:28|DWORD[.] moveKind: DWORD <|@ <|@
      nr  158  <|@ instruction r8|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  160  <|@ instruction r11|QWORD[*] = LEA [r11|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr  162  <|@ instruction r9|QWORD = LEA [r10|QWORD - 4] size: QWORD <|@ <|@
      nr  164  <|@ instruction TEST (x: r9|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  170  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  166  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B11 -> B16 falseDestination: B11 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" "B14" 
    successors "B19" "B18" 
    xhandlers
    flags 
    probability 4557918228157697536
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  198  <|@ instruction r9|QWORD = LEA [r10|QWORD - 2] size: QWORD <|@ <|@
      nr  200  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  202  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B16 -> B19 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4555804130973390080
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  210  <|@ instruction xmm0|V128_QWORD = H [r11|QWORD[*] + rcx|QWORD * 8] nZ: XMM oh: VMOVDQU <|@ <|@
      nr  212  <|@ instruction J (address: [r8|QWORD[.] + rcx|QWORD * 8], input: xmm0|V128_QWORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  214  <|@ instruction r9|QWORD = LEA [rcx|QWORD + 2] size: QWORD <|@ <|@
      nr  216  <|@ instruction rcx|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B16" 
    successors "B22" "B21" 
    xhandlers
    flags 
    probability 4557918228157697536
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  222  <|@ instruction r9|QWORD = DEC r10|QWORD size: QWORD <|@ <|@
      nr  224  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  226  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B19 -> B22 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4555804130973390080
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  234  <|@ instruction r11|QWORD = MOV [r11|QWORD[*] + rcx|QWORD * 8] size: QWORD <|@ <|@
      nr  236  <|@ instruction MOV (x: [r8|QWORD[.] + rcx|QWORD * 8], y: r11|QWORD) size: QWORD <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B9" "B21" "B19" 
    successors "B23" "B36" 
    xhandlers
    flags 
    probability 4562421827785068032
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  242  <|@ instruction r11|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr  244  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  246  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B22" "B33" "B31" 
    successors 
    xhandlers
    flags 
    probability 4562421827785068032
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  340  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@1e4c0605 encoding: base: 0 shift: 3 <|@ <|@
      nr  348  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  350  <|@ instruction r13|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  352  <|@ instruction r11|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  354  <|@ instruction MOVB (x: [r13|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  356  <|@ instruction MOVB (x: [r10|QWORD[.] + 16], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  358  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B28" "B26" 
    xhandlers
    flags 
    probability 4557918228157697536
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  250  <|@ instruction r8|QWORD[.] = LEA [rax|QWORD[.] + r10|QWORD * 8 + 16] size: QWORD <|@ <|@
      nr  252  <|@ instruction r11|QWORD = SUB (x: r11|QWORD, ~y: r10|QWORD) size: QWORD <|@ <|@
      nr  254  <|@ instruction r10|QWORD = LEA [r11|QWORD - 4] size: QWORD <|@ <|@
      nr  256  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  262  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  258  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B23 -> B28 falseDestination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B23" "B26" 
    successors "B31" "B30" 
    xhandlers
    flags 
    probability 4557918228157697536
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  290  <|@ instruction r10|QWORD = LEA [r11|QWORD - 2] size: QWORD <|@ <|@
      nr  292  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  294  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B28 -> B31 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4555804130973390080
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  302  <|@ instruction xmm0|V128_QWORD = L oc: SIMD<0,0> <|@ <|@
      nr  304  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 8], input: xmm0|V128_QWORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  306  <|@ instruction r10|QWORD = LEA [r9|QWORD + 2] size: QWORD <|@ <|@
      nr  308  <|@ instruction r9|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  310  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" 
    successors "B36" "B33" 
    xhandlers
    flags 
    probability 4557918228157697536
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  314  <|@ instruction r11|QWORD = DEC r11|QWORD size: QWORD <|@ <|@
      nr  316  <|@ instruction CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  318  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B31 -> B36 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4555804130973390080
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  328  <|@ instruction MOV (x: [r8|QWORD[.] + r9|QWORD * 8], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  332  <|@ instruction JUMP ~[] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B23" "B26" 
    successors "B28" "B26" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4557918228157697536
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  274  <|@ instruction xmm0|V256_QWORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  276  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 8], input: xmm0|V256_QWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  278  <|@ instruction r9|QWORD = LEA [r9|QWORD + 4] size: QWORD <|@ <|@
      nr  280  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  282  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B26 -> B28 falseDestination: B26 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B11" "B14" 
    successors "B16" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4557918228157697536
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  182  <|@ instruction xmm0|V256_QWORD = H [r11|QWORD[*] + rcx|QWORD * 8] nZ: YMM oh: VMOVDQU <|@ <|@
      nr  184  <|@ instruction J (address: [r8|QWORD[.] + rcx|QWORD * 8], input: xmm0|V256_QWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  186  <|@ instruction rcx|QWORD = LEA [rcx|QWORD + 4] size: QWORD <|@ <|@
      nr  188  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  190  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B14 -> B16 falseDestination: B14 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 4547963008910863850
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  110  <|@ instruction stack:28|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction stack:32|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  114  <|@ instruction stack:40|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[J, resolved>} <|@ <|@
      nr  122  <|@ instruction r8|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  124  <|@ instruction rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  126  <|@ instruction rdx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  128  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  130  <|@ instruction r13|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  132  <|@ instruction r14|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  134  <|@ st <@st|@reference-map: [stack:8, stack:20]
live-base-pointers: []
java.util.BitSet.ensureCapacity(BitSet.java:334) [bci: 0]
locals: stack:40|QWORD[.] stack:32|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  136  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction MOV [r15|QWORD + 668] y: -21601 size: DWORD <|@ <|@
      nr   36  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   38  <|@ st <@st|@reference-map: [r10:0]
live-base-pointers: []
java.util.BitSet.ensureCapacity(BitSet.java:334) [bci: 0]
locals: r10|QWORD[.] r14|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // words:long[]
     4: arraylength   
     5: iload_1       
     6: if_icmpge     38
     9: iconst_2      
    10: aload_0       
    11: getfield      #2          // words:long[]
    14: arraylength   
    15: imul          
    16: iload_1       
    17: invokestatic  #32         // java.lang.Math.max:(int, int)int
    20: istore_2      
    21: aload_0       
    22: aload_0       
    23: getfield      #2          // words:long[]
    26: iload_2       
    27: invokestatic  #14         // java.util.Arrays.copyOf:(long[], int)long[]
    30: putfield      #2          // words:long[]
    33: aload_0       
    34: iconst_0      
    35: putfield      #5          // sizeIsSticky:boolean
    38: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec2848896c24204c8bee448bf2458b5514468b1cd50c000000453bf30f8f13000000488b6c24204883c428850500000000c5f877c3418bf3d1e6443bf6410f4ff685f60f8c00020000498b5760498b4f7081feffffff000f83b4010000448bc641c1e003458d40174183e0f84d63c04d8bc84c03ca4c3bc90f87930100004d894f60410f188410c0000000410f18841000010000410f18841040010000410f1884108001000089720c48c70201000000c74208addeadde488bc2448bf644895424144c896c2408458beb453bf5418bf6410f4ff54c63d64983fa010f8c5c000000448b5c24144c8d40104e8d1cdd100000004d8d4afc4d85c948c7c1000000000f8df10000004d8d4afe493bc90f8f13000000c4c17a6f04cbc4c17a7f04c84c8d4902498bc94d8bca49ffc9493bc90f8f080000004d8b1ccb4d891cc84d63de4d3bda0f8f3a0000004c8b54240848c1e803418942144d8bea49c1ed0949bb00e01b17010000004788641d0045886210488b6c24204883c428850500000000c5f877c34e8d44d0104d2bda4d8d53fc4d85d249c7c1000000000f8d380000004d8d53fe4d3bca0f8f11000000c5f9efc0c4817a7f04c84d8d51024d8bca49ffcb4d3bcb7f844f8924c8e97bffffff660f1f840000000000c5f9efc0c4817e7f04c84d8d49044d3bca7eedebb36666660f1f840000000000c4c17e6f04cbc4c17e7f04c8488d4904493bc97eebe9f5feffff448954241444897424104c896c240848baaddeaddeaddeadde448bc6488bf2418bd0b900000000458beb458bf0e80000000090e981feffff4d8bd541c7879c0200009fabffff4d89a7a8020000e80000000090e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7b674b86 slotKind: QWORD  <||@
  Comment 48 6 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 51 8 r14|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 54 10 r10|DWORD[.] = MOV [r13|QWORD[.] + 20] size: DWORD  <||@
  Comment 58 12 r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 58 [r10:0, r13:0]at java.util.BitSet.ensureCapacity(BitSet.java:334) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2 
     locals:  |r13|QWORD[.]  |r14|DWORD  |-   <||@
  Comment 58 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 66 14 CMP (x: r14|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 69 16 BRANCH trueDestinationProbability: 0.0010362814959713473 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B38  <||@
  Comment 75 block B38 null  <||@
  Comment 75 364 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 75 366 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 84 12  <||@
  Comment 94 block B1 null  <||@
  Comment 94 18 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 94 20 rsi|DWORD = SHL r11|DWORD size: DWORD  <||@
  Comment 99 22 CMP (x: r14|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 102 24 rsi|DWORD = CMOVE (falseValue: rsi|DWORD, ~trueValue: r14|DWORD) condition: >  <||@
  Comment 106 26 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 108 28 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3  <||@
  Comment 114 block B3 null  <||@
  Comment 114 40 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 114 42 rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 118 44 rcx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 122 46 CMP rsi|DWORD y: 16777215 size: DWORD  <||@
  Comment 128 48 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B8  <||@
  Comment 134 block B4 null  <||@
  Comment 134 50 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 134 52 r8|DWORD = SHL rsi|DWORD y: 3 size: DWORD  <||@
  Comment 141 54 r8|DWORD = LEA [r8|DWORD + 23] size: DWORD  <||@
  Comment 145 56 r8|DWORD = AND r8|DWORD y: -8 size: DWORD  <||@
  Comment 149 58 r8|QWORD = MOVSXD r8|DWORD size: QWORD  <||@
  Comment 152 60 r9|QWORD = ADD (x: r8|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 158 62 CMP (x: r9|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 161 64 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B8 falseDestination: B4 -> B6  <||@
  Comment 167 block B6 null  <||@
  Comment 167 76 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 167 78 MOV (x: [r15|QWORD + 96], y: r9|QWORD) size: QWORD  <||@
  Comment 171 80 AMD64PREFETCH ~[r8|QWORD + rdx|QWORD * 1 + 192] instr: 0  <||@
  Comment 180 82 AMD64PREFETCH ~[r8|QWORD + rdx|QWORD * 1 + 256] instr: 0  <||@
  Comment 189 84 AMD64PREFETCH ~[r8|QWORD + rdx|QWORD * 1 + 320] instr: 0  <||@
  Comment 198 86 AMD64PREFETCH ~[r8|QWORD + rdx|QWORD * 1 + 384] instr: 0  <||@
  Comment 207 88 MOV (x: [rdx|QWORD + 12], y: rsi|DWORD) size: DWORD  <||@
  Comment 210 90 MOV [rdx|QWORD] y: 1 size: QWORD  <||@
  Comment 217 92 MOV [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[J, resolved>;compressed}  <||@
  Comment 217 {meta{HotSpotType<[J, resolved>;compressed}}  <||@
  Comment 224 94 rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 224 96 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 227 98 r14|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 230 100 stack:28|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 235 102 stack:40|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 240 104 r13|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 243 106 JUMP ~[] destination: B6 -> B9  <||@
  Comment 243 block B9 null  <||@
  Comment 243 138 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 243 140 CMP (x: r14|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 246 142 rsi|DWORD = CMOVE (falseValue: r14|DWORD, ~trueValue: r13|DWORD) condition: >  <||@
  Comment 253 144 r10|QWORD = MOVSXD rsi|DWORD size: QWORD  <||@
  Comment 256 146 CMP r10|QWORD y: 1 size: QWORD  <||@
  Comment 260 148 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B9 -> B22 falseDestination: B9 -> B11  <||@
  Comment 266 block B11 null  <||@
  Comment 266 154 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 266 156 r11|DWORD[.] = MOVE stack:28|DWORD[.] moveKind: DWORD  <||@
  Comment 271 158 r8|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 275 160 r11|QWORD[*] = LEA [r11|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 283 162 r9|QWORD = LEA [r10|QWORD - 4] size: QWORD  <||@
  Comment 287 164 TEST (x: r9|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 290 170 rcx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 297 166 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B11 -> B16 falseDestination: B11 -> B14  <||@
  Comment 303 block B16 null  <||@
  Comment 303 196 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 303 198 r9|QWORD = LEA [r10|QWORD - 2] size: QWORD  <||@
  Comment 307 200 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 310 202 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B16 -> B19 falseDestination: B16 -> B18  <||@
  Comment 316 block B18 null  <||@
  Comment 316 208 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 316 210 xmm0|V128_QWORD = H [r11|QWORD[*] + rcx|QWORD * 8] nZ: XMM oh: VMOVDQU  <||@
  Comment 322 212 J (address: [r8|QWORD[.] + rcx|QWORD * 8], input: xmm0|V128_QWORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 328 214 r9|QWORD = LEA [rcx|QWORD + 2] size: QWORD  <||@
  Comment 332 216 rcx|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 335 218 JUMP ~[] destination: B18 -> B19  <||@
  Comment 335 block B19 null  <||@
  Comment 335 220 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 335 222 r9|QWORD = DEC r10|QWORD size: QWORD  <||@
  Comment 341 224 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 344 226 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B19 -> B22 falseDestination: B19 -> B21  <||@
  Comment 350 block B21 null  <||@
  Comment 350 232 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 350 234 r11|QWORD = MOV [r11|QWORD[*] + rcx|QWORD * 8] size: QWORD  <||@
  Comment 354 236 MOV (x: [r8|QWORD[.] + rcx|QWORD * 8], y: r11|QWORD) size: QWORD  <||@
  Comment 358 238 JUMP ~[] destination: B21 -> B22  <||@
  Comment 358 block B22 null  <||@
  Comment 358 240 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 358 242 r11|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 361 244 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 364 246 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B36  <||@
  Comment 370 block B36 null  <||@
  Comment 370 344 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 370 340 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 375 346 rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@1e4c0605 encoding: base: 0 shift: 3  <||@
  Comment 379 348 MOV (x: [r10|QWORD[.] + 20], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 383 350 r13|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD  <||@
  Comment 390 352 r11|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 400 354 MOVB (x: [r13|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 405 356 MOVB (x: [r10|QWORD[.] + 16], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 409 358 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 418 12  <||@
  Comment 428 block B23 null  <||@
  Comment 428 248 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 428 250 r8|QWORD[.] = LEA [rax|QWORD[.] + r10|QWORD * 8 + 16] size: QWORD  <||@
  Comment 433 252 r11|QWORD = SUB (x: r11|QWORD, ~y: r10|QWORD) size: QWORD  <||@
  Comment 436 254 r10|QWORD = LEA [r11|QWORD - 4] size: QWORD  <||@
  Comment 440 256 TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 443 262 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 450 258 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B23 -> B28 falseDestination: B23 -> B26  <||@
  Comment 456 block B28 null  <||@
  Comment 456 288 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 456 290 r10|QWORD = LEA [r11|QWORD - 2] size: QWORD  <||@
  Comment 460 292 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 463 294 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B28 -> B31 falseDestination: B28 -> B30  <||@
  Comment 469 block B30 null  <||@
  Comment 469 300 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 469 302 xmm0|V128_QWORD = L oc: SIMD<0,0>  <||@
  Comment 473 304 J (address: [r8|QWORD[.] + r9|QWORD * 8], input: xmm0|V128_QWORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 479 306 r10|QWORD = LEA [r9|QWORD + 2] size: QWORD  <||@
  Comment 483 308 r9|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 486 310 JUMP ~[] destination: B30 -> B31  <||@
  Comment 486 block B31 null  <||@
  Comment 486 312 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 486 314 r11|QWORD = DEC r11|QWORD size: QWORD  <||@
  Comment 489 316 CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 492 318 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B31 -> B36 falseDestination: B31 -> B33  <||@
  Comment 494 block B33 null  <||@
  Comment 494 326 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 494 328 MOV (x: [r8|QWORD[.] + r9|QWORD * 8], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 498 332 JUMP ~[] destination: B33 -> B36  <||@
  Comment 503 block B26 loop 1 depth 1 header:278|LoopBegin  <||@
  Comment 503 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 512 274 xmm0|V256_QWORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 516 276 J (address: [r8|QWORD[.] + r9|QWORD * 8], input: xmm0|V256_QWORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 522 278 r9|QWORD = LEA [r9|QWORD + 4] size: QWORD  <||@
  Comment 526 280 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 529 282 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B26 -> B28 falseDestination: B26 -> B26  <||@
  Comment 533 block B14 loop 0 depth 1 header:232|LoopBegin  <||@
  Comment 533 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 544 182 xmm0|V256_QWORD = H [r11|QWORD[*] + rcx|QWORD * 8] nZ: YMM oh: VMOVDQU  <||@
  Comment 550 184 J (address: [r8|QWORD[.] + rcx|QWORD * 8], input: xmm0|V256_QWORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 556 186 rcx|QWORD = LEA [rcx|QWORD + 4] size: QWORD  <||@
  Comment 560 188 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 563 190 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B14 -> B16 falseDestination: B14 -> B14  <||@
  Comment 570 block B8 null  <||@
  Comment 570 118 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 570 110 stack:28|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 575 112 stack:32|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 580 114 stack:40|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 585 120 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[J, resolved>}  <||@
  Comment 585 {meta{HotSpotType<[J, resolved>}}  <||@
  Comment 595 122 r8|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 598 124 rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 601 126 rdx|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 604 128 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 609 130 r13|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 612 132 r14|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 615 134 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 615 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 620 [stack:8, stack:20]at java.util.BitSet.ensureCapacity(BitSet.java:334) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1               |2 
     locals:  |stack:40|QWORD[.]  |stack:32|DWORD  |-   <||@
  Comment 621 136 JUMP ~[] destination: B8 -> B9  <||@
  Comment 626 block B2 null  <||@
  Comment 626 30 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 626 32 r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 629 34 MOV [r15|QWORD + 668] y: -21601 size: DWORD  <||@
  Comment 640 36 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 647 38 DEOPT info [bci:0]  <||@
  Comment 647 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 652 [r10:0]at java.util.BitSet.ensureCapacity(BitSet.java:334) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2 
     locals:  |r10|QWORD[.]  |r14|DWORD  |-   <||@
  Comment 653 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 653 4  <||@
  Comment 659 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 659 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-8188[java.util.BitSet.ensureCapacity(int)]"
  method "HotSpotCompilation-8188[java.util.BitSet.ensureCapacity(int)]"
  date 1527005197356
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 106beb0a0 448b560849c1e203493bc20f85afadc1ff900f1f80000000000f1f800000000089842400c0feff4883ec2848896c24204c8bee448bf2458b5514468b1cd50c000000453bf30f8f13000000488b6c24204883c42885050c3fcafdc5f877c3418bf3d1e6443bf6410f4ff685f60f8c00020000498b5760498b4f7081feffffff000f83b4010000448bc641c1e003458d40174183e0f84d63c04d8bc84c03ca4c3bc90f87930100004d894f60410f188410c0000000410f18841000010000410f18841040010000410f1884108001000089720c48c70201000000c74208a90100f8488bc2448bf644895424144c896c2408458beb453bf5418bf6410f4ff54c63d64983fa010f8c5c000000448b5c24144c8d40104e8d1cdd100000004d8d4afc4d85c948c7c1000000000f8df10000004d8d4afe493bc90f8f13000000c4c17a6f04cbc4c17a7f04c84c8d4902498bc94d8bca49ffc9493bc90f8f080000004d8b1ccb4d891cc84d63de4d3bda0f8f3a0000004c8b54240848c1e803418942144d8bea49c1ed0949bb00e01b17010000004788641d0045886210488b6c24204883c4288505be3dcafdc5f877c34e8d44d0104d2bda4d8d53fc4d85d249c7c1000000000f8d380000004d8d53fe4d3bca0f8f11000000c5f9efc0c4817a7f04c84d8d51024d8bca49ffcb4d3bcb7f844f8924c8e97bffffff660f1f840000000000c5f9efc0c4817e7f04c84d8d49044d3bca7eedebb36666660f1f840000000000c4c17e6f04cbc4c17e7f04c8488d4904493bc97eebe9f5feffff448954241444897424104c896c240848ba480d00c007000000448bc6488bf2418bd0b900000000458beb458bf0e8d4ba3a0090e981feffff4d8bd541c7879c0200009fabffff4d89a7a8020000e8d2c2c1ff90e8eef2050090e8c8c1c1ff90f4f4f4f4f4f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7b674b86 slotKind: QWORD  <||@
  Comment 48 6 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 51 8 r14|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 54 10 r10|DWORD[.] = MOV [r13|QWORD[.] + 20] size: DWORD  <||@
  Comment 58 12 r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 58 [r10:0, r13:0]at java.util.BitSet.ensureCapacity(BitSet.java:334) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2 
     locals:  |r13|QWORD[.]  |r14|DWORD  |-   <||@
  Comment 58 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 66 14 CMP (x: r14|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 69 16 BRANCH trueDestinationProbability: 0.0010362814959713473 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B38  <||@
  Comment 75 block B38 null  <||@
  Comment 75 364 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 75 366 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 84 12  <||@
  Comment 94 block B1 null  <||@
  Comment 94 18 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 94 20 rsi|DWORD = SHL r11|DWORD size: DWORD  <||@
  Comment 99 22 CMP (x: r14|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 102 24 rsi|DWORD = CMOVE (falseValue: rsi|DWORD, ~trueValue: r14|DWORD) condition: >  <||@
  Comment 106 26 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 108 28 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3  <||@
  Comment 114 block B3 null  <||@
  Comment 114 40 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 114 42 rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 118 44 rcx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 122 46 CMP rsi|DWORD y: 16777215 size: DWORD  <||@
  Comment 128 48 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B8  <||@
  Comment 134 block B4 null  <||@
  Comment 134 50 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 134 52 r8|DWORD = SHL rsi|DWORD y: 3 size: DWORD  <||@
  Comment 141 54 r8|DWORD = LEA [r8|DWORD + 23] size: DWORD  <||@
  Comment 145 56 r8|DWORD = AND r8|DWORD y: -8 size: DWORD  <||@
  Comment 149 58 r8|QWORD = MOVSXD r8|DWORD size: QWORD  <||@
  Comment 152 60 r9|QWORD = ADD (x: r8|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 158 62 CMP (x: r9|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 161 64 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B8 falseDestination: B4 -> B6  <||@
  Comment 167 block B6 null  <||@
  Comment 167 76 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 167 78 MOV (x: [r15|QWORD + 96], y: r9|QWORD) size: QWORD  <||@
  Comment 171 80 AMD64PREFETCH ~[r8|QWORD + rdx|QWORD * 1 + 192] instr: 0  <||@
  Comment 180 82 AMD64PREFETCH ~[r8|QWORD + rdx|QWORD * 1 + 256] instr: 0  <||@
  Comment 189 84 AMD64PREFETCH ~[r8|QWORD + rdx|QWORD * 1 + 320] instr: 0  <||@
  Comment 198 86 AMD64PREFETCH ~[r8|QWORD + rdx|QWORD * 1 + 384] instr: 0  <||@
  Comment 207 88 MOV (x: [rdx|QWORD + 12], y: rsi|DWORD) size: DWORD  <||@
  Comment 210 90 MOV [rdx|QWORD] y: 1 size: QWORD  <||@
  Comment 217 92 MOV [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[J, resolved>;compressed}  <||@
  Comment 217 {meta{HotSpotType<[J, resolved>;compressed}}  <||@
  Comment 224 94 rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 224 96 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 227 98 r14|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 230 100 stack:28|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 235 102 stack:40|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 240 104 r13|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 243 106 JUMP ~[] destination: B6 -> B9  <||@
  Comment 243 block B9 null  <||@
  Comment 243 138 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 243 140 CMP (x: r14|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 246 142 rsi|DWORD = CMOVE (falseValue: r14|DWORD, ~trueValue: r13|DWORD) condition: >  <||@
  Comment 253 144 r10|QWORD = MOVSXD rsi|DWORD size: QWORD  <||@
  Comment 256 146 CMP r10|QWORD y: 1 size: QWORD  <||@
  Comment 260 148 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B9 -> B22 falseDestination: B9 -> B11  <||@
  Comment 266 block B11 null  <||@
  Comment 266 154 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 266 156 r11|DWORD[.] = MOVE stack:28|DWORD[.] moveKind: DWORD  <||@
  Comment 271 158 r8|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 275 160 r11|QWORD[*] = LEA [r11|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 283 162 r9|QWORD = LEA [r10|QWORD - 4] size: QWORD  <||@
  Comment 287 164 TEST (x: r9|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 290 170 rcx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 297 166 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B11 -> B16 falseDestination: B11 -> B14  <||@
  Comment 303 block B16 null  <||@
  Comment 303 196 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 303 198 r9|QWORD = LEA [r10|QWORD - 2] size: QWORD  <||@
  Comment 307 200 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 310 202 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B16 -> B19 falseDestination: B16 -> B18  <||@
  Comment 316 block B18 null  <||@
  Comment 316 208 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 316 210 xmm0|V128_QWORD = H [r11|QWORD[*] + rcx|QWORD * 8] nZ: XMM oh: VMOVDQU  <||@
  Comment 322 212 J (address: [r8|QWORD[.] + rcx|QWORD * 8], input: xmm0|V128_QWORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 328 214 r9|QWORD = LEA [rcx|QWORD + 2] size: QWORD  <||@
  Comment 332 216 rcx|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 335 218 JUMP ~[] destination: B18 -> B19  <||@
  Comment 335 block B19 null  <||@
  Comment 335 220 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 335 222 r9|QWORD = DEC r10|QWORD size: QWORD  <||@
  Comment 341 224 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 344 226 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B19 -> B22 falseDestination: B19 -> B21  <||@
  Comment 350 block B21 null  <||@
  Comment 350 232 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 350 234 r11|QWORD = MOV [r11|QWORD[*] + rcx|QWORD * 8] size: QWORD  <||@
  Comment 354 236 MOV (x: [r8|QWORD[.] + rcx|QWORD * 8], y: r11|QWORD) size: QWORD  <||@
  Comment 358 238 JUMP ~[] destination: B21 -> B22  <||@
  Comment 358 block B22 null  <||@
  Comment 358 240 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 358 242 r11|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 361 244 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 364 246 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B36  <||@
  Comment 370 block B36 null  <||@
  Comment 370 344 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 370 340 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 375 346 rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@1e4c0605 encoding: base: 0 shift: 3  <||@
  Comment 379 348 MOV (x: [r10|QWORD[.] + 20], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 383 350 r13|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD  <||@
  Comment 390 352 r11|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 400 354 MOVB (x: [r13|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 405 356 MOVB (x: [r10|QWORD[.] + 16], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 409 358 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 418 12  <||@
  Comment 428 block B23 null  <||@
  Comment 428 248 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 428 250 r8|QWORD[.] = LEA [rax|QWORD[.] + r10|QWORD * 8 + 16] size: QWORD  <||@
  Comment 433 252 r11|QWORD = SUB (x: r11|QWORD, ~y: r10|QWORD) size: QWORD  <||@
  Comment 436 254 r10|QWORD = LEA [r11|QWORD - 4] size: QWORD  <||@
  Comment 440 256 TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 443 262 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 450 258 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B23 -> B28 falseDestination: B23 -> B26  <||@
  Comment 456 block B28 null  <||@
  Comment 456 288 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 456 290 r10|QWORD = LEA [r11|QWORD - 2] size: QWORD  <||@
  Comment 460 292 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 463 294 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B28 -> B31 falseDestination: B28 -> B30  <||@
  Comment 469 block B30 null  <||@
  Comment 469 300 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 469 302 xmm0|V128_QWORD = L oc: SIMD<0,0>  <||@
  Comment 473 304 J (address: [r8|QWORD[.] + r9|QWORD * 8], input: xmm0|V128_QWORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 479 306 r10|QWORD = LEA [r9|QWORD + 2] size: QWORD  <||@
  Comment 483 308 r9|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 486 310 JUMP ~[] destination: B30 -> B31  <||@
  Comment 486 block B31 null  <||@
  Comment 486 312 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 486 314 r11|QWORD = DEC r11|QWORD size: QWORD  <||@
  Comment 489 316 CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 492 318 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B31 -> B36 falseDestination: B31 -> B33  <||@
  Comment 494 block B33 null  <||@
  Comment 494 326 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 494 328 MOV (x: [r8|QWORD[.] + r9|QWORD * 8], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 498 332 JUMP ~[] destination: B33 -> B36  <||@
  Comment 503 block B26 loop 1 depth 1 header:278|LoopBegin  <||@
  Comment 503 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 512 274 xmm0|V256_QWORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 516 276 J (address: [r8|QWORD[.] + r9|QWORD * 8], input: xmm0|V256_QWORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 522 278 r9|QWORD = LEA [r9|QWORD + 4] size: QWORD  <||@
  Comment 526 280 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 529 282 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B26 -> B28 falseDestination: B26 -> B26  <||@
  Comment 533 block B14 loop 0 depth 1 header:232|LoopBegin  <||@
  Comment 533 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 544 182 xmm0|V256_QWORD = H [r11|QWORD[*] + rcx|QWORD * 8] nZ: YMM oh: VMOVDQU  <||@
  Comment 550 184 J (address: [r8|QWORD[.] + rcx|QWORD * 8], input: xmm0|V256_QWORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 556 186 rcx|QWORD = LEA [rcx|QWORD + 4] size: QWORD  <||@
  Comment 560 188 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 563 190 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B14 -> B16 falseDestination: B14 -> B14  <||@
  Comment 570 block B8 null  <||@
  Comment 570 118 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 570 110 stack:28|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 575 112 stack:32|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 580 114 stack:40|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 585 120 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[J, resolved>}  <||@
  Comment 585 {meta{HotSpotType<[J, resolved>}}  <||@
  Comment 595 122 r8|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 598 124 rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 601 126 rdx|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 604 128 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 609 130 r13|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 612 132 r14|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 615 134 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 615 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 620 [stack:8, stack:20]at java.util.BitSet.ensureCapacity(BitSet.java:334) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1               |2 
     locals:  |stack:40|QWORD[.]  |stack:32|DWORD  |-   <||@
  Comment 621 136 JUMP ~[] destination: B8 -> B9  <||@
  Comment 626 block B2 null  <||@
  Comment 626 30 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 626 32 r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 629 34 MOV [r15|QWORD + 668] y: -21601 size: DWORD  <||@
  Comment 640 36 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 647 38 DEOPT info [bci:0]  <||@
  Comment 647 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 652 [r10:0]at java.util.BitSet.ensureCapacity(BitSet.java:334) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2 
     locals:  |r10|QWORD[.]  |r14|DWORD  |-   <||@
  Comment 653 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 653 4  <||@
  Comment 659 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 659 5  <||@
  HexCodeFile>>> <|@
end_nmethod
