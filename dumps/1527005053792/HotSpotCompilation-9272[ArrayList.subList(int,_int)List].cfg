begin_compilation
  name " HotSpotCompilation-9272[java.util.ArrayList.subList(int, int)]"
  method "HotSpotCompilation-9272[java.util.ArrayList.subList(int, int)]"
  date 1527005203364
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v60 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v60  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/ArrayList;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v173 v174 a75 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v15 v19 i33 v144 v147 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v17 v19 i33 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?4 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<ArrayList.subList(int, int)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: ArrayList.java
sourceLine: 1004
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 i3 
=== Succesors ===
=== Usages ===
v86 a108 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 i3  <|@  <|@
f <@~|@floating>@ <|@
tid i10 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList.subList(ArrayList.java:1005) [bci: 15]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v15 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList.subListRangeCheck(ArrayList.java:1009) [bci: 1]
at java.util.ArrayList.subList(ArrayList.java:1004) [bci: 6]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i10 
=== Succesors ===
=== Usages ===
v60 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.subListRangeCheck(ArrayList.java:1009) [bci: 1]
at java.util.ArrayList.subList(ArrayList.java:1004) [bci: 6]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v15 
=== Succesors ===
trueSuccessor: v59 
falseSuccessor: v57 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v15 #trueSuccessor: v59 #falseSuccessor: v57  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.subListRangeCheck(ArrayList.java:1009) [bci: 1]
at java.util.ArrayList.subList(ArrayList.java:1004) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v81 
=== Usages ===
=== Predecessor ===
v60 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v81  <|@  <|@
f <@~|@floating>@ <|@
tid i82 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -12563
stableDimension: 0
stamp: i32 [-12563] ⇊00000000ffffceed ⇈00000000ffffceed
stampKind: i32
value: int[-12563|0xffffffffffffceed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i84 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v80 
=== Predecessor ===
v59 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.subListRangeCheck(ArrayList.java:1009) [bci: 1]
at java.util.ArrayList.subList(ArrayList.java:1004) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: i171 
=== Usages ===
=== Predecessor ===
v60 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i171  <|@  <|@
f <@~|@floating>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i171 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i171 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList.size
nodeSourcePosition: at java.util.ArrayList.subList(ArrayList.java:1004) [bci: 3]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v173 
=== Succesors ===
next: v64 
=== Usages ===
v17 
=== Predecessor ===
v57 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v173 #next: v64  <|@  <|@
f <@~|@floating>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList.subListRangeCheck(ArrayList.java:1011) [bci: 33]
at java.util.ArrayList.subList(ArrayList.java:1004) [bci: 6]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i171 
y: i3 
=== Succesors ===
=== Usages ===
v64 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i171 y: i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.subListRangeCheck(ArrayList.java:1011) [bci: 33]
at java.util.ArrayList.subList(ArrayList.java:1004) [bci: 6]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v17 
=== Succesors ===
trueSuccessor: v63 
falseSuccessor: v61 
=== Usages ===
=== Predecessor ===
i171 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v17 #trueSuccessor: v63 #falseSuccessor: v61  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.subListRangeCheck(ArrayList.java:1011) [bci: 33]
at java.util.ArrayList.subList(ArrayList.java:1004) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v87 
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v87  <|@  <|@
f <@~|@floating>@ <|@
tid i88 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -12819
stableDimension: 0
stamp: i32 [-12819] ⇊00000000ffffcded ⇈00000000ffffcded
stampKind: i32
value: int[-12819|0xffffffffffffcded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i84 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v80 
=== Predecessor ===
v63 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.subListRangeCheck(ArrayList.java:1011) [bci: 33]
at java.util.ArrayList.subList(ArrayList.java:1004) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v68 
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v68  <|@  <|@
f <@~|@floating>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList.subListRangeCheck(ArrayList.java:1013) [bci: 65]
at java.util.ArrayList.subList(ArrayList.java:1004) [bci: 6]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i2 
=== Succesors ===
=== Usages ===
v68 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.subListRangeCheck(ArrayList.java:1013) [bci: 65]
at java.util.ArrayList.subList(ArrayList.java:1004) [bci: 6]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v19 
=== Succesors ===
trueSuccessor: v67 
falseSuccessor: v65 
=== Usages ===
=== Predecessor ===
v61 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v19 #trueSuccessor: v67 #falseSuccessor: v65  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.subListRangeCheck(ArrayList.java:1013) [bci: 65]
at java.util.ArrayList.subList(ArrayList.java:1004) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v89 
=== Usages ===
=== Predecessor ===
v68 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v89  <|@  <|@
f <@~|@floating>@ <|@
tid i90 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -13075
stableDimension: 0
stamp: i32 [-13075] ⇊00000000ffffcced ⇈00000000ffffcced
stampKind: i32
value: int[-13075|0xffffffffffffcced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i84 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v80 
=== Predecessor ===
v67 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i84 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-13075 - -12563] ⇊00000000ffffcced ⇈00000000ffffcfed
valueDescription: i32
=== Inputs ===
merge: v80 
values: i82 i88 i90 
=== Succesors ===
=== Usages ===
v86 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v80 values: i82 i88 i90  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v81 v87 v89 
=== Succesors ===
next: v86 
=== Usages ===
i84 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v81 v87 v89 #next: v86  <|@  <|@
f <@~|@floating>@ <|@
tid a83 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v86 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?4 
actionAndReason: i84 
speculation: a83 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v80 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?4 actionAndReason: i84 speculation: a83  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.subListRangeCheck(ArrayList.java:1013) [bci: 65]
at java.util.ArrayList.subList(ArrayList.java:1004) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: j95 
=== Usages ===
=== Predecessor ===
v68 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j95  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j95 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j115 
=== Usages ===
v175 v176 
=== Predecessor ===
v65 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j115  <|@  <|@
f <@~|@floating>@ <|@
tid v175 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j95 
index: - 
=== Succesors ===
=== Usages ===
j115 v117 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j95 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j115 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v175 
=== Succesors ===
next: j116 
=== Usages ===
j158 j121 v180 
=== Predecessor ===
j95 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v175 #next: j116  <|@  <|@
f <@~|@floating>@ <|@
tid v176 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j95 
index: - 
=== Succesors ===
=== Usages ===
j116 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j95 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j116 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v176 
=== Succesors ===
next: v103 
=== Usages ===
v100 
=== Predecessor ===
j115 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v176 #next: v103  <|@  <|@
f <@~|@floating>@ <|@
tid j157 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 40
stableDimension: 0
stamp: i64 [40] ⇊0000000000000028 ⇈0000000000000028
stampKind: i64
value: long[40|0x28]
=== Inputs ===
=== Succesors ===
=== Usages ===
j158 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j158 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j115 
y: j157 
=== Succesors ===
=== Usages ===
v100 v117 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j115 y: j157  <|@  <|@
f <@~|@floating>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j116 
y: j158 
=== Succesors ===
=== Usages ===
v103 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j116 y: j158  <|@  <|@
f <@*|@fixed>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v100 
=== Succesors ===
trueSuccessor: v101 
falseSuccessor: v102 
=== Usages ===
=== Predecessor ===
j116 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v100 #trueSuccessor: v101 #falseSuccessor: v102  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a108 
=== Usages ===
=== Predecessor ===
v103 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a108  <|@  <|@
f <@~|@floating>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a108 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i160 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 6
stableDimension: 0
stamp: i32 [6] ⇊0000000000000006 ⇈0000000000000006
stampKind: i32
value: int[6|0x6]
=== Inputs ===
=== Succesors ===
=== Usages ===
a108 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i94 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
a108 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a108 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?4 
arguments: v92 i160 i94 
=== Succesors ===
next: j109 
=== Usages ===
j109 
=== Predecessor ===
v101 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?4 arguments: v92 i160 i94 #next: j109  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j109 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a108 
=== Succesors ===
next: v122 
=== Usages ===
j121 
=== Predecessor ===
a108 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a108 #next: v122  <|@  <|@
f <@*|@fixed>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v119 
=== Predecessor ===
j109 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v117 
=== Usages ===
=== Predecessor ===
v103 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v117  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v175 
value: j158 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v113 
=== Usages ===
=== Predecessor ===
v102 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v175 value: j158 stateAfter: - lastLocationAccess: - #next: v113  <|@  <|@
f <@~|@floating>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
displacement: 232
scale: Times1
stamp: void*
=== Inputs ===
base: j115 
index: - 
=== Succesors ===
=== Usages ===
v113 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j115 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v180 
=== Succesors ===
next: v120 
=== Usages ===
=== Predecessor ===
v117 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v180 #next: v120  <|@  <|@
f <@*|@fixed>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v119 
=== Predecessor ===
v113 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j121 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v119 
values: j115 j109 
=== Succesors ===
=== Usages ===
v179 v178 a72 v181 v182 v183 v184 v185 v186 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v119 values: j115 j109  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v120 v122 
=== Succesors ===
next: a72 
=== Usages ===
j121 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v120 v122 #next: a72  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a72 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j121 
=== Succesors ===
next: j133 
=== Usages ===
a78 
=== Predecessor ===
v119 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j121 #next: j133  <|@  <|@
f <@~|@floating>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j128 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j128 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v127 
=== Succesors ===
=== Usages ===
v177 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v127  <|@  <|@
f <@~|@floating>@ <|@
tid v177 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j128 
index: - 
=== Succesors ===
=== Usages ===
j133 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j128 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j133 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v177 
=== Succesors ===
next: v134 
=== Usages ===
v134 
=== Predecessor ===
a72 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v177 #next: v134  <|@  <|@
f <@~|@floating>@ <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j121 
index: - 
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j121 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v178 
value: j133 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v138 
=== Usages ===
=== Predecessor ===
j133 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v178 value: j133 stateAfter: - lastLocationAccess: - #next: v138  <|@  <|@
f <@~|@floating>@ <|@
tid v179 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j121 
index: - 
=== Succesors ===
=== Usages ===
v138 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j121 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v163 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v138 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v138 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v179 
value: v163 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i172 
=== Usages ===
=== Predecessor ===
v134 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v179 value: v163 stateAfter: - lastLocationAccess: - #next: i172  <|@  <|@
f <@~|@floating>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i172 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i172 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.ArrayList$SubList.<init>(ArrayList.java:1030) [bci: 39]
at java.util.ArrayList.subList(ArrayList.java:1005) [bci: 18]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v174 
=== Succesors ===
next: v142 
=== Usages ===
v142 
=== Predecessor ===
v138 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v174 #next: v142  <|@  <|@
f <@~|@floating>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j121 
index: - 
=== Succesors ===
=== Usages ===
v142 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j121 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v181 
value: i172 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v144 
=== Usages ===
=== Predecessor ===
i172 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v181 value: i172 stateAfter: - lastLocationAccess: - #next: v144  <|@  <|@
f <@~|@floating>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j121 
index: - 
=== Succesors ===
=== Usages ===
v144 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j121 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v144 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v182 
value: i2 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v147 
=== Usages ===
=== Predecessor ===
v142 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v182 value: i2 stateAfter: - lastLocationAccess: - #next: v147  <|@  <|@
f <@~|@floating>@ <|@
tid v183 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j121 
index: - 
=== Succesors ===
=== Usages ===
v147 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j121 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v147 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v183 
value: i2 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v150 
=== Usages ===
=== Predecessor ===
v144 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v183 value: i2 stateAfter: - lastLocationAccess: - #next: v150  <|@  <|@
f <@~|@floating>@ <|@
tid v184 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j121 
index: - 
=== Succesors ===
=== Usages ===
v150 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j121 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i33 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.util.ArrayList$SubList.<init>(ArrayList.java:1029) [bci: 33]
at java.util.ArrayList.subList(ArrayList.java:1005) [bci: 18]
stamp: i32
=== Inputs ===
x: i3 
y: i2 
=== Succesors ===
=== Usages ===
v150 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i3 y: i2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v184 
value: i33 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v153 
=== Usages ===
=== Predecessor ===
v147 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v184 value: i33 stateAfter: - lastLocationAccess: - #next: v153  <|@  <|@
f <@~|@floating>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: j121 
index: - 
=== Succesors ===
=== Usages ===
v153 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j121 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a75 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n!# Ljava/util/ArrayList;
=== Inputs ===
value: a1 
=== Succesors ===
=== Usages ===
v156 v153 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v153 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v185 
value: a75 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v156 
=== Usages ===
=== Predecessor ===
v150 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v185 value: a75 stateAfter: - lastLocationAccess: - #next: v156  <|@  <|@
f <@~|@floating>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: j121 
index: - 
=== Succesors ===
=== Usages ===
v156 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j121 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v186 
value: a75 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a78 
=== Usages ===
=== Predecessor ===
v153 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v186 value: a75 stateAfter: - lastLocationAccess: - #next: a78  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a78 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a72 
=== Succesors ===
next: v79 
=== Usages ===
v14 
=== Predecessor ===
v156 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a72 #next: v79  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v14 
=== Usages ===
=== Predecessor ===
a78 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v14  <|@  <|@
f <@*|@fixed>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.subList(ArrayList.java:1005) [bci: 21]
stamp: void
=== Inputs ===
result: a78 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v79 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a78 memoryMap: -  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v60 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v60  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/ArrayList;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v173 v174 a75 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v15 v19 i33 v144 v147 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v17 v19 i33 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?4 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<ArrayList.subList(int, int)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: ArrayList.java
sourceLine: 1004
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 i3 
=== Succesors ===
=== Usages ===
v86 a108 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 i3  <|@  <|@
f <@~|@floating>@ <|@
tid i10 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList.subList(ArrayList.java:1005) [bci: 15]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v15 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList.subListRangeCheck(ArrayList.java:1009) [bci: 1]
at java.util.ArrayList.subList(ArrayList.java:1004) [bci: 6]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i10 
=== Succesors ===
=== Usages ===
v60 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.subListRangeCheck(ArrayList.java:1009) [bci: 1]
at java.util.ArrayList.subList(ArrayList.java:1004) [bci: 6]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v15 
=== Succesors ===
trueSuccessor: v59 
falseSuccessor: v57 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v15 #trueSuccessor: v59 #falseSuccessor: v57  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@51a211b7 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.subListRangeCheck(ArrayList.java:1009) [bci: 1]
at java.util.ArrayList.subList(ArrayList.java:1004) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v81 
=== Usages ===
=== Predecessor ===
v60 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v81  <|@  <|@
f <@~|@floating>@ <|@
tid i82 <|@
result int[-12563|0xffffffffffffceed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -12563
stableDimension: 0
stamp: i32 [-12563] ⇊00000000ffffceed ⇈00000000ffffceed
stampKind: i32
value: int[-12563|0xffffffffffffceed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i84 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v80 
=== Predecessor ===
v59 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-12563|0xffffffffffffceed]] destination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.subListRangeCheck(ArrayList.java:1009) [bci: 1]
at java.util.ArrayList.subList(ArrayList.java:1004) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: i171 
=== Usages ===
=== Predecessor ===
v60 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i171  <|@  <|@
f <@~|@floating>@ <|@
tid v173 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i171 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i171 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList.size
nodeSourcePosition: at java.util.ArrayList.subList(ArrayList.java:1004) [bci: 3]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v173 
=== Succesors ===
next: v64 
=== Usages ===
v17 
=== Predecessor ===
v57 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v173 #next: v64  <|@  <|@
f <@~|@floating>@ <|@
tid v17 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList.subListRangeCheck(ArrayList.java:1011) [bci: 33]
at java.util.ArrayList.subList(ArrayList.java:1004) [bci: 6]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i171 
y: i3 
=== Succesors ===
=== Usages ===
v64 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i171 y: i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v64 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.subListRangeCheck(ArrayList.java:1011) [bci: 33]
at java.util.ArrayList.subList(ArrayList.java:1004) [bci: 6]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v17 
=== Succesors ===
trueSuccessor: v63 
falseSuccessor: v61 
=== Usages ===
=== Predecessor ===
i171 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v17 #trueSuccessor: v63 #falseSuccessor: v61  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD, y: [v0|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.subListRangeCheck(ArrayList.java:1011) [bci: 33]
at java.util.ArrayList.subList(ArrayList.java:1004) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v87 
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v87  <|@  <|@
f <@~|@floating>@ <|@
tid i88 <|@
result int[-12819|0xffffffffffffcded] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -12819
stableDimension: 0
stamp: i32 [-12819] ⇊00000000ffffcded ⇈00000000ffffcded
stampKind: i32
value: int[-12819|0xffffffffffffcded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i84 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v80 
=== Predecessor ===
v63 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-12819|0xffffffffffffcded]] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.subListRangeCheck(ArrayList.java:1011) [bci: 33]
at java.util.ArrayList.subList(ArrayList.java:1004) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v68 
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v68  <|@  <|@
f <@~|@floating>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList.subListRangeCheck(ArrayList.java:1013) [bci: 65]
at java.util.ArrayList.subList(ArrayList.java:1004) [bci: 6]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i2 
=== Succesors ===
=== Usages ===
v68 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.subListRangeCheck(ArrayList.java:1013) [bci: 65]
at java.util.ArrayList.subList(ArrayList.java:1004) [bci: 6]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v19 
=== Succesors ===
trueSuccessor: v67 
falseSuccessor: v65 
=== Usages ===
=== Predecessor ===
v61 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v19 #trueSuccessor: v67 #falseSuccessor: v65  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v1|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.subListRangeCheck(ArrayList.java:1013) [bci: 65]
at java.util.ArrayList.subList(ArrayList.java:1004) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v89 
=== Usages ===
=== Predecessor ===
v68 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v89  <|@  <|@
f <@~|@floating>@ <|@
tid i90 <|@
result int[-13075|0xffffffffffffcced] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -13075
stableDimension: 0
stamp: i32 [-13075] ⇊00000000ffffcced ⇈00000000ffffcced
stampKind: i32
value: int[-13075|0xffffffffffffcced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i84 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v80 
=== Predecessor ===
v67 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-13075|0xffffffffffffcced]] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i84 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-13075 - -12563] ⇊00000000ffffcced ⇈00000000ffffcfed
valueDescription: i32
=== Inputs ===
merge: v80 
values: i82 i88 i90 
=== Succesors ===
=== Usages ===
v86 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v80 values: i82 i88 i90  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v81 v87 v89 
=== Succesors ===
next: v86 
=== Usages ===
i84 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v81 v87 v89 #next: v86  <|@  <|@
f <@~|@floating>@ <|@
tid a83 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v86 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?4 
actionAndReason: i84 
speculation: a83 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v80 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?4 actionAndReason: i84 speculation: a83  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v3|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.subList(ArrayList.java:1004) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.subListRangeCheck(ArrayList.java:1013) [bci: 65]
at java.util.ArrayList.subList(ArrayList.java:1004) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: j95 
=== Usages ===
=== Predecessor ===
v68 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j95  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j95 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j115 
=== Usages ===
v175 v176 
=== Predecessor ===
v65 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j115  <|@  <|@
f <@~|@floating>@ <|@
tid v175 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j95 
index: - 
=== Succesors ===
=== Usages ===
j115 v117 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j95 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j115 <|@
result v4|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v175 
=== Succesors ===
next: j116 
=== Usages ===
j158 j121 v180 
=== Predecessor ===
j95 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v175 #next: j116  <|@  <|@
f <@~|@floating>@ <|@
tid v176 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j95 
index: - 
=== Succesors ===
=== Usages ===
j116 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j95 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j116 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v176 
=== Succesors ===
next: v103 
=== Usages ===
v100 
=== Predecessor ===
j115 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v176 #next: v103  <|@  <|@
f <@~|@floating>@ <|@
tid j157 <|@
result long[40|0x28] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 40
stableDimension: 0
stamp: i64 [40] ⇊0000000000000028 ⇈0000000000000028
stampKind: i64
value: long[40|0x28]
=== Inputs ===
=== Succesors ===
=== Usages ===
j158 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j158 <|@
result v5|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j115 
y: j157 
=== Succesors ===
=== Usages ===
v100 v117 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j115 y: j157  <|@  <|@
f <@~|@floating>@ <|@
tid v100 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j116 
y: j158 
=== Succesors ===
=== Usages ===
v103 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j116 y: j158  <|@  <|@
f <@*|@fixed>@ <|@
tid v103 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v100 
=== Succesors ===
trueSuccessor: v101 
falseSuccessor: v102 
=== Usages ===
=== Predecessor ===
j116 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v100 #trueSuccessor: v101 #falseSuccessor: v102  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = LEA [v4|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a108 
=== Usages ===
=== Predecessor ===
v103 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a108  <|@  <|@
f <@~|@floating>@ <|@
tid v92 <|@
result v6|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a108 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i160 <|@
result int[6|0x6] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 6
stableDimension: 0
stamp: i32 [6] ⇊0000000000000006 ⇈0000000000000006
stampKind: i32
value: int[6|0x6]
=== Inputs ===
=== Succesors ===
=== Usages ===
a108 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i94 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
a108 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a108 <|@
result v7|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?4 
arguments: v92 i160 i94 
=== Succesors ===
next: j109 
=== Usages ===
j109 
=== Predecessor ===
v101 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?4 arguments: v92 i160 i94 #next: j109  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j109 <|@
result v7|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a108 
=== Succesors ===
next: v122 
=== Usages ===
j121 
=== Predecessor ===
a108 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a108 #next: v122  <|@  <|@
f <@*|@fixed>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v119 
=== Predecessor ===
j109 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v6|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[6|0x6] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.subList(ArrayList.java:1004) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v7|QWORD[.]] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v117 
=== Usages ===
=== Predecessor ===
v103 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v117  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v175 
value: j158 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v113 
=== Usages ===
=== Predecessor ===
v102 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v175 value: j158 stateAfter: - lastLocationAccess: - #next: v113  <|@  <|@
f <@~|@floating>@ <|@
tid v180 <|@
result [v4|QWORD + 232] <|@
d <@d|@=== Debug Properties ===
displacement: 232
scale: Times1
stamp: void*
=== Inputs ===
base: j115 
index: - 
=== Succesors ===
=== Usages ===
v113 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j115 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v180 
=== Succesors ===
next: v120 
=== Usages ===
=== Predecessor ===
v117 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v180 #next: v120  <|@  <|@
f <@*|@fixed>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v119 
=== Predecessor ===
v113 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v5|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v4|QWORD + 232] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v4|QWORD] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j121 <|@
result v8|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v119 
values: j115 j109 
=== Succesors ===
=== Usages ===
v179 v178 a72 v181 v182 v183 v184 v185 v186 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v119 values: j115 j109  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v120 v122 
=== Succesors ===
next: a72 
=== Usages ===
j121 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v120 v122 #next: a72  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a72 <|@
result v9|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j121 
=== Succesors ===
next: j133 
=== Usages ===
a78 
=== Predecessor ===
v119 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j121 #next: j133  <|@  <|@
f <@~|@floating>@ <|@
tid v127 <|@
result v10|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j128 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j128 <|@
result v10|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v127 
=== Succesors ===
=== Usages ===
v177 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v127  <|@  <|@
f <@~|@floating>@ <|@
tid v177 <|@
result [v10|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j128 
index: - 
=== Succesors ===
=== Usages ===
j133 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j128 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j133 <|@
result v11|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v177 
=== Succesors ===
next: v134 
=== Usages ===
v134 
=== Predecessor ===
a72 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v177 #next: v134  <|@  <|@
f <@~|@floating>@ <|@
tid v178 <|@
result [v8|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j121 
index: - 
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j121 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v178 
value: j133 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v138 
=== Usages ===
=== Predecessor ===
j133 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v178 value: j133 stateAfter: - lastLocationAccess: - #next: v138  <|@  <|@
f <@~|@floating>@ <|@
tid v179 <|@
result [v8|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j121 
index: - 
=== Succesors ===
=== Usages ===
v138 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j121 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v163 <|@
result meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v138 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v138 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v179 
value: v163 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i172 
=== Usages ===
=== Predecessor ===
v134 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v179 value: v163 stateAfter: - lastLocationAccess: - #next: i172  <|@  <|@
f <@~|@floating>@ <|@
tid v174 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i172 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i172 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.ArrayList$SubList.<init>(ArrayList.java:1030) [bci: 39]
at java.util.ArrayList.subList(ArrayList.java:1005) [bci: 18]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v174 
=== Succesors ===
next: v142 
=== Usages ===
v142 
=== Predecessor ===
v138 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v174 #next: v142  <|@  <|@
f <@~|@floating>@ <|@
tid v181 <|@
result [v8|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j121 
index: - 
=== Succesors ===
=== Usages ===
v142 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j121 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v181 
value: i172 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v144 
=== Usages ===
=== Predecessor ===
i172 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v181 value: i172 stateAfter: - lastLocationAccess: - #next: v144  <|@  <|@
f <@~|@floating>@ <|@
tid v182 <|@
result [v8|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j121 
index: - 
=== Succesors ===
=== Usages ===
v144 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j121 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v144 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v182 
value: i2 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v147 
=== Usages ===
=== Predecessor ===
v142 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v182 value: i2 stateAfter: - lastLocationAccess: - #next: v147  <|@  <|@
f <@~|@floating>@ <|@
tid v183 <|@
result [v8|QWORD[*] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j121 
index: - 
=== Succesors ===
=== Usages ===
v147 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j121 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v147 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v183 
value: i2 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v150 
=== Usages ===
=== Predecessor ===
v144 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v183 value: i2 stateAfter: - lastLocationAccess: - #next: v150  <|@  <|@
f <@~|@floating>@ <|@
tid v184 <|@
result [v8|QWORD[*] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j121 
index: - 
=== Succesors ===
=== Usages ===
v150 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j121 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i33 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.util.ArrayList$SubList.<init>(ArrayList.java:1029) [bci: 33]
at java.util.ArrayList.subList(ArrayList.java:1005) [bci: 18]
stamp: i32
=== Inputs ===
x: i3 
y: i2 
=== Succesors ===
=== Usages ===
v150 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i3 y: i2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v184 
value: i33 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v153 
=== Usages ===
=== Predecessor ===
v147 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v184 value: i33 stateAfter: - lastLocationAccess: - #next: v153  <|@  <|@
f <@~|@floating>@ <|@
tid v185 <|@
result [v8|QWORD[*] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: j121 
index: - 
=== Succesors ===
=== Usages ===
v153 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j121 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a75 <|@
result v14|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n!# Ljava/util/ArrayList;
=== Inputs ===
value: a1 
=== Succesors ===
=== Usages ===
v156 v153 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v153 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v185 
value: a75 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v156 
=== Usages ===
=== Predecessor ===
v150 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v185 value: a75 stateAfter: - lastLocationAccess: - #next: v156  <|@  <|@
f <@~|@floating>@ <|@
tid v186 <|@
result [v8|QWORD[*] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: j121 
index: - 
=== Succesors ===
=== Usages ===
v156 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j121 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v186 
value: a75 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a78 
=== Usages ===
=== Predecessor ===
v153 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v186 value: a75 stateAfter: - lastLocationAccess: - #next: a78  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a78 <|@
result v9|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a72 
=== Succesors ===
next: v79 
=== Usages ===
v14 
=== Predecessor ===
v156 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a72 #next: v79  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v14 
=== Usages ===
=== Predecessor ===
a78 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v14  <|@  <|@
f <@*|@fixed>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.subList(ArrayList.java:1005) [bci: 21]
stamp: void
=== Inputs ===
result: a78 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v79 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a78 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = MOVE v8|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOV [v10|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v8|QWORD[*]], y: v11|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v8|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v8|QWORD[*] + 12], y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v8|QWORD[*] + 16], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v8|QWORD[*] + 20], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = SUB (x: v2|DWORD, ~y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v8|QWORD[*] + 24], y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD[.] = COMPRESSPOINTER (input: v0|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@eb4ea6e encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v8|QWORD[*] + 28], y: v14|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v8|QWORD[*] + 32], y: v14|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@51a211b7 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD, y: [v0|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v1|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = LEA [v4|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v5|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v4|QWORD + 232] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v4|QWORD] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = MOVE v8|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOV [v10|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v8|QWORD[*]], y: v11|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v8|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v8|QWORD[*] + 12], y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v8|QWORD[*] + 16], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v8|QWORD[*] + 20], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = SUB (x: v2|DWORD, ~y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v8|QWORD[*] + 24], y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD[.] = COMPRESSPOINTER (input: v0|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@eb4ea6e encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v8|QWORD[*] + 28], y: v14|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v8|QWORD[*] + 32], y: v14|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v6|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[6|0x6] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.subList(ArrayList.java:1004) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v7|QWORD[.]] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-13075|0xffffffffffffcced]] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v3|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.subList(ArrayList.java:1004) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-12563|0xffffffffffffceed]] destination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-12819|0xffffffffffffcded]] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: iload_2       
     2: aload_0       
     3: getfield      #0          // size:int
     6: invokestatic  #47         // subListRangeCheck:(int, int, int)void
     9: new           #67         // java.util.ArrayList$SubList
    12: dup           
    13: aload_0       
    14: aload_0       
    15: iconst_0      
    16: iload_1       
    17: iload_2       
    18: invokespecial #48         // java.util.ArrayList$SubList.<init>:(java.util.ArrayList, java.util.AbstractList, int, int, int)void
    21: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@51a211b7 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r14|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction CMP (x: rcx|DWORD, y: [r13|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   24  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   34  <|@ instruction CMP (x: r14|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   36  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   56  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 40] size: QWORD <|@ <|@
      nr   58  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   60  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   82  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   84  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 232] instr: 0 <|@ <|@
      nr   86  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   92  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr   94  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>} <|@ <|@
      nr   96  <|@ instruction rdx|QWORD = MOV [rdx|QWORD + 168] size: QWORD <|@ <|@
      nr   98  <|@ instruction MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  100  <|@ instruction MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed} <|@ <|@
      nr  102  <|@ instruction rdx|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  104  <|@ instruction MOV (x: [rax|QWORD[*] + 12], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  106  <|@ instruction MOV (x: [rax|QWORD[*] + 16], y: r14|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction MOV (x: [rax|QWORD[*] + 20], y: r14|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: r14|DWORD) size: DWORD <|@ <|@
      nr  112  <|@ instruction MOV (x: [rax|QWORD[*] + 24], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  114  <|@ instruction r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@eb4ea6e encoding: base: 0 shift: 3 <|@ <|@
      nr  116  <|@ instruction MOV (x: [rax|QWORD[*] + 28], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr  118  <|@ instruction MOV (x: [rax|QWORD[*] + 32], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr  120  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction stack:28|DWORD = MOVE rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   66  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   68  <|@ instruction rdx|DWORD = MOVE input: int[6|0x6] <|@ <|@
      nr   70  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   72  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
java.util.ArrayList.subList(ArrayList.java:1004) [bci: 0]
locals: r13|QWORD[.] r14|DWORD stack:28|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   74  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   76  <|@ instruction rcx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   40  <|@ instruction r10|DWORD = MOVE input: int[-13075|0xffffffffffffcced] <|@ <|@
      nr   42  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   46  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr   48  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   50  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
java.util.ArrayList.subList(ArrayList.java:1004) [bci: 0]
locals: r13|QWORD[.] r14|DWORD rcx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction r10|DWORD = MOVE input: int[-12563|0xffffffffffffceed] <|@ <|@
      nr   18  <|@ instruction JUMP ~[] destination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ instruction r10|DWORD = MOVE input: int[-12819|0xffffffffffffcded] <|@ <|@
      nr   30  <|@ instruction JUMP ~[] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: iload_2       
     2: aload_0       
     3: getfield      #0          // size:int
     6: invokestatic  #47         // subListRangeCheck:(int, int, int)void
     9: new           #67         // java.util.ArrayList$SubList
    12: dup           
    13: aload_0       
    14: aload_0       
    15: iconst_0      
    16: iload_1       
    17: iload_2       
    18: invokespecial #48         // java.util.ArrayList$SubList.<init>:(java.util.ArrayList, java.util.AbstractList, int, int, int)void
    21: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@51a211b7 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r14|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction CMP (x: rcx|DWORD, y: [r13|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   24  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   34  <|@ instruction CMP (x: r14|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   36  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   56  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 40] size: QWORD <|@ <|@
      nr   58  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   60  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   82  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   84  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 232] instr: 0 <|@ <|@
      nr   86  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   92  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr   94  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>} <|@ <|@
      nr   96  <|@ instruction rdx|QWORD = MOV [rdx|QWORD + 168] size: QWORD <|@ <|@
      nr   98  <|@ instruction MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  100  <|@ instruction MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed} <|@ <|@
      nr  102  <|@ instruction rdx|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  104  <|@ instruction MOV (x: [rax|QWORD[*] + 12], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  106  <|@ instruction MOV (x: [rax|QWORD[*] + 16], y: r14|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction MOV (x: [rax|QWORD[*] + 20], y: r14|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: r14|DWORD) size: DWORD <|@ <|@
      nr  112  <|@ instruction MOV (x: [rax|QWORD[*] + 24], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  114  <|@ instruction r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@eb4ea6e encoding: base: 0 shift: 3 <|@ <|@
      nr  116  <|@ instruction MOV (x: [rax|QWORD[*] + 28], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr  118  <|@ instruction MOV (x: [rax|QWORD[*] + 32], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr  120  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction stack:28|DWORD = MOVE rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   66  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   68  <|@ instruction rdx|DWORD = MOVE input: int[6|0x6] <|@ <|@
      nr   70  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   72  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
java.util.ArrayList.subList(ArrayList.java:1004) [bci: 0]
locals: r13|QWORD[.] r14|DWORD stack:28|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   74  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   76  <|@ instruction rcx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   40  <|@ instruction r10|DWORD = MOVE input: int[-13075|0xffffffffffffcced] <|@ <|@
      nr   42  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   46  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr   48  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   50  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
java.util.ArrayList.subList(ArrayList.java:1004) [bci: 0]
locals: r13|QWORD[.] r14|DWORD rcx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction r10|DWORD = MOVE input: int[-12563|0xffffffffffffceed] <|@ <|@
      nr   18  <|@ instruction JUMP ~[] destination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ instruction r10|DWORD = MOVE input: int[-12819|0xffffffffffffcded] <|@ <|@
      nr   30  <|@ instruction JUMP ~[] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: iload_2       
     2: aload_0       
     3: getfield      #0          // size:int
     6: invokestatic  #47         // subListRangeCheck:(int, int, int)void
     9: new           #67         // java.util.ArrayList$SubList
    12: dup           
    13: aload_0       
    14: aload_0       
    15: iconst_0      
    16: iload_1       
    17: iload_2       
    18: invokespecial #48         // java.util.ArrayList$SubList.<init>:(java.util.ArrayList, java.util.AbstractList, int, int, int)void
    21: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c24104c8bee448bf24585f60f8cc3000000413b4d100f8fc1000000443bf10f8f96000000498b4760488d7028493b77700f8760000000498977600f1880e8000000488bf048baaddeaddeaddeadde488b92a8000000488910c74008addeadde418b550c89500c4489701044897014412bce89481849c1ed034489681c44896820488bc6488b6c24104883c418850500000000c5f877c3894c240448beaddeaddeaddeaddeba06000000b901000000e800000000908b4c2404eb8741baedccffff4589979c0200004d89a7a8020000e8000000009041baedceffffebe441baedcdffffebdce80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@51a211b7 slotKind: QWORD  <||@
  Comment 48 6 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 51 8 r14|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 54 10 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 57 12 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 63 block B2 null  <||@
  Comment 63 20 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 63 22 CMP (x: rcx|DWORD, y: [r13|QWORD[.] + 16]) size: DWORD  <||@
  Comment 67 24 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4  <||@
  Comment 73 block B4 null  <||@
  Comment 73 32 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 73 34 CMP (x: r14|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 76 36 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B7  <||@
  Comment 82 block B7 null  <||@
  Comment 82 52 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 82 54 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 86 56 rsi|QWORD = LEA [rax|QWORD + 40] size: QWORD  <||@
  Comment 90 58 CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 94 60 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9  <||@
  Comment 100 block B9 null  <||@
  Comment 100 80 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 100 82 MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD  <||@
  Comment 104 84 AMD64PREFETCH ~[rax|QWORD + 232] instr: 0  <||@
  Comment 111 86 rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 111 88 JUMP ~[] destination: B9 -> B10  <||@
  Comment 111 block B10 null  <||@
  Comment 111 90 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 111 92 rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 114 94 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>}  <||@
  Comment 114 {meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>}}  <||@
  Comment 124 96 rdx|QWORD = MOV [rdx|QWORD + 168] size: QWORD  <||@
  Comment 131 98 MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD  <||@
  Comment 134 100 MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed}  <||@
  Comment 134 {meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed}}  <||@
  Comment 141 102 rdx|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD  <||@
  Comment 145 104 MOV (x: [rax|QWORD[*] + 12], y: rdx|DWORD) size: DWORD  <||@
  Comment 148 106 MOV (x: [rax|QWORD[*] + 16], y: r14|DWORD) size: DWORD  <||@
  Comment 152 108 MOV (x: [rax|QWORD[*] + 20], y: r14|DWORD) size: DWORD  <||@
  Comment 156 110 rcx|DWORD = SUB (x: rcx|DWORD, ~y: r14|DWORD) size: DWORD  <||@
  Comment 159 112 MOV (x: [rax|QWORD[*] + 24], y: rcx|DWORD) size: DWORD  <||@
  Comment 162 114 r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@eb4ea6e encoding: base: 0 shift: 3  <||@
  Comment 166 116 MOV (x: [rax|QWORD[*] + 28], y: r13|DWORD[.]) size: DWORD  <||@
  Comment 170 118 MOV (x: [rax|QWORD[*] + 32], y: r13|DWORD[.]) size: DWORD  <||@
  Comment 174 120 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 177 122 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 186 12  <||@
  Comment 196 block B8 null  <||@
  Comment 196 62 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 196 64 stack:28|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 200 66 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 200 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 210 68 rdx|DWORD = MOVE input: int[6|0x6]  <||@
  Comment 215 70 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 220 72 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 220 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 225 [r13:0]at java.util.ArrayList.subList(ArrayList.java:1004) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2              
     locals:  |r13|QWORD[.]  |r14|DWORD  |stack:28|DWORD   <||@
  Comment 226 74 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 226 76 rcx|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 230 78 JUMP ~[] destination: B8 -> B10  <||@
  Comment 232 block B5 null  <||@
  Comment 232 38 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 232 40 r10|DWORD = MOVE input: int[-13075|0xffffffffffffcced]  <||@
  Comment 238 42 JUMP ~[] destination: B5 -> B6  <||@
  Comment 238 block B6 null  <||@
  Comment 238 44 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 238 46 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 245 48 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 252 50 DEOPT info [bci:0]  <||@
  Comment 252 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 257 [r13:0]at java.util.ArrayList.subList(ArrayList.java:1004) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2         
     locals:  |r13|QWORD[.]  |r14|DWORD  |rcx|DWORD   <||@
  Comment 258 block B1 null  <||@
  Comment 258 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 258 16 r10|DWORD = MOVE input: int[-12563|0xffffffffffffceed]  <||@
  Comment 264 18 JUMP ~[] destination: B1 -> B6  <||@
  Comment 266 block B3 null  <||@
  Comment 266 26 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 266 28 r10|DWORD = MOVE input: int[-12819|0xffffffffffffcded]  <||@
  Comment 272 30 JUMP ~[] destination: B3 -> B6  <||@
  Comment 274 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 274 4  <||@
  Comment 280 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 280 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-9272[java.util.ArrayList.subList(int, int)]"
  method "HotSpotCompilation-9272[java.util.ArrayList.subList(int, int)]"
  date 1527005203458
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 106b282a0 448b560849c1e203493bc20f85afdbcdff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c24104c8bee448bf24585f60f8cc3000000413b4d100f8fc1000000443bf10f8f96000000498b4760488d7028493b77700f8760000000498977600f1880e8000000488bf048ba786805c007000000488b92a8000000488910c740080fad00f8418b550c89500c4489701044897014412bce89481849c1ed034489681c44896820488bc6488b6c24104883c4188505a66cd6fdc5f877c3894c240448be680b00c007000000ba06000000b901000000e85fea4600908b4c2404eb8741baedccffff4589979c0200004d89a7a8020000e85df2cdff9041baedceffffebe441baedcdffffebdce86922120090e843f1cdff90f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@51a211b7 slotKind: QWORD  <||@
  Comment 48 6 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 51 8 r14|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 54 10 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 57 12 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 63 block B2 null  <||@
  Comment 63 20 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 63 22 CMP (x: rcx|DWORD, y: [r13|QWORD[.] + 16]) size: DWORD  <||@
  Comment 67 24 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4  <||@
  Comment 73 block B4 null  <||@
  Comment 73 32 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 73 34 CMP (x: r14|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 76 36 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B7  <||@
  Comment 82 block B7 null  <||@
  Comment 82 52 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 82 54 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 86 56 rsi|QWORD = LEA [rax|QWORD + 40] size: QWORD  <||@
  Comment 90 58 CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 94 60 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9  <||@
  Comment 100 block B9 null  <||@
  Comment 100 80 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 100 82 MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD  <||@
  Comment 104 84 AMD64PREFETCH ~[rax|QWORD + 232] instr: 0  <||@
  Comment 111 86 rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 111 88 JUMP ~[] destination: B9 -> B10  <||@
  Comment 111 block B10 null  <||@
  Comment 111 90 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 111 92 rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 114 94 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>}  <||@
  Comment 114 {meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>}}  <||@
  Comment 124 96 rdx|QWORD = MOV [rdx|QWORD + 168] size: QWORD  <||@
  Comment 131 98 MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD  <||@
  Comment 134 100 MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed}  <||@
  Comment 134 {meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed}}  <||@
  Comment 141 102 rdx|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD  <||@
  Comment 145 104 MOV (x: [rax|QWORD[*] + 12], y: rdx|DWORD) size: DWORD  <||@
  Comment 148 106 MOV (x: [rax|QWORD[*] + 16], y: r14|DWORD) size: DWORD  <||@
  Comment 152 108 MOV (x: [rax|QWORD[*] + 20], y: r14|DWORD) size: DWORD  <||@
  Comment 156 110 rcx|DWORD = SUB (x: rcx|DWORD, ~y: r14|DWORD) size: DWORD  <||@
  Comment 159 112 MOV (x: [rax|QWORD[*] + 24], y: rcx|DWORD) size: DWORD  <||@
  Comment 162 114 r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@eb4ea6e encoding: base: 0 shift: 3  <||@
  Comment 166 116 MOV (x: [rax|QWORD[*] + 28], y: r13|DWORD[.]) size: DWORD  <||@
  Comment 170 118 MOV (x: [rax|QWORD[*] + 32], y: r13|DWORD[.]) size: DWORD  <||@
  Comment 174 120 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 177 122 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 186 12  <||@
  Comment 196 block B8 null  <||@
  Comment 196 62 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 196 64 stack:28|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 200 66 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 200 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 210 68 rdx|DWORD = MOVE input: int[6|0x6]  <||@
  Comment 215 70 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 220 72 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 220 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 225 [r13:0]at java.util.ArrayList.subList(ArrayList.java:1004) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2              
     locals:  |r13|QWORD[.]  |r14|DWORD  |stack:28|DWORD   <||@
  Comment 226 74 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 226 76 rcx|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 230 78 JUMP ~[] destination: B8 -> B10  <||@
  Comment 232 block B5 null  <||@
  Comment 232 38 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 232 40 r10|DWORD = MOVE input: int[-13075|0xffffffffffffcced]  <||@
  Comment 238 42 JUMP ~[] destination: B5 -> B6  <||@
  Comment 238 block B6 null  <||@
  Comment 238 44 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 238 46 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 245 48 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 252 50 DEOPT info [bci:0]  <||@
  Comment 252 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 257 [r13:0]at java.util.ArrayList.subList(ArrayList.java:1004) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2         
     locals:  |r13|QWORD[.]  |r14|DWORD  |rcx|DWORD   <||@
  Comment 258 block B1 null  <||@
  Comment 258 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 258 16 r10|DWORD = MOVE input: int[-12563|0xffffffffffffceed]  <||@
  Comment 264 18 JUMP ~[] destination: B1 -> B6  <||@
  Comment 266 block B3 null  <||@
  Comment 266 26 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 266 28 r10|DWORD = MOVE input: int[-12819|0xffffffffffffcded]  <||@
  Comment 272 30 JUMP ~[] destination: B3 -> B6  <||@
  Comment 274 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 274 4  <||@
  Comment 280 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 280 5  <||@
  HexCodeFile>>> <|@
end_nmethod
