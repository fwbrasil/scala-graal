begin_compilation
  name " HotSpotCompilation-5328[java.util.Formatter$FormatSpecifier.precision(String)]"
  method "HotSpotCompilation-5328[java.util.Formatter$FormatSpecifier.precision(String)]"
  date 1527005150179
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v57 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v57  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/Formatter$FormatSpecifier;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?19 v170 ?6 ?46 ?46 ?19 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v57 v70 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.precision(Formatter.java:2669) [bci: 1]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v57 i45 v53 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Formatter$FormatSpecifier.precision
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.precision(Formatter.java:2669) [bci: 2]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v170 
value: i4 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v11 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v170 value: i4 stateAfter: - lastLocationAccess: - #next: v11  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# Ljava/lang/String;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v171 ?6 v8 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.precision(Formatter.java:2670) [bci: 6]
stamp: void
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v11 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2  <|@  <|@
f <@*|@fixed>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.precision(Formatter.java:2670) [bci: 6]
stamp: void
trueSuccessorProbability: 0.9994799738175872
=== Inputs ===
condition: v8 
=== Succesors ===
trueSuccessor: v9 
falseSuccessor: v10 
=== Usages ===
=== Predecessor ===
v57 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v8 #trueSuccessor: v9 #falseSuccessor: v10  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607177734820574734
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.precision(Formatter.java:2680) [bci: 58]
stamp: void
=== Inputs ===
=== Succesors ===
next: v53 
=== Usages ===
=== Predecessor ===
v11 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v53  <|@  <|@
f <@*|@fixed>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.precision(Formatter.java:2680) [bci: 58]
stamp: void
=== Inputs ===
result: i4 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v9 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i4 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4557935618220869632
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.precision(Formatter.java:2673) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: a168 
=== Usages ===
=== Predecessor ===
v11 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a168  <|@  <|@
f <@~|@floating>@ <|@
tid v171 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a168 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a168 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.substring(String.java:1929) [bci: 14]
at java.util.Formatter$FormatSpecifier.precision(Formatter.java:2673) [bci: 12]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v171 
=== Succesors ===
next: i169 
=== Usages ===
a61 v172 
=== Predecessor ===
v10 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v171 #next: i169  <|@  <|@
tid ?6 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<Formatter$FormatSpecifier.precision(String)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.precision(Formatter.java:2669) [bci: 2]
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2670
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - 
=== Succesors ===
=== Usages ===
v106 a125 i169 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 -  <|@  <|@
f <@~|@floating>@ <|@
tid v172 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a168 
=== Succesors ===
=== Usages ===
i169 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a168  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i169 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.substring(String.java:1929) [bci: 17]
at java.util.Formatter$FormatSpecifier.precision(Formatter.java:2673) [bci: 12]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?6 
guard: - 
address: v172 
=== Succesors ===
next: v81 
=== Usages ===
i45 
=== Predecessor ===
a168 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?6 guard: - address: v172 #next: v81  <|@  <|@
f <@~|@floating>@ <|@
tid i45 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.String.substring(String.java:1929) [bci: 19]
at java.util.Formatter$FormatSpecifier.precision(Formatter.java:2673) [bci: 12]
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i169 
y: i4 
=== Succesors ===
=== Usages ===
v37 v68 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i169 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid i24 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.precision(Formatter.java:2674) [bci: 25]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v25 v37 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.substring(String.java:1930) [bci: 22]
at java.util.Formatter$FormatSpecifier.precision(Formatter.java:2673) [bci: 12]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i45 
y: i24 
=== Succesors ===
=== Usages ===
v81 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i45 y: i24  <|@  <|@
f <@*|@fixed>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1930) [bci: 22]
at java.util.Formatter$FormatSpecifier.precision(Formatter.java:2673) [bci: 12]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v37 
=== Succesors ===
trueSuccessor: v80 
falseSuccessor: v78 
=== Usages ===
=== Predecessor ===
i169 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v37 #trueSuccessor: v80 #falseSuccessor: v78  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1930) [bci: 22]
at java.util.Formatter$FormatSpecifier.precision(Formatter.java:2673) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v106 
=== Usages ===
=== Predecessor ===
v81 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v106  <|@  <|@
f <@~|@floating>@ <|@
tid a103 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v106 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i108 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -17171
stableDimension: 0
stamp: i32 [-17171] ⇊00000000ffffbced ⇈00000000ffffbced
stampKind: i32
value: int[-17171|0xffffffffffffbced]
=== Inputs ===
=== Succesors ===
=== Usages ===
v106 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?6 
actionAndReason: i108 
speculation: a103 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v80 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?6 actionAndReason: i108 speculation: a103  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4557935618220869632
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1930) [bci: 22]
at java.util.Formatter$FormatSpecifier.precision(Formatter.java:2673) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: j112 
=== Usages ===
=== Predecessor ===
v81 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j112  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j112 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j132 
=== Usages ===
v173 v174 
=== Predecessor ===
v78 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j132  <|@  <|@
f <@~|@floating>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j112 
index: - 
=== Succesors ===
=== Usages ===
j132 v134 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j112 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j132 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v173 
=== Succesors ===
next: j133 
=== Usages ===
j161 j138 v178 
=== Predecessor ===
j112 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v173 #next: j133  <|@  <|@
f <@~|@floating>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j112 
index: - 
=== Succesors ===
=== Usages ===
j133 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j112 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j133 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v174 
=== Succesors ===
next: v120 
=== Usages ===
v117 
=== Predecessor ===
j132 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v174 #next: v120  <|@  <|@
f <@~|@floating>@ <|@
tid j160 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j161 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j161 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j132 
y: j160 
=== Succesors ===
=== Usages ===
v117 v134 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j132 y: j160  <|@  <|@
f <@~|@floating>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j133 
y: j161 
=== Succesors ===
=== Usages ===
v120 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j133 y: j161  <|@  <|@
f <@~|@floating>@ <|@
tid i12 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.precision(Formatter.java:2673) [bci: 11]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v68 a125 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v117 
=== Succesors ===
trueSuccessor: v118 
falseSuccessor: v119 
=== Usages ===
=== Predecessor ===
j133 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v117 #trueSuccessor: v118 #falseSuccessor: v119  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4527753411415079655
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a125 
=== Usages ===
=== Predecessor ===
v120 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a125  <|@  <|@
f <@~|@floating>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a125 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i123 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
a125 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a125 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?6 
arguments: v110 i123 i12 
=== Succesors ===
next: j126 
=== Usages ===
j126 
=== Predecessor ===
v118 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?6 arguments: v110 i123 i12 #next: j126  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j126 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a125 
=== Succesors ===
next: v139 
=== Usages ===
j138 
=== Predecessor ===
a125 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a125 #next: v139  <|@  <|@
f <@*|@fixed>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v136 
=== Predecessor ===
j126 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4557887654271376650
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v134 
=== Usages ===
=== Predecessor ===
v120 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v134  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v173 
value: j161 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v130 
=== Usages ===
=== Predecessor ===
v119 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v173 value: j161 stateAfter: - lastLocationAccess: - #next: v130  <|@  <|@
f <@~|@floating>@ <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j132 
index: - 
=== Succesors ===
=== Usages ===
v130 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j132 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v178 
=== Succesors ===
next: v137 
=== Usages ===
=== Predecessor ===
v134 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v178 #next: v137  <|@  <|@
f <@*|@fixed>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v136 
=== Predecessor ===
v130 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4557935618220869632
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j138 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v136 
values: j132 j126 
=== Succesors ===
=== Usages ===
v177 v176 a89 v179 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v136 values: j132 j126  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v137 v139 
=== Succesors ===
next: a89 
=== Usages ===
j138 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v137 v139 #next: a89  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a89 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j138 
=== Succesors ===
next: j150 
=== Usages ===
a95 
=== Predecessor ===
v136 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j138 #next: j150  <|@  <|@
f <@~|@floating>@ <|@
tid v144 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/lang/String;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j145 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j145 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v144 
=== Succesors ===
=== Usages ===
v175 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v144  <|@  <|@
f <@~|@floating>@ <|@
tid v175 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j145 
index: - 
=== Succesors ===
=== Usages ===
j150 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j145 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j150 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v175 
=== Succesors ===
next: v151 
=== Usages ===
v151 
=== Predecessor ===
a89 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v175 #next: v151  <|@  <|@
f <@~|@floating>@ <|@
tid v176 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j138 
index: - 
=== Succesors ===
=== Usages ===
v151 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j138 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v151 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v176 
value: j150 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v155 
=== Usages ===
=== Predecessor ===
j150 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v176 value: j150 stateAfter: - lastLocationAccess: - #next: v155  <|@  <|@
f <@~|@floating>@ <|@
tid v177 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j138 
index: - 
=== Succesors ===
=== Usages ===
v155 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j138 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v155 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v177 
value: v165 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v159 
=== Usages ===
=== Predecessor ===
v151 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v177 value: v165 stateAfter: - lastLocationAccess: - #next: v159  <|@  <|@
f <@~|@floating>@ <|@
tid v179 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j138 
index: - 
=== Succesors ===
=== Usages ===
v159 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j138 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j87 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v159 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v179 
value: j87 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a95 
=== Usages ===
=== Predecessor ===
v155 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v179 value: j87 stateAfter: - lastLocationAccess: - #next: a95  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a95 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a89 
=== Succesors ===
next: v96 
=== Usages ===
v68 ?51 v69 
=== Predecessor ===
v159 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a89 #next: v96  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v42 
=== Usages ===
=== Predecessor ===
a95 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v42  <|@  <|@
f <@~|@floating>@ <|@
tid a61 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.substring(String.java:1929) [bci: 14]
at java.util.Formatter$FormatSpecifier.precision(Formatter.java:2673) [bci: 12]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a168 
=== Succesors ===
=== Usages ===
v68 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a168  <|@  <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.String.substring(String.java:1933) [bci: 52]
at java.util.Formatter$FormatSpecifier.precision(Formatter.java:2673) [bci: 12]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@1fbc7eb7
stamp: void
targetMethod: HotSpotMethod<String.<init>(char[], int, int)>
=== Inputs ===
arguments: a95 a61 i12 i45 
=== Succesors ===
=== Usages ===
v42 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a95 a61 i12 i45  <|@  <|@
tid ?46 <|@
d <@d|@=== Debug Properties ===
bci: 12
code: ResolvedJavaMethodBytecode<Formatter$FormatSpecifier.precision(String)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2673
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 - - a1 
=== Succesors ===
=== Usages ===
?98 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - a1  <|@  <|@
tid a48 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@5a86b9fc
hasIdentity: true
objectId: 0
stamp: a!# Ljava/lang/String;
type: HotSpotType<Ljava/lang/String;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?51 ?98 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?51 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a48 
materializedValue: a95 
=== Succesors ===
=== Usages ===
?98 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a48 materializedValue: a95  <|@  <|@
tid ?98 <|@
d <@d|@=== Debug Properties ===
bci: 52
code: ResolvedJavaMethodBytecode<String.substring(int)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: String.java
sourceLine: 1933
stackSize: 1
=== Inputs ===
outerFrameState: ?46 
values: - - - a48 
virtualObjectMappings: ?51 
=== Succesors ===
=== Usages ===
v42 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?46 values: - - - a48 virtualObjectMappings: ?51  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
bci: 52
nodeSourcePosition: at java.lang.String.substring(String.java:1933) [bci: 52]
at java.util.Formatter$FormatSpecifier.precision(Formatter.java:2673) [bci: 12]
polymorphic: false
stamp: void
targetMethod: Direct#String.<init>
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v68 
stateDuring: ?98 
=== Succesors ===
next: i18 
=== Usages ===
=== Predecessor ===
v96 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v68 stateDuring: ?98 #next: i18  <|@  <|@
f <@~|@floating>@ <|@
tid i16 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.parseInt(Integer.java:615) [bci: 1]
at java.util.Formatter$FormatSpecifier.precision(Formatter.java:2673) [bci: 15]
rawvalue: 10
stableDimension: 0
stamp: i32 [10] ⇊000000000000000a ⇈000000000000000a
stampKind: i32
value: int[10|0xa]
=== Inputs ===
=== Succesors ===
=== Usages ===
v69 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at java.lang.Integer.parseInt(Integer.java:615) [bci: 3]
at java.util.Formatter$FormatSpecifier.precision(Formatter.java:2673) [bci: 15]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@75c69f85
stamp: void
targetMethod: HotSpotMethod<Integer.parseInt(String, int)>
=== Inputs ===
arguments: a95 i16 
=== Succesors ===
=== Usages ===
i18 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a95 i16  <|@  <|@
tid ?19 <|@
d <@d|@=== Debug Properties ===
bci: 15
code: ResolvedJavaMethodBytecode<Formatter$FormatSpecifier.precision(String)>
duringCall: true
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.lang.Integer.parseInt(Integer.java:615) [bci: 3]
at java.util.Formatter$FormatSpecifier.precision(Formatter.java:2673) [bci: 15]
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2673
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 - - a1 
=== Succesors ===
=== Usages ===
?20 ?99 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - a1  <|@  <|@
tid ?99 <|@
d <@d|@=== Debug Properties ===
bci: 3
code: ResolvedJavaMethodBytecode<Integer.parseInt(String)>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: Integer.java
sourceLine: 615
stackSize: 0
=== Inputs ===
outerFrameState: ?19 
values: - 
=== Succesors ===
=== Usages ===
i18 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?19 values: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i18 <|@
d <@d|@=== Debug Properties ===
bci: 3
nodeSourcePosition: at java.lang.Integer.parseInt(Integer.java:615) [bci: 3]
at java.util.Formatter$FormatSpecifier.precision(Formatter.java:2673) [bci: 15]
polymorphic: false
stamp: i32
targetMethod: Direct#Integer.parseInt
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v69 
stateDuring: ?99 
=== Succesors ===
next: v85 
=== Usages ===
?20 v70 v25 v54 
=== Predecessor ===
v42 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v69 stateDuring: ?99 #next: v85  <|@  <|@
f <@~|@floating>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.precision(Formatter.java:2674) [bci: 25]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i18 
y: i24 
=== Succesors ===
=== Usages ===
v85 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i18 y: i24  <|@  <|@
f <@*|@fixed>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.precision(Formatter.java:2674) [bci: 25]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v25 
=== Succesors ===
trueSuccessor: v84 
falseSuccessor: v82 
=== Usages ===
=== Predecessor ===
i18 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v25 #trueSuccessor: v84 #falseSuccessor: v82  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.precision(Formatter.java:2674) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v83 
=== Usages ===
=== Predecessor ===
v85 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v83  <|@  <|@
tid ?20 <|@
d <@d|@=== Debug Properties ===
bci: 6
code: ResolvedJavaMethodBytecode<Integer.parseInt(String)>
duringCall: false
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.lang.Integer.parseInt(Integer.java:615) [bci: 3]
at java.util.Formatter$FormatSpecifier.precision(Formatter.java:2673) [bci: 15]
rethrowException: false
sourceFile: Integer.java
sourceLine: 615
stackSize: 1
=== Inputs ===
outerFrameState: ?19 
values: - i18 
=== Succesors ===
=== Usages ===
v83 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?19 values: - i18  <|@  <|@
f <@*|@fixed>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 71
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.precision(Formatter.java:2674) [bci: 25]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?20 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v84 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?20  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 4557935618220869632
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.precision(Formatter.java:2674) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v70 
=== Usages ===
=== Predecessor ===
v85 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v70  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Formatter$FormatSpecifier.precision
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.precision(Formatter.java:2673) [bci: 18]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v170 
value: i18 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v54 
=== Usages ===
=== Predecessor ===
v82 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v170 value: i18 stateAfter: - lastLocationAccess: - #next: v54  <|@  <|@
f <@*|@fixed>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.precision(Formatter.java:2680) [bci: 58]
stamp: void
=== Inputs ===
result: i18 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v70 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i18 memoryMap: -  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v57 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v57  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/Formatter$FormatSpecifier;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?19 v170 ?6 ?46 ?46 ?19 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v170 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v57 v70 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.precision(Formatter.java:2669) [bci: 1]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v57 i45 v53 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Formatter$FormatSpecifier.precision
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.precision(Formatter.java:2669) [bci: 2]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v170 
value: i4 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v11 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v170 value: i4 stateAfter: - lastLocationAccess: - #next: v11  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# Ljava/lang/String;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v171 ?6 v8 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.precision(Formatter.java:2670) [bci: 6]
stamp: void
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v11 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2  <|@  <|@
f <@*|@fixed>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.precision(Formatter.java:2670) [bci: 6]
stamp: void
trueSuccessorProbability: 0.9994799738175872
=== Inputs ===
condition: v8 
=== Succesors ===
trueSuccessor: v9 
falseSuccessor: v10 
=== Usages ===
=== Predecessor ===
v57 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v8 #trueSuccessor: v9 #falseSuccessor: v10  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@5e543630 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 20] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9994799738175872 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607177734820574734
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.precision(Formatter.java:2680) [bci: 58]
stamp: void
=== Inputs ===
=== Succesors ===
next: v53 
=== Usages ===
=== Predecessor ===
v11 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v53  <|@  <|@
f <@*|@fixed>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.precision(Formatter.java:2680) [bci: 58]
stamp: void
=== Inputs ===
result: i4 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v9 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i4 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4557935618220869632
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.precision(Formatter.java:2673) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: a168 
=== Usages ===
=== Predecessor ===
v11 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a168  <|@  <|@
f <@~|@floating>@ <|@
tid v171 <|@
result [v1|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a168 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a168 <|@
result v2|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.substring(String.java:1929) [bci: 14]
at java.util.Formatter$FormatSpecifier.precision(Formatter.java:2673) [bci: 12]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v171 
=== Succesors ===
next: i169 
=== Usages ===
a61 v172 
=== Predecessor ===
v10 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v171 #next: i169  <|@  <|@
tid ?6 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<Formatter$FormatSpecifier.precision(String)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.precision(Formatter.java:2669) [bci: 2]
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2670
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - 
=== Succesors ===
=== Usages ===
v106 a125 i169 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 -  <|@  <|@
f <@~|@floating>@ <|@
tid v172 <|@
result [v2|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a168 
=== Succesors ===
=== Usages ===
i169 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a168  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i169 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.substring(String.java:1929) [bci: 17]
at java.util.Formatter$FormatSpecifier.precision(Formatter.java:2673) [bci: 12]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?6 
guard: - 
address: v172 
=== Succesors ===
next: v81 
=== Usages ===
i45 
=== Predecessor ===
a168 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?6 guard: - address: v172 #next: v81  <|@  <|@
f <@~|@floating>@ <|@
tid i45 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.String.substring(String.java:1929) [bci: 19]
at java.util.Formatter$FormatSpecifier.precision(Formatter.java:2673) [bci: 12]
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i169 
y: i4 
=== Succesors ===
=== Usages ===
v37 v68 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i169 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid i24 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.precision(Formatter.java:2674) [bci: 25]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v25 v37 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.substring(String.java:1930) [bci: 22]
at java.util.Formatter$FormatSpecifier.precision(Formatter.java:2673) [bci: 12]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i45 
y: i24 
=== Succesors ===
=== Usages ===
v81 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i45 y: i24  <|@  <|@
f <@*|@fixed>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1930) [bci: 22]
at java.util.Formatter$FormatSpecifier.precision(Formatter.java:2673) [bci: 12]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v37 
=== Succesors ===
trueSuccessor: v80 
falseSuccessor: v78 
=== Usages ===
=== Predecessor ===
i169 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v37 #trueSuccessor: v80 #falseSuccessor: v78  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[.] = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.precision(Formatter.java:2670) [bci: 5]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v4|DWORD = ADD (x: v3|DWORD, ~y: [v2|DWORD[.] * 8 + 12]) size: DWORD state [bci:5] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1930) [bci: 22]
at java.util.Formatter$FormatSpecifier.precision(Formatter.java:2673) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v106 
=== Usages ===
=== Predecessor ===
v81 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v106  <|@  <|@
f <@~|@floating>@ <|@
tid a103 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v106 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i108 <|@
result int[-17171|0xffffffffffffbced] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -17171
stableDimension: 0
stamp: i32 [-17171] ⇊00000000ffffbced ⇈00000000ffffbced
stampKind: i32
value: int[-17171|0xffffffffffffbced]
=== Inputs ===
=== Succesors ===
=== Usages ===
v106 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?6 
actionAndReason: i108 
speculation: a103 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v80 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?6 actionAndReason: i108 speculation: a103  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -17171 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.precision(Formatter.java:2670) [bci: 5]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4557935618220869632
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1930) [bci: 22]
at java.util.Formatter$FormatSpecifier.precision(Formatter.java:2673) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: j112 
=== Usages ===
=== Predecessor ===
v81 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j112  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j112 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j132 
=== Usages ===
v173 v174 
=== Predecessor ===
v78 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j132  <|@  <|@
f <@~|@floating>@ <|@
tid v173 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j112 
index: - 
=== Succesors ===
=== Usages ===
j132 v134 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j112 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j132 <|@
result v5|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v173 
=== Succesors ===
next: j133 
=== Usages ===
j161 j138 v178 
=== Predecessor ===
j112 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v173 #next: j133  <|@  <|@
f <@~|@floating>@ <|@
tid v174 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j112 
index: - 
=== Succesors ===
=== Usages ===
j133 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j112 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j133 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v174 
=== Succesors ===
next: v120 
=== Usages ===
v117 
=== Predecessor ===
j132 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v174 #next: v120  <|@  <|@
f <@~|@floating>@ <|@
tid j160 <|@
result long[24|0x18] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j161 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j161 <|@
result v6|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j132 
y: j160 
=== Succesors ===
=== Usages ===
v117 v134 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j132 y: j160  <|@  <|@
f <@~|@floating>@ <|@
tid v117 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j133 
y: j161 
=== Succesors ===
=== Usages ===
v120 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j133 y: j161  <|@  <|@
f <@~|@floating>@ <|@
tid i12 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.precision(Formatter.java:2673) [bci: 11]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v68 a125 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v120 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v117 
=== Succesors ===
trueSuccessor: v118 
falseSuccessor: v119 
=== Usages ===
=== Predecessor ===
j133 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v117 #trueSuccessor: v118 #falseSuccessor: v119  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = LEA [v5|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v6|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4527753411415079655
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a125 
=== Usages ===
=== Predecessor ===
v120 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a125  <|@  <|@
f <@~|@floating>@ <|@
tid v110 <|@
result v7|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a125 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i123 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
a125 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a125 <|@
result v8|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?6 
arguments: v110 i123 i12 
=== Succesors ===
next: j126 
=== Usages ===
j126 
=== Predecessor ===
v118 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?6 arguments: v110 i123 i12 #next: j126  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j126 <|@
result v8|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a125 
=== Succesors ===
next: v139 
=== Usages ===
j138 
=== Predecessor ===
a125 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a125 #next: v139  <|@  <|@
f <@*|@fixed>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v136 
=== Predecessor ===
j126 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v7|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.precision(Formatter.java:2670) [bci: 5]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:5] <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v8|QWORD[.]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4557887654271376650
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v134 
=== Usages ===
=== Predecessor ===
v120 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v134  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v173 
value: j161 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v130 
=== Usages ===
=== Predecessor ===
v119 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v173 value: j161 stateAfter: - lastLocationAccess: - #next: v130  <|@  <|@
f <@~|@floating>@ <|@
tid v178 <|@
result [v5|QWORD + 216] <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j132 
index: - 
=== Succesors ===
=== Usages ===
v130 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j132 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v178 
=== Succesors ===
next: v137 
=== Usages ===
=== Predecessor ===
v134 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v178 #next: v137  <|@  <|@
f <@*|@fixed>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v136 
=== Predecessor ===
v130 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v6|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v5|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v5|QWORD] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4557935618220869632
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j138 <|@
result v9|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v136 
values: j132 j126 
=== Succesors ===
=== Usages ===
v177 v176 a89 v179 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v136 values: j132 j126  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v137 v139 
=== Succesors ===
next: a89 
=== Usages ===
j138 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v137 v139 #next: a89  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a89 <|@
result v10|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j138 
=== Succesors ===
next: j150 
=== Usages ===
a95 
=== Predecessor ===
v136 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j138 #next: j150  <|@  <|@
f <@~|@floating>@ <|@
tid v144 <|@
result v11|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/lang/String;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j145 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j145 <|@
result v11|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v144 
=== Succesors ===
=== Usages ===
v175 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v144  <|@  <|@
f <@~|@floating>@ <|@
tid v175 <|@
result [v11|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j145 
index: - 
=== Succesors ===
=== Usages ===
j150 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j145 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j150 <|@
result v12|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v175 
=== Succesors ===
next: v151 
=== Usages ===
v151 
=== Predecessor ===
a89 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v175 #next: v151  <|@  <|@
f <@~|@floating>@ <|@
tid v176 <|@
result [v9|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j138 
index: - 
=== Succesors ===
=== Usages ===
v151 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j138 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v151 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v176 
value: j150 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v155 
=== Usages ===
=== Predecessor ===
j150 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v176 value: j150 stateAfter: - lastLocationAccess: - #next: v155  <|@  <|@
f <@~|@floating>@ <|@
tid v177 <|@
result [v9|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j138 
index: - 
=== Succesors ===
=== Usages ===
v155 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j138 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v165 <|@
result meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v155 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v177 
value: v165 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v159 
=== Usages ===
=== Predecessor ===
v151 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v177 value: v165 stateAfter: - lastLocationAccess: - #next: v159  <|@  <|@
f <@~|@floating>@ <|@
tid v179 <|@
result [v9|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j138 
index: - 
=== Succesors ===
=== Usages ===
v159 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j138 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j87 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v159 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v179 
value: j87 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a95 
=== Usages ===
=== Predecessor ===
v155 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v179 value: j87 stateAfter: - lastLocationAccess: - #next: a95  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a95 <|@
result v10|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a89 
=== Succesors ===
next: v96 
=== Usages ===
v68 ?51 v69 
=== Predecessor ===
v159 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a89 #next: v96  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v42 
=== Usages ===
=== Predecessor ===
a95 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v42  <|@  <|@
f <@~|@floating>@ <|@
tid a61 <|@
result v13|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.substring(String.java:1929) [bci: 14]
at java.util.Formatter$FormatSpecifier.precision(Formatter.java:2673) [bci: 12]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a168 
=== Succesors ===
=== Usages ===
v68 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a168  <|@  <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.String.substring(String.java:1933) [bci: 52]
at java.util.Formatter$FormatSpecifier.precision(Formatter.java:2673) [bci: 12]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@1fbc7eb7
stamp: void
targetMethod: HotSpotMethod<String.<init>(char[], int, int)>
=== Inputs ===
arguments: a95 a61 i12 i45 
=== Succesors ===
=== Usages ===
v42 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a95 a61 i12 i45  <|@  <|@
tid ?46 <|@
d <@d|@=== Debug Properties ===
bci: 12
code: ResolvedJavaMethodBytecode<Formatter$FormatSpecifier.precision(String)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2673
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 - - a1 
=== Succesors ===
=== Usages ===
?98 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - a1  <|@  <|@
tid a48 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@5a86b9fc
hasIdentity: true
objectId: 0
stamp: a!# Ljava/lang/String;
type: HotSpotType<Ljava/lang/String;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?51 ?98 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?51 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a48 
materializedValue: a95 
=== Succesors ===
=== Usages ===
?98 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a48 materializedValue: a95  <|@  <|@
tid ?98 <|@
d <@d|@=== Debug Properties ===
bci: 52
code: ResolvedJavaMethodBytecode<String.substring(int)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: String.java
sourceLine: 1933
stackSize: 1
=== Inputs ===
outerFrameState: ?46 
values: - - - a48 
virtualObjectMappings: ?51 
=== Succesors ===
=== Usages ===
v42 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?46 values: - - - a48 virtualObjectMappings: ?51  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
bci: 52
nodeSourcePosition: at java.lang.String.substring(String.java:1933) [bci: 52]
at java.util.Formatter$FormatSpecifier.precision(Formatter.java:2673) [bci: 12]
polymorphic: false
stamp: void
targetMethod: Direct#String.<init>
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v68 
stateDuring: ?98 
=== Succesors ===
next: i18 
=== Usages ===
=== Predecessor ===
v96 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v68 stateDuring: ?98 #next: i18  <|@  <|@
f <@~|@floating>@ <|@
tid i16 <|@
result int[10|0xa] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.parseInt(Integer.java:615) [bci: 1]
at java.util.Formatter$FormatSpecifier.precision(Formatter.java:2673) [bci: 15]
rawvalue: 10
stableDimension: 0
stamp: i32 [10] ⇊000000000000000a ⇈000000000000000a
stampKind: i32
value: int[10|0xa]
=== Inputs ===
=== Succesors ===
=== Usages ===
v69 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at java.lang.Integer.parseInt(Integer.java:615) [bci: 3]
at java.util.Formatter$FormatSpecifier.precision(Formatter.java:2673) [bci: 15]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@75c69f85
stamp: void
targetMethod: HotSpotMethod<Integer.parseInt(String, int)>
=== Inputs ===
arguments: a95 i16 
=== Succesors ===
=== Usages ===
i18 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a95 i16  <|@  <|@
tid ?19 <|@
d <@d|@=== Debug Properties ===
bci: 15
code: ResolvedJavaMethodBytecode<Formatter$FormatSpecifier.precision(String)>
duringCall: true
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.lang.Integer.parseInt(Integer.java:615) [bci: 3]
at java.util.Formatter$FormatSpecifier.precision(Formatter.java:2673) [bci: 15]
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2673
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 - - a1 
=== Succesors ===
=== Usages ===
?20 ?99 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - a1  <|@  <|@
tid ?99 <|@
d <@d|@=== Debug Properties ===
bci: 3
code: ResolvedJavaMethodBytecode<Integer.parseInt(String)>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: Integer.java
sourceLine: 615
stackSize: 0
=== Inputs ===
outerFrameState: ?19 
values: - 
=== Succesors ===
=== Usages ===
i18 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?19 values: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i18 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 3
nodeSourcePosition: at java.lang.Integer.parseInt(Integer.java:615) [bci: 3]
at java.util.Formatter$FormatSpecifier.precision(Formatter.java:2673) [bci: 15]
polymorphic: false
stamp: i32
targetMethod: Direct#Integer.parseInt
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v69 
stateDuring: ?99 
=== Succesors ===
next: v85 
=== Usages ===
?20 v70 v25 v54 
=== Predecessor ===
v42 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v69 stateDuring: ?99 #next: v85  <|@  <|@
f <@~|@floating>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.precision(Formatter.java:2674) [bci: 25]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i18 
y: i24 
=== Succesors ===
=== Usages ===
v85 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i18 y: i24  <|@  <|@
f <@*|@fixed>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.precision(Formatter.java:2674) [bci: 25]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v25 
=== Succesors ===
trueSuccessor: v84 
falseSuccessor: v82 
=== Usages ===
=== Predecessor ===
i18 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v25 #trueSuccessor: v84 #falseSuccessor: v82  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v9|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = MOVE v9|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOV [v11|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v9|QWORD[*]], y: v12|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v9|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v9|QWORD[*] + 12], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@50ea1fe5 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.substring(String.java:1933) [bci: 52]
stack: v10|QWORD[.] 
locals: - - - 
java.util.Formatter$FormatSpecifier.precision(Formatter.java:2673) [bci: 12]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<String.<init>(char[], int, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:52, 12] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.parseInt(Integer.java:615) [bci: 3]
locals: - 
java.util.Formatter$FormatSpecifier.precision(Formatter.java:2673) [bci: 15]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Integer.parseInt(String, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:3, 15] <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v14|DWORD, y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.precision(Formatter.java:2674) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v83 
=== Usages ===
=== Predecessor ===
v85 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v83  <|@  <|@
tid ?20 <|@
d <@d|@=== Debug Properties ===
bci: 6
code: ResolvedJavaMethodBytecode<Integer.parseInt(String)>
duringCall: false
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.lang.Integer.parseInt(Integer.java:615) [bci: 3]
at java.util.Formatter$FormatSpecifier.precision(Formatter.java:2673) [bci: 15]
rethrowException: false
sourceFile: Integer.java
sourceLine: 615
stackSize: 1
=== Inputs ===
outerFrameState: ?19 
values: - i18 
=== Succesors ===
=== Usages ===
v83 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?19 values: - i18  <|@  <|@
f <@*|@fixed>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 71
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.precision(Formatter.java:2674) [bci: 25]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?20 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v84 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?20  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -18195 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.parseInt(Integer.java:615) [bci: 6]
stack: v14|DWORD 
locals: - 
java.util.Formatter$FormatSpecifier.precision(Formatter.java:2673) [bci: 15]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:6, 15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 4557935618220869632
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.precision(Formatter.java:2674) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v70 
=== Usages ===
=== Predecessor ===
v85 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v70  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Formatter$FormatSpecifier.precision
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.precision(Formatter.java:2673) [bci: 18]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v170 
value: i18 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v54 
=== Usages ===
=== Predecessor ===
v82 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v170 value: i18 stateAfter: - lastLocationAccess: - #next: v54  <|@  <|@
f <@*|@fixed>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.precision(Formatter.java:2680) [bci: 58]
stamp: void
=== Inputs ===
result: i18 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v70 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i18 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@5e543630 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 20] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9994799738175872 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607177734820574734
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4557935618220869632
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[.] = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.precision(Formatter.java:2670) [bci: 5]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v4|DWORD = ADD (x: v3|DWORD, ~y: [v2|DWORD[.] * 8 + 12]) size: DWORD state [bci:5] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4557935618220869632
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = LEA [v5|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v6|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4557887654271376650
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v6|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v5|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v5|QWORD] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4557935618220869632
    begin_IR
      LIR
      nr   -1  <|@ instruction [v9|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = MOVE v9|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOV [v11|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v9|QWORD[*]], y: v12|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v9|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v9|QWORD[*] + 12], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@50ea1fe5 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.substring(String.java:1933) [bci: 52]
stack: v10|QWORD[.] 
locals: - - - 
java.util.Formatter$FormatSpecifier.precision(Formatter.java:2673) [bci: 12]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<String.<init>(char[], int, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:52, 12] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.parseInt(Integer.java:615) [bci: 3]
locals: - 
java.util.Formatter$FormatSpecifier.precision(Formatter.java:2673) [bci: 15]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Integer.parseInt(String, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:3, 15] <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v14|DWORD, y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 4557935618220869632
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4527753411415079655
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v7|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.precision(Formatter.java:2670) [bci: 5]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:5] <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v8|QWORD[.]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -17171 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.precision(Formatter.java:2670) [bci: 5]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -18195 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.parseInt(Integer.java:615) [bci: 6]
stack: v14|DWORD 
locals: - 
java.util.Formatter$FormatSpecifier.precision(Formatter.java:2673) [bci: 15]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:6, 15] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: putfield      #12         // precision:int
     5: aload_1       
     6: ifnull        58
     9: aload_0       
    10: aload_1       
    11: iconst_1      
    12: invokevirtual #13         // java.lang.String.substring:(int)java.lang.String
    15: invokestatic  #2          // java.lang.Integer.parseInt:(java.lang.String)int
    18: putfield      #12         // precision:int
    21: aload_0       
    22: getfield      #12         // precision:int
    25: ifge          40
    28: new           #18         // java.util.IllegalFormatPrecisionException
    31: dup           
    32: aload_0       
    33: getfield      #12         // precision:int
    36: invokespecial #14         // java.util.IllegalFormatPrecisionException.<init>:(int)void
    39: athrow        
    40: goto          58
    43: astore_2      
    44: getstatic     #4          // $assertionsDisabled:boolean
    47: ifne          58
    50: new           #7          // java.lang.AssertionError
    53: dup           
    54: invokespecial #5          // java.lang.AssertionError.<init>:()void
    57: athrow        
    58: aload_0       
    59: getfield      #12         // precision:int
    62: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@5e543630 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction MOV [rsi|QWORD[.] + 20] y: -1 size: DWORD <|@ <|@
      nr   10  <|@ instruction TEST (x: r13|QWORD[.], y: r13|QWORD[.]) size: QWORD <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 0.9994799738175872 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607177734820574734
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   18  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4557935618220869632
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction r14|DWORD[.] = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   26  <|@ instruction rdx|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   28  <|@ st <@st|@reference-map: [rsi:0, r13:0, r14:0, stack:16]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.precision(Formatter.java:2670) [bci: 5]
locals: rsi|QWORD[.] r13|QWORD[.] - 
>@ <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, ~y: [r14|DWORD[.] * 8 + 12]) size: DWORD state [bci:5] <|@ <|@
      nr   30  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr   32  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4557935618220869632
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   46  <|@ instruction r8|QWORD = LEA [rcx|QWORD + 24] size: QWORD <|@ <|@
      nr   48  <|@ instruction CMP (x: r8|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   50  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4557887654271376650
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction MOV (x: [r15|QWORD + 96], y: r8|QWORD) size: QWORD <|@ <|@
      nr   76  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + 216] instr: 0 <|@ <|@
      nr   78  <|@ instruction rsi|QWORD[*] = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4557935618220869632
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   84  <|@ instruction r11|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   88  <|@ instruction rcx|QWORD = MOV [rcx|QWORD + 168] size: QWORD <|@ <|@
      nr   90  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD <|@ <|@
      nr   92  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   94  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   96  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: r14|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@50ea1fe5 encoding: base: 0 shift: 3 <|@ <|@
      nr   98  <|@ instruction rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction r8|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  102  <|@ instruction rdx|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  106  <|@ instruction stack:48|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  108  <|@ st <@st|@reference-map: [stack:0, stack:16]
live-base-pointers: []
java.lang.String.substring(String.java:1933) [bci: 52]
stack: stack:48|QWORD[.] 
locals: - - - 
java.util.Formatter$FormatSpecifier.precision(Formatter.java:2673) [bci: 12]
stack: stack:32|QWORD[.] 
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<String.<init>(char[], int, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:52, 12] <|@ <|@
      nr  110  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  112  <|@ instruction rdx|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr  114  <|@ st <@st|@reference-map: [stack:16]
live-base-pointers: []
java.lang.Integer.parseInt(Integer.java:615) [bci: 3]
locals: - 
java.util.Formatter$FormatSpecifier.precision(Formatter.java:2673) [bci: 15]
stack: stack:32|QWORD[.] 
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Integer.parseInt(String, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:3, 15] <|@ <|@
      nr  116  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  118  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 4557935618220869632
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  132  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rax|DWORD) size: DWORD <|@ <|@
      nr  136  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4527753411415079655
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   56  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   58  <|@ instruction rsi|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   62  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   64  <|@ st <@st|@reference-map: [r13:0, r14:0, stack:16]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.precision(Formatter.java:2670) [bci: 5]
locals: stack:32|QWORD[.] r13|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:5] <|@ <|@
      nr   66  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction JUMP ~[] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction MOV [r15|QWORD + 668] y: -17171 size: DWORD <|@ <|@
      nr   38  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   40  <|@ st <@st|@reference-map: [r13:0, stack:16]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.precision(Formatter.java:2670) [bci: 5]
locals: stack:32|QWORD[.] r13|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  122  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction MOV [r15|QWORD + 668] y: -18195 size: DWORD <|@ <|@
      nr  126  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  128  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.lang.Integer.parseInt(Integer.java:615) [bci: 6]
stack: rax|DWORD 
locals: - 
java.util.Formatter$FormatSpecifier.precision(Formatter.java:2673) [bci: 15]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:6, 15] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: putfield      #12         // precision:int
     5: aload_1       
     6: ifnull        58
     9: aload_0       
    10: aload_1       
    11: iconst_1      
    12: invokevirtual #13         // java.lang.String.substring:(int)java.lang.String
    15: invokestatic  #2          // java.lang.Integer.parseInt:(java.lang.String)int
    18: putfield      #12         // precision:int
    21: aload_0       
    22: getfield      #12         // precision:int
    25: ifge          40
    28: new           #18         // java.util.IllegalFormatPrecisionException
    31: dup           
    32: aload_0       
    33: getfield      #12         // precision:int
    36: invokespecial #14         // java.util.IllegalFormatPrecisionException.<init>:(int)void
    39: athrow        
    40: goto          58
    43: astore_2      
    44: getstatic     #4          // $assertionsDisabled:boolean
    47: ifne          58
    50: new           #7          // java.lang.AssertionError
    53: dup           
    54: invokespecial #5          // java.lang.AssertionError.<init>:()void
    57: athrow        
    58: aload_0       
    59: getfield      #12         // precision:int
    62: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@5e543630 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction MOV [rsi|QWORD[.] + 20] y: -1 size: DWORD <|@ <|@
      nr   10  <|@ instruction TEST (x: r13|QWORD[.], y: r13|QWORD[.]) size: QWORD <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 0.9994799738175872 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607177734820574734
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   18  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4557935618220869632
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction r14|DWORD[.] = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   26  <|@ instruction rdx|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   28  <|@ st <@st|@reference-map: [rsi:0, r13:0, r14:0, stack:16]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.precision(Formatter.java:2670) [bci: 5]
locals: rsi|QWORD[.] r13|QWORD[.] - 
>@ <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, ~y: [r14|DWORD[.] * 8 + 12]) size: DWORD state [bci:5] <|@ <|@
      nr   30  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr   32  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4557935618220869632
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   46  <|@ instruction r8|QWORD = LEA [rcx|QWORD + 24] size: QWORD <|@ <|@
      nr   48  <|@ instruction CMP (x: r8|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   50  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4557887654271376650
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction MOV (x: [r15|QWORD + 96], y: r8|QWORD) size: QWORD <|@ <|@
      nr   76  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + 216] instr: 0 <|@ <|@
      nr   78  <|@ instruction rsi|QWORD[*] = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4557935618220869632
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   84  <|@ instruction r11|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   88  <|@ instruction rcx|QWORD = MOV [rcx|QWORD + 168] size: QWORD <|@ <|@
      nr   90  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD <|@ <|@
      nr   92  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   94  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   96  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: r14|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@50ea1fe5 encoding: base: 0 shift: 3 <|@ <|@
      nr   98  <|@ instruction rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction r8|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  102  <|@ instruction rdx|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  106  <|@ instruction stack:48|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  108  <|@ st <@st|@reference-map: [stack:0, stack:16]
live-base-pointers: []
java.lang.String.substring(String.java:1933) [bci: 52]
stack: stack:48|QWORD[.] 
locals: - - - 
java.util.Formatter$FormatSpecifier.precision(Formatter.java:2673) [bci: 12]
stack: stack:32|QWORD[.] 
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<String.<init>(char[], int, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:52, 12] <|@ <|@
      nr  110  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  112  <|@ instruction rdx|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr  114  <|@ st <@st|@reference-map: [stack:16]
live-base-pointers: []
java.lang.Integer.parseInt(Integer.java:615) [bci: 3]
locals: - 
java.util.Formatter$FormatSpecifier.precision(Formatter.java:2673) [bci: 15]
stack: stack:32|QWORD[.] 
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Integer.parseInt(String, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:3, 15] <|@ <|@
      nr  116  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  122  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  118  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 4557935618220869632
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  134  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rax|DWORD) size: DWORD <|@ <|@
      nr  136  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4527753411415079655
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   56  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   58  <|@ instruction rsi|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   62  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   64  <|@ st <@st|@reference-map: [r13:0, r14:0, stack:16]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.precision(Formatter.java:2670) [bci: 5]
locals: stack:32|QWORD[.] r13|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:5] <|@ <|@
      nr   66  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction JUMP ~[] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction MOV [r15|QWORD + 668] y: -17171 size: DWORD <|@ <|@
      nr   38  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   40  <|@ st <@st|@reference-map: [r13:0, stack:16]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.precision(Formatter.java:2670) [bci: 5]
locals: stack:32|QWORD[.] r13|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  124  <|@ instruction MOV [r15|QWORD + 668] y: -18195 size: DWORD <|@ <|@
      nr  126  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  128  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.lang.Integer.parseInt(Integer.java:615) [bci: 6]
stack: rax|DWORD 
locals: - 
java.util.Formatter$FormatSpecifier.precision(Formatter.java:2673) [bci: 15]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:6, 15] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: putfield      #12         // precision:int
     5: aload_1       
     6: ifnull        58
     9: aload_0       
    10: aload_1       
    11: iconst_1      
    12: invokevirtual #13         // java.lang.String.substring:(int)java.lang.String
    15: invokestatic  #2          // java.lang.Integer.parseInt:(java.lang.String)int
    18: putfield      #12         // precision:int
    21: aload_0       
    22: getfield      #12         // precision:int
    25: ifge          40
    28: new           #18         // java.util.IllegalFormatPrecisionException
    31: dup           
    32: aload_0       
    33: getfield      #12         // precision:int
    36: invokespecial #14         // java.util.IllegalFormatPrecisionException.<init>:(int)void
    39: athrow        
    40: goto          58
    43: astore_2      
    44: getstatic     #4          // $assertionsDisabled:boolean
    47: ifne          58
    50: new           #7          // java.lang.AssertionError
    53: dup           
    54: invokespecial #5          // java.lang.AssertionError.<init>:()void
    57: athrow        
    58: aload_0       
    59: getfield      #12         // precision:int
    62: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec2848896c24204c8beac74614ffffffff4d85ed0f8518000000b8ffffffff488b6c24204883c428850500000000c5f877c34889742410458b750cbaffffffff420314f50c00000085d20f8cc4000000498b4f604c8d41184d3b47700f87850000004d8947600f1881d8000000488bf14c8bde48b9addeaddeaddeadde488b89a800000048890ec74608addeadde4c89660c49c1e603498bf3448bc2498bd6b9010000004c891c24660f1f440000e80000000090488b3424ba0a00000090e8000000009085c0488b7424100f8c5b000000894614488b6c24204883c428850500000000c5f877c38954240c48b9addeaddeaddeadde488bf1ba02000000b901000000e80000000090488bf08b54240ce95cffffff41c7879c020000edbcffff4d89a7a8020000e8000000009041c7879c020000edb8ffff4d89a7a8020000e80000000090e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@5e543630 slotKind: QWORD  <||@
  Comment 48 6 r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 51 8 MOV [rsi|QWORD[.] + 20] y: -1 size: DWORD  <||@
  Comment 58 10 TEST (x: r13|QWORD[.], y: r13|QWORD[.]) size: QWORD  <||@
  Comment 61 12 BRANCH trueDestinationProbability: 0.9994799738175872 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 67 block B1 null  <||@
  Comment 67 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 67 16 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 72 18 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 81 12  <||@
  Comment 91 block B2 null  <||@
  Comment 91 20 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 91 22 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 96 24 r14|DWORD[.] = MOV [r13|QWORD[.] + 12] size: DWORD  <||@
  Comment 100 26 rdx|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 105 28 rdx|DWORD = ADD (x: rdx|DWORD, ~y: [r14|DWORD[.] * 8 + 12]) size: DWORD state [bci:5]  <||@
  Comment 105 [rsi:0, r13:0, r14:0, stack:16]at java.util.Formatter$FormatSpecifier.precision(Formatter.java:2670) [bci: 5, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |r13|QWORD[.]  |-   <||@
  Comment 105 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 113 30 TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 115 32 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4  <||@
  Comment 121 block B4 null  <||@
  Comment 121 42 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 121 44 rcx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 125 46 r8|QWORD = LEA [rcx|QWORD + 24] size: QWORD  <||@
  Comment 129 48 CMP (x: r8|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 133 50 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6  <||@
  Comment 139 block B6 null  <||@
  Comment 139 72 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 139 74 MOV (x: [r15|QWORD + 96], y: r8|QWORD) size: QWORD  <||@
  Comment 143 76 AMD64PREFETCH ~[rcx|QWORD + 216] instr: 0  <||@
  Comment 150 78 rsi|QWORD[*] = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 153 80 JUMP ~[] destination: B6 -> B7  <||@
  Comment 153 block B7 null  <||@
  Comment 153 82 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 153 84 r11|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 156 86 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 156 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 166 88 rcx|QWORD = MOV [rcx|QWORD + 168] size: QWORD  <||@
  Comment 173 90 MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD  <||@
  Comment 176 92 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 176 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 183 94 MOV (x: [rsi|QWORD[*] + 12], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 187 96 r14|QWORD[.] = UNCOMPRESSPOINTER (input: r14|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@50ea1fe5 encoding: base: 0 shift: 3  <||@
  Comment 191 98 rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 194 100 r8|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 197 102 rdx|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 200 104 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 205 106 stack:48|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 209 108 - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<String.<init>(char[], int, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:52, 12]  <||@
  Comment 209 9  <||@
  Comment 215 {HotSpotMethod<String.<init>(char[], int, int)>}  <||@
  Comment 220 [stack:0, stack:16]at java.lang.String.substring(String.java:1933) [bci: 52, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |-                  |-  |- 
     stack:   |stack:48|QWORD[.]  |   |  
  at java.util.Formatter$FormatSpecifier.precision(Formatter.java:2673) [bci: 12, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |- 
     stack:   |stack:32|QWORD[.]  |   |    <||@
  Comment 221 110 rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 225 112 rdx|DWORD = MOVE input: int[10|0xa]  <||@
  Comment 230 114 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Integer.parseInt(String, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:3, 15]  <||@
  Comment 230 8  <||@
  Comment 231 {HotSpotMethod<Integer.parseInt(String, int)>}  <||@
  Comment 236 [stack:16]at java.lang.Integer.parseInt(Integer.java:615) [bci: 3, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at java.util.Formatter$FormatSpecifier.precision(Formatter.java:2673) [bci: 15, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |- 
     stack:   |stack:32|QWORD[.]  |   |    <||@
  Comment 237 116 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 239 122 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 244 118 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9  <||@
  Comment 250 block B9 null  <||@
  Comment 250 130 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 250 134 MOV (x: [rsi|QWORD[.] + 20], y: rax|DWORD) size: DWORD  <||@
  Comment 253 136 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 262 12  <||@
  Comment 272 block B5 null  <||@
  Comment 272 52 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 272 54 stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 276 56 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 276 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 286 58 rsi|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 289 60 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 294 62 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 299 64 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:5]  <||@
  Comment 299 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 304 [r13:0, r14:0, stack:16]at java.util.Formatter$FormatSpecifier.precision(Formatter.java:2670) [bci: 5, duringCall: false, rethrow: false]
              |0                  |1             |2 
     locals:  |stack:32|QWORD[.]  |r13|QWORD[.]  |-   <||@
  Comment 305 66 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 308 68 rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 312 70 JUMP ~[] destination: B5 -> B7  <||@
  Comment 317 block B3 null  <||@
  Comment 317 34 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 317 36 MOV [r15|QWORD + 668] y: -17171 size: DWORD  <||@
  Comment 328 38 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 335 40 DEOPT info [bci:5]  <||@
  Comment 335 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 340 [r13:0, stack:16]at java.util.Formatter$FormatSpecifier.precision(Formatter.java:2670) [bci: 5, duringCall: false, rethrow: false]
              |0                  |1             |2 
     locals:  |stack:32|QWORD[.]  |r13|QWORD[.]  |-   <||@
  Comment 341 block B8 null  <||@
  Comment 341 120 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 341 124 MOV [r15|QWORD + 668] y: -18195 size: DWORD  <||@
  Comment 352 126 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 359 128 DEOPT info [bci:6, 15]  <||@
  Comment 359 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 364 [rsi:0]at java.lang.Integer.parseInt(Integer.java:615) [bci: 6, duringCall: false, rethrow: false]
              |0         
     locals:  |-         
     stack:   |rax|DWORD 
  at java.util.Formatter$FormatSpecifier.precision(Formatter.java:2673) [bci: 15, duringCall: true, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |- 
     stack:   |rsi|QWORD[.]  |   |    <||@
  Comment 365 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 365 4  <||@
  Comment 371 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 371 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-5328[java.util.Formatter$FormatSpecifier.precision(String)]"
  method "HotSpotCompilation-5328[java.util.Formatter$FormatSpecifier.precision(String)]"
  date 1527005150274
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 1078ef340 448b560849c1e203493bc20f850f6bf1fe900f1f80000000000f1f800000000089842400c0feff4883ec2848896c24204c8beac74614ffffffff4d85ed0f8518000000b8ffffffff488b6c24204883c42885056ffcf9fcc5f877c34889742410458b750cbaffffffff420314f50c00000085d20f8cc4000000498b4f604c8d41184d3b47700f87850000004d8947600f1881d8000000488bf14c8bde48b9d01600c007000000488b89a800000048890ec74608da0200f84c89660c49c1e603498bf3448bc2498bd6b9010000004c891c24660f1f440000e8846cf1fe90488b3424ba0a00000090e8f470f1fe9085c0488b7424100f8c5b000000894614488b6c24204883c4288505bafbf9fcc5f877c38954240c48b9680b00c007000000488bf1ba02000000b901000000e870796aff90488bf08b54240ce95cffffff41c7879c020000edbcffff4d89a7a8020000e86a81f1fe9041c7879c020000edb8ffff4d89a7a8020000e85281f1fe90e86eb135ff90e84880f1fe90f4f4f4f4f4f4f448bb0000000000000000e9fbffffff48bb0000000000000000e9fbfffffff4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@5e543630 slotKind: QWORD  <||@
  Comment 48 6 r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 51 8 MOV [rsi|QWORD[.] + 20] y: -1 size: DWORD  <||@
  Comment 58 10 TEST (x: r13|QWORD[.], y: r13|QWORD[.]) size: QWORD  <||@
  Comment 61 12 BRANCH trueDestinationProbability: 0.9994799738175872 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 67 block B1 null  <||@
  Comment 67 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 67 16 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 72 18 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 81 12  <||@
  Comment 91 block B2 null  <||@
  Comment 91 20 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 91 22 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 96 24 r14|DWORD[.] = MOV [r13|QWORD[.] + 12] size: DWORD  <||@
  Comment 100 26 rdx|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 105 28 rdx|DWORD = ADD (x: rdx|DWORD, ~y: [r14|DWORD[.] * 8 + 12]) size: DWORD state [bci:5]  <||@
  Comment 105 [rsi:0, r13:0, r14:0, stack:16]at java.util.Formatter$FormatSpecifier.precision(Formatter.java:2670) [bci: 5, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |r13|QWORD[.]  |-   <||@
  Comment 105 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 113 30 TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 115 32 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4  <||@
  Comment 121 block B4 null  <||@
  Comment 121 42 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 121 44 rcx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 125 46 r8|QWORD = LEA [rcx|QWORD + 24] size: QWORD  <||@
  Comment 129 48 CMP (x: r8|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 133 50 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6  <||@
  Comment 139 block B6 null  <||@
  Comment 139 72 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 139 74 MOV (x: [r15|QWORD + 96], y: r8|QWORD) size: QWORD  <||@
  Comment 143 76 AMD64PREFETCH ~[rcx|QWORD + 216] instr: 0  <||@
  Comment 150 78 rsi|QWORD[*] = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 153 80 JUMP ~[] destination: B6 -> B7  <||@
  Comment 153 block B7 null  <||@
  Comment 153 82 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 153 84 r11|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 156 86 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 156 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 166 88 rcx|QWORD = MOV [rcx|QWORD + 168] size: QWORD  <||@
  Comment 173 90 MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD  <||@
  Comment 176 92 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 176 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 183 94 MOV (x: [rsi|QWORD[*] + 12], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 187 96 r14|QWORD[.] = UNCOMPRESSPOINTER (input: r14|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@50ea1fe5 encoding: base: 0 shift: 3  <||@
  Comment 191 98 rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 194 100 r8|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 197 102 rdx|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 200 104 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 205 106 stack:48|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 209 108 - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<String.<init>(char[], int, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:52, 12]  <||@
  Comment 209 9  <||@
  Comment 215 {HotSpotMethod<String.<init>(char[], int, int)>}  <||@
  Comment 220 [stack:0, stack:16]at java.lang.String.substring(String.java:1933) [bci: 52, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |-                  |-  |- 
     stack:   |stack:48|QWORD[.]  |   |  
  at java.util.Formatter$FormatSpecifier.precision(Formatter.java:2673) [bci: 12, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |- 
     stack:   |stack:32|QWORD[.]  |   |    <||@
  Comment 221 110 rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 225 112 rdx|DWORD = MOVE input: int[10|0xa]  <||@
  Comment 230 114 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Integer.parseInt(String, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:3, 15]  <||@
  Comment 230 8  <||@
  Comment 231 {HotSpotMethod<Integer.parseInt(String, int)>}  <||@
  Comment 236 [stack:16]at java.lang.Integer.parseInt(Integer.java:615) [bci: 3, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at java.util.Formatter$FormatSpecifier.precision(Formatter.java:2673) [bci: 15, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |- 
     stack:   |stack:32|QWORD[.]  |   |    <||@
  Comment 237 116 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 239 122 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 244 118 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9  <||@
  Comment 250 block B9 null  <||@
  Comment 250 130 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 250 134 MOV (x: [rsi|QWORD[.] + 20], y: rax|DWORD) size: DWORD  <||@
  Comment 253 136 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 262 12  <||@
  Comment 272 block B5 null  <||@
  Comment 272 52 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 272 54 stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 276 56 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 276 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 286 58 rsi|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 289 60 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 294 62 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 299 64 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:5]  <||@
  Comment 299 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 304 [r13:0, r14:0, stack:16]at java.util.Formatter$FormatSpecifier.precision(Formatter.java:2670) [bci: 5, duringCall: false, rethrow: false]
              |0                  |1             |2 
     locals:  |stack:32|QWORD[.]  |r13|QWORD[.]  |-   <||@
  Comment 305 66 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 308 68 rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 312 70 JUMP ~[] destination: B5 -> B7  <||@
  Comment 317 block B3 null  <||@
  Comment 317 34 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 317 36 MOV [r15|QWORD + 668] y: -17171 size: DWORD  <||@
  Comment 328 38 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 335 40 DEOPT info [bci:5]  <||@
  Comment 335 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 340 [r13:0, stack:16]at java.util.Formatter$FormatSpecifier.precision(Formatter.java:2670) [bci: 5, duringCall: false, rethrow: false]
              |0                  |1             |2 
     locals:  |stack:32|QWORD[.]  |r13|QWORD[.]  |-   <||@
  Comment 341 block B8 null  <||@
  Comment 341 120 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 341 124 MOV [r15|QWORD + 668] y: -18195 size: DWORD  <||@
  Comment 352 126 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 359 128 DEOPT info [bci:6, 15]  <||@
  Comment 359 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 364 [rsi:0]at java.lang.Integer.parseInt(Integer.java:615) [bci: 6, duringCall: false, rethrow: false]
              |0         
     locals:  |-         
     stack:   |rax|DWORD 
  at java.util.Formatter$FormatSpecifier.precision(Formatter.java:2673) [bci: 15, duringCall: true, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |- 
     stack:   |rsi|QWORD[.]  |   |    <||@
  Comment 365 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 365 4  <||@
  Comment 371 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 371 5  <||@
  HexCodeFile>>> <|@
end_nmethod
